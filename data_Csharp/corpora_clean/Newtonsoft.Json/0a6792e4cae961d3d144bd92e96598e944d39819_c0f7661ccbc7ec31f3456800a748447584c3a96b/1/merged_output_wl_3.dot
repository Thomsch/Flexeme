digraph  {
d1 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Json.ReadJsonWithJsonTextReader.Example()", color=green, community=0, label="0: string json = @''{\r\n         'CPU': 'Intel',\r\n         'PSU': '500W',\r\n         'Drives': [\r\n           'DVD read/writer'\r\n           /*(broken)*/,\r\n           '500 gigabyte hard drive',\r\n           '200 gigabype hard drive'\r\n         ]\r\n      }''", span="13-22"];
d0 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Json.ReadJsonWithJsonTextReader.Example()", label="Entry Newtonsoft.Json.Tests.Documentation.Examples.Json.ReadJsonWithJsonTextReader.Example()", span="10-10"];
d2 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Json.ReadJsonWithJsonTextReader.Example()", color=green, community=0, label="0: JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="24-24"];
d3 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Json.ReadJsonWithJsonTextReader.Example()", color=green, community=0, label="0: reader.Read()", span="25-25"];
d8 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="70-70"];
d9 [cluster="System.IO.StringReader.StringReader(string)", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
d4 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Json.ReadJsonWithJsonTextReader.Example()", color=green, community=0, label="0: reader.Value != null", span="27-27"];
d5 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Json.ReadJsonWithJsonTextReader.Example()", color=green, community=0, label="0: Console.WriteLine(''Token: {0}, Value: {1}'', reader.TokenType, reader.Value)", span="28-28"];
d6 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Json.ReadJsonWithJsonTextReader.Example()", color=green, community=0, label="0: Console.WriteLine(''Token: {0}'', reader.TokenType)", span="30-30"];
d7 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Json.ReadJsonWithJsonTextReader.Example()", label="Exit Newtonsoft.Json.Tests.Documentation.Examples.Json.ReadJsonWithJsonTextReader.Example()", span="10-10"];
d10 [cluster="Newtonsoft.Json.JsonTextReader.Read()", label="Entry Newtonsoft.Json.JsonTextReader.Read()", span="393-393"];
d11 [cluster="System.Console.WriteLine(string, object, object)", label="Entry System.Console.WriteLine(string, object, object)", span="0-0"];
d12 [cluster="System.Console.WriteLine(string, object)", label="Entry System.Console.WriteLine(string, object)", span="0-0"];
m4_10 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(System.IO.TextReader, System.Type)", file="ConvertibleId.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(System.IO.TextReader, System.Type)", span="504-504"];
m4_0 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.DeserializeWithJsonSerializerFromFile.Example()", file="ConvertibleId.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Examples.Serializer.DeserializeWithJsonSerializerFromFile.Example()", span="19-19"];
m4_1 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.DeserializeWithJsonSerializerFromFile.Example()", color=green, community=0, file="ConvertibleId.cs", label="0: Movie movie1 = JsonConvert.DeserializeObject<Movie>(File.ReadAllText(@''c:\movie.json''))", span="23-23"];
m4_2 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.DeserializeWithJsonSerializerFromFile.Example()", color=green, community=0, file="ConvertibleId.cs", label="0: StreamReader file = File.OpenText(@''c:\movie.json'')", span="26-26"];
m4_3 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.DeserializeWithJsonSerializerFromFile.Example()", color=green, community=0, file="ConvertibleId.cs", label="0: JsonSerializer serializer = new JsonSerializer()", span="28-28"];
m4_4 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.DeserializeWithJsonSerializerFromFile.Example()", color=green, community=0, file="ConvertibleId.cs", label="0: Movie movie2 = (Movie)serializer.Deserialize(file, typeof (Movie))", span="29-29"];
m4_5 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.DeserializeWithJsonSerializerFromFile.Example()", file="ConvertibleId.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Examples.Serializer.DeserializeWithJsonSerializerFromFile.Example()", span="19-19"];
m4_8 [cluster="Newtonsoft.Json.Tests.Documentation.File.OpenText(string)", file="ConvertibleId.cs", label="Entry Newtonsoft.Json.Tests.Documentation.File.OpenText(string)", span="54-54"];
m4_9 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="ConvertibleId.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="391-391"];
m4_7 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="ConvertibleId.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="867-867"];
m4_6 [cluster="Newtonsoft.Json.Tests.Documentation.File.ReadAllText(string)", file="ConvertibleId.cs", label="Entry Newtonsoft.Json.Tests.Documentation.File.ReadAllText(string)", span="69-69"];
m5_0 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.JsonPropertyOrder.Example()", file="ConvertibleInt.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Examples.Serializer.JsonPropertyOrder.Example()", span="29-29"];
m5_1 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.JsonPropertyOrder.Example()", color=green, community=0, file="ConvertibleInt.cs", label="0: Account account = new Account\r\n        {\r\n          FullName = ''Aaron Account'',\r\n          EmailAddress = ''aaron@example.com'',\r\n          Deleted = true,\r\n          DeletedDate = new DateTime(2013, 1, 25),\r\n          UpdatedDate = new DateTime(2013, 1, 25),\r\n          CreatedDate = new DateTime(2010, 10, 1)\r\n        }", span="32-40"];
m5_2 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.JsonPropertyOrder.Example()", color=green, community=0, file="ConvertibleInt.cs", label="0: string json = JsonConvert.SerializeObject(account, Formatting.Indented)", span="42-42"];
m5_3 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.JsonPropertyOrder.Example()", color=green, community=0, file="ConvertibleInt.cs", label="3: Console.WriteLine(json)", span="44-44"];
m5_4 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.JsonPropertyOrder.Example()", file="ConvertibleInt.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Examples.Serializer.JsonPropertyOrder.Example()", span="29-29"];
m5_7 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="ConvertibleInt.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="710-710"];
m5_6 [cluster="System.DateTime.DateTime(int, int, int)", file="ConvertibleInt.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m5_5 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.JsonPropertyOrder.Account.Account()", file="ConvertibleInt.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Examples.Serializer.JsonPropertyOrder.Account.Account()", span="10-10"];
m5_8 [cluster="System.Console.WriteLine(string)", file="ConvertibleInt.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m10_11 [cluster="System.Text.Encoding.GetEncoding(string)", file="EncodingReadConverter.cs", label="Entry System.Text.Encoding.GetEncoding(string)", span="0-0"];
m10_12 [cluster="Newtonsoft.Json.Tests.TestObjects.EncodingReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="EncodingReadConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.EncodingReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="49-49"];
m10_13 [cluster="Newtonsoft.Json.Tests.TestObjects.EncodingReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", color=green, community=0, file="EncodingReadConverter.cs", label="0: throw new NotImplementedException();", span="51-51"];
m10_14 [cluster="Newtonsoft.Json.Tests.TestObjects.EncodingReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="EncodingReadConverter.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.EncodingReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="49-49"];
m10_3 [cluster="System.Type.IsAssignableFrom(System.Type)", file="EncodingReadConverter.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m10_0 [cluster="Newtonsoft.Json.Tests.TestObjects.EncodingReadConverter.CanConvert(System.Type)", file="EncodingReadConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.EncodingReadConverter.CanConvert(System.Type)", span="33-33"];
m10_1 [cluster="Newtonsoft.Json.Tests.TestObjects.EncodingReadConverter.CanConvert(System.Type)", color=green, community=0, file="EncodingReadConverter.cs", label="0: return typeof(Encoding).IsAssignableFrom(objectType);", span="35-35"];
m10_2 [cluster="Newtonsoft.Json.Tests.TestObjects.EncodingReadConverter.CanConvert(System.Type)", file="EncodingReadConverter.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.EncodingReadConverter.CanConvert(System.Type)", span="33-33"];
m10_10 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", file="EncodingReadConverter.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", span="843-843"];
m10_15 [cluster="System.NotImplementedException.NotImplementedException()", file="EncodingReadConverter.cs", label="Entry System.NotImplementedException.NotImplementedException()", span="0-0"];
m10_4 [cluster="Newtonsoft.Json.Tests.TestObjects.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="EncodingReadConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="38-38"];
m10_5 [cluster="Newtonsoft.Json.Tests.TestObjects.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", color=green, community=0, file="EncodingReadConverter.cs", label="0: var encodingName = serializer.Deserialize<string>(reader)", span="40-40"];
m10_6 [cluster="Newtonsoft.Json.Tests.TestObjects.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", color=green, community=0, file="EncodingReadConverter.cs", label="3: encodingName == null", span="41-41"];
m10_8 [cluster="Newtonsoft.Json.Tests.TestObjects.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", color=green, community=0, file="EncodingReadConverter.cs", label="0: return Encoding.GetEncoding(encodingName);", span="46-46"];
m10_7 [cluster="Newtonsoft.Json.Tests.TestObjects.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", color=green, community=0, file="EncodingReadConverter.cs", label="0: return null;", span="43-43"];
m10_9 [cluster="Newtonsoft.Json.Tests.TestObjects.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="EncodingReadConverter.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="38-38"];
m11_0 [cluster="Newtonsoft.Json.Tests.TestObjects.FaqItem.FaqItem()", file="FaqItem.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.FaqItem.FaqItem()", span="39-39"];
m11_1 [cluster="Newtonsoft.Json.Tests.TestObjects.FaqItem.FaqItem()", color=green, community=0, file="FaqItem.cs", label="0: this.Sections = new HashSet<FaqSection>()", span="41-41"];
m11_2 [cluster="Newtonsoft.Json.Tests.TestObjects.FaqItem.FaqItem()", file="FaqItem.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.FaqItem.FaqItem()", span="39-39"];
m11_3 [cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="FaqItem.cs", label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0"];
m11_4 [file="FaqItem.cs", label="Newtonsoft.Json.Tests.TestObjects.FaqItem", span=""];
m13_0 [cluster="Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonConverter.cs", label="Entry Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="45-45"];
m13_1 [cluster="Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonConverter.cs", label="Exit Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="45-45"];
m13_13 [cluster="string.FormatWith(System.IFormatProvider, object)", file="JsonConverter.cs", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
m13_22 [cluster="Newtonsoft.Json.JsonConverter<T>.ReadJson(Newtonsoft.Json.JsonReader, System.Type, T, bool, Newtonsoft.Json.JsonSerializer)", file="JsonConverter.cs", label="Entry Newtonsoft.Json.JsonConverter<T>.ReadJson(Newtonsoft.Json.JsonReader, System.Type, T, bool, Newtonsoft.Json.JsonSerializer)", span="141-141"];
m13_23 [cluster="Newtonsoft.Json.JsonConverter<T>.ReadJson(Newtonsoft.Json.JsonReader, System.Type, T, bool, Newtonsoft.Json.JsonSerializer)", file="JsonConverter.cs", label="Exit Newtonsoft.Json.JsonConverter<T>.ReadJson(Newtonsoft.Json.JsonReader, System.Type, T, bool, Newtonsoft.Json.JsonSerializer)", span="141-141"];
m13_27 [cluster="System.Type.IsAssignableFrom(System.Type)", file="JsonConverter.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m13_2 [cluster="Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonConverter.cs", label="Entry Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="55-55"];
m13_3 [cluster="Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonConverter.cs", label="Exit Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="55-55"];
m13_14 [cluster="Newtonsoft.Json.JsonConverter<T>.WriteJson(Newtonsoft.Json.JsonWriter, T, Newtonsoft.Json.JsonSerializer)", file="JsonConverter.cs", label="Entry Newtonsoft.Json.JsonConverter<T>.WriteJson(Newtonsoft.Json.JsonWriter, T, Newtonsoft.Json.JsonSerializer)", span="112-112"];
m13_15 [cluster="Newtonsoft.Json.JsonConverter<T>.WriteJson(Newtonsoft.Json.JsonWriter, T, Newtonsoft.Json.JsonSerializer)", file="JsonConverter.cs", label="Exit Newtonsoft.Json.JsonConverter<T>.WriteJson(Newtonsoft.Json.JsonWriter, T, Newtonsoft.Json.JsonSerializer)", span="112-112"];
m13_11 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", file="JsonConverter.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", span="255-255"];
m13_16 [cluster="Newtonsoft.Json.JsonConverter<T>.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonConverter.cs", label="Entry Newtonsoft.Json.JsonConverter<T>.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="122-122"];
m13_17 [cluster="Newtonsoft.Json.JsonConverter<T>.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonConverter.cs", label="bool existingIsNull = existingValue == null", span="124-124"];
m13_18 [cluster="Newtonsoft.Json.JsonConverter<T>.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonConverter.cs", label="!(existingIsNull || existingValue is T)", span="125-125"];
m13_20 [cluster="Newtonsoft.Json.JsonConverter<T>.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonConverter.cs", label="return ReadJson(reader, objectType, existingIsNull ? default(T) : (T)existingValue, !existingIsNull, serializer);", span="129-129"];
m13_19 [cluster="Newtonsoft.Json.JsonConverter<T>.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonConverter.cs", label="throw new JsonSerializationException(''Converter cannot read JSON with the specified existing value. {0} is required.''.FormatWith(CultureInfo.InvariantCulture, typeof(T)));", span="127-127"];
m13_21 [cluster="Newtonsoft.Json.JsonConverter<T>.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonConverter.cs", label="Exit Newtonsoft.Json.JsonConverter<T>.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="122-122"];
m13_24 [cluster="Newtonsoft.Json.JsonConverter<T>.CanConvert(System.Type)", file="JsonConverter.cs", label="Entry Newtonsoft.Json.JsonConverter<T>.CanConvert(System.Type)", span="150-150"];
m13_25 [cluster="Newtonsoft.Json.JsonConverter<T>.CanConvert(System.Type)", file="JsonConverter.cs", label="return typeof(T).IsAssignableFrom(objectType);", span="152-152"];
m13_26 [cluster="Newtonsoft.Json.JsonConverter<T>.CanConvert(System.Type)", file="JsonConverter.cs", label="Exit Newtonsoft.Json.JsonConverter<T>.CanConvert(System.Type)", span="150-150"];
m13_4 [cluster="Newtonsoft.Json.JsonConverter.CanConvert(System.Type)", file="JsonConverter.cs", label="Entry Newtonsoft.Json.JsonConverter.CanConvert(System.Type)", span="64-64"];
m13_5 [cluster="Newtonsoft.Json.JsonConverter.CanConvert(System.Type)", file="JsonConverter.cs", label="Exit Newtonsoft.Json.JsonConverter.CanConvert(System.Type)", span="64-64"];
m13_12 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", file="JsonConverter.cs", label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="52-52"];
m13_6 [cluster="Newtonsoft.Json.JsonConverter<T>.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonConverter.cs", label="Entry Newtonsoft.Json.JsonConverter<T>.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="97-97"];
m13_7 [cluster="Newtonsoft.Json.JsonConverter<T>.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonConverter.cs", label="!(value != null ? value is T : ReflectionUtils.IsNullable(typeof(T)))", span="99-99"];
m13_9 [cluster="Newtonsoft.Json.JsonConverter<T>.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonConverter.cs", label="WriteJson(writer, (T)value, serializer)", span="103-103"];
m13_8 [cluster="Newtonsoft.Json.JsonConverter<T>.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonConverter.cs", label="throw new JsonSerializationException(''Converter cannot write specified value to JSON. {0} is required.''.FormatWith(CultureInfo.InvariantCulture, typeof(T)));", span="101-101"];
m13_10 [cluster="Newtonsoft.Json.JsonConverter<T>.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonConverter.cs", label="Exit Newtonsoft.Json.JsonConverter<T>.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="97-97"];
m13_28 [file="JsonConverter.cs", label="Newtonsoft.Json.JsonConverter<T>", span=""];
m14_2242 [cluster="XmlDocument.cstr", file="JsonSerializerTest.cs", label="Entry XmlDocument.cstr", span=""];
m14_1483 [cluster="Newtonsoft.Json.Tests.TestObjects.JaggedArray.JaggedArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.JaggedArray.JaggedArray()", span="27-27"];
m14_3735 [cluster="Newtonsoft.Json.Tests.TestObjects.ParticipantEntity.ParticipantEntity()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ParticipantEntity.ParticipantEntity()", span="35-35"];
m14_2094 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", span="4233-4233"];
m14_2095 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", color=red, community=0, file="JsonSerializerTest.cs", label="0: return ((IDictionary<string, T>)_innerDictionary).Remove(item);", span="4235-4235"];
m14_2096 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", span="4233-4233"];
m14_772 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", span="1483-1483"];
m14_773 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonSerializerTest.cs", label="string s = null", span="1485-1485"];
m14_774 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonSerializerTest.cs", label="var v = new JValue(s)", span="1486-1486"];
m14_775 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonSerializerTest.cs", label="var o = JObject.FromObject(new { title = v })", span="1487-1487"];
m14_776 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonSerializerTest.cs", label="JObject oo = new JObject\r\n            {\r\n                { ''title'', v }\r\n            }", span="1489-1492"];
m14_778 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, v.Value)", span="1496-1496"];
m14_779 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JTokenType.String, v.Type)", span="1497-1497"];
m14_777 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonSerializerTest.cs", label="string output = o.ToString()", span="1494-1494"];
m14_780 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''title'''': null\r\n}'', output)", span="1499-1501"];
m14_781 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", span="1483-1483"];
m14_251 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", span="496-496"];
m14_252 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonSerializerTest.cs", label="RequiredPropertyTestClass c1 = new RequiredPropertyTestClass()", span="498-498"];
m14_253 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.SerializeObject(c1),\r\n                ''Cannot write a null value for property 'Name'. Property requires a value. Path ''.'')", span="500-502"];
m14_254 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonSerializerTest.cs", label="RequiredPropertyTestClass c2 = new RequiredPropertyTestClass\r\n            {\r\n                Name = ''Name!''\r\n            }", span="504-507"];
m14_255 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c2)", span="509-509"];
m14_256 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Name'''':''''Name!''''}'', json)", span="511-511"];
m14_257 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<RequiredPropertyTestClass>(@''{}''),\r\n                ''Required property 'Name' not found in JSON. Path '', line 1, position 2.'')", span="513-515"];
m14_258 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<RequiredPropertyTestClass>(@''{''''Name'''':null}''),\r\n                ''Required property 'Name' expects a value but got null. Path '', line 1, position 13.'')", span="517-519"];
m14_259 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonSerializerTest.cs", label="RequiredPropertyTestClass c3 = JsonConvert.DeserializeObject<RequiredPropertyTestClass>(@''{''''Name'''':''''Name!''''}'')", span="521-521"];
m14_260 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Name!'', c3.Name)", span="523-523"];
m14_261 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", span="496-496"];
m14_1152 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", span="34-34"];
m14_648 [cluster="Unk.ReferenceResolverProvider", file="JsonSerializerTest.cs", label="Entry Unk.ReferenceResolverProvider", span=""];
m14_3301 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentCommentsThenAnotherObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentCommentsThenAnotherObject()", span="6867-6867"];
m14_3302 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentCommentsThenAnotherObject()", file="JsonSerializerTest.cs", label="string json = @''{one:1} // This is just a comment\r\n/* This is just a comment\r\nover multiple\r\nlines.*/\r\n\r\n// This is just another comment. But here comes an empty object.\r\n{}''", span="6869-6875"];
m14_3303 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentCommentsThenAnotherObject()", file="JsonSerializerTest.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings { CheckAdditionalContent = true }", span="6877-6877"];
m14_3305 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentCommentsThenAnotherObject()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { s.Deserialize<Dictionary<string, int>>(new JsonTextReader(new StringReader(json))); }, ''Additional text encountered after finished reading JSON content: {. Path '', line 7, position 0.'')", span="6879-6879"];
m14_3304 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentCommentsThenAnotherObject()", file="JsonSerializerTest.cs", label="JsonSerializer s = JsonSerializer.Create(settings)", span="6878-6878"];
m14_3306 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentCommentsThenAnotherObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentCommentsThenAnotherObject()", span="6867-6867"];
m14_42 [cluster="System.IO.File.OpenRead(string)", file="JsonSerializerTest.cs", label="Entry System.IO.File.OpenRead(string)", span="0-0"];
m14_2243 [cluster="Unk.LoadXml", file="JsonSerializerTest.cs", label="Entry Unk.LoadXml", span=""];
m14_855 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(System.IO.TextReader, System.Type)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(System.IO.TextReader, System.Type)", span="831-831"];
m14_576 [cluster="System.Globalization.CultureInfo.ToString()", file="JsonSerializerTest.cs", label="Entry System.Globalization.CultureInfo.ToString()", span="0-0"];
m14_2907 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableGuidCustomWriterOverridesNullableGuid()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableGuidCustomWriterOverridesNullableGuid()", span="6026-6026"];
m14_2908 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableGuidCustomWriterOverridesNullableGuid()", file="JsonSerializerTest.cs", label="NullableGuid ng = new NullableGuid {Id = Guid.Empty}", span="6028-6028"];
m14_2909 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableGuidCustomWriterOverridesNullableGuid()", file="JsonSerializerTest.cs", label="NullableGuidCountingJsonTextWriter writer = new NullableGuidCountingJsonTextWriter(new StreamWriter(Stream.Null))", span="6029-6029"];
m14_2911 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableGuidCustomWriterOverridesNullableGuid()", file="JsonSerializerTest.cs", label="serializer.Serialize(writer, ng)", span="6031-6031"];
m14_2915 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableGuidCustomWriterOverridesNullableGuid()", file="JsonSerializerTest.cs", label="serializer.Serialize(writer, ng)", span="6035-6035"];
m14_2910 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableGuidCustomWriterOverridesNullableGuid()", file="JsonSerializerTest.cs", label="JsonSerializer serializer = JsonSerializer.Create()", span="6030-6030"];
m14_2912 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableGuidCustomWriterOverridesNullableGuid()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, writer.NullableGuidCount)", span="6032-6032"];
m14_2916 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableGuidCustomWriterOverridesNullableGuid()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, writer.NullableGuidCount)", span="6036-6036"];
m14_2914 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableGuidCustomWriterOverridesNullableGuid()", file="JsonSerializerTest.cs", label="serializer.TraceWriter = traceWriter", span="6034-6034"];
m14_2913 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableGuidCustomWriterOverridesNullableGuid()", file="JsonSerializerTest.cs", label="MemoryTraceWriter traceWriter = new MemoryTraceWriter()", span="6033-6033"];
m14_2917 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableGuidCustomWriterOverridesNullableGuid()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableGuidCustomWriterOverridesNullableGuid()", span="6026-6026"];
m14_211 [cluster="Newtonsoft.Json.Tests.TestObjects.DictionaryKeyContractResolver.DictionaryKeyContractResolver()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.DictionaryKeyContractResolver.DictionaryKeyContractResolver()", span="30-30"];
m14_848 [cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", span="579-579"];
m14_3725 [cluster="Newtonsoft.Json.JsonConverterCollection.JsonConverterCollection()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConverterCollection.JsonConverterCollection()", span="35-35"];
m14_8 [cluster="Newtonsoft.Json.Tests.TestObjects.ListSourceTest.ListSourceTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ListSourceTest.ListSourceTest()", span="31-31"];
m14_3989 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.CanConvert(System.Type)", span="8498-8498"];
m14_3990 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.CanConvert(System.Type)", color=red, community=0, file="JsonSerializerTest.cs", label="3: return objectType == typeof(System.Net.Mail.Attachment);", span="8500-8500"];
m14_3991 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.CanConvert(System.Type)", span="8498-8498"];
m14_813 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", span="1544-1544"];
m14_814 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs", label="var original = new Foo1<Bar1> { foo = new Bar1 { bar = ''value'' }, foo2 = new Bar1 { bar = ''value2'' } }", span="1546-1546"];
m14_815 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs", label="var json = JsonConvert.SerializeObject(original)", span="1547-1547"];
m14_816 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs", label="var expectedJson = @''{''''foo'''':{''''bar'''':''''value''''},''''foo2'''':{''''bar'''':''''value2''''}}''", span="1548-1548"];
m14_817 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs", label="Assert.AreEqual(expectedJson, json)", span="1549-1549"];
m14_818 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", span="1544-1544"];
m14_1290 [cluster="Newtonsoft.Json.Tests.TestObjects.ConverterPrecedenceClass.ConverterPrecedenceClass(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ConverterPrecedenceClass.ConverterPrecedenceClass(string)", span="32-32"];
m14_1717 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", span="3410-3410"];
m14_1718 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonSerializerTest.cs", label="string json = @''{''''Operation'''':''''1'''',''''RoleName'''':''''Admin'''',''''Direction'''':''''0''''}''", span="3412-3412"];
m14_1719 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonSerializerTest.cs", label="RoleTransfer r = JsonConvert.DeserializeObject<RoleTransfer>(json)", span="3414-3414"];
m14_1720 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(RoleTransferOperation.Second, r.Operation)", span="3416-3416"];
m14_1721 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Admin'', r.RoleName)", span="3417-3417"];
m14_1722 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(RoleTransferDirection.First, r.Direction)", span="3418-3418"];
m14_1723 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", span="3410-3410"];
m14_492 [cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="404-404"];
m14_1237 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", span="2371-2371"];
m14_1238 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="JsonSerializerTest.cs", label="var date = new DateTime(2001, 4, 4, 0, 0, 0, DateTimeKind.Utc)", span="2373-2373"];
m14_1239 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(date)", span="2375-2375"];
m14_1240 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''''''2001-04-04T00:00:00Z'''''', json)", span="2376-2376"];
m14_1241 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", span="2371-2371"];
m14_920 [cluster="System.Text.Encoding.GetString(byte[], int, int)", file="JsonSerializerTest.cs", label="Entry System.Text.Encoding.GetString(byte[], int, int)", span="0-0"];
m14_577 [cluster="Newtonsoft.Json.Tests.TestObjects.IdReferenceResolver.IdReferenceResolver()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.IdReferenceResolver.IdReferenceResolver()", span="31-31"];
m14_956 [cluster="Newtonsoft.Json.Tests.TestObjects.Product.Product()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Product.Product()", span="29-29"];
m14_2250 [cluster="Newtonsoft.Json.Tests.TestObjects.Pos.Pos()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Pos.Pos()", span="27-27"];
m14_2620 [cluster="Newtonsoft.Json.Tests.TestObjects.VirtualOverrideNewChildObject.VirtualOverrideNewChildObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.VirtualOverrideNewChildObject.VirtualOverrideNewChildObject()", span="27-27"];
m14_2268 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", span="4688-4688"];
m14_2269 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                //Additional text found in JSON string after finishing deserializing object.\r\n                //Test 1\r\n                var reference = new Dictionary<string, object>();\r\n                reference.Add(''$ref'', 1);\r\n                reference.Add(''$id'', 1);\r\n\r\n                var child = new Dictionary<string, object>();\r\n                child.Add(''_id'', 2);\r\n                child.Add(''Name'', ''Isabell'');\r\n                child.Add(''Father'', reference);\r\n\r\n                var json = JsonConvert.SerializeObject(child, Formatting.Indented);\r\n                JsonConvert.DeserializeObject<Dictionary<string, object>>(json);\r\n            }, ''JSON reference $ref property must have a string or null value. Path 'Father.$ref', line 5, position 13.'')", span="4690-4705"];
m14_2270 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", span="4688-4688"];
m14_733 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", span="1394-1394"];
m14_734 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="var p1 = new PersonReference\r\n            {\r\n                Name = ''John Smith''\r\n            }", span="1396-1399"];
m14_735 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="var p2 = new PersonReference\r\n            {\r\n                Name = ''Mary Sue'',\r\n            }", span="1400-1403"];
m14_736 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="p1.Spouse = p2", span="1405-1405"];
m14_737 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="p2.Spouse = p1", span="1406-1406"];
m14_738 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="var obj = new PreserveReferencesCallbackTestObject(''string!'', 42, p1, p2, p1)", span="1408-1408"];
m14_739 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="obj._parent = obj", span="1409-1409"];
m14_741 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(obj, settings)", span="1417-1417"];
m14_744 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(obj._stringValue, obj2._stringValue)", span="1447-1447"];
m14_745 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(obj._intValue, obj2._intValue)", span="1448-1448"];
m14_746 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(obj._person1.Name, obj2._person1.Name)", span="1449-1449"];
m14_747 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(obj._person2.Name, obj2._person2.Name)", span="1450-1450"];
m14_748 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(obj._person3.Name, obj2._person3.Name)", span="1451-1451"];
m14_740 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="var settings = new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.All,\r\n                Formatting = Formatting.Indented\r\n            }", span="1411-1415"];
m14_742 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(json, @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''stringValue'''': ''''string!'''',\r\n  ''''intValue'''': 42,\r\n  ''''person1'''': {\r\n    ''''$id'''': ''''2'''',\r\n    ''''Name'''': ''''John Smith'''',\r\n    ''''Spouse'''': {\r\n      ''''$id'''': ''''3'''',\r\n      ''''Name'''': ''''Mary Sue'''',\r\n      ''''Spouse'''': {\r\n        ''''$ref'''': ''''2''''\r\n      }\r\n    }\r\n  },\r\n  ''''person2'''': {\r\n    ''''$ref'''': ''''3''''\r\n  },\r\n  ''''person3'''': {\r\n    ''''$ref'''': ''''2''''\r\n  },\r\n  ''''parent'''': {\r\n    ''''$ref'''': ''''1''''\r\n  }\r\n}'')", span="1419-1443"];
m14_743 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="PreserveReferencesCallbackTestObject obj2 = JsonConvert.DeserializeObject<PreserveReferencesCallbackTestObject>(json)", span="1445-1445"];
m14_749 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(obj2._person1, obj2._person3)", span="1452-1452"];
m14_750 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(obj2._person1.Spouse, obj2._person2)", span="1453-1453"];
m14_751 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(obj2._person2.Spouse, obj2._person1)", span="1454-1454"];
m14_752 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(obj2._parent, obj2)", span="1455-1455"];
m14_753 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", span="1394-1394"];
m14_1141 [cluster="Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T)", span="719-719"];
m14_1852 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", span="174-174"];
m14_1329 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", span="2523-2523"];
m14_1330 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonSerializerTest.cs", label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="2525-2525"];
m14_1331 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonSerializerTest.cs", label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="2526-2526"];
m14_1335 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="2536-2536"];
m14_1336 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testDate, m2.MemberConverter)", span="2537-2537"];
m14_1332 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(m1, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.IsoDateFormat,\r\n            })", span="2528-2531"];
m14_1333 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''DefaultConverter'''':''''1970-01-01T00:00:00Z'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="2532-2532"];
m14_1334 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonSerializerTest.cs", label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json)", span="2534-2534"];
m14_1337 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", span="2523-2523"];
m14_41 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.ResolvePath(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestFixtureBase.ResolvePath(string)", span="212-212"];
m14_1756 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", span="3473-3473"];
m14_1757 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonSerializerTest.cs", label="List<decimal?> l = JsonConvert.DeserializeObject<List<decimal?>>(''[ 3.3, null, 1.1 ] '')", span="3475-3475"];
m14_1758 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, l.Count)", span="3476-3476"];
m14_1759 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3.3m, l[0])", span="3478-3478"];
m14_1760 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, l[1])", span="3479-3479"];
m14_1761 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1.1m, l[2])", span="3480-3480"];
m14_1762 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", span="3473-3473"];
m14_3637 [cluster="System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Type)", file="JsonSerializerTest.cs", label="Entry System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Type)", span="0-0"];
m14_2818 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", span="5852-5852"];
m14_2819 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonSerializerTest.cs", label="IList<decimal> d1 = new List<decimal> { 1.1m }", span="5854-5854"];
m14_2820 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(d1)", span="5856-5856"];
m14_2822 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonSerializerTest.cs", label="Assert.AreEqual(d1.Count, d2.Count)", span="5860-5860"];
m14_2823 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonSerializerTest.cs", label="Assert.AreEqual(d1[0], d2[0])", span="5861-5861"];
m14_2821 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonSerializerTest.cs", label="IList<decimal> d2 = JsonConvert.DeserializeObject<IList<decimal>>(json)", span="5858-5858"];
m14_2824 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", span="5852-5852"];
m14_1697 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", span="3342-3342"];
m14_1698 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonSerializerTest.cs", label="var value = new\r\n            {\r\n                bar = new JObject(new JProperty(''baz'', 13))\r\n            }", span="3344-3347"];
m14_1699 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(value)", span="3349-3349"];
m14_1700 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''bar'''':{''''baz'''':13}}'', json)", span="3351-3351"];
m14_1701 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", span="3342-3342"];
m14_2404 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", span="4960-4960"];
m14_2405 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="JsonSerializerTest.cs", label="NullableDateTimeTestClass d = JsonConvert.DeserializeObject<NullableDateTimeTestClass>(''{\''DateTimeOffsetField\'':\''\\/Date(946663200000+0600)\\/\''}'')", span="4962-4962"];
m14_2406 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), d.DateTimeOffsetField)", span="4963-4963"];
m14_2407 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", span="4960-4960"];
m14_1484 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", span="2820-2820"];
m14_1485 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2],[2,1],[2,2]],''''After'''':''''After!''''}''", span="2822-2822"];
m14_1486 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="JaggedArray aa = JsonConvert.DeserializeObject<JaggedArray>(json)", span="2824-2824"];
m14_1494 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(json, after)", span="2835-2835"];
m14_1487 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Before!'', aa.Before)", span="2826-2826"];
m14_1488 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''After!'', aa.After)", span="2827-2827"];
m14_1489 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, aa.Coordinates.Length)", span="2828-2828"];
m14_1490 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, aa.Coordinates[0].Length)", span="2829-2829"];
m14_1491 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, aa.Coordinates[0][0])", span="2830-2830"];
m14_1492 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, aa.Coordinates[1][1])", span="2831-2831"];
m14_1493 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="string after = JsonConvert.SerializeObject(aa)", span="2833-2833"];
m14_1495 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", span="2820-2820"];
m14_1736 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", span="3445-3445"];
m14_1737 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="JsonSerializerTest.cs", label="string json = @''{''''sublocation'''':''''AlertEmailSender.Program.Main'''',''''userId'''':0,''''type'''':0,''''summary'''':''''Loading settings variables'''',''''details'''':null,''''stackTrace'''':''''   at System.Environment.GetStackTrace(Exception e, Boolean needFileInfo)\r\n   at System.Environment.get_StackTrace()\r\n   at mr.Logging.Event..ctor(String summary) in C:\\Projects\\MRUtils\\Logging\\Event.vb:line 71\r\n   at AlertEmailSender.Program.Main(String[] args) in C:\\Projects\\AlertEmailSender\\AlertEmailSender\\Program.cs:line 25'''',''''tag'''':null,''''time'''':''''\/Date(1249591032026-0400)\/''''}''", span="3447-3447"];
m14_1738 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Event>(json); }, @''Unable to find a constructor to use for type Newtonsoft.Json.Tests.TestObjects.Events.Event. A class should either have a default constructor, one constructor with arguments or a constructor marked with the JsonConstructor attribute. Path 'sublocation', line 1, position 15.'')", span="3449-3449"];
m14_1739 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", span="3445-3445"];
m14_3067 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.MetroColorConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.MetroColorConverter()", span="6353-6353"];
m14_454 [cluster="System.Linq.Enumerable.Range(int, int)", file="JsonSerializerTest.cs", label="Entry System.Linq.Enumerable.Range(int, int)", span="0-0"];
m14_2949 [cluster="Newtonsoft.Json.Tests.TestObjects.WithEnums.WithEnums()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.WithEnums.WithEnums()", span="27-27"];
m14_1354 [cluster="System.Convert.ToDateTime(string)", file="JsonSerializerTest.cs", label="Entry System.Convert.ToDateTime(string)", span="0-0"];
m14_1695 [cluster="System.Uri.Uri(string)", file="JsonSerializerTest.cs", label="Entry System.Uri.Uri(string)", span="0-0"];
m14_1044 [cluster="Newtonsoft.Json.Linq.JToken.Children()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JToken.Children()", span="357-357"];
m14_2558 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", span="5272-5272"];
m14_2559 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  'Name': 'James Hughes',\r\n  'Age': '40',\r\n  'Height': '44.4',\r\n  'Price': '4'\r\n}''", span="5274-5279"];
m14_2560 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonSerializerTest.cs", label="DeserializeStringConvert p = JsonConvert.DeserializeObject<DeserializeStringConvert>(json)", span="5281-5281"];
m14_2561 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonSerializerTest.cs", label="Assert.AreEqual(40, p.Age)", span="5282-5282"];
m14_2562 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonSerializerTest.cs", label="Assert.AreEqual(44.4, p.Height)", span="5283-5283"];
m14_2563 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4m, p.Price)", span="5284-5284"];
m14_2564 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", span="5272-5272"];
m14_3285 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustComment()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustComment()", span="6836-6836"];
m14_3286 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustComment()", file="JsonSerializerTest.cs", label="string json = ''{one:1} // This is just a comment''", span="6838-6838"];
m14_3287 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustComment()", file="JsonSerializerTest.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings {CheckAdditionalContent = true}", span="6840-6840"];
m14_3289 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustComment()", file="JsonSerializerTest.cs", label="IDictionary<string, int> o = s.Deserialize<Dictionary<string, int>>(new JsonTextReader(new StringReader(json)))", span="6842-6842"];
m14_3288 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustComment()", file="JsonSerializerTest.cs", label="JsonSerializer s = JsonSerializer.Create(settings)", span="6841-6841"];
m14_3290 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustComment()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(o)", span="6844-6844"];
m14_3291 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustComment()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, o[''one''])", span="6845-6845"];
m14_3292 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustComment()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustComment()", span="6836-6836"];
m14_2282 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", span="4709-4709"];
m14_2283 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="var reference = new Dictionary<string, object>()", span="4711-4711"];
m14_2284 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="reference.Add(''$ref'', null)", span="4712-4712"];
m14_2285 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="reference.Add(''$id'', null)", span="4713-4713"];
m14_2286 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="reference.Add(''blah'', ''blah!'')", span="4714-4714"];
m14_2290 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="child.Add(''Father'', reference)", span="4719-4719"];
m14_2287 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="var child = new Dictionary<string, object>()", span="4716-4716"];
m14_2288 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="child.Add(''_id'', 2)", span="4717-4717"];
m14_2289 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="child.Add(''Name'', ''Isabell'')", span="4718-4718"];
m14_2291 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(child)", span="4721-4721"];
m14_2292 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''_id'''':2,''''Name'''':''''Isabell'''',''''Father'''':{''''$ref'''':null,''''$id'''':null,''''blah'''':''''blah!''''}}'', json)", span="4723-4723"];
m14_2293 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="Dictionary<string, object> result = JsonConvert.DeserializeObject<Dictionary<string, object>>(json)", span="4725-4725"];
m14_2294 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, result.Count)", span="4727-4727"];
m14_2295 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, ((JObject)result[''Father'']).Count)", span="4728-4728"];
m14_2296 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''blah!'', (string)((JObject)result[''Father''])[''blah''])", span="4729-4729"];
m14_2297 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", span="4709-4709"];
m14_3965 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.CanConvert(System.Type)", span="8464-8464"];
m14_3966 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.CanConvert(System.Type)", color=red, community=0, file="JsonSerializerTest.cs", label="3: return objectType == typeof(System.Net.Mail.MailAddress);", span="8466-8466"];
m14_3967 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.CanConvert(System.Type)", span="8464-8464"];
m14_1159 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", span="2225-2225"];
m14_1160 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(null)", span="2227-2227"];
m14_1161 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''null'', json)", span="2228-2228"];
m14_1162 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", span="2225-2225"];
m14_3796 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", span="8054-8054"];
m14_3797 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="JsonSerializerTest.cs", label="var c = new TestClassConvertable { Id = new ConvertibleId { Value = 1 }, X = 2 }", span="8056-8056"];
m14_3798 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="JsonSerializerTest.cs", label="var s = JsonConvert.SerializeObject(c, Formatting.Indented)", span="8057-8057"];
m14_3799 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Id'''': ''''1'''',\r\n  ''''X'''': 2\r\n}'', s)", span="8058-8061"];
m14_3800 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", span="8054-8054"];
m14_3056 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", span="6293-6293"];
m14_3057 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs", label="Product product = new Product()\r\n            {\r\n                Name = ''Apple'',\r\n                ExpiryDate = new DateTime(2012, 4, 1),\r\n                Price = 3.99M,\r\n                Sizes = new[] { ''Small'', ''Medium'', ''Large'' }\r\n            }", span="6295-6301"];
m14_3058 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(product)", span="6303-6303"];
m14_3059 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs", label="string metroJson = JsonConvert.SerializeObject(product, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new MetroPropertyNameResolver(),\r\n                Converters = { new MetroStringConverter() },\r\n                Formatting = Formatting.Indented\r\n            })", span="6311-6316"];
m14_3060 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  '''':::NAME:::'''': '''':::APPLE:::'''',\r\n  '''':::EXPIRYDATE:::'''': ''''2012-04-01T00:00:00'''',\r\n  '''':::PRICE:::'''': 3.99,\r\n  '''':::SIZES:::'''': [\r\n    '''':::SMALL:::'''',\r\n    '''':::MEDIUM:::'''',\r\n    '''':::LARGE:::''''\r\n  ]\r\n}'', metroJson)", span="6317-6326"];
m14_3061 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs", label="Color[] colors = new[] { Color.Blue, Color.Red, Color.Yellow, Color.Green, Color.Black, Color.Brown }", span="6334-6334"];
m14_3062 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs", label="string json2 = JsonConvert.SerializeObject(colors, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new MetroPropertyNameResolver(),\r\n                Converters = { new MetroStringConverter(), new MetroColorConverter() },\r\n                Formatting = Formatting.Indented\r\n            })", span="6336-6341"];
m14_3063 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''[\r\n  '''':::GRAY:::'''',\r\n  '''':::GRAY:::'''',\r\n  '''':::GRAY:::'''',\r\n  '''':::GRAY:::'''',\r\n  '''':::BLACK:::'''',\r\n  '''':::GRAY:::''''\r\n]'', json2)", span="6343-6350"];
m14_3064 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", span="6293-6293"];
m14_387 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolAsStringInDictionary()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolAsStringInDictionary()", span="843-843"];
m14_388 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolAsStringInDictionary()", file="JsonSerializerTest.cs", label="Dictionary<string, string> d = JsonConvert.DeserializeObject<Dictionary<string, string>>(''{\''Test1\'':false}'')", span="845-845"];
m14_389 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolAsStringInDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, d.Count)", span="846-846"];
m14_390 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolAsStringInDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''false'', d[''Test1''])", span="847-847"];
m14_391 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolAsStringInDictionary()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolAsStringInDictionary()", span="843-843"];
m14_1475 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", span="2807-2807"];
m14_1476 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs", label="JaggedArray aa = new JaggedArray()", span="2809-2809"];
m14_1477 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs", label="aa.Before = ''Before!''", span="2810-2810"];
m14_1478 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs", label="aa.After = ''After!''", span="2811-2811"];
m14_1479 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs", label="aa.Coordinates = new[] { new[] { 1, 1 }, new[] { 1, 2 }, new[] { 2, 1 }, new[] { 2, 2 } }", span="2812-2812"];
m14_1480 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(aa)", span="2814-2814"];
m14_1481 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2],[2,1],[2,2]],''''After'''':''''After!''''}'', json)", span="2816-2816"];
m14_1482 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", span="2807-2807"];
m14_2139 [cluster="Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Organization.Person)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Organization.Person)", span="52-52"];
m14_3803 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", span="8066-8066"];
m14_3804 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", file="JsonSerializerTest.cs", label="string content = @''{''''result'''':{''''time'''':1408188592,''''time'''':1408188593},''''error'''':null,''''id'''':''''1''''}''", span="8068-8068"];
m14_3805 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", file="JsonSerializerTest.cs", label="JObject o = JsonConvert.DeserializeObject<JObject>(content)", span="8069-8069"];
m14_3806 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", file="JsonSerializerTest.cs", label="int time = (int)o[''result''][''time'']", span="8070-8070"];
m14_3807 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1408188593, time)", span="8072-8072"];
m14_3808 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", span="8066-8066"];
m14_2311 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", span="4759-4759"];
m14_2312 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs", label="Dictionary<DictionaryKey, string> dictionary = new Dictionary<DictionaryKey, string>()", span="4761-4761"];
m14_2313 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs", label="dictionary.Add(new DictionaryKey() { Value = ''First!'' }, ''First'')", span="4763-4763"];
m14_2314 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs", label="dictionary.Add(new DictionaryKey() { Value = ''Second!'' }, ''Second'')", span="4764-4764"];
m14_2315 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(dictionary, Formatting.Indented)", span="4766-4766"];
m14_2316 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''First!'''': ''''First'''',\r\n  ''''Second!'''': ''''Second''''\r\n}'', json)", span="4768-4771"];
m14_2317 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs", label="Dictionary<DictionaryKey, string> newDictionary =\r\n                JsonConvert.DeserializeObject<Dictionary<DictionaryKey, string>>(json)", span="4773-4774"];
m14_2318 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, newDictionary.Count)", span="4776-4776"];
m14_2319 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", span="4759-4759"];
m14_784 [cluster="Newtonsoft.Json.Linq.JObject.JObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject()", span="87-87"];
m14_2743 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", span="495-495"];
m14_1355 [cluster="System.DateTime.ToUniversalTime()", file="JsonSerializerTest.cs", label="Entry System.DateTime.ToUniversalTime()", span="0-0"];
m14_1994 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", span="3976-3976"];
m14_1995 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs", label="string json = ''{key1:'value1',key2:'value2',key3:'value3'}''", span="3978-3978"];
m14_1996 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs", label="var dic = JsonConvert.DeserializeObject<DictionaryWithNoDefaultConstructor>(json)", span="3980-3980"];
m14_1997 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, dic.Count)", span="3982-3982"];
m14_1998 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value1'', dic[''key1''])", span="3983-3983"];
m14_1999 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value2'', dic[''key2''])", span="3984-3984"];
m14_2000 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value3'', dic[''key3''])", span="3985-3985"];
m14_2001 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", span="3976-3976"];
m14_404 [cluster="Newtonsoft.Json.JsonSerializer.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Populate(Newtonsoft.Json.JsonReader, object)", span="780-780"];
m14_2753 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", span="5710-5710"];
m14_2754 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonSerializerTest.cs", label="string input = @''http://tes/?a=b\\c&d=e\''", span="5712-5712"];
m14_2755 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonSerializerTest.cs", label="Uri uri = new Uri(input)", span="5713-5713"];
m14_2756 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(uri)", span="5714-5714"];
m14_2758 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonSerializerTest.cs", label="Assert.AreEqual(uri, output)", span="5717-5717"];
m14_2757 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonSerializerTest.cs", label="Uri output = JsonConvert.DeserializeObject<Uri>(json)", span="5715-5715"];
m14_2759 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", span="5710-5710"];
m14_1236 [cluster="Unk.AreNotEqual", file="JsonSerializerTest.cs", label="Entry Unk.AreNotEqual", span=""];
m14_2102 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", span="4243-4243"];
m14_2103 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", color=red, community=0, file="JsonSerializerTest.cs", label="0: return _innerDictionary.TryGetValue(key, out value);", span="4245-4245"];
m14_2104 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", span="4243-4243"];
m14_2051 [cluster="Newtonsoft.Json.Tests.TestObjects.Human.Human()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Human.Human()", span="27-27"];
m14_4012 [cluster="System.Text.Encoding.GetEncoding(string)", file="JsonSerializerTest.cs", label="Entry System.Text.Encoding.GetEncoding(string)", span="0-0"];
m14_2832 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", span="5878-5878"];
m14_2833 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonSerializerTest.cs", label="IList<byte[]> d1 = new List<byte[]> { null }", span="5880-5880"];
m14_2834 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(d1)", span="5882-5882"];
m14_2836 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(d1.Count, d2.Count)", span="5886-5886"];
m14_2837 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(d1[0], d2[0])", span="5887-5887"];
m14_2835 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonSerializerTest.cs", label="IList<byte[]> d2 = JsonConvert.DeserializeObject<IList<byte[]>>(json)", span="5884-5884"];
m14_2838 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", span="5878-5878"];
m14_3905 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", span="8313-8313"];
m14_3906 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="JsonSerializerTest.cs", label="ConstantTestClass c1 = new ConstantTestClass()", span="8315-8315"];
m14_3907 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="8317-8317"];
m14_3908 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''MY_CONSTANT'''': ''''.''''\r\n}'', json)", span="8319-8321"];
m14_3909 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<ConstantTestClass>(json)", span="8323-8323"];
m14_3910 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", span="8313-8313"];
m14_3479 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", span="7300-7300"];
m14_3480 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonSerializerTest.cs", label="Tuple<int, int> tuple = Tuple.Create(500, 20)", span="7302-7302"];
m14_3481 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(tuple)", span="7303-7303"];
m14_3482 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Item1'''':500,''''Item2'''':20}'', json)", span="7304-7304"];
m14_3483 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonSerializerTest.cs", label="Tuple<int, int> tuple2 = JsonConvert.DeserializeObject<Tuple<int, int>>(json)", span="7306-7306"];
m14_3484 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonSerializerTest.cs", label="Assert.AreEqual(500, tuple2.Item1)", span="7307-7307"];
m14_3485 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonSerializerTest.cs", label="Assert.AreEqual(20, tuple2.Item2)", span="7308-7308"];
m14_3486 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", span="7300-7300"];
m14_3080 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.CanConvert(System.Type)", span="6368-6368"];
m14_3081 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.CanConvert(System.Type)", color=red, community=0, file="JsonSerializerTest.cs", label="3: return objectType == typeof(Color);", span="6370-6370"];
m14_3082 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.CanConvert(System.Type)", span="6368-6368"];
m14_2434 [cluster="System.Dynamic.ExpandoObject.ExpandoObject()", file="JsonSerializerTest.cs", label="Entry System.Dynamic.ExpandoObject.ExpandoObject()", span="0-0"];
m14_847 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m14_2527 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", span="5211-5211"];
m14_2528 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="JsonSerializerTest.cs", label="NonPublicConstructorWithJsonConstructor c = JsonConvert.DeserializeObject<NonPublicConstructorWithJsonConstructor>(''{}'')", span="5213-5213"];
m14_2529 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''NonPublic'', c.Constructor)", span="5214-5214"];
m14_2530 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", span="5211-5211"];
m14_3432 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", span="7167-7167"];
m14_3433 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", color=red, community=0, file="JsonSerializerTest.cs", label="3: IgnoreSerializableAttribute = false", span="7169-7169"];
m14_3434 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", span="7167-7167"];
m14_3214 [cluster="Unk.IsFalse", file="JsonSerializerTest.cs", label="Entry Unk.IsFalse", span=""];
m14_355 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", span="783-783"];
m14_356 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonSerializerTest.cs", label="NullTestClass otc = JsonConvert.DeserializeObject<NullTestClass>(@''{\r\n    ''''Value1'''': null,\r\n    ''''Value2'''': null,\r\n    ''''Value3'''': null,\r\n    ''''Value4'''': null,\r\n    ''''Value5'''': null\r\n}'')", span="785-791"];
m14_357 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonSerializerTest.cs", label="Assert.IsNull(otc.Value1)", span="792-792"];
m14_358 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JTokenType.Null, otc.Value2.Type)", span="793-793"];
m14_359 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JTokenType.Raw, otc.Value3.Type)", span="794-794"];
m14_360 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JTokenType.Null, otc.Value4.Type)", span="795-795"];
m14_361 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonSerializerTest.cs", label="Assert.IsNull(otc.Value5)", span="796-796"];
m14_362 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", span="783-783"];
m14_1702 [cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", span="316-316"];
m14_2061 [cluster="Unk.nameof", file="JsonSerializerTest.cs", label="Entry Unk.nameof", span=""];
m14_2444 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", span="5032-5032"];
m14_2445 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonSerializerTest.cs", label="string json = ''{Amount:123456789876543.21}''", span="5034-5034"];
m14_2446 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="5035-5035"];
m14_2447 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonSerializerTest.cs", label="reader.FloatParseHandling = FloatParseHandling.Decimal", span="5036-5036"];
m14_2449 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonSerializerTest.cs", label="Invoice i = serializer.Deserialize<Invoice>(reader)", span="5040-5040"];
m14_2448 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonSerializerTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="5038-5038"];
m14_2450 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonSerializerTest.cs", label="Assert.AreEqual(123456789876543.21m, i.Amount)", span="5041-5041"];
m14_2451 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", span="5032-5032"];
m14_2379 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", span="4910-4910"];
m14_2380 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs", label="var serializeObject = JsonConvert.SerializeObject(new TimeZoneOffsetObject\r\n            {\r\n                Offset = new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6))\r\n            })", span="4912-4915"];
m14_2381 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''{\''Offset\'':\''2000-01-01T00:00:00+06:00\''}'', serializeObject)", span="4917-4917"];
m14_2382 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(serializeObject))\r\n            {\r\n                DateParseHandling = DateParseHandling.None\r\n            }", span="4919-4922"];
m14_2383 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="4923-4923"];
m14_2384 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs", label="var deserializeObject = serializer.Deserialize<TimeZoneOffsetObject>(reader)", span="4925-4925"];
m14_2385 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs", label="Assert.AreEqual(TimeSpan.FromHours(6), deserializeObject.Offset.Offset)", span="4927-4927"];
m14_2386 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(2000, 1, 1), deserializeObject.Offset.Date)", span="4928-4928"];
m14_2387 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", span="4910-4910"];
m14_2594 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", span="5343-5343"];
m14_2595 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new EnumerableArrayPropertyClass())", span="5345-5345"];
m14_2596 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<EnumerableArrayPropertyClass>(json)", span="5346-5346"];
m14_2597 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", span="5343-5343"];
m14_863 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", span="1603-1603"];
m14_864 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="BaseWithContract baseWith = new SubWithoutContractNewProperties\r\n            {\r\n                JustAProperty = ''JustAProperty!'',\r\n                Virtual = ''Virtual!'',\r\n                VirtualWithDataMember = ''VirtualWithDataMember!'',\r\n                WithDataMember = ''WithDataMember!''\r\n            }", span="1605-1611"];
m14_865 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.JustAProperty = ''JustAProperty2!''", span="1613-1613"];
m14_866 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.Virtual = ''Virtual2!''", span="1614-1614"];
m14_867 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.VirtualWithDataMember = ''VirtualWithDataMember2!''", span="1615-1615"];
m14_868 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.WithDataMember = ''WithDataMember2!''", span="1616-1616"];
m14_869 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="string json = AssertSerializeDeserializeEqual(baseWith)", span="1618-1618"];
m14_870 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''JustAProperty'''': ''''JustAProperty2!'''',\r\n  ''''Virtual'''': ''''Virtual2!'''',\r\n  ''''VirtualWithDataMemberBase'''': ''''VirtualWithDataMember2!'''',\r\n  ''''VirtualWithDataMemberSub'''': ''''VirtualWithDataMember!'''',\r\n  ''''WithDataMemberBase'''': ''''WithDataMember2!'''',\r\n  ''''WithDataMemberSub'''': ''''WithDataMember!''''\r\n}'', json)", span="1620-1627"];
m14_871 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", span="1603-1603"];
m14_3513 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", span="7365-7365"];
m14_3514 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonSerializerTest.cs", label="string json = @''[999999999999999999999999999999999999999999999999]''", span="7367-7367"];
m14_3515 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonSerializerTest.cs", label="IList<BigInteger> l = JsonConvert.DeserializeObject<IList<BigInteger>>(json)", span="7369-7369"];
m14_3517 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<IList<long>>(json), ''Error converting value 999999999999999999999999999999999999999999999999 to type 'System.Int64'. Path '[0]', line 1, position 49.'')", span="7373-7373"];
m14_3516 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonSerializerTest.cs", label="Assert.AreEqual(BigInteger.Parse(''999999999999999999999999999999999999999999999999''), l[0])", span="7371-7371"];
m14_3518 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", span="7365-7365"];
m14_4023 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClassWithProtectedOverridePlusJsonProperty_Serialize()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClassWithProtectedOverridePlusJsonProperty_Serialize()", span="8565-8565"];
m14_4024 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClassWithProtectedOverridePlusJsonProperty_Serialize()", file="JsonSerializerTest.cs", label="JsonObjectContract c = (JsonObjectContract)DefaultContractResolver.Instance.ResolveContract(typeof(ChildClassWithProtectedOverridePlusJsonProperty))", span="8567-8567"];
m14_4025 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClassWithProtectedOverridePlusJsonProperty_Serialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, c.Properties.Count)", span="8568-8568"];
m14_4026 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClassWithProtectedOverridePlusJsonProperty_Serialize()", file="JsonSerializerTest.cs", label="var propertyValue = ''test''", span="8570-8570"];
m14_4027 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClassWithProtectedOverridePlusJsonProperty_Serialize()", file="JsonSerializerTest.cs", label="var testJson = @''{ 'MyProperty' : ''' + propertyValue + ''' }''", span="8571-8571"];
m14_4029 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClassWithProtectedOverridePlusJsonProperty_Serialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(propertyValue, testObject.GetPropertyValue(), ''MyProperty should be populated'')", span="8575-8575"];
m14_4028 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClassWithProtectedOverridePlusJsonProperty_Serialize()", file="JsonSerializerTest.cs", label="var testObject = JsonConvert.DeserializeObject<ChildClassWithProtectedOverridePlusJsonProperty>(testJson)", span="8573-8573"];
m14_4030 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClassWithProtectedOverridePlusJsonProperty_Serialize()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClassWithProtectedOverridePlusJsonProperty_Serialize()", span="8565-8565"];
m14_652 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", span="1259-1259"];
m14_653 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="JsonSerializerProxy serializerProxy = new JsonSerializerProxy(new JsonSerializerInternalReader(new JsonSerializer()))", span="1261-1261"];
m14_654 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="DefaultSerializationBinder customBinder = new DefaultSerializationBinder()", span="1263-1263"];
m14_655 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.Binder = customBinder", span="1265-1265"];
m14_656 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(customBinder, serializerProxy.Binder)", span="1266-1266"];
m14_657 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.IsInstanceOf(typeof(DefaultSerializationBinder), serializerProxy.SerializationBinder)", span="1269-1269"];
m14_658 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.SerializationBinder = customBinder", span="1271-1271"];
m14_659 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(customBinder, serializerProxy.SerializationBinder)", span="1272-1272"];
m14_660 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(customBinder, serializerProxy.Binder)", span="1276-1276"];
m14_661 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.CheckAdditionalContent = true", span="1280-1280"];
m14_662 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, serializerProxy.CheckAdditionalContent)", span="1281-1281"];
m14_663 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor", span="1283-1283"];
m14_664 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(ConstructorHandling.AllowNonPublicDefaultConstructor, serializerProxy.ConstructorHandling)", span="1284-1284"];
m14_665 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.Context = new StreamingContext(StreamingContextStates.Other)", span="1287-1287"];
m14_666 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new StreamingContext(StreamingContextStates.Other), serializerProxy.Context)", span="1288-1288"];
m14_668 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.ContractResolver = resolver", span="1292-1292"];
m14_669 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(resolver, serializerProxy.ContractResolver)", span="1293-1293"];
m14_670 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.Converters.Add(new StringEnumConverter())", span="1295-1295"];
m14_671 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, serializerProxy.Converters.Count)", span="1296-1296"];
m14_672 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.Culture = new CultureInfo(''en-nz'')", span="1298-1298"];
m14_673 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''en-NZ'', serializerProxy.Culture.ToString())", span="1299-1299"];
m14_674 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.EqualityComparer = EqualityComparer<object>.Default", span="1301-1301"];
m14_675 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(EqualityComparer<object>.Default, serializerProxy.EqualityComparer)", span="1302-1302"];
m14_676 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.DateFormatHandling = DateFormatHandling.MicrosoftDateFormat", span="1304-1304"];
m14_677 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(DateFormatHandling.MicrosoftDateFormat, serializerProxy.DateFormatHandling)", span="1305-1305"];
m14_678 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.DateFormatString = ''yyyy''", span="1307-1307"];
m14_679 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''yyyy'', serializerProxy.DateFormatString)", span="1308-1308"];
m14_680 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.DateParseHandling = DateParseHandling.None", span="1310-1310"];
m14_681 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(DateParseHandling.None, serializerProxy.DateParseHandling)", span="1311-1311"];
m14_682 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.DateTimeZoneHandling = DateTimeZoneHandling.Utc", span="1313-1313"];
m14_683 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(DateTimeZoneHandling.Utc, serializerProxy.DateTimeZoneHandling)", span="1314-1314"];
m14_684 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.DefaultValueHandling = DefaultValueHandling.IgnoreAndPopulate", span="1316-1316"];
m14_685 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(DefaultValueHandling.IgnoreAndPopulate, serializerProxy.DefaultValueHandling)", span="1317-1317"];
m14_686 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.FloatFormatHandling = FloatFormatHandling.Symbol", span="1319-1319"];
m14_687 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(FloatFormatHandling.Symbol, serializerProxy.FloatFormatHandling)", span="1320-1320"];
m14_688 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.FloatParseHandling = FloatParseHandling.Decimal", span="1322-1322"];
m14_689 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(FloatParseHandling.Decimal, serializerProxy.FloatParseHandling)", span="1323-1323"];
m14_690 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.Formatting = Formatting.Indented", span="1325-1325"];
m14_691 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(Formatting.Indented, serializerProxy.Formatting)", span="1326-1326"];
m14_692 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.MaxDepth = 9001", span="1328-1328"];
m14_693 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(9001, serializerProxy.MaxDepth)", span="1329-1329"];
m14_694 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.MissingMemberHandling = MissingMemberHandling.Error", span="1331-1331"];
m14_695 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(MissingMemberHandling.Error, serializerProxy.MissingMemberHandling)", span="1332-1332"];
m14_696 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.NullValueHandling = NullValueHandling.Ignore", span="1334-1334"];
m14_697 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(NullValueHandling.Ignore, serializerProxy.NullValueHandling)", span="1335-1335"];
m14_698 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.ObjectCreationHandling = ObjectCreationHandling.Replace", span="1337-1337"];
m14_699 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(ObjectCreationHandling.Replace, serializerProxy.ObjectCreationHandling)", span="1338-1338"];
m14_700 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.PreserveReferencesHandling = PreserveReferencesHandling.All", span="1340-1340"];
m14_701 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(PreserveReferencesHandling.All, serializerProxy.PreserveReferencesHandling)", span="1341-1341"];
m14_702 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.ReferenceLoopHandling = ReferenceLoopHandling.Ignore", span="1343-1343"];
m14_703 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(ReferenceLoopHandling.Ignore, serializerProxy.ReferenceLoopHandling)", span="1344-1344"];
m14_705 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.ReferenceResolver = referenceResolver", span="1347-1347"];
m14_706 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(referenceResolver, serializerProxy.ReferenceResolver)", span="1348-1348"];
m14_707 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.StringEscapeHandling = StringEscapeHandling.EscapeNonAscii", span="1350-1350"];
m14_708 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(StringEscapeHandling.EscapeNonAscii, serializerProxy.StringEscapeHandling)", span="1351-1351"];
m14_710 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.TraceWriter = traceWriter", span="1354-1354"];
m14_711 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(traceWriter, serializerProxy.TraceWriter)", span="1355-1355"];
m14_712 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.TypeNameAssemblyFormat = FormatterAssemblyStyle.Full", span="1359-1359"];
m14_713 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(FormatterAssemblyStyle.Full, serializerProxy.TypeNameAssemblyFormat)", span="1360-1360"];
m14_714 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(TypeNameAssemblyFormatHandling.Full, serializerProxy.TypeNameAssemblyFormatHandling)", span="1363-1363"];
m14_715 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.TypeNameAssemblyFormatHandling = TypeNameAssemblyFormatHandling.Simple", span="1365-1365"];
m14_716 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(FormatterAssemblyStyle.Simple, serializerProxy.TypeNameAssemblyFormat)", span="1367-1367"];
m14_717 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.TypeNameAssemblyFormatHandling = TypeNameAssemblyFormatHandling.Full", span="1371-1371"];
m14_718 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(TypeNameAssemblyFormatHandling.Full, serializerProxy.TypeNameAssemblyFormatHandling)", span="1372-1372"];
m14_719 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.TypeNameHandling = TypeNameHandling.All", span="1374-1374"];
m14_720 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(TypeNameHandling.All, serializerProxy.TypeNameHandling)", span="1375-1375"];
m14_667 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="CamelCasePropertyNamesContractResolver resolver = new CamelCasePropertyNamesContractResolver()", span="1291-1291"];
m14_704 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="IdReferenceResolver referenceResolver = new IdReferenceResolver()", span="1346-1346"];
m14_709 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="MemoryTraceWriter traceWriter = new MemoryTraceWriter()", span="1353-1353"];
m14_721 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", span="1259-1259"];
m14_2857 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", span="5932-5932"];
m14_2858 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JsonSerializerTest.cs", label="ConvertableIntTestClass c = new ConvertableIntTestClass\r\n            {\r\n                Integer = new ConvertibleInt(1),\r\n                NullableInteger1 = new ConvertibleInt(2),\r\n                NullableInteger2 = null\r\n            }", span="5934-5939"];
m14_2859 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="5941-5941"];
m14_2860 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Integer'''': 1,\r\n  ''''NullableInteger1'''': 2,\r\n  ''''NullableInteger2'''': null\r\n}'', json)", span="5943-5947"];
m14_2861 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", span="5932-5932"];
m14_4069 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDoubleEmptyValue()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDoubleEmptyValue()", span="8643-8643"];
m14_4070 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDoubleEmptyValue()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                () => JsonConvert.DeserializeObject<EmptyJsonValueTestClass>(''{ A: \''\'', B: 1, C: 123, D: 1.23, E: , F: null }''),\r\n                ''Unexpected character encountered while parsing value: ,. Path 'E', line 1, position 36.'')", span="8645-8647"];
m14_4071 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDoubleEmptyValue()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDoubleEmptyValue()", span="8643-8643"];
m14_1207 [cluster="Newtonsoft.Json.Tests.TestObjects.ClassWithArray.ClassWithArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ClassWithArray.ClassWithArray()", span="35-35"];
m14_2877 [cluster="Newtonsoft.Json.Tests.TestObjects.WidgetId.WidgetId()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.WidgetId.WidgetId()", span="27-27"];
m14_2575 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", span="5302-5302"];
m14_2576 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonSerializerTest.cs", label="MultiIndexSuper e = new MultiIndexSuper()", span="5304-5304"];
m14_2577 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(e, Formatting.Indented)", span="5306-5306"];
m14_2578 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{}'', json)", span="5308-5308"];
m14_2579 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", span="5302-5302"];
m14_1985 [cluster="Newtonsoft.Json.Tests.TestObjects.KeyValueId.KeyValueId()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.KeyValueId.KeyValueId()", span="27-27"];
m14_2054 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="4141-4141"];
m14_2055 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", color=red, community=0, file="JsonSerializerTest.cs", label="0: dictionary == null", span="4143-4143"];
m14_2056 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", color=red, community=0, file="JsonSerializerTest.cs", label="0: throw new ArgumentNullException(nameof(dictionary));", span="4145-4145"];
m14_2057 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", color=red, community=0, file="JsonSerializerTest.cs", label="1: dictionary", span="4148-4148"];
m14_2058 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", color=red, community=0, file="JsonSerializerTest.cs", label="1: _innerDictionary.Add(entry.Key, entry.Value)", span="4150-4150"];
m14_2059 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="4141-4141"];
m14_845 [cluster="Newtonsoft.Json.Tests.TestObjects.DictionaryKeyCast.DictionaryKeyCast(string, int)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.DictionaryKeyCast.DictionaryKeyCast(string, int)", span="34-34"];
m14_341 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqSection.FaqSection()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqSection.FaqSection()", span="711-711"];
m14_282 [cluster="Newtonsoft.Json.Tests.TestObjects.RequiredPropertyConstructorTestClass.RequiredPropertyConstructorTestClass(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.RequiredPropertyConstructorTestClass.RequiredPropertyConstructorTestClass(string)", span="29-29"];
m14_819 [cluster="Newtonsoft.Json.Tests.TestObjects.Foo1<T>.Foo1()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Foo1<T>.Foo1()", span="57-57"];
m14_1446 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", span="2734-2734"];
m14_1447 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''FirstName'''': ''''I can't be null bro!'''',\r\n  ''''MiddleName'''': null,\r\n  ''''LastName'''': null,\r\n  ''''BirthDate'''': ''''\/Date(977309755000)\/''''\r\n}''", span="2736-2741"];
m14_1448 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonSerializerTest.cs", label="RequiredMembersClass c = JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="2743-2743"];
m14_1449 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''I can't be null bro!'', c.FirstName)", span="2745-2745"];
m14_1450 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, c.MiddleName)", span="2746-2746"];
m14_1451 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, c.LastName)", span="2747-2747"];
m14_1452 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", span="2734-2734"];
m14_3175 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", span="6546-6546"];
m14_3176 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs", label="IDictionary<DateTimeOffset, int> dic1 = new Dictionary<DateTimeOffset, int>\r\n            {\r\n                { new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero), 1 },\r\n                { new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero), 2 }\r\n            }", span="6548-6552"];
m14_3177 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented)", span="6554-6554"];
m14_3178 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''2000-12-12T12:12:12+00:00'''': 1,\r\n  ''''2013-12-12T12:12:12+00:00'''': 2\r\n}'', json)", span="6556-6559"];
m14_3179 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs", label="IDictionary<DateTimeOffset, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTimeOffset, int>>(json)", span="6561-6561"];
m14_3180 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, dic2.Count)", span="6563-6563"];
m14_3181 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, dic2[new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="6564-6564"];
m14_3182 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, dic2[new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="6565-6565"];
m14_3183 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", span="6546-6546"];
m14_3526 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", span="7398-7398"];
m14_3527 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonSerializerTest.cs", label="Pair<string, int> p = new Pair<string, int>(''One'', 2)", span="7400-7400"];
m14_3528 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(p)", span="7402-7402"];
m14_3532 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(p, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = r\r\n            })", span="7410-7413"];
m14_3529 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''First'''':''''One'''',''''Second'''':2}'', json)", span="7404-7404"];
m14_3530 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonSerializerTest.cs", label="DefaultContractResolver r = new DefaultContractResolver()", span="7407-7407"];
m14_3531 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonSerializerTest.cs", label="r.IgnoreSerializableAttribute = false", span="7408-7408"];
m14_3533 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''First'''':''''One'''',''''Second'''':2}'', json)", span="7415-7415"];
m14_3534 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", span="7398-7398"];
m14_3075 [cluster="Unk.WriteValue", file="JsonSerializerTest.cs", label="Entry Unk.WriteValue", span=""];
m14_3378 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", span="7022-7022"];
m14_3379 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="JsonSerializerTest.cs", label="string json =\r\n                JsonConvert.SerializeObject(new KeyValuePair<int, string>(123, ''test value''), Formatting.Indented, new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new CamelCasePropertyNamesContractResolver()\r\n                })", span="7024-7028"];
m14_3380 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''key'''': 123,\r\n  ''''value'''': ''''test value''''\r\n}'', json)", span="7030-7033"];
m14_3381 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", span="7022-7022"];
m14_3368 [cluster="System.Uri.Uri(string, System.UriKind)", file="JsonSerializerTest.cs", label="Entry System.Uri.Uri(string, System.UriKind)", span="0-0"];
m14_1914 [cluster="Newtonsoft.Json.Tests.TestObjects.Bar.Bar()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Bar.Bar()", span="27-27"];
m14_1460 [cluster="string.StartsWith(string)", file="JsonSerializerTest.cs", label="Entry string.StartsWith(string)", span="0-0"];
m14_1986 [cluster="Newtonsoft.Json.Tests.TestObjects.ThisGenericTest<T>.Add(T)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ThisGenericTest<T>.Add(T)", span="36-36"];
m14_1791 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", span="3527-3527"];
m14_1792 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="JsonSerializerTest.cs", label="string json = @''[]''", span="3529-3529"];
m14_1793 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => { JsonConvert.DeserializeObject<DynamicDictionary>(json); },\r\n                @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'Newtonsoft.Json.Tests.Linq.DynamicDictionary' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'')", span="3531-3535"];
m14_1794 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", span="3527-3527"];
m14_1298 [cluster="Newtonsoft.Json.Tests.TestObjects.ArgumentConverterPrecedenceClassConverter.ArgumentConverterPrecedenceClassConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ArgumentConverterPrecedenceClassConverter.ArgumentConverterPrecedenceClassConverter()", span="27-27"];
m14_2632 [cluster="Newtonsoft.Json.Tests.TestObjects.ImplementInterfaceObject.ImplementInterfaceObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ImplementInterfaceObject.ImplementInterfaceObject()", span="29-29"];
m14_2667 [cluster="Newtonsoft.Json.Tests.TestObjects.CollectionClassAttributeDerived.CollectionClassAttributeDerived()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CollectionClassAttributeDerived.CollectionClassAttributeDerived()", span="31-31"];
m14_2071 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", span="0-0"];
m14_2378 [cluster="Newtonsoft.Json.Tests.TestObjects.StructWithAttribute.StructWithAttribute()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.StructWithAttribute.StructWithAttribute()", span="28-28"];
m14_806 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", span="1535-1535"];
m14_807 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs", label="var json = @''{''''foo'''':{''''bar'''':''''value''''}}''", span="1537-1537"];
m14_808 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs", label="var deserialized = JsonConvert.DeserializeObject<FooBar1>(json)", span="1538-1538"];
m14_809 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(deserialized.foo)", span="1539-1539"];
m14_810 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value'', deserialized.foo.bar)", span="1540-1540"];
m14_811 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", span="1535-1535"];
m14_922 [cluster="Newtonsoft.Json.Linq.JObject.Properties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.Properties()", span="248-248"];
m14_2062 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", span="4185-4185"];
m14_2063 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", color=red, community=0, file="JsonSerializerTest.cs", label="0: ((IDictionary<string, T>)_innerDictionary).Add(item)", span="4187-4187"];
m14_2064 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", span="4185-4185"];
m14_2305 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", span="4744-4744"];
m14_2306 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonSerializerTest.cs", label="string json = @''{'value':9.9}''", span="4746-4746"];
m14_2307 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonSerializerTest.cs", label="var dic = JsonConvert.DeserializeObject<IDictionary<string, object>>(\r\n                json, new JsonSerializerSettings\r\n                {\r\n                    FloatParseHandling = FloatParseHandling.Decimal\r\n                })", span="4748-4752"];
m14_2308 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(decimal), dic[''value''].GetType())", span="4754-4754"];
m14_2309 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonSerializerTest.cs", label="Assert.AreEqual(9.9m, dic[''value''])", span="4755-4755"];
m14_2310 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", span="4744-4744"];
m14_2436 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", span="5018-5018"];
m14_2437 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="JsonSerializerTest.cs", label="decimal d = JsonConvert.DeserializeObject<decimal>(''123456789876543.21'')", span="5020-5020"];
m14_2438 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="JsonSerializerTest.cs", label="Assert.AreEqual(123456789876543.21m, d)", span="5021-5021"];
m14_2439 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", span="5018-5018"];
m14_2526 [cluster="Newtonsoft.Json.Tests.TestObjects.DecimalTest.DecimalTest(decimal)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.DecimalTest.DecimalTest(decimal)", span="34-34"];
m14_212 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="618-618"];
m14_2215 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", span="4604-4604"];
m14_2216 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs", label="XNodeTestObject testObject = new XNodeTestObject()", span="4606-4606"];
m14_2217 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs", label="testObject.Document = XDocument.Parse(''<root>hehe, root</root>'')", span="4607-4607"];
m14_2218 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs", label="testObject.Element = XElement.Parse(@''<fifth xmlns:json=''''http://json.org'''' json:Awesome=''''true''''>element</fifth>'')", span="4608-4608"];
m14_2219 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(testObject, Formatting.Indented)", span="4610-4610"];
m14_2223 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testObject.Document.ToString(), newTestObject.Document.ToString())", span="4626-4626"];
m14_2224 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testObject.Element.ToString(), newTestObject.Element.ToString())", span="4627-4627"];
m14_2220 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs", label="string expected = @''{\r\n  ''''Document'''': {\r\n    ''''root'''': ''''hehe, root''''\r\n  },\r\n  ''''Element'''': {\r\n    ''''fifth'''': {\r\n      ''''@xmlns:json'''': ''''http://json.org'''',\r\n      ''''@json:Awesome'''': ''''true'''',\r\n      ''''#text'''': ''''element''''\r\n    }\r\n  }\r\n}''", span="4611-4622"];
m14_2221 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(expected, json)", span="4623-4623"];
m14_2222 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs", label="XNodeTestObject newTestObject = JsonConvert.DeserializeObject<XNodeTestObject>(json)", span="4625-4625"];
m14_2225 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs", label="Assert.IsNull(newTestObject.Element.Parent)", span="4629-4629"];
m14_2226 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", span="4604-4604"];
m14_1002 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", span="1872-1872"];
m14_1003 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonSerializerTest.cs", label="string value = @''{''''Name'''':''''Orange'''', ''''Hash'''':{''''ExpiryDate'''':''''01/24/2010 12:00:00'''',''''UntypedArray'''':[''''01/24/2010 12:00:00'''']}}''", span="1874-1874"];
m14_1004 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonSerializerTest.cs", label="TypedSubHashtable p = JsonConvert.DeserializeObject(value, typeof(TypedSubHashtable)) as TypedSubHashtable", span="1876-1876"];
m14_1005 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''01/24/2010 12:00:00'', p.Hash[''ExpiryDate''].ToString())", span="1878-1878"];
m14_1006 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''[\r\n  ''''01/24/2010 12:00:00''''\r\n]'', p.Hash[''UntypedArray''].ToString())", span="1879-1881"];
m14_1007 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", span="1872-1872"];
m14_2068 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", span="4195-4195"];
m14_2069 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", color=red, community=0, file="JsonSerializerTest.cs", label="0: _innerDictionary.Clear()", span="4197-4197"];
m14_2070 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", span="4195-4195"];
m14_993 [cluster="Newtonsoft.Json.Tests.TestObjects.MethodExecutorObject.MethodExecutorObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.MethodExecutorObject.MethodExecutorObject()", span="27-27"];
m14_2613 [cluster="DataContractSerializer.cstr", file="JsonSerializerTest.cs", label="Entry DataContractSerializer.cstr", span=""];
m14_1987 [cluster="Newtonsoft.Json.Tests.TestObjects.ThisGenericTest<T>.ToJson()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ThisGenericTest<T>.ToJson()", span="65-65"];
m14_1356 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", span="2575-2575"];
m14_1357 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="ClassAndMemberConverterClass c1 = new ClassAndMemberConverterClass()", span="2577-2577"];
m14_1358 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="c1.DefaultConverter = new ConverterPrecedenceClass(''DefaultConverterValue'')", span="2578-2578"];
m14_1359 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="c1.MemberConverter = new ConverterPrecedenceClass(''MemberConverterValue'')", span="2579-2579"];
m14_1360 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c1, new ArgumentConverterPrecedenceClassConverter())", span="2581-2581"];
m14_1361 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''DefaultConverter'''':[''''Class'''',''''DefaultConverterValue''''],''''MemberConverter'''':[''''Member'''',''''MemberConverterValue'''']}'', json)", span="2582-2582"];
m14_1362 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="ClassAndMemberConverterClass c2 = JsonConvert.DeserializeObject<ClassAndMemberConverterClass>(json, new ArgumentConverterPrecedenceClassConverter())", span="2584-2584"];
m14_1363 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''DefaultConverterValue'', c2.DefaultConverter.TestValue)", span="2586-2586"];
m14_1364 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''MemberConverterValue'', c2.MemberConverter.TestValue)", span="2587-2587"];
m14_1365 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", span="2575-2575"];
m14_1853 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", span="3630-3630"];
m14_1854 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:0}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(PORTABLE || DNXCORE50 || PORTABLE40) || NETSTANDARD1_3\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                });\r\n            }, @''Error setting value to 'ReadTimeout' on 'System.IO.MemoryStream'.'')", span="3632-3643"];
m14_1855 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", span="3630-3630"];
m14_3096 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", span="6403-6403"];
m14_3097 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs", label="MemoryStream ms = new MemoryStream()", span="6405-6405"];
m14_3098 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs", label="BsonWriter writer = new BsonWriter(ms)", span="6406-6406"];
m14_3102 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs", label="byte[] data = ms.ToArray()", span="6411-6411"];
m14_3099 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs", label="writer.WriteStartArray()", span="6407-6407"];
m14_3100 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs", label="writer.WriteValue(''2000-01-02T03:04:05+06:00'')", span="6408-6408"];
m14_3101 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs", label="writer.WriteEndArray()", span="6409-6409"];
m14_3103 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs", label="BsonReader reader = new BsonReader(new MemoryStream(data))\r\n            {\r\n                ReadRootValueAsArray = true\r\n            }", span="6412-6415"];
m14_3104 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs", label="JArray a = (JArray)JArray.ReadFrom(reader)", span="6417-6417"];
m14_3105 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs", label="JValue v = (JValue)a[0]", span="6418-6418"];
m14_3107 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''[\r\n  ''''2000-01-02T03:04:05+06:00''''\r\n]'', a.ToString())", span="6421-6423"];
m14_3106 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(string), v.Value.GetType())", span="6420-6420"];
m14_3108 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", span="6403-6403"];
m14_332 [cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0"];
m14_1380 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", span="2608-2608"];
m14_1381 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs", label="string json", span="2610-2610"];
m14_1382 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject((int?)null)", span="2612-2612"];
m14_1383 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''null'', json)", span="2613-2613"];
m14_1384 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject((int?)1)", span="2615-2615"];
m14_1385 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''1'', json)", span="2616-2616"];
m14_1386 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", span="2608-2608"];
m14_1703 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", span="3355-3355"];
m14_1704 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="Content content = new Content\r\n            {\r\n                Text = ''Blah, blah, blah'',\r\n                Children = new List<Content>\r\n                {\r\n                    new Content { Text = ''First'' },\r\n                    new Content { Text = ''Second'' }\r\n                }\r\n            }", span="3357-3365"];
m14_1705 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(content, Formatting.Indented)", span="3367-3367"];
m14_1706 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Children'''': [\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''First''''\r\n    },\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''Second''''\r\n    }\r\n  ],\r\n  ''''Text'''': ''''Blah, blah, blah''''\r\n}'', json)", span="3369-3381"];
m14_1707 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", span="3355-3355"];
m14_3587 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", span="7561-7561"];
m14_3588 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", file="JsonSerializerTest.cs", label="string json = @''{''''something_else'''':''''my value''''}''", span="7563-7563"];
m14_3589 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", file="JsonSerializerTest.cs", label="var foo = JsonConvert.DeserializeObject<FooConstructor>(json)", span="7564-7564"];
m14_3590 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''my value'', foo.Bar)", span="7565-7565"];
m14_3591 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", span="7561-7561"];
m14_2119 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", span="4349-4349"];
m14_2120 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="Person person = new Person()", span="4351-4351"];
m14_2121 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="person.BirthDate = new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc)", span="4352-4352"];
m14_2122 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="person.LastModified = person.BirthDate", span="4353-4353"];
m14_2123 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="person.Department = ''Department!''", span="4354-4354"];
m14_2124 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="person.Name = ''Name!''", span="4355-4355"];
m14_2128 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="ISerializableTestObject o = new ISerializableTestObject(''String!'', int.MinValue, dateTimeOffset, person)", span="4365-4365"];
m14_2125 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="DateTimeOffset dateTimeOffset = new DateTimeOffset(2000, 12, 20, 22, 59, 59, TimeSpan.FromHours(2))", span="4357-4357"];
m14_2126 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="string dateTimeOffsetText", span="4358-4358"];
m14_2134 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dateTimeOffset, o2._dateTimeOffsetValue)", span="4396-4396"];
m14_2127 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="dateTimeOffsetText = @''2000-12-20T22:59:59+02:00''", span="4360-4360"];
m14_2130 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''stringValue'''': ''''String!'''',\r\n  ''''intValue'''': -2147483648,\r\n  ''''dateTimeOffsetValue'''': '''''' + dateTimeOffsetText + @'''''',\r\n  ''''personValue'''': {\r\n    ''''Name'''': ''''Name!'''',\r\n    ''''BirthDate'''': ''''2000-01-01T01:01:01Z'''',\r\n    ''''LastModified'''': ''''2000-01-01T01:01:01Z''''\r\n  },\r\n  ''''nullPersonValue'''': null,\r\n  ''''nullableInt'''': null,\r\n  ''''booleanValue'''': false,\r\n  ''''byteValue'''': 0,\r\n  ''''charValue'''': ''''\u0000'''',\r\n  ''''dateTimeValue'''': ''''0001-01-01T00:00:00Z'''',\r\n  ''''decimalValue'''': 0.0,\r\n  ''''shortValue'''': 0,\r\n  ''''longValue'''': 0,\r\n  ''''sbyteValue'''': 0,\r\n  ''''floatValue'''': 0.0,\r\n  ''''ushortValue'''': 0,\r\n  ''''uintValue'''': 0,\r\n  ''''ulongValue'''': 0\r\n}'', json)", span="4368-4391"];
m14_2129 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="4367-4367"];
m14_2131 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="ISerializableTestObject o2 = JsonConvert.DeserializeObject<ISerializableTestObject>(json)", span="4393-4393"];
m14_2132 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''String!'', o2._stringValue)", span="4394-4394"];
m14_2133 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(int.MinValue, o2._intValue)", span="4395-4395"];
m14_2135 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Name!'', o2._personValue.Name)", span="4397-4397"];
m14_2136 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, o2._nullPersonValue)", span="4398-4398"];
m14_2137 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, o2._nullableInt)", span="4399-4399"];
m14_2138 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", span="4349-4349"];
m14_2839 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", span="5891-5891"];
m14_2840 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs", label="Bb b = new Bb()", span="5893-5893"];
m14_2841 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs", label="b.no = true", span="5894-5894"];
m14_2842 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs", label="Aa a = b", span="5895-5895"];
m14_2844 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(b)", span="5898-5898"];
m14_2843 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs", label="a.no = int.MaxValue", span="5896-5896"];
m14_2845 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''no'''':true}'', json)", span="5900-5900"];
m14_2846 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs", label="Bb b2 = JsonConvert.DeserializeObject<Bb>(json)", span="5902-5902"];
m14_2847 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, b2.no)", span="5904-5904"];
m14_2848 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", span="5891-5891"];
m14_1437 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", span="2708-2708"];
m14_1438 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs", label="RequiredMembersClass c = new RequiredMembersClass()\r\n            {\r\n                BirthDate = new DateTime(2000, 12, 20, 10, 55, 55, DateTimeKind.Utc),\r\n                FirstName = ''Bob'',\r\n                LastName = ''Smith'',\r\n                MiddleName = ''Cosmo''\r\n            }", span="2710-2716"];
m14_1439 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="2718-2718"];
m14_1440 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''FirstName'''': ''''Bob'''',\r\n  ''''MiddleName'''': ''''Cosmo'''',\r\n  ''''LastName'''': ''''Smith'''',\r\n  ''''BirthDate'''': ''''2000-12-20T10:55:55Z''''\r\n}'', json)", span="2720-2725"];
m14_1441 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs", label="RequiredMembersClass c2 = JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="2727-2727"];
m14_1442 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Bob'', c2.FirstName)", span="2729-2729"];
m14_1443 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(2000, 12, 20, 10, 55, 55, DateTimeKind.Utc), c2.BirthDate)", span="2730-2730"];
m14_1444 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", span="2708-2708"];
m14_918 [cluster="Unk.WriteObject", file="JsonSerializerTest.cs", label="Entry Unk.WriteObject", span=""];
m14_4063 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDecimalEmptyValue()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDecimalEmptyValue()", span="8635-8635"];
m14_4064 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDecimalEmptyValue()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                () => JsonConvert.DeserializeObject<EmptyJsonValueTestClass>(''{ A: \''\'', B: 1, C: 123, D: , E: 3.45, F: null }''),\r\n                ''Unexpected character encountered while parsing value: ,. Path 'D', line 1, position 27.'')", span="8637-8639"];
m14_4065 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDecimalEmptyValue()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDecimalEmptyValue()", span="8635-8635"];
m14_1379 [cluster="Newtonsoft.Json.Tests.TestObjects.GenericImpl.GenericImpl()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.GenericImpl.GenericImpl()", span="27-27"];
m14_2744 [cluster="Newtonsoft.Json.JsonTextWriter.Flush()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.Flush()", span="172-172"];
m14_2014 [cluster="Newtonsoft.Json.Tests.TestObjects.B.B()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.B.B()", span="28-28"];
m14_3110 [cluster="Newtonsoft.Json.Bson.BsonWriter.WriteStartArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteStartArray()", span="144-144"];
m14_2009 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", span="4001-4001"];
m14_2010 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonSerializerTest.cs", label="B value = new B()", span="4003-4003"];
m14_2011 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(value, Formatting.Indented)", span="4004-4004"];
m14_2012 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''B2'''': null,\r\n  ''''A1'''': null,\r\n  ''''B3'''': null,\r\n  ''''A2'''': null\r\n}'', json)", span="4006-4011"];
m14_2013 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", span="4001-4001"];
m14_1604 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", span="3112-3112"];
m14_1605 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonSerializerTest.cs", label="string classRef = typeof(JsonPropertyWithHandlingValues).FullName", span="3114-3114"];
m14_1606 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonPropertyWithHandlingValues o = new JsonPropertyWithHandlingValues();\r\n                o.ReferenceLoopHandlingErrorProperty = o;\r\n\r\n                JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings { ReferenceLoopHandling = ReferenceLoopHandling.Ignore });\r\n            }, ''Self referencing loop detected for property 'ReferenceLoopHandlingErrorProperty' with type ''' + classRef + '''. Path ''.'')", span="3116-3122"];
m14_1607 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", span="3112-3112"];
m14_1453 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", span="2751-2751"];
m14_1454 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''FirstName'''': null,\r\n  ''''MiddleName'''': null,\r\n  ''''LastName'''': null,\r\n  ''''BirthDate'''': ''''\/Date(977309755000)\/''''\r\n}''", span="2755-2760"];
m14_1455 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="2762-2762"];
m14_1456 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs", label="Assert.Fail()", span="2763-2763"];
m14_1457 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs", label=JsonSerializationException, span="2765-2765"];
m14_1458 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs", label="Assert.IsTrue(ex.Message.StartsWith(''Required property 'FirstName' expects a value but got null. Path ''''))", span="2767-2767"];
m14_1459 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", span="2751-2751"];
m14_317 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImmutableStructWithConstructorAttribute.ImmutableStructWithConstructorAttribute(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImmutableStructWithConstructorAttribute.ImmutableStructWithConstructorAttribute(string)", span="643-643"];
m14_318 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImmutableStructWithConstructorAttribute.ImmutableStructWithConstructorAttribute(string)", file="JsonSerializerTest.cs", label="Value = value", span="645-645"];
m14_319 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImmutableStructWithConstructorAttribute.ImmutableStructWithConstructorAttribute(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImmutableStructWithConstructorAttribute.ImmutableStructWithConstructorAttribute(string)", span="643-643"];
m14_3451 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", span="7218-7218"];
m14_3452 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonSerializerTest.cs", label="CultureInfo culture = new CultureInfo(''en-NZ'')", span="7220-7220"];
m14_3453 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonSerializerTest.cs", label="culture.DateTimeFormat.AMDesignator = ''a.m.''", span="7221-7221"];
m14_3454 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonSerializerTest.cs", label="culture.DateTimeFormat.PMDesignator = ''p.m.''", span="7222-7222"];
m14_3456 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(dates, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatString = ''yyyy tt'',\r\n                Culture = culture\r\n            })", span="7230-7234"];
m14_3455 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonSerializerTest.cs", label="IList<object> dates = new List<object>\r\n            {\r\n                new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc),\r\n                new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1))\r\n            }", span="7224-7228"];
m14_3457 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''[\r\n  ''''2000 p.m.'''',\r\n  ''''2000 p.m.''''\r\n]'', json)", span="7236-7239"];
m14_3458 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", span="7218-7218"];
m14_62 [cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="338-338"];
m14_2793 [cluster="Newtonsoft.Json.Tests.TestObjects.StaticTestClass.StaticTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.StaticTestClass.StaticTestClass()", span="28-28"];
m14_192 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull_NullValueHandlingIgnore()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull_NullValueHandlingIgnore()", span="407-407"];
m14_193 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull_NullValueHandlingIgnore()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new Binding_DisallowNull(), new JsonSerializerSettings\r\n            {\r\n                NullValueHandling = NullValueHandling.Ignore\r\n            })", span="409-412"];
m14_194 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull_NullValueHandlingIgnore()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''{}'', json)", span="413-413"];
m14_195 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull_NullValueHandlingIgnore()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull_NullValueHandlingIgnore()", span="407-407"];
m14_903 [cluster="Newtonsoft.Json.Tests.TestObjects.SubWithContractVirtualProperties.SubWithContractVirtualProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.SubWithContractVirtualProperties.SubWithContractVirtualProperties()", span="31-31"];
m14_84 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ConvertDateTimeToJavaScriptTicks(System.DateTime, System.TimeSpan)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.ConvertDateTimeToJavaScriptTicks(System.DateTime, System.TimeSpan)", span="179-179"];
m14_2065 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", span="4190-4190"];
m14_2066 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", color=red, community=0, file="JsonSerializerTest.cs", label="0: _innerDictionary.Add(key, value)", span="4192-4192"];
m14_2067 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", span="4190-4190"];
m14_850 [cluster="System.IO.StreamWriter.StreamWriter(System.IO.Stream)", file="JsonSerializerTest.cs", label="Entry System.IO.StreamWriter.StreamWriter(System.IO.Stream)", span="0-0"];
m14_2105 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m14_1900 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", span="3736-3736"];
m14_1901 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="Foo f = new Foo()", span="3738-3738"];
m14_1902 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="f.Bars.Add(new Bar { Id = 0 })", span="3739-3739"];
m14_1903 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="f.Bars.Add(new Bar { Id = 1 })", span="3740-3740"];
m14_1904 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="f.Bars.Add(new Bar { Id = 2 })", span="3741-3741"];
m14_1905 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(f, Formatting.Indented)", span="3743-3743"];
m14_1906 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Bars'''': [\r\n    0,\r\n    1,\r\n    2\r\n  ]\r\n}'', json)", span="3744-3750"];
m14_1907 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="Foo newFoo = JsonConvert.DeserializeObject<Foo>(json)", span="3752-3752"];
m14_1908 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, newFoo.Bars.Count)", span="3753-3753"];
m14_1909 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, newFoo.Bars[0].Id)", span="3754-3754"];
m14_1910 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, newFoo.Bars[1].Id)", span="3755-3755"];
m14_1911 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, newFoo.Bars[2].Id)", span="3756-3756"];
m14_1912 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", span="3736-3736"];
m14_1422 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", span="2686-2686"];
m14_1423 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="string boolRef = typeof(bool).AssemblyQualifiedName", span="2688-2688"];
m14_1424 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="TypeClass typeClass = new TypeClass { TypeProperty = typeof(bool) }", span="2689-2689"];
m14_1426 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''TypeProperty'''':'''''' + boolRef + @''''''}'', json)", span="2692-2692"];
m14_1425 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(typeClass)", span="2691-2691"];
m14_1427 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="TypeClass typeClass2 = JsonConvert.DeserializeObject<TypeClass>(json)", span="2694-2694"];
m14_1428 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(bool), typeClass2.TypeProperty)", span="2695-2695"];
m14_1429 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="string jsonSerializerTestRef = typeof(JsonSerializerTest).AssemblyQualifiedName", span="2697-2697"];
m14_1430 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="typeClass = new TypeClass { TypeProperty = typeof(JsonSerializerTest) }", span="2698-2698"];
m14_1432 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''TypeProperty'''':'''''' + jsonSerializerTestRef + @''''''}'', json)", span="2701-2701"];
m14_1431 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(typeClass)", span="2700-2700"];
m14_1433 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="typeClass2 = JsonConvert.DeserializeObject<TypeClass>(json)", span="2703-2703"];
m14_1434 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(JsonSerializerTest), typeClass2.TypeProperty)", span="2704-2704"];
m14_1435 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", span="2686-2686"];
m14_3113 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", span="126-126"];
m14_104 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_EmptyString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_EmptyString()", span="269-269"];
m14_105 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_EmptyString()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<IList<bool>>(@''['']''),\r\n                @''Error converting value {null} to type 'System.Boolean'. Path '[0]', line 1, position 3.'')", span="271-273"];
m14_106 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_EmptyString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_EmptyString()", span="269-269"];
m14_3784 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", span="8026-8026"];
m14_3785 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", color=red, community=0, file="JsonSerializerTest.cs", label="0: throw new InvalidCastException();", span="8028-8028"];
m14_3786 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", span="8026-8026"];
m14_3464 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", span="7263-7263"];
m14_3465 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs", label="CultureInfo culture = new CultureInfo(''en-NZ'')", span="7265-7265"];
m14_3466 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs", label="culture.DateTimeFormat.AMDesignator = ''a.m.''", span="7266-7266"];
m14_3467 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs", label="culture.DateTimeFormat.PMDesignator = ''p.m.''", span="7267-7267"];
m14_3471 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs", label="JsonSerializer serializer = JsonSerializer.Create(new JsonSerializerSettings\r\n            {\r\n                DateFormatString = ''yyyy tt'',\r\n                Culture = culture,\r\n                Formatting = Formatting.Indented\r\n            })", span="7278-7283"];
m14_3468 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs", label="IList<object> dates = new List<object>\r\n            {\r\n                new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc),\r\n                new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1))\r\n            }", span="7269-7273"];
m14_3469 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs", label="StringWriter sw = new StringWriter()", span="7275-7275"];
m14_3472 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs", label="serializer.Serialize(jsonWriter, dates)", span="7284-7284"];
m14_3470 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs", label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="7276-7276"];
m14_3476 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs", label="string json = sw.ToString()", span="7290-7290"];
m14_3473 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs", label="Assert.IsNull(jsonWriter.DateFormatString)", span="7286-7286"];
m14_3474 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs", label="Assert.AreEqual(CultureInfo.InvariantCulture, jsonWriter.Culture)", span="7287-7287"];
m14_3475 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs", label="Assert.AreEqual(Formatting.None, jsonWriter.Formatting)", span="7288-7288"];
m14_3477 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''[\r\n  ''''2000 p.m.'''',\r\n  ''''2000 p.m.''''\r\n]'', json)", span="7292-7295"];
m14_3478 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", span="7263-7263"];
m14_377 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObservableCollection()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObservableCollection()", span="828-828"];
m14_378 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObservableCollection()", file="JsonSerializerTest.cs", label="ObservableCollection<string> c1 = new ObservableCollection<string> { ''1'', ''2'' }", span="830-830"];
m14_379 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObservableCollection()", file="JsonSerializerTest.cs", label="string output = JsonConvert.SerializeObject(c1)", span="832-832"];
m14_380 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObservableCollection()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''[\''1\'',\''2\'']'', output)", span="833-833"];
m14_381 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObservableCollection()", file="JsonSerializerTest.cs", label="ObservableCollection<string> c2 = JsonConvert.DeserializeObject<ObservableCollection<string>>(output)", span="835-835"];
m14_382 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObservableCollection()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, c2.Count)", span="836-836"];
m14_383 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObservableCollection()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''1'', c2[0])", span="837-837"];
m14_384 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObservableCollection()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''2'', c2[1])", span="838-838"];
m14_385 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObservableCollection()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObservableCollection()", span="828-828"];
m14_1770 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", span="3494-3494"];
m14_1771 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="JsonSerializerTest.cs", label="string json = @''[]''", span="3496-3496"];
m14_1772 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Dictionary<string, string>>(json); }, @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'System.Collections.Generic.Dictionary`2[System.String,System.String]' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'')", span="3498-3500"];
m14_1773 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", span="3494-3494"];
m14_2557 [cluster="Newtonsoft.Json.Tests.TestObjects.ComplexItem.ComplexItem()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ComplexItem.ComplexItem()", span="29-29"];
m14_300 [cluster="System.Collections.Generic.List<T>.List()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m14_570 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.DefaultSerializationBinder()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Serialization.DefaultSerializationBinder.DefaultSerializationBinder()", span="50-50"];
m14_2646 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", span="5475-5475"];
m14_2647 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs", label="NonDefaultConstructorWithReadOnlyDictionaryProperty c1 = new NonDefaultConstructorWithReadOnlyDictionaryProperty(''blah'')", span="5477-5477"];
m14_2648 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs", label="c1.Categories.Add(''one'', 1)", span="5478-5478"];
m14_2649 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs", label="c1.Categories.Add(''two'', 2)", span="5479-5479"];
m14_2650 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="5481-5481"];
m14_2653 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c1.Title, c2.Title)", span="5491-5491"];
m14_2654 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c1.Categories.Count, c2.Categories.Count)", span="5492-5492"];
m14_2651 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Title'''': ''''blah'''',\r\n  ''''Categories'''': {\r\n    ''''one'''': 1,\r\n    ''''two'''': 2\r\n  }\r\n}'', json)", span="5482-5488"];
m14_2652 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs", label="NonDefaultConstructorWithReadOnlyDictionaryProperty c2 = JsonConvert.DeserializeObject<NonDefaultConstructorWithReadOnlyDictionaryProperty>(json)", span="5490-5490"];
m14_2655 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, c2.Categories[''one''])", span="5493-5493"];
m14_2656 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, c2.Categories[''two''])", span="5494-5494"];
m14_2657 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", span="5475-5475"];
m14_3329 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinishCheckNotRequested()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinishCheckNotRequested()", span="6939-6939"];
m14_3330 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinishCheckNotRequested()", file="JsonSerializerTest.cs", label="string json = @''{ ''''MyProperty'''':{''''Key'''':''''Value''''}} A bunch of junk at the end of the json''", span="6941-6941"];
m14_3331 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinishCheckNotRequested()", file="JsonSerializerTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="6943-6943"];
m14_3332 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinishCheckNotRequested()", file="JsonSerializerTest.cs", label="var reader = new JsonTextReader(new StringReader(json))", span="6945-6945"];
m14_3333 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinishCheckNotRequested()", file="JsonSerializerTest.cs", label="ItemConverterTestClass mt = (ItemConverterTestClass)serializer.Deserialize(reader, typeof(ItemConverterTestClass))", span="6947-6947"];
m14_3334 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinishCheckNotRequested()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, mt.MyProperty.Count)", span="6948-6948"];
m14_3335 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinishCheckNotRequested()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinishCheckNotRequested()", span="6939-6939"];
m14_2580 [cluster="Newtonsoft.Json.Tests.TestObjects.MultiIndexSuper.MultiIndexSuper()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.MultiIndexSuper.MultiIndexSuper()", span="27-27"];
m14_578 [cluster="Newtonsoft.Json.Serialization.MemoryTraceWriter.MemoryTraceWriter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Serialization.MemoryTraceWriter.MemoryTraceWriter()", span="30-30"];
m14_44 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="JsonSerializerTest.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m14_3638 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", span="7741-7741"];
m14_3639 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", color=red, community=0, file="JsonSerializerTest.cs", label="0: string str = value as string", span="7743-7743"];
m14_3641 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", color=red, community=0, file="JsonSerializerTest.cs", label="0: return base.ConvertFrom(context, culture, value);", span="7746-7746"];
m14_3645 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", color=red, community=0, file="JsonSerializerTest.cs", label="0: culture == null", span="7753-7753"];
m14_3652 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", color=red, community=0, file="JsonSerializerTest.cs", label="0: numArray[i] = (int)converter.ConvertFromString(context, culture, strArray[i])", span="7762-7762"];
m14_3640 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", color=red, community=0, file="JsonSerializerTest.cs", label="0: str == null", span="7744-7744"];
m14_3642 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", color=red, community=0, file="JsonSerializerTest.cs", label="0: string str2 = str.Trim()", span="7748-7748"];
m14_3643 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", color=red, community=0, file="JsonSerializerTest.cs", label="0: str2.Length == 0", span="7749-7749"];
m14_3647 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", color=red, community=0, file="JsonSerializerTest.cs", label="0: string[] strArray = str2.Split(',')", span="7757-7757"];
m14_3644 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", color=red, community=0, file="JsonSerializerTest.cs", label="0: return null;", span="7751-7751"];
m14_3646 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", color=red, community=0, file="JsonSerializerTest.cs", label="0: culture = CultureInfo.CurrentCulture", span="7755-7755"];
m14_3648 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", color=red, community=0, file="JsonSerializerTest.cs", label="0: int[] numArray = new int[strArray.Length]", span="7758-7758"];
m14_3649 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", color=red, community=0, file="JsonSerializerTest.cs", label="0: TypeConverter converter = TypeDescriptor.GetConverter(typeof(int))", span="7759-7759"];
m14_3651 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", color=red, community=0, file="JsonSerializerTest.cs", label="0: i < numArray.Length", span="7760-7760"];
m14_3654 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", color=red, community=0, file="JsonSerializerTest.cs", label="0: numArray.Length == 2", span="7764-7764"];
m14_3655 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", color=red, community=0, file="JsonSerializerTest.cs", label="0: return new TypeConverterSize(numArray[0], numArray[1]);", span="7766-7766"];
m14_3650 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", color=red, community=0, file="JsonSerializerTest.cs", label="0: int i = 0", span="7760-7760"];
m14_3653 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", color=red, community=0, file="JsonSerializerTest.cs", label="0: i++", span="7760-7760"];
m14_3656 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", color=red, community=0, file="JsonSerializerTest.cs", label="0: throw new ArgumentException(''Bad format.'');", span="7769-7769"];
m14_3657 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", span="7741-7741"];
m14_2182 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", span="4520-4520"];
m14_2183 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="AATestClass myA = JsonConvert.DeserializeObject<AATestClass>(\r\n                @''{\r\n  ''''AA_field1'''': 2,\r\n  ''''AA_field2'''': 2,\r\n  ''''AA_property1'''': 2,\r\n  ''''AA_property2'''': 2,\r\n  ''''AA_property3'''': 2,\r\n  ''''AA_property4'''': 2,\r\n  ''''AA_property5'''': 2,\r\n  ''''AA_property6'''': 2\r\n}'')", span="4522-4532"];
m14_2184 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AATestClass).GetField(''AA_field1'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4534-4534"];
m14_2185 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AATestClass).GetField(''AA_field2'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4535-4535"];
m14_2186 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AATestClass).GetProperty(''AA_property1'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4536-4536"];
m14_2187 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AATestClass).GetProperty(''AA_property2'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4537-4537"];
m14_2188 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AATestClass).GetProperty(''AA_property3'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4538-4538"];
m14_2189 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AATestClass).GetProperty(''AA_property4'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4539-4539"];
m14_2190 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AATestClass).GetProperty(''AA_property5'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4540-4540"];
m14_2191 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AATestClass).GetProperty(''AA_property6'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4541-4541"];
m14_2192 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="BBTestClass myB = JsonConvert.DeserializeObject<BBTestClass>(\r\n                @''{\r\n  ''''BB_field1'''': 4,\r\n  ''''BB_field2'''': 4,\r\n  ''''AA_field1'''': 3,\r\n  ''''AA_field2'''': 3,\r\n  ''''AA_property1'''': 2,\r\n  ''''AA_property2'''': 2,\r\n  ''''AA_property3'''': 2,\r\n  ''''AA_property4'''': 2,\r\n  ''''AA_property5'''': 2,\r\n  ''''AA_property6'''': 2,\r\n  ''''BB_property1'''': 3,\r\n  ''''BB_property2'''': 3,\r\n  ''''BB_property3'''': 3,\r\n  ''''BB_property4'''': 3,\r\n  ''''BB_property5'''': 3,\r\n  ''''BB_property6'''': 3,\r\n  ''''BB_property7'''': 3,\r\n  ''''BB_property8'''': 3\r\n}'')", span="4543-4563"];
m14_2193 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(AATestClass).GetField(''AA_field1'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4565-4565"];
m14_2194 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AATestClass).GetField(''AA_field2'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4566-4566"];
m14_2195 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AATestClass).GetProperty(''AA_property1'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4567-4567"];
m14_2196 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AATestClass).GetProperty(''AA_property2'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4568-4568"];
m14_2197 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AATestClass).GetProperty(''AA_property3'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4569-4569"];
m14_2198 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AATestClass).GetProperty(''AA_property4'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4570-4570"];
m14_2199 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AATestClass).GetProperty(''AA_property5'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4571-4571"];
m14_2200 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AATestClass).GetProperty(''AA_property6'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4572-4572"];
m14_2201 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, myB.BB_field1)", span="4574-4574"];
m14_2202 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, myB.BB_field2)", span="4575-4575"];
m14_2203 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, myB.BB_property1)", span="4576-4576"];
m14_2204 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, myB.BB_property2)", span="4577-4577"];
m14_2205 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BBTestClass).GetProperty(''BB_property3'', BindingFlags.Instance | BindingFlags.Public), myB))", span="4578-4578"];
m14_2206 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BBTestClass).GetProperty(''BB_property4'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4579-4579"];
m14_2207 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, myB.BB_property5)", span="4580-4580"];
m14_2208 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BBTestClass).GetProperty(''BB_property6'', BindingFlags.Instance | BindingFlags.Public), myB))", span="4581-4581"];
m14_2209 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BBTestClass).GetProperty(''BB_property7'', BindingFlags.Instance | BindingFlags.Public), myB))", span="4582-4582"];
m14_2210 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BBTestClass).GetProperty(''BB_property8'', BindingFlags.Instance | BindingFlags.Public), myB))", span="4583-4583"];
m14_2211 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", span="4520-4520"];
m14_756 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", span="1460-1460"];
m14_757 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", file="JsonSerializerTest.cs", label="object o = JsonConvert.DeserializeObject(''100000000000000000000000000000000000000.0'')", span="1462-1462"];
m14_758 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", file="JsonSerializerTest.cs", label="CustomAssert.IsInstanceOfType(typeof(double), o)", span="1464-1464"];
m14_759 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", file="JsonSerializerTest.cs", label="Assert.IsTrue(MathUtils.ApproxEquals(1E+38, (double)o))", span="1466-1466"];
m14_760 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", span="1460-1460"];
m14_61 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="537-537"];
m14_3066 [cluster="Newtonsoft.Json.Tests.TestObjects.MetroStringConverter.MetroStringConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.MetroStringConverter.MetroStringConverter()", span="30-30"];
m14_3772 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", span="8006-8006"];
m14_3773 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", color=red, community=0, file="JsonSerializerTest.cs", label="3: return Value;", span="8008-8008"];
m14_3774 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", span="8006-8006"];
m14_1540 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", span="2976-2976"];
m14_1541 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''firstName'''': ''''firstName'''',\r\n  ''''FirstName'''': ''''FirstName'''',\r\n  ''''LastName'''': ''''LastName'''',\r\n  ''''lastName'''': ''''lastName'''',\r\n}''", span="2978-2983"];
m14_1542 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs", label="PropertyCase o = JsonConvert.DeserializeObject<PropertyCase>(json)", span="2985-2985"];
m14_1543 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(o)", span="2986-2986"];
m14_1544 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''firstName'', o.firstName)", span="2988-2988"];
m14_1545 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''FirstName'', o.FirstName)", span="2989-2989"];
m14_1546 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''LastName'', o.LastName)", span="2990-2990"];
m14_1547 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''lastName'', o.lastName)", span="2991-2991"];
m14_1548 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", span="2976-2976"];
m14_1347 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", span="34-34"];
m14_1584 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", span="3071-3071"];
m14_1585 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="JsonPropertyWithHandlingValues o = new JsonPropertyWithHandlingValues()", span="3073-3073"];
m14_1586 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="o.DefaultValueHandlingIgnoreProperty = ''Default!''", span="3074-3074"];
m14_1587 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="o.DefaultValueHandlingIncludeProperty = ''Default!''", span="3075-3075"];
m14_1588 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="o.DefaultValueHandlingPopulateProperty = ''Default!''", span="3076-3076"];
m14_1589 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="o.DefaultValueHandlingIgnoreAndPopulateProperty = ''Default!''", span="3077-3077"];
m14_1590 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="3079-3079"];
m14_1592 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings { NullValueHandling = NullValueHandling.Ignore })", span="3090-3090"];
m14_1591 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''DefaultValueHandlingIncludeProperty'''': ''''Default!'''',\r\n  ''''DefaultValueHandlingPopulateProperty'''': ''''Default!'''',\r\n  ''''NullValueHandlingIncludeProperty'''': null,\r\n  ''''ReferenceLoopHandlingErrorProperty'''': null,\r\n  ''''ReferenceLoopHandlingIgnoreProperty'''': null,\r\n  ''''ReferenceLoopHandlingSerializeProperty'''': null\r\n}'', json)", span="3081-3088"];
m14_1593 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''DefaultValueHandlingIncludeProperty'''': ''''Default!'''',\r\n  ''''DefaultValueHandlingPopulateProperty'''': ''''Default!'''',\r\n  ''''NullValueHandlingIncludeProperty'''': null\r\n}'', json)", span="3092-3096"];
m14_1594 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", span="3071-3071"];
m14_1183 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", span="2260-2260"];
m14_1184 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs", label="string json = ''{bar:[1,2,3], foo:'hello'}''", span="2262-2262"];
m14_1185 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs", label="JsonSerializer s = new JsonSerializer()", span="2264-2264"];
m14_1187 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs", label="ClassWithArray wibble = (ClassWithArray)s.Deserialize(new StringReader(json), typeof(ClassWithArray))", span="2267-2267"];
m14_1186 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs", label="s.ObjectCreationHandling = ObjectCreationHandling.Replace", span="2265-2265"];
m14_1188 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''hello'', wibble.Foo)", span="2269-2269"];
m14_1189 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, wibble.Bar.Count)", span="2271-2271"];
m14_1190 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", span="2260-2260"];
m14_4002 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.CanConvert(System.Type)", span="8533-8533"];
m14_4003 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.CanConvert(System.Type)", color=red, community=0, file="JsonSerializerTest.cs", label="0: return typeof(Encoding).IsAssignableFrom(objectType);", span="8535-8535"];
m14_4004 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.CanConvert(System.Type)", span="8533-8533"];
m14_2035 [cluster="Newtonsoft.Json.Tests.TestObjects.CircularConstructor2.CircularConstructor2(Newtonsoft.Json.Tests.TestObjects.CircularConstructor1)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CircularConstructor2.CircularConstructor2(Newtonsoft.Json.Tests.TestObjects.CircularConstructor1)", span="32-32"];
m14_174 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequiredConstructor()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequiredConstructor()", span="387-387"];
m14_175 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequiredConstructor()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<FooRequired>(''{Bars:''}''); }, ''Required property 'Bars' expects a value but got null. Path '', line 1, position 9.'')", span="389-389"];
m14_176 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequiredConstructor()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequiredConstructor()", span="387-387"];
m14_1299 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", span="548-548"];
m14_3692 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", span="7839-7839"];
m14_3693 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonSerializerTest.cs", label="string json = @''[\r\n  {\r\n    ''''$id'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3'''',\r\n    ''''Name'''': ''''John Smith'''',\r\n    ''''Spouse'''': {\r\n      ''''$id'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9'''',\r\n      ''''Name'''': ''''Jane Smith'''',\r\n      ''''Spouse'''': {\r\n        ''''$ref'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3''''\r\n      }\r\n    }\r\n  },\r\n  {\r\n    ''''$ref'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9''''\r\n  }\r\n]''", span="7841-7856"];
m14_3694 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonSerializerTest.cs", label="IList<PersonReference> people = JsonConvert.DeserializeObject<IList<PersonReference>>(json, new JsonSerializerSettings\r\n            {\r\n                ReferenceResolverProvider = () => new IdReferenceResolver(),\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects,\r\n                Formatting = Formatting.Indented\r\n            })", span="7858-7863"];
m14_3695 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, people.Count)", span="7865-7865"];
m14_3696 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonSerializerTest.cs", label="PersonReference john = people[0]", span="7867-7867"];
m14_3697 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonSerializerTest.cs", label="PersonReference jane = people[1]", span="7868-7868"];
m14_3698 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonSerializerTest.cs", label="Assert.AreEqual(john, jane.Spouse)", span="7870-7870"];
m14_3699 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonSerializerTest.cs", label="Assert.AreEqual(jane, john.Spouse)", span="7871-7871"];
m14_3700 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", span="7839-7839"];
m14_854 [cluster="System.Diagnostics.Stopwatch.StartNew()", file="JsonSerializerTest.cs", label="Entry System.Diagnostics.Stopwatch.StartNew()", span="0-0"];
m14_754 [cluster="Newtonsoft.Json.Tests.TestObjects.PersonReference.PersonReference()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.PersonReference.PersonReference()", span="30-30"];
m14_1105 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JsonSerializerTest.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m14_1128 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", span="2168-2168"];
m14_1129 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="var anonymous =\r\n                new\r\n                {\r\n                    StringValue = ''I am a string'',\r\n                    IntValue = int.MaxValue,\r\n                    NestedAnonymous = new { NestedValue = byte.MaxValue },\r\n                    NestedArray = new[] { 1, 2 },\r\n                    Product = new Product() { Name = ''TestProduct'' }\r\n                }", span="2170-2178"];
m14_1130 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(anonymous)", span="2180-2180"];
m14_1132 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="anonymous = JsonConvert.DeserializeAnonymousType(json, anonymous)", span="2183-2183"];
m14_1131 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''StringValue'''':''''I am a string'''',''''IntValue'''':2147483647,''''NestedAnonymous'''':{''''NestedValue'''':255},''''NestedArray'''':[1,2],''''Product'''':{''''Name'''':''''TestProduct'''',''''ExpiryDate'''':''''2000-01-01T00:00:00Z'''',''''Price'''':0.0,''''Sizes'''':null}}'', json)", span="2181-2181"];
m14_1133 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''I am a string'', anonymous.StringValue)", span="2184-2184"];
m14_1134 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(int.MaxValue, anonymous.IntValue)", span="2185-2185"];
m14_1135 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(255, anonymous.NestedAnonymous.NestedValue)", span="2186-2186"];
m14_1136 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, anonymous.NestedArray.Length)", span="2187-2187"];
m14_1137 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, anonymous.NestedArray[0])", span="2188-2188"];
m14_1138 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, anonymous.NestedArray[1])", span="2189-2189"];
m14_1139 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''TestProduct'', anonymous.Product.Name)", span="2190-2190"];
m14_1140 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", span="2168-2168"];
m14_2298 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", span="4733-4733"];
m14_2299 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonSerializerTest.cs", label="string json = @''{''''First'''':''''First'''',''''Second'''':2,''''Ignored'''':{''''Name'''':''''James''''},''''AdditionalContent'''':{''''LOL'''':true}}''", span="4735-4735"];
m14_2300 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonSerializerTest.cs", label="ConstructorCompexIgnoredProperty cc = JsonConvert.DeserializeObject<ConstructorCompexIgnoredProperty>(json)", span="4737-4737"];
m14_2301 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''First'', cc.First)", span="4738-4738"];
m14_2302 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, cc.Second)", span="4739-4739"];
m14_2303 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, cc.Ignored)", span="4740-4740"];
m14_2304 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", span="4733-4733"];
m14_3355 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", span="6984-6984"];
m14_3356 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs", label="IList<Uri> uris = JsonConvert.DeserializeObject<IList<Uri>>(@''[''''http://localhost/path?query#hash'''']'')", span="6986-6986"];
m14_3357 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, uris.Count)", span="6987-6987"];
m14_3358 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new Uri(''http://localhost/path?query#hash''), uris[0])", span="6988-6988"];
m14_3359 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs", label="Uri uri = JsonConvert.DeserializeObject<Uri>(@''''''http://localhost/path?query#hash'''''')", span="6990-6990"];
m14_3360 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(uri)", span="6991-6991"];
m14_3361 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs", label="Uri i1 = new Uri(''http://localhost/path?query#hash'', UriKind.RelativeOrAbsolute)", span="6993-6993"];
m14_3362 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs", label="Uri i2 = new Uri(''http://localhost/path?query#hash'')", span="6994-6994"];
m14_3363 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs", label="Assert.AreEqual(i1, i2)", span="6995-6995"];
m14_3364 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs", label="uri = JsonConvert.DeserializeObject<Uri>(@''''''/path?query#hash'''''')", span="6997-6997"];
m14_3365 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(uri)", span="6998-6998"];
m14_3366 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new Uri(''/path?query#hash'', UriKind.RelativeOrAbsolute), uri)", span="6999-6999"];
m14_3367 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", span="6984-6984"];
m14_163 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired_DisallowNull()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired_DisallowNull()", span="374-374"];
m14_164 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired_DisallowNull()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Binding_DisallowNull>(''{requiredProperty:''}''); }, ''Required property 'RequiredProperty' expects a non-null value. Path '', line 1, position 21.'')", span="376-376"];
m14_165 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired_DisallowNull()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired_DisallowNull()", span="374-374"];
m14_213 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", span="452-452"];
m14_214 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<IList<object>>(''[1,''),\r\n                ''Unexpected end when deserializing array. Path '[0]', line 1, position 3.'')", span="454-456"];
m14_215 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<IList<int>>(''[1,''),\r\n                ''Unexpected end when deserializing array. Path '[0]', line 1, position 3.'')", span="458-460"];
m14_216 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<IList<int>>(''[1''),\r\n                ''Unexpected end when deserializing array. Path '[0]', line 1, position 2.'')", span="462-464"];
m14_217 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<IDictionary<string, int>>(''{'key':1,''),\r\n                ''Unexpected end when deserializing object. Path 'key', line 1, position 9.'')", span="466-468"];
m14_218 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<IDictionary<string, int>>(''{'key':1''),\r\n                ''Unexpected end when deserializing object. Path 'key', line 1, position 8.'')", span="470-472"];
m14_219 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<IncompleteTestClass>(''{'key':1,''),\r\n                ''Unexpected end when deserializing object. Path 'key', line 1, position 9.'')", span="474-476"];
m14_220 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<IncompleteTestClass>(''{'key':1''),\r\n                ''Unexpected end when deserializing object. Path 'key', line 1, position 8.'')", span="478-480"];
m14_221 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", span="452-452"];
m14_2685 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", span="5586-5586"];
m14_2686 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="JsonSerializerTest.cs", label="DerivedType d = new DerivedType()", span="5588-5588"];
m14_2687 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(d, Formatting.Indented)", span="5589-5589"];
m14_2688 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''dinosaur'''': null,\r\n  ''''dog'''': null,\r\n  ''''cat'''': null,\r\n  ''''zebra'''': null,\r\n  ''''bird'''': null,\r\n  ''''parrot'''': null,\r\n  ''''albatross'''': null,\r\n  ''''antelope'''': null\r\n}'', json)", span="5591-5600"];
m14_2689 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", span="5586-5586"];
m14_2691 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", span="5606-5606"];
m14_2692 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs", label="ClassWithException classWithException = new ClassWithException()", span="5608-5608"];
m14_2693 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs", label="throw new Exception(''Test Exception'');", span="5611-5611"];
m14_2695 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs", label="classWithException.Exceptions.Add(ex)", span="5615-5615"];
m14_2696 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs", label="string sex = JsonConvert.SerializeObject(classWithException)", span="5617-5617"];
m14_2699 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs", label="sex = JsonConvert.SerializeObject(classWithException, Formatting.Indented)", span="5621-5621"];
m14_2694 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs", label=Exception, span="5613-5613"];
m14_2697 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs", label="ClassWithException dex = JsonConvert.DeserializeObject<ClassWithException>(sex)", span="5618-5618"];
m14_2698 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dex.Exceptions[0].ToString(), dex.Exceptions[0].ToString())", span="5619-5619"];
m14_2700 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs", label="dex = JsonConvert.DeserializeObject<ClassWithException>(sex)", span="5623-5623"];
m14_2701 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dex.Exceptions[0].ToString(), dex.Exceptions[0].ToString())", span="5624-5624"];
m14_2702 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", span="5606-5606"];
m14_3487 [cluster="System.Tuple.Create<T1, T2>(T1, T2)", file="JsonSerializerTest.cs", label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0"];
m14_4031 [cluster="Newtonsoft.Json.Serialization.IContractResolver.ResolveContract(System.Type)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Serialization.IContractResolver.ResolveContract(System.Type)", span="43-43"];
m14_3255 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ConvertJavaScriptTicksToDateTime(long)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.ConvertJavaScriptTicksToDateTime(long)", span="205-205"];
m14_2366 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTestClass.StringDictionaryTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTestClass.StringDictionaryTestClass()", span="4850-4850"];
m14_88 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="367-367"];
m14_2230 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", span="4635-4635"];
m14_2231 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs", label="XmlNodeTestObject testObject = new XmlNodeTestObject()", span="4637-4637"];
m14_2232 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs", label="XmlDocument document = new XmlDocument()", span="4638-4638"];
m14_2234 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs", label="testObject.Document = document", span="4640-4640"];
m14_2235 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(testObject, Formatting.Indented)", span="4642-4642"];
m14_2239 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testObject.Document.InnerXml, newTestObject.Document.InnerXml)", span="4651-4651"];
m14_2233 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs", label="document.LoadXml(''<root>hehe, root</root>'')", span="4639-4639"];
m14_2236 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs", label="string expected = @''{\r\n  ''''Document'''': {\r\n    ''''root'''': ''''hehe, root''''\r\n  }\r\n}''", span="4643-4647"];
m14_2237 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(expected, json)", span="4648-4648"];
m14_2238 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs", label="XmlNodeTestObject newTestObject = JsonConvert.DeserializeObject<XmlNodeTestObject>(json)", span="4650-4650"];
m14_2240 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", span="4635-4635"];
m14_2084 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", span="4215-4215"];
m14_2085 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", color=red, community=0, file="JsonSerializerTest.cs", label="0: return _innerDictionary.GetEnumerator();", span="4217-4217"];
m14_2086 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", span="4215-4215"];
m14_2465 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", span="5066-5066"];
m14_2466 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs", label="VectorParent obj = new VectorParent()", span="5068-5068"];
m14_2467 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs", label="obj.Position = new TestObjects.Vector { X = 1, Y = 2, Z = 3 }", span="5069-5069"];
m14_2468 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs", label="string str = JsonConvert.SerializeObject(obj)", span="5071-5071"];
m14_2469 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs", label="obj = JsonConvert.DeserializeObject<VectorParent>(str)", span="5073-5073"];
m14_2470 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, obj.Position.X)", span="5075-5075"];
m14_2471 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, obj.Position.Y)", span="5076-5076"];
m14_2472 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, obj.Position.Z)", span="5077-5077"];
m14_2473 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", span="5066-5066"];
m14_1637 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", span="3206-3206"];
m14_1638 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs", label="DataContractPrivateMembers c = new DataContractPrivateMembers(''Jeff'', 26, 10, ''Dr'')", span="3208-3208"];
m14_1639 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs", label="c.NotIncluded = ''Hi''", span="3209-3209"];
m14_1640 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="3210-3210"];
m14_1641 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''_name'''': ''''Jeff'''',\r\n  ''''_age'''': 26,\r\n  ''''Rank'''': 10,\r\n  ''''JsonTitle'''': ''''Dr''''\r\n}'', json)", span="3212-3217"];
m14_1642 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs", label="DataContractPrivateMembers cc = JsonConvert.DeserializeObject<DataContractPrivateMembers>(json)", span="3219-3219"];
m14_1643 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''_name: Jeff, _age: 26, Rank: 10, JsonTitle: Dr'', cc.ToString())", span="3220-3220"];
m14_1644 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", span="3206-3206"];
m14_2981 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", span="6162-6162"];
m14_2982 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<double>(''''); }, ''No JSON content found and type 'System.Double' is not nullable. Path '', line 0, position 0.'')", span="6164-6164"];
m14_2983 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", span="6162-6162"];
m14_1249 [cluster="System.Guid.Guid(string)", file="JsonSerializerTest.cs", label="Entry System.Guid.Guid(string)", span="0-0"];
m14_3033 [cluster="System.DateTime.ToLocalTime()", file="JsonSerializerTest.cs", label="Entry System.DateTime.ToLocalTime()", span="0-0"];
m14_2604 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContract.ChildDataContract()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContract.ChildDataContract()", span="5360-5360"];
m14_2015 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", span="4023-4023"];
m14_2016 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="JsonSerializerTest.cs", label="string jsonIsoText =\r\n                @''{''''DateTimeOffsetValue'''':''''2012-02-25T19:55:50.6095676+00:00'''', ''''DateTimeValue'''':''''2012-02-25T19:55:50.6095676+00:00''''}''", span="4025-4026"];
m14_2017 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="JsonSerializerTest.cs", label="DateTimeOffsetWrapper cISO = JsonConvert.DeserializeObject<DateTimeOffsetWrapper>(jsonIsoText, new JsonSerializerSettings\r\n            {\r\n                DateParseHandling = DateParseHandling.DateTimeOffset,\r\n                Converters =\r\n                {\r\n                    new IsoDateTimeConverter()\r\n                }\r\n            })", span="4028-4035"];
m14_2018 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="JsonSerializerTest.cs", label="DateTimeOffsetWrapper c = JsonConvert.DeserializeObject<DateTimeOffsetWrapper>(jsonIsoText, new JsonSerializerSettings\r\n            {\r\n                DateParseHandling = DateParseHandling.DateTimeOffset\r\n            })", span="4036-4039"];
m14_2019 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c.DateTimeOffsetValue, cISO.DateTimeOffsetValue)", span="4041-4041"];
m14_2020 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", span="4023-4023"];
m14_59 [cluster="Newtonsoft.Json.Tests.TestObjects.MyFactory.InstantiateSubclass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.MyFactory.InstantiateSubclass()", span="29-29"];
m14_3435 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", span="7176-7176"];
m14_3436 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonSerializerTest.cs", label="var content = @''{''''startDateTime'''':''''2012-07-19T14:30:00+09:30''''}''", span="7178-7178"];
m14_3437 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonSerializerTest.cs", label="var jsonSerializerSettings = new JsonSerializerSettings() { DateFormatHandling = DateFormatHandling.IsoDateFormat, DateParseHandling = DateParseHandling.DateTimeOffset, DateTimeZoneHandling = DateTimeZoneHandling.RoundtripKind }", span="7180-7180"];
m14_3438 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonSerializerTest.cs", label="var obj = (JObject)JsonConvert.DeserializeObject(content, jsonSerializerSettings)", span="7182-7182"];
m14_3439 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonSerializerTest.cs", label="var dateTimeOffset = (DateTimeOffset)((JValue)obj[''startDateTime'']).Value", span="7184-7184"];
m14_3440 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonSerializerTest.cs", label="Assert.AreEqual(TimeSpan.FromHours(9.5), dateTimeOffset.Offset)", span="7186-7186"];
m14_3441 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''07/19/2012 14:30:00 +09:30'', dateTimeOffset.ToString(CultureInfo.InvariantCulture))", span="7187-7187"];
m14_3442 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", span="7176-7176"];
m14_1228 [cluster="System.Collections.Generic.Stack<T>.Push(T)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.Stack<T>.Push(T)", span="0-0"];
m14_1283 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", span="2443-2443"];
m14_1284 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs", label="ConverterPrecedenceClass c1 = new ConverterPrecedenceClass(''!Test!'')", span="2445-2445"];
m14_1285 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c1)", span="2447-2447"];
m14_1286 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''[''''Class'''',''''!Test!'''']'', json)", span="2448-2448"];
m14_1287 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs", label="ConverterPrecedenceClass c2 = JsonConvert.DeserializeObject<ConverterPrecedenceClass>(json)", span="2450-2450"];
m14_1288 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''!Test!'', c2.TestValue)", span="2452-2452"];
m14_1289 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", span="2443-2443"];
m14_49 [cluster="Unk.IsTrue", file="JsonSerializerTest.cs", label="Entry Unk.IsTrue", span=""];
m14_938 [cluster="Newtonsoft.Json.Tests.TestObjects.Store.Store()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Store.Store()", span="49-49"];
m14_1596 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", span="3100-3100"];
m14_1597 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="string json = ''{}''", span="3102-3102"];
m14_1598 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="JsonPropertyWithHandlingValues o = JsonConvert.DeserializeObject<JsonPropertyWithHandlingValues>(json)", span="3104-3104"];
m14_1599 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Default!'', o.DefaultValueHandlingIgnoreAndPopulateProperty)", span="3105-3105"];
m14_1600 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Default!'', o.DefaultValueHandlingPopulateProperty)", span="3106-3106"];
m14_1601 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, o.DefaultValueHandlingIgnoreProperty)", span="3107-3107"];
m14_1602 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, o.DefaultValueHandlingIncludeProperty)", span="3108-3108"];
m14_1603 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", span="3100-3100"];
m14_85 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_Null()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_Null()", span="245-245"];
m14_86 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_Null()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<IList<bool>>(@''[null]''),\r\n                ''Error converting value {null} to type 'System.Boolean'. Path '[0]', line 1, position 5.'')", span="247-249"];
m14_87 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_Null()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_Null()", span="245-245"];
m14_3034 [cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, int, System.TimeSpan)", file="JsonSerializerTest.cs", label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, int, System.TimeSpan)", span="0-0"];
m14_3055 [cluster="Newtonsoft.Json.Tests.TestObjects.PersonWithPrivateConstructor.CreatePerson()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.PersonWithPrivateConstructor.CreatePerson()", span="33-33"];
m14_3236 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", span="6692-6692"];
m14_3238 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonSerializerTest.cs", label="var stringWriter = new StringWriter()", span="6695-6695"];
m14_3241 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonSerializerTest.cs", label="serializer.Serialize(stringWriter, obj)", span="6701-6701"];
m14_3239 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonSerializerTest.cs", label="var serializer = new JsonSerializer()", span="6696-6696"];
m14_3242 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonSerializerTest.cs", label="return stringWriter.ToString();", span="6703-6703"];
m14_3240 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonSerializerTest.cs", label="serializer.ContractResolver = new DefaultContractResolver\r\n            {\r\n                IgnoreSerializableAttribute = false\r\n            }", span="6697-6700"];
m14_3243 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", span="6692-6692"];
m14_2921 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", span="6040-6040"];
m14_2922 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs", label="Item expected = new Item()\r\n            {\r\n                SourceTypeID = new Guid(''d8220a4b-75b1-4b7a-8112-b7bdae956a45''),\r\n                BrokerID = new Guid(''951663c4-924e-4c86-a57a-7ed737501dbd''),\r\n                Latitude = 33.657145,\r\n                Longitude = -117.766684,\r\n                TimeStamp = new DateTime(2000, 3, 1, 23, 59, 59, DateTimeKind.Utc),\r\n                Payload = new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }\r\n            }", span="6042-6050"];
m14_2923 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs", label="string jsonString = JsonConvert.SerializeObject(expected, Formatting.Indented)", span="6052-6052"];
m14_2924 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''SourceTypeID'''': ''''d8220a4b-75b1-4b7a-8112-b7bdae956a45'''',\r\n  ''''BrokerID'''': ''''951663c4-924e-4c86-a57a-7ed737501dbd'''',\r\n  ''''Latitude'''': 33.657145,\r\n  ''''Longitude'''': -117.766684,\r\n  ''''TimeStamp'''': ''''2000-03-01T23:59:59Z'''',\r\n  ''''Payload'''': {\r\n    ''''$type'''': '''''' + ReflectionUtils.GetTypeName(typeof(byte[]), 0, DefaultSerializationBinder.Instance) + @'''''',\r\n    ''''$value'''': ''''AAECAwQFBgcICQ==''''\r\n  }\r\n}'', jsonString)", span="6054-6064"];
m14_2925 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs", label="Item actual = JsonConvert.DeserializeObject<Item>(jsonString)", span="6066-6066"];
m14_2926 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new Guid(''d8220a4b-75b1-4b7a-8112-b7bdae956a45''), actual.SourceTypeID)", span="6068-6068"];
m14_2927 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new Guid(''951663c4-924e-4c86-a57a-7ed737501dbd''), actual.BrokerID)", span="6069-6069"];
m14_2928 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs", label="byte[] bytes = (byte[])actual.Payload", span="6070-6070"];
m14_2929 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs", label="CollectionAssert.AreEquivalent((new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }).ToList(), bytes.ToList())", span="6071-6071"];
m14_2930 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", span="6040-6040"];
m14_419 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", span="889-889"];
m14_420 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonSerializerTest.cs", label="var input = new ResponseWithNewGenericProperty<int>()\r\n            {\r\n                Message = ''Trying out integer as type parameter'',\r\n                Data = 25,\r\n                Result = ''This should be fine''\r\n            }", span="891-896"];
m14_421 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonSerializerTest.cs", label="var json = JsonConvert.SerializeObject(input)", span="898-898"];
m14_423 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonSerializerTest.cs", label="Assert.AreEqual(input.Data, deserialized.Data)", span="901-901"];
m14_424 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonSerializerTest.cs", label="Assert.AreEqual(input.Message, deserialized.Message)", span="902-902"];
m14_425 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonSerializerTest.cs", label="Assert.AreEqual(input.Result, deserialized.Result)", span="903-903"];
m14_422 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonSerializerTest.cs", label="var deserialized = JsonConvert.DeserializeObject<ResponseWithNewGenericProperty<int>>(json)", span="899-899"];
m14_426 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", span="889-889"];
m14_3271 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", span="6819-6819"];
m14_3272 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs", label="string json = ''{one:1}{}''", span="6821-6821"];
m14_3273 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings()", span="6823-6823"];
m14_3275 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs", label="IDictionary<string, int> o = s.Deserialize<Dictionary<string, int>>(new JsonTextReader(new StringReader(json)))", span="6825-6825"];
m14_3280 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { s.Deserialize<Dictionary<string, int>>(new JsonTextReader(new StringReader(json))); }, ''Additional text encountered after finished reading JSON content: {. Path '', line 1, position 7.'')", span="6832-6832"];
m14_3274 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs", label="JsonSerializer s = JsonSerializer.Create(settings)", span="6824-6824"];
m14_3278 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs", label="settings.CheckAdditionalContent = true", span="6830-6830"];
m14_3279 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs", label="s = JsonSerializer.Create(settings)", span="6831-6831"];
m14_3276 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(o)", span="6827-6827"];
m14_3277 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, o[''one''])", span="6828-6828"];
m14_3281 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", span="6819-6819"];
m14_2172 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", span="4487-4487"];
m14_2173 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="AATestClass myA = new AATestClass(2)", span="4489-4489"];
m14_2174 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(myA, Formatting.Indented)", span="4490-4490"];
m14_2175 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''AA_field1'''': 2,\r\n  ''''AA_property1'''': 2,\r\n  ''''AA_property2'''': 2,\r\n  ''''AA_property3'''': 2,\r\n  ''''AA_property4'''': 2\r\n}'', json)", span="4491-4497"];
m14_2176 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="BBTestClass myB = new BBTestClass(3, 4)", span="4499-4499"];
m14_2177 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(myB, Formatting.Indented)", span="4500-4500"];
m14_2178 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''BB_field1'''': 4,\r\n  ''''BB_field2'''': 4,\r\n  ''''AA_field1'''': 3,\r\n  ''''BB_property1'''': 4,\r\n  ''''BB_property2'''': 4,\r\n  ''''BB_property3'''': 4,\r\n  ''''BB_property4'''': 4,\r\n  ''''BB_property5'''': 4,\r\n  ''''BB_property7'''': 4,\r\n  ''''AA_property1'''': 3,\r\n  ''''AA_property2'''': 3,\r\n  ''''AA_property3'''': 3,\r\n  ''''AA_property4'''': 3\r\n}'', json)", span="4501-4515"];
m14_2179 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", span="4487-4487"];
m14_3581 [cluster="Newtonsoft.Json.Tests.TestObjects.AnswerFilterModel.AnswerFilterModel()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.AnswerFilterModel.AnswerFilterModel()", span="46-46"];
m14_3766 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDouble(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDouble(System.IFormatProvider)", span="7996-7996"];
m14_3767 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDouble(System.IFormatProvider)", color=red, community=0, file="JsonSerializerTest.cs", label="0: throw new InvalidCastException();", span="7998-7998"];
m14_3768 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDouble(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDouble(System.IFormatProvider)", span="7996-7996"];
m14_1001 [cluster="object.ToString()", file="JsonSerializerTest.cs", label="Entry object.ToString()", span="0-0"];
m14_4013 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="8549-8549"];
m14_4014 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", color=red, community=0, file="JsonSerializerTest.cs", label="0: throw new NotImplementedException();", span="8551-8551"];
m14_4015 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="8549-8549"];
m14_2659 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m14_2507 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", span="5171-5171"];
m14_2508 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", file="JsonSerializerTest.cs", label="return JsonConvert.DeserializeObject<NullableStructPropertyClass>(\r\n                serStr,\r\n                new JsonSerializerSettings\r\n                {\r\n                    NullValueHandling = NullValueHandling.Ignore,\r\n                    MissingMemberHandling = MissingMemberHandling.Ignore\r\n                });", span="5173-5179"];
m14_2509 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", span="5171-5171"];
m14_2993 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", span="6174-6174"];
m14_2994 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<int>(''''); }, ''No JSON content found and type 'System.Int32' is not nullable. Path '', line 0, position 0.'')", span="6176-6176"];
m14_2995 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", span="6174-6174"];
m14_1496 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", span="2839-2839"];
m14_1497 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''name'''': ''''1600 Amphitheatre Parkway, Mountain View, CA, USA'''',\r\n  ''''Status'''': {\r\n    ''''code'''': 200,\r\n    ''''request'''': ''''geocode''''\r\n  },\r\n  ''''Placemark'''': [\r\n    {\r\n      ''''address'''': ''''1600 Amphitheatre Pkwy, Mountain View, CA 94043, USA'''',\r\n      ''''AddressDetails'''': {\r\n        ''''Country'''': {\r\n          ''''CountryNameCode'''': ''''US'''',\r\n          ''''AdministrativeArea'''': {\r\n            ''''AdministrativeAreaName'''': ''''CA'''',\r\n            ''''SubAdministrativeArea'''': {\r\n              ''''SubAdministrativeAreaName'''': ''''Santa Clara'''',\r\n              ''''Locality'''': {\r\n                ''''LocalityName'''': ''''Mountain View'''',\r\n                ''''Thoroughfare'''': {\r\n                  ''''ThoroughfareName'''': ''''1600 Amphitheatre Pkwy''''\r\n                },\r\n                ''''PostalCode'''': {\r\n                  ''''PostalCodeNumber'''': ''''94043''''\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        ''''Accuracy'''': 8\r\n      },\r\n      ''''Point'''': {\r\n        ''''coordinates'''': [-122.083739, 37.423021, 0]\r\n      }\r\n    }\r\n  ]\r\n}''", span="2841-2876"];
m14_1498 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonSerializerTest.cs", label="GoogleMapGeocoderStructure jsonGoogleMapGeocoder = JsonConvert.DeserializeObject<GoogleMapGeocoderStructure>(json)", span="2878-2878"];
m14_1499 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", span="2839-2839"];
m14_3601 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", span="7620-7620"];
m14_3602 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", file="JsonSerializerTest.cs", label="PersonReference john = new PersonReference\r\n            {\r\n                Id = new Guid(''0B64FFDF-D155-44AD-9689-58D9ADB137F3''),\r\n                Name = ''John Smith''\r\n            }", span="7622-7626"];
m14_3603 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", file="JsonSerializerTest.cs", label="PersonReference jane = new PersonReference\r\n            {\r\n                Id = new Guid(''AE3C399C-058D-431D-91B0-A36C266441B9''),\r\n                Name = ''Jane Smith''\r\n            }", span="7628-7632"];
m14_3604 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", file="JsonSerializerTest.cs", label="john.Spouse = jane", span="7634-7634"];
m14_3605 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", file="JsonSerializerTest.cs", label="jane.Spouse = john", span="7635-7635"];
m14_3606 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", file="JsonSerializerTest.cs", label="IList<PersonReference> people = new List<PersonReference>\r\n            {\r\n                john,\r\n                jane\r\n            }", span="7637-7641"];
m14_3607 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(people, new JsonSerializerSettings\r\n            {\r\n#pragma warning disable 618\r\n                ReferenceResolver = null,\r\n#pragma warning restore 618\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects,\r\n                Formatting = Formatting.Indented\r\n            })", span="7643-7650"];
m14_3608 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''[\r\n  {\r\n    ''''$id'''': ''''1'''',\r\n    ''''Name'''': ''''John Smith'''',\r\n    ''''Spouse'''': {\r\n      ''''$id'''': ''''2'''',\r\n      ''''Name'''': ''''Jane Smith'''',\r\n      ''''Spouse'''': {\r\n        ''''$ref'''': ''''1''''\r\n      }\r\n    }\r\n  },\r\n  {\r\n    ''''$ref'''': ''''2''''\r\n  }\r\n]'', json)", span="7652-7667"];
m14_3609 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", span="7620-7620"];
m14_1962 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", span="3918-3918"];
m14_1963 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs", label="ExistingValueClass d = JsonConvert.DeserializeObject<ExistingValueClass>(@''{'Dictionary':{appended:'appended',existing:'new'}}'')", span="3920-3920"];
m14_1964 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(d)", span="3922-3922"];
m14_1965 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(d.Dictionary)", span="3923-3923"];
m14_1966 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(Dictionary<string, string>), d.Dictionary.GetType())", span="3924-3924"];
m14_1967 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(List<string>), d.List.GetType())", span="3925-3925"];
m14_1968 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, d.Dictionary.Count)", span="3926-3926"];
m14_1969 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''new'', d.Dictionary[''existing''])", span="3927-3927"];
m14_1970 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''appended'', d.Dictionary[''appended''])", span="3928-3928"];
m14_1971 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, d.List.Count)", span="3929-3929"];
m14_1972 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''existing'', d.List[0])", span="3930-3930"];
m14_1973 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", span="3918-3918"];
m14_965 [cluster="System.DateTime.DateTime(int, int, int, int, int, int)", file="JsonSerializerTest.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int)", span="0-0"];
m14_471 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", span="981-981"];
m14_472 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="string json = @''/* Test */\r\n            {\r\n                /*Test*/''''A'''':/* Test */true/* Test */,\r\n                /* Test */''''B'''':/* Test */false/* Test */,\r\n                /* Test */''''C'''':/* Test */[\r\n                    /* Test */\r\n                    1/* Test */\r\n                ]/* Test */\r\n            }\r\n            /* Test */''", span="983-992"];
m14_473 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="JObject o = (JObject)JsonConvert.DeserializeObject(json)", span="993-993"];
m14_479 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="Assert.IsTrue(JToken.DeepEquals(o, JObject.Parse(json)))", span="1000-1000"];
m14_474 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, o.Count)", span="994-994"];
m14_475 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, (bool)o[''A''])", span="995-995"];
m14_476 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(false, (bool)o[''B''])", span="996-996"];
m14_477 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, o[''C''].Count())", span="997-997"];
m14_478 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, (int)o[''C''][0])", span="998-998"];
m14_480 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="json = @''{/* Test */}''", span="1002-1002"];
m14_481 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="o = (JObject)JsonConvert.DeserializeObject(json)", span="1003-1003"];
m14_483 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="Assert.IsTrue(JToken.DeepEquals(o, JObject.Parse(json)))", span="1005-1005"];
m14_482 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, o.Count)", span="1004-1004"];
m14_484 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="json = @''{''''A'''': true/* Test */}''", span="1007-1007"];
m14_485 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="o = (JObject)JsonConvert.DeserializeObject(json)", span="1008-1008"];
m14_488 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="Assert.IsTrue(JToken.DeepEquals(o, JObject.Parse(json)))", span="1011-1011"];
m14_486 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, o.Count)", span="1009-1009"];
m14_487 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, (bool)o[''A''])", span="1010-1010"];
m14_489 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", span="981-981"];
m14_1798 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", span="3540-3540"];
m14_1799 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="JsonSerializerTest.cs", label="string json = @''[]''", span="3542-3542"];
m14_1800 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<InvalidCastException>(\r\n                () => { JsonConvert.DeserializeObject<JObject>(json); },\r\n                new[]\r\n                {\r\n                    ''Unable to cast object of type 'Newtonsoft.Json.Linq.JArray' to type 'Newtonsoft.Json.Linq.JObject'.'',\r\n                    ''Cannot cast from source type to destination type.'' // mono\r\n                })", span="3544-3550"];
m14_1801 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", span="3540-3540"];
m14_2518 [cluster="Newtonsoft.Json.Linq.JObject.JObject(params object[])", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject(params object[])", span="104-104"];
m14_3109 [cluster="Newtonsoft.Json.Bson.BsonWriter.BsonWriter(System.IO.Stream)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.BsonWriter(System.IO.Stream)", span="66-66"];
m14_941 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", span="1756-1756"];
m14_942 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Product product = new Product()", span="1758-1758"];
m14_943 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="product.Name = ''Apple''", span="1760-1760"];
m14_944 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="product.ExpiryDate = new DateTime(2008, 12, 28)", span="1761-1761"];
m14_945 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="product.Price = 3.99M", span="1762-1762"];
m14_946 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="product.Sizes = new string[] { ''Small'', ''Medium'', ''Large'' }", span="1763-1763"];
m14_947 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="string output = JsonConvert.SerializeObject(product)", span="1765-1765"];
m14_948 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Product deserializedProduct = (Product)JsonConvert.DeserializeObject(output, typeof(Product))", span="1777-1777"];
m14_949 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Apple'', deserializedProduct.Name)", span="1779-1779"];
m14_950 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(2008, 12, 28), deserializedProduct.ExpiryDate)", span="1780-1780"];
m14_951 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3.99m, deserializedProduct.Price)", span="1781-1781"];
m14_952 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Small'', deserializedProduct.Sizes[0])", span="1782-1782"];
m14_953 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Medium'', deserializedProduct.Sizes[1])", span="1783-1783"];
m14_954 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Large'', deserializedProduct.Sizes[2])", span="1784-1784"];
m14_955 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", span="1756-1756"];
m14_2517 [cluster="Newtonsoft.Json.Tests.TestObjects.JTokenTestClass.JTokenTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.JTokenTestClass.JTokenTestClass()", span="29-29"];
m14_3739 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", span="7950-7950"];
m14_3740 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", color=red, community=0, file="JsonSerializerTest.cs", label="1: conversionType == typeof(object)", span="7952-7952"];
m14_3742 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", color=red, community=0, file="JsonSerializerTest.cs", label="5: conversionType == typeof(int)", span="7956-7956"];
m14_3744 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", color=red, community=0, file="JsonSerializerTest.cs", label="0: conversionType == typeof(long)", span="7960-7960"];
m14_3746 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", color=red, community=0, file="JsonSerializerTest.cs", label="0: conversionType == typeof(string)", span="7964-7964"];
m14_3741 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", color=red, community=0, file="JsonSerializerTest.cs", label="1: return this;", span="7954-7954"];
m14_3743 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", color=red, community=0, file="JsonSerializerTest.cs", label="1: return (int)Value;", span="7958-7958"];
m14_3745 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", color=red, community=0, file="JsonSerializerTest.cs", label="1: return (long)Value;", span="7962-7962"];
m14_3747 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", color=red, community=0, file="JsonSerializerTest.cs", label="1: return Value.ToString(CultureInfo.InvariantCulture);", span="7966-7966"];
m14_3748 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", color=red, community=0, file="JsonSerializerTest.cs", label="1: throw new InvalidCastException();", span="7968-7968"];
m14_3749 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", span="7950-7950"];
m14_2413 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", span="4979-4979"];
m14_2414 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="dynamic expando = new ExpandoObject()", span="4981-4981"];
m14_2415 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="expando.Int = 1", span="4982-4982"];
m14_2416 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="expando.Decimal = 99.9d", span="4983-4983"];
m14_2417 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="expando.Complex = new ExpandoObject()", span="4984-4984"];
m14_2418 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="expando.Complex.String = ''I am a string''", span="4985-4985"];
m14_2419 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="expando.Complex.DateTime = new DateTime(2000, 12, 20, 18, 55, 0, DateTimeKind.Utc)", span="4986-4986"];
m14_2420 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(expando, Formatting.Indented)", span="4988-4988"];
m14_2424 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual((long)expando.Int, newExpando[''Int''])", span="5001-5001"];
m14_2426 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(expando.Decimal, newExpando[''Decimal''])", span="5004-5004"];
m14_2430 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(expando.Complex.String, o[''String''])", span="5010-5010"];
m14_2432 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(expando.Complex.DateTime, o[''DateTime''])", span="5013-5013"];
m14_2421 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Int'''': 1,\r\n  ''''Decimal'''': 99.9,\r\n  ''''Complex'''': {\r\n    ''''String'''': ''''I am a string'''',\r\n    ''''DateTime'''': ''''2000-12-20T18:55:00Z''''\r\n  }\r\n}'', json)", span="4989-4996"];
m14_2422 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="IDictionary<string, object> newExpando = JsonConvert.DeserializeObject<ExpandoObject>(json)", span="4998-4998"];
m14_2423 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="CustomAssert.IsInstanceOfType(typeof(long), newExpando[''Int''])", span="5000-5000"];
m14_2425 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="CustomAssert.IsInstanceOfType(typeof(double), newExpando[''Decimal''])", span="5003-5003"];
m14_2427 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="CustomAssert.IsInstanceOfType(typeof(ExpandoObject), newExpando[''Complex''])", span="5006-5006"];
m14_2428 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="IDictionary<string, object> o = (ExpandoObject)newExpando[''Complex'']", span="5007-5007"];
m14_2429 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="CustomAssert.IsInstanceOfType(typeof(string), o[''String''])", span="5009-5009"];
m14_2431 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="CustomAssert.IsInstanceOfType(typeof(DateTime), o[''DateTime''])", span="5012-5012"];
m14_2433 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", span="4979-4979"];
m14_3754 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToByte(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToByte(System.IFormatProvider)", span="7976-7976"];
m14_3755 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToByte(System.IFormatProvider)", color=red, community=0, file="JsonSerializerTest.cs", label="0: throw new InvalidCastException();", span="7978-7978"];
m14_3756 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToByte(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToByte(System.IFormatProvider)", span="7976-7976"];
m14_1394 [cluster="Newtonsoft.Json.Linq.JRaw.JRaw(object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JRaw.JRaw(object)", span="48-48"];
m14_3682 [cluster="System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", file="JsonSerializerTest.cs", label="Entry System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", span="0-0"];
m14_1841 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", span="3604-3604"];
m14_1842 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonSerializerTest.cs", label="string json = @''{''''Name'''':''''''''}''", span="3606-3606"];
m14_1843 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonSerializerTest.cs", label="Person p = JsonConvert.DeserializeObject<Person>(json)", span="3608-3608"];
m14_1844 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonSerializerTest.cs", label="Assert.AreEqual('''', p.Name)", span="3609-3609"];
m14_1845 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", span="3604-3604"];
m14_3270 [cluster="Newtonsoft.Json.Tests.TestObjects.PocoDataContractSerializationAttributesClass.PocoDataContractSerializationAttributesClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.PocoDataContractSerializationAttributesClass.PocoDataContractSerializationAttributesClass()", span="30-30"];
m14_3802 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.ConvertibleId()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.ConvertibleId()", span="7941-7941"];
m14_205 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolverTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolverTest()", span="423-423"];
m14_206 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolverTest()", file="JsonSerializerTest.cs", label="var person = new\r\n            {\r\n                Name = ''James'',\r\n                Age = 1,\r\n                RoleNames = new Dictionary<string, bool>\r\n                {\r\n                    { ''IsAdmin'', true },\r\n                    { ''IsModerator'', false }\r\n                }\r\n            }", span="425-434"];
m14_207 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolverTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(person, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new DictionaryKeyContractResolver()\r\n            })", span="436-439"];
m14_208 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolverTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''NAME'''': ''''James'''',\r\n  ''''AGE'''': 1,\r\n  ''''ROLENAMES'''': {\r\n    ''''IsAdmin'''': true,\r\n    ''''IsModerator'''': false\r\n  }\r\n}'', json)", span="441-448"];
m14_209 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolverTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolverTest()", span="423-423"];
m14_571 [cluster="Unk.IsInstanceOf", file="JsonSerializerTest.cs", label="Entry Unk.IsInstanceOf", span=""];
m14_2704 [cluster="System.Exception.Exception(string)", file="JsonSerializerTest.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m14_3235 [cluster="Newtonsoft.Json.Tests.TestObjects.PersonSerializable.PersonSerializable()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.PersonSerializable.PersonSerializable()", span="33-33"];
m14_78 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMSDateTimeOffset()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMSDateTimeOffset()", span="234-234"];
m14_79 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMSDateTimeOffset()", file="JsonSerializerTest.cs", label="DateTimeOffset d = JsonConvert.DeserializeObject<DateTimeOffset>(@''''''/Date(1418924498000+0800)/'''''')", span="236-236"];
m14_80 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMSDateTimeOffset()", file="JsonSerializerTest.cs", label="long initialTicks = DateTimeUtils.ConvertDateTimeToJavaScriptTicks(d.DateTime, d.Offset)", span="237-237"];
m14_81 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMSDateTimeOffset()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1418924498000, initialTicks)", span="239-239"];
m14_82 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMSDateTimeOffset()", file="JsonSerializerTest.cs", label="Assert.AreEqual(8, d.Offset.Hours)", span="240-240"];
m14_83 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMSDateTimeOffset()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMSDateTimeOffset()", span="234-234"];
m14_3317 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", span="6921-6921"];
m14_3318 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonException>(() =>\r\n            {\r\n                string json = ''[{},1]'';\r\n\r\n                JsonSerializer serializer = new JsonSerializer();\r\n                serializer.CheckAdditionalContent = true;\r\n\r\n                var reader = new JsonTextReader(new StringReader(json));\r\n                reader.Read();\r\n                reader.Read();\r\n\r\n                serializer.Deserialize(reader, typeof(ItemConverterTestClass));\r\n            }, ''Additional text found in JSON string after finishing deserializing object. Path '[1]', line 1, position 5.'')", span="6923-6935"];
m14_3319 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", span="6921-6921"];
m14_3864 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", span="8198-8198"];
m14_3865 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonSerializerTest.cs", label="DateTime dt = new DateTime(2000, 12, 22)", span="8200-8200"];
m14_3866 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonSerializerTest.cs", label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd''", span="8201-8201"];
m14_3868 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new Dictionary<DateTime, string>\r\n            {\r\n                { dt, ''123'' }\r\n            }, settings)", span="8209-8212"];
m14_3871 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dt, d.Keys.ElementAt(0))", span="8220-8220"];
m14_3867 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonSerializerTest.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead,\r\n                Formatting = Formatting.Indented\r\n            }", span="8202-8207"];
m14_3870 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonSerializerTest.cs", label="Dictionary<DateTime, string> d = JsonConvert.DeserializeObject<Dictionary<DateTime, string>>(json, settings)", span="8218-8218"];
m14_3869 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''2000-pie-Dec-Friday-22'''': ''''123''''\r\n}'', json)", span="8214-8216"];
m14_3872 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", span="8198-8198"];
m14_1889 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", span="3709-3709"];
m14_1890 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs", label="StructTest structTest = new StructTest\r\n            {\r\n                StringProperty = ''StringProperty!'',\r\n                StringField = ''StringField'',\r\n                IntProperty = 5,\r\n                IntField = 10\r\n            }", span="3711-3717"];
m14_1891 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(structTest, Formatting.Indented)", span="3719-3719"];
m14_1894 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(structTest.StringProperty, deserialized.StringProperty)", span="3729-3729"];
m14_1892 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''StringField'''': ''''StringField'''',\r\n  ''''IntField'''': 10,\r\n  ''''StringProperty'''': ''''StringProperty!'''',\r\n  ''''IntProperty'''': 5\r\n}'', json)", span="3721-3726"];
m14_1893 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs", label="StructTest deserialized = JsonConvert.DeserializeObject<StructTest>(json)", span="3728-3728"];
m14_1895 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(structTest.StringField, deserialized.StringField)", span="3730-3730"];
m14_1896 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(structTest.IntProperty, deserialized.IntProperty)", span="3731-3731"];
m14_1897 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(structTest.IntField, deserialized.IntField)", span="3732-3732"];
m14_1898 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", span="3709-3709"];
m14_327 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomerWithMetadataType.CustomerWithMetadataType()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomerWithMetadataType.CustomerWithMetadataType()", span="653-653"];
m14_2885 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", span="5986-5986"];
m14_2886 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                string json = @''{\r\n  ''''PreProperty'''': true,\r\n  ''''PostProperty'''': ''''-1''''\r\n}'';\r\n\r\n                JsonConvert.DeserializeObject<TestObjects.MyClass>(json);\r\n            }, ''Unexpected character encountered while parsing value: t. Path 'PreProperty', line 2, position 18.'')", span="5988-5996"];
m14_2887 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", span="5986-5986"];
m14_250 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", span="751-751"];
m14_2488 [cluster="System.Runtime.Serialization.SerializationInfo.GetString(string)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetString(string)", span="0-0"];
m14_2506 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable()", span="5101-5101"];
m14_3724 [cluster="Newtonsoft.Json.Tests.TestObjects.ConsoleWriter.ConsoleWriter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ConsoleWriter.ConsoleWriter()", span="31-31"];
m14_2075 [cluster="System.Collections.Generic.ICollection<T>.Contains(T)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.ICollection<T>.Contains(T)", span="0-0"];
m14_3269 [cluster="Newtonsoft.Json.Tests.TestObjects.DataContractSerializationAttributesClass.DataContractSerializationAttributesClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.DataContractSerializationAttributesClass.DataContractSerializationAttributesClass()", span="31-31"];
m14_3998 [cluster="System.Convert.FromBase64String(string)", file="JsonSerializerTest.cs", label="Entry System.Convert.FromBase64String(string)", span="0-0"];
m14_1092 [cluster="JavaScriptSerializer.cstr", file="JsonSerializerTest.cs", label="Entry JavaScriptSerializer.cstr", span=""];
m14_3626 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSize.TypeConverterSize(int, int)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSize.TypeConverterSize(int, int)", span="7710-7710"];
m14_3627 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSize.TypeConverterSize(int, int)", color=red, community=0, file="JsonSerializerTest.cs", label="0: _width = width", span="7712-7712"];
m14_3628 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSize.TypeConverterSize(int, int)", color=red, community=0, file="JsonSerializerTest.cs", label="0: _height = height", span="7713-7713"];
m14_3629 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSize.TypeConverterSize(int, int)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSize.TypeConverterSize(int, int)", span="7710-7710"];
m14_2180 [cluster="Newtonsoft.Json.Tests.TestObjects.AATestClass.AATestClass(int)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.AATestClass.AATestClass(int)", span="53-53"];
m14_3882 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", span="8250-8250"];
m14_3883 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonSerializerTest.cs", label="DateTimeOffset dt = new DateTimeOffset(2000, 12, 22, 0, 0, 0, TimeSpan.Zero)", span="8252-8252"];
m14_3884 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonSerializerTest.cs", label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd'!'K''", span="8253-8253"];
m14_3886 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new Dictionary<DateTimeOffset, string>\r\n            {\r\n                { dt, ''123'' }\r\n            }, settings)", span="8261-8264"];
m14_3889 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dt, d.Keys.ElementAt(0))", span="8272-8272"];
m14_3885 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonSerializerTest.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead,\r\n                Formatting = Formatting.Indented\r\n            }", span="8254-8259"];
m14_3888 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonSerializerTest.cs", label="Dictionary<DateTimeOffset, string> d = JsonConvert.DeserializeObject<Dictionary<DateTimeOffset, string>>(json, settings)", span="8270-8270"];
m14_3887 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''2000-pie-Dec-Friday-22!+00:00'''': ''''123''''\r\n}'', json)", span="8266-8268"];
m14_3890 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", span="8250-8250"];
m14_1063 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", span="2051-2051"];
m14_1064 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="JsonSerializerTest.cs", label="string json = @''[''''vvv\jvvv'''']''", span="2053-2053"];
m14_1065 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { JsonConvert.DeserializeObject<List<string>>(json); }, @''Bad JSON escape sequence: \j. Path '', line 1, position 7.'')", span="2055-2055"];
m14_1066 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", span="2051-2051"];
m14_1310 [cluster="Newtonsoft.Json.Tests.TestObjects.MemberConverterClass.MemberConverterClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.MemberConverterClass.MemberConverterClass()", span="30-30"];
m14_2474 [cluster="Newtonsoft.Json.Tests.TestObjects.VectorParent.VectorParent()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.VectorParent.VectorParent()", span="27-27"];
m14_2956 [cluster="Newtonsoft.Json.Tests.TestObjects.Widget1.Widget1()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Widget1.Widget1()", span="27-27"];
m14_1565 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", span="3031-3031"];
m14_1566 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs", label="SubKlass i = new SubKlass(''my subprop'')", span="3033-3033"];
m14_1567 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs", label="i.SuperProp = ''overrided superprop''", span="3034-3034"];
m14_1568 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(i)", span="3036-3036"];
m14_1569 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', json)", span="3037-3037"];
m14_1570 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs", label="SubKlass ii = JsonConvert.DeserializeObject<SubKlass>(json)", span="3039-3039"];
m14_1571 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs", label="string newJson = JsonConvert.SerializeObject(ii)", span="3041-3041"];
m14_1572 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', newJson)", span="3042-3042"];
m14_1573 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", span="3031-3031"];
m14_3215 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", span="6647-6647"];
m14_3216 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs", label="IDictionary<DateTime, int> dic1 = new Dictionary<DateTime, int>\r\n            {\r\n                { new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc), 1 },\r\n                { new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc), 2 }\r\n            }", span="6649-6653"];
m14_3217 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n            })", span="6655-6658"];
m14_3218 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''\/Date(976623132000)\/'''': 1,\r\n  ''''\/Date(1386850332000)\/'''': 2\r\n}'', json)", span="6660-6663"];
m14_3219 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs", label="IDictionary<DateTime, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTime, int>>(json)", span="6665-6665"];
m14_3220 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, dic2.Count)", span="6667-6667"];
m14_3221 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, dic2[new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="6668-6668"];
m14_3222 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, dic2[new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="6669-6669"];
m14_3223 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", span="6647-6647"];
m14_798 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", span="1526-1526"];
m14_799 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs", label="var original = new FooBar1 { foo = new Bar1 { bar = ''value'' } }", span="1528-1528"];
m14_800 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs", label="var json = JsonConvert.SerializeObject(original)", span="1529-1529"];
m14_801 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs", label="var expectedJson = @''{''''foo'''':{''''bar'''':''''value''''}}''", span="1530-1530"];
m14_802 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs", label="Assert.AreEqual(expectedJson, json)", span="1531-1531"];
m14_803 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", span="1526-1526"];
m14_1112 [cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime)", file="JsonSerializerTest.cs", label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime)", span="0-0"];
m14_2706 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", span="5629-5629"];
m14_2707 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs", label="UriGuidTimeSpanTestClass c1 = new UriGuidTimeSpanTestClass()", span="5631-5631"];
m14_2708 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="5632-5632"];
m14_2711 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c1.Guid, c2.Guid)", span="5643-5643"];
m14_2712 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c1.NullableGuid, c2.NullableGuid)", span="5644-5644"];
m14_2713 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c1.TimeSpan, c2.TimeSpan)", span="5645-5645"];
m14_2714 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c1.NullableTimeSpan, c2.NullableTimeSpan)", span="5646-5646"];
m14_2715 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c1.Uri, c2.Uri)", span="5647-5647"];
m14_2709 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Guid'''': ''''00000000-0000-0000-0000-000000000000'''',\r\n  ''''NullableGuid'''': null,\r\n  ''''TimeSpan'''': ''''00:00:00'''',\r\n  ''''NullableTimeSpan'''': null,\r\n  ''''Uri'''': null\r\n}'', json)", span="5634-5640"];
m14_2710 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs", label="UriGuidTimeSpanTestClass c2 = JsonConvert.DeserializeObject<UriGuidTimeSpanTestClass>(json)", span="5642-5642"];
m14_2716 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", span="5629-5629"];
m14_3683 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", span="7801-7801"];
m14_3684 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonSerializerTest.cs", label="string json = @''[\r\n  {\r\n    ''''$id'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3'''',\r\n    ''''Name'''': ''''John Smith'''',\r\n    ''''Spouse'''': {\r\n      ''''$id'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9'''',\r\n      ''''Name'''': ''''Jane Smith'''',\r\n      ''''Spouse'''': {\r\n        ''''$ref'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3''''\r\n      }\r\n    }\r\n  },\r\n  {\r\n    ''''$ref'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9''''\r\n  }\r\n]''", span="7803-7818"];
m14_3685 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonSerializerTest.cs", label="IList<PersonReference> people = JsonConvert.DeserializeObject<IList<PersonReference>>(json, new JsonSerializerSettings\r\n            {\r\n#pragma warning disable 618\r\n                ReferenceResolver = new IdReferenceResolver(),\r\n#pragma warning restore 618\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects,\r\n                Formatting = Formatting.Indented\r\n            })", span="7820-7827"];
m14_3686 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, people.Count)", span="7829-7829"];
m14_3687 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonSerializerTest.cs", label="PersonReference john = people[0]", span="7831-7831"];
m14_3688 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonSerializerTest.cs", label="PersonReference jane = people[1]", span="7832-7832"];
m14_3689 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonSerializerTest.cs", label="Assert.AreEqual(john, jane.Spouse)", span="7834-7834"];
m14_3690 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonSerializerTest.cs", label="Assert.AreEqual(jane, john.Spouse)", span="7835-7835"];
m14_3691 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", span="7801-7801"];
m14_1777 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", span="3505-3505"];
m14_1778 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="JsonSerializerTest.cs", label="string json = @''[]''", span="3507-3507"];
m14_1779 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Exception>(json); }, @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'System.Exception' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'')", span="3509-3511"];
m14_1780 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", span="3505-3505"];
m14_1014 [cluster="Newtonsoft.Json.Tests.TestObjects.GetOnlyPropertyClass.GetOnlyPropertyClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.GetOnlyPropertyClass.GetOnlyPropertyClass()", span="27-27"];
m14_3403 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", span="7088-7088"];
m14_3404 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonSerializerTest.cs", label="string json = @''[\r\n        1,\r\n        null\r\n      ]''", span="7090-7093"];
m14_3405 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonSerializerTest.cs", label="var l = JsonConvert.DeserializeObject<IReadOnlyList<int?>>(json)", span="7095-7095"];
m14_3406 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, l[0])", span="7097-7097"];
m14_3407 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, l[1])", span="7098-7098"];
m14_3408 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", span="7088-7088"];
m14_3968 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="8469-8469"];
m14_3969 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", color=red, community=0, file="JsonSerializerTest.cs", label="0: var messageJObject = serializer.Deserialize<JObject>(reader)", span="8471-8471"];
m14_3970 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", color=red, community=0, file="JsonSerializerTest.cs", label="0: messageJObject == null", span="8472-8472"];
m14_3972 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", color=red, community=0, file="JsonSerializerTest.cs", label="0: var address = messageJObject.GetValue(''Address'', StringComparison.OrdinalIgnoreCase).ToObject<string>()", span="8477-8477"];
m14_3975 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", color=red, community=0, file="JsonSerializerTest.cs", label="0: messageJObject.TryGetValue(''DisplayName'', StringComparison.OrdinalIgnoreCase, out displayNameToken)\r\n                    && !string.IsNullOrEmpty(displayName = displayNameToken.ToObject<string>())", span="8481-8482"];
m14_3971 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", color=red, community=0, file="JsonSerializerTest.cs", label="0: return null;", span="8474-8474"];
m14_3973 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", color=red, community=0, file="JsonSerializerTest.cs", label="0: JToken displayNameToken", span="8479-8479"];
m14_3976 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", color=red, community=0, file="JsonSerializerTest.cs", label="0: return new System.Net.Mail.MailAddress(address, displayName);", span="8484-8484"];
m14_3977 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", color=red, community=0, file="JsonSerializerTest.cs", label="0: return new System.Net.Mail.MailAddress(address);", span="8487-8487"];
m14_3974 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", color=red, community=0, file="JsonSerializerTest.cs", label="0: string displayName", span="8480-8480"];
m14_3978 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="8469-8469"];
m14_1819 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", span="3570-3570"];
m14_1820 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonSerializerTest.cs", label="string json = @''{}''", span="3572-3572"];
m14_1821 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<List<Person>>(json)", span="3576-3576"];
m14_1822 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonSerializerTest.cs", label="Assert.Fail()", span="3577-3577"];
m14_1823 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonSerializerTest.cs", label=JsonSerializationException, span="3579-3579"];
m14_1824 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonSerializerTest.cs", label="Assert.IsTrue(ex.Message.StartsWith(@''Cannot deserialize the current JSON object (e.g. {''''name'''':''''value''''}) into type 'System.Collections.Generic.List`1[Newtonsoft.Json.Tests.TestObjects.Organization.Person]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.'' + Environment.NewLine +\r\n                                                    @''To fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.'' + Environment.NewLine +\r\n                                                    @''Path ''''))", span="3581-3583"];
m14_1825 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", span="3570-3570"];
m14_579 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", span="1144-1144"];
m14_580 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings()", span="1146-1146"];
m14_581 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="DefaultSerializationBinder customBinder = new DefaultSerializationBinder()", span="1148-1148"];
m14_582 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.Binder = customBinder", span="1150-1150"];
m14_583 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(customBinder, settings.Binder)", span="1151-1151"];
m14_584 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.CheckAdditionalContent = true", span="1154-1154"];
m14_585 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, settings.CheckAdditionalContent)", span="1155-1155"];
m14_586 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor", span="1157-1157"];
m14_587 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(ConstructorHandling.AllowNonPublicDefaultConstructor, settings.ConstructorHandling)", span="1158-1158"];
m14_588 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.Context = new StreamingContext(StreamingContextStates.Other)", span="1161-1161"];
m14_589 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new StreamingContext(StreamingContextStates.Other), settings.Context)", span="1162-1162"];
m14_591 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.ContractResolver = resolver", span="1166-1166"];
m14_592 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(resolver, settings.ContractResolver)", span="1167-1167"];
m14_593 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.Converters.Add(new StringEnumConverter())", span="1169-1169"];
m14_594 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, settings.Converters.Count)", span="1170-1170"];
m14_595 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.Culture = new CultureInfo(''en-nz'')", span="1172-1172"];
m14_596 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''en-NZ'', settings.Culture.ToString())", span="1173-1173"];
m14_597 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.EqualityComparer = EqualityComparer<object>.Default", span="1175-1175"];
m14_598 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(EqualityComparer<object>.Default, settings.EqualityComparer)", span="1176-1176"];
m14_599 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.DateFormatHandling = DateFormatHandling.MicrosoftDateFormat", span="1178-1178"];
m14_600 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(DateFormatHandling.MicrosoftDateFormat, settings.DateFormatHandling)", span="1179-1179"];
m14_601 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.DateFormatString = ''yyyy''", span="1181-1181"];
m14_602 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''yyyy'', settings.DateFormatString)", span="1182-1182"];
m14_603 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.DateParseHandling = DateParseHandling.None", span="1184-1184"];
m14_604 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(DateParseHandling.None, settings.DateParseHandling)", span="1185-1185"];
m14_605 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.DateTimeZoneHandling = DateTimeZoneHandling.Utc", span="1187-1187"];
m14_606 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(DateTimeZoneHandling.Utc, settings.DateTimeZoneHandling)", span="1188-1188"];
m14_607 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.DefaultValueHandling = DefaultValueHandling.IgnoreAndPopulate", span="1190-1190"];
m14_608 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(DefaultValueHandling.IgnoreAndPopulate, settings.DefaultValueHandling)", span="1191-1191"];
m14_609 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.FloatFormatHandling = FloatFormatHandling.Symbol", span="1193-1193"];
m14_610 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(FloatFormatHandling.Symbol, settings.FloatFormatHandling)", span="1194-1194"];
m14_611 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.FloatParseHandling = FloatParseHandling.Decimal", span="1196-1196"];
m14_612 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(FloatParseHandling.Decimal, settings.FloatParseHandling)", span="1197-1197"];
m14_613 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.Formatting = Formatting.Indented", span="1199-1199"];
m14_614 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(Formatting.Indented, settings.Formatting)", span="1200-1200"];
m14_615 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.MaxDepth = 9001", span="1202-1202"];
m14_616 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(9001, settings.MaxDepth)", span="1203-1203"];
m14_617 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.MissingMemberHandling = MissingMemberHandling.Error", span="1205-1205"];
m14_618 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(MissingMemberHandling.Error, settings.MissingMemberHandling)", span="1206-1206"];
m14_619 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.NullValueHandling = NullValueHandling.Ignore", span="1208-1208"];
m14_620 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(NullValueHandling.Ignore, settings.NullValueHandling)", span="1209-1209"];
m14_621 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.ObjectCreationHandling = ObjectCreationHandling.Replace", span="1211-1211"];
m14_622 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(ObjectCreationHandling.Replace, settings.ObjectCreationHandling)", span="1212-1212"];
m14_623 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.PreserveReferencesHandling = PreserveReferencesHandling.All", span="1214-1214"];
m14_624 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(PreserveReferencesHandling.All, settings.PreserveReferencesHandling)", span="1215-1215"];
m14_625 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.ReferenceLoopHandling = ReferenceLoopHandling.Ignore", span="1217-1217"];
m14_626 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(ReferenceLoopHandling.Ignore, settings.ReferenceLoopHandling)", span="1218-1218"];
m14_628 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.ReferenceResolver = referenceResolver", span="1222-1222"];
m14_629 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(referenceResolver, settings.ReferenceResolver)", span="1223-1223"];
m14_630 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(referenceResolver, settings.ReferenceResolverProvider())", span="1225-1225"];
m14_631 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.ReferenceResolverProvider = () => referenceResolver", span="1227-1227"];
m14_632 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(referenceResolver, settings.ReferenceResolverProvider())", span="1228-1228"];
m14_633 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.StringEscapeHandling = StringEscapeHandling.EscapeNonAscii", span="1230-1230"];
m14_634 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(StringEscapeHandling.EscapeNonAscii, settings.StringEscapeHandling)", span="1231-1231"];
m14_636 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.TraceWriter = traceWriter", span="1234-1234"];
m14_637 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(traceWriter, settings.TraceWriter)", span="1235-1235"];
m14_638 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.TypeNameAssemblyFormat = FormatterAssemblyStyle.Full", span="1239-1239"];
m14_639 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(FormatterAssemblyStyle.Full, settings.TypeNameAssemblyFormat)", span="1240-1240"];
m14_640 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(TypeNameAssemblyFormatHandling.Full, settings.TypeNameAssemblyFormatHandling)", span="1243-1243"];
m14_641 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.TypeNameAssemblyFormatHandling = TypeNameAssemblyFormatHandling.Simple", span="1245-1245"];
m14_642 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(FormatterAssemblyStyle.Simple, settings.TypeNameAssemblyFormat)", span="1247-1247"];
m14_643 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.TypeNameAssemblyFormatHandling = TypeNameAssemblyFormatHandling.Full", span="1251-1251"];
m14_644 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(TypeNameAssemblyFormatHandling.Full, settings.TypeNameAssemblyFormatHandling)", span="1252-1252"];
m14_645 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.TypeNameHandling = TypeNameHandling.All", span="1254-1254"];
m14_646 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(TypeNameHandling.All, settings.TypeNameHandling)", span="1255-1255"];
m14_590 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="CamelCasePropertyNamesContractResolver resolver = new CamelCasePropertyNamesContractResolver()", span="1165-1165"];
m14_627 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="IdReferenceResolver referenceResolver = new IdReferenceResolver()", span="1220-1220"];
m14_635 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="MemoryTraceWriter traceWriter = new MemoryTraceWriter()", span="1233-1233"];
m14_647 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", span="1144-1144"];
m14_2476 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", span="5081-5081"];
m14_2477 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs", label="var derived = new PrivateSetterDerived(''meh'', ''woo'')", span="5083-5083"];
m14_2478 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs", label="var settings = new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects,\r\n                ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor\r\n            }", span="5085-5089"];
m14_2479 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(derived, Formatting.Indented, settings)", span="5091-5091"];
m14_2480 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs", label="var meh = JsonConvert.DeserializeObject<PrivateSetterBase>(json, settings)", span="5093-5093"];
m14_2481 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(((PrivateSetterDerived)meh).IDoWork, ''woo'')", span="5095-5095"];
m14_2482 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(meh.IDontWork, ''meh'')", span="5096-5096"];
m14_2483 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", span="5081-5081"];
m14_1805 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", span="3554-3554"];
m14_1806 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="JsonSerializerTest.cs", label="string json = @''new Constructor(123)''", span="3556-3556"];
m14_1807 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Person>(json); }, @''Error converting value ''''Constructor'''' to type 'Newtonsoft.Json.Tests.TestObjects.Organization.Person'. Path '', line 1, position 16.'')", span="3558-3558"];
m14_1808 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", span="3554-3554"];
m14_428 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", span="907-907"];
m14_429 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonSerializerTest.cs", label="var input = new ResponseWithNewGenericPropertyVirtual<int>()\r\n            {\r\n                Message = ''Trying out integer as type parameter'',\r\n                Data = 25,\r\n                Result = ''This should be fine''\r\n            }", span="909-914"];
m14_430 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonSerializerTest.cs", label="var json = JsonConvert.SerializeObject(input)", span="916-916"];
m14_432 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonSerializerTest.cs", label="Assert.AreEqual(input.Data, deserialized.Data)", span="919-919"];
m14_433 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonSerializerTest.cs", label="Assert.AreEqual(input.Message, deserialized.Message)", span="920-920"];
m14_434 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonSerializerTest.cs", label="Assert.AreEqual(input.Result, deserialized.Result)", span="921-921"];
m14_431 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonSerializerTest.cs", label="var deserialized = JsonConvert.DeserializeObject<ResponseWithNewGenericPropertyVirtual<int>>(json)", span="917-917"];
m14_435 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", span="907-907"];
m14_1366 [cluster="Newtonsoft.Json.Tests.TestObjects.ClassAndMemberConverterClass.ClassAndMemberConverterClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ClassAndMemberConverterClass.ClassAndMemberConverterClass()", span="27-27"];
m14_3997 [cluster="System.Net.Mail.Attachment.Attachment(System.IO.Stream, string)", file="JsonSerializerTest.cs", label="Entry System.Net.Mail.Attachment.Attachment(System.IO.Stream, string)", span="0-0"];
m14_849 [cluster="System.IO.MemoryStream.MemoryStream()", file="JsonSerializerTest.cs", label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0"];
m14_893 [cluster="Newtonsoft.Json.Tests.TestObjects.SubWithContractNewProperties.SubWithContractNewProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.SubWithContractNewProperties.SubWithContractNewProperties()", span="31-31"];
m14_3213 [cluster="string.Contains(string)", file="JsonSerializerTest.cs", label="Entry string.Contains(string)", span="0-0"];
m14_3760 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDateTime(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDateTime(System.IFormatProvider)", span="7986-7986"];
m14_3761 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDateTime(System.IFormatProvider)", color=red, community=0, file="JsonSerializerTest.cs", label="0: throw new InvalidCastException();", span="7988-7988"];
m14_3762 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDateTime(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDateTime(System.IFormatProvider)", span="7986-7986"];
m14_2457 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", span="5053-5053"];
m14_2458 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonSerializerTest.cs", label="string json = ''{'Value':123456789876543.21}''", span="5055-5055"];
m14_2459 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="5056-5056"];
m14_2460 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonSerializerTest.cs", label="reader.FloatParseHandling = FloatParseHandling.Decimal", span="5057-5057"];
m14_2462 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonSerializerTest.cs", label="IDictionary<string, decimal> d = serializer.Deserialize<IDictionary<string, decimal>>(reader)", span="5061-5061"];
m14_2461 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonSerializerTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="5059-5059"];
m14_2463 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonSerializerTest.cs", label="Assert.AreEqual(123456789876543.21m, d[''Value''])", span="5062-5062"];
m14_2464 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", span="5053-5053"];
m14_853 [cluster="System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", file="JsonSerializerTest.cs", label="Entry System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", span="0-0"];
m14_2645 [cluster="Newtonsoft.Json.Tests.TestObjects.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", span="34-34"];
m14_1062 [cluster="Newtonsoft.Json.Tests.TestObjects.BadJsonPropertyClass.BadJsonPropertyClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.BadJsonPropertyClass.BadJsonPropertyClass()", span="27-27"];
m14_1257 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", span="2402-2402"];
m14_1258 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonSerializerTest.cs", label="TimeSpan ts = new TimeSpan(00, 23, 59, 1)", span="2404-2404"];
m14_1259 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new ClassWithTimeSpan { TimeSpanField = ts }, Formatting.Indented)", span="2406-2406"];
m14_1262 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(ts, c.TimeSpanField)", span="2412-2412"];
m14_1260 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''TimeSpanField'''': ''''23:59:01''''\r\n}'', json)", span="2407-2409"];
m14_1261 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonSerializerTest.cs", label="ClassWithTimeSpan c = JsonConvert.DeserializeObject<ClassWithTimeSpan>(json)", span="2411-2411"];
m14_1263 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", span="2402-2402"];
m14_770 [cluster="System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)", file="JsonSerializerTest.cs", label="Entry System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)", span="0-0"];
m14_3409 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", span="7103-7103"];
m14_3410 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="var tuple = new MyTuple<int>(500)", span="7105-7105"];
m14_3411 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="var json = JsonConvert.SerializeObject(tuple)", span="7106-7106"];
m14_3412 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''m_Item1'''':500}'', json)", span="7107-7107"];
m14_3414 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="Action doStuff = () => { obj = JsonConvert.DeserializeObject<MyTuple<int>>(json); }", span="7111-7111"];
m14_3413 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="MyTuple<int> obj = null", span="7109-7109"];
m14_3415 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="doStuff()", span="7114-7114"];
m14_3416 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="Assert.AreEqual(500, obj.Item1)", span="7115-7115"];
m14_3417 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", span="7103-7103"];
m14_724 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", span="1380-1380"];
m14_725 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonSerializerTest.cs", label="Ratio ratio = new Ratio(2, 1)", span="1382-1382"];
m14_726 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(ratio)", span="1383-1383"];
m14_729 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonSerializerTest.cs", label="Assert.AreEqual(ratio.Denominator, ratio2.Denominator)", span="1389-1389"];
m14_727 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''n'''':2,''''d'''':1}'', json)", span="1385-1385"];
m14_728 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonSerializerTest.cs", label="Ratio ratio2 = JsonConvert.DeserializeObject<Ratio>(json)", span="1387-1387"];
m14_730 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonSerializerTest.cs", label="Assert.AreEqual(ratio.Numerator, ratio2.Numerator)", span="1390-1390"];
m14_731 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", span="1380-1380"];
m14_2933 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", span="6075-6075"];
m14_2934 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonSerializerTest.cs", label="var serializer = JsonSerializer.Create(new JsonSerializerSettings())", span="6077-6077"];
m14_2935 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonSerializerTest.cs", label="var dict = serializer.Deserialize<Dictionary<string, string>>(new JsonTextReader(new StringReader(''{'k1':'','k2':'v2'}'')))", span="6078-6078"];
m14_2936 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual('''', dict[''k1''])", span="6080-6080"];
m14_2937 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''v2'', dict[''k2''])", span="6081-6081"];
m14_2938 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", span="6075-6075"];
m14_169 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DisallowNull_NoValue()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DisallowNull_NoValue()", span="380-380"];
m14_170 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DisallowNull_NoValue()", file="JsonSerializerTest.cs", label="Binding_DisallowNull o = JsonConvert.DeserializeObject<Binding_DisallowNull>(''{}'')", span="382-382"];
m14_171 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DisallowNull_NoValue()", file="JsonSerializerTest.cs", label="Assert.IsNull(o.RequiredProperty)", span="383-383"];
m14_172 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DisallowNull_NoValue()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DisallowNull_NoValue()", span="380-380"];
m14_3224 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", span="6673-6673"];
m14_3225 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="JsonSerializerTest.cs", label="string s = (string)new JsonSerializer().Deserialize(new JsonTextReader(new StringReader('''''')))", span="6675-6675"];
m14_3226 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="JsonSerializerTest.cs", label="Assert.AreEqual('''', s)", span="6676-6676"];
m14_3227 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", span="6673-6673"];
m14_1227 [cluster="System.Collections.Generic.Stack<T>.Stack()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.Stack<T>.Stack()", span="0-0"];
m14_2919 [cluster="Newtonsoft.Json.Tests.TestObjects.NullableGuidCountingJsonTextWriter.NullableGuidCountingJsonTextWriter(System.IO.TextWriter)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.NullableGuidCountingJsonTextWriter.NullableGuidCountingJsonTextWriter(System.IO.TextWriter)", span="32-32"];
m14_3373 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", span="7010-7010"];
m14_3374 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="JsonSerializerTest.cs", label="KeyValuePair<int, string> result =\r\n                JsonConvert.DeserializeObject<KeyValuePair<int, string>>(\r\n                    ''{key: 123, \''VALUE\'': \''test value\''}''\r\n                )", span="7012-7015"];
m14_3375 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(123, result.Key)", span="7017-7017"];
m14_3376 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''test value'', result.Value)", span="7018-7018"];
m14_3377 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", span="7010-7010"];
m14_2052 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", span="4137-4137"];
m14_2053 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", span="4137-4137"];
m14_2729 [cluster="System.TimeSpan.FromDays(double)", file="JsonSerializerTest.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m14_3630 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Type)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Type)", span="7731-7731"];
m14_3631 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Type)", color=red, community=0, file="JsonSerializerTest.cs", label="0: return ((sourceType == typeof(string)) || base.CanConvertFrom(context, sourceType));", span="7733-7733"];
m14_3632 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Type)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Type)", span="7731-7731"];
m14_958 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", span="1806-1806"];
m14_959 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs", label="string value = @''{''''Name'''':''''Orange'''', ''''Price'''':3.99, ''''ExpiryDate'''':''''01/24/2010 12:00:00''''}''", span="1808-1808"];
m14_960 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs", label="Product p = JsonConvert.DeserializeObject(value, typeof(Product)) as Product", span="1810-1810"];
m14_961 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Orange'', p.Name)", span="1812-1812"];
m14_962 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(2010, 1, 24, 12, 0, 0), p.ExpiryDate)", span="1813-1813"];
m14_963 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3.99m, p.Price)", span="1814-1814"];
m14_964 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", span="1806-1806"];
m14_1511 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", span="2894-2894"];
m14_1512 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="JsonSerializerTest.cs", label="Person person = new Person\r\n            {\r\n                Name = ''Mike Manager'',\r\n                BirthDate = new DateTime(1983, 8, 3, 0, 0, 0, DateTimeKind.Utc),\r\n                Department = ''IT'',\r\n                LastModified = new DateTime(2009, 2, 15, 0, 0, 0, DateTimeKind.Utc)\r\n            }", span="2896-2902"];
m14_1513 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="JsonSerializerTest.cs", label="return person;", span="2903-2903"];
m14_1514 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", span="2894-2894"];
m14_2658 [cluster="Newtonsoft.Json.Tests.TestObjects.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", span="34-34"];
m14_785 [cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="422-422"];
m14_1020 [cluster="Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass.SetOnlyPropertyClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass.SetOnlyPropertyClass()", span="27-27"];
m14_3617 [cluster="Size.cstr", file="JsonSerializerTest.cs", label="Entry Size.cstr", span=""];
m14_1558 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", span="3015-3015"];
m14_1559 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonSerializerTest.cs", label="string json = ''{ 'testProperty1': 'value' }''", span="3019-3019"];
m14_1560 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<ConstructorAndRequiredTestClass>(json)", span="3020-3020"];
m14_1561 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonSerializerTest.cs", label="Assert.Fail()", span="3022-3022"];
m14_1562 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonSerializerTest.cs", label=JsonSerializationException, span="3024-3024"];
m14_1563 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonSerializerTest.cs", label="Assert.IsTrue(ex.Message.StartsWith(''Required property 'TestProperty2' not found in JSON. Path ''''))", span="3026-3026"];
m14_1564 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", span="3015-3015"];
m14_2777 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="1047-1047"];
m14_1468 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", span="2789-2789"];
m14_1469 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''FirstName'''': ''''Bob''''\r\n}''", span="2793-2795"];
m14_1470 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="2797-2797"];
m14_1471 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonSerializerTest.cs", label="Assert.Fail()", span="2798-2798"];
m14_1472 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonSerializerTest.cs", label=JsonSerializationException, span="2800-2800"];
m14_1473 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonSerializerTest.cs", label="Assert.IsTrue(ex.Message.StartsWith(''Required property 'LastName' not found in JSON. Path ''''))", span="2802-2802"];
m14_1474 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", span="2789-2789"];
m14_3979 [cluster="Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", span="500-500"];
m14_386 [cluster="System.Collections.ObjectModel.ObservableCollection<T>.ObservableCollection()", file="JsonSerializerTest.cs", label="Entry System.Collections.ObjectModel.ObservableCollection<T>.ObservableCollection()", span="0-0"];
m14_1461 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", span="2772-2772"];
m14_1462 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                RequiredMembersClass requiredMembersClass = new RequiredMembersClass\r\n                {\r\n                    FirstName = null,\r\n                    BirthDate = new DateTime(2000, 10, 10, 10, 10, 10, DateTimeKind.Utc),\r\n                    LastName = null,\r\n                    MiddleName = null\r\n                };\r\n\r\n                string json = JsonConvert.SerializeObject(requiredMembersClass);\r\n            }, ''Cannot write a null value for property 'FirstName'. Property requires a value. Path ''.'')", span="2774-2785"];
m14_1463 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", span="2772-2772"];
m14_782 [cluster="Newtonsoft.Json.Linq.JValue.JValue(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(string)", span="154-154"];
m14_2489 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="5117-5117"];
m14_2490 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", color=red, community=0, file="JsonSerializerTest.cs", label="0: info.AddValue(''Name'', _name)", span="5119-5119"];
m14_2491 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="5117-5117"];
m14_3790 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt32(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt32(System.IFormatProvider)", span="8036-8036"];
m14_3791 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt32(System.IFormatProvider)", color=red, community=0, file="JsonSerializerTest.cs", label="0: throw new InvalidCastException();", span="8038-8038"];
m14_3792 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt32(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt32(System.IFormatProvider)", span="8036-8036"];
m14_1879 [cluster="System.Collections.Generic.List<T>.Add(T)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m14_940 [cluster="System.Console.WriteLine(string)", file="JsonSerializerTest.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m14_3750 [cluster="System.InvalidCastException.InvalidCastException()", file="JsonSerializerTest.cs", label="Entry System.InvalidCastException.InvalidCastException()", span="0-0"];
m14_2475 [cluster="Newtonsoft.Json.Tests.TestObjects.Vector.Vector()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Vector.Vector()", span="27-27"];
m14_2666 [cluster="Newtonsoft.Json.Tests.TestObjects.ClassAttributeDerived.ClassAttributeDerived()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ClassAttributeDerived.ClassAttributeDerived()", span="27-27"];
m14_3047 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", span="6278-6278"];
m14_3048 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonSerializerTest.cs", label="var person = PersonWithPrivateConstructor.CreatePerson()", span="6280-6280"];
m14_3049 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonSerializerTest.cs", label="person.Name = ''John Doe''", span="6281-6281"];
m14_3050 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonSerializerTest.cs", label="person.Age = 25", span="6282-6282"];
m14_3051 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonSerializerTest.cs", label="var serializedPerson = JsonConvert.SerializeObject(person)", span="6284-6284"];
m14_3053 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(person.Name, roundtrippedPerson.Name)", span="6287-6287"];
m14_3052 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonSerializerTest.cs", label="var roundtrippedPerson = JsonConvert.DeserializeObject<PersonWithPrivateConstructor>(serializedPerson)", span="6285-6285"];
m14_3054 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", span="6278-6278"];
m14_1669 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", span="3281-3281"];
m14_1670 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="string json = @''/*comment1*/ { /*comment2*/\r\n        ''''Name'''': /*comment3*/ ''''Apple'''' /*comment4*/, /*comment5*/\r\n        ''''ExpiryDate'''': ''''\/Date(1230422400000)\/'''',\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''': /*comment6*/ [ /*comment7*/\r\n          ''''Small'''', /*comment8*/\r\n          ''''Medium'''' /*comment9*/,\r\n          /*comment10*/ ''''Large''''\r\n        /*comment11*/ ] /*comment12*/\r\n      } /*comment13*/''", span="3283-3292"];
m14_1671 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="Product deserializedProduct = (Product)JsonConvert.DeserializeObject(json, typeof(Product))", span="3294-3294"];
m14_1672 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Apple'', deserializedProduct.Name)", span="3296-3296"];
m14_1673 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(2008, 12, 28, 0, 0, 0, DateTimeKind.Utc), deserializedProduct.ExpiryDate)", span="3297-3297"];
m14_1674 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3.99m, deserializedProduct.Price)", span="3298-3298"];
m14_1675 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Small'', deserializedProduct.Sizes[0])", span="3299-3299"];
m14_1676 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Medium'', deserializedProduct.Sizes[1])", span="3300-3300"];
m14_1677 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Large'', deserializedProduct.Sizes[2])", span="3301-3301"];
m14_1678 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", span="3281-3281"];
m14_930 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", span="1741-1741"];
m14_931 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Store store = new Store()", span="1743-1743"];
m14_932 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs", label="string jsonText = JsonConvert.SerializeObject(store)", span="1745-1745"];
m14_934 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(store.Establised, deserializedStore.Establised)", span="1749-1749"];
m14_935 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(store.product.Count, deserializedStore.product.Count)", span="1750-1750"];
m14_933 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Store deserializedStore = (Store)JsonConvert.DeserializeObject(jsonText, typeof(Store))", span="1747-1747"];
m14_936 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Console.WriteLine(jsonText)", span="1752-1752"];
m14_937 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", span="1741-1741"];
m14_2229 [cluster="Unk.ToString", file="JsonSerializerTest.cs", label="Entry Unk.ToString", span=""];
m14_3505 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionary<TKey, TValue>.NoConstructorReadOnlyDictionary()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionary<TKey, TValue>.NoConstructorReadOnlyDictionary()", span="7350-7350"];
m14_3506 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionary<TKey, TValue>.NoConstructorReadOnlyDictionary()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionary<TKey, TValue>.NoConstructorReadOnlyDictionary()", span="7350-7350"];
m14_3249 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", span="6721-6721"];
m14_3250 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="JsonSerializerTest.cs", label="Event1 e = new Event1\r\n            {\r\n                EventName = ''Blackadder III'',\r\n                Venue = ''Gryphon Theatre'',\r\n                Performances = new List<DateTime>\r\n                {\r\n                    DateTimeUtils.ConvertJavaScriptTicksToDateTime(1336458600000),\r\n                    DateTimeUtils.ConvertJavaScriptTicksToDateTime(1336545000000),\r\n                    DateTimeUtils.ConvertJavaScriptTicksToDateTime(1336636800000)\r\n                }\r\n            }", span="6723-6733"];
m14_3251 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(e, Formatting.Indented)", span="6735-6735"];
m14_3252 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''EventName'''': ''''Blackadder III'''',\r\n  ''''Venue'''': ''''Gryphon Theatre'''',\r\n  ''''Performances'''': [\r\n    new Date(\r\n      1336458600000\r\n    ),\r\n    new Date(\r\n      1336545000000\r\n    ),\r\n    new Date(\r\n      1336636800000\r\n    )\r\n  ]\r\n}'', json)", span="6746-6760"];
m14_3253 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", span="6721-6721"];
m14_1191 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", span="2275-2275"];
m14_1192 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="ClassWithArray wibble = new ClassWithArray()", span="2277-2277"];
m14_1193 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="wibble.Foo = ''hello''", span="2278-2278"];
m14_1194 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="wibble.Bar.Add(1)", span="2279-2279"];
m14_1195 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="wibble.Bar.Add(2)", span="2280-2280"];
m14_1196 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="wibble.Bar.Add(3)", span="2281-2281"];
m14_1197 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(wibble)", span="2282-2282"];
m14_1198 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="ClassWithArray wibbleOut = JsonConvert.DeserializeObject<ClassWithArray>(json)", span="2284-2284"];
m14_1199 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''hello'', wibbleOut.Foo)", span="2285-2285"];
m14_1200 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(5, wibbleOut.Bar.Count)", span="2287-2287"];
m14_1201 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(int.MaxValue, wibbleOut.Bar[0])", span="2288-2288"];
m14_1202 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(int.MaxValue, wibbleOut.Bar[1])", span="2289-2289"];
m14_1203 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, wibbleOut.Bar[2])", span="2290-2290"];
m14_1204 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, wibbleOut.Bar[3])", span="2291-2291"];
m14_1205 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, wibbleOut.Bar[4])", span="2292-2292"];
m14_1206 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", span="2275-2275"];
m14_2140 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", span="4403-4403"];
m14_2141 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="Person person = new Person()", span="4405-4405"];
m14_2142 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="person.BirthDate = new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc)", span="4406-4406"];
m14_2143 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="person.LastModified = person.BirthDate", span="4407-4407"];
m14_2144 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="person.Department = ''Department!''", span="4408-4408"];
m14_2145 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="person.Name = ''Name!''", span="4409-4409"];
m14_2149 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="ISerializableTestObject o = new ISerializableTestObject(''String!'', int.MinValue, dateTimeOffset, person)", span="4419-4419"];
m14_2146 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="DateTimeOffset dateTimeOffset = new DateTimeOffset(2000, 12, 20, 22, 59, 59, TimeSpan.FromHours(2))", span="4411-4411"];
m14_2147 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="string dateTimeOffsetText", span="4412-4412"];
m14_2155 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dateTimeOffset, o2._dateTimeOffsetValue)", span="4453-4453"];
m14_2148 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="dateTimeOffsetText = @''\/Date(977345999000+0200)\/''", span="4414-4414"];
m14_2151 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''stringValue'''': ''''String!'''',\r\n  ''''intValue'''': -2147483648,\r\n  ''''dateTimeOffsetValue'''': '''''' + dateTimeOffsetText + @'''''',\r\n  ''''personValue'''': {\r\n    ''''Name'''': ''''Name!'''',\r\n    ''''BirthDate'''': ''''\/Date(946688461000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(946688461000)\/''''\r\n  },\r\n  ''''nullPersonValue'''': null,\r\n  ''''nullableInt'''': null,\r\n  ''''booleanValue'''': false,\r\n  ''''byteValue'''': 0,\r\n  ''''charValue'''': ''''\u0000'''',\r\n  ''''dateTimeValue'''': ''''\/Date(-62135596800000)\/'''',\r\n  ''''decimalValue'''': 0.0,\r\n  ''''shortValue'''': 0,\r\n  ''''longValue'''': 0,\r\n  ''''sbyteValue'''': 0,\r\n  ''''floatValue'''': 0.0,\r\n  ''''ushortValue'''': 0,\r\n  ''''uintValue'''': 0,\r\n  ''''ulongValue'''': 0\r\n}'', json)", span="4425-4448"];
m14_2150 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n            })", span="4421-4424"];
m14_2152 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="ISerializableTestObject o2 = JsonConvert.DeserializeObject<ISerializableTestObject>(json)", span="4450-4450"];
m14_2153 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''String!'', o2._stringValue)", span="4451-4451"];
m14_2154 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="Assert.AreEqual(int.MinValue, o2._intValue)", span="4452-4452"];
m14_2156 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Name!'', o2._personValue.Name)", span="4454-4454"];
m14_2157 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, o2._nullPersonValue)", span="4455-4455"];
m14_2158 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, o2._nullableInt)", span="4456-4456"];
m14_2159 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", span="4403-4403"];
m14_3445 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", span="7191-7191"];
m14_3446 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="JsonSerializerTest.cs", label="NullableFloats floats = new NullableFloats\r\n            {\r\n                Object = double.NaN,\r\n                ObjectNull = null,\r\n                Float = float.NaN,\r\n                NullableDouble = double.NaN,\r\n                NullableFloat = null\r\n            }", span="7193-7200"];
m14_3447 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(floats, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                FloatFormatHandling = FloatFormatHandling.DefaultValue\r\n            })", span="7202-7205"];
m14_3448 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Object'''': 0.0,\r\n  ''''Float'''': 0.0,\r\n  ''''Double'''': 0.0,\r\n  ''''NullableFloat'''': null,\r\n  ''''NullableDouble'''': null,\r\n  ''''ObjectNull'''': null\r\n}'', json)", span="7207-7214"];
m14_3449 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", span="7191-7191"];
m14_1338 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", span="2541-2541"];
m14_1339 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="2543-2543"];
m14_1340 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="2544-2544"];
m14_1344 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="2551-2551"];
m14_1345 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testDate, m2.MemberConverter)", span="2552-2552"];
m14_1341 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(m1, new JavaScriptDateTimeConverter())", span="2546-2546"];
m14_1342 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''DefaultConverter'''':new Date(0),''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="2547-2547"];
m14_1343 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json, new JavaScriptDateTimeConverter())", span="2549-2549"];
m14_1346 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", span="2541-2541"];
m14_2899 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", span="6012-6012"];
m14_2900 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonSerializerTest.cs", label="string json = @''{''''Id'''':null}''", span="6014-6014"];
m14_2901 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonSerializerTest.cs", label="var c = JsonConvert.DeserializeObject<NullableGuid>(json)", span="6015-6015"];
m14_2902 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, c.Id)", span="6017-6017"];
m14_2903 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonSerializerTest.cs", label="json = @''{''''Id'''':''''d8220a4b-75b1-4b7a-8112-b7bdae956a45''''}''", span="6019-6019"];
m14_2904 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonSerializerTest.cs", label="c = JsonConvert.DeserializeObject<NullableGuid>(json)", span="6020-6020"];
m14_2905 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new Guid(''d8220a4b-75b1-4b7a-8112-b7bdae956a45''), c.Id)", span="6022-6022"];
m14_2906 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", span="6012-6012"];
m14_1574 [cluster="Newtonsoft.Json.Tests.TestObjects.SubKlass.SubKlass(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.SubKlass.SubKlass(string)", span="31-31"];
m14_2741 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="149-149"];
m14_1709 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", span="3385-3385"];
m14_1710 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''Children'''': [\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''First''''\r\n    },\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''Second''''\r\n    }\r\n  ],\r\n  ''''Text'''': ''''Blah, blah, blah''''\r\n}''", span="3387-3399"];
m14_1711 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="Content content = JsonConvert.DeserializeObject<Content>(json)", span="3401-3401"];
m14_1712 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Blah, blah, blah'', content.Text)", span="3403-3403"];
m14_1713 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, content.Children.Count)", span="3404-3404"];
m14_1714 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''First'', content.Children[0].Text)", span="3405-3405"];
m14_1715 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Second'', content.Children[1].Text)", span="3406-3406"];
m14_1716 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", span="3385-3385"];
m14_923 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m14_917 [cluster="DataContractJsonSerializer.cstr", file="JsonSerializerTest.cs", label="Entry DataContractJsonSerializer.cstr", span=""];
m14_4072 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="8646-8646"];
m14_89 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="248-248"];
m14_90 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<IList<bool>>(@''[null]'')", span="248-248"];
m14_91 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="248-248"];
m14_95 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="256-256"];
m14_96 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<IList<bool>>(@''['2000-12-20T10:55:55Z']'')", span="256-256"];
m14_97 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="256-256"];
m14_101 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="264-264"];
m14_102 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<IList<bool>>(@''['pie']'')", span="264-264"];
m14_103 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="264-264"];
m14_107 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="272-272"];
m14_108 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<IList<bool>>(@''['']'')", span="272-272"];
m14_109 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="272-272"];
m14_160 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="370-370"];
m14_161 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<Binding>(''{requiredProperty:''}'')", span="370-370"];
m14_162 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="370-370"];
m14_166 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="376-376"];
m14_167 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<Binding_DisallowNull>(''{requiredProperty:''}'')", span="376-376"];
m14_168 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="376-376"];
m14_177 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="389-389"];
m14_178 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<FooRequired>(''{Bars:''}'')", span="389-389"];
m14_179 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="389-389"];
m14_188 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="403-403"];
m14_189 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.SerializeObject(new Binding_DisallowNull())", span="403-403"];
m14_190 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="403-403"];
m14_201 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="419-419"];
m14_202 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.SerializeObject(new DictionaryWithNoNull())", span="419-419"];
m14_203 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="419-419"];
m14_222 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="455-455"];
m14_225 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="459-459"];
m14_228 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="463-463"];
m14_231 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="467-467"];
m14_234 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="471-471"];
m14_237 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="475-475"];
m14_240 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="479-479"];
m14_223 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<IList<object>>(''[1,'')", span="455-455"];
m14_224 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="455-455"];
m14_226 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<IList<int>>(''[1,'')", span="459-459"];
m14_227 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="459-459"];
m14_229 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<IList<int>>(''[1'')", span="463-463"];
m14_230 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="463-463"];
m14_232 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<IDictionary<string, int>>(''{'key':1,'')", span="467-467"];
m14_233 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="467-467"];
m14_235 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<IDictionary<string, int>>(''{'key':1'')", span="471-471"];
m14_236 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="471-471"];
m14_238 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<IncompleteTestClass>(''{'key':1,'')", span="475-475"];
m14_239 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="475-475"];
m14_241 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<IncompleteTestClass>(''{'key':1'')", span="479-479"];
m14_242 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="479-479"];
m14_264 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.SerializeObject(c1)", span="501-501"];
m14_263 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="501-501"];
m14_266 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="514-514"];
m14_269 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="518-518"];
m14_265 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="501-501"];
m14_267 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<RequiredPropertyTestClass>(@''{}'')", span="514-514"];
m14_268 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="514-514"];
m14_270 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<RequiredPropertyTestClass>(@''{''''Name'''':null}'')", span="518-518"];
m14_271 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="518-518"];
m14_284 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.SerializeObject(c1)", span="532-532"];
m14_283 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="532-532"];
m14_286 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="542-542"];
m14_285 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="532-532"];
m14_287 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<RequiredPropertyConstructorTestClass>(@''{}'')", span="542-542"];
m14_288 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="542-542"];
m14_369 [cluster="lambda expression", file="JsonSerializerTest.cs", label="a.ErrorContext.Handled = true", span="810-810"];
m14_368 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="810-810"];
m14_370 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="810-810"];
m14_469 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<List<Version>>(json)", span="977-977"];
m14_468 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="977-977"];
m14_470 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="977-977"];
m14_650 [cluster="lambda expression", file="JsonSerializerTest.cs", label=referenceResolver, span="1227-1227"];
m14_649 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="1227-1227"];
m14_651 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="1227-1227"];
m14_924 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="1721-1721"];
m14_927 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="1724-1724"];
m14_925 [cluster="lambda expression", file="JsonSerializerTest.cs", label="p.Name", span="1721-1721"];
m14_926 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="1721-1721"];
m14_928 [cluster="lambda expression", file="JsonSerializerTest.cs", label="p.Name", span="1724-1724"];
m14_929 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="1724-1724"];
m14_1059 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="2047-2047"];
m14_1060 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.SerializeObject(new BadJsonPropertyClass())", span="2047-2047"];
m14_1061 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="2047-2047"];
m14_1068 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<List<string>>(json)", span="2055-2055"];
m14_1067 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="2055-2055"];
m14_1069 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="2055-2055"];
m14_1370 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="2593-2597"];
m14_1371 [cluster="lambda expression", file="JsonSerializerTest.cs", label="IncompatibleJsonAttributeClass c = new IncompatibleJsonAttributeClass()", span="2595-2595"];
m14_1372 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.SerializeObject(c)", span="2596-2596"];
m14_1373 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="2593-2597"];
m14_1464 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="2774-2785"];
m14_1465 [cluster="lambda expression", file="JsonSerializerTest.cs", label="RequiredMembersClass requiredMembersClass = new RequiredMembersClass\r\n                {\r\n                    FirstName = null,\r\n                    BirthDate = new DateTime(2000, 10, 10, 10, 10, 10, DateTimeKind.Utc),\r\n                    LastName = null,\r\n                    MiddleName = null\r\n                }", span="2776-2782"];
m14_1466 [cluster="lambda expression", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(requiredMembersClass)", span="2784-2784"];
m14_1467 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="2774-2785"];
m14_1509 [cluster="lambda expression", file="JsonSerializerTest.cs", label="InterfacePropertyTestClass testFromDe = (InterfacePropertyTestClass)JsonConvert.DeserializeObject(strFromTest, typeof(InterfacePropertyTestClass))", span="2890-2890"];
m14_1508 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="2888-2891"];
m14_1510 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="2888-2891"];
m14_1608 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3116-3122"];
m14_1609 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonPropertyWithHandlingValues o = new JsonPropertyWithHandlingValues()", span="3118-3118"];
m14_1610 [cluster="lambda expression", file="JsonSerializerTest.cs", label="o.ReferenceLoopHandlingErrorProperty = o", span="3119-3119"];
m14_1611 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings { ReferenceLoopHandling = ReferenceLoopHandling.Ignore })", span="3121-3121"];
m14_1612 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3116-3122"];
m14_1741 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<Event>(json)", span="3449-3449"];
m14_1740 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3449-3449"];
m14_1742 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3449-3449"];
m14_1768 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<Person>(json)", span="3488-3488"];
m14_1767 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3488-3488"];
m14_1769 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3488-3488"];
m14_1775 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<Dictionary<string, string>>(json)", span="3498-3498"];
m14_1774 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3498-3498"];
m14_1776 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3498-3498"];
m14_1782 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<Exception>(json)", span="3509-3509"];
m14_1781 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3509-3509"];
m14_1783 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3509-3509"];
m14_1789 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<double>(json)", span="3521-3521"];
m14_1788 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3521-3521"];
m14_1790 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3521-3521"];
m14_1796 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<DynamicDictionary>(json)", span="3532-3532"];
m14_1795 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3532-3532"];
m14_1797 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3532-3532"];
m14_1803 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<JObject>(json)", span="3545-3545"];
m14_1802 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3545-3545"];
m14_1804 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3545-3545"];
m14_1810 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<Person>(json)", span="3558-3558"];
m14_1809 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3558-3558"];
m14_1811 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3558-3558"];
m14_1817 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<List<Person>>(json)", span="3566-3566"];
m14_1816 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3566-3566"];
m14_1818 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3566-3566"];
m14_1831 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.PopulateObject(json, new Person())", span="3592-3592"];
m14_1830 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3592-3592"];
m14_1832 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3592-3592"];
m14_1839 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.PopulateObject(json, new List<Person>())", span="3600-3600"];
m14_1838 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3600-3600"];
m14_1840 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3600-3600"];
m14_1849 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3615-3626"];
m14_1850 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.SerializeObject(new MemoryStream(), new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(PORTABLE || DNXCORE50 || PORTABLE40) || NETSTANDARD1_3\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                })", span="3617-3625"];
m14_1851 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3615-3626"];
m14_1856 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3632-3643"];
m14_1857 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:0}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(PORTABLE || DNXCORE50 || PORTABLE40) || NETSTANDARD1_3\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                })", span="3634-3642"];
m14_1858 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3632-3643"];
m14_1862 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3649-3660"];
m14_1863 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:''}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(PORTABLE || DNXCORE50 || PORTABLE40) || NETSTANDARD1_3\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                })", span="3651-3659"];
m14_1864 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3649-3660"];
m14_1868 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3666-3677"];
m14_1869 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:null}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                })", span="3668-3676"];
m14_1870 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3666-3677"];
m14_2007 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<DictionaryWithNoDefaultConstructor>(json, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.All,\r\n                MetadataPropertyHandling = MetadataPropertyHandling.Default\r\n            })", span="3993-3997"];
m14_2006 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3993-3997"];
m14_2008 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3993-3997"];
m14_2266 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<Dictionary<string, object>>(json)", span="4684-4684"];
m14_2265 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="4684-4684"];
m14_2267 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="4684-4684"];
m14_2271 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="4690-4705"];
m14_2272 [cluster="lambda expression", file="JsonSerializerTest.cs", label="var reference = new Dictionary<string, object>()", span="4694-4694"];
m14_2273 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reference.Add(''$ref'', 1)", span="4695-4695"];
m14_2274 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reference.Add(''$id'', 1)", span="4696-4696"];
m14_2278 [cluster="lambda expression", file="JsonSerializerTest.cs", label="child.Add(''Father'', reference)", span="4701-4701"];
m14_2275 [cluster="lambda expression", file="JsonSerializerTest.cs", label="var child = new Dictionary<string, object>()", span="4698-4698"];
m14_2276 [cluster="lambda expression", file="JsonSerializerTest.cs", label="child.Add(''_id'', 2)", span="4699-4699"];
m14_2277 [cluster="lambda expression", file="JsonSerializerTest.cs", label="child.Add(''Name'', ''Isabell'')", span="4700-4700"];
m14_2279 [cluster="lambda expression", file="JsonSerializerTest.cs", label="var json = JsonConvert.SerializeObject(child, Formatting.Indented)", span="4703-4703"];
m14_2280 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<Dictionary<string, object>>(json)", span="4704-4704"];
m14_2281 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="4690-4705"];
m14_2369 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<StringDictionaryTestClass>(json)", span="4884-4884"];
m14_2368 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="4884-4884"];
m14_2370 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="4884-4884"];
m14_2568 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="5290-5290"];
m14_2569 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject(''null'', typeof(DateTime))", span="5290-5290"];
m14_2570 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="5290-5290"];
m14_2855 [cluster="lambda expression", file="JsonSerializerTest.cs", label="List<int> numbers = JsonConvert.DeserializeObject<List<int>>(json)", span="5919-5919"];
m14_2854 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="5917-5920"];
m14_2856 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="5917-5920"];
m14_2869 [cluster="lambda expression", color=red, community=0, file="JsonSerializerTest.cs", label="0: JsonConvert.DeserializeObject<ConvertableIntTestClass>(json)", span="5959-5959"];
m14_2868 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="5959-5959"];
m14_2870 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="5959-5959"];
m14_2888 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="5988-5996"];
m14_2889 [cluster="lambda expression", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''PreProperty'''': true,\r\n  ''''PostProperty'''': ''''-1''''\r\n}''", span="5990-5993"];
m14_2890 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<TestObjects.MyClass>(json)", span="5995-5995"];
m14_2891 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="5988-5996"];
m14_2895 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="6002-6008"];
m14_2896 [cluster="lambda expression", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''PreProperty'''': ''", span="6004-6005"];
m14_2897 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<TestObjects.MyClass>(json)", span="6007-6007"];
m14_2898 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="6002-6008"];
m14_2984 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="6164-6164"];
m14_2985 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<double>('''')", span="6164-6164"];
m14_2986 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="6164-6164"];
m14_2990 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="6170-6170"];
m14_2991 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<StringComparison>('''')", span="6170-6170"];
m14_2992 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="6170-6170"];
m14_2996 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="6176-6176"];
m14_2997 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<int>('''')", span="6176-6176"];
m14_2998 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="6176-6176"];
m14_3006 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="6190-6190"];
m14_3007 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<double>(null)", span="6190-6190"];
m14_3008 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="6190-6190"];
m14_3012 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="6202-6202"];
m14_3013 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject(null)", span="6202-6202"];
m14_3014 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="6202-6202"];
m14_3128 [cluster="lambda expression", file="JsonSerializerTest.cs", label="errors.Add(e.ErrorContext.Error.Message)", span="6435-6435"];
m14_3129 [cluster="lambda expression", file="JsonSerializerTest.cs", label="e.ErrorContext.Handled = true", span="6436-6436"];
m14_3127 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="6433-6437"];
m14_3130 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="6433-6437"];
m14_3143 [cluster="lambda expression", file="JsonSerializerTest.cs", label="errors.Add(e.ErrorContext.Error.Message)", span="6460-6460"];
m14_3144 [cluster="lambda expression", file="JsonSerializerTest.cs", label="e.ErrorContext.Handled = true", span="6461-6461"];
m14_3142 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="6458-6462"];
m14_3145 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="6458-6462"];
m14_3158 [cluster="lambda expression", file="JsonSerializerTest.cs", label="errors.Add(e.ErrorContext.Error.Message)", span="6483-6483"];
m14_3159 [cluster="lambda expression", file="JsonSerializerTest.cs", label="e.ErrorContext.Handled = true", span="6484-6484"];
m14_3157 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="6481-6485"];
m14_3160 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="6481-6485"];
m14_3283 [cluster="lambda expression", file="JsonSerializerTest.cs", label="s.Deserialize<Dictionary<string, int>>(new JsonTextReader(new StringReader(json)))", span="6832-6832"];
m14_3282 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="6832-6832"];
m14_3284 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="6832-6832"];
m14_3308 [cluster="lambda expression", file="JsonSerializerTest.cs", label="s.Deserialize<Dictionary<string, int>>(new JsonTextReader(new StringReader(json)))", span="6879-6879"];
m14_3307 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="6879-6879"];
m14_3309 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="6879-6879"];
m14_3320 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="6923-6935"];
m14_3321 [cluster="lambda expression", file="JsonSerializerTest.cs", label="string json = ''[{},1]''", span="6925-6925"];
m14_3322 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="6927-6927"];
m14_3324 [cluster="lambda expression", file="JsonSerializerTest.cs", label="var reader = new JsonTextReader(new StringReader(json))", span="6930-6930"];
m14_3323 [cluster="lambda expression", file="JsonSerializerTest.cs", label="serializer.CheckAdditionalContent = true", span="6928-6928"];
m14_3327 [cluster="lambda expression", file="JsonSerializerTest.cs", label="serializer.Deserialize(reader, typeof(ItemConverterTestClass))", span="6934-6934"];
m14_3325 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.Read()", span="6931-6931"];
m14_3326 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.Read()", span="6932-6932"];
m14_3328 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="6923-6935"];
m14_3353 [cluster="lambda expression", file="JsonSerializerTest.cs", label="serializer.Deserialize(reader, typeof(ItemConverterTestClass))", span="6979-6979"];
m14_3352 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="6979-6979"];
m14_3354 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="6979-6979"];
m14_3421 [cluster="lambda expression", file="JsonSerializerTest.cs", label="obj = JsonConvert.DeserializeObject<MyTuple<int>>(json)", span="7111-7111"];
m14_3420 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="7111-7111"];
m14_3422 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="7111-7111"];
m14_3502 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="7344-7344"];
m14_3503 [cluster="lambda expression", color=red, community=0, file="JsonSerializerTest.cs", label="0: JsonConvert.DeserializeObject<NoConstructorReadOnlyCollection<int>>(''[1]'')", span="7344-7344"];
m14_3504 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="7344-7344"];
m14_3510 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="7359-7359"];
m14_3511 [cluster="lambda expression", color=red, community=0, file="JsonSerializerTest.cs", label="0: JsonConvert.DeserializeObject<NoConstructorReadOnlyDictionary<int, int>>(''{'1':1}'')", span="7359-7359"];
m14_3512 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="7359-7359"];
m14_3520 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<IList<long>>(json)", span="7373-7373"];
m14_3519 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="7373-7373"];
m14_3521 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="7373-7373"];
m14_3701 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="7860-7860"];
m14_3702 [cluster="lambda expression", file="JsonSerializerTest.cs", label="new IdReferenceResolver()", span="7860-7860"];
m14_3703 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="7860-7860"];
m14_3932 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="8362-8362"];
m14_3933 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.SerializeObject(new ErroringTestClass())", span="8362-8362"];
m14_3934 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="8362-8362"];
m14_3939 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="8368-8368"];
m14_3940 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<string>(''020474068'')", span="8368-8368"];
m14_3941 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="8368-8368"];
m14_3960 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<System.Net.Mail.MailMessage>(\r\n                        JsonMessage,\r\n                        new MailAddressReadConverter(),\r\n                        new AttachmentReadConverter(),\r\n                        new EncodingReadConverter())", span="8451-8455"];
m14_3959 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="8449-8456"];
m14_3961 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="8449-8456"];
m14_4021 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<CompletionDataRequest>(s)", span="8561-8561"];
m14_4020 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="8561-8561"];
m14_4022 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="8561-8561"];
m14_4048 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="8614-8614"];
m14_4049 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<EmptyJsonValueTestClass>(''{ A: , B: 1, C: 123, D: 1.23, E: 3.45, F: null }'')", span="8614-8614"];
m14_4050 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="8614-8614"];
m14_4054 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="8622-8622"];
m14_4055 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<EmptyJsonValueTestClass>(''{ A: \''\'', B: , C: 123, D: 1.23, E: 3.45, F: null }'')", span="8622-8622"];
m14_4056 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="8622-8622"];
m14_4060 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="8630-8630"];
m14_4061 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<EmptyJsonValueTestClass>(''{ A: \''\'', B: 1, C: , D: 1.23, E: 3.45, F: null }'')", span="8630-8630"];
m14_4062 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="8630-8630"];
m14_4066 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="8638-8638"];
m14_4067 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<EmptyJsonValueTestClass>(''{ A: \''\'', B: 1, C: 123, D: , E: 3.45, F: null }'')", span="8638-8638"];
m14_4068 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="8638-8638"];
m14_4073 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<EmptyJsonValueTestClass>(''{ A: \''\'', B: 1, C: 123, D: 1.23, E: , F: null }'')", span="8646-8646"];
m14_4074 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="8646-8646"];
m14_405 [cluster="object.GetType()", file="JsonSerializerTest.cs", label="Entry object.GetType()", span="0-0"];
m14_3383 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", span="7037-7037"];
m14_3384 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonSerializerTest.cs", label="string json", span="7039-7039"];
m14_3385 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonSerializerTest.cs", label="IList<double> d = new List<double> { 1.1, double.NaN, double.PositiveInfinity }", span="7040-7040"];
m14_3386 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(d)", span="7042-7042"];
m14_3387 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(d, new JsonSerializerSettings { FloatFormatHandling = FloatFormatHandling.Symbol })", span="7045-7045"];
m14_3388 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(d, new JsonSerializerSettings { FloatFormatHandling = FloatFormatHandling.DefaultValue })", span="7048-7048"];
m14_3389 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''[1.1,0.0,0.0]'', json)", span="7051-7051"];
m14_3390 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", span="7037-7037"];
m14_3809 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", span="8076-8076"];
m14_3810 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonSerializerTest.cs", label="string originalUri = ''https://test.com?m=a%2bb''", span="8078-8078"];
m14_3811 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonSerializerTest.cs", label="Uri uriWithPlus = new Uri(originalUri)", span="8080-8080"];
m14_3814 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonSerializerTest.cs", label="Assert.AreEqual(originalUri, uriWithPlus2.OriginalString)", span="8086-8086"];
m14_3812 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonSerializerTest.cs", label="string jsonWithPlus = JsonConvert.SerializeObject(uriWithPlus)", span="8082-8082"];
m14_3813 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonSerializerTest.cs", label="Uri uriWithPlus2 = JsonConvert.DeserializeObject<Uri>(jsonWithPlus)", span="8084-8084"];
m14_3815 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", span="8076-8076"];
m14_4057 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableLongEmptyValue()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableLongEmptyValue()", span="8627-8627"];
m14_4058 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableLongEmptyValue()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                () => JsonConvert.DeserializeObject<EmptyJsonValueTestClass>(''{ A: \''\'', B: 1, C: , D: 1.23, E: 3.45, F: null }''),\r\n                ''An undefined token is not a valid System.Nullable`1[System.Int64]. Path 'C', line 1, position 18.'')", span="8629-8631"];
m14_4059 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableLongEmptyValue()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableLongEmptyValue()", span="8627-8627"];
m14_1348 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", span="2556-2556"];
m14_1349 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonSerializerTest.cs", label="DateTime date = Convert.ToDateTime(''1970-01-01T00:00:00Z'').ToUniversalTime()", span="2558-2558"];
m14_1350 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonSerializerTest.cs", label="MemberConverterClass c = new MemberConverterClass\r\n            {\r\n                DefaultConverter = date,\r\n                MemberConverter = date\r\n            }", span="2560-2564"];
m14_1351 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="2566-2566"];
m14_1352 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''DefaultConverter'''': ''''1970-01-01T00:00:00Z'''',\r\n  ''''MemberConverter'''': ''''1970-01-01T00:00:00Z''''\r\n}'', json)", span="2568-2571"];
m14_1353 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", span="2556-2556"];
m14_3507 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionaryTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionaryTest()", span="7357-7357"];
m14_3508 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionaryTest()", color=red, community=0, file="JsonSerializerTest.cs", label="0: ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<NoConstructorReadOnlyDictionary<int, int>>(''{'1':1}''), ''Cannot deserialize readonly or fixed size dictionary: Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+NoConstructorReadOnlyDictionary`2[System.Int32,System.Int32]. Path '1', line 1, position 5.'')", span="7359-7359"];
m14_3509 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionaryTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionaryTest()", span="7357-7357"];
m14_1645 [cluster="Newtonsoft.Json.Tests.TestObjects.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", span="37-37"];
m14_249 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter()", span="62-62"];
m14_455 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m14_1859 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", span="3647-3647"];
m14_1860 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:''}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(PORTABLE || DNXCORE50 || PORTABLE40) || NETSTANDARD1_3\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                });\r\n            }, @''Error converting value {null} to type 'System.Int32'. Path 'ReadTimeout', line 1, position 15.'')", span="3649-3660"];
m14_1861 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", span="3647-3647"];
m14_363 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadIntegerWithError()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadIntegerWithError()", span="801-801"];
m14_364 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadIntegerWithError()", file="JsonSerializerTest.cs", label="string json = @''{\r\n    ParentId: 1,\r\n    ChildId: 333333333333333333333333333333333333333\r\n}''", span="803-806"];
m14_365 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadIntegerWithError()", file="JsonSerializerTest.cs", label="Link l = JsonConvert.DeserializeObject<Link>(json, new JsonSerializerSettings\r\n            {\r\n                Error = (s, a) => a.ErrorContext.Handled = true\r\n            })", span="808-811"];
m14_366 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadIntegerWithError()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, l.ChildId)", span="813-813"];
m14_367 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadIntegerWithError()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadIntegerWithError()", span="801-801"];
m14_371 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", span="819-819"];
m14_372 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", file="JsonSerializerTest.cs", label="ObservableCollection<string> s = JsonConvert.DeserializeObject<ObservableCollection<string>>(''['1','2']'')", span="821-821"];
m14_373 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, s.Count)", span="822-822"];
m14_374 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''1'', s[0])", span="823-823"];
m14_375 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''2'', s[1])", span="824-824"];
m14_376 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", span="819-819"];
m14_1936 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", span="3809-3809"];
m14_1937 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs", label="string googleSearchText = @''{\r\n        ''''responseData'''': {\r\n          ''''results'''': [\r\n            {\r\n              ''''GsearchResultClass'''': ''''GwebSearch'''',\r\n              ''''unescapedUrl'''': ''''http://en.wikipedia.org/wiki/Paris_Hilton'''',\r\n              ''''url'''': ''''http://en.wikipedia.org/wiki/Paris_Hilton'''',\r\n              ''''visibleUrl'''': ''''en.wikipedia.org'''',\r\n              ''''cacheUrl'''': ''''http://www.google.com/search?q=cache:TwrPfhd22hYJ:en.wikipedia.org'''',\r\n              ''''title'''': ''''<b>Paris Hilton</b> - Wikipedia, the free encyclopedia'''',\r\n              ''''titleNoFormatting'''': ''''Paris Hilton - Wikipedia, the free encyclopedia'''',\r\n              ''''content'''': ''''[1] In 2006, she released her debut album...''''\r\n            },\r\n            {\r\n              ''''GsearchResultClass'''': ''''GwebSearch'''',\r\n              ''''unescapedUrl'''': ''''http://www.imdb.com/name/nm0385296/'''',\r\n              ''''url'''': ''''http://www.imdb.com/name/nm0385296/'''',\r\n              ''''visibleUrl'''': ''''www.imdb.com'''',\r\n              ''''cacheUrl'''': ''''http://www.google.com/search?q=cache:1i34KkqnsooJ:www.imdb.com'''',\r\n              ''''title'''': ''''<b>Paris Hilton</b>'''',\r\n              ''''titleNoFormatting'''': ''''Paris Hilton'''',\r\n              ''''content'''': ''''Self: Zoolander. Socialite <b>Paris Hilton</b>...''''\r\n            }\r\n          ],\r\n          ''''cursor'''': {\r\n            ''''pages'''': [\r\n              {\r\n                ''''start'''': ''''0'''',\r\n                ''''label'''': 1\r\n              },\r\n              {\r\n                ''''start'''': ''''4'''',\r\n                ''''label'''': 2\r\n              },\r\n              {\r\n                ''''start'''': ''''8'''',\r\n                ''''label'''': 3\r\n              },\r\n              {\r\n                ''''start'''': ''''12'''',\r\n                ''''label'''': 4\r\n              }\r\n            ],\r\n            ''''estimatedResultCount'''': ''''59600000'''',\r\n            ''''currentPageIndex'''': 0,\r\n            ''''moreResultsUrl'''': ''''http://www.google.com/search?oe=utf8&ie=utf8...''''\r\n          }\r\n        },\r\n        ''''responseDetails'''': null,\r\n        ''''responseStatus'''': 200\r\n      }''", span="3811-3861"];
m14_1938 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs", label="JObject googleSearch = JObject.Parse(googleSearchText)", span="3863-3863"];
m14_1939 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs", label="IList<JToken> results = googleSearch[''responseData''][''results''].Children().ToList()", span="3866-3866"];
m14_1940 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs", label="IList<SearchResult> searchResults = new List<SearchResult>()", span="3869-3869"];
m14_1941 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs", label=results, span="3870-3870"];
m14_1943 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs", label="searchResults.Add(searchResult)", span="3873-3873"];
m14_1944 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, searchResults.Count)", span="3884-3884"];
m14_1945 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''<b>Paris Hilton</b> - Wikipedia, the free encyclopedia'', searchResults[0].Title)", span="3885-3885"];
m14_1946 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''<b>Paris Hilton</b>'', searchResults[1].Title)", span="3886-3886"];
m14_1942 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs", label="SearchResult searchResult = JsonConvert.DeserializeObject<SearchResult>(result.ToString())", span="3872-3872"];
m14_1947 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", span="3809-3809"];
m14_828 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", span="1564-1564"];
m14_829 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs", label="var dictStore = new Dictionary<DictionaryKeyCast, int>()", span="1567-1567"];
m14_830 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs", label="var i = 0", span="1568-1568"];
m14_832 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs", label="dictStore.Add(new DictionaryKeyCast(i.ToString(CultureInfo.InvariantCulture), i), i)", span="1570-1570"];
m14_838 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs", label="jsonSerializer.Serialize(streamWriter, dictStore)", span="1577-1577"];
m14_831 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs", label="i < 800", span="1568-1568"];
m14_833 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs", label="i++", span="1568-1568"];
m14_834 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs", label="var settings = new JsonSerializerSettings { Formatting = Formatting.Indented }", span="1572-1572"];
m14_835 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs", label="var jsonSerializer = JsonSerializer.Create(settings)", span="1573-1573"];
m14_836 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs", label="var ms = new MemoryStream()", span="1574-1574"];
m14_842 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs", label="var deserialize = jsonSerializer.Deserialize(new StreamReader(ms), typeof(Dictionary<DictionaryKeyCast, int>))", span="1583-1583"];
m14_837 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs", label="var streamWriter = new StreamWriter(ms)", span="1576-1576"];
m14_840 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs", label="ms.Seek(0, SeekOrigin.Begin)", span="1580-1580"];
m14_839 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs", label="streamWriter.Flush()", span="1578-1578"];
m14_841 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs", label="var stopWatch = Stopwatch.StartNew()", span="1582-1582"];
m14_843 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs", label="stopWatch.Stop()", span="1584-1584"];
m14_844 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", span="1564-1564"];
m14_2083 [cluster="System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", span="0-0"];
m14_1500 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", span="2882-2882"];
m14_1501 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs", label="InterfacePropertyTestClass testClass = new InterfacePropertyTestClass()", span="2884-2884"];
m14_1502 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs", label="testClass.co = new Co()", span="2885-2885"];
m14_1503 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs", label="String strFromTest = JsonConvert.SerializeObject(testClass)", span="2886-2886"];
m14_1504 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                InterfacePropertyTestClass testFromDe = (InterfacePropertyTestClass)JsonConvert.DeserializeObject(strFromTest, typeof(InterfacePropertyTestClass));\r\n            }, @''Could not create an instance of type Newtonsoft.Json.Tests.TestObjects.ICo. Type is an interface or abstract class and cannot be instantiated. Path 'co.Name', line 1, position 14.'')", span="2888-2891"];
m14_1505 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", span="2882-2882"];
m14_2164 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", span="4473-4473"];
m14_2165 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs", label="List<KVPair<string, string>> kvPairs =\r\n                JsonConvert.DeserializeObject<List<KVPair<string, string>>>(\r\n                    ''[{\''Key\'':\''Two\'',\''Value\'':\''2\''},{\''Key\'':\''One\'',\''Value\'':\''1\''}]'')", span="4475-4477"];
m14_2166 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, kvPairs.Count)", span="4479-4479"];
m14_2167 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Two'', kvPairs[0].Key)", span="4480-4480"];
m14_2168 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''2'', kvPairs[0].Value)", span="4481-4481"];
m14_2169 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''One'', kvPairs[1].Key)", span="4482-4482"];
m14_2170 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''1'', kvPairs[1].Value)", span="4483-4483"];
m14_2171 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", span="4473-4473"];
m14_3369 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", span="7003-7003"];
m14_3370 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="JsonSerializerTest.cs", label="var actual = JsonConvert.DeserializeObject<ItemConverterTestClass>(@''{ ''''MyProperty'''':{''''Key'''':''''Y''''}}'')", span="7005-7005"];
m14_3371 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''X'', actual.MyProperty[''Key''])", span="7006-7006"];
m14_3372 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", span="7003-7003"];
m14_3769 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt16(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt16(System.IFormatProvider)", span="8001-8001"];
m14_3770 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt16(System.IFormatProvider)", color=red, community=0, file="JsonSerializerTest.cs", label="3: return (short)Value;", span="8003-8003"];
m14_3771 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt16(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt16(System.IFormatProvider)", span="8001-8001"];
m14_883 [cluster="Newtonsoft.Json.Tests.TestObjects.SubWithoutContractVirtualProperties.SubWithoutContractVirtualProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.SubWithoutContractVirtualProperties.SubWithoutContractVirtualProperties()", span="31-31"];
m14_771 [cluster="System.Text.RegularExpressions.Regex.ToString()", file="JsonSerializerTest.cs", label="Entry System.Text.RegularExpressions.Regex.ToString()", span="0-0"];
m14_2932 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, Newtonsoft.Json.TypeNameAssemblyFormatHandling, Newtonsoft.Json.Serialization.ISerializationBinder)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, Newtonsoft.Json.TypeNameAssemblyFormatHandling, Newtonsoft.Json.Serialization.ISerializationBinder)", span="147-147"];
m14_3003 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", span="6187-6187"];
m14_3004 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<ArgumentNullException>(\r\n                () => { JsonConvert.DeserializeObject<double>(null); },\r\n                new[]\r\n                {\r\n                    ''Value cannot be null.'' + Environment.NewLine + ''Parameter name: value'',\r\n                    ''Argument cannot be null.'' + Environment.NewLine + ''Parameter name: value'' // mono\r\n                })", span="6189-6195"];
m14_3005 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", span="6187-6187"];
m14_1913 [cluster="Newtonsoft.Json.Tests.TestObjects.Foo.Foo()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Foo.Foo()", span="31-31"];
m14_1922 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", span="3774-3774"];
m14_1923 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label="Dictionary<Person, int> dictionary = new Dictionary<Person, int>()", span="3776-3776"];
m14_1924 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label="dictionary.Add(new Person { Name = ''p1'' }, 1)", span="3777-3777"];
m14_1925 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label="dictionary.Add(new Person { Name = ''p2'' }, 2)", span="3778-3778"];
m14_1926 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(dictionary, Formatting.Indented)", span="3780-3780"];
m14_1927 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Organization.Person'''': 1,\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Organization.Person'''': 2\r\n}'', json)", span="3782-3785"];
m14_1928 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", span="3774-3774"];
m14_723 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.JsonSerializerInternalReader(Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.JsonSerializerInternalReader(Newtonsoft.Json.JsonSerializer)", span="60-60"];
m14_494 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", span="1015-1015"];
m14_495 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", file="JsonSerializerTest.cs", label="CommentTestObject o = JsonConvert.DeserializeObject<CommentTestObject>(@''{/* Test */}'')", span="1017-1017"];
m14_496 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, o.A)", span="1018-1018"];
m14_497 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", file="JsonSerializerTest.cs", label="o = JsonConvert.DeserializeObject<CommentTestObject>(@''{''''A'''': true/* Test */}'')", span="1020-1020"];
m14_498 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, o.A)", span="1021-1021"];
m14_499 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", span="1015-1015"];
m14_1251 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", span="2392-2392"];
m14_1252 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(StringComparison.CurrentCultureIgnoreCase)", span="2394-2394"];
m14_1253 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''1'', json)", span="2395-2395"];
m14_1254 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs", label="StringComparison s = JsonConvert.DeserializeObject<StringComparison>(json)", span="2397-2397"];
m14_1255 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(StringComparison.CurrentCultureIgnoreCase, s)", span="2398-2398"];
m14_1256 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", span="2392-2392"];
m14_2965 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", span="6137-6137"];
m14_2966 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="object v = JsonConvert.DeserializeObject<double?>('''')", span="6139-6139"];
m14_2967 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="Assert.IsNull(v)", span="6140-6140"];
m14_2968 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="v = JsonConvert.DeserializeObject<char?>('''')", span="6142-6142"];
m14_2969 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="Assert.IsNull(v)", span="6143-6143"];
m14_2970 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="v = JsonConvert.DeserializeObject<int?>('''')", span="6145-6145"];
m14_2971 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="Assert.IsNull(v)", span="6146-6146"];
m14_2972 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="v = JsonConvert.DeserializeObject<decimal?>('''')", span="6148-6148"];
m14_2973 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="Assert.IsNull(v)", span="6149-6149"];
m14_2974 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="v = JsonConvert.DeserializeObject<DateTime?>('''')", span="6151-6151"];
m14_2975 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="Assert.IsNull(v)", span="6152-6152"];
m14_2976 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="v = JsonConvert.DeserializeObject<DateTimeOffset?>('''')", span="6154-6154"];
m14_2977 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="Assert.IsNull(v)", span="6155-6155"];
m14_2978 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="v = JsonConvert.DeserializeObject<byte[]>('''')", span="6157-6157"];
m14_2979 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="Assert.IsNull(v)", span="6158-6158"];
m14_2980 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", span="6137-6137"];
m14_1888 [cluster="Newtonsoft.Json.Tests.TestObjects.ConstructorReadonlyFields.ConstructorReadonlyFields(string, int)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ConstructorReadonlyFields.ConstructorReadonlyFields(string, int)", span="32-32"];
m14_3928 [cluster="Newtonsoft.Json.Tests.TestObjects.DerivedConstructorType.DerivedConstructorType(string, string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.DerivedConstructorType.DerivedConstructorType(string, string)", span="29-29"];
m14_3552 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", span="7474-7474"];
m14_3553 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''MyNullableBool'''': '''''''',\r\n  ''''MyNullableInteger'''': '''''''',\r\n  ''''MyNullableDateTime'''': '''''''',\r\n  ''''MyNullableDateTimeOffset'''': '''''''',\r\n  ''''MyNullableDecimal'''': ''''''''\r\n}''", span="7476-7482"];
m14_3554 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs", label="NullableTestClass c2 = JsonConvert.DeserializeObject<NullableTestClass>(json)", span="7484-7484"];
m14_3555 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs", label="Assert.IsNull(c2.MyNullableBool)", span="7485-7485"];
m14_3556 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs", label="Assert.IsNull(c2.MyNullableInteger)", span="7486-7486"];
m14_3557 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs", label="Assert.IsNull(c2.MyNullableDateTime)", span="7487-7487"];
m14_3558 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs", label="Assert.IsNull(c2.MyNullableDateTimeOffset)", span="7488-7488"];
m14_3559 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs", label="Assert.IsNull(c2.MyNullableDecimal)", span="7489-7489"];
m14_3560 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", span="7474-7474"];
m14_2871 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", span="5964-5964"];
m14_2872 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="JsonSerializerTest.cs", label="Widget widget = new Widget { Id = new WidgetId { Value = ''id'' } }", span="5966-5966"];
m14_2873 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(widget)", span="5968-5968"];
m14_2874 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Id'''':{''''Value'''':''''id''''}}'', json)", span="5970-5970"];
m14_2875 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", span="5964-5964"];
m14_1219 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", span="2347-2347"];
m14_1220 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs", label="Stack<object> s = new Stack<object>()", span="2349-2349"];
m14_1221 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs", label="s.Push(1)", span="2350-2350"];
m14_1222 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs", label="s.Push(2)", span="2351-2351"];
m14_1223 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs", label="s.Push(3)", span="2352-2352"];
m14_1224 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(s)", span="2354-2354"];
m14_1225 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''[3,2,1]'', json)", span="2355-2355"];
m14_1226 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", span="2347-2347"];
m14_3919 [cluster="Newtonsoft.Json.Tests.TestObjects.MyObservableObject.MyObservableObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.MyObservableObject.MyObservableObject()", span="27-27"];
m14_1094 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", span="2096-2096"];
m14_1095 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="List<DateTime> testDates = new List<DateTime>\r\n            {\r\n                new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Local),\r\n                new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Unspecified),\r\n                new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc),\r\n                new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Local),\r\n                new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Unspecified),\r\n                new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc),\r\n            }", span="2098-2106"];
m14_1096 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="MemoryStream ms = new MemoryStream()", span="2108-2108"];
m14_1098 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="s.WriteObject(ms, testDates)", span="2110-2110"];
m14_1102 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="string result = JsonConvert.SerializeObject(testDates, new JsonSerializerSettings { DateFormatHandling = DateFormatHandling.MicrosoftDateFormat })", span="2116-2116"];
m14_1097 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="DataContractJsonSerializer s = new DataContractJsonSerializer(typeof(List<DateTime>))", span="2109-2109"];
m14_1099 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="ms.Seek(0, SeekOrigin.Begin)", span="2111-2111"];
m14_1100 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="StreamReader sr = new StreamReader(ms)", span="2112-2112"];
m14_1101 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="string expected = sr.ReadToEnd()", span="2114-2114"];
m14_1103 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(expected, result)", span="2117-2117"];
m14_1104 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", span="2096-2096"];
m14_3336 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterCommentsCheckNotRequested()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterCommentsCheckNotRequested()", span="6952-6952"];
m14_3337 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterCommentsCheckNotRequested()", file="JsonSerializerTest.cs", label="string json = @''{ ''''MyProperty'''':{''''Key'''':''''Value''''}} /*this is a comment */\r\n// this is also a comment\r\nThis is just junk, though.''", span="6954-6956"];
m14_3338 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterCommentsCheckNotRequested()", file="JsonSerializerTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="6958-6958"];
m14_3339 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterCommentsCheckNotRequested()", file="JsonSerializerTest.cs", label="var reader = new JsonTextReader(new StringReader(json))", span="6960-6960"];
m14_3340 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterCommentsCheckNotRequested()", file="JsonSerializerTest.cs", label="ItemConverterTestClass mt = (ItemConverterTestClass)serializer.Deserialize(reader, typeof(ItemConverterTestClass))", span="6962-6962"];
m14_3341 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterCommentsCheckNotRequested()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, mt.MyProperty.Count)", span="6963-6963"];
m14_3342 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterCommentsCheckNotRequested()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterCommentsCheckNotRequested()", span="6952-6952"];
m14_1445 [cluster="Newtonsoft.Json.Tests.TestObjects.RequiredMembersClass.RequiredMembersClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.RequiredMembersClass.RequiredMembersClass()", span="29-29"];
m14_2760 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", span="5721-5721"];
m14_2761 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="TestObject test = new TestObject(''Test'', new byte[] { 72, 63, 62, 71, 92, 55 })", span="5723-5723"];
m14_2762 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="5725-5725"];
m14_2767 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="serializer.Serialize(jsonWriter, test)", span="5732-5732"];
m14_2763 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="serializer.TypeNameHandling = TypeNameHandling.All", span="5726-5726"];
m14_2772 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="TestObject newObject = (TestObject)serializer.Deserialize(jsonReader)", span="5742-5742"];
m14_2764 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="byte[] objectBytes", span="5728-5728"];
m14_2765 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="MemoryStream stream = new MemoryStream()", span="5729-5729"];
m14_2766 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="JsonWriter jsonWriter = new JsonTextWriter(new StreamWriter(stream))", span="5730-5730"];
m14_2769 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="objectBytes = stream.ToArray()", span="5735-5735"];
m14_2768 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="jsonWriter.Flush()", span="5733-5733"];
m14_2770 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="MemoryStream stream = new MemoryStream(objectBytes)", span="5738-5738"];
m14_2771 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="JsonReader jsonReader = new JsonTextReader(new StreamReader(stream))", span="5739-5739"];
m14_2773 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Test'', newObject.Name)", span="5744-5744"];
m14_2774 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="CollectionAssert.AreEquivalent(new byte[] { 72, 63, 62, 71, 92, 55 }, newObject.Data)", span="5745-5745"];
m14_2775 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", span="5721-5721"];
m14_1080 [cluster="Unk.ReadObject", file="JsonSerializerTest.cs", label="Entry Unk.ReadObject", span=""];
m14_2251 [cluster="Newtonsoft.Json.Tests.TestObjects.PosDouble.PosDouble()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.PosDouble.PosDouble()", span="27-27"];
m14_1507 [cluster="Newtonsoft.Json.Tests.TestObjects.Co.Co()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Co.Co()", span="27-27"];
m14_2227 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XNodeTestObject.XNodeTestObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XNodeTestObject.XNodeTestObject()", span="4588-4588"];
m14_2072 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", span="4200-4200"];
m14_2073 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", color=red, community=0, file="JsonSerializerTest.cs", label="0: return ((IDictionary<string, T>)_innerDictionary).Contains(item);", span="4202-4202"];
m14_2074 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", span="4200-4200"];
m14_4045 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringEmptyValue()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringEmptyValue()", span="8611-8611"];
m14_4046 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringEmptyValue()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                () => JsonConvert.DeserializeObject<EmptyJsonValueTestClass>(''{ A: , B: 1, C: 123, D: 1.23, E: 3.45, F: null }''),\r\n                ''Unexpected character encountered while parsing value: ,. Path 'A', line 1, position 6.'')", span="8613-8615"];
m14_4047 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringEmptyValue()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringEmptyValue()", span="8611-8611"];
m14_1015 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", span="1897-1897"];
m14_1016 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonSerializerTest.cs", label="string value = JsonConvert.SerializeObject(new SetOnlyPropertyClass())", span="1899-1899"];
m14_1017 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonSerializerTest.cs", label="SetOnlyPropertyClass c = JsonConvert.DeserializeObject<SetOnlyPropertyClass>(value)", span="1901-1901"];
m14_1018 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c.Field, ''Field'')", span="1903-1903"];
m14_1019 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", span="1897-1897"];
m14_11 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="703-703"];
m14_272 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", span="527-527"];
m14_273 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonSerializerTest.cs", label="RequiredPropertyConstructorTestClass c1 = new RequiredPropertyConstructorTestClass(null)", span="529-529"];
m14_274 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.SerializeObject(c1),\r\n                ''Cannot write a null value for property 'Name'. Property requires a value. Path ''.'')", span="531-533"];
m14_275 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonSerializerTest.cs", label="RequiredPropertyConstructorTestClass c2 = new RequiredPropertyConstructorTestClass(''Name!'')", span="535-535"];
m14_276 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c2)", span="537-537"];
m14_277 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Name'''':''''Name!''''}'', json)", span="539-539"];
m14_278 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<RequiredPropertyConstructorTestClass>(@''{}''),\r\n                ''Required property 'Name' not found in JSON. Path '', line 1, position 2.'')", span="541-543"];
m14_279 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonSerializerTest.cs", label="RequiredPropertyConstructorTestClass c3 = JsonConvert.DeserializeObject<RequiredPropertyConstructorTestClass>(@''{''''Name'''':''''Name!''''}'')", span="545-545"];
m14_280 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Name!'', c3.Name)", span="547-547"];
m14_281 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", span="527-527"];
m14_3115 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", span="6428-6428"];
m14_3116 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs", label="string json = ''{}''", span="6430-6430"];
m14_3117 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs", label="IList<string> errors = new List<string>()", span="6431-6431"];
m14_3119 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs", label="var o = JsonConvert.DeserializeObject<RequiredObject>(json, new JsonSerializerSettings\r\n            {\r\n                Error = error\r\n            })", span="6439-6442"];
m14_3118 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs", label="EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error = (s, e) =>\r\n            {\r\n                errors.Add(e.ErrorContext.Error.Message);\r\n                e.ErrorContext.Handled = true;\r\n            }", span="6433-6437"];
m14_3121 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, errors.Count)", span="6445-6445"];
m14_3122 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs", label="Assert.IsTrue(errors[0].StartsWith(''Required property 'NonAttributeProperty' not found in JSON. Path ''''))", span="6446-6446"];
m14_3123 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs", label="Assert.IsTrue(errors[1].StartsWith(''Required property 'UnsetProperty' not found in JSON. Path ''''))", span="6447-6447"];
m14_3124 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs", label="Assert.IsTrue(errors[2].StartsWith(''Required property 'AllowNullProperty' not found in JSON. Path ''''))", span="6448-6448"];
m14_3125 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs", label="Assert.IsTrue(errors[3].StartsWith(''Required property 'AlwaysProperty' not found in JSON. Path ''''))", span="6449-6449"];
m14_3120 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(o)", span="6444-6444"];
m14_3126 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", span="6428-6428"];
m14_3726 [cluster="Newtonsoft.Json.Tests.TestObjects.TypeConverterJsonConverter.TypeConverterJsonConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.TypeConverterJsonConverter.TypeConverterJsonConverter()", span="37-37"];
m14_4044 [cluster="Newtonsoft.Json.Tests.TestObjects.JsonPropertyConverterTestClass.JsonPropertyConverterTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.JsonPropertyConverterTestClass.JsonPropertyConverterTestClass()", span="29-29"];
m14_3661 [cluster="System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", file="JsonSerializerTest.cs", label="Entry System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", span="0-0"];
m14_792 [cluster="Newtonsoft.Json.Tests.TestObjects.Foo1.Foo1()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Foo1.Foo1()", span="52-52"];
m14_2794 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", span="5787-5787"];
m14_2795 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonSerializerTest.cs", label="ReflectionContractResolver contractResolver = new ReflectionContractResolver()", span="5789-5789"];
m14_2796 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonSerializerTest.cs", label="StaticTestClass c = new StaticTestClass\r\n            {\r\n                x = int.MaxValue\r\n            }", span="5791-5794"];
m14_2799 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = contractResolver\r\n            })", span="5797-5800"];
m14_2801 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonSerializerTest.cs", label="StaticTestClass c2 = JsonConvert.DeserializeObject<StaticTestClass>(@''{\r\n  ''''x'''': -1,\r\n  ''''y'''': -2,\r\n  ''''z'''': -3\r\n}'',\r\n                new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = contractResolver\r\n                })", span="5808-5816"];
m14_2797 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonSerializerTest.cs", label="StaticTestClass.y = 2", span="5795-5795"];
m14_2798 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonSerializerTest.cs", label="StaticTestClass.z = 3", span="5796-5796"];
m14_2800 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''x'''': 2147483647,\r\n  ''''y'''': 2,\r\n  ''''z'''': 3\r\n}'', json)", span="5802-5806"];
m14_2802 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonSerializerTest.cs", label="Assert.AreEqual(-1, c2.x)", span="5818-5818"];
m14_2803 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonSerializerTest.cs", label="Assert.AreEqual(-2, StaticTestClass.y)", span="5819-5819"];
m14_2804 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonSerializerTest.cs", label="Assert.AreEqual(-3, StaticTestClass.z)", span="5820-5820"];
m14_2805 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", span="5787-5787"];
m14_2918 [cluster="Newtonsoft.Json.Tests.TestObjects.NullableGuid.NullableGuid()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.NullableGuid.NullableGuid()", span="29-29"];
m14_3954 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableLongTestClass.NullableLongTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableLongTestClass.NullableLongTestClass()", span="8399-8399"];
m14_2957 [cluster="Newtonsoft.Json.Tests.TestObjects.WidgetId1.WidgetId1()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.WidgetId1.WidgetId1()", span="28-28"];
m14_3065 [cluster="Newtonsoft.Json.Tests.TestObjects.MetroPropertyNameResolver.MetroPropertyNameResolver()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.MetroPropertyNameResolver.MetroPropertyNameResolver()", span="30-30"];
m14_3801 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestClassConvertable.TestClassConvertable()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestClassConvertable.TestClassConvertable()", span="8047-8047"];
m14_1402 [cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JValue.ToString()", span="895-895"];
m14_1525 [cluster="Newtonsoft.Json.Tests.TestObjects.LogEntry.LogEntry()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.LogEntry.LogEntry()", span="29-29"];
m14_1320 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", span="2502-2502"];
m14_1321 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs", label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="2504-2504"];
m14_1322 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs", label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="2505-2505"];
m14_1323 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(m1, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.MicrosoftDateFormat,\r\n            })", span="2507-2510"];
m14_1324 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''DefaultConverter'''':''''\/Date(0)\/'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="2511-2511"];
m14_1325 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs", label="var m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json, new JsonSerializerSettings\r\n            {\r\n                DateParseHandling = DateParseHandling.None\r\n            })", span="2513-2516"];
m14_1326 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(1970, 1, 1), m2.DefaultConverter)", span="2518-2518"];
m14_1327 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(1970, 1, 1), m2.MemberConverter)", span="2519-2519"];
m14_1328 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", span="2502-2502"];
m14_3535 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", span="7420-7420"];
m14_3536 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs", label="string json = @''[\r\n  ''''NaN'''',\r\n  ''''Infinity'''',\r\n  ''''-Infinity''''\r\n]''", span="7422-7426"];
m14_3537 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs", label="IList<float> floats = JsonConvert.DeserializeObject<IList<float>>(json)", span="7428-7428"];
m14_3541 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs", label="IList<double> doubles = JsonConvert.DeserializeObject<IList<double>>(json)", span="7433-7433"];
m14_3538 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs", label="Assert.AreEqual(float.NaN, floats[0])", span="7429-7429"];
m14_3539 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs", label="Assert.AreEqual(float.PositiveInfinity, floats[1])", span="7430-7430"];
m14_3540 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs", label="Assert.AreEqual(float.NegativeInfinity, floats[2])", span="7431-7431"];
m14_3542 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs", label="Assert.AreEqual(float.NaN, doubles[0])", span="7434-7434"];
m14_3543 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs", label="Assert.AreEqual(float.PositiveInfinity, doubles[1])", span="7435-7435"];
m14_3544 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs", label="Assert.AreEqual(float.NegativeInfinity, doubles[2])", span="7436-7436"];
m14_3545 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", span="7420-7420"];
m14_2098 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", span="4238-4238"];
m14_2099 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", color=red, community=0, file="JsonSerializerTest.cs", label="0: return _innerDictionary.Remove(key);", span="4240-4240"];
m14_2100 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", span="4238-4238"];
m14_493 [cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="155-155"];
m14_2552 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", span="5260-5260"];
m14_2553 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonSerializerTest.cs", label="ComplexItem i = new ComplexItem()", span="5262-5262"];
m14_2554 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(i, Formatting.Indented)", span="5264-5264"];
m14_2555 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Name'''': null\r\n}'', json)", span="5266-5268"];
m14_2556 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", span="5260-5260"];
m14_852 [cluster="System.IO.StreamWriter.Flush()", file="JsonSerializerTest.cs", label="Entry System.IO.StreamWriter.Flush()", span="0-0"];
m14_1784 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", span="3516-3516"];
m14_1785 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="JsonSerializerTest.cs", label="string json = @''[]''", span="3518-3518"];
m14_1786 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                () => { JsonConvert.DeserializeObject<double>(json); },\r\n                @''Unexpected character encountered while parsing value: [. Path '', line 1, position 1.'')", span="3520-3522"];
m14_1787 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", span="3516-3516"];
m14_3035 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", span="6252-6252"];
m14_3036 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs", label="NullableDateTimeTestClass c =\r\n                JsonConvert.DeserializeObject<NullableDateTimeTestClass>(\r\n                    @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':''''2008-12-12T12:12:12Z'''',''''DateTimeOffsetField'''':''''2008-12-12T12:12:12Z'''',''''PostField'''':''''Post''''}'',\r\n                    new JsonSerializerSettings\r\n                    {\r\n                        DateTimeZoneHandling = DateTimeZoneHandling.Local\r\n                    })", span="6254-6260"];
m14_3037 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(2008, 12, 12, 12, 12, 12, 0, DateTimeKind.Utc).ToLocalTime(), c.DateTimeField)", span="6262-6262"];
m14_3038 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTimeOffset(2008, 12, 12, 12, 12, 12, 0, TimeSpan.Zero), c.DateTimeOffsetField)", span="6263-6263"];
m14_3039 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Pre'', c.PreField)", span="6264-6264"];
m14_3040 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Post'', c.PostField)", span="6265-6265"];
m14_3041 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs", label="NullableDateTimeTestClass c2 =\r\n                JsonConvert.DeserializeObject<NullableDateTimeTestClass>(\r\n                    @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':null,''''DateTimeOffsetField'''':null,''''PostField'''':''''Post''''}'')", span="6267-6269"];
m14_3042 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, c2.DateTimeField)", span="6271-6271"];
m14_3043 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, c2.DateTimeOffsetField)", span="6272-6272"];
m14_3044 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Pre'', c2.PreField)", span="6273-6273"];
m14_3045 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Post'', c2.PostField)", span="6274-6274"];
m14_3046 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", span="6252-6252"];
m14_2034 [cluster="Newtonsoft.Json.Tests.TestObjects.CircularConstructor1.CircularConstructor1(Newtonsoft.Json.Tests.TestObjects.CircularConstructor2)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CircularConstructor1.CircularConstructor1(Newtonsoft.Json.Tests.TestObjects.CircularConstructor2)", span="32-32"];
m14_392 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", span="852-852"];
m14_393 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[''''2000-01-01T01:01:01+00:00'''']''))", span="854-854"];
m14_394 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonSerializerTest.cs", label="Assert.AreEqual(DateParseHandling.DateTime, reader.DateParseHandling)", span="855-855"];
m14_398 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonSerializerTest.cs", label="serializer.Populate(reader, l)", span="861-861"];
m14_401 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonSerializerTest.cs", label="Assert.AreEqual(DateParseHandling.DateTime, reader.DateParseHandling)", span="866-866"];
m14_395 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonSerializerTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="857-857"];
m14_396 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonSerializerTest.cs", label="serializer.DateParseHandling = DateParseHandling.DateTimeOffset", span="858-858"];
m14_397 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonSerializerTest.cs", label="IList<object> l = new List<object>()", span="860-860"];
m14_399 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), l[0].GetType())", span="863-863"];
m14_400 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero), l[0])", span="864-864"];
m14_402 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", span="852-852"];
m14_1028 [cluster="Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeTestClass.JsonIgnoreAttributeTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeTestClass.JsonIgnoreAttributeTestClass()", span="27-27"];
m14_2049 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTestClass.DataContractJsonSerializerTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTestClass.DataContractJsonSerializerTestClass()", span="4098-4098"];
m14_3929 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErrorCreatingJsonConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErrorCreatingJsonConverter()", span="8360-8360"];
m14_3930 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErrorCreatingJsonConverter()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonException>(() => JsonConvert.SerializeObject(new ErroringTestClass()), ''Error creating 'Newtonsoft.Json.Tests.TestObjects.ErroringJsonConverter'.'')", span="8362-8362"];
m14_3931 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErrorCreatingJsonConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErrorCreatingJsonConverter()", span="8360-8360"];
m14_173 [cluster="Unk.IsNull", file="JsonSerializerTest.cs", label="Entry Unk.IsNull", span=""];
m14_2931 [cluster="Newtonsoft.Json.Tests.TestObjects.Item.Item()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Item.Item()", span="29-29"];
m14_3985 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="8490-8490"];
m14_3986 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", color=red, community=0, file="JsonSerializerTest.cs", label="0: throw new NotImplementedException();", span="8492-8492"];
m14_3987 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="8490-8490"];
m14_1300 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", span="2469-2469"];
m14_1301 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonSerializerTest.cs", label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="2471-2471"];
m14_1302 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonSerializerTest.cs", label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="2472-2472"];
m14_1306 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="2479-2479"];
m14_1307 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testDate, m2.MemberConverter)", span="2480-2480"];
m14_1303 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(m1)", span="2474-2474"];
m14_1304 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''DefaultConverter'''':''''1970-01-01T00:00:00Z'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="2475-2475"];
m14_1305 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonSerializerTest.cs", label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json)", span="2477-2477"];
m14_1308 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", span="2469-2469"];
m14_3793 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt64(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt64(System.IFormatProvider)", span="8041-8041"];
m14_3794 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt64(System.IFormatProvider)", color=red, community=0, file="JsonSerializerTest.cs", label="0: throw new InvalidCastException();", span="8043-8043"];
m14_3795 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt64(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt64(System.IFormatProvider)", span="8041-8041"];
m14_2076 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", span="4205-4205"];
m14_2077 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", color=red, community=0, file="JsonSerializerTest.cs", label="0: return _innerDictionary.ContainsKey(key);", span="4207-4207"];
m14_2078 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", span="4205-4205"];
m14_575 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="JsonSerializerTest.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m14_732 [cluster="Newtonsoft.Json.Tests.TestObjects.Ratio.Ratio(int, int)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Ratio.Ratio(int, int)", span="37-37"];
m14_2862 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertableIntTestClass.ConvertableIntTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertableIntTestClass.ConvertableIntTestClass()", span="5924-5924"];
m14_3079 [cluster="System.Enum.Parse(System.Type, string)", file="JsonSerializerTest.cs", label="Entry System.Enum.Parse(System.Type, string)", span="0-0"];
m14_573 [cluster="Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver.CamelCasePropertyNamesContractResolver()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver.CamelCasePropertyNamesContractResolver()", span="76-76"];
m14_2863 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ConvertibleInt(int)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.ConvertibleInt.ConvertibleInt(int)", span="1764-1764"];
m14_1763 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", span="3484-3484"];
m14_1764 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="JsonSerializerTest.cs", label="string json = @''[]''", span="3486-3486"];
m14_1765 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Person>(json); }, @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'Newtonsoft.Json.Tests.TestObjects.Organization.Person' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'')", span="3488-3490"];
m14_1766 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", span="3484-3484"];
m14_2367 [cluster="System.Collections.Specialized.StringDictionary.StringDictionary()", file="JsonSerializerTest.cs", label="Entry System.Collections.Specialized.StringDictionary.StringDictionary()", span="0-0"];
m14_407 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", span="871-871"];
m14_408 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''IsTransient'''':true}'', JsonConvert.SerializeObject(new ChildClass { IsTransient = true }))", span="873-873"];
m14_409 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", file="JsonSerializerTest.cs", label="var childClass = JsonConvert.DeserializeObject<ChildClass>(@''{''''IsTransient'''':true}'')", span="875-875"];
m14_410 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, childClass.IsTransient)", span="876-876"];
m14_411 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", span="871-871"];
m14_3131 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", span="6453-6453"];
m14_3132 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs", label="string json = ''{'NonAttributeProperty':null,'UnsetProperty':null,'AllowNullProperty':null,'AlwaysProperty':null}''", span="6455-6455"];
m14_3133 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs", label="IList<string> errors = new List<string>()", span="6456-6456"];
m14_3135 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs", label="var o = JsonConvert.DeserializeObject<RequiredObject>(json, new JsonSerializerSettings\r\n            {\r\n                Error = error\r\n            })", span="6464-6467"];
m14_3134 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs", label="EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error = (s, e) =>\r\n            {\r\n                errors.Add(e.ErrorContext.Error.Message);\r\n                e.ErrorContext.Handled = true;\r\n            }", span="6458-6462"];
m14_3137 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, errors.Count)", span="6470-6470"];
m14_3138 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs", label="Assert.IsTrue(errors[0].StartsWith(''Required property 'NonAttributeProperty' expects a value but got null. Path ''''))", span="6471-6471"];
m14_3139 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs", label="Assert.IsTrue(errors[1].StartsWith(''Required property 'UnsetProperty' expects a value but got null. Path ''''))", span="6472-6472"];
m14_3140 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs", label="Assert.IsTrue(errors[2].StartsWith(''Required property 'AlwaysProperty' expects a value but got null. Path ''''))", span="6473-6473"];
m14_3136 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(o)", span="6469-6469"];
m14_3141 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", span="6453-6453"];
m14_1106 [cluster="System.IO.StreamReader.ReadToEnd()", file="JsonSerializerTest.cs", label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0"];
m14_3228 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", span="6681-6681"];
m14_3229 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonSerializerTest.cs", label="var testObj = new PersonSerializable() { Name = ''John Doe'', Age = 28 }", span="6683-6683"];
m14_3230 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonSerializerTest.cs", label="var json = Serialize(testObj)", span="6685-6685"];
m14_3232 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testObj.Name, objDeserialized.Name)", span="6688-6688"];
m14_3231 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonSerializerTest.cs", label="var objDeserialized = Deserialize<PersonSerializable>(json)", span="6686-6686"];
m14_3233 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, objDeserialized.Age)", span="6689-6689"];
m14_3234 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", span="6681-6681"];
m14_1751 [cluster="Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass2.GetValue()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass2.GetValue()", span="36-36"];
m14_2542 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", span="5235-5235"];
m14_2543 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs", label="EnumerableClass c = new EnumerableClass\r\n            {\r\n                Enumerable = new List<string> { ''One'', ''Two'', ''Three'' }\r\n            }", span="5237-5240"];
m14_2544 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="5242-5242"];
m14_2545 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Enumerable'''': [\r\n    ''''One'''',\r\n    ''''Two'''',\r\n    ''''Three''''\r\n  ]\r\n}'', json)", span="5244-5250"];
m14_2546 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs", label="EnumerableClass c2 = JsonConvert.DeserializeObject<EnumerableClass>(json)", span="5252-5252"];
m14_2547 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''One'', c2.Enumerable.ElementAt(0))", span="5254-5254"];
m14_2548 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Two'', c2.Enumerable.ElementAt(1))", span="5255-5255"];
m14_2549 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Three'', c2.Enumerable.ElementAt(2))", span="5256-5256"];
m14_2550 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", span="5235-5235"];
m14_2160 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", span="4465-4465"];
m14_2161 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", color=red, community=0, file="JsonSerializerTest.cs", label="2: Key = k", span="4467-4467"];
m14_2162 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", color=red, community=0, file="JsonSerializerTest.cs", label="2: Value = v", span="4468-4468"];
m14_2163 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", span="4465-4465"];
m14_2878 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", span="5974-5974"];
m14_2879 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonSerializerTest.cs", label="string json = @''{''''Id'''':{''''Value'''':''''id''''}}''", span="5976-5976"];
m14_2880 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonSerializerTest.cs", label="Widget w = JsonConvert.DeserializeObject<Widget>(json)", span="5978-5978"];
m14_2881 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new WidgetId { Value = ''id'' }, w.Id)", span="5980-5980"];
m14_2882 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new WidgetId { Value = ''id'' }, w.Id.Value)", span="5981-5981"];
m14_2883 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''id'', w.Id.Value.Value)", span="5982-5982"];
m14_2884 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", span="5974-5974"];
m14_2849 [cluster="Newtonsoft.Json.Tests.TestObjects.Bb.Bb()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Bb.Bb()", span="27-27"];
m14_3619 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey_Custom()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey_Custom()", span="7689-7689"];
m14_3620 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey_Custom()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(\r\n                new Dictionary<TypeConverterSize, TypeConverterSize> { { new TypeConverterSize(1, 2), new TypeConverterSize(3, 4) } }\r\n            )", span="7691-7693"];
m14_3621 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey_Custom()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''1, 2'''':''''3, 4''''}'', json)", span="7695-7695"];
m14_3622 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey_Custom()", file="JsonSerializerTest.cs", label="Dictionary<TypeConverterSize, TypeConverterSize> d = JsonConvert.DeserializeObject<Dictionary<TypeConverterSize, TypeConverterSize>>(json)", span="7697-7697"];
m14_3623 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey_Custom()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new TypeConverterSize(1, 2), d.Keys.First())", span="7699-7699"];
m14_3624 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey_Custom()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new TypeConverterSize(3, 4), d.Values.First())", span="7700-7700"];
m14_3625 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey_Custom()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey_Custom()", span="7689-7689"];
m14_2745 [cluster="System.IO.StringWriter.ToString()", file="JsonSerializerTest.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m14_1311 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", span="2484-2484"];
m14_1312 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs", label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="2486-2486"];
m14_1313 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs", label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="2487-2487"];
m14_1317 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="2497-2497"];
m14_1318 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testDate, m2.MemberConverter)", span="2498-2498"];
m14_1314 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(m1, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n            })", span="2489-2492"];
m14_1315 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''DefaultConverter'''':''''\/Date(0)\/'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="2493-2493"];
m14_1316 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs", label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json)", span="2495-2495"];
m14_1319 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", span="2484-2484"];
m14_2958 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", span="6125-6125"];
m14_2959 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonSerializerTest.cs", label="var serializer = JsonSerializer.Create(new JsonSerializerSettings())", span="6127-6127"];
m14_2960 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonSerializerTest.cs", label="var dict = serializer.Deserialize<Dictionary<string, string>>(new JsonTextReader(new StringReader(''{'k1':'','k2':'v2'}'')))", span="6128-6128"];
m14_2962 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonSerializerTest.cs", label="var dict2 = serializer.Deserialize<Dictionary<string, object>>(reader)", span="6131-6131"];
m14_2961 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonSerializerTest.cs", label="var reader = new JsonTextReader(new StringReader(''{'k1':'','k2':'v2'}''))", span="6130-6130"];
m14_2963 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dict[''k1''], dict2[''k1''])", span="6133-6133"];
m14_2964 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", span="6125-6125"];
m14_180 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoErrorWhenValueDoesNotMatchIgnoredProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoErrorWhenValueDoesNotMatchIgnoredProperty()", span="393-393"];
m14_181 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoErrorWhenValueDoesNotMatchIgnoredProperty()", file="JsonSerializerTest.cs", label="IgnoredProperty p = JsonConvert.DeserializeObject<IgnoredProperty>(''{'StringProp1':[1,2,3],'StringProp2':{}}'')", span="395-395"];
m14_182 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoErrorWhenValueDoesNotMatchIgnoredProperty()", file="JsonSerializerTest.cs", label="Assert.IsNull(p.StringProp1)", span="396-396"];
m14_183 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoErrorWhenValueDoesNotMatchIgnoredProperty()", file="JsonSerializerTest.cs", label="Assert.IsNull(p.StringProp2)", span="397-397"];
m14_184 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoErrorWhenValueDoesNotMatchIgnoredProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoErrorWhenValueDoesNotMatchIgnoredProperty()", span="393-393"];
m14_921 [cluster="Newtonsoft.Json.Linq.JObject.JObject(object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject(object)", span="113-113"];
m14_873 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", span="1713-1713"];
m14_904 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs", label="MemoryStream ms = new MemoryStream()", span="1715-1715"];
m14_905 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs", label="DataContractJsonSerializer s = new DataContractJsonSerializer(o.GetType())", span="1716-1716"];
m14_906 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs", label="s.WriteObject(ms, o)", span="1717-1717"];
m14_910 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs", label="JObject jsonNetJson = JObject.Parse(JsonConvert.SerializeObject(o))", span="1723-1723"];
m14_907 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs", label="var data = ms.ToArray()", span="1719-1719"];
m14_908 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs", label="JObject dataContractJson = JObject.Parse(Encoding.UTF8.GetString(data, 0, data.Length))", span="1720-1720"];
m14_909 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs", label="dataContractJson = new JObject(dataContractJson.Properties().OrderBy(p => p.Name))", span="1721-1721"];
m14_912 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs", label="Assert.AreEqual(dataContractJson.Count, jsonNetJson.Count)", span="1730-1730"];
m14_913 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs", label=dataContractJson, span="1731-1731"];
m14_911 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs", label="jsonNetJson = new JObject(jsonNetJson.Properties().OrderBy(p => p.Name))", span="1724-1724"];
m14_914 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs", label="Assert.IsTrue(JToken.DeepEquals(jsonNetJson[property.Key], property.Value), ''Property not equal: '' + property.Key)", span="1733-1733"];
m14_915 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs", label="return jsonNetJson.ToString();", span="1736-1736"];
m14_916 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", span="1713-1713"];
m14_3873 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", span="8225-8225"];
m14_3874 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonSerializerTest.cs", label="DateTimeOffset dt = new DateTimeOffset(2000, 12, 22, 0, 0, 0, TimeSpan.Zero)", span="8227-8227"];
m14_3875 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonSerializerTest.cs", label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd'!'K''", span="8228-8228"];
m14_3877 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new Dictionary<DateTimeOffset, string>\r\n            {\r\n                { dt, ''123'' }\r\n            }, settings)", span="8235-8238"];
m14_3880 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dt, d.Keys.ElementAt(0))", span="8246-8246"];
m14_3876 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonSerializerTest.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                Formatting = Formatting.Indented\r\n            }", span="8229-8233"];
m14_3879 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonSerializerTest.cs", label="Dictionary<DateTimeOffset, string> d = JsonConvert.DeserializeObject<Dictionary<DateTimeOffset, string>>(json, settings)", span="8244-8244"];
m14_3878 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''2000-pie-Dec-Friday-22!+00:00'''': ''''123''''\r\n}'', json)", span="8240-8242"];
m14_3881 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", span="8225-8225"];
m14_445 [cluster="Newtonsoft.Json.Tests.TestObjects.ResponseWithNewGenericPropertyOverride<T>.ResponseWithNewGenericPropertyOverride()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ResponseWithNewGenericPropertyOverride<T>.ResponseWithNewGenericPropertyOverride()", span="27-27"];
m14_3146 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", span="6477-6477"];
m14_3147 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs", label="IList<string> errors = new List<string>()", span="6479-6479"];
m14_3148 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs", label="EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error = (s, e) =>\r\n            {\r\n                errors.Add(e.ErrorContext.Error.Message);\r\n                e.ErrorContext.Handled = true;\r\n            }", span="6481-6485"];
m14_3151 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, errors.Count)", span="6498-6498"];
m14_3152 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Cannot write a null value for property 'NonAttributeProperty'. Property requires a value. Path ''.'', errors[0])", span="6499-6499"];
m14_3153 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Cannot write a null value for property 'UnsetProperty'. Property requires a value. Path ''.'', errors[1])", span="6500-6500"];
m14_3154 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Cannot write a null value for property 'AlwaysProperty'. Property requires a value. Path ''.'', errors[2])", span="6501-6501"];
m14_3149 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new RequiredObject(), new JsonSerializerSettings\r\n            {\r\n                Error = error,\r\n                Formatting = Formatting.Indented\r\n            })", span="6487-6491"];
m14_3150 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''DefaultProperty'''': null,\r\n  ''''AllowNullProperty'''': null\r\n}'', json)", span="6493-6496"];
m14_3155 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", span="6477-6477"];
m14_1163 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", span="2232-2232"];
m14_1164 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="string json = ''{foo:'hello',bar:[1,2,3]}''", span="2234-2234"];
m14_1165 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="ClassWithArray wibble = JsonConvert.DeserializeObject<ClassWithArray>(json)", span="2235-2235"];
m14_1166 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''hello'', wibble.Foo)", span="2236-2236"];
m14_1167 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, wibble.Bar.Count)", span="2238-2238"];
m14_1168 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(int.MaxValue, wibble.Bar[0])", span="2239-2239"];
m14_1169 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, wibble.Bar[1])", span="2240-2240"];
m14_1170 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, wibble.Bar[2])", span="2241-2241"];
m14_1171 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, wibble.Bar[3])", span="2242-2242"];
m14_1172 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", span="2232-2232"];
m14_329 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem.FaqItem()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem.FaqItem()", span="683-683"];
m14_330 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem.FaqItem()", color=red, community=0, file="JsonSerializerTest.cs", label="0: this.Sections = new HashSet<FaqSection>()", span="685-685"];
m14_331 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem.FaqItem()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem.FaqItem()", span="683-683"];
m14_2353 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", span="855-855"];
m14_191 [cluster="Newtonsoft.Json.Tests.TestObjects.Binding_DisallowNull.Binding_DisallowNull()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Binding_DisallowNull.Binding_DisallowNull()", span="27-27"];
m14_856 [cluster="System.Diagnostics.Stopwatch.Stop()", file="JsonSerializerTest.cs", label="Entry System.Diagnostics.Stopwatch.Stop()", span="0-0"];
m14_1374 [cluster="Newtonsoft.Json.Tests.TestObjects.IncompatibleJsonAttributeClass.IncompatibleJsonAttributeClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.IncompatibleJsonAttributeClass.IncompatibleJsonAttributeClass()", span="30-30"];
m14_3431 [cluster="System.Tuple.Create<T1>(T1)", file="JsonSerializerTest.cs", label="Entry System.Tuple.Create<T1>(T1)", span="0-0"];
m14_196 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="428-428"];
m14_1119 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", span="2152-2152"];
m14_1120 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs", label="Dictionary<int, int> values = new Dictionary<int, int>()", span="2154-2154"];
m14_1121 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs", label="values.Add(-5, 6)", span="2155-2155"];
m14_1122 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs", label="values.Add(int.MinValue, int.MaxValue)", span="2156-2156"];
m14_1123 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(values)", span="2158-2158"];
m14_1126 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs", label="CollectionAssert.AreEqual(values, newValues)", span="2164-2164"];
m14_1124 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''-5'''':6,''''-2147483648'''':2147483647}'', json)", span="2160-2160"];
m14_1125 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs", label="Dictionary<int, int> newValues = JsonConvert.DeserializeObject<Dictionary<int, int>>(json)", span="2162-2162"];
m14_1127 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", span="2152-2152"];
m14_2341 [cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0"];
m14_3260 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTestClass.IgnoreDataMemberTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTestClass.IgnoreDataMemberTestClass()", span="6764-6764"];
m14_185 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull()", span="401-401"];
m14_186 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.SerializeObject(new Binding_DisallowNull()); }, ''Cannot write a null value for property 'RequiredProperty'. Property requires a non-null value. Path ''.'')", span="403-403"];
m14_187 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull()", span="401-401"];
m14_3704 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", span="7876-7876"];
m14_3705 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="var consoleWriter = new ConsoleWriter()", span="7878-7878"];
m14_3706 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="var options = new JsonSerializerSettings\r\n            {\r\n                Converters = new JsonConverterCollection { new TypeConverterJsonConverter() },\r\n                //TypeNameHandling = TypeNameHandling.All\r\n            }", span="7881-7885"];
m14_3707 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="var text1 = JsonConvert.SerializeObject(consoleWriter, Formatting.Indented, options)", span="7891-7891"];
m14_3712 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="dict2.Add(consoleWriter, ''Console'')", span="7902-7902"];
m14_3718 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="dict3.Add(''Console'', consoleWriter)", span="7917-7917"];
m14_3709 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="var restoredWriter = JsonConvert.DeserializeObject<IMyInterface>(text1, options)", span="7894-7894"];
m14_3713 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="var text2 = JsonConvert.SerializeObject(dict2, Formatting.Indented, options)", span="7904-7904"];
m14_3715 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="var restoredObject = JsonConvert.DeserializeObject<Dictionary<IMyInterface, string>>(text2, options)", span="7909-7909"];
m14_3719 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="var text3 = JsonConvert.SerializeObject(dict3, Formatting.Indented, options)", span="7919-7919"];
m14_3721 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="var restoredDict2 = JsonConvert.DeserializeObject<Dictionary<string, IMyInterface>>(text3, options)", span="7924-7924"];
m14_3708 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''''''Console Writer'''''', text1)", span="7892-7892"];
m14_3710 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''ConsoleWriter'', restoredWriter.PrintTest())", span="7895-7895"];
m14_3711 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="var dict2 = new Dictionary<IMyInterface, string>()", span="7901-7901"];
m14_3714 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Console Writer'''': ''''Console''''\r\n}'', text2)", span="7905-7907"];
m14_3716 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''ConsoleWriter'', restoredObject.First().Key.PrintTest())", span="7910-7910"];
m14_3717 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="var dict3 = new Dictionary<string, IMyInterface>()", span="7916-7916"];
m14_3720 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Console'''': ''''Console Writer''''\r\n}'', text3)", span="7920-7922"];
m14_3722 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''ConsoleWriter'', restoredDict2.First().Value.PrintTest())", span="7925-7925"];
m14_3723 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", span="7876-7876"];
m14_1948 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", span="3890-3890"];
m14_1949 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="PersonPropertyClass personPropertyClass = new PersonPropertyClass()", span="3892-3892"];
m14_1950 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="WagePerson wagePerson = (WagePerson)personPropertyClass.Person", span="3893-3893"];
m14_1956 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(personPropertyClass, Formatting.Indented)", span="3901-3901"];
m14_1951 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="wagePerson.BirthDate = new DateTime(2000, 11, 29, 23, 59, 59, DateTimeKind.Utc)", span="3895-3895"];
m14_1952 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="wagePerson.Department = ''McDees''", span="3896-3896"];
m14_1953 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="wagePerson.HourlyWage = 12.50m", span="3897-3897"];
m14_1954 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="wagePerson.LastModified = new DateTime(2000, 11, 29, 23, 59, 59, DateTimeKind.Utc)", span="3898-3898"];
m14_1955 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="wagePerson.Name = ''Jim Bob''", span="3899-3899"];
m14_1959 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="Assert.AreEqual(wagePerson.HourlyWage, ((WagePerson)newPersonPropertyClass.Person).HourlyWage)", span="3914-3914"];
m14_1957 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(\r\n                @''{\r\n  ''''Person'''': {\r\n    ''''HourlyWage'''': 12.50,\r\n    ''''Name'''': ''''Jim Bob'''',\r\n    ''''BirthDate'''': ''''2000-11-29T23:59:59Z'''',\r\n    ''''LastModified'''': ''''2000-11-29T23:59:59Z''''\r\n  }\r\n}'',\r\n                json)", span="3902-3911"];
m14_1958 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="PersonPropertyClass newPersonPropertyClass = JsonConvert.DeserializeObject<PersonPropertyClass>(json)", span="3913-3913"];
m14_1960 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", span="3890-3890"];
m14_1539 [cluster="Newtonsoft.Json.Tests.TestObjects.GenericListAndDictionaryInterfaceProperties.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.GenericListAndDictionaryInterfaceProperties.GenericListAndDictionaryInterfaceProperties()", span="29-29"];
m14_1367 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", span="2591-2591"];
m14_1368 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                IncompatibleJsonAttributeClass c = new IncompatibleJsonAttributeClass();\r\n                JsonConvert.SerializeObject(c);\r\n            }, ''Unexpected value when converting date. Expected DateTime or DateTimeOffset, got Newtonsoft.Json.Tests.TestObjects.IncompatibleJsonAttributeClass.'')", span="2593-2597"];
m14_1369 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", span="2591-2591"];
m14_412 [cluster="Newtonsoft.Json.Tests.TestObjects.ChildClass.ChildClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ChildClass.ChildClass()", span="27-27"];
m14_2002 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", span="3989-3989"];
m14_2003 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", file="JsonSerializerTest.cs", label="string json = ''{'$id':'1',key1:'value1',key2:'value2',key3:'value3'}''", span="3991-3991"];
m14_2004 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<DictionaryWithNoDefaultConstructor>(json, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.All,\r\n                MetadataPropertyHandling = MetadataPropertyHandling.Default\r\n            }), ''Cannot preserve reference to readonly dictionary, or dictionary created from a non-default constructor: Newtonsoft.Json.Tests.TestObjects.DictionaryWithNoDefaultConstructor. Path 'key1', line 1, position 16.'')", span="3993-3997"];
m14_2005 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", span="3989-3989"];
m14_1035 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", span="2006-2006"];
m14_1036 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs", label="string jsonText = @''{\r\n'''''''':'''''''',\r\n''''label'''': [\r\n       [''''SomeName'''',6]\r\n],\r\n''''torrents'''': [\r\n       [''''192D99A5C943555CB7F00A852821CF6D6DB3008A'''',201,''''filename.avi'''',178311826,1000,178311826,72815250,408,1603,7,121430,''''NameOfLabelPrevioslyDefined'''',3,6,0,8,128954,-1,0],\r\n],\r\n''''torrentc'''': ''''1816000723''''\r\n}''", span="2008-2017"];
m14_1037 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs", label="JObject o = (JObject)JsonConvert.DeserializeObject(jsonText)", span="2019-2019"];
m14_1038 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, o.Children().Count())", span="2020-2020"];
m14_1039 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs", label="JToken torrentsArray = (JToken)o[''torrents'']", span="2022-2022"];
m14_1040 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs", label="JToken nestedTorrentsArray = (JToken)torrentsArray[0]", span="2023-2023"];
m14_1041 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(nestedTorrentsArray.Children().Count(), 19)", span="2024-2024"];
m14_1042 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", span="2006-2006"];
m14_262 [cluster="Newtonsoft.Json.Tests.TestObjects.RequiredPropertyTestClass.RequiredPropertyTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.RequiredPropertyTestClass.RequiredPropertyTestClass()", span="27-27"];
m14_3443 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", span="681-681"];
m14_446 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", span="943-943"];
m14_447 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonSerializerTest.cs", label="var input = new ResponseWithNewGenericProperty<List<int>>()\r\n            {\r\n                Message = ''More complex case - generic list of int'',\r\n                Data = Enumerable.Range(50, 70).ToList(),\r\n                Result = ''This should be fine too''\r\n            }", span="945-950"];
m14_448 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonSerializerTest.cs", label="var json = JsonConvert.SerializeObject(input)", span="952-952"];
m14_450 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonSerializerTest.cs", label="CollectionAssert.AreEqual(input.Data, deserialized.Data)", span="955-955"];
m14_451 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonSerializerTest.cs", label="Assert.AreEqual(input.Message, deserialized.Message)", span="956-956"];
m14_452 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonSerializerTest.cs", label="Assert.AreEqual(input.Result, deserialized.Result)", span="957-957"];
m14_449 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonSerializerTest.cs", label="var deserialized = JsonConvert.DeserializeObject<ResponseWithNewGenericProperty<List<int>>>(json)", span="953-953"];
m14_453 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", span="943-943"];
m14_299 [cluster="Newtonsoft.Json.Tests.TestObjects.IgnoredPropertiesTestClass.IgnoredPropertiesTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.IgnoredPropertiesTestClass.IgnoredPropertiesTestClass()", span="30-30"];
m14_2484 [cluster="Newtonsoft.Json.Tests.TestObjects.PrivateSetterDerived.PrivateSetterDerived(string, string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.PrivateSetterDerived.PrivateSetterDerived(string, string)", span="37-37"];
m14_2101 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0"];
m14_1575 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", span="3046-3046"];
m14_1576 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs", label="SubKlass i = new SubKlass(''my subprop'')", span="3048-3048"];
m14_1577 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs", label="i.SuperProp = ''overrided superprop''", span="3049-3049"];
m14_1578 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(i, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects\r\n            })", span="3051-3054"];
m14_1579 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''$id'''':''''1'''',''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', json)", span="3056-3056"];
m14_1580 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs", label="SubKlass ii = JsonConvert.DeserializeObject<SubKlass>(json, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects\r\n            })", span="3058-3061"];
m14_1581 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs", label="string newJson = JsonConvert.SerializeObject(ii, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects\r\n            })", span="3063-3066"];
m14_1582 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''$id'''':''''1'''',''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', newJson)", span="3067-3067"];
m14_1583 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", span="3046-3046"];
m14_303 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeValueTuple()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeValueTuple()", span="612-612"];
m14_304 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeValueTuple()", file="JsonSerializerTest.cs", label="ValueTuple<int, int, string> t = ValueTuple.Create(1, 2, ''string'')", span="614-614"];
m14_305 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeValueTuple()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(t, Formatting.Indented)", span="616-616"];
m14_306 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeValueTuple()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Item1'''': 1,\r\n  ''''Item2'''': 2,\r\n  ''''Item3'''': ''''string''''\r\n}'', json)", span="618-622"];
m14_307 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeValueTuple()", file="JsonSerializerTest.cs", label="ValueTuple<int, int, string> t2 = JsonConvert.DeserializeObject<ValueTuple<int, int, string>>(json)", span="624-624"];
m14_308 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeValueTuple()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, t2.Item1)", span="626-626"];
m14_309 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeValueTuple()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, t2.Item2)", span="627-627"];
m14_310 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeValueTuple()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''string'', t2.Item3)", span="628-628"];
m14_311 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeValueTuple()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeValueTuple()", span="612-612"];
m14_1984 [cluster="Newtonsoft.Json.Tests.TestObjects.ThisGenericTest<T>.ThisGenericTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ThisGenericTest<T>.ThisGenericTest()", span="30-30"];
m14_3391 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", span="7057-7057"];
m14_3392 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonSerializerTest.cs", label="string json = @''[\r\n        9000000000000000000000000000000000000000000000000\r\n      ]''", span="7059-7061"];
m14_3393 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonSerializerTest.cs", label="var l = JsonConvert.DeserializeObject<IReadOnlyList<BigInteger>>(json)", span="7063-7063"];
m14_3394 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonSerializerTest.cs", label="BigInteger nineQuindecillion = l[0]", span="7065-7065"];
m14_3395 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonSerializerTest.cs", label="Assert.AreEqual(BigInteger.Parse(''9000000000000000000000000000000000000000000000000''), nineQuindecillion)", span="7068-7068"];
m14_3396 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", span="7057-7057"];
m14_805 [cluster="Newtonsoft.Json.Tests.TestObjects.Bar1.Bar1()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Bar1.Bar1()", span="27-27"];
m14_3659 [cluster="string.Trim()", file="JsonSerializerTest.cs", label="Entry string.Trim()", span="0-0"];
m14_2920 [cluster="Newtonsoft.Json.JsonSerializer.Create()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Create()", span="563-563"];
m14_3015 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", span="6211-6211"];
m14_3016 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="JsonSerializerTest.cs", label="string jsonIsoText =\r\n                @''{''''Value'''':''''2012-02-25T19:55:50.6095676+13:00''''}''", span="6213-6214"];
m14_3017 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="JsonSerializerTest.cs", label="DateTimeWrapper c = JsonConvert.DeserializeObject<DateTimeWrapper>(jsonIsoText, new IsoDateTimeConverter())", span="6216-6216"];
m14_3018 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(DateTimeKind.Local, c.Value.Kind)", span="6217-6217"];
m14_3019 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", span="6211-6211"];
m14_98 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_BadString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_BadString()", span="261-261"];
m14_99 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_BadString()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                () => JsonConvert.DeserializeObject<IList<bool>>(@''['pie']''),\r\n                @''Could not convert string to boolean: pie. Path '[0]', line 1, position 6.'')", span="263-265"];
m14_100 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_BadString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_BadString()", span="261-261"];
m14_3156 [cluster="Newtonsoft.Json.Tests.TestObjects.RequiredObject.RequiredObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.RequiredObject.RequiredObject()", span="28-28"];
m14_500 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", span="1025-1025"];
m14_501 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="1027-1027"];
m14_502 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="DefaultSerializationBinder customBinder = new DefaultSerializationBinder()", span="1029-1029"];
m14_503 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.Binder = customBinder", span="1031-1031"];
m14_504 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(customBinder, serializer.Binder)", span="1032-1032"];
m14_505 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.IsInstanceOf(typeof(DefaultSerializationBinder), serializer.SerializationBinder)", span="1035-1035"];
m14_506 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.SerializationBinder = customBinder", span="1037-1037"];
m14_507 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(customBinder, serializer.SerializationBinder)", span="1038-1038"];
m14_508 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(customBinder, serializer.Binder)", span="1042-1042"];
m14_509 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.CheckAdditionalContent = true", span="1045-1045"];
m14_510 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, serializer.CheckAdditionalContent)", span="1046-1046"];
m14_511 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor", span="1048-1048"];
m14_512 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(ConstructorHandling.AllowNonPublicDefaultConstructor, serializer.ConstructorHandling)", span="1049-1049"];
m14_513 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.Context = new StreamingContext(StreamingContextStates.Other)", span="1052-1052"];
m14_514 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new StreamingContext(StreamingContextStates.Other), serializer.Context)", span="1053-1053"];
m14_516 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.ContractResolver = resolver", span="1057-1057"];
m14_517 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(resolver, serializer.ContractResolver)", span="1058-1058"];
m14_518 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.Converters.Add(new StringEnumConverter())", span="1060-1060"];
m14_519 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, serializer.Converters.Count)", span="1061-1061"];
m14_520 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.Culture = new CultureInfo(''en-nz'')", span="1063-1063"];
m14_521 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''en-NZ'', serializer.Culture.ToString())", span="1064-1064"];
m14_522 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.EqualityComparer = EqualityComparer<object>.Default", span="1066-1066"];
m14_523 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(EqualityComparer<object>.Default, serializer.EqualityComparer)", span="1067-1067"];
m14_524 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.DateFormatHandling = DateFormatHandling.MicrosoftDateFormat", span="1069-1069"];
m14_525 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(DateFormatHandling.MicrosoftDateFormat, serializer.DateFormatHandling)", span="1070-1070"];
m14_526 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.DateFormatString = ''yyyy''", span="1072-1072"];
m14_527 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''yyyy'', serializer.DateFormatString)", span="1073-1073"];
m14_528 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.DateParseHandling = DateParseHandling.None", span="1075-1075"];
m14_529 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(DateParseHandling.None, serializer.DateParseHandling)", span="1076-1076"];
m14_530 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.DateTimeZoneHandling = DateTimeZoneHandling.Utc", span="1078-1078"];
m14_531 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(DateTimeZoneHandling.Utc, serializer.DateTimeZoneHandling)", span="1079-1079"];
m14_532 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.DefaultValueHandling = DefaultValueHandling.IgnoreAndPopulate", span="1081-1081"];
m14_533 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(DefaultValueHandling.IgnoreAndPopulate, serializer.DefaultValueHandling)", span="1082-1082"];
m14_534 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.FloatFormatHandling = FloatFormatHandling.Symbol", span="1084-1084"];
m14_535 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(FloatFormatHandling.Symbol, serializer.FloatFormatHandling)", span="1085-1085"];
m14_536 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.FloatParseHandling = FloatParseHandling.Decimal", span="1087-1087"];
m14_537 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(FloatParseHandling.Decimal, serializer.FloatParseHandling)", span="1088-1088"];
m14_538 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.Formatting = Formatting.Indented", span="1090-1090"];
m14_539 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(Formatting.Indented, serializer.Formatting)", span="1091-1091"];
m14_540 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.MaxDepth = 9001", span="1093-1093"];
m14_541 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(9001, serializer.MaxDepth)", span="1094-1094"];
m14_542 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.MissingMemberHandling = MissingMemberHandling.Error", span="1096-1096"];
m14_543 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(MissingMemberHandling.Error, serializer.MissingMemberHandling)", span="1097-1097"];
m14_544 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.NullValueHandling = NullValueHandling.Ignore", span="1099-1099"];
m14_545 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(NullValueHandling.Ignore, serializer.NullValueHandling)", span="1100-1100"];
m14_546 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.ObjectCreationHandling = ObjectCreationHandling.Replace", span="1102-1102"];
m14_547 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(ObjectCreationHandling.Replace, serializer.ObjectCreationHandling)", span="1103-1103"];
m14_548 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.PreserveReferencesHandling = PreserveReferencesHandling.All", span="1105-1105"];
m14_549 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(PreserveReferencesHandling.All, serializer.PreserveReferencesHandling)", span="1106-1106"];
m14_550 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.ReferenceLoopHandling = ReferenceLoopHandling.Ignore", span="1108-1108"];
m14_551 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(ReferenceLoopHandling.Ignore, serializer.ReferenceLoopHandling)", span="1109-1109"];
m14_553 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.ReferenceResolver = referenceResolver", span="1112-1112"];
m14_554 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(referenceResolver, serializer.ReferenceResolver)", span="1113-1113"];
m14_555 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.StringEscapeHandling = StringEscapeHandling.EscapeNonAscii", span="1115-1115"];
m14_556 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(StringEscapeHandling.EscapeNonAscii, serializer.StringEscapeHandling)", span="1116-1116"];
m14_558 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.TraceWriter = traceWriter", span="1119-1119"];
m14_559 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(traceWriter, serializer.TraceWriter)", span="1120-1120"];
m14_560 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.TypeNameAssemblyFormat = FormatterAssemblyStyle.Full", span="1124-1124"];
m14_561 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(FormatterAssemblyStyle.Full, serializer.TypeNameAssemblyFormat)", span="1125-1125"];
m14_562 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(TypeNameAssemblyFormatHandling.Full, serializer.TypeNameAssemblyFormatHandling)", span="1128-1128"];
m14_563 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.TypeNameAssemblyFormatHandling = TypeNameAssemblyFormatHandling.Simple", span="1130-1130"];
m14_564 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(FormatterAssemblyStyle.Simple, serializer.TypeNameAssemblyFormat)", span="1132-1132"];
m14_565 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.TypeNameAssemblyFormatHandling = TypeNameAssemblyFormatHandling.Full", span="1136-1136"];
m14_566 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(TypeNameAssemblyFormatHandling.Full, serializer.TypeNameAssemblyFormatHandling)", span="1137-1137"];
m14_567 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.TypeNameHandling = TypeNameHandling.All", span="1139-1139"];
m14_568 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(TypeNameHandling.All, serializer.TypeNameHandling)", span="1140-1140"];
m14_515 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="CamelCasePropertyNamesContractResolver resolver = new CamelCasePropertyNamesContractResolver()", span="1056-1056"];
m14_552 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="IdReferenceResolver referenceResolver = new IdReferenceResolver()", span="1111-1111"];
m14_557 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="MemoryTraceWriter traceWriter = new MemoryTraceWriter()", span="1118-1118"];
m14_569 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", span="1025-1025"];
m14_2492 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", span="0-0"];
m14_2510 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", span="5184-5184"];
m14_2511 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonSerializerTest.cs", label="JTokenTestClass c = new JTokenTestClass\r\n            {\r\n                Name = ''Success'',\r\n                Data = new JObject(new JProperty(''First'', ''Value1''), new JProperty(''Second'', ''Value2''))\r\n            }", span="5186-5190"];
m14_2512 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="5192-5192"];
m14_2515 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonSerializerTest.cs", label="Assert.IsTrue(deserializedResponse.Data.DeepEquals(c.Data))", span="5197-5197"];
m14_2513 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonSerializerTest.cs", label="JTokenTestClass deserializedResponse = JsonConvert.DeserializeObject<JTokenTestClass>(json)", span="5194-5194"];
m14_2514 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Success'', deserializedResponse.Name)", span="5196-5196"];
m14_2516 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", span="5184-5184"];
m14_2485 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="5105-5105"];
m14_2486 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", color=red, community=0, file="JsonSerializerTest.cs", label="0: _name = info.GetString(''Name'')", span="5107-5107"];
m14_2487 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="5105-5105"];
m14_1929 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", span="3789-3789"];
m14_1930 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label="string json =\r\n                    @''{\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Organization.Person'''': 1,\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Organization.Person'''': 2\r\n}''", span="3793-3797"];
m14_1931 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<Dictionary<Person, int>>(json)", span="3799-3799"];
m14_1932 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label="Assert.Fail()", span="3800-3800"];
m14_1933 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label=JsonSerializationException, span="3802-3802"];
m14_1934 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label="Assert.IsTrue(ex.Message.StartsWith(''Could not convert string 'Newtonsoft.Json.Tests.TestObjects.Organization.Person' to dictionary key type 'Newtonsoft.Json.Tests.TestObjects.Organization.Person'. Create a TypeConverter to convert from the string to the key type object. Path '['Newtonsoft.Json.Tests.TestObjects.Organization.Person']'''))", span="3804-3804"];
m14_1935 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", span="3789-3789"];
m14_3459 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", span="7243-7243"];
m14_3460 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="JsonSerializerTest.cs", label="IList<object> dates = new List<object>\r\n            {\r\n                new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc),\r\n                new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1))\r\n            }", span="7245-7249"];
m14_3461 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(dates, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatString = @''yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffK''\r\n            })", span="7251-7254"];
m14_3462 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''[\r\n  ''''2000-12-12T12:12:12.000Z'''',\r\n  ''''2000-12-12T12:12:12.000+01:00''''\r\n]'', json)", span="7256-7259"];
m14_3463 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", span="7243-7243"];
m14_804 [cluster="Newtonsoft.Json.Tests.TestObjects.FooBar1.FooBar1()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.FooBar1.FooBar1()", span="27-27"];
m14_2531 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", span="5218-5218"];
m14_2532 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonSerializerTest.cs", label="PublicConstructorOverridenByJsonConstructor c = JsonConvert.DeserializeObject<PublicConstructorOverridenByJsonConstructor>(''{Value:'value!'}'')", span="5220-5220"];
m14_2533 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Public Parameterized'', c.Constructor)", span="5221-5221"];
m14_2534 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value!'', c.Value)", span="5222-5222"];
m14_2535 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", span="5218-5218"];
m14_3763 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDecimal(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDecimal(System.IFormatProvider)", span="7991-7991"];
m14_3764 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDecimal(System.IFormatProvider)", color=red, community=0, file="JsonSerializerTest.cs", label="0: throw new InvalidCastException();", span="7993-7993"];
m14_3765 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDecimal(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDecimal(System.IFormatProvider)", span="7991-7991"];
m14_3936 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInvalidOctalRootError()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInvalidOctalRootError()", span="8366-8366"];
m14_3937 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInvalidOctalRootError()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => JsonConvert.DeserializeObject<string>(''020474068''), ''Input string '020474068' is not a valid number. Path '', line 1, position 9.'')", span="8368-8368"];
m14_3938 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInvalidOctalRootError()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInvalidOctalRootError()", span="8366-8366"];
m14_1070 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", span="2060-2060"];
m14_1071 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs", label="string json = @''[''''PRE\u003cPOST'''']''", span="2062-2062"];
m14_1072 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs", label="DataContractJsonSerializer s = new DataContractJsonSerializer(typeof(List<string>))", span="2064-2064"];
m14_1073 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs", label="List<string> dataContractResult = (List<string>)s.ReadObject(new MemoryStream(Encoding.UTF8.GetBytes(json)))", span="2065-2065"];
m14_1074 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs", label="List<string> jsonNetResult = JsonConvert.DeserializeObject<List<string>>(json)", span="2067-2067"];
m14_1076 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dataContractResult[0], jsonNetResult[0])", span="2070-2070"];
m14_1075 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, jsonNetResult.Count)", span="2069-2069"];
m14_1077 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", span="2060-2060"];
m14_1158 [cluster="object.Object()", file="JsonSerializerTest.cs", label="Entry object.Object()", span="0-0"];
m14_3736 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.GetTypeCode()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.GetTypeCode()", span="7945-7945"];
m14_3737 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.GetTypeCode()", color=red, community=0, file="JsonSerializerTest.cs", label="0: return TypeCode.Object;", span="7947-7947"];
m14_3738 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.GetTypeCode()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.GetTypeCode()", span="7945-7945"];
m14_2627 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", span="5435-5435"];
m14_2628 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="JsonSerializerTest.cs", label="ImplementInterfaceObject cc = new ImplementInterfaceObject\r\n            {\r\n                InterfaceMember = new DateTime(2010, 12, 31, 0, 0, 0, DateTimeKind.Utc),\r\n                NewMember = ''NewMember!''\r\n            }", span="5437-5441"];
m14_2629 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="JsonSerializerTest.cs", label="string result = JsonConvert.SerializeObject(cc, Formatting.Indented)", span="5443-5443"];
m14_2630 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''virtualMember'''': ''''2010-12-31T00:00:00Z'''',\r\n  ''''newMemberWithProperty'''': null\r\n}'', result)", span="5445-5448"];
m14_2631 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", span="5435-5435"];
m14_3634 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Type)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Type)", span="7736-7736"];
m14_3635 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Type)", color=red, community=0, file="JsonSerializerTest.cs", label="0: return base.CanConvertTo(context, destinationType);", span="7738-7738"];
m14_3636 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Type)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Type)", span="7736-7736"];
m14_2781 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", span="5750-5750"];
m14_2782 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonSerializerTest.cs", label="DefaultContractResolver contractResolver = new DefaultContractResolver()", span="5752-5752"];
m14_2783 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonSerializerTest.cs", label="StaticTestClass c = new StaticTestClass\r\n            {\r\n                x = int.MaxValue\r\n            }", span="5754-5757"];
m14_2786 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = contractResolver\r\n            })", span="5760-5763"];
m14_2788 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonSerializerTest.cs", label="StaticTestClass c2 = JsonConvert.DeserializeObject<StaticTestClass>(@''{\r\n  ''''x'''': -1,\r\n  ''''y'''': -2,\r\n  ''''z'''': -3\r\n}'',\r\n                new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = contractResolver\r\n                })", span="5771-5779"];
m14_2784 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonSerializerTest.cs", label="StaticTestClass.y = 2", span="5758-5758"];
m14_2785 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonSerializerTest.cs", label="StaticTestClass.z = 3", span="5759-5759"];
m14_2787 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''x'''': 2147483647,\r\n  ''''y'''': 2,\r\n  ''''z'''': 3\r\n}'', json)", span="5765-5769"];
m14_2789 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonSerializerTest.cs", label="Assert.AreEqual(-1, c2.x)", span="5781-5781"];
m14_2790 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonSerializerTest.cs", label="Assert.AreEqual(-2, StaticTestClass.y)", span="5782-5782"];
m14_2791 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonSerializerTest.cs", label="Assert.AreEqual(-3, StaticTestClass.z)", span="5783-5783"];
m14_2792 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", span="5750-5750"];
m14_43 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="76-76"];
m14_857 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", span="1589-1589"];
m14_858 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="JsonSerializerTest.cs", label="var cc = new ChildDataContractWithHidden\r\n            {\r\n                VirtualMember = ''VirtualMember!'',\r\n                NonVirtualMember = ''NonVirtualMember!'',\r\n                NewMember = ''NewMember!''\r\n            }", span="1591-1596"];
m14_859 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="JsonSerializerTest.cs", label="string result = JsonConvert.SerializeObject(cc)", span="1598-1598"];
m14_860 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''NewMember'''':''''NewMember!'''',''''virtualMember'''':''''VirtualMember!'''',''''nonVirtualMember'''':''''NonVirtualMember!''''}'', result)", span="1599-1599"];
m14_861 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", span="1589-1589"];
m14_966 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", span="1818-1818"];
m14_967 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="DateTime dateValue = new DateTime(2010, 3, 30)", span="1820-1820"];
m14_968 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="Dictionary<string, object> testDictionary = new Dictionary<string, object>()", span="1821-1821"];
m14_969 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="testDictionary[''date''] = dateValue", span="1822-1822"];
m14_978 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dateValue, deserializedDate)", span="1838-1838"];
m14_970 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="string jsonText = JsonConvert.SerializeObject(testDictionary)", span="1824-1824"];
m14_973 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="serializer.WriteObject(ms, testDictionary)", span="1829-1829"];
m14_971 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="MemoryStream ms = new MemoryStream()", span="1827-1827"];
m14_976 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="Dictionary<string, object> deserializedDictionary = (Dictionary<string, object>)JsonConvert.DeserializeObject(jsonText, typeof(Dictionary<string, object>))", span="1835-1835"];
m14_972 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="DataContractJsonSerializer serializer = new DataContractJsonSerializer(typeof(Dictionary<string, object>))", span="1828-1828"];
m14_974 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="byte[] data = ms.ToArray()", span="1831-1831"];
m14_975 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="string output = Encoding.UTF8.GetString(data, 0, data.Length)", span="1832-1832"];
m14_977 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="DateTime deserializedDate = (DateTime)deserializedDictionary[''date'']", span="1836-1836"];
m14_979 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", span="1818-1818"];
m14_2676 [cluster="Newtonsoft.Json.Tests.TestObjects.PrivateMembersClassWithAttributes.UseValue()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.PrivateMembersClassWithAttributes.UseValue()", span="50-50"];
m14_2087 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.GetEnumerator()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.GetEnumerator()", span="0-0"];
m14_995 [cluster="Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object)", span="316-316"];
m14_994 [cluster="Unk.AreNotSame", file="JsonSerializerTest.cs", label="Entry Unk.AreNotSame", span=""];
m14_2106 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", span="4248-4248"];
m14_2107 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", color=red, community=0, file="JsonSerializerTest.cs", label="0: return ((IEnumerable)_innerDictionary).GetEnumerator();", span="4250-4250"];
m14_2108 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", span="4248-4248"];
m14_197 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", span="582-582"];
m14_3920 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", span="8346-8346"];
m14_3921 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonSerializerTest.cs", label="var original = new DerivedConstructorType(''Base'', ''Derived'')", span="8348-8348"];
m14_3922 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonSerializerTest.cs", label="var serializerSettings = new JsonSerializerSettings()", span="8350-8350"];
m14_3923 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonSerializerTest.cs", label="var jsonCopy = JsonConvert.SerializeObject(original, serializerSettings)", span="8351-8351"];
m14_3924 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonSerializerTest.cs", label="var clonedObject = JsonConvert.DeserializeObject<DerivedConstructorType>(jsonCopy, serializerSettings)", span="8353-8353"];
m14_3925 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Base'', clonedObject.BaseProperty)", span="8355-8355"];
m14_3926 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Derived'', clonedObject.DerivedProperty)", span="8356-8356"];
m14_3927 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", span="8346-8346"];
m14_1654 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", span="3244-3244"];
m14_1655 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''Random'''': {\r\n    ''''blah'''': 1\r\n  },\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Dictionary'''': {\r\n    ''''Item'''': 11,\r\n    ''''Item1'''': 12\r\n  },\r\n  ''''Collection'''': [\r\n    999\r\n  ],\r\n  ''''Employee'''': {\r\n    ''''Manager'''': {\r\n      ''''Name'''': ''''ManagerName!''''\r\n    }\r\n  }\r\n}''", span="3246-3263"];
m14_1656 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="DictionaryInterfaceClass c = JsonConvert.DeserializeObject<DictionaryInterfaceClass>(json,\r\n                new JsonSerializerSettings { ObjectCreationHandling = ObjectCreationHandling.Reuse })", span="3265-3266"];
m14_1657 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Name!'', c.Name)", span="3268-3268"];
m14_1658 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, c.Dictionary.Count)", span="3269-3269"];
m14_1659 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(11, c.Dictionary[''Item''])", span="3270-3270"];
m14_1660 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, c.Dictionary[''existing''])", span="3271-3271"];
m14_1661 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, c.Collection.Count)", span="3272-3272"];
m14_1662 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, c.Collection.ElementAt(0))", span="3273-3273"];
m14_1663 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(999, c.Collection.ElementAt(3))", span="3274-3274"];
m14_1664 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''EmployeeName!'', c.Employee.Name)", span="3275-3275"];
m14_1665 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''ManagerName!'', c.Employee.Manager.Name)", span="3276-3276"];
m14_1666 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(c.Random)", span="3277-3277"];
m14_1667 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", span="3244-3244"];
m14_1387 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", span="2620-2620"];
m14_1388 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs", label="PersonRaw personRaw = new PersonRaw\r\n            {\r\n                FirstName = ''FirstNameValue'',\r\n                RawContent = new JRaw(''[1,2,3,4,5]''),\r\n                LastName = ''LastNameValue''\r\n            }", span="2622-2627"];
m14_1389 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs", label="string json", span="2629-2629"];
m14_1390 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(personRaw)", span="2631-2631"];
m14_1391 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''first_name'''':''''FirstNameValue'''',''''RawContent'''':[1,2,3,4,5],''''last_name'''':''''LastNameValue''''}'', json)", span="2632-2632"];
m14_1392 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", span="2620-2620"];
m14_1093 [cluster="Unk.>", file="JsonSerializerTest.cs", label="Entry Unk.>", span=""];
m14_894 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", span="1687-1687"];
m14_895 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="BaseWithContract baseWith = new SubWithContractVirtualProperties\r\n            {\r\n                JustAProperty = ''JustAProperty!'',\r\n                Virtual = ''Virtual!'',\r\n                VirtualWithDataMember = ''VirtualWithDataMember!'',\r\n                WithDataMember = ''WithDataMember!''\r\n            }", span="1689-1695"];
m14_896 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.JustAProperty = ''JustAProperty2!''", span="1697-1697"];
m14_897 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.Virtual = ''Virtual2!''", span="1698-1698"];
m14_898 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.VirtualWithDataMember = ''VirtualWithDataMember2!''", span="1699-1699"];
m14_899 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.WithDataMember = ''WithDataMember2!''", span="1700-1700"];
m14_900 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="string json = AssertSerializeDeserializeEqual(baseWith)", span="1702-1702"];
m14_901 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''JustAProperty'''': ''''JustAProperty2!'''',\r\n  ''''Virtual'''': ''''Virtual2!'''',\r\n  ''''VirtualWithDataMemberBase'''': ''''VirtualWithDataMember2!'''',\r\n  ''''VirtualWithDataMemberSub'''': ''''VirtualWithDataMember!'''',\r\n  ''''WithDataMemberBase'''': ''''WithDataMember2!''''\r\n}'', json)", span="1704-1710"];
m14_902 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", span="1687-1687"];
m14_2080 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", span="4210-4210"];
m14_2081 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", color=red, community=0, file="JsonSerializerTest.cs", label="0: ((IDictionary<string, T>)_innerDictionary).CopyTo(array, arrayIndex)", span="4212-4212"];
m14_2082 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", span="4210-4210"];
m14_3980 [cluster="Newtonsoft.Json.Linq.JToken.ToObject<T>()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToObject<T>()", span="1932-1932"];
m14_1595 [cluster="Newtonsoft.Json.Tests.TestObjects.JsonPropertyWithHandlingValues.JsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.JsonPropertyWithHandlingValues.JsonPropertyWithHandlingValues()", span="29-29"];
m14_3261 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", span="6780-6780"];
m14_3262 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonSerializerTest.cs", label="DataContractSerializationAttributesClass dataContract = new DataContractSerializationAttributesClass\r\n            {\r\n                NoAttribute = ''Value!'',\r\n                IgnoreDataMemberAttribute = ''Value!'',\r\n                DataMemberAttribute = ''Value!'',\r\n                IgnoreDataMemberAndDataMemberAttribute = ''Value!''\r\n            }", span="6782-6788"];
m14_3263 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(dataContract, Formatting.Indented)", span="6796-6796"];
m14_3264 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''DataMemberAttribute'''': ''''Value!'''',\r\n  ''''IgnoreDataMemberAndDataMemberAttribute'''': ''''Value!''''\r\n}'', json)", span="6797-6800"];
m14_3265 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonSerializerTest.cs", label="PocoDataContractSerializationAttributesClass poco = new PocoDataContractSerializationAttributesClass\r\n            {\r\n                NoAttribute = ''Value!'',\r\n                IgnoreDataMemberAttribute = ''Value!'',\r\n                DataMemberAttribute = ''Value!'',\r\n                IgnoreDataMemberAndDataMemberAttribute = ''Value!''\r\n            }", span="6802-6808"];
m14_3266 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(poco, Formatting.Indented)", span="6810-6810"];
m14_3267 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''NoAttribute'''': ''''Value!'''',\r\n  ''''DataMemberAttribute'''': ''''Value!''''\r\n}'', json)", span="6811-6814"];
m14_3268 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", span="6780-6780"];
m14_4006 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="8538-8538"];
m14_4007 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", color=red, community=0, file="JsonSerializerTest.cs", label="0: var encodingName = serializer.Deserialize<string>(reader)", span="8540-8540"];
m14_4008 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", color=red, community=0, file="JsonSerializerTest.cs", label="0: encodingName == null", span="8541-8541"];
m14_4010 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", color=red, community=0, file="JsonSerializerTest.cs", label="0: return Encoding.GetEncoding(encodingName);", span="8546-8546"];
m14_4009 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", color=red, community=0, file="JsonSerializerTest.cs", label="0: return null;", span="8543-8543"];
m14_4011 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="8538-8538"];
m14_2249 [cluster="Newtonsoft.Json.Tests.TestObjects.ClientMap.ClientMap()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ClientMap.ClientMap()", span="27-27"];
m14_884 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", span="1657-1657"];
m14_885 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="BaseWithContract baseWith = new SubWithContractNewProperties\r\n            {\r\n                JustAProperty = ''JustAProperty!'',\r\n                Virtual = ''Virtual!'',\r\n                VirtualWithDataMember = ''VirtualWithDataMember!'',\r\n                WithDataMember = ''WithDataMember!''\r\n            }", span="1659-1665"];
m14_886 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.JustAProperty = ''JustAProperty2!''", span="1667-1667"];
m14_887 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.Virtual = ''Virtual2!''", span="1668-1668"];
m14_888 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.VirtualWithDataMember = ''VirtualWithDataMember2!''", span="1669-1669"];
m14_889 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.WithDataMember = ''WithDataMember2!''", span="1670-1670"];
m14_890 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="string json = AssertSerializeDeserializeEqual(baseWith)", span="1672-1672"];
m14_891 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''JustAProperty'''': ''''JustAProperty2!'''',\r\n  ''''JustAProperty2'''': ''''JustAProperty!'''',\r\n  ''''Virtual'''': ''''Virtual2!'''',\r\n  ''''Virtual2'''': ''''Virtual!'''',\r\n  ''''VirtualWithDataMemberBase'''': ''''VirtualWithDataMember2!'''',\r\n  ''''VirtualWithDataMemberSub'''': ''''VirtualWithDataMember!'''',\r\n  ''''WithDataMemberBase'''': ''''WithDataMember2!'''',\r\n  ''''WithDataMemberSub'''': ''''WithDataMember!''''\r\n}'', json)", span="1674-1683"];
m14_892 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", span="1657-1657"];
m14_2390 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", span="4932-4932"];
m14_2391 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="JsonSerializerTest.cs", label="NullableDateTimeTestClass d = JsonConvert.DeserializeObject<NullableDateTimeTestClass>(''{\''DateTimeOffsetField\'':\''2000-01-01T00:00:00+06:00\''}'')", span="4934-4934"];
m14_2392 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), d.DateTimeOffsetField)", span="4935-4935"];
m14_2393 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", span="4932-4932"];
m14_2581 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", span="5312-5312"];
m14_2582 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonSerializerTest.cs", label="string json = @''{''''indexed'''':true, ''''startYear'''':1939, ''''values'''':\r\n                            [  3000,  /* 1940-1949 */\r\n                               3000,   3600,   3600,   3600,   3600,   4200,   4200,   4200,   4200,   4800,  /* 1950-1959 */\r\n                               4800,   4800,   4800,   4800,   4800,   4800,   6600,   6600,   7800,   7800,  /* 1960-1969 */\r\n                               7800,   7800,   9000,  10800,  13200,  14100,  15300,  16500,  17700,  22900,  /* 1970-1979 */\r\n                              25900,  29700,  32400,  35700,  37800,  39600,  42000,  43800,  45000,  48000,  /* 1980-1989 */\r\n                              51300,  53400,  55500,  57600,  60600,  61200,  62700,  65400,  68400,  72600,  /* 1990-1999 */\r\n                              76200,  80400,  84900,  87000,  87900,  90000,  94200,  97500, 102000, 106800,  /* 2000-2009 */\r\n                             106800, 106800]  /* 2010-2011 */\r\n                                }''", span="5314-5323"];
m14_2583 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonSerializerTest.cs", label="CommentTestClass commentTestClass = JsonConvert.DeserializeObject<CommentTestClass>(json)", span="5325-5325"];
m14_2584 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, commentTestClass.Indexed)", span="5327-5327"];
m14_2585 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1939, commentTestClass.StartYear)", span="5328-5328"];
m14_2586 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(63, commentTestClass.Values.Count)", span="5329-5329"];
m14_2587 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", span="5312-5312"];
m14_2742 [cluster="Newtonsoft.Json.Linq.JToken.CreateReader()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JToken.CreateReader()", span="1886-1886"];
m14_1731 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", span="3435-3435"];
m14_1732 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonSerializerTest.cs", label="string json = @''{''''DateTimeField'''':''''''''}''", span="3437-3437"];
m14_1733 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonSerializerTest.cs", label="NullableDateTimeTestClass c = JsonConvert.DeserializeObject<NullableDateTimeTestClass>(json)", span="3439-3439"];
m14_1734 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, c.DateTimeField)", span="3440-3440"];
m14_1735 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", span="3435-3435"];
m14_783 [cluster="Newtonsoft.Json.Linq.JObject.FromObject(object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.FromObject(object)", span="442-442"];
m14_3497 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollection<T>.NoConstructorReadOnlyCollection()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollection<T>.NoConstructorReadOnlyCollection()", span="7336-7336"];
m14_3498 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollection<T>.NoConstructorReadOnlyCollection()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollection<T>.NoConstructorReadOnlyCollection()", span="7336-7336"];
m14_574 [cluster="System.Collections.ObjectModel.Collection<T>.Add(T)", file="JsonSerializerTest.cs", label="Entry System.Collections.ObjectModel.Collection<T>.Add(T)", span="0-0"];
m14_1107 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", span="2121-2121"];
m14_1108 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="JsonSerializerTest.cs", label="List<DateTimeOffset> testDates = new List<DateTimeOffset>\r\n            {\r\n                new DateTimeOffset(new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc)),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(13)),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(-3.5)),\r\n            }", span="2123-2129"];
m14_1109 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="JsonSerializerTest.cs", label="string result = JsonConvert.SerializeObject(testDates)", span="2131-2131"];
m14_1110 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''[''''0100-01-01T01:01:01+00:00'''',''''2000-01-01T01:01:01+00:00'''',''''2000-01-01T01:01:01+13:00'''',''''2000-01-01T01:01:01-03:30'''']'', result)", span="2132-2132"];
m14_1111 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", span="2121-2121"];
m14_210 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m14_2536 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParametrizedConstructorsJsonConstructorTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParametrizedConstructorsJsonConstructorTest()", span="5226-5226"];
m14_2537 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParametrizedConstructorsJsonConstructorTest()", file="JsonSerializerTest.cs", label="MultipleParametrizedConstructorsJsonConstructor c = JsonConvert.DeserializeObject<MultipleParametrizedConstructorsJsonConstructor>(''{Value:'value!', Age:1}'')", span="5228-5228"];
m14_2538 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParametrizedConstructorsJsonConstructorTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Public Parameterized 2'', c.Constructor)", span="5229-5229"];
m14_2539 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParametrizedConstructorsJsonConstructorTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value!'', c.Value)", span="5230-5230"];
m14_2540 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParametrizedConstructorsJsonConstructorTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, c.Age)", span="5231-5231"];
m14_2541 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParametrizedConstructorsJsonConstructorTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParametrizedConstructorsJsonConstructorTest()", span="5226-5226"];
m14_2987 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", span="6168-6168"];
m14_2988 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<StringComparison>(''''); }, ''No JSON content found and type 'System.StringComparison' is not nullable. Path '', line 0, position 0.'')", span="6170-6170"];
m14_2989 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", span="6168-6168"];
m14_3237 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", span="6706-6706"];
m14_3244 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonSerializerTest.cs", label="var jsonReader = new JsonTextReader(new StringReader(json))", span="6709-6709"];
m14_3245 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonSerializerTest.cs", label="var serializer = new JsonSerializer()", span="6710-6710"];
m14_3247 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonSerializerTest.cs", label="return serializer.Deserialize(jsonReader, typeof(T)) as T;", span="6716-6716"];
m14_3246 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonSerializerTest.cs", label="serializer.ContractResolver = new DefaultContractResolver\r\n            {\r\n                IgnoreSerializableAttribute = false\r\n            }", span="6711-6714"];
m14_3248 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", span="6706-6706"];
m14_10 [cluster="Unk.AreEqual", file="JsonSerializerTest.cs", label="Entry Unk.AreEqual", span=""];
m14_2939 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", span="6085-6085"];
m14_2940 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new WithEnums\r\n            {\r\n                Id = 7,\r\n                NullableEnum = null\r\n            })", span="6087-6091"];
m14_2941 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Id'''':7,''''NullableEnum'''':null}'', json)", span="6093-6093"];
m14_2942 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs", label="WithEnums e = JsonConvert.DeserializeObject<WithEnums>(json)", span="6095-6095"];
m14_2943 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, e.NullableEnum)", span="6097-6097"];
m14_2944 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(new WithEnums\r\n            {\r\n                Id = 7,\r\n                NullableEnum = MyEnum.Value2\r\n            })", span="6099-6103"];
m14_2945 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Id'''':7,''''NullableEnum'''':1}'', json)", span="6105-6105"];
m14_2946 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs", label="e = JsonConvert.DeserializeObject<WithEnums>(json)", span="6107-6107"];
m14_2947 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs", label="Assert.AreEqual(MyEnum.Value2, e.NullableEnum)", span="6109-6109"];
m14_2948 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", span="6085-6085"];
m14_1114 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", span="2136-2136"];
m14_1115 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="JsonSerializerTest.cs", label="List<DateTimeOffset> testDates = new List<DateTimeOffset>\r\n            {\r\n                new DateTimeOffset(new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc)),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(13)),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(-3.5)),\r\n            }", span="2138-2144"];
m14_1116 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="JsonSerializerTest.cs", label="string result = JsonConvert.SerializeObject(testDates, new JsonSerializerSettings { DateFormatHandling = DateFormatHandling.MicrosoftDateFormat })", span="2146-2146"];
m14_1117 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''[''''\/Date(-59011455539000+0000)\/'''',''''\/Date(946688461000+0000)\/'''',''''\/Date(946641661000+1300)\/'''',''''\/Date(946701061000-0330)\/'''']'', result)", span="2147-2147"];
m14_1118 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", span="2136-2136"];
m14_2780 [cluster="Unk.AreEquivalent", file="JsonSerializerTest.cs", label="Entry Unk.AreEquivalent", span=""];
m14_3728 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", span="7930-7930"];
m14_3729 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonSerializerTest.cs", label="ParticipantEntity product = new ParticipantEntity()", span="7932-7932"];
m14_3730 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonSerializerTest.cs", label="product.Properties = new Dictionary<string, string> { { ''s'', ''d'' } }", span="7933-7933"];
m14_3731 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(product)", span="7934-7934"];
m14_3732 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''pa_info'''':{''''s'''':''''d''''}}'', json)", span="7936-7936"];
m14_3733 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonSerializerTest.cs", label="ParticipantEntity deserializedProduct = JsonConvert.DeserializeObject<ParticipantEntity>(json)", span="7937-7937"];
m14_3734 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", span="7930-7930"];
m14_2214 [cluster="System.Type.GetProperty(string, System.Reflection.BindingFlags)", file="JsonSerializerTest.cs", label="Entry System.Type.GetProperty(string, System.Reflection.BindingFlags)", span="0-0"];
m14_812 [cluster="Unk.IsNotNull", file="JsonSerializerTest.cs", label="Entry Unk.IsNotNull", span=""];
m14_1229 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", span="2359-2359"];
m14_1230 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonSerializerTest.cs", label="var obj = new { Formatting = ''test'' }", span="2361-2361"];
m14_1231 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonSerializerTest.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings { Formatting = Formatting.Indented }", span="2363-2363"];
m14_1232 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonSerializerTest.cs", label="string indented = JsonConvert.SerializeObject(obj, settings)", span="2364-2364"];
m14_1233 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonSerializerTest.cs", label="string none = JsonConvert.SerializeObject(obj, Formatting.None, settings)", span="2366-2366"];
m14_1234 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonSerializerTest.cs", label="Assert.AreNotEqual(indented, none)", span="2367-2367"];
m14_1235 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", span="2359-2359"];
m14_3112 [cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="442-442"];
m14_3577 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", span="7524-7524"];
m14_3578 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="JsonSerializerTest.cs", label="string json =\r\n                JsonConvert.SerializeObject(new AnswerFilterModel(), Formatting.Indented, new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n                        IgnoreSerializableAttribute = false\r\n                    }\r\n                })", span="7526-7533"];
m14_3579 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''<Active>k__BackingField'''': false,\r\n  ''''<Ja>k__BackingField'''': false,\r\n  ''''<Handlungsbedarf>k__BackingField'''': false,\r\n  ''''<Beratungsbedarf>k__BackingField'''': false,\r\n  ''''<Unzutreffend>k__BackingField'''': false,\r\n  ''''<Unbeantwortet>k__BackingField'''': false\r\n}'', json)", span="7535-7542"];
m14_3580 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", span="7524-7524"];
m14_354 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m14_1055 [cluster="Newtonsoft.Json.Tests.TestObjects.JsonPropertyClass.JsonPropertyClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.JsonPropertyClass.JsonPropertyClass()", span="27-27"];
m14_0 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ListSourceSerialize()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ListSourceSerialize()", span="99-99"];
m14_1 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ListSourceSerialize()", file="JsonSerializerTest.cs", label="ListSourceTest c = new ListSourceTest()", span="101-101"];
m14_2 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ListSourceSerialize()", file="JsonSerializerTest.cs", label="c.strprop = ''test''", span="102-102"];
m14_3 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ListSourceSerialize()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c)", span="103-103"];
m14_4 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ListSourceSerialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''strprop'''':''''test''''}'', json)", span="105-105"];
m14_5 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ListSourceSerialize()", file="JsonSerializerTest.cs", label="ListSourceTest c2 = JsonConvert.DeserializeObject<ListSourceTest>(json)", span="107-107"];
m14_6 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ListSourceSerialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''test'', c2.strprop)", span="109-109"];
m14_7 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ListSourceSerialize()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ListSourceSerialize()", span="99-99"];
m14_2565 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", span="5288-5288"];
m14_2566 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject(''null'', typeof(DateTime)); }, ''Error converting value {null} to type 'System.DateTime'. Path '', line 1, position 4.'')", span="5290-5290"];
m14_2567 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", span="5288-5288"];
m14_2110 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", span="4255-4255"];
m14_2111 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs", label="ModelStateDictionary<string> modelStateDictionary = new ModelStateDictionary<string>()", span="4257-4257"];
m14_2112 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs", label="modelStateDictionary.Add(''key'', ''value'')", span="4258-4258"];
m14_2113 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(modelStateDictionary)", span="4260-4260"];
m14_2114 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''key'''':''''value''''}'', json)", span="4262-4262"];
m14_2115 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs", label="ModelStateDictionary<string> newModelStateDictionary = JsonConvert.DeserializeObject<ModelStateDictionary<string>>(json)", span="4264-4264"];
m14_2116 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, newModelStateDictionary.Count)", span="4265-4265"];
m14_2117 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value'', newModelStateDictionary[''key''])", span="4266-4266"];
m14_2118 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", span="4255-4255"];
m14_2892 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", span="6000-6000"];
m14_2893 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonException>(() =>\r\n            {\r\n                string json = @''{\r\n  ''''PreProperty'''': '';\r\n\r\n                JsonConvert.DeserializeObject<TestObjects.MyClass>(json);\r\n            })", span="6002-6008"];
m14_2894 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", span="6000-6000"];
m14_63 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericIEnumerableWithImplicitConversion()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericIEnumerableWithImplicitConversion()", span="208-208"];
m14_64 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericIEnumerableWithImplicitConversion()", file="JsonSerializerTest.cs", label="string deserialized = @''{\r\n  ''''Enumerable'''': [ ''''abc'''', ''''def'''' ] \r\n}''", span="210-212"];
m14_65 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericIEnumerableWithImplicitConversion()", file="JsonSerializerTest.cs", label="var enumerableClass = JsonConvert.DeserializeObject<GenericIEnumerableWithImplicitConversion>(deserialized)", span="213-213"];
m14_66 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericIEnumerableWithImplicitConversion()", file="JsonSerializerTest.cs", label="var enumerableObject = enumerableClass.Enumerable.ToArray()", span="214-214"];
m14_67 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericIEnumerableWithImplicitConversion()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, enumerableObject.Length)", span="215-215"];
m14_68 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericIEnumerableWithImplicitConversion()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''abc'', enumerableObject[0].Value)", span="216-216"];
m14_69 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericIEnumerableWithImplicitConversion()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''def'', enumerableObject[1].Value)", span="217-217"];
m14_70 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericIEnumerableWithImplicitConversion()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericIEnumerableWithImplicitConversion()", span="208-208"];
m14_755 [cluster="Newtonsoft.Json.Tests.TestObjects.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", span="40-40"];
m14_4005 [cluster="System.Type.IsAssignableFrom(System.Type)", file="JsonSerializerTest.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m14_156 [cluster="Newtonsoft.Json.Tests.TestObjects.FooRequired.FooRequired(System.Collections.Generic.IEnumerable<string>)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.FooRequired.FooRequired(System.Collections.Generic.IEnumerable<string>)", span="34-34"];
m14_2213 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", span="507-507"];
m14_3114 [cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", span="2096-2096"];
m14_17 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AlmostImmutableStruct.AlmostImmutableStruct(string, int)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AlmostImmutableStruct.AlmostImmutableStruct(string, int)", span="123-123"];
m14_18 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AlmostImmutableStruct.AlmostImmutableStruct(string, int)", file="JsonSerializerTest.cs", label="Value = value", span="125-125"];
m14_19 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AlmostImmutableStruct.AlmostImmutableStruct(string, int)", file="JsonSerializerTest.cs", label="Value2 = value2", span="126-126"];
m14_20 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AlmostImmutableStruct.AlmostImmutableStruct(string, int)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AlmostImmutableStruct.AlmostImmutableStruct(string, int)", span="123-123"];
m14_2605 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", span="5389-5389"];
m14_2606 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonSerializerTest.cs", label="ChildDataContract cc = new ChildDataContract\r\n            {\r\n                VirtualMember = ''VirtualMember!'',\r\n                NonVirtualMember = ''NonVirtualMember!''\r\n            }", span="5391-5395"];
m14_2607 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonSerializerTest.cs", label="DataContractSerializer serializer = new DataContractSerializer(typeof(ChildDataContract))", span="5397-5397"];
m14_2609 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonSerializerTest.cs", label="serializer.WriteObject(ms, cc)", span="5400-5400"];
m14_2608 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonSerializerTest.cs", label="MemoryStream ms = new MemoryStream()", span="5399-5399"];
m14_2610 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonSerializerTest.cs", label="string xml = Encoding.UTF8.GetString(ms.ToArray(), 0, Convert.ToInt32(ms.Length))", span="5402-5402"];
m14_2611 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", color=red, community=0, file="JsonSerializerTest.cs", label="0: Assert.AreEqual(@''<JsonSerializerTest.ChildDataContract xmlns=''''http://schemas.datacontract.org/2004/07/Newtonsoft.Json.Tests.Serialization'''' xmlns:i=''''http://www.w3.org/2001/XMLSchema-instance''''><nonVirtualMember>NonVirtualMember!</nonVirtualMember><virtualMember>VirtualMember!</virtualMember><NewMember i:nil=''''true''''/></JsonSerializerTest.ChildDataContract>'', xml)", span="5404-5404"];
m14_2612 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", span="5389-5389"];
m14_2614 [cluster="System.Convert.ToInt32(long)", file="JsonSerializerTest.cs", label="Entry System.Convert.ToInt32(long)", span="0-0"];
m14_1264 [cluster="System.TimeSpan.TimeSpan(int, int, int, int)", file="JsonSerializerTest.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int, int)", span="0-0"];
m14_2615 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", span="5409-5409"];
m14_2616 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="JsonSerializerTest.cs", label="VirtualOverrideNewChildObject cc = new VirtualOverrideNewChildObject\r\n            {\r\n                VirtualMember = ''VirtualMember!'',\r\n                NonVirtualMember = ''NonVirtualMember!''\r\n            }", span="5411-5415"];
m14_2617 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="JsonSerializerTest.cs", label="string result = JsonConvert.SerializeObject(cc)", span="5417-5417"];
m14_2618 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''virtualMember'''':''''VirtualMember!'''',''''nonVirtualMember'''':''''NonVirtualMember!''''}'', result)", span="5418-5418"];
m14_2619 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", span="5409-5409"];
m14_3835 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", span="8129-8129"];
m14_3836 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="CultureInfo culture = new CultureInfo(''tr-TR'')", span="8131-8131"];
m14_3837 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="DateTime dt = new DateTime(2000, 12, 22)", span="8133-8133"];
m14_3839 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                Culture = culture\r\n            }", span="8135-8139"];
m14_3844 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                Culture = culture\r\n            }", span="8149-8153"];
m14_3849 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="reader = new JsonTextReader(new StringReader(@''''''2000-pie-Dec-Friday-22''''''))\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                Culture = culture\r\n            }", span="8160-8164"];
m14_3838 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd''", span="8134-8134"];
m14_3840 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(dt, settings)", span="8141-8141"];
m14_3843 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dt, dt1)", span="8147-8147"];
m14_3848 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dt, (DateTime)v.Value)", span="8158-8158"];
m14_3842 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="DateTime dt1 = JsonConvert.DeserializeObject<DateTime>(json, settings)", span="8145-8145"];
m14_3841 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''''''2000-pie-Ara-Cuma-22'''''', json)", span="8143-8143"];
m14_3845 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="JValue v = (JValue)JToken.ReadFrom(reader)", span="8154-8154"];
m14_3846 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JTokenType.Date, v.Type)", span="8156-8156"];
m14_3847 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(DateTime), v.Value.GetType())", span="8157-8157"];
m14_3850 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="v = (JValue)JToken.ReadFrom(reader)", span="8165-8165"];
m14_3851 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JTokenType.String, v.Type)", span="8167-8167"];
m14_3852 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(string), v.Value.GetType())", span="8168-8168"];
m14_3853 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''2000-pie-Dec-Friday-22'', v.Value)", span="8169-8169"];
m14_3854 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", span="8129-8129"];
m14_3955 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", span="8407-8407"];
m14_3956 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", file="JsonSerializerTest.cs", label="string JsonMessage = @''{\r\n  ''''From'''': {\r\n    ''''Address'''': ''''askywalker@theEmpire.gov'''',\r\n    ''''DisplayName'''': ''''Darth Vader''''\r\n  },\r\n  ''''Sender'''': null,\r\n  ''''ReplyTo'''': null,\r\n  ''''ReplyToList'''': [],\r\n  ''''To'''': [\r\n    {\r\n      ''''Address'''': ''''lskywalker@theRebellion.org'''',\r\n      ''''DisplayName'''': ''''Luke Skywalker''''\r\n    }\r\n  ],\r\n  ''''Bcc'''': [],\r\n  ''''CC'''': [\r\n    {\r\n      ''''Address'''': ''''lorgana@alderaan.gov'''',\r\n      ''''DisplayName'''': ''''Princess Leia''''\r\n    }\r\n  ],\r\n  ''''Priority'''': 0,\r\n  ''''DeliveryNotificationOptions'''': 0,\r\n  ''''Subject'''': ''''Family tree'''',\r\n  ''''SubjectEncoding'''': null,\r\n  ''''Headers'''': [],\r\n  ''''HeadersEncoding'''': null,\r\n  ''''Body'''': ''''<strong>I am your father!</strong>'''',\r\n  ''''BodyEncoding'''': ''''US-ASCII'''',\r\n  ''''BodyTransferEncoding'''': -1,\r\n  ''''IsBodyHtml'''': true,\r\n  ''''Attachments'''': [\r\n    {\r\n      ''''FileName'''': ''''skywalker family tree.jpg'''',\r\n      ''''ContentBase64'''': ''''AQIDBAU=''''\r\n    }\r\n  ],\r\n  ''''AlternateViews'''': []\r\n}''", span="8409-8447"];
m14_3957 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n                {\r\n                    JsonConvert.DeserializeObject<System.Net.Mail.MailMessage>(\r\n                        JsonMessage,\r\n                        new MailAddressReadConverter(),\r\n                        new AttachmentReadConverter(),\r\n                        new EncodingReadConverter());\r\n                },\r\n                ''Cannot populate list type System.Net.Mime.HeaderCollection. Path 'Headers', line 26, position 14.'')", span="8449-8457"];
m14_3958 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", span="8407-8407"];
m14_761 [cluster="Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", span="311-311"];
m14_1871 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", span="3681-3681"];
m14_1872 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs", label="List<String> strings = new List<String>()", span="3683-3683"];
m14_1873 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs", label="strings.Add(''str_1'')", span="3685-3685"];
m14_1874 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs", label="strings.Add(''str_2'')", span="3686-3686"];
m14_1875 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs", label="strings.Add(''str_3'')", span="3687-3687"];
m14_1876 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(strings)", span="3689-3689"];
m14_1877 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''[''''str_1'''',''''str_2'''',''''str_3'''']'', json)", span="3690-3690"];
m14_1878 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", span="3681-3681"];
m14_1880 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", span="3694-3694"];
m14_1881 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs", label="ConstructorReadonlyFields c1 = new ConstructorReadonlyFields(''String!'', int.MaxValue)", span="3696-3696"];
m14_1882 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="3697-3697"];
m14_1883 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''A'''': ''''String!'''',\r\n  ''''B'''': 2147483647\r\n}'', json)", span="3698-3701"];
m14_1884 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs", label="ConstructorReadonlyFields c2 = JsonConvert.DeserializeObject<ConstructorReadonlyFields>(json)", span="3703-3703"];
m14_1885 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''String!'', c2.A)", span="3704-3704"];
m14_1886 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(int.MaxValue, c2.B)", span="3705-3705"];
m14_1887 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", span="3694-3694"];
m14_2252 [cluster="Newtonsoft.Json.Tests.TestObjects.PosConverter.PosConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.PosConverter.PosConverter()", span="29-29"];
m14_51 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", span="177-177"];
m14_52 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", file="JsonSerializerTest.cs", label="var mySubclass = MyFactory.InstantiateSubclass()", span="179-179"];
m14_53 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", file="JsonSerializerTest.cs", label="var myMainClass = MyFactory.InstantiateManiClass()", span="180-180"];
m14_54 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", file="JsonSerializerTest.cs", label="var strJsonSubclass = JsonConvert.SerializeObject(mySubclass, Formatting.Indented)", span="183-183"];
m14_56 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", file="JsonSerializerTest.cs", label="var strJsonMainClass = JsonConvert.SerializeObject(myMainClass, Formatting.Indented)", span="193-193"];
m14_55 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''ID'''': 123,\r\n  ''''Name'''': ''''ABC'''',\r\n  ''''P1'''': true,\r\n  ''''P2'''': 44\r\n}'', strJsonSubclass)", span="185-190"];
m14_57 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''ID'''': 567,\r\n  ''''Name'''': ''''XYZ'''',\r\n  ''''Subclass'''': {\r\n    ''''ID'''': 123,\r\n    ''''Name'''': ''''ABC'''',\r\n    ''''P1'''': true,\r\n    ''''P2'''': 44\r\n  }\r\n}'', strJsonMainClass)", span="195-204"];
m14_58 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", span="177-177"];
m14_403 [cluster="System.IO.StringReader.StringReader(string)", file="JsonSerializerTest.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m14_353 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItemProxy.FaqItemProxy()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItemProxy.FaqItemProxy()", span="715-715"];
m14_2950 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", span="6113-6113"];
m14_2951 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new Widget1 { Id = new WidgetId1 { Value = 1234 } })", span="6115-6115"];
m14_2952 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Id'''':''''1234''''}'', json)", span="6117-6117"];
m14_2953 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonSerializerTest.cs", label="Widget1 w = JsonConvert.DeserializeObject<Widget1>(@''{''''Id'''':''''1234''''}'')", span="6119-6119"];
m14_2954 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new WidgetId1 { Value = 1234 }, w.Id)", span="6121-6121"];
m14_2955 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", span="6113-6113"];
m14_3161 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", span="6505-6505"];
m14_3162 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonSerializerTest.cs", label="PropertyItemConverter c = new PropertyItemConverter\r\n            {\r\n                Data =\r\n                    new[]\r\n                    {\r\n                        ''one'',\r\n                        ''two'',\r\n                        ''three''\r\n                    }\r\n            }", span="6507-6516"];
m14_3163 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonSerializerTest.cs", label="var c2 = JsonConvert.DeserializeObject<PropertyItemConverter>(''{'Data':['::ONE::','::TWO::']}'')", span="6518-6518"];
m14_3164 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(c2)", span="6520-6520"];
m14_3165 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, c2.Data.Count)", span="6521-6521"];
m14_3166 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''one'', c2.Data[0])", span="6522-6522"];
m14_3167 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''two'', c2.Data[1])", span="6523-6523"];
m14_3168 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", span="6505-6505"];
m14_3020 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", span="6222-6222"];
m14_3021 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs", label="DateTimeTestClass c =\r\n                JsonConvert.DeserializeObject<DateTimeTestClass>(\r\n                    @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':''''2008-12-12T12:12:12Z'''',''''DateTimeOffsetField'''':''''2008-12-12T12:12:12Z'''',''''PostField'''':''''Post''''}'',\r\n                    new JsonSerializerSettings\r\n                    {\r\n                        DateTimeZoneHandling = DateTimeZoneHandling.Local\r\n                    })", span="6224-6230"];
m14_3022 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(2008, 12, 12, 12, 12, 12, 0, DateTimeKind.Utc).ToLocalTime(), c.DateTimeField)", span="6232-6232"];
m14_3023 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTimeOffset(2008, 12, 12, 12, 12, 12, 0, TimeSpan.Zero), c.DateTimeOffsetField)", span="6233-6233"];
m14_3024 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Pre'', c.PreField)", span="6234-6234"];
m14_3025 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Post'', c.PostField)", span="6235-6235"];
m14_3026 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs", label="DateTimeTestClass c2 =\r\n                JsonConvert.DeserializeObject<DateTimeTestClass>(\r\n                    @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':''''2008-01-01T01:01:01Z'''',''''DateTimeOffsetField'''':''''2008-01-01T01:01:01Z'''',''''PostField'''':''''Post''''}'',\r\n                    new JsonSerializerSettings\r\n                    {\r\n                        DateTimeZoneHandling = DateTimeZoneHandling.Local\r\n                    })", span="6237-6243"];
m14_3027 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(2008, 1, 1, 1, 1, 1, 0, DateTimeKind.Utc).ToLocalTime(), c2.DateTimeField)", span="6245-6245"];
m14_3028 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTimeOffset(2008, 1, 1, 1, 1, 1, 0, TimeSpan.Zero), c2.DateTimeOffsetField)", span="6246-6246"];
m14_3029 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Pre'', c2.PreField)", span="6247-6247"];
m14_3030 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Post'', c2.PostField)", span="6248-6248"];
m14_3031 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", span="6222-6222"];
m14_298 [cluster="System.Version.Version(int, int, int, int)", file="JsonSerializerTest.cs", label="Entry System.Version.Version(int, int, int, int)", span="0-0"];
m14_1266 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", span="2416-2416"];
m14_1267 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new JsonIgnoreAttributeOnClassTestClass())", span="2418-2418"];
m14_1268 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''TheField'''':0,''''Property'''':21}'', json)", span="2420-2420"];
m14_1269 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs", label="JsonIgnoreAttributeOnClassTestClass c = JsonConvert.DeserializeObject<JsonIgnoreAttributeOnClassTestClass>(@''{''''TheField'''':99,''''Property'''':-1,''''IgnoredField'''':-1}'')", span="2422-2422"];
m14_1270 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, c.IgnoredField)", span="2424-2424"];
m14_1271 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(99, c.Field)", span="2425-2425"];
m14_1272 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", span="2416-2416"];
m14_2389 [cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", file="JsonSerializerTest.cs", label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", span="0-0"];
m14_2660 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", span="5498-5498"];
m14_2661 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new ClassAttributeDerived\r\n            {\r\n                BaseClassValue = ''BaseClassValue!'',\r\n                DerivedClassValue = ''DerivedClassValue!'',\r\n                NonSerialized = ''NonSerialized!''\r\n            }, Formatting.Indented)", span="5500-5505"];
m14_2662 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''DerivedClassValue'''': ''''DerivedClassValue!'''',\r\n  ''''BaseClassValue'''': ''''BaseClassValue!''''\r\n}'', json)", span="5507-5510"];
m14_2663 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(new CollectionClassAttributeDerived\r\n            {\r\n                BaseClassValue = ''BaseClassValue!'',\r\n                CollectionDerivedClassValue = ''CollectionDerivedClassValue!''\r\n            }, Formatting.Indented)", span="5512-5516"];
m14_2664 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''CollectionDerivedClassValue'''': ''''CollectionDerivedClassValue!'''',\r\n  ''''BaseClassValue'''': ''''BaseClassValue!''''\r\n}'', json)", span="5518-5521"];
m14_2665 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", span="5498-5498"];
m14_50 [cluster="System.IO.FileStream.Seek(long, System.IO.SeekOrigin)", file="JsonSerializerTest.cs", label="Entry System.IO.FileStream.Seek(long, System.IO.SeekOrigin)", span="0-0"];
m14_146 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", span="353-353"];
m14_147 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonSerializerTest.cs", label="FooRequired foo1 = new FooRequired(new[] { ''A'', ''B'', ''C'' })", span="355-355"];
m14_148 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(foo1)", span="356-356"];
m14_151 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonSerializerTest.cs", label="Assert.AreEqual(foo1.Bars.Count, foo2.Bars.Count)", span="361-361"];
m14_152 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonSerializerTest.cs", label="Assert.AreEqual(foo1.Bars[0], foo2.Bars[0])", span="362-362"];
m14_153 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonSerializerTest.cs", label="Assert.AreEqual(foo1.Bars[1], foo2.Bars[1])", span="363-363"];
m14_154 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonSerializerTest.cs", label="Assert.AreEqual(foo1.Bars[2], foo2.Bars[2])", span="364-364"];
m14_149 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{''''Bars'''':[''''A'''',''''B'''',''''C'''']}'', json)", span="358-358"];
m14_150 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonSerializerTest.cs", label="FooRequired foo2 = JsonConvert.DeserializeObject<FooRequired>(json)", span="360-360"];
m14_155 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", span="353-353"];
m14_313 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructWithConstructorAttribute()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructWithConstructorAttribute()", span="633-633"];
m14_314 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructWithConstructorAttribute()", file="JsonSerializerTest.cs", label="ImmutableStructWithConstructorAttribute result = JsonConvert.DeserializeObject<ImmutableStructWithConstructorAttribute>(''{ \''Value\'': \''working\'' }'')", span="635-635"];
m14_315 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructWithConstructorAttribute()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''working'', result.Value)", span="637-637"];
m14_316 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructWithConstructorAttribute()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructWithConstructorAttribute()", span="633-633"];
m14_1826 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", span="3588-3588"];
m14_1827 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="JsonSerializerTest.cs", label="string json = @''[]''", span="3590-3590"];
m14_1828 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.PopulateObject(json, new Person()); }, @''Cannot populate JSON array onto type 'Newtonsoft.Json.Tests.TestObjects.Organization.Person'. Path '', line 1, position 1.'')", span="3592-3592"];
m14_1829 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", span="3588-3588"];
m14_320 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", span="665-665"];
m14_321 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonSerializerTest.cs", label="CustomerWithMetadataType c = new CustomerWithMetadataType()\r\n            {\r\n                UpdatedBy_Id = Guid.NewGuid()\r\n            }", span="667-670"];
m14_322 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c)", span="671-671"];
m14_323 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''{}'', json)", span="673-673"];
m14_324 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonSerializerTest.cs", label="CustomerWithMetadataType c2 = JsonConvert.DeserializeObject<CustomerWithMetadataType>(''{'UpdatedBy_Id':'F6E0666D-13C7-4745-B486-800812C8F6DE'}'')", span="675-675"];
m14_325 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonSerializerTest.cs", label="Assert.AreEqual(Guid.Empty, c2.UpdatedBy_Id)", span="677-677"];
m14_326 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", span="665-665"];
m14_3193 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", span="6596-6596"];
m14_3194 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs", label="IDictionary<DateTime, int> dic1 = new Dictionary<DateTime, int>\r\n            {\r\n                { new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc), 1 },\r\n                { new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc), 2 }\r\n            }", span="6598-6602"];
m14_3195 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented)", span="6604-6604"];
m14_3196 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''2000-12-12T12:12:12Z'''': 1,\r\n  ''''2013-12-12T12:12:12Z'''': 2\r\n}'', json)", span="6606-6609"];
m14_3197 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs", label="IDictionary<DateTime, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTime, int>>(json)", span="6611-6611"];
m14_3198 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, dic2.Count)", span="6613-6613"];
m14_3199 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, dic2[new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="6614-6614"];
m14_3200 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, dic2[new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="6615-6615"];
m14_3201 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", span="6596-6596"];
m14_1724 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", span="3422-3422"];
m14_1725 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs", label="string json = @''{''''key1'''':''''value1'''',''''key2'''':''''value2''''}''", span="3424-3424"];
m14_1726 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs", label="Dictionary<string, string> values = JsonConvert.DeserializeObject<Dictionary<string, string>>(json)", span="3426-3426"];
m14_1727 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, values.Count)", span="3428-3428"];
m14_1728 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value1'', values[''key1''])", span="3429-3429"];
m14_1729 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value2'', values[''key2''])", span="3430-3430"];
m14_1730 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", span="3422-3422"];
m14_3658 [cluster="System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonSerializerTest.cs", label="Entry System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", span="0-0"];
m14_2740 [cluster="System.IO.StringWriter.StringWriter()", file="JsonSerializerTest.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m14_2181 [cluster="Newtonsoft.Json.Tests.TestObjects.BBTestClass.BBTestClass(int, int)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.BBTestClass.BBTestClass(int, int)", span="58-58"];
m14_2452 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", span="5045-5045"];
m14_2453 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonSerializerTest.cs", label="string json = ''[123456789876543.21]''", span="5047-5047"];
m14_2454 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonSerializerTest.cs", label="IList<decimal> a = JsonConvert.DeserializeObject<IList<decimal>>(json)", span="5048-5048"];
m14_2455 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonSerializerTest.cs", label="Assert.AreEqual(123456789876543.21m, a[0])", span="5049-5049"];
m14_2456 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", span="5045-5045"];
m14_3816 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", span="8090-8090"];
m14_3817 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="DateTime dt = new DateTime(2000, 12, 22)", span="8092-8092"];
m14_3818 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd''", span="8093-8093"];
m14_3820 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(dt, settings)", span="8099-8099"];
m14_3823 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dt, dt1)", span="8105-8105"];
m14_3828 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dt, (DateTime)v.Value)", span="8115-8115"];
m14_3819 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString\r\n            }", span="8094-8097"];
m14_3824 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                DateFormatString = dateFormatString\r\n            }", span="8107-8110"];
m14_3829 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="reader = new JsonTextReader(new StringReader(@''''''abc''''''))\r\n            {\r\n                DateFormatString = dateFormatString\r\n            }", span="8117-8120"];
m14_3822 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="DateTime dt1 = JsonConvert.DeserializeObject<DateTime>(json, settings)", span="8103-8103"];
m14_3821 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''''''2000-pie-Dec-Friday-22'''''', json)", span="8101-8101"];
m14_3825 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="JValue v = (JValue)JToken.ReadFrom(reader)", span="8111-8111"];
m14_3826 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JTokenType.Date, v.Type)", span="8113-8113"];
m14_3827 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(DateTime), v.Value.GetType())", span="8114-8114"];
m14_3830 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="v = (JValue)JToken.ReadFrom(reader)", span="8121-8121"];
m14_3831 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JTokenType.String, v.Type)", span="8123-8123"];
m14_3832 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(string), v.Value.GetType())", span="8124-8124"];
m14_3833 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''abc'', v.Value)", span="8125-8125"];
m14_3834 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", span="8090-8090"];
m14_3935 [cluster="Newtonsoft.Json.Tests.TestObjects.ErroringTestClass.ErroringTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ErroringTestClass.ErroringTestClass()", span="28-28"];
m14_1752 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", span="3465-3465"];
m14_1753 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="JsonSerializerTest.cs", label="string json = @''{id: ''''12'''', name: ''''test'''', items: [{id: ''''112'''', name: ''''testing''''}]}''", span="3467-3467"];
m14_1754 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="JsonSerializerTest.cs", label="ListTestClass l = JsonConvert.DeserializeObject<ListTestClass>(json)", span="3469-3469"];
m14_1755 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", span="3465-3465"];
m14_1291 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", span="2456-2456"];
m14_1292 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="ConverterPrecedenceClass c1 = new ConverterPrecedenceClass(''!Test!'')", span="2458-2458"];
m14_1293 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c1, new ArgumentConverterPrecedenceClassConverter())", span="2460-2460"];
m14_1294 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''[''''Class'''',''''!Test!'''']'', json)", span="2461-2461"];
m14_1295 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="ConverterPrecedenceClass c2 = JsonConvert.DeserializeObject<ConverterPrecedenceClass>(json, new ArgumentConverterPrecedenceClassConverter())", span="2463-2463"];
m14_1296 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''!Test!'', c2.TestValue)", span="2465-2465"];
m14_1297 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", span="2456-2456"];
m14_3423 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", span="7146-7146"];
m14_3424 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="var tuple = Tuple.Create(500)", span="7148-7148"];
m14_3425 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="SerializableContractResolver contractResolver = new SerializableContractResolver()", span="7150-7150"];
m14_3426 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="var json = JsonConvert.SerializeObject(tuple, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = contractResolver\r\n            })", span="7152-7155"];
m14_3428 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="var obj = JsonConvert.DeserializeObject<Tuple<int>>(json, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = contractResolver\r\n            })", span="7158-7161"];
m14_3427 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''m_Item1'''':500}'', json)", span="7156-7156"];
m14_3429 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="Assert.AreEqual(500, obj.Item1)", span="7162-7162"];
m14_3430 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", span="7146-7146"];
m14_1403 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", span="2648-2648"];
m14_1404 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="UserNullable userNullablle = new UserNullable\r\n            {\r\n                Id = new Guid(''AD6205E8-0DF4-465d-AEA6-8BA18E93A7E7''),\r\n                FName = ''FirstValue'',\r\n                LName = ''LastValue'',\r\n                RoleId = 5,\r\n                NullableRoleId = 6,\r\n                NullRoleId = null,\r\n                Active = true\r\n            }", span="2650-2659"];
m14_1405 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(userNullablle)", span="2661-2661"];
m14_1406 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Id'''':''''ad6205e8-0df4-465d-aea6-8ba18e93a7e7'''',''''FName'''':''''FirstValue'''',''''LName'''':''''LastValue'''',''''RoleId'''':5,''''NullableRoleId'''':6,''''NullRoleId'''':null,''''Active'''':true}'', json)", span="2663-2663"];
m14_1407 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="UserNullable userNullablleDeserialized = JsonConvert.DeserializeObject<UserNullable>(json)", span="2665-2665"];
m14_1408 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new Guid(''AD6205E8-0DF4-465d-AEA6-8BA18E93A7E7''), userNullablleDeserialized.Id)", span="2667-2667"];
m14_1409 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''FirstValue'', userNullablleDeserialized.FName)", span="2668-2668"];
m14_1410 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''LastValue'', userNullablleDeserialized.LName)", span="2669-2669"];
m14_1411 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(5, userNullablleDeserialized.RoleId)", span="2670-2670"];
m14_1412 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(6, userNullablleDeserialized.NullableRoleId)", span="2671-2671"];
m14_1413 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, userNullablleDeserialized.NullRoleId)", span="2672-2672"];
m14_1414 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, userNullablleDeserialized.Active)", span="2673-2673"];
m14_1415 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", span="2648-2648"];
m14_1273 [cluster="Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeOnClassTestClass.JsonIgnoreAttributeOnClassTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeOnClassTestClass.JsonIgnoreAttributeOnClassTestClass()", span="28-28"];
m14_3662 [cluster="System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, string)", file="JsonSerializerTest.cs", label="Entry System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, string)", span="0-0"];
m14_1865 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", span="3664-3664"];
m14_1866 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:null}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                });\r\n            }, @''Error converting value {null} to type 'System.Int32'. Path 'ReadTimeout', line 1, position 17.'')", span="3666-3677"];
m14_1867 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", span="3664-3664"];
m14_2668 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", span="5525-5525"];
m14_2669 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonSerializerTest.cs", label="PrivateMembersClassWithAttributes c1 = new PrivateMembersClassWithAttributes(''privateString!'', ''internalString!'', ''readonlyString!'')", span="5527-5527"];
m14_2670 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="5529-5529"];
m14_2671 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''_privateString'''': ''''privateString!'''',\r\n  ''''_readonlyString'''': ''''readonlyString!'''',\r\n  ''''_internalString'''': ''''internalString!''''\r\n}'', json)", span="5530-5534"];
m14_2672 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonSerializerTest.cs", label="PrivateMembersClassWithAttributes c2 = JsonConvert.DeserializeObject<PrivateMembersClassWithAttributes>(json)", span="5536-5536"];
m14_2673 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''readonlyString!'', c2.UseValue())", span="5537-5537"];
m14_2674 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", span="5525-5525"];
m14_3488 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", span="7313-7313"];
m14_3489 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs", label="StringWriter sw = new StringWriter()", span="7315-7315"];
m14_3490 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs", label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="7316-7316"];
m14_3494 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs", label="string json = sw.ToString()", span="7327-7327"];
m14_3491 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs", label="JsonSerializer serializer = JsonSerializer.Create(new JsonSerializerSettings\r\n            {\r\n                StringEscapeHandling = StringEscapeHandling.EscapeHtml,\r\n                Formatting = Formatting.Indented\r\n            })", span="7318-7322"];
m14_3492 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs", label="serializer.Serialize(jsonWriter, new { html = ''<html></html>'' })", span="7323-7323"];
m14_3493 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs", label="Assert.AreEqual(StringEscapeHandling.Default, jsonWriter.StringEscapeHandling)", span="7325-7325"];
m14_3495 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''html'''': ''''\u003chtml\u003e\u003c/html\u003e''''\r\n}'', json)", span="7329-7331"];
m14_3496 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", span="7313-7313"];
m14_198 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_ItemRequired_DisallowedNull()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_ItemRequired_DisallowedNull()", span="417-417"];
m14_199 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_ItemRequired_DisallowedNull()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.SerializeObject(new DictionaryWithNoNull()); }, ''Cannot write a null value for property 'Name'. Property requires a non-null value. Path ''.'')", span="419-419"];
m14_200 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_ItemRequired_DisallowedNull()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_ItemRequired_DisallowedNull()", span="417-417"];
m14_1812 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", span="3562-3562"];
m14_1813 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="JsonSerializerTest.cs", label="string json = @''[new Constructor(123)]''", span="3564-3564"];
m14_1814 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<List<Person>>(json); }, @''Error converting value ''''Constructor'''' to type 'Newtonsoft.Json.Tests.TestObjects.Organization.Person'. Path '[0]', line 1, position 17.'')", span="3566-3566"];
m14_1815 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", span="3562-3562"];
m14_1899 [cluster="Newtonsoft.Json.Tests.TestObjects.StructTest.StructTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.StructTest.StructTest()", span="27-27"];
m14_3032 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, int, System.DateTimeKind)", file="JsonSerializerTest.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m14_763 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", span="1470-1470"];
m14_764 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonSerializerTest.cs", label="Regex regex = new Regex(''(hi)'', RegexOptions.CultureInvariant)", span="1472-1472"];
m14_765 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(regex, Formatting.Indented)", span="1474-1474"];
m14_766 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonSerializerTest.cs", label="Regex r2 = JsonConvert.DeserializeObject<Regex>(json)", span="1476-1476"];
m14_767 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''(hi)'', r2.ToString())", span="1478-1478"];
m14_768 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonSerializerTest.cs", label="Assert.AreEqual(RegexOptions.CultureInvariant, r2.Options)", span="1479-1479"];
m14_769 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", span="1470-1470"];
m14_1624 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", span="3179-3179"];
m14_1625 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="OptInClass optInClass = new OptInClass()", span="3181-3181"];
m14_1626 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="optInClass.Age = 26", span="3182-3182"];
m14_1627 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="optInClass.Name = ''James NK''", span="3183-3183"];
m14_1628 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="optInClass.NotIncluded = ''Poor me :(''", span="3184-3184"];
m14_1629 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(optInClass, Formatting.Indented)", span="3186-3186"];
m14_1630 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Name'''': ''''James NK'''',\r\n  ''''Age'''': 26\r\n}'', json)", span="3188-3191"];
m14_1631 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="OptInClass newOptInClass = JsonConvert.DeserializeObject<OptInClass>(@''{\r\n  ''''Name'''': ''''James NK'''',\r\n  ''''NotIncluded'''': ''''Ignore me!'''',\r\n  ''''Age'''': 26\r\n}'')", span="3193-3197"];
m14_1632 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(26, newOptInClass.Age)", span="3198-3198"];
m14_1633 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''James NK'', newOptInClass.Name)", span="3199-3199"];
m14_1634 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, newOptInClass.NotIncluded)", span="3200-3200"];
m14_1635 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", span="3179-3179"];
m14_1079 [cluster="System.Text.Encoding.GetBytes(string)", file="JsonSerializerTest.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m14_1517 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs", label="LogEntry entry = new LogEntry\r\n            {\r\n                LogDate = new DateTime(2009, 2, 15, 0, 0, 0, DateTimeKind.Utc),\r\n                Details = ''Application started.''\r\n            }", span="2909-2913"];
m14_1516 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", span="2907-2907"];
m14_1518 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs", label="string defaultJson = JsonConvert.SerializeObject(entry)", span="2915-2915"];
m14_1519 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs", label="string isoJson = JsonConvert.SerializeObject(entry, new IsoDateTimeConverter())", span="2918-2918"];
m14_1520 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs", label="string javascriptJson = JsonConvert.SerializeObject(entry, new JavaScriptDateTimeConverter())", span="2921-2921"];
m14_1521 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Details'''':''''Application started.'''',''''LogDate'''':''''2009-02-15T00:00:00Z''''}'', defaultJson)", span="2924-2924"];
m14_1522 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Details'''':''''Application started.'''',''''LogDate'''':''''2009-02-15T00:00:00Z''''}'', isoJson)", span="2925-2925"];
m14_1523 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Details'''':''''Application started.'''',''''LogDate'''':new Date(1234656000000)}'', javascriptJson)", span="2926-2926"];
m14_1524 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", span="2907-2907"];
m14_1218 [cluster="Newtonsoft.Json.Tests.TestObjects.ConverableMembers.ConverableMembers()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ConverableMembers.ConverableMembers()", span="30-30"];
m14_980 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", span="1842-1842"];
m14_981 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="MethodExecutorObject executorObject = new MethodExecutorObject()", span="1844-1844"];
m14_982 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="executorObject.serverClassName = ''BanSubs''", span="1845-1845"];
m14_983 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="executorObject.serverMethodParams = new object[] { ''21321546'', ''101'', ''1236'', ''D:\\1.txt'' }", span="1846-1846"];
m14_984 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="executorObject.clientGetResultFunction = ''ClientBanSubsCB''", span="1847-1847"];
m14_985 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="string output = JsonConvert.SerializeObject(executorObject)", span="1849-1849"];
m14_987 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="Assert.AreNotSame(executorObject, executorObject2)", span="1853-1853"];
m14_986 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="MethodExecutorObject executorObject2 = JsonConvert.DeserializeObject(output, typeof(MethodExecutorObject)) as MethodExecutorObject", span="1851-1851"];
m14_988 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(executorObject2.serverClassName, ''BanSubs'')", span="1854-1854"];
m14_989 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(executorObject2.serverMethodParams.Length, 4)", span="1855-1855"];
m14_990 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="CustomAssert.Contains(executorObject2.serverMethodParams, ''101'')", span="1856-1856"];
m14_991 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(executorObject2.clientGetResultFunction, ''ClientBanSubsCB'')", span="1857-1857"];
m14_992 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", span="1842-1842"];
m14_157 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired()", span="368-368"];
m14_158 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Binding>(''{requiredProperty:''}''); }, ''Required property 'RequiredProperty' expects a value but got null. Path '', line 1, position 21.'')", span="370-370"];
m14_159 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired()", span="368-368"];
m14_436 [cluster="Newtonsoft.Json.Tests.TestObjects.ResponseWithNewGenericPropertyVirtual<T>.ResponseWithNewGenericPropertyVirtual()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ResponseWithNewGenericPropertyVirtual<T>.ResponseWithNewGenericPropertyVirtual()", span="27-27"];
m14_793 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", span="1518-1518"];
m14_794 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", file="JsonSerializerTest.cs", label="var json = @''{''''foo'''':''''value''''}''", span="1520-1520"];
m14_795 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", file="JsonSerializerTest.cs", label="var deserialized = JsonConvert.DeserializeObject<Foo1>(json)", span="1521-1521"];
m14_796 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value'', deserialized.foo)", span="1522-1522"];
m14_797 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", span="1518-1518"];
m14_919 [cluster="System.IO.MemoryStream.ToArray()", file="JsonSerializerTest.cs", label="Entry System.IO.MemoryStream.ToArray()", span="0-0"];
m14_2717 [cluster="Newtonsoft.Json.Tests.TestObjects.UriGuidTimeSpanTestClass.UriGuidTimeSpanTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.UriGuidTimeSpanTestClass.UriGuidTimeSpanTestClass()", span="29-29"];
m14_312 [cluster="System.ValueTuple.Create<T1, T2, T3>(T1, T2, T3)", file="JsonSerializerTest.cs", label="Entry System.ValueTuple.Create<T1, T2, T3>(T1, T2, T3)", span="0-0"];
m14_3068 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="6355-6355"];
m14_3069 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", color=red, community=0, file="JsonSerializerTest.cs", label="0: Color color = (Color)value", span="6357-6357"];
m14_3071 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", color=red, community=0, file="JsonSerializerTest.cs", label="0: writer.WriteValue('':::'' + fixedColor.ToKnownColor().ToString().ToUpper() + '':::'')", span="6360-6360"];
m14_3070 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", color=red, community=0, file="JsonSerializerTest.cs", label="0: Color fixedColor = (color == Color.White || color == Color.Black) ? color : Color.Gray", span="6358-6358"];
m14_3072 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="6355-6355"];
m14_872 [cluster="Newtonsoft.Json.Tests.TestObjects.SubWithoutContractNewProperties.SubWithoutContractNewProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.SubWithoutContractNewProperties.SubWithoutContractNewProperties()", span="31-31"];
m14_2371 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", span="4890-4890"];
m14_2372 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonSerializerTest.cs", label="StructWithAttribute testStruct = new StructWithAttribute\r\n            {\r\n                MyInt = int.MaxValue\r\n            }", span="4892-4895"];
m14_2373 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(testStruct, Formatting.Indented)", span="4897-4897"];
m14_2374 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''MyInt'''': 2147483647\r\n}'', json)", span="4899-4901"];
m14_2375 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonSerializerTest.cs", label="StructWithAttribute newStruct = JsonConvert.DeserializeObject<StructWithAttribute>(json)", span="4903-4903"];
m14_2376 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonSerializerTest.cs", label="Assert.AreEqual(int.MaxValue, newStruct.MyInt)", span="4905-4905"];
m14_2377 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", span="4890-4890"];
m14_328 [cluster="System.Guid.NewGuid()", file="JsonSerializerTest.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m14_3787 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt16(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt16(System.IFormatProvider)", span="8031-8031"];
m14_3788 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt16(System.IFormatProvider)", color=red, community=0, file="JsonSerializerTest.cs", label="0: throw new InvalidCastException();", span="8033-8033"];
m14_3789 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt16(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt16(System.IFormatProvider)", span="8031-8031"];
m14_127 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", span="313-313"];
m14_128 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs", label="IList<bool?> l = JsonConvert.DeserializeObject<IList<bool?>>(@''[\r\n  1,\r\n  0,\r\n  1.1,\r\n  0.0,\r\n  0.000000000001,\r\n  9999999999,\r\n  -9999999999,\r\n  9999999999999999999999999999999999999999999999999999999999999999999999,\r\n  -9999999999999999999999999999999999999999999999999999999999999999999999,\r\n  'true',\r\n  'TRUE',\r\n  'false',\r\n  'FALSE',\r\n  '',\r\n  null\r\n]'')", span="315-331"];
m14_129 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs", label="int i = 0", span="333-333"];
m14_130 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, l[i++])", span="334-334"];
m14_131 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(false, l[i++])", span="335-335"];
m14_132 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, l[i++])", span="336-336"];
m14_133 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(false, l[i++])", span="337-337"];
m14_134 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, l[i++])", span="338-338"];
m14_135 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, l[i++])", span="339-339"];
m14_136 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, l[i++])", span="340-340"];
m14_137 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, l[i++])", span="341-341"];
m14_138 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, l[i++])", span="342-342"];
m14_139 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, l[i++])", span="343-343"];
m14_140 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, l[i++])", span="344-344"];
m14_141 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(false, l[i++])", span="345-345"];
m14_142 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(false, l[i++])", span="346-346"];
m14_143 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, l[i++])", span="347-347"];
m14_144 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, l[i++])", span="348-348"];
m14_145 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", span="313-313"];
m14_939 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type)", span="692-692"];
m14_1549 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", span="2995-2995"];
m14_1550 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonSerializerTest.cs", label="string json = ''{ 'testProperty1': 'value' }''", span="2997-2997"];
m14_1551 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonSerializerTest.cs", label="ConstructorAndDefaultValueAttributeTestClass c = JsonConvert.DeserializeObject<ConstructorAndDefaultValueAttributeTestClass>(json, new JsonSerializerSettings\r\n            {\r\n                DefaultValueHandling = DefaultValueHandling.Populate\r\n            })", span="2999-3002"];
m14_1554 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonSerializerTest.cs", label="c = JsonConvert.DeserializeObject<ConstructorAndDefaultValueAttributeTestClass>(json, new JsonSerializerSettings\r\n            {\r\n                DefaultValueHandling = DefaultValueHandling.IgnoreAndPopulate\r\n            })", span="3006-3009"];
m14_1552 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value'', c.TestProperty1)", span="3003-3003"];
m14_1553 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(21, c.TestProperty2)", span="3004-3004"];
m14_1555 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value'', c.TestProperty1)", span="3010-3010"];
m14_1556 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(21, c.TestProperty2)", span="3011-3011"];
m14_1557 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", span="2995-2995"];
m14_2241 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XmlNodeTestObject.XmlNodeTestObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XmlNodeTestObject.XmlNodeTestObject()", span="4596-4596"];
m14_3618 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m14_2519 [cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="133-133"];
m14_2571 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", span="5294-5294"];
m14_2572 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="JsonSerializerTest.cs", label="object dateTime = JsonConvert.DeserializeObject(''null'', typeof(DateTime?))", span="5296-5296"];
m14_2573 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="JsonSerializerTest.cs", label="Assert.IsNull(dateTime)", span="5298-5298"];
m14_2574 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", span="5294-5294"];
m14_3256 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", span="6771-6771"];
m14_3257 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new IgnoreDataMemberTestClass() { Ignored = int.MaxValue }, Formatting.Indented)", span="6773-6773"];
m14_3258 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{}'', json)", span="6774-6774"];
m14_3259 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", span="6771-6771"];
m14_2825 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", span="5865-5865"];
m14_2826 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonSerializerTest.cs", label="IList<DateTimeOffset?> d1 = new List<DateTimeOffset?> { null }", span="5867-5867"];
m14_2827 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(d1)", span="5869-5869"];
m14_2829 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonSerializerTest.cs", label="Assert.AreEqual(d1.Count, d2.Count)", span="5873-5873"];
m14_2830 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonSerializerTest.cs", label="Assert.AreEqual(d1[0], d2[0])", span="5874-5874"];
m14_2828 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonSerializerTest.cs", label="IList<DateTimeOffset?> d2 = JsonConvert.DeserializeObject<IList<DateTimeOffset?>>(json)", span="5871-5871"];
m14_2831 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", span="5865-5865"];
m14_3499 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollectionTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollectionTest()", span="7342-7342"];
m14_3500 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollectionTest()", color=red, community=0, file="JsonSerializerTest.cs", label="0: ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<NoConstructorReadOnlyCollection<int>>(''[1]''), ''Cannot deserialize readonly or fixed size list: Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+NoConstructorReadOnlyCollection`1[System.Int32]. Path '', line 1, position 1.'')", span="7344-7344"];
m14_3501 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollectionTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollectionTest()", span="7342-7342"];
m14_722 [cluster="Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalReader)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalReader)", span="239-239"];
m14_3397 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", span="7073-7073"];
m14_3398 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonSerializerTest.cs", label="string json = @''[\r\n        900\r\n      ]''", span="7075-7077"];
m14_3399 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonSerializerTest.cs", label="var l = JsonConvert.DeserializeObject<IReadOnlyList<int>>(json)", span="7079-7079"];
m14_3400 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonSerializerTest.cs", label="int i = l[0]", span="7081-7081"];
m14_3401 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonSerializerTest.cs", label="Assert.AreEqual(900, i)", span="7084-7084"];
m14_3402 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", span="7073-7073"];
m14_786 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", span="1509-1509"];
m14_787 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="JsonSerializerTest.cs", label="var original = new Foo1 { foo = ''value'' }", span="1511-1511"];
m14_788 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="JsonSerializerTest.cs", label="var json = JsonConvert.SerializeObject(original)", span="1512-1512"];
m14_789 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="JsonSerializerTest.cs", label="var expectedJson = @''{''''foo'''':''''value''''}''", span="1513-1513"];
m14_790 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="JsonSerializerTest.cs", label="Assert.AreEqual(expectedJson, json)", span="1514-1514"];
m14_791 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", span="1509-1509"];
m14_2394 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", span="4939-4939"];
m14_2395 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs", label="var serializeObject = JsonConvert.SerializeObject(new TimeZoneOffsetObject\r\n            {\r\n                Offset = new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6))\r\n            }, Formatting.None, new JsonSerializerSettings { DateFormatHandling = DateFormatHandling.MicrosoftDateFormat })", span="4941-4944"];
m14_2396 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''{\''Offset\'':\''\\/Date(946663200000+0600)\\/\''}'', serializeObject)", span="4946-4946"];
m14_2397 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(serializeObject))", span="4948-4948"];
m14_2398 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="4950-4950"];
m14_2400 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs", label="var deserializeObject = serializer.Deserialize<TimeZoneOffsetObject>(reader)", span="4953-4953"];
m14_2399 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs", label="serializer.DateParseHandling = DateParseHandling.None", span="4951-4951"];
m14_2401 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs", label="Assert.AreEqual(TimeSpan.FromHours(6), deserializeObject.Offset.Offset)", span="4955-4955"];
m14_2402 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(2000, 1, 1), deserializeObject.Offset.Date)", span="4956-4956"];
m14_2403 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", span="4939-4939"];
m14_572 [cluster="System.Runtime.Serialization.StreamingContext.StreamingContext(System.Runtime.Serialization.StreamingContextStates)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.StreamingContext.StreamingContext(System.Runtime.Serialization.StreamingContextStates)", span="0-0"];
m14_1395 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", span="2636-2636"];
m14_1396 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs", label="string json = @''{''''first_name'''':''''FirstNameValue'''',''''RawContent'''':[1,2,3,4,5],''''last_name'''':''''LastNameValue''''}''", span="2638-2638"];
m14_1397 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs", label="PersonRaw personRaw = JsonConvert.DeserializeObject<PersonRaw>(json)", span="2640-2640"];
m14_1398 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''FirstNameValue'', personRaw.FirstName)", span="2642-2642"];
m14_1399 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''[1,2,3,4,5]'', personRaw.RawContent.ToString())", span="2643-2643"];
m14_1400 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''LastNameValue'', personRaw.LastName)", span="2644-2644"];
m14_1401 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", span="2636-2636"];
m14_2079 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m14_2435 [cluster="Unk.SerializeObject", file="JsonSerializerTest.cs", label="Entry Unk.SerializeObject", span=""];
m14_2412 [cluster="Newtonsoft.Json.Tests.TestObjects.DerivedEvent.DerivedEvent()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.DerivedEvent.DerivedEvent()", span="27-27"];
m14_2321 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", span="4780-4780"];
m14_2322 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonSerializerTest.cs", label="string jsonText = JsonConvert.SerializeObject(new double?[] { 2.4, 4.3, null }, Formatting.Indented)", span="4782-4782"];
m14_2323 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''[\r\n  2.4,\r\n  4.3,\r\n  null\r\n]'', jsonText)", span="4784-4788"];
m14_2324 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", span="4780-4780"];
m14_4032 [cluster="Newtonsoft.Json.Tests.TestObjects.ChildClassWithProtectedOverridePlusJsonProperty.GetPropertyValue()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ChildClassWithProtectedOverridePlusJsonProperty.GetPropertyValue()", span="32-32"];
m14_418 [cluster="Newtonsoft.Json.Tests.TestObjects.ChildClassVirtual.ChildClassVirtual()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ChildClassVirtual.ChildClassVirtual()", span="27-27"];
m14_3169 [cluster="Newtonsoft.Json.Tests.TestObjects.PropertyItemConverter.PropertyItemConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.PropertyItemConverter.PropertyItemConverter()", span="29-29"];
m14_2551 [cluster="Newtonsoft.Json.Tests.TestObjects.EnumerableClass.EnumerableClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.EnumerableClass.EnumerableClass()", span="29-29"];
m14_3999 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="8516-8516"];
m14_4000 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", color=red, community=0, file="JsonSerializerTest.cs", label="0: throw new NotImplementedException();", span="8518-8518"];
m14_4001 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="8516-8516"];
m14_1274 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", span="2429-2429"];
m14_1275 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs", label="ConstructorCaseSensitivityClass c = new ConstructorCaseSensitivityClass(''param1'', ''Param1'', ''Param2'')", span="2431-2431"];
m14_1276 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c)", span="2433-2433"];
m14_1277 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs", label="ConstructorCaseSensitivityClass deserialized = JsonConvert.DeserializeObject<ConstructorCaseSensitivityClass>(json)", span="2435-2435"];
m14_1278 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''param1'', deserialized.param1)", span="2437-2437"];
m14_1279 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Param1'', deserialized.Param1)", span="2438-2438"];
m14_1280 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Param2'', deserialized.Param2)", span="2439-2439"];
m14_1281 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", span="2429-2429"];
m14_110 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", span="278-278"];
m14_111 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonSerializerTest.cs", label="IList<bool> l = JsonConvert.DeserializeObject<IList<bool>>(@''[\r\n  1,\r\n  0,\r\n  1.1,\r\n  0.0,\r\n  0.000000000001,\r\n  9999999999,\r\n  -9999999999,\r\n  9999999999999999999999999999999999999999999999999999999999999999999999,\r\n  -9999999999999999999999999999999999999999999999999999999999999999999999,\r\n  'true',\r\n  'TRUE',\r\n  'false',\r\n  'FALSE'\r\n]'')", span="280-294"];
m14_112 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonSerializerTest.cs", label="int i = 0", span="296-296"];
m14_113 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, l[i++])", span="297-297"];
m14_114 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(false, l[i++])", span="298-298"];
m14_115 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, l[i++])", span="299-299"];
m14_116 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(false, l[i++])", span="300-300"];
m14_117 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, l[i++])", span="301-301"];
m14_118 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, l[i++])", span="302-302"];
m14_119 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, l[i++])", span="303-303"];
m14_120 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, l[i++])", span="304-304"];
m14_121 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, l[i++])", span="305-305"];
m14_122 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, l[i++])", span="306-306"];
m14_123 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, l[i++])", span="307-307"];
m14_124 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(false, l[i++])", span="308-308"];
m14_125 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(false, l[i++])", span="309-309"];
m14_126 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", span="278-278"];
m14_464 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString_Fail()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString_Fail()", span="973-973"];
m14_465 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString_Fail()", file="JsonSerializerTest.cs", label="string json = ''['1.2.3.4444444444444444444444']''", span="975-975"];
m14_466 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString_Fail()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<List<Version>>(json); }, @''Error converting value ''''1.2.3.4444444444444444444444'''' to type 'System.Version'. Path '[0]', line 1, position 31.'')", span="977-977"];
m14_467 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString_Fail()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString_Fail()", span="973-973"];
m14_2354 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", span="4856-4856"];
m14_2355 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs", label="string classRef = typeof(StringDictionary).FullName", span="4858-4858"];
m14_2356 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs", label="StringDictionaryTestClass s1 = new StringDictionaryTestClass()\r\n            {\r\n                StringDictionaryProperty = new StringDictionary()\r\n                {\r\n                    { ''1'', ''One'' },\r\n                    { ''2'', ''II'' },\r\n                    { ''3'', ''3'' }\r\n                }\r\n            }", span="4860-4868"];
m14_2364 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<StringDictionaryTestClass>(json); }, ''Cannot create and populate list type '' + classRef + ''. Path 'StringDictionaryProperty', line 2, position 31.'')", span="4884-4884"];
m14_2357 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(s1, Formatting.Indented)", span="4870-4870"];
m14_2358 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs", label="s1.StringDictionaryProperty is IDictionary<string, string>", span="4873-4873"];
m14_2359 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs", label="StringDictionaryTestClass d = JsonConvert.DeserializeObject<StringDictionaryTestClass>(json)", span="4875-4875"];
m14_2360 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, d.StringDictionaryProperty.Count)", span="4877-4877"];
m14_2361 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''One'', d.StringDictionaryProperty[''1''])", span="4878-4878"];
m14_2362 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''II'', d.StringDictionaryProperty[''2''])", span="4879-4879"];
m14_2363 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''3'', d.StringDictionaryProperty[''3''])", span="4880-4880"];
m14_2365 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", span="4856-4856"];
m14_2021 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", span="4046-4046"];
m14_2022 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs", label="CircularConstructor1 c1 = new CircularConstructor1(null)\r\n            {\r\n                StringProperty = ''Value!''\r\n            }", span="4048-4051"];
m14_2023 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs", label="CircularConstructor2 c2 = new CircularConstructor2(null)\r\n            {\r\n                IntProperty = 1\r\n            }", span="4053-4056"];
m14_2024 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs", label="c1.C2 = c2", span="4058-4058"];
m14_2025 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs", label="c2.C1 = c1", span="4059-4059"];
m14_2026 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c1, new JsonSerializerSettings\r\n            {\r\n                ReferenceLoopHandling = ReferenceLoopHandling.Ignore,\r\n                Formatting = Formatting.Indented\r\n            })", span="4061-4065"];
m14_2027 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''C2'''': {\r\n    ''''IntProperty'''': 1\r\n  },\r\n  ''''StringProperty'''': ''''Value!''''\r\n}'', json)", span="4067-4072"];
m14_2028 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs", label="CircularConstructor1 newC1 = JsonConvert.DeserializeObject<CircularConstructor1>(@''{\r\n  ''''C2'''': {\r\n    ''''IntProperty'''': 1,\r\n    ''''C1'''': {}\r\n  },\r\n  ''''StringProperty'''': ''''Value!''''\r\n}'')", span="4074-4080"];
m14_2029 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Value!'', newC1.StringProperty)", span="4082-4082"];
m14_2030 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, newC1.C2.IntProperty)", span="4083-4083"];
m14_2031 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, newC1.C2.C1.StringProperty)", span="4084-4084"];
m14_2032 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, newC1.C2.C1.C2)", span="4085-4085"];
m14_2033 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", span="4046-4046"];
m14_1242 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", span="2380-2380"];
m14_1243 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs", label="Guid guid = new Guid(''BED7F4EA-1A96-11d2-8F08-00A0C9A6186D'')", span="2382-2382"];
m14_1244 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new ClassWithGuid { GuidField = guid })", span="2384-2384"];
m14_1247 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(guid, c.GuidField)", span="2388-2388"];
m14_1245 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''GuidField'''':''''bed7f4ea-1a96-11d2-8f08-00a0c9a6186d''''}'', json)", span="2385-2385"];
m14_1246 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs", label="ClassWithGuid c = JsonConvert.DeserializeObject<ClassWithGuid>(json)", span="2387-2387"];
m14_1248 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", span="2380-2380"];
m14_3964 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.EncodingReadConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.EncodingReadConverter()", span="8531-8531"];
m14_2876 [cluster="Newtonsoft.Json.Tests.TestObjects.Widget.Widget()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Widget.Widget()", span="27-27"];
m14_3009 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", span="6199-6199"];
m14_3010 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<ArgumentNullException>(\r\n                () => { JsonConvert.DeserializeObject(null); },\r\n                new[]\r\n                {\r\n                    ''Value cannot be null.'' + Environment.NewLine + ''Parameter name: value'',\r\n                    ''Argument cannot be null.'' + Environment.NewLine + ''Parameter name: value'' // mono\r\n                })", span="6201-6207"];
m14_3011 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", span="6199-6199"];
m14_12 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeImmutableStruct()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeImmutableStruct()", span="113-113"];
m14_13 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeImmutableStruct()", file="JsonSerializerTest.cs", label="var result = JsonConvert.DeserializeObject<ImmutableStruct>(''{ \''Value\'': \''working\'', \''Value2\'': 2 }'')", span="115-115"];
m14_14 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeImmutableStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''working'', result.Value)", span="117-117"];
m14_15 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeImmutableStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, result.Value2)", span="118-118"];
m14_16 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeImmutableStruct()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeImmutableStruct()", span="113-113"];
m14_1154 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", span="2218-2218"];
m14_1155 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new object())", span="2220-2220"];
m14_1156 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''{}'', json)", span="2221-2221"];
m14_1157 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", span="2218-2218"];
m14_1636 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClass.OptInClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClass.OptInClass()", span="3159-3159"];
m14_2228 [cluster="Unk.Parse", file="JsonSerializerTest.cs", label="Entry Unk.Parse", span=""];
m14_3343 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterComments()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterComments()", span="6967-6967"];
m14_3344 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterComments()", file="JsonSerializerTest.cs", label="string json = @''[{ ''''MyProperty'''':{''''Key'''':''''Value''''}} /*this is a comment */\r\n// this is also a comment\r\n,{}''", span="6969-6971"];
m14_3345 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterComments()", file="JsonSerializerTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="6973-6973"];
m14_3347 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterComments()", file="JsonSerializerTest.cs", label="var reader = new JsonTextReader(new StringReader(json))", span="6975-6975"];
m14_3346 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterComments()", file="JsonSerializerTest.cs", label="serializer.CheckAdditionalContent = true", span="6974-6974"];
m14_3350 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterComments()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => serializer.Deserialize(reader, typeof(ItemConverterTestClass)),\r\n                ''Additional text found in JSON string after finishing deserializing object. Path '[1]', line 3, position 2.'')", span="6979-6980"];
m14_3348 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterComments()", file="JsonSerializerTest.cs", label="reader.Read()", span="6976-6976"];
m14_3349 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterComments()", file="JsonSerializerTest.cs", label="reader.Read()", span="6977-6977"];
m14_3351 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterComments()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterComments()", span="6967-6967"];
m14_1309 [cluster="System.DateTime.DateTime(long, System.DateTimeKind)", file="JsonSerializerTest.cs", label="Entry System.DateTime.DateTime(long, System.DateTimeKind)", span="0-0"];
m14_2599 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", span="5367-5367"];
m14_2600 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="JsonSerializerTest.cs", label="ChildDataContract cc = new ChildDataContract\r\n            {\r\n                VirtualMember = ''VirtualMember!'',\r\n                NonVirtualMember = ''NonVirtualMember!''\r\n            }", span="5369-5373"];
m14_2601 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="JsonSerializerTest.cs", label="string result = JsonConvert.SerializeObject(cc, Formatting.Indented)", span="5375-5375"];
m14_2602 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''virtualMember'''': ''''VirtualMember!'''',\r\n  ''''nonVirtualMember'''': ''''NonVirtualMember!''''\r\n}'', result)", span="5382-5385"];
m14_2603 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", span="5367-5367"];
m14_2598 [cluster="Newtonsoft.Json.Tests.TestObjects.EnumerableArrayPropertyClass.EnumerableArrayPropertyClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.EnumerableArrayPropertyClass.EnumerableArrayPropertyClass()", span="29-29"];
m14_2778 [cluster="Newtonsoft.Json.JsonWriter.Flush()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.Flush()", span="400-400"];
m14_2675 [cluster="Newtonsoft.Json.Tests.TestObjects.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", span="29-29"];
m14_60 [cluster="Newtonsoft.Json.Tests.TestObjects.MyFactory.InstantiateManiClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.MyFactory.InstantiateManiClass()", span="40-40"];
m14_1708 [cluster="Newtonsoft.Json.Tests.TestObjects.Content.Content()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Content.Content()", span="31-31"];
m14_2050 [cluster="System.TimeSpan.TimeSpan(int, int, int, int, int)", file="JsonSerializerTest.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int, int, int)", span="0-0"];
m14_2212 [cluster="System.Type.GetField(string, System.Reflection.BindingFlags)", file="JsonSerializerTest.cs", label="Entry System.Type.GetField(string, System.Reflection.BindingFlags)", span="0-0"];
m14_3111 [cluster="Newtonsoft.Json.Bson.BsonWriter.WriteValue(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteValue(string)", span="273-273"];
m14_1208 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", span="2296-2296"];
m14_1209 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new ConverableMembers(), Formatting.Indented)", span="2298-2298"];
m14_1210 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="string expected = null", span="2300-2300"];
m14_1212 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(expected, json)", span="2336-2336"];
m14_1213 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="ConverableMembers c = JsonConvert.DeserializeObject<ConverableMembers>(json)", span="2338-2338"];
m14_1211 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="expected = @''{\r\n  ''''String'''': ''''string'''',\r\n  ''''Int32'''': 2147483647,\r\n  ''''UInt32'''': 4294967295,\r\n  ''''Byte'''': 255,\r\n  ''''SByte'''': 127,\r\n  ''''Short'''': 32767,\r\n  ''''UShort'''': 65535,\r\n  ''''Long'''': 9223372036854775807,\r\n  ''''ULong'''': 9223372036854775807,\r\n  ''''Double'''': 1.7976931348623157E+308,\r\n  ''''Float'''': 3.40282347E+38,\r\n  ''''DBNull'''': null,\r\n  ''''Bool'''': true,\r\n  ''''Char'''': ''''\u0000''''\r\n}''", span="2302-2317"];
m14_1214 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''string'', c.String)", span="2339-2339"];
m14_1215 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="Assert.AreEqual(double.MaxValue, c.Double)", span="2340-2340"];
m14_1216 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="Assert.AreEqual(DBNull.Value, c.DBNull)", span="2342-2342"];
m14_1217 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", span="2296-2296"];
m14_2342 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", span="4833-4833"];
m14_2343 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs", label="JsonSerializer serializer1 = new JsonSerializer()", span="4835-4835"];
m14_2344 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs", label="serializer1.Converters.Add(new IsoDateTimeConverter())", span="4836-4836"];
m14_2345 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs", label="serializer1.NullValueHandling = NullValueHandling.Ignore", span="4837-4837"];
m14_2348 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs", label="ByteArrayTestClass[] z = (ByteArrayTestClass[])serializer1.Deserialize(reader, typeof(ByteArrayTestClass[]))", span="4843-4843"];
m14_2346 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs", label="string json = @''[{''''Prop1'''':''''''''},{''''Prop1'''':''''''''}]''", span="4839-4839"];
m14_2347 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="4841-4841"];
m14_2349 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, z.Length)", span="4844-4844"];
m14_2350 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, z[0].Prop1.Length)", span="4845-4845"];
m14_2351 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, z[1].Prop1.Length)", span="4846-4846"];
m14_2352 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", span="4833-4833"];
m14_1679 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", span="3305-3305"];
m14_1680 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''short'''': {\r\n    ''''original'''': ''''http://www.contrast.ie/blog/online&#45;marketing&#45;2009/'''',\r\n    ''''short'''': ''''m2sqc6'''',\r\n    ''''shortened'''': ''''http://short.ie/m2sqc6'''',\r\n    ''''error'''': {\r\n      ''''code'''': 0,\r\n      ''''msg'''': ''''No action taken''''\r\n    }\r\n  }\r\n}''", span="3307-3317"];
m14_1681 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs", label="JObject o = JObject.Parse(json)", span="3319-3319"];
m14_1682 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs", label="Shortie s = JsonConvert.DeserializeObject<Shortie>(o[''short''].ToString())", span="3321-3321"];
m14_1683 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(s)", span="3322-3322"];
m14_1684 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(s.Original, ''http://www.contrast.ie/blog/online&#45;marketing&#45;2009/'')", span="3324-3324"];
m14_1685 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(s.Short, ''m2sqc6'')", span="3325-3325"];
m14_1686 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(s.Shortened, ''http://short.ie/m2sqc6'')", span="3326-3326"];
m14_1687 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", span="3305-3305"];
m14_342 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", span="756-756"];
m14_343 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonSerializerTest.cs", label="FaqItemProxy c = new FaqItemProxy()", span="758-758"];
m14_344 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonSerializerTest.cs", label="c.FaqId = 1", span="759-759"];
m14_345 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonSerializerTest.cs", label="c.Sections.Add(new FaqSection())", span="760-760"];
m14_346 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonSerializerTest.cs", label="c.IsProxy = true", span="761-761"];
m14_347 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="763-763"];
m14_348 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''IsProxy'''': true,\r\n  ''''FaqId'''': 1,\r\n  ''''Name'''': null,\r\n  ''''IsDeleted'''': false,\r\n  ''''FullSectionsProp'''': [\r\n    {}\r\n  ]\r\n}'', json)", span="765-773"];
m14_349 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonSerializerTest.cs", label="FaqItemProxy c2 = JsonConvert.DeserializeObject<FaqItemProxy>(json)", span="775-775"];
m14_350 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, c2.FaqId)", span="777-777"];
m14_351 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, c2.Sections.Count)", span="778-778"];
m14_352 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", span="756-756"];
m14_2807 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", span="5825-5825"];
m14_2808 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs", label="CultureInfo initialCulture = Thread.CurrentThread.CurrentCulture", span="5827-5827"];
m14_2809 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs", label="CultureInfo testCulture = CultureInfo.CreateSpecificCulture(''nb-NO'')", span="5831-5831"];
m14_2810 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs", label="Thread.CurrentThread.CurrentCulture = testCulture", span="5833-5833"];
m14_2811 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs", label="Thread.CurrentThread.CurrentUICulture = testCulture", span="5834-5834"];
m14_2812 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs", label="string json = @''{ 'Quantity': '1.5', 'OptionalQuantity': '2.2' }''", span="5836-5836"];
m14_2813 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs", label="DecimalTestClass c = JsonConvert.DeserializeObject<DecimalTestClass>(json)", span="5838-5838"];
m14_2814 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1.5m, c.Quantity)", span="5840-5840"];
m14_2815 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2.2d, c.OptionalQuantity)", span="5841-5841"];
m14_2816 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", span="5825-5825"];
m14_1526 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", span="2929-2929"];
m14_1527 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="GenericListAndDictionaryInterfaceProperties o = new GenericListAndDictionaryInterfaceProperties()", span="2931-2931"];
m14_1528 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="o.IDictionaryProperty = new Dictionary<string, int>\r\n            {\r\n                { ''one'', 1 },\r\n                { ''two'', 2 },\r\n                { ''three'', 3 }\r\n            }", span="2932-2937"];
m14_1529 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="o.IListProperty = new List<int>\r\n            {\r\n                1, 2, 3\r\n            }", span="2938-2941"];
m14_1530 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="o.IEnumerableProperty = new List<int>\r\n            {\r\n                4, 5, 6\r\n            }", span="2942-2945"];
m14_1531 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="2947-2947"];
m14_1535 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="CollectionAssert.AreEqual(o.IListProperty.ToArray(), deserializedObject.IListProperty.ToArray())", span="2970-2970"];
m14_1536 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="CollectionAssert.AreEqual(o.IEnumerableProperty.ToArray(), deserializedObject.IEnumerableProperty.ToArray())", span="2971-2971"];
m14_1537 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="CollectionAssert.AreEqual(o.IDictionaryProperty.ToArray(), deserializedObject.IDictionaryProperty.ToArray())", span="2972-2972"];
m14_1532 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''IEnumerableProperty'''': [\r\n    4,\r\n    5,\r\n    6\r\n  ],\r\n  ''''IListProperty'''': [\r\n    1,\r\n    2,\r\n    3\r\n  ],\r\n  ''''IDictionaryProperty'''': {\r\n    ''''one'''': 1,\r\n    ''''two'''': 2,\r\n    ''''three'''': 3\r\n  }\r\n}'', json)", span="2949-2965"];
m14_1533 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="GenericListAndDictionaryInterfaceProperties deserializedObject = JsonConvert.DeserializeObject<GenericListAndDictionaryInterfaceProperties>(json)", span="2967-2967"];
m14_1534 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(deserializedObject)", span="2968-2968"];
m14_1538 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", span="2929-2929"];
m14_2746 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", span="5699-5699"];
m14_2747 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonSerializerTest.cs", label="string input = ''http://test.com/%22foo+bar%22''", span="5701-5701"];
m14_2748 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonSerializerTest.cs", label="Uri uri = new Uri(input)", span="5702-5702"];
m14_2749 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(uri)", span="5703-5703"];
m14_2751 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonSerializerTest.cs", label="Assert.AreEqual(uri, output)", span="5706-5706"];
m14_2750 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonSerializerTest.cs", label="Uri output = JsonConvert.DeserializeObject<Uri>(json)", span="5704-5704"];
m14_2752 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", span="5699-5699"];
m14_3254 [cluster="Newtonsoft.Json.Tests.TestObjects.Events.Event1.Event1()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Events.Event1.Event1()", span="31-31"];
m14_3963 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.AttachmentReadConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.AttachmentReadConverter()", span="8496-8496"];
m14_3775 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt64(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt64(System.IFormatProvider)", span="8011-8011"];
m14_3776 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt64(System.IFormatProvider)", color=red, community=0, file="JsonSerializerTest.cs", label="3: return (long)Value;", span="8013-8013"];
m14_3777 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt64(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt64(System.IFormatProvider)", span="8011-8011"];
m14_1613 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", span="3126-3126"];
m14_1614 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="string json = @''{\r\n    ''''request'''': ''''ux.settings.update'''',\r\n    ''''sid'''': ''''14c561bd-32a8-457e-b4e5-4bba0832897f'''',\r\n    ''''uid'''': ''''30c39065-0f31-de11-9442-001e3786a8ec'''',\r\n    ''''fidOrder'''': [\r\n        ''''id'''',\r\n        ''''andytest_name'''',\r\n        ''''andytest_age'''',\r\n        ''''andytest_address'''',\r\n        ''''andytest_phone'''',\r\n        ''''date'''',\r\n        ''''title'''',\r\n        ''''titleId''''\r\n    ],\r\n    ''''entityName'''': ''''Andy Test'''',\r\n    ''''setting'''': ''''entity.field.order''''\r\n}''", span="3128-3144"];
m14_1615 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="RequestOnly r = JsonConvert.DeserializeObject<RequestOnly>(json)", span="3146-3146"];
m14_1617 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="NonRequest n = JsonConvert.DeserializeObject<NonRequest>(json)", span="3149-3149"];
m14_1616 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''ux.settings.update'', r.Request)", span="3147-3147"];
m14_1618 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new Guid(''14c561bd-32a8-457e-b4e5-4bba0832897f''), n.Sid)", span="3150-3150"];
m14_1619 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new Guid(''30c39065-0f31-de11-9442-001e3786a8ec''), n.Uid)", span="3151-3151"];
m14_1620 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(8, n.FidOrder.Count)", span="3152-3152"];
m14_1621 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''id'', n.FidOrder[0])", span="3153-3153"];
m14_1622 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''titleId'', n.FidOrder[n.FidOrder.Count - 1])", span="3154-3154"];
m14_1623 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", span="3126-3126"];
m14_3633 [cluster="System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Type)", file="JsonSerializerTest.cs", label="Entry System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Type)", span="0-0"];
m14_4016 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParametrizedConstructor_IncompleteJson()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParametrizedConstructor_IncompleteJson()", span="8557-8557"];
m14_4017 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParametrizedConstructor_IncompleteJson()", file="JsonSerializerTest.cs", label="string s = @''{''''text'''':''''s'''',''''cursorPosition'''':189,''''dataSource'''':''''json_northwind'''',''", span="8559-8559"];
m14_4018 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParametrizedConstructor_IncompleteJson()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<CompletionDataRequest>(s), ''Unexpected end when deserializing object. Path 'dataSource', line 1, position 63.'')", span="8561-8561"];
m14_4019 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParametrizedConstructor_IncompleteJson()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParametrizedConstructor_IncompleteJson()", span="8557-8557"];
m14_2493 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", span="5145-5145"];
m14_2494 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="NullableStructPropertyClass nullableStructPropertyClass = new NullableStructPropertyClass()\r\n            {\r\n                Foo1 = new StructISerializable() { Name = ''foo 1'' },\r\n                Foo2 = new StructISerializable() { Name = ''foo 2'' }\r\n            }", span="5147-5151"];
m14_2495 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="NullableStructPropertyClass barWithNull = new NullableStructPropertyClass()\r\n            {\r\n                Foo1 = new StructISerializable() { Name = ''foo 1'' },\r\n                Foo2 = null\r\n            }", span="5152-5156"];
m14_2496 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="string s = JsonConvert.SerializeObject(nullableStructPropertyClass)", span="5159-5159"];
m14_2500 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="s = JsonConvert.SerializeObject(barWithNull)", span="5165-5165"];
m14_2497 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="NullableStructPropertyClass deserialized = deserialize(s)", span="5160-5160"];
m14_2498 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(deserialized.Foo1.Name, ''foo 1'')", span="5161-5161"];
m14_2499 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(deserialized.Foo2.Value.Name, ''foo 2'')", span="5162-5162"];
m14_2501 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="deserialized = deserialize(s)", span="5166-5166"];
m14_2502 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(deserialized.Foo1.Name, ''foo 1'')", span="5167-5167"];
m14_2503 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(deserialized.Foo2, null)", span="5168-5168"];
m14_2504 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", span="5145-5145"];
m14_1436 [cluster="Newtonsoft.Json.Tests.TestObjects.TypeClass.TypeClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.TypeClass.TypeClass()", span="29-29"];
m14_3610 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", span="7672-7672"];
m14_3611 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(\r\n                new Dictionary<Size, Size> { { new Size(1, 2), new Size(3, 4) } }\r\n            )", span="7674-7676"];
m14_3612 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''1, 2'''':''''3, 4''''}'', json)", span="7678-7678"];
m14_3613 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonSerializerTest.cs", label="Dictionary<Size, Size> d = JsonConvert.DeserializeObject<Dictionary<Size, Size>>(json)", span="7680-7680"];
m14_3614 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new Size(1, 2), d.Keys.First())", span="7682-7682"];
m14_3615 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new Size(3, 4), d.Values.First())", span="7683-7683"];
m14_3616 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", span="7672-7672"];
m14_1417 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", span="2677-2677"];
m14_1418 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonSerializerTest.cs", label="string json = @''{''''Height'''':1}''", span="2679-2679"];
m14_1419 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonSerializerTest.cs", label="DoubleClass c = JsonConvert.DeserializeObject<DoubleClass>(json)", span="2681-2681"];
m14_1420 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, c.Height)", span="2682-2682"];
m14_1421 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", span="2677-2677"];
m14_3293 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustMultipleComments()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustMultipleComments()", span="6849-6849"];
m14_3294 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustMultipleComments()", file="JsonSerializerTest.cs", label="string json = @''{one:1} // This is just a comment\r\n/* This is just a comment\r\nover multiple\r\nlines.*/\r\n\r\n// This is just another comment.''", span="6851-6856"];
m14_3295 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustMultipleComments()", file="JsonSerializerTest.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings {CheckAdditionalContent = true}", span="6858-6858"];
m14_3297 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustMultipleComments()", file="JsonSerializerTest.cs", label="IDictionary<string, int> o = s.Deserialize<Dictionary<string, int>>(new JsonTextReader(new StringReader(json)))", span="6860-6860"];
m14_3296 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustMultipleComments()", file="JsonSerializerTest.cs", label="JsonSerializer s = JsonSerializer.Create(settings)", span="6859-6859"];
m14_3298 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustMultipleComments()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(o)", span="6862-6862"];
m14_3299 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustMultipleComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, o[''one''])", span="6863-6863"];
m14_3300 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustMultipleComments()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustMultipleComments()", span="6849-6849"];
m14_490 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string)", span="667-667"];
m14_491 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m14_3202 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", span="6619-6619"];
m14_3203 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="JsonSerializerTest.cs", label="IDictionary<DateTime, int> dic1 = new Dictionary<DateTime, int>\r\n            {\r\n                { new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc), 1 },\r\n                { new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc), 2 }\r\n            }", span="6621-6625"];
m14_3204 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateTimeZoneHandling = DateTimeZoneHandling.Local\r\n            })", span="6627-6630"];
m14_3205 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="JsonSerializerTest.cs", label="JObject o = JObject.Parse(json)", span="6632-6632"];
m14_3208 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="JsonSerializerTest.cs", label="IDictionary<DateTime, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTime, int>>(json, new JsonSerializerSettings\r\n            {\r\n                DateTimeZoneHandling = DateTimeZoneHandling.Utc\r\n            })", span="6636-6639"];
m14_3206 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="JsonSerializerTest.cs", label="Assert.IsFalse(o.Properties().ElementAt(0).Name.Contains(''Z''))", span="6633-6633"];
m14_3207 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="JsonSerializerTest.cs", label="Assert.IsFalse(o.Properties().ElementAt(1).Name.Contains(''Z''))", span="6634-6634"];
m14_3209 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, dic2.Count)", span="6641-6641"];
m14_3210 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, dic2[new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="6642-6642"];
m14_3211 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, dic2[new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="6643-6643"];
m14_3212 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", span="6619-6619"];
m14_3419 [cluster="Unk.doStuff", file="JsonSerializerTest.cs", label="Entry Unk.doStuff", span=""];
m14_2520 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", span="5201-5201"];
m14_2521 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="JsonSerializerTest.cs", label="var data = new DecimalTest(decimal.MinValue)", span="5203-5203"];
m14_2522 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="JsonSerializerTest.cs", label="var json = JsonConvert.SerializeObject(data)", span="5204-5204"];
m14_2523 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="JsonSerializerTest.cs", label="var obj = JsonConvert.DeserializeObject<DecimalTest>(json, new JsonSerializerSettings { MetadataPropertyHandling = MetadataPropertyHandling.Default })", span="5205-5205"];
m14_2524 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="JsonSerializerTest.cs", label="Assert.AreEqual(decimal.MinValue, obj.Value)", span="5207-5207"];
m14_2525 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", span="5201-5201"];
m14_26 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", span="143-143"];
m14_27 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="JsonSerializerTest.cs", label="var s = System.IO.File.OpenRead(ResolvePath(''large.json''))", span="145-145"];
m14_28 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(s))", span="149-149"];
m14_37 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="JsonSerializerTest.cs", label="Assert.IsTrue(s.Position > 0)", span="167-167"];
m14_38 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="JsonSerializerTest.cs", label="s.Seek(0, SeekOrigin.Begin)", span="169-169"];
m14_39 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, s.Position)", span="171-171"];
m14_29 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="JsonSerializerTest.cs", label="reader.SupportMultipleContent = true", span="151-151"];
m14_30 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="JsonSerializerTest.cs", label="reader.CloseInput = false", span="152-152"];
m14_31 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="JsonSerializerTest.cs", label="reader.Read()", span="155-155"];
m14_34 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="JsonSerializerTest.cs", label="ser.Deserialize<IList<ErroringClass>>(reader)", span="160-160"];
m14_32 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="JsonSerializerTest.cs", label="var ser = new JsonSerializer()", span="157-157"];
m14_33 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="JsonSerializerTest.cs", label="ser.CheckAdditionalContent = false", span="158-158"];
m14_35 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="JsonSerializerTest.cs", label="Assert.Fail()", span="163-163"];
m14_36 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="JsonSerializerTest.cs", label=Exception, span="165-165"];
m14_40 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", span="143-143"];
m14_2244 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", span="4656-4656"];
m14_2245 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonSerializerTest.cs", label="ClientMap source = new ClientMap()\r\n            {\r\n                position = new Pos() { X = 100, Y = 200 },\r\n                center = new PosDouble() { X = 251.6, Y = 361.3 }\r\n            }", span="4658-4662"];
m14_2246 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(source, new PosConverter(), new PosDoubleConverter())", span="4664-4664"];
m14_2247 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''{\''position\'':new Pos(100,200),\''center\'':new PosD(251.6,361.3)}'', json)", span="4665-4665"];
m14_2248 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", span="4656-4656"];
m14_3942 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", span="8372-8372"];
m14_3943 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''DerivedProperty'''': ''''derived'''',\r\n  ''''BaseProperty'''': ''''base''''\r\n}''", span="8374-8377"];
m14_3944 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="JsonSerializerTest.cs", label="var d = JsonConvert.DeserializeObject<DerivedWithPrivate>(json)", span="8379-8379"];
m14_3945 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''base'', d.BaseProperty)", span="8381-8381"];
m14_3946 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''derived'', d.DerivedProperty)", span="8382-8382"];
m14_3947 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", span="8372-8372"];
m14_3664 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", span="7772-7772"];
m14_3665 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", color=red, community=0, file="JsonSerializerTest.cs", label="0: destinationType == null", span="7774-7774"];
m14_3667 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", color=red, community=0, file="JsonSerializerTest.cs", label="0: value is TypeConverterSize", span="7778-7778"];
m14_3668 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", color=red, community=0, file="JsonSerializerTest.cs", label="0: destinationType == typeof(string)", span="7780-7780"];
m14_3669 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", color=red, community=0, file="JsonSerializerTest.cs", label="0: TypeConverterSize size = (TypeConverterSize)value", span="7782-7782"];
m14_3670 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", color=red, community=0, file="JsonSerializerTest.cs", label="0: culture == null", span="7783-7783"];
m14_3675 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", color=red, community=0, file="JsonSerializerTest.cs", label="0: strArray[num++] = converter.ConvertToString(context, culture, size.Width)", span="7790-7790"];
m14_3676 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", color=red, community=0, file="JsonSerializerTest.cs", label="0: strArray[num++] = converter.ConvertToString(context, culture, size.Height)", span="7791-7791"];
m14_3678 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", color=red, community=0, file="JsonSerializerTest.cs", label="0: return base.ConvertTo(context, culture, value, destinationType);", span="7795-7795"];
m14_3666 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", color=red, community=0, file="JsonSerializerTest.cs", label="0: throw new ArgumentNullException(''destinationType'');", span="7776-7776"];
m14_3671 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", color=red, community=0, file="JsonSerializerTest.cs", label="0: culture = CultureInfo.CurrentCulture", span="7785-7785"];
m14_3672 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", color=red, community=0, file="JsonSerializerTest.cs", label="0: TypeConverter converter = TypeDescriptor.GetConverter(typeof(int))", span="7787-7787"];
m14_3673 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", color=red, community=0, file="JsonSerializerTest.cs", label="0: string[] strArray = new string[2]", span="7788-7788"];
m14_3674 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", color=red, community=0, file="JsonSerializerTest.cs", label="0: int num = 0", span="7789-7789"];
m14_3677 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", color=red, community=0, file="JsonSerializerTest.cs", label="0: return string.Join('', '', strArray);", span="7792-7792"];
m14_3679 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", span="7772-7772"];
m14_2060 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JsonSerializerTest.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m14_2730 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", span="5680-5680"];
m14_2731 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs", label="object o = new { p = 1 }", span="5683-5683"];
m14_2732 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs", label="var json = JObject.FromObject(o)", span="5685-5685"];
m14_2733 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs", label="var sw = new StringWriter()", span="5687-5687"];
m14_2735 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs", label="jw.WriteToken(json.CreateReader())", span="5690-5690"];
m14_2734 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs", label="var jw = new JsonTextWriter(sw)", span="5688-5688"];
m14_2737 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs", label="string result = sw.ToString()", span="5693-5693"];
m14_2736 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs", label="jw.Flush()", span="5691-5691"];
m14_2738 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''p'''':1}'', result)", span="5694-5694"];
m14_2739 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", span="5680-5680"];
m14_3073 [cluster="Unk.ToKnownColor", file="JsonSerializerTest.cs", label="Entry Unk.ToKnownColor", span=""];
m14_2703 [cluster="Newtonsoft.Json.Tests.TestObjects.ClassWithException.ClassWithException()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ClassWithException.ClassWithException()", span="34-34"];
m14_71 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m14_3962 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.MailAddressReadConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.MailAddressReadConverter()", span="8462-8462"];
m14_2806 [cluster="Newtonsoft.Json.Tests.TestObjects.ReflectionContractResolver.ReflectionContractResolver()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ReflectionContractResolver.ReflectionContractResolver()", span="30-30"];
m14_3911 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstantTestClass.ConstantTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstantTestClass.ConstantTestClass()", span="8306-8306"];
m14_3984 [cluster="System.Net.Mail.MailAddress.MailAddress(string)", file="JsonSerializerTest.cs", label="Entry System.Net.Mail.MailAddress.MailAddress(string)", span="0-0"];
m14_2097 [cluster="System.Collections.Generic.ICollection<T>.Remove(T)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.ICollection<T>.Remove(T)", span="0-0"];
m14_2088 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="4220-4220"];
m14_2089 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", color=red, community=0, file="JsonSerializerTest.cs", label="4: dictionary == null", span="4222-4222"];
m14_2091 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", color=red, community=0, file="JsonSerializerTest.cs", label="4: dictionary", span="4227-4227"];
m14_2090 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", color=red, community=0, file="JsonSerializerTest.cs", label="6: return;", span="4224-4224"];
m14_2092 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", color=red, community=0, file="JsonSerializerTest.cs", label="4: this[entry.Key] = entry.Value", span="4229-4229"];
m14_2093 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="4220-4220"];
m14_2408 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", span="4968-4968"];
m14_2409 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new DerivedEvent(), Formatting.Indented)", span="4970-4970"];
m14_2410 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''event'''': ''''derived''''\r\n}'', json)", span="4972-4974"];
m14_2411 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", span="4968-4968"];
m14_1833 [cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", span="822-822"];
m14_1961 [cluster="Newtonsoft.Json.Tests.TestObjects.Organization.PersonPropertyClass.PersonPropertyClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Organization.PersonPropertyClass.PersonPropertyClass()", span="31-31"];
m14_3981 [cluster="Newtonsoft.Json.Linq.JObject.TryGetValue(string, System.StringComparison, out Newtonsoft.Json.Linq.JToken)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.TryGetValue(string, System.StringComparison, out Newtonsoft.Json.Linq.JToken)", span="538-538"];
m14_1173 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", span="2246-2246"];
m14_1174 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="string json = ''{bar:[1,2,3], foo:'hello'}''", span="2248-2248"];
m14_1175 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="ClassWithArray wibble = JsonConvert.DeserializeObject<ClassWithArray>(json)", span="2249-2249"];
m14_1176 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''hello'', wibble.Foo)", span="2250-2250"];
m14_1177 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, wibble.Bar.Count)", span="2252-2252"];
m14_1178 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(int.MaxValue, wibble.Bar[0])", span="2253-2253"];
m14_1179 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, wibble.Bar[1])", span="2254-2254"];
m14_1180 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, wibble.Bar[2])", span="2255-2255"];
m14_1181 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, wibble.Bar[3])", span="2256-2256"];
m14_1182 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", span="2246-2246"];
m14_1021 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", span="1907-1907"];
m14_1022 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new JsonIgnoreAttributeTestClass())", span="1909-1909"];
m14_1023 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Field'''':0,''''Property'''':21}'', json)", span="1911-1911"];
m14_1024 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs", label="JsonIgnoreAttributeTestClass c = JsonConvert.DeserializeObject<JsonIgnoreAttributeTestClass>(@''{''''Field'''':99,''''Property'''':-1,''''IgnoredField'''':-1,''''IgnoredObject'''':[1,2,3,4,5]}'')", span="1913-1913"];
m14_1025 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, c.IgnoredField)", span="1915-1915"];
m14_1026 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(99, c.Field)", span="1916-1916"];
m14_1027 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", span="1907-1907"];
m14_289 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", span="551-551"];
m14_290 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonSerializerTest.cs", label="Version v = new Version(1, 2, 3, 4)", span="553-553"];
m14_291 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonSerializerTest.cs", label="IgnoredPropertiesTestClass c1 = new IgnoredPropertiesTestClass\r\n            {\r\n                IgnoredProperty = v,\r\n                IgnoredList = new List<Version>\r\n                {\r\n                    v\r\n                },\r\n                IgnoredDictionary = new Dictionary<string, Version>\r\n                {\r\n                    { ''Value'', v }\r\n                },\r\n                Name = ''Name!''\r\n            }", span="555-567"];
m14_292 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new IgnoredPropertiesContractResolver()\r\n            })", span="569-572"];
m14_293 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''Name'''': ''''Name!''''\r\n}'', json)", span="574-576"];
m14_294 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonSerializerTest.cs", label="string deserializeJson = @''{\r\n  ''''IgnoredList'''': [\r\n    {\r\n      ''''Major'''': 1,\r\n      ''''Minor'''': 2,\r\n      ''''Build'''': 3,\r\n      ''''Revision'''': 4,\r\n      ''''MajorRevision'''': 0,\r\n      ''''MinorRevision'''': 4\r\n    }\r\n  ],\r\n  ''''IgnoredDictionary'''': {\r\n    ''''Value'''': {\r\n      ''''Major'''': 1,\r\n      ''''Minor'''': 2,\r\n      ''''Build'''': 3,\r\n      ''''Revision'''': 4,\r\n      ''''MajorRevision'''': 0,\r\n      ''''MinorRevision'''': 4\r\n    }\r\n  },\r\n  ''''Name'''': ''''Name!''''\r\n}''", span="578-600"];
m14_295 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonSerializerTest.cs", label="IgnoredPropertiesTestClass c2 = JsonConvert.DeserializeObject<IgnoredPropertiesTestClass>(deserializeJson, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new IgnoredPropertiesContractResolver()\r\n            })", span="602-605"];
m14_296 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Name!'', c2.Name)", span="607-607"];
m14_297 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", span="551-551"];
m14_1696 [cluster="System.Uri.ToString()", file="JsonSerializerTest.cs", label="Entry System.Uri.ToString()", span="0-0"];
m14_2325 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", span="4792-4792"];
m14_2326 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonSerializerTest.cs", label="double?[] d = (double?[])JsonConvert.DeserializeObject(@''[\r\n  2.4,\r\n  4.3,\r\n  null\r\n]'', typeof(double?[]))", span="4794-4798"];
m14_2327 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, d.Length)", span="4800-4800"];
m14_2328 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2.4, d[0])", span="4801-4801"];
m14_2329 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4.3, d[1])", span="4802-4802"];
m14_2330 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, d[2])", span="4803-4803"];
m14_2331 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", span="4792-4792"];
m14_820 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", span="1553-1553"];
m14_821 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs", label="var json = @''{''''foo'''':{''''bar'''':''''value''''},''''foo2'''':{''''bar'''':''''value2''''}}''", span="1555-1555"];
m14_822 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs", label="var deserialized = JsonConvert.DeserializeObject<Foo1<Bar1>>(json)", span="1556-1556"];
m14_823 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(deserialized.foo2)", span="1557-1557"];
m14_824 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value2'', deserialized.foo2.bar)", span="1558-1558"];
m14_825 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(deserialized.foo)", span="1559-1559"];
m14_826 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value'', deserialized.foo.bar)", span="1560-1560"];
m14_827 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", span="1553-1553"];
m14_1081 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", span="2074-2074"];
m14_1082 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs", label="string json = @''[''''vvv\/vvv\tvvv\''''vvv\bvvv\nvvv\rvvv\\vvv\fvvv'''']''", span="2076-2076"];
m14_1083 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs", label="JavaScriptSerializer javaScriptSerializer = new JavaScriptSerializer()", span="2079-2079"];
m14_1084 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs", label="List<string> javaScriptSerializerResult = javaScriptSerializer.Deserialize<List<string>>(json)", span="2080-2080"];
m14_1086 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs", label="List<string> dataContractResult = (List<string>)s.ReadObject(new MemoryStream(Encoding.UTF8.GetBytes(json)))", span="2084-2084"];
m14_1087 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs", label="List<string> jsonNetResult = JsonConvert.DeserializeObject<List<string>>(json)", span="2086-2086"];
m14_1085 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs", label="DataContractJsonSerializer s = new DataContractJsonSerializer(typeof(List<string>))", span="2083-2083"];
m14_1090 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs", label="Assert.AreEqual(javaScriptSerializerResult[0], jsonNetResult[0])", span="2091-2091"];
m14_1089 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dataContractResult[0], jsonNetResult[0])", span="2089-2089"];
m14_1088 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, jsonNetResult.Count)", span="2088-2088"];
m14_1091 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", span="2074-2074"];
m14_1668 [cluster="System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", span="0-0"];
m14_47 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", span="843-843"];
m14_2505 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructPropertyClass.NullableStructPropertyClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructPropertyClass.NullableStructPropertyClass()", span="5124-5124"];
m14_3781 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSingle(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSingle(System.IFormatProvider)", span="8021-8021"];
m14_3782 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSingle(System.IFormatProvider)", color=red, community=0, file="JsonSerializerTest.cs", label="0: throw new InvalidCastException();", span="8023-8023"];
m14_3783 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSingle(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSingle(System.IFormatProvider)", span="8021-8021"];
m14_4051 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableIntEmptyValue()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableIntEmptyValue()", span="8619-8619"];
m14_4052 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableIntEmptyValue()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                () => JsonConvert.DeserializeObject<EmptyJsonValueTestClass>(''{ A: \''\'', B: , C: 123, D: 1.23, E: 3.45, F: null }''),\r\n                ''Unexpected character encountered while parsing value: ,. Path 'B', line 1, position 13.'')", span="8621-8623"];
m14_4053 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableIntEmptyValue()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableIntEmptyValue()", span="8619-8619"];
m14_48 [cluster="Unk.Fail", file="JsonSerializerTest.cs", label="Entry Unk.Fail", span=""];
m14_1056 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", span="2045-2045"];
m14_1057 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.SerializeObject(new BadJsonPropertyClass()); }, @''A member with the name 'pie' already exists on 'Newtonsoft.Json.Tests.TestObjects.BadJsonPropertyClass'. Use the JsonPropertyAttribute to specify another name.'')", span="2047-2047"];
m14_1058 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", span="2045-2045"];
m14_1282 [cluster="Newtonsoft.Json.Tests.TestObjects.ConstructorCaseSensitivityClass.ConstructorCaseSensitivityClass(string, string, string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ConstructorCaseSensitivityClass.ConstructorCaseSensitivityClass(string, string, string)", span="33-33"];
m14_851 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", span="1004-1004"];
m14_1250 [cluster="Newtonsoft.Json.Tests.TestObjects.ClassWithGuid.ClassWithGuid()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ClassWithGuid.ClassWithGuid()", span="29-29"];
m14_4043 [cluster="Newtonsoft.Json.Tests.TestObjects.JsonPropertyConverterContractResolver.JsonPropertyConverterContractResolver()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.JsonPropertyConverterContractResolver.JsonPropertyConverterContractResolver()", span="31-31"];
m14_3076 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="6363-6363"];
m14_3077 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", color=red, community=0, file="JsonSerializerTest.cs", label="0: return Enum.Parse(typeof(Color), reader.Value.ToString());", span="6365-6365"];
m14_3078 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="6363-6363"];
m14_4033 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyConverter()", span="8579-8579"];
m14_4034 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyConverter()", file="JsonSerializerTest.cs", label="DateTime dt = new DateTime(2000, 12, 20, 0, 0, 0, DateTimeKind.Utc)", span="8581-8581"];
m14_4035 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyConverter()", file="JsonSerializerTest.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new JsonPropertyConverterContractResolver(),\r\n                Formatting = Formatting.Indented\r\n            }", span="8583-8587"];
m14_4036 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyConverter()", file="JsonSerializerTest.cs", label="JsonPropertyConverterTestClass c1 = new JsonPropertyConverterTestClass\r\n            {\r\n                NormalDate = dt,\r\n                JavaScriptDate = dt\r\n            }", span="8589-8593"];
m14_4040 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dt, c2.NormalDate)", span="8606-8606"];
m14_4041 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dt, c2.JavaScriptDate)", span="8607-8607"];
m14_4037 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyConverter()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c1, settings)", span="8595-8595"];
m14_4039 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyConverter()", file="JsonSerializerTest.cs", label="JsonPropertyConverterTestClass c2 = JsonConvert.DeserializeObject<JsonPropertyConverterTestClass>(json, settings)", span="8604-8604"];
m14_4038 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyConverter()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''NormalDate'''': ''''2000-12-20T00:00:00Z'''',\r\n  ''''JavaScriptDate'''': new Date(\r\n    977270400000\r\n  )\r\n}'', json)", span="8597-8602"];
m14_4042 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyConverter()", span="8579-8579"];
m14_302 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="766-766"];
m14_874 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", span="1631-1631"];
m14_875 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="BaseWithContract baseWith = new SubWithoutContractVirtualProperties\r\n            {\r\n                JustAProperty = ''JustAProperty!'',\r\n                Virtual = ''Virtual!'',\r\n                VirtualWithDataMember = ''VirtualWithDataMember!'',\r\n                WithDataMember = ''WithDataMember!''\r\n            }", span="1633-1639"];
m14_876 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.JustAProperty = ''JustAProperty2!''", span="1641-1641"];
m14_877 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.Virtual = ''Virtual2!''", span="1642-1642"];
m14_878 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.VirtualWithDataMember = ''VirtualWithDataMember2!''", span="1643-1643"];
m14_879 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.WithDataMember = ''WithDataMember2!''", span="1644-1644"];
m14_880 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(baseWith, Formatting.Indented)", span="1646-1646"];
m14_881 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''VirtualWithDataMemberBase'''': ''''VirtualWithDataMember2!'''',\r\n  ''''VirtualSub'''': ''''Virtual2!'''',\r\n  ''''WithDataMemberBase'''': ''''WithDataMember2!'''',\r\n  ''''JustAProperty'''': ''''JustAProperty2!''''\r\n}'', json)", span="1648-1653"];
m14_882 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", span="1631-1631"];
m14_3912 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObjectWithEvent()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObjectWithEvent()", span="8328-8328"];
m14_3913 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObjectWithEvent()", file="JsonSerializerTest.cs", label="MyObservableObject o = new MyObservableObject\r\n            {\r\n                TestString = ''Test string''\r\n            }", span="8330-8333"];
m14_3914 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObjectWithEvent()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="8335-8335"];
m14_3915 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObjectWithEvent()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''PropertyChanged'''': null,\r\n  ''''TestString'''': ''''Test string''''\r\n}'', json)", span="8336-8339"];
m14_3916 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObjectWithEvent()", file="JsonSerializerTest.cs", label="MyObservableObject o2 = JsonConvert.DeserializeObject<MyObservableObject>(json)", span="8341-8341"];
m14_3917 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObjectWithEvent()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Test string'', o2.TestString)", span="8342-8342"];
m14_3918 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObjectWithEvent()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObjectWithEvent()", span="8328-8328"];
m14_3680 [cluster="System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonSerializerTest.cs", label="Entry System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", span="0-0"];
m14_456 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", span="961-961"];
m14_457 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", file="JsonSerializerTest.cs", label="string json = ''['1.2.3.4']''", span="963-963"];
m14_458 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", file="JsonSerializerTest.cs", label="List<Version> deserialized = JsonConvert.DeserializeObject<List<Version>>(json)", span="964-964"];
m14_459 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, deserialized[0].Major)", span="966-966"];
m14_460 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, deserialized[0].Minor)", span="967-967"];
m14_461 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, deserialized[0].Build)", span="968-968"];
m14_462 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, deserialized[0].Revision)", span="969-969"];
m14_463 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", span="961-961"];
m14_2776 [cluster="Newtonsoft.Json.Tests.TestObjects.TestObject.TestObject(string, byte[])", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.TestObject.TestObject(string, byte[])", span="33-33"];
m14_3891 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", span="8276-8276"];
m14_3892 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs", label="DateTimeOffset dt = new DateTimeOffset(new DateTime(2000, 12, 22))", span="8278-8278"];
m14_3893 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs", label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd''", span="8279-8279"];
m14_3895 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(dt, settings)", span="8285-8285"];
m14_3898 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dt, dt1)", span="8291-8291"];
m14_3903 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dt, (DateTimeOffset)v.Value)", span="8302-8302"];
m14_3894 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString\r\n            }", span="8280-8283"];
m14_3899 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                DateParseHandling = DateParseHandling.DateTimeOffset\r\n            }", span="8293-8297"];
m14_3897 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs", label="DateTimeOffset dt1 = JsonConvert.DeserializeObject<DateTimeOffset>(json, settings)", span="8289-8289"];
m14_3896 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''''''2000-pie-Dec-Friday-22'''''', json)", span="8287-8287"];
m14_3900 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs", label="JValue v = (JValue)JToken.ReadFrom(reader)", span="8298-8298"];
m14_3901 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JTokenType.Date, v.Type)", span="8300-8300"];
m14_3902 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), v.Value.GetType())", span="8301-8301"];
m14_3904 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", span="8276-8276"];
m14_3522 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", span="7383-7383"];
m14_3523 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", color=red, community=0, file="JsonSerializerTest.cs", label="2: this.First = first", span="7386-7386"];
m14_3524 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", color=red, community=0, file="JsonSerializerTest.cs", label="0: this.Second = second", span="7387-7387"];
m14_3525 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", span="7383-7383"];
m14_3992 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="8503-8503"];
m14_3993 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", color=red, community=0, file="JsonSerializerTest.cs", label="0: var info = serializer.Deserialize<AttachmentInfo>(reader)", span="8505-8505"];
m14_3994 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", color=red, community=0, file="JsonSerializerTest.cs", label="2: var attachment = info != null\r\n                    ? new System.Net.Mail.Attachment(new MemoryStream(Convert.FromBase64String(info.ContentBase64)), ''application/octet-stream'')\r\n                    {\r\n                        ContentDisposition = { FileName = info.FileName }\r\n                    }\r\n                    : null", span="8507-8512"];
m14_3995 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", color=red, community=0, file="JsonSerializerTest.cs", label="0: return attachment;", span="8513-8513"];
m14_3996 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="8503-8503"];
m14_2718 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", span="5651-5651"];
m14_2719 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs", label="UriGuidTimeSpanTestClass c1 = new UriGuidTimeSpanTestClass\r\n            {\r\n                Guid = new Guid(''1924129C-F7E0-40F3-9607-9939C531395A''),\r\n                NullableGuid = new Guid(''9E9F3ADF-E017-4F72-91E0-617EBE85967D''),\r\n                TimeSpan = TimeSpan.FromDays(1),\r\n                NullableTimeSpan = TimeSpan.FromHours(1),\r\n                Uri = new Uri(''http://testuri.com'')\r\n            }", span="5653-5660"];
m14_2720 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="5661-5661"];
m14_2723 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c1.Guid, c2.Guid)", span="5672-5672"];
m14_2724 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c1.NullableGuid, c2.NullableGuid)", span="5673-5673"];
m14_2725 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c1.TimeSpan, c2.TimeSpan)", span="5674-5674"];
m14_2726 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c1.NullableTimeSpan, c2.NullableTimeSpan)", span="5675-5675"];
m14_2727 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c1.Uri, c2.Uri)", span="5676-5676"];
m14_2721 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Guid'''': ''''1924129c-f7e0-40f3-9607-9939c531395a'''',\r\n  ''''NullableGuid'''': ''''9e9f3adf-e017-4f72-91e0-617ebe85967d'''',\r\n  ''''TimeSpan'''': ''''1.00:00:00'''',\r\n  ''''NullableTimeSpan'''': ''''01:00:00'''',\r\n  ''''Uri'''': ''''http://testuri.com''''\r\n}'', json)", span="5663-5669"];
m14_2722 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs", label="UriGuidTimeSpanTestClass c2 = JsonConvert.DeserializeObject<UriGuidTimeSpanTestClass>(json)", span="5671-5671"];
m14_2728 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", span="5651-5651"];
m14_2388 [cluster="Newtonsoft.Json.Tests.TestObjects.TimeZoneOffsetObject.TimeZoneOffsetObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.TimeZoneOffsetObject.TimeZoneOffsetObject()", span="33-33"];
m14_243 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", span="485-485"];
m14_244 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="JsonSerializerTest.cs", label="var e1 = JsonConvert.DeserializeObject<EnumA>('''ValueA''')", span="487-487"];
m14_245 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="JsonSerializerTest.cs", label="Assert.AreEqual(EnumA.ValueA, e1)", span="488-488"];
m14_246 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="JsonSerializerTest.cs", label="var e2 = JsonConvert.DeserializeObject<EnumA>('''value_a''', new StringEnumConverter())", span="490-490"];
m14_247 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="JsonSerializerTest.cs", label="Assert.AreEqual(EnumA.ValueA, e2)", span="491-491"];
m14_248 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", span="485-485"];
m14_846 [cluster="int.ToString(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry int.ToString(System.IFormatProvider)", span="0-0"];
m14_2633 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", span="5452-5452"];
m14_2634 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs", label="NonDefaultConstructorWithReadOnlyCollectionProperty c1 = new NonDefaultConstructorWithReadOnlyCollectionProperty(''blah'')", span="5454-5454"];
m14_2635 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs", label="c1.Categories.Add(''one'')", span="5455-5455"];
m14_2636 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs", label="c1.Categories.Add(''two'')", span="5456-5456"];
m14_2637 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="5458-5458"];
m14_2640 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c1.Title, c2.Title)", span="5468-5468"];
m14_2641 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c1.Categories.Count, c2.Categories.Count)", span="5469-5469"];
m14_2638 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Title'''': ''''blah'''',\r\n  ''''Categories'''': [\r\n    ''''one'''',\r\n    ''''two''''\r\n  ]\r\n}'', json)", span="5459-5465"];
m14_2639 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs", label="NonDefaultConstructorWithReadOnlyCollectionProperty c2 = JsonConvert.DeserializeObject<NonDefaultConstructorWithReadOnlyCollectionProperty>(json)", span="5467-5467"];
m14_2642 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''one'', c2.Categories[0])", span="5470-5470"];
m14_2643 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''two'', c2.Categories[1])", span="5471-5471"];
m14_2644 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", span="5452-5452"];
m14_46 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="535-535"];
m14_2705 [cluster="System.Exception.ToString()", file="JsonSerializerTest.cs", label="Entry System.Exception.ToString()", span="0-0"];
m14_301 [cluster="Newtonsoft.Json.Tests.TestObjects.IgnoredPropertiesContractResolver.IgnoredPropertiesContractResolver()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.IgnoredPropertiesContractResolver.IgnoredPropertiesContractResolver()", span="30-30"];
m14_862 [cluster="Newtonsoft.Json.Tests.TestObjects.ChildDataContractWithHidden.ChildDataContractWithHidden()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ChildDataContractWithHidden.ChildDataContractWithHidden()", span="30-30"];
m14_1647 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", span="3225-3225"];
m14_1648 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Dictionary'''': {\r\n    ''''Item'''': 11\r\n  }\r\n}''", span="3227-3232"];
m14_1649 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs", label="DictionaryInterfaceClass c = JsonConvert.DeserializeObject<DictionaryInterfaceClass>(\r\n                json,\r\n                new JsonSerializerSettings { ObjectCreationHandling = ObjectCreationHandling.Replace })", span="3234-3236"];
m14_1650 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Name!'', c.Name)", span="3238-3238"];
m14_1651 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, c.Dictionary.Count)", span="3239-3239"];
m14_1652 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs", label="Assert.AreEqual(11, c.Dictionary[''Item''])", span="3240-3240"];
m14_1653 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", span="3225-3225"];
m14_1743 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", span="3453-3453"];
m14_1744 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs", label="string json = @''{'SetOnlyProperty':[1,2,3,4,5]}''", span="3455-3455"];
m14_1745 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs", label="SetOnlyPropertyClass2 setOnly = JsonConvert.DeserializeObject<SetOnlyPropertyClass2>(json)", span="3457-3457"];
m14_1746 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs", label="JArray a = (JArray)setOnly.GetValue()", span="3458-3458"];
m14_1747 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(5, a.Count)", span="3459-3459"];
m14_1748 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, (int)a[0])", span="3460-3460"];
m14_1749 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(5, (int)a[a.Count - 1])", span="3461-3461"];
m14_1750 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", span="3453-3453"];
m14_2626 [cluster="Newtonsoft.Json.Tests.TestObjects.VirtualOverrideNewChildWithDifferentOverrideObject.VirtualOverrideNewChildWithDifferentOverrideObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.VirtualOverrideNewChildWithDifferentOverrideObject.VirtualOverrideNewChildWithDifferentOverrideObject()", span="27-27"];
m14_3663 [cluster="System.ArgumentException.ArgumentException(string)", file="JsonSerializerTest.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m14_3592 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", span="7569-7569"];
m14_3593 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonSerializerTest.cs", label="PersonReference john = new PersonReference\r\n            {\r\n                Id = new Guid(''0B64FFDF-D155-44AD-9689-58D9ADB137F3''),\r\n                Name = ''John Smith''\r\n            }", span="7571-7575"];
m14_3594 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonSerializerTest.cs", label="PersonReference jane = new PersonReference\r\n            {\r\n                Id = new Guid(''AE3C399C-058D-431D-91B0-A36C266441B9''),\r\n                Name = ''Jane Smith''\r\n            }", span="7577-7581"];
m14_3595 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonSerializerTest.cs", label="john.Spouse = jane", span="7583-7583"];
m14_3596 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonSerializerTest.cs", label="jane.Spouse = john", span="7584-7584"];
m14_3597 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonSerializerTest.cs", label="IList<PersonReference> people = new List<PersonReference>\r\n            {\r\n                john,\r\n                jane\r\n            }", span="7586-7590"];
m14_3598 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(people, new JsonSerializerSettings\r\n            {\r\n#pragma warning disable 618\r\n                ReferenceResolver = new IdReferenceResolver(),\r\n#pragma warning restore 618\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects,\r\n                Formatting = Formatting.Indented\r\n            })", span="7592-7599"];
m14_3599 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''[\r\n  {\r\n    ''''$id'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3'''',\r\n    ''''Name'''': ''''John Smith'''',\r\n    ''''Spouse'''': {\r\n      ''''$id'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9'''',\r\n      ''''Name'''': ''''Jane Smith'''',\r\n      ''''Spouse'''': {\r\n        ''''$ref'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3''''\r\n      }\r\n    }\r\n  },\r\n  {\r\n    ''''$ref'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9''''\r\n  }\r\n]'', json)", span="7601-7616"];
m14_3600 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", span="7569-7569"];
m14_2036 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", span="4089-4089"];
m14_2037 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonSerializerTest.cs", label="var json = ''{ Key: 'abc', Value: 123 }''", span="4091-4091"];
m14_2038 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonSerializerTest.cs", label="var item = JsonConvert.DeserializeObject<KeyValueTestClass>(json)", span="4092-4092"];
m14_2039 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(123L, item.Value)", span="4094-4094"];
m14_2040 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", span="4089-4089"];
m14_3569 [cluster="System.Collections.Generic.HashSet<T>.HashSet(System.Collections.Generic.IEnumerable<T>)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.HashSet<T>.HashSet(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m14_1834 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", span="3596-3596"];
m14_1835 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="JsonSerializerTest.cs", label="string json = @''{}''", span="3598-3598"];
m14_1836 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.PopulateObject(json, new List<Person>()); }, @''Cannot populate JSON object onto type 'System.Collections.Generic.List`1[Newtonsoft.Json.Tests.TestObjects.Organization.Person]'. Path '', line 1, position 2.'')", span="3600-3600"];
m14_1837 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", span="3596-3596"];
m14_3948 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", span="8387-8387"];
m14_3949 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="JsonSerializerTest.cs", label="NullableLongTestClass instance = new NullableLongTestClass\r\n            {\r\n                Value = ulong.MaxValue\r\n            }", span="8389-8392"];
m14_3950 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="JsonSerializerTest.cs", label="string output = JsonConvert.SerializeObject(instance)", span="8393-8393"];
m14_3951 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="JsonSerializerTest.cs", label="NullableLongTestClass result = JsonConvert.DeserializeObject<NullableLongTestClass>(output)", span="8394-8394"];
m14_3952 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="JsonSerializerTest.cs", label="Assert.AreEqual(ulong.MaxValue, result.Value)", span="8396-8396"];
m14_3953 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", span="8387-8387"];
m14_2817 [cluster="System.Globalization.CultureInfo.CreateSpecificCulture(string)", file="JsonSerializerTest.cs", label="Entry System.Globalization.CultureInfo.CreateSpecificCulture(string)", span="0-0"];
m14_72 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.LargeIntegerAsString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.LargeIntegerAsString()", span="222-222"];
m14_73 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.LargeIntegerAsString()", file="JsonSerializerTest.cs", label="var largeBrokenNumber = JsonConvert.DeserializeObject<Foo64>(''{\''Blah\'': 43443333222211111117 }'')", span="224-224"];
m14_74 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.LargeIntegerAsString()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''43443333222211111117'', largeBrokenNumber.Blah)", span="225-225"];
m14_75 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.LargeIntegerAsString()", file="JsonSerializerTest.cs", label="var largeOddWorkingNumber = JsonConvert.DeserializeObject<Foo64>(''{\''Blah\'': 53443333222211111117 }'')", span="227-227"];
m14_76 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.LargeIntegerAsString()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''53443333222211111117'', largeOddWorkingNumber.Blah)", span="228-228"];
m14_77 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.LargeIntegerAsString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.LargeIntegerAsString()", span="222-222"];
m14_3660 [cluster="string.Split(params char[])", file="JsonSerializerTest.cs", label="Entry string.Split(params char[])", span="0-0"];
m14_3444 [cluster="System.DateTimeOffset.ToString(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry System.DateTimeOffset.ToString(System.IFormatProvider)", span="0-0"];
m14_3751 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToBoolean(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToBoolean(System.IFormatProvider)", span="7971-7971"];
m14_3752 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToBoolean(System.IFormatProvider)", color=red, community=0, file="JsonSerializerTest.cs", label="0: throw new InvalidCastException();", span="7973-7973"];
m14_3753 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToBoolean(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToBoolean(System.IFormatProvider)", span="7971-7971"];
m14_2041 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", span="4106-4106"];
m14_2042 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs", label="DataContractJsonSerializerTestClass c = new DataContractJsonSerializerTestClass()\r\n            {\r\n                TimeSpanProperty = new TimeSpan(200, 20, 59, 30, 900),\r\n                GuidProperty = new Guid(''66143115-BE2A-4a59-AF0A-348E1EA15B1E''),\r\n                AnimalProperty = new Human() { Ethnicity = ''European'' }\r\n            }", span="4108-4113"];
m14_2043 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs", label="MemoryStream ms = new MemoryStream()", span="4114-4114"];
m14_2045 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs", label="serializer.WriteObject(ms, c)", span="4118-4118"];
m14_2044 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs", label="DataContractJsonSerializer serializer = new DataContractJsonSerializer(\r\n                typeof(DataContractJsonSerializerTestClass),\r\n                new Type[] { typeof(Human) })", span="4115-4117"];
m14_2046 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs", label="byte[] jsonBytes = ms.ToArray()", span="4120-4120"];
m14_2047 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs", label="string json = Encoding.UTF8.GetString(jsonBytes, 0, jsonBytes.Length)", span="4121-4121"];
m14_2048 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", span="4106-4106"];
m14_3570 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", span="7512-7512"];
m14_3571 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''1234567890.123456''))", span="7514-7514"];
m14_3572 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonSerializerTest.cs", label="var settings = new JsonSerializerSettings()", span="7515-7515"];
m14_3574 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonSerializerTest.cs", label="decimal? d = serialiser.Deserialize<decimal?>(reader)", span="7517-7517"];
m14_3573 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonSerializerTest.cs", label="var serialiser = JsonSerializer.Create(settings)", span="7516-7516"];
m14_3575 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1234567890.123456m, d)", span="7519-7519"];
m14_3576 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", span="7512-7512"];
m14_957 [cluster="System.DateTime.DateTime(int, int, int)", file="JsonSerializerTest.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m14_2690 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedType.DerivedType()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedType.DerivedType()", span="5561-5561"];
m14_996 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", span="1862-1862"];
m14_997 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonSerializerTest.cs", label="string value = @''{''''Name'''':''''Orange'''', ''''Price'''':3.99, ''''ExpiryDate'''':''''01/24/2010 12:00:00''''}''", span="1864-1864"];
m14_998 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonSerializerTest.cs", label="Hashtable p = JsonConvert.DeserializeObject(value, typeof(Hashtable)) as Hashtable", span="1866-1866"];
m14_999 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Orange'', p[''Name''].ToString())", span="1868-1868"];
m14_1000 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", span="1862-1862"];
m14_1915 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", span="3760-3760"];
m14_1916 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonSerializerTest.cs", label="Dictionary<Guid, int> dictionary = new Dictionary<Guid, int>()", span="3762-3762"];
m14_1917 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonSerializerTest.cs", label="dictionary.Add(new Guid(''F60EAEE0-AE47-488E-B330-59527B742D77''), 1)", span="3763-3763"];
m14_1918 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonSerializerTest.cs", label="dictionary.Add(new Guid(''C2594C02-EBA1-426A-AA87-8DD8871350B0''), 2)", span="3764-3764"];
m14_1919 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(dictionary, Formatting.Indented)", span="3766-3766"];
m14_1920 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''f60eaee0-ae47-488e-b330-59527b742d77'''': 1,\r\n  ''''c2594c02-eba1-426a-aa87-8dd8871350b0'''': 2\r\n}'', json)", span="3767-3770"];
m14_1921 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", span="3760-3760"];
m14_2440 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", span="5025-5025"];
m14_2441 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="JsonSerializerTest.cs", label="decimal? d = JsonConvert.DeserializeObject<decimal?>(''123456789876543.21'')", span="5027-5027"];
m14_2442 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="JsonSerializerTest.cs", label="Assert.AreEqual(123456789876543.21m, d)", span="5028-5028"];
m14_2443 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", span="5025-5025"];
m14_3988 [cluster="System.NotImplementedException.NotImplementedException()", file="JsonSerializerTest.cs", label="Entry System.NotImplementedException.NotImplementedException()", span="0-0"];
m14_3855 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", span="8173-8173"];
m14_3856 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonSerializerTest.cs", label="DateTime dt = new DateTime(2000, 12, 22)", span="8175-8175"];
m14_3857 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonSerializerTest.cs", label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd''", span="8176-8176"];
m14_3859 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new Dictionary<DateTime, string>\r\n            {\r\n                { dt, ''123'' }\r\n            }, settings)", span="8183-8186"];
m14_3862 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dt, d.Keys.ElementAt(0))", span="8194-8194"];
m14_3858 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonSerializerTest.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                Formatting = Formatting.Indented\r\n            }", span="8177-8181"];
m14_3861 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonSerializerTest.cs", label="Dictionary<DateTime, string> d = JsonConvert.DeserializeObject<Dictionary<DateTime, string>>(json, settings)", span="8192-8192"];
m14_3860 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''2000-pie-Dec-Friday-22'''': ''''123''''\r\n}'', json)", span="8188-8190"];
m14_3863 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", span="8173-8173"];
m14_2332 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", span="4808-4808"];
m14_2333 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs", label="string jsonText = JsonConvert.SerializeObject(new HashSet<string>()\r\n            {\r\n                ''One'',\r\n                ''2'',\r\n                ''III''\r\n            }, Formatting.Indented)", span="4810-4815"];
m14_2334 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''[\r\n  ''''One'''',\r\n  ''''2'''',\r\n  ''''III''''\r\n]'', jsonText)", span="4817-4821"];
m14_2335 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs", label="HashSet<string> d = JsonConvert.DeserializeObject<HashSet<string>>(jsonText)", span="4823-4823"];
m14_2336 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, d.Count)", span="4825-4825"];
m14_2337 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs", label="Assert.IsTrue(d.Contains(''One''))", span="4826-4826"];
m14_2338 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs", label="Assert.IsTrue(d.Contains(''2''))", span="4827-4827"];
m14_2339 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs", label="Assert.IsTrue(d.Contains(''III''))", span="4828-4828"];
m14_2340 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", span="4808-4808"];
m14_406 [cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", file="JsonSerializerTest.cs", label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", span="0-0"];
m14_1153 [cluster="Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T, Newtonsoft.Json.JsonSerializerSettings)", span="739-739"];
m14_1043 [cluster="Newtonsoft.Json.Linq.JContainer.Children()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JContainer.Children()", span="264-264"];
m14_1688 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", span="3330-3330"];
m14_1689 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs", label="Uri uri = new Uri(''http://codeplex.com'')", span="3332-3332"];
m14_1690 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(uri)", span="3333-3333"];
m14_1691 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''http://codeplex.com/'', uri.ToString())", span="3335-3335"];
m14_1693 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(uri, newUri)", span="3338-3338"];
m14_1692 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs", label="Uri newUri = JsonConvert.DeserializeObject<Uri>(json)", span="3337-3337"];
m14_1694 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", span="3330-3330"];
m14_2254 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", span="4669-4669"];
m14_2255 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs", label="var reference = new Dictionary<string, object>()", span="4673-4673"];
m14_2256 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs", label="reference.Add(''$ref'', ''Persons'')", span="4674-4674"];
m14_2257 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs", label="reference.Add(''$id'', 1)", span="4675-4675"];
m14_2261 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs", label="child.Add(''Father'', reference)", span="4680-4680"];
m14_2258 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs", label="var child = new Dictionary<string, object>()", span="4677-4677"];
m14_2259 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs", label="child.Add(''_id'', 2)", span="4678-4678"];
m14_2260 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs", label="child.Add(''Name'', ''Isabell'')", span="4679-4679"];
m14_2262 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs", label="var json = JsonConvert.SerializeObject(child, Formatting.Indented)", span="4682-4682"];
m14_2263 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Dictionary<string, object>>(json); }, ''Additional content found in JSON reference object. A JSON reference object should only have a $ref property. Path 'Father.$id', line 6, position 10.'')", span="4684-4684"];
m14_2264 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", span="4669-4669"];
m14_3982 [cluster="string.IsNullOrEmpty(string)", file="JsonSerializerTest.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m14_3170 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", span="6527-6527"];
m14_3171 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="JsonSerializerTest.cs", label="PropertyItemConverter c = new PropertyItemConverter\r\n            {\r\n                Data = new[]\r\n                {\r\n                    ''one'',\r\n                    ''two'',\r\n                    ''three''\r\n                }\r\n            }", span="6529-6537"];
m14_3172 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c)", span="6539-6539"];
m14_3173 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Data'''':['''':::ONE:::'''','''':::TWO:::'''','''':::THREE:::'''']}'', json)", span="6541-6541"];
m14_3174 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", span="6527-6527"];
m14_2850 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", span="5908-5908"];
m14_2851 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="JsonSerializerTest.cs", label="string json = @''[\r\n  1,\r\n  2,\r\n  3,\r\n  null\r\n]''", span="5910-5915"];
m14_2852 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                List<int> numbers = JsonConvert.DeserializeObject<List<int>>(json);\r\n            }, ''Error converting value {null} to type 'System.Int32'. Path '[3]', line 5, position 6.'')", span="5917-5920"];
m14_2853 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", span="5908-5908"];
m14_3757 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToChar(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToChar(System.IFormatProvider)", span="7981-7981"];
m14_3758 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToChar(System.IFormatProvider)", color=red, community=0, file="JsonSerializerTest.cs", label="0: throw new InvalidCastException();", span="7983-7983"];
m14_3759 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToChar(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToChar(System.IFormatProvider)", span="7981-7981"];
m14_1506 [cluster="Newtonsoft.Json.Tests.TestObjects.InterfacePropertyTestClass.InterfacePropertyTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.InterfacePropertyTestClass.InterfacePropertyTestClass()", span="46-46"];
m14_762 [cluster="Newtonsoft.Json.Utilities.MathUtils.ApproxEquals(double, double)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Utilities.MathUtils.ApproxEquals(double, double)", span="171-171"];
m14_1416 [cluster="Newtonsoft.Json.Tests.TestObjects.UserNullable.UserNullable()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.UserNullable.UserNullable()", span="29-29"];
m14_3561 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", span="7495-7495"];
m14_3562 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonSerializerTest.cs", label="ISet<string> s1 = new HashSet<string>(new[] { ''1'', ''two'', ''III'' })", span="7497-7497"];
m14_3563 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(s1)", span="7499-7499"];
m14_3565 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonSerializerTest.cs", label="Assert.AreEqual(s1.Count, s2.Count)", span="7503-7503"];
m14_3566 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonSerializerTest.cs", label=s1, span="7504-7504"];
m14_3564 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonSerializerTest.cs", label="ISet<string> s2 = JsonConvert.DeserializeObject<ISet<string>>(json)", span="7501-7501"];
m14_3567 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonSerializerTest.cs", label="Assert.IsTrue(s2.Contains(s))", span="7506-7506"];
m14_3568 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", span="7495-7495"];
m14_427 [cluster="Newtonsoft.Json.Tests.TestObjects.ResponseWithNewGenericProperty<T>.ResponseWithNewGenericProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ResponseWithNewGenericProperty<T>.ResponseWithNewGenericProperty()", span="27-27"];
m14_1113 [cluster="System.TimeSpan.FromHours(double)", file="JsonSerializerTest.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m14_1029 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", span="1920-1920"];
m14_1030 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs", label="string json = @''{\r\n    results:\r\n        [\r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://www.google.com/'''',\r\n                url : ''''http://www.google.com/'''',\r\n                visibleUrl : ''''www.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:zhool8dxBV4J:www.google.com'''',\r\n                title : ''''Google'''',\r\n                titleNoFormatting : ''''Google'''',\r\n                content : ''''Enables users to search the Web, Usenet, and \r\nimages. Features include PageRank,   caching and translation of \r\nresults, and an option to find similar pages.''''\r\n            },\r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://news.google.com/'''',\r\n                url : ''''http://news.google.com/'''',\r\n                visibleUrl : ''''news.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:Va_XShOz_twJ:news.google.com'''',\r\n                title : ''''Google News'''',\r\n                titleNoFormatting : ''''Google News'''',\r\n                content : ''''Aggregated headlines and a search engine of many of the world's news sources.''''\r\n            },\r\n            \r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://groups.google.com/'''',\r\n                url : ''''http://groups.google.com/'''',\r\n                visibleUrl : ''''groups.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:x2uPD3hfkn0J:groups.google.com'''',\r\n                title : ''''Google Groups'''',\r\n                titleNoFormatting : ''''Google Groups'''',\r\n                content : ''''Enables users to search and browse the Usenet \r\narchives which consist of over 700   million messages, and post new \r\ncomments.''''\r\n            },\r\n            \r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://maps.google.com/'''',\r\n                url : ''''http://maps.google.com/'''',\r\n                visibleUrl : ''''maps.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:dkf5u2twBXIJ:maps.google.com'''',\r\n                title : ''''Google Maps'''',\r\n                titleNoFormatting : ''''Google Maps'''',\r\n                content : ''''Provides directions, interactive maps, and \r\nsatellite/aerial imagery of the United   States. Can also search by \r\nkeyword such as type of business.''''\r\n            }\r\n        ],\r\n        \r\n    adResults:\r\n        [\r\n            {\r\n                GsearchResultClass:''''GwebSearch.ad'''',\r\n                title : ''''Gartner Symposium/ITxpo'''',\r\n                content1 : ''''Meet brilliant Gartner IT analysts'''',\r\n                content2 : ''''20-23 May 2007- Barcelona, Spain'''',\r\n                url : \r\n''''http://www.google.com/url?sa=L&ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB&num=1&q=http://www.gartner.com/it/sym/2007/spr8/spr8.jsp%3Fsrc%3D_spain_07_%26WT.srch%3D1&usg=__CxRH06E4Xvm9Muq13S4MgMtnziY='''', \r\n\r\n                impressionUrl : \r\n''''http://www.google.com/uds/css/ad-indicator-on.gif?ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB'''', \r\n\r\n                unescapedUrl : \r\n''''http://www.google.com/url?sa=L&ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB&num=1&q=http://www.gartner.com/it/sym/2007/spr8/spr8.jsp%3Fsrc%3D_spain_07_%26WT.srch%3D1&usg=__CxRH06E4Xvm9Muq13S4MgMtnziY='''', \r\n\r\n                visibleUrl : ''''www.gartner.com''''\r\n            }\r\n        ]\r\n}\r\n''", span="1922-1999"];
m14_1031 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs", label="object o = JsonConvert.DeserializeObject(json)", span="2000-2000"];
m14_1032 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs", label="string s = string.Empty", span="2001-2001"];
m14_1033 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs", label="s += s", span="2002-2002"];
m14_1034 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", span="1920-1920"];
m14_3778 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSByte(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSByte(System.IFormatProvider)", span="8016-8016"];
m14_3779 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSByte(System.IFormatProvider)", color=red, community=0, file="JsonSerializerTest.cs", label="0: throw new InvalidCastException();", span="8018-8018"];
m14_3780 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSByte(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSByte(System.IFormatProvider)", span="8016-8016"];
m14_3681 [cluster="string.Join(string, params string[])", file="JsonSerializerTest.cs", label="Entry string.Join(string, params string[])", span="0-0"];
m14_3074 [cluster="Unk.ToUpper", file="JsonSerializerTest.cs", label="Entry Unk.ToUpper", span=""];
m14_1988 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", span="3966-3966"];
m14_1989 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonSerializerTest.cs", label="JRawValueTestObject deserialized = JsonConvert.DeserializeObject<JRawValueTestObject>(''{value:3}'')", span="3968-3968"];
m14_1990 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''3'', deserialized.Value.ToString())", span="3969-3969"];
m14_1991 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonSerializerTest.cs", label="deserialized = JsonConvert.DeserializeObject<JRawValueTestObject>(''{value:'3'}'')", span="3971-3971"];
m14_1992 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''''''3'''''', deserialized.Value.ToString())", span="3972-3972"];
m14_1993 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", span="3966-3966"];
m14_3546 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", span="7440-7440"];
m14_3547 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonSerializerTest.cs", label="IDictionary<string, object> dates = new Dictionary<string, object>\r\n            {\r\n                { ''DateTime-Unspecified'', new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Unspecified) },\r\n                { ''DateTime-Utc'', new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc) },\r\n                { ''DateTime-Local'', new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Local) },\r\n                { ''DateTimeOffset-Zero'', new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero) },\r\n                { ''DateTimeOffset-Plus1'', new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1)) },\r\n                { ''DateTimeOffset-Plus15'', new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1.5)) }\r\n            }", span="7442-7450"];
m14_3548 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonSerializerTest.cs", label="string expected = JsonConvert.SerializeObject(dates, Formatting.Indented)", span="7452-7452"];
m14_3549 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonSerializerTest.cs", label="string actual = JsonConvert.SerializeObject(dates, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatString = JsonSerializerSettings.DefaultDateFormatString\r\n            })", span="7454-7457"];
m14_3550 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonSerializerTest.cs", label="Assert.AreEqual(expected, actual)", span="7459-7459"];
m14_3551 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", span="7440-7440"];
m14_3184 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", span="6569-6569"];
m14_3185 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs", label="IDictionary<DateTimeOffset?, int> dic1 = new Dictionary<DateTimeOffset?, int>\r\n            {\r\n                { new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero), 1 },\r\n                { new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero), 2 }\r\n            }", span="6571-6575"];
m14_3186 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n            })", span="6577-6580"];
m14_3187 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''\/Date(976623132000+0000)\/'''': 1,\r\n  ''''\/Date(1386850332000+0000)\/'''': 2\r\n}'', json)", span="6582-6585"];
m14_3188 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs", label="IDictionary<DateTimeOffset?, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTimeOffset?, int>>(json)", span="6587-6587"];
m14_3189 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, dic2.Count)", span="6589-6589"];
m14_3190 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, dic2[new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="6590-6590"];
m14_3191 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, dic2[new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="6591-6591"];
m14_3192 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", span="6569-6569"];
m14_3450 [cluster="Newtonsoft.Json.Tests.TestObjects.NullableFloats.NullableFloats()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.NullableFloats.NullableFloats()", span="27-27"];
m14_21 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeAlmostImmutableStruct()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeAlmostImmutableStruct()", span="134-134"];
m14_22 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeAlmostImmutableStruct()", file="JsonSerializerTest.cs", label="var result = JsonConvert.DeserializeObject<AlmostImmutableStruct>(''{ \''Value\'': \''working\'', \''Value2\'': 2 }'')", span="136-136"];
m14_23 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeAlmostImmutableStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, result.Value)", span="138-138"];
m14_24 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeAlmostImmutableStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, result.Value2)", span="139-139"];
m14_25 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeAlmostImmutableStruct()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeAlmostImmutableStruct()", span="134-134"];
m14_2779 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", span="819-819"];
m14_92 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_DateTime()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_DateTime()", span="253-253"];
m14_93 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_DateTime()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                () => JsonConvert.DeserializeObject<IList<bool>>(@''['2000-12-20T10:55:55Z']''),\r\n                ''Could not convert string to boolean: 2000-12-20T10:55:55Z. Path '[0]', line 1, position 23.'')", span="255-257"];
m14_94 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_DateTime()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_DateTime()", span="253-253"];
m14_1008 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", span="1886-1886"];
m14_1009 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs", label="string value = JsonConvert.SerializeObject(new GetOnlyPropertyClass())", span="1888-1888"];
m14_1010 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs", label="GetOnlyPropertyClass c = JsonConvert.DeserializeObject<GetOnlyPropertyClass>(value)", span="1890-1890"];
m14_1011 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c.Field, ''Field'')", span="1892-1892"];
m14_1012 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c.GetOnlyProperty, ''GetOnlyProperty'')", span="1893-1893"];
m14_1013 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", span="1886-1886"];
m14_1142 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", span="2194-2194"];
m14_1143 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs", label="DateTime d = new DateTime(2000, 1, 1)", span="2196-2196"];
m14_1144 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs", label="var anonymous =\r\n                new\r\n                {\r\n                    DateValue = d\r\n                }", span="2198-2202"];
m14_1150 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs", label="Assert.AreEqual(d, anonymous.DateValue)", span="2214-2214"];
m14_1145 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings()", span="2204-2204"];
m14_1147 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(anonymous, settings)", span="2210-2210"];
m14_1149 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs", label="anonymous = JsonConvert.DeserializeAnonymousType(json, anonymous, settings)", span="2213-2213"];
m14_1146 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs", label="settings.Converters.Add(new IsoDateTimeConverter\r\n            {\r\n                DateTimeFormat = ''yyyy''\r\n            })", span="2205-2208"];
m14_1148 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''DateValue'''':''''2000''''}'', json)", span="2211-2211"];
m14_1151 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", span="2194-2194"];
m14_2588 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", span="5333-5333"];
m14_2589 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonSerializerTest.cs", label="string json = @''{A:''''Test''''}''", span="5335-5335"];
m14_2590 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonSerializerTest.cs", label="var withoutParameterisedConstructor = JsonConvert.DeserializeObject<DTOWithoutParameterisedConstructor>(json)", span="5337-5337"];
m14_2591 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonSerializerTest.cs", label="var withParameterisedConstructor = JsonConvert.DeserializeObject<DTOWithParameterisedConstructor>(json)", span="5338-5338"];
m14_2592 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(withoutParameterisedConstructor.B, withParameterisedConstructor.B)", span="5339-5339"];
m14_2593 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", span="5333-5333"];
m14_3083 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", span="6376-6376"];
m14_3084 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs", label="IList<MultipleItemsClass> values = new List<MultipleItemsClass>()", span="6378-6378"];
m14_3085 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''{ ''''name'''': ''''bar'''' }{ ''''name'''': ''''baz'''' }''))", span="6380-6380"];
m14_3091 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs", label="values.Add(foo)", span="6393-6393"];
m14_3092 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, values.Count)", span="6396-6396"];
m14_3093 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''bar'', values[0].Name)", span="6397-6397"];
m14_3094 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''baz'', values[1].Name)", span="6398-6398"];
m14_3086 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs", label="reader.SupportMultipleContent = true", span="6381-6381"];
m14_3088 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs", label="!reader.Read()", span="6385-6385"];
m14_3090 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs", label="MultipleItemsClass foo = serializer.Deserialize<MultipleItemsClass>(reader)", span="6391-6391"];
m14_3087 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs", label=true, span="6383-6383"];
m14_3089 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="6390-6390"];
m14_3095 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", span="6376-6376"];
m14_3418 [cluster="Newtonsoft.Json.Tests.TestObjects.MyTuple<T1>.MyTuple(T1)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.MyTuple<T1>.MyTuple(T1)", span="32-32"];
m14_333 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", span="727-727"];
m14_334 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonSerializerTest.cs", label="FaqItem c = new FaqItem()\r\n            {\r\n                FaqId = 1,\r\n                Sections =\r\n                {\r\n                    new FaqSection()\r\n                }\r\n            }", span="729-736"];
m14_335 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="738-738"];
m14_336 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''FaqId'''': 1,\r\n  ''''Name'''': null,\r\n  ''''IsDeleted'''': false,\r\n  ''''FullSectionsProp'''': [\r\n    {}\r\n  ]\r\n}'', json)", span="740-747"];
m14_337 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonSerializerTest.cs", label="FaqItem c2 = JsonConvert.DeserializeObject<FaqItem>(json)", span="749-749"];
m14_338 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, c2.FaqId)", span="751-751"];
m14_339 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, c2.Sections.Count)", span="752-752"];
m14_340 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", span="727-727"];
m14_1646 [cluster="Newtonsoft.Json.Tests.TestObjects.DataContractPrivateMembers.ToString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.DataContractPrivateMembers.ToString()", span="60-60"];
m14_2253 [cluster="Newtonsoft.Json.Tests.TestObjects.PosDoubleConverter.PosDoubleConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.PosDoubleConverter.PosDoubleConverter()", span="30-30"];
m14_3310 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", span="6884-6884"];
m14_3311 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonSerializerTest.cs", label="string json = @''{ ''''ClassName'''' : ''''System.InvalidOperationException'''',\r\n  ''''Data'''' : null,\r\n  ''''ExceptionMethod'''' : ''''8\nLogin\nAppBiz, Version=4.0.0.0, Culture=neutral, PublicKeyToken=null\nMyApp.LoginBiz\nMyApp.User Login()'''',\r\n  ''''HResult'''' : -2146233079,\r\n  ''''HelpURL'''' : null,\r\n  ''''InnerException'''' : { ''''ClassName'''' : ''''System.Exception'''',\r\n      ''''Data'''' : null,\r\n      ''''ExceptionMethod'''' : null,\r\n      ''''HResult'''' : -2146233088,\r\n      ''''HelpURL'''' : null,\r\n      ''''InnerException'''' : null,\r\n      ''''Message'''' : ''''Inner exception...'''',\r\n      ''''RemoteStackIndex'''' : 0,\r\n      ''''RemoteStackTraceString'''' : null,\r\n      ''''Source'''' : null,\r\n      ''''StackTraceString'''' : null,\r\n      ''''WatsonBuckets'''' : null\r\n    },\r\n  ''''Message'''' : ''''Outter exception...'''',\r\n  ''''RemoteStackIndex'''' : 0,\r\n  ''''RemoteStackTraceString'''' : null,\r\n  ''''Source'''' : ''''AppBiz'''',\r\n  ''''StackTraceString'''' : '''' at MyApp.LoginBiz.Login() in C:\\MyApp\\LoginBiz.cs:line 44\r\n at MyApp.LoginSvc.Login() in C:\\MyApp\\LoginSvc.cs:line 71\r\n at SyncInvokeLogin(Object , Object[] , Object[] )\r\n at System.ServiceModel.Dispatcher.SyncMethodInvoker.Invoke(Object instance, Object[] inputs, Object[]& outputs)\r\n at System.ServiceModel.Dispatcher.DispatchOperationRuntime.InvokeBegin(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage5(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage41(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage4(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage31(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage3(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage2(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage11(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage1(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.MessageRpc.Process(Boolean isOperationContextSet)'''',\r\n  ''''WatsonBuckets'''' : null\r\n}''", span="6886-6910"];
m14_3312 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonSerializerTest.cs", label="InvalidOperationException exception = JsonConvert.DeserializeObject<InvalidOperationException>(json)", span="6912-6912"];
m14_3313 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(exception)", span="6913-6913"];
m14_3314 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonSerializerTest.cs", label="CustomAssert.IsInstanceOfType(typeof(InvalidOperationException), exception)", span="6914-6914"];
m14_3315 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Outter exception...'', exception.Message)", span="6916-6916"];
m14_3316 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", span="6884-6884"];
m14_3382 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m14_437 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", span="925-925"];
m14_438 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonSerializerTest.cs", label="var input = new ResponseWithNewGenericPropertyOverride<int>()\r\n            {\r\n                Message = ''Trying out integer as type parameter'',\r\n                Data = 25,\r\n                Result = ''This should be fine''\r\n            }", span="927-932"];
m14_439 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonSerializerTest.cs", label="var json = JsonConvert.SerializeObject(input)", span="934-934"];
m14_441 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonSerializerTest.cs", label="Assert.AreEqual(input.Data, deserialized.Data)", span="937-937"];
m14_442 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonSerializerTest.cs", label="Assert.AreEqual(input.Message, deserialized.Message)", span="938-938"];
m14_443 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonSerializerTest.cs", label="Assert.AreEqual(input.Result, deserialized.Result)", span="939-939"];
m14_440 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonSerializerTest.cs", label="var deserialized = JsonConvert.DeserializeObject<ResponseWithNewGenericPropertyOverride<int>>(json)", span="935-935"];
m14_444 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", span="925-925"];
m14_1393 [cluster="Newtonsoft.Json.Tests.TestObjects.PersonRaw.PersonRaw()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.PersonRaw.PersonRaw()", span="30-30"];
m14_1974 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", span="3934-3934"];
m14_1975 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs", label="ThisGenericTest<KeyValueId> g = new ThisGenericTest<KeyValueId>()", span="3936-3936"];
m14_1976 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs", label="g.Add(new KeyValueId { Id = 1, Key = ''key1'', Value = ''value1'' })", span="3938-3938"];
m14_1977 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs", label="g.Add(new KeyValueId { Id = 2, Key = ''key2'', Value = ''value2'' })", span="3939-3939"];
m14_1978 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs", label="g.MyProperty = ''some value''", span="3941-3941"];
m14_1979 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs", label="string json = g.ToJson()", span="3943-3943"];
m14_1980 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''MyProperty'''': ''''some value'''',\r\n  ''''TheItems'''': [\r\n    {\r\n      ''''Id'''': 1,\r\n      ''''Key'''': ''''key1'''',\r\n      ''''Value'''': ''''value1''''\r\n    },\r\n    {\r\n      ''''Id'''': 2,\r\n      ''''Key'''': ''''key2'''',\r\n      ''''Value'''': ''''value2''''\r\n    }\r\n  ]\r\n}'', json)", span="3945-3959"];
m14_1981 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs", label="ThisGenericTest<KeyValueId> gen = JsonConvert.DeserializeObject<ThisGenericTest<KeyValueId>>(json)", span="3961-3961"];
m14_1982 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''some value'', gen.MyProperty)", span="3962-3962"];
m14_1983 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", span="3934-3934"];
m14_9 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="524-524"];
m14_2320 [cluster="Newtonsoft.Json.Tests.TestObjects.DictionaryKey.DictionaryKey()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.DictionaryKey.DictionaryKey()", span="27-27"];
m14_3983 [cluster="System.Net.Mail.MailAddress.MailAddress(string, string)", file="JsonSerializerTest.cs", label="Entry System.Net.Mail.MailAddress.MailAddress(string, string)", span="0-0"];
m14_1515 [cluster="Newtonsoft.Json.Tests.TestObjects.Organization.Person.Person()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Organization.Person.Person()", span="34-34"];
m14_1375 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", span="2601-2601"];
m14_1376 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new GenericImpl())", span="2603-2603"];
m14_1377 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Id'''':0}'', json)", span="2604-2604"];
m14_1378 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", span="2601-2601"];
m14_3582 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", span="7548-7548"];
m14_3583 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="JsonSerializerTest.cs", label="BigInteger i = BigInteger.Parse(''123456789999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999990'')", span="7550-7550"];
m14_3584 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new[] { i }, Formatting.Indented)", span="7552-7552"];
m14_3585 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''[\r\n  123456789999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999990\r\n]'', json)", span="7554-7556"];
m14_3586 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", span="7548-7548"];
m14_413 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", span="880-880"];
m14_414 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''IsTransient'''':true}'', JsonConvert.SerializeObject(new ChildClassVirtual { IsTransient = true }))", span="882-882"];
m14_415 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", file="JsonSerializerTest.cs", label="var childClass = JsonConvert.DeserializeObject<ChildClassVirtual>(@''{''''IsTransient'''':true}'')", span="884-884"];
m14_416 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, childClass.IsTransient)", span="885-885"];
m14_417 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", span="880-880"];
m14_1846 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", span="3613-3613"];
m14_1847 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.SerializeObject(new MemoryStream(), new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(PORTABLE || DNXCORE50 || PORTABLE40) || NETSTANDARD1_3\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                });\r\n            }, @''Error getting value from 'ReadTimeout' on 'System.IO.MemoryStream'.'')", span="3615-3626"];
m14_1848 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", span="3613-3613"];
m14_2109 [cluster="System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs", label="Entry System.Collections.IEnumerable.GetEnumerator()", span="0-0"];
m14_1045 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", span="2028-2028"];
m14_1046 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="JsonPropertyClass test = new JsonPropertyClass()", span="2030-2030"];
m14_1047 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="test.Pie = ''Delicious''", span="2031-2031"];
m14_1048 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="test.SweetCakesCount = int.MaxValue", span="2032-2032"];
m14_1049 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="string jsonText = JsonConvert.SerializeObject(test)", span="2034-2034"];
m14_1052 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(test.Pie, test2.Pie)", span="2040-2040"];
m14_1053 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(test.SweetCakesCount, test2.SweetCakesCount)", span="2041-2041"];
m14_1050 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''pie'''':''''Delicious'''',''''pie1'''':''''PieChart!'''',''''sweet_cakes_count'''':2147483647}'', jsonText)", span="2036-2036"];
m14_1051 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="JsonPropertyClass test2 = JsonConvert.DeserializeObject<JsonPropertyClass>(jsonText)", span="2038-2038"];
m14_1054 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", span="2028-2028"];
m14_2999 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", span="6180-6180"];
m14_3000 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="JsonSerializerTest.cs", label="byte[] b = JsonConvert.DeserializeObject<byte[]>('''')", span="6182-6182"];
m14_3001 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="JsonSerializerTest.cs", label="Assert.IsNull(b)", span="6183-6183"];
m14_3002 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", span="6180-6180"];
m14_204 [cluster="Newtonsoft.Json.Tests.TestObjects.DictionaryWithNoNull.DictionaryWithNoNull()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.DictionaryWithNoNull.DictionaryWithNoNull()", span="28-28"];
m14_2621 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", span="5422-5422"];
m14_2622 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonSerializerTest.cs", label="VirtualOverrideNewChildWithDifferentOverrideObject cc = new VirtualOverrideNewChildWithDifferentOverrideObject\r\n            {\r\n                VirtualMember = ''VirtualMember!'',\r\n                NonVirtualMember = ''NonVirtualMember!''\r\n            }", span="5424-5428"];
m14_2623 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonSerializerTest.cs", label="string result = JsonConvert.SerializeObject(cc)", span="5430-5430"];
m14_2624 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''differentVirtualMember'''':''''VirtualMember!'''',''''nonVirtualMember'''':''''NonVirtualMember!''''}'', result)", span="5431-5431"];
m14_2625 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", span="5422-5422"];
m14_2864 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", span="5951-5951"];
m14_2865 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''Integer'''': 1,\r\n  ''''NullableInteger1'''': 2,\r\n  ''''NullableInteger2'''': null\r\n}''", span="5953-5957"];
m14_2866 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", color=red, community=0, file="JsonSerializerTest.cs", label="2: ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<ConvertableIntTestClass>(json), ''Error converting value 1 to type 'Newtonsoft.Json.Tests.ConvertibleInt'. Path 'Integer', line 2, position 14.'')", span="5959-5959"];
m14_2867 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", span="5951-5951"];
m14_1078 [cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="JsonSerializerTest.cs", label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0"];
m14_3727 [cluster="Newtonsoft.Json.Tests.TestObjects.IMyInterface.PrintTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.IMyInterface.PrintTest()", span="35-35"];
m14_2677 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", span="5541-5541"];
m14_2678 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonSerializerTest.cs", label="BusRun r = JsonConvert.DeserializeObject<BusRun>(''{\''Departures\'':[\''\\/Date(1309874148734-0400)\\/\'',\''\\/Date(1309874148739-0400)\\/\'',null],\''WheelchairAccessible\'':true}'')", span="5543-5543"];
m14_2679 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(List<DateTime?>), r.Departures.GetType())", span="5545-5545"];
m14_2680 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, r.Departures.Count())", span="5546-5546"];
m14_2681 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(r.Departures.ElementAt(0))", span="5547-5547"];
m14_2682 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(r.Departures.ElementAt(1))", span="5548-5548"];
m14_2683 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonSerializerTest.cs", label="Assert.IsNull(r.Departures.ElementAt(2))", span="5549-5549"];
m14_2684 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", span="5541-5541"];
m14_1265 [cluster="Newtonsoft.Json.Tests.TestObjects.ClassWithTimeSpan.ClassWithTimeSpan()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ClassWithTimeSpan.ClassWithTimeSpan()", span="29-29"];
m14_4075 [file="JsonSerializerTest.cs", label=c1, span=""];
m14_4076 [file="JsonSerializerTest.cs", label=c1, span=""];
m14_4077 [file="JsonSerializerTest.cs", label="out Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImmutableStructWithConstructorAttribute", span=""];
m14_4078 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem", span=""];
m14_4079 [file="JsonSerializerTest.cs", label=json, span=""];
m14_4080 [file="JsonSerializerTest.cs", label=referenceResolver, span=""];
m14_4081 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest", span=""];
m14_4082 [file="JsonSerializerTest.cs", label=json, span=""];
m14_4083 [file="JsonSerializerTest.cs", label=strFromTest, span=""];
m14_4084 [file="JsonSerializerTest.cs", label=json, span=""];
m14_4085 [file="JsonSerializerTest.cs", label=json, span=""];
m14_4086 [file="JsonSerializerTest.cs", label=json, span=""];
m14_4087 [file="JsonSerializerTest.cs", label=json, span=""];
m14_4088 [file="JsonSerializerTest.cs", label=json, span=""];
m14_4089 [file="JsonSerializerTest.cs", label=json, span=""];
m14_4090 [file="JsonSerializerTest.cs", label=json, span=""];
m14_4091 [file="JsonSerializerTest.cs", label=json, span=""];
m14_4092 [file="JsonSerializerTest.cs", label=json, span=""];
m14_4093 [file="JsonSerializerTest.cs", label=json, span=""];
m14_4094 [file="JsonSerializerTest.cs", label=json, span=""];
m14_4095 [file="JsonSerializerTest.cs", label=json, span=""];
m14_4096 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", span=""];
m14_4097 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>", span=""];
m14_4098 [file="JsonSerializerTest.cs", label=json, span=""];
m14_4099 [file="JsonSerializerTest.cs", label=json, span=""];
m14_4100 [file="JsonSerializerTest.cs", label="out Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable", span=""];
m14_4101 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable", span=""];
m14_4102 [file="JsonSerializerTest.cs", label=json, span=""];
m14_4103 [file="JsonSerializerTest.cs", label=json, span=""];
m14_4104 [file="JsonSerializerTest.cs", label=errors, span=""];
m14_4105 [file="JsonSerializerTest.cs", label=errors, span=""];
m14_4106 [file="JsonSerializerTest.cs", label=errors, span=""];
m14_4107 [file="JsonSerializerTest.cs", label=json, span=""];
m14_4108 [file="JsonSerializerTest.cs", label=s, span=""];
m14_4109 [file="JsonSerializerTest.cs", label=json, span=""];
m14_4110 [file="JsonSerializerTest.cs", label=s, span=""];
m14_4111 [file="JsonSerializerTest.cs", label=serializer, span=""];
m14_4112 [file="JsonSerializerTest.cs", label=reader, span=""];
m14_4113 [file="JsonSerializerTest.cs", label=json, span=""];
m14_4114 [file="JsonSerializerTest.cs", label=json, span=""];
m14_4115 [file="JsonSerializerTest.cs", label="out Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSize", span=""];
m14_4116 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter", span=""];
m14_4117 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId", span=""];
m14_4118 [file="JsonSerializerTest.cs", label=JsonMessage, span=""];
m14_4119 [file="JsonSerializerTest.cs", label=s, span=""];
m15_12 [cluster="XmlDocument.cstr", file="JsonTextWriterAsyncTests.cs", label="Entry XmlDocument.cstr", span=""];
m15_0 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Xml.ConvertXmlToJsonForceArray.Example()", file="JsonTextWriterAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Examples.Xml.ConvertXmlToJsonForceArray.Example()", span="10-10"];
m15_1 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Xml.ConvertXmlToJsonForceArray.Example()", file="JsonTextWriterAsyncTests.cs", label="string xml = @''<person id='1'>\r\n        <name>Alan</name>\r\n        <url>http://www.google.com</url>\r\n        <role>Admin1</role>\r\n      </person>''", span="13-17"];
m15_2 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Xml.ConvertXmlToJsonForceArray.Example()", file="JsonTextWriterAsyncTests.cs", label="XmlDocument doc = new XmlDocument()", span="19-19"];
m15_3 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Xml.ConvertXmlToJsonForceArray.Example()", file="JsonTextWriterAsyncTests.cs", label="doc.LoadXml(xml)", span="20-20"];
m15_4 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Xml.ConvertXmlToJsonForceArray.Example()", file="JsonTextWriterAsyncTests.cs", label="string json = JsonConvert.SerializeXmlNode(doc)", span="22-22"];
m15_5 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Xml.ConvertXmlToJsonForceArray.Example()", file="JsonTextWriterAsyncTests.cs", label="Console.WriteLine(json)", span="24-24"];
m15_6 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Xml.ConvertXmlToJsonForceArray.Example()", file="JsonTextWriterAsyncTests.cs", label="xml = @''<person xmlns:json='http://james.newtonking.com/projects/json' id='1'>\r\n        <name>Alan</name>\r\n        <url>http://www.google.com</url>\r\n        <role json:Array='true'>Admin</role>\r\n      </person>''", span="34-38"];
m15_7 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Xml.ConvertXmlToJsonForceArray.Example()", file="JsonTextWriterAsyncTests.cs", label="doc = new XmlDocument()", span="40-40"];
m15_8 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Xml.ConvertXmlToJsonForceArray.Example()", file="JsonTextWriterAsyncTests.cs", label="doc.LoadXml(xml)", span="41-41"];
m15_9 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Xml.ConvertXmlToJsonForceArray.Example()", file="JsonTextWriterAsyncTests.cs", label="json = JsonConvert.SerializeXmlNode(doc)", span="43-43"];
m15_10 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Xml.ConvertXmlToJsonForceArray.Example()", file="JsonTextWriterAsyncTests.cs", label="Console.WriteLine(json)", span="45-45"];
m15_11 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Xml.ConvertXmlToJsonForceArray.Example()", file="JsonTextWriterAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Examples.Xml.ConvertXmlToJsonForceArray.Example()", span="10-10"];
m15_14 [cluster="Unk.SerializeXmlNode", file="JsonTextWriterAsyncTests.cs", label="Entry Unk.SerializeXmlNode", span=""];
m15_15 [cluster="System.Console.WriteLine(string)", file="JsonTextWriterAsyncTests.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m15_13 [cluster="Unk.LoadXml", file="JsonTextWriterAsyncTests.cs", label="Entry Unk.LoadXml", span=""];
m17_0 [cluster="Newtonsoft.Json.Tests.TestObjects.KVPair<TKey, TValue>.KVPair(TKey, TValue)", file="KVPair.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.KVPair<TKey, TValue>.KVPair(TKey, TValue)", span="32-32"];
m17_1 [cluster="Newtonsoft.Json.Tests.TestObjects.KVPair<TKey, TValue>.KVPair(TKey, TValue)", color=green, community=0, file="KVPair.cs", label="2: Key = k", span="34-34"];
m17_2 [cluster="Newtonsoft.Json.Tests.TestObjects.KVPair<TKey, TValue>.KVPair(TKey, TValue)", color=green, community=0, file="KVPair.cs", label="0: Value = v", span="35-35"];
m17_3 [cluster="Newtonsoft.Json.Tests.TestObjects.KVPair<TKey, TValue>.KVPair(TKey, TValue)", file="KVPair.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.KVPair<TKey, TValue>.KVPair(TKey, TValue)", span="32-32"];
m17_4 [file="KVPair.cs", label="Newtonsoft.Json.Tests.TestObjects.KVPair<TKey, TValue>", span=""];
m18_17 [cluster="Newtonsoft.Json.Linq.JObject.TryGetValue(string, System.StringComparison, out Newtonsoft.Json.Linq.JToken)", file="MailAddressReadConverter.cs", label="Entry Newtonsoft.Json.Linq.JObject.TryGetValue(string, System.StringComparison, out Newtonsoft.Json.Linq.JToken)", span="538-538"];
m18_3 [cluster="Newtonsoft.Json.Tests.TestObjects.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="MailAddressReadConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="38-38"];
m18_4 [cluster="Newtonsoft.Json.Tests.TestObjects.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", color=green, community=0, file="MailAddressReadConverter.cs", label="0: var messageJObject = serializer.Deserialize<JObject>(reader)", span="40-40"];
m18_5 [cluster="Newtonsoft.Json.Tests.TestObjects.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", color=green, community=0, file="MailAddressReadConverter.cs", label="0: messageJObject == null", span="41-41"];
m18_7 [cluster="Newtonsoft.Json.Tests.TestObjects.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", color=green, community=0, file="MailAddressReadConverter.cs", label="0: var address = messageJObject.GetValue(''Address'', StringComparison.OrdinalIgnoreCase).ToObject<string>()", span="46-46"];
m18_10 [cluster="Newtonsoft.Json.Tests.TestObjects.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", color=green, community=0, file="MailAddressReadConverter.cs", label="0: messageJObject.TryGetValue(''DisplayName'', StringComparison.OrdinalIgnoreCase, out displayNameToken)\r\n                && !string.IsNullOrEmpty(displayName = displayNameToken.ToObject<string>())", span="50-51"];
m18_6 [cluster="Newtonsoft.Json.Tests.TestObjects.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", color=green, community=0, file="MailAddressReadConverter.cs", label="0: return null;", span="43-43"];
m18_8 [cluster="Newtonsoft.Json.Tests.TestObjects.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", color=green, community=0, file="MailAddressReadConverter.cs", label="0: JToken displayNameToken", span="48-48"];
m18_11 [cluster="Newtonsoft.Json.Tests.TestObjects.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", color=green, community=0, file="MailAddressReadConverter.cs", label="0: return new System.Net.Mail.MailAddress(address, displayName);", span="53-53"];
m18_12 [cluster="Newtonsoft.Json.Tests.TestObjects.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", color=green, community=0, file="MailAddressReadConverter.cs", label="0: return new System.Net.Mail.MailAddress(address);", span="56-56"];
m18_9 [cluster="Newtonsoft.Json.Tests.TestObjects.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", color=green, community=0, file="MailAddressReadConverter.cs", label="3: string displayName", span="49-49"];
m18_13 [cluster="Newtonsoft.Json.Tests.TestObjects.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="MailAddressReadConverter.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="38-38"];
m18_20 [cluster="System.Net.Mail.MailAddress.MailAddress(string)", file="MailAddressReadConverter.cs", label="Entry System.Net.Mail.MailAddress.MailAddress(string)", span="0-0"];
m18_16 [cluster="Newtonsoft.Json.Linq.JToken.ToObject<T>()", file="MailAddressReadConverter.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToObject<T>()", span="1932-1932"];
m18_15 [cluster="Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", file="MailAddressReadConverter.cs", label="Entry Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", span="500-500"];
m18_19 [cluster="System.Net.Mail.MailAddress.MailAddress(string, string)", file="MailAddressReadConverter.cs", label="Entry System.Net.Mail.MailAddress.MailAddress(string, string)", span="0-0"];
m18_0 [cluster="Newtonsoft.Json.Tests.TestObjects.MailAddressReadConverter.CanConvert(System.Type)", file="MailAddressReadConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.MailAddressReadConverter.CanConvert(System.Type)", span="33-33"];
m18_1 [cluster="Newtonsoft.Json.Tests.TestObjects.MailAddressReadConverter.CanConvert(System.Type)", color=green, community=0, file="MailAddressReadConverter.cs", label="0: return objectType == typeof(System.Net.Mail.MailAddress);", span="35-35"];
m18_2 [cluster="Newtonsoft.Json.Tests.TestObjects.MailAddressReadConverter.CanConvert(System.Type)", file="MailAddressReadConverter.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.MailAddressReadConverter.CanConvert(System.Type)", span="33-33"];
m18_21 [cluster="Newtonsoft.Json.Tests.TestObjects.MailAddressReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="MailAddressReadConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.MailAddressReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="59-59"];
m18_22 [cluster="Newtonsoft.Json.Tests.TestObjects.MailAddressReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", color=green, community=0, file="MailAddressReadConverter.cs", label="0: throw new NotImplementedException();", span="61-61"];
m18_23 [cluster="Newtonsoft.Json.Tests.TestObjects.MailAddressReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="MailAddressReadConverter.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.MailAddressReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="59-59"];
m18_18 [cluster="string.IsNullOrEmpty(string)", file="MailAddressReadConverter.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m18_14 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", file="MailAddressReadConverter.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", span="843-843"];
m18_24 [cluster="System.NotImplementedException.NotImplementedException()", file="MailAddressReadConverter.cs", label="Entry System.NotImplementedException.NotImplementedException()", span="0-0"];
m19_8 [cluster="Unk.WriteValue", file="MetroColorConverter.cs", label="Entry Unk.WriteValue", span=""];
m19_7 [cluster="Unk.ToUpper", file="MetroColorConverter.cs", label="Entry Unk.ToUpper", span=""];
m19_6 [cluster="Unk.ToString", file="MetroColorConverter.cs", label="Entry Unk.ToString", span=""];
m19_13 [cluster="System.Enum.Parse(System.Type, string)", file="MetroColorConverter.cs", label="Entry System.Enum.Parse(System.Type, string)", span="0-0"];
m19_9 [cluster="Newtonsoft.Json.Tests.TestObjects.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="MetroColorConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="43-43"];
m19_10 [cluster="Newtonsoft.Json.Tests.TestObjects.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", color=green, community=0, file="MetroColorConverter.cs", label="3: return Enum.Parse(typeof(Color), reader.Value.ToString());", span="45-45"];
m19_11 [cluster="Newtonsoft.Json.Tests.TestObjects.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="MetroColorConverter.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="43-43"];
m19_14 [cluster="Newtonsoft.Json.Tests.TestObjects.MetroColorConverter.CanConvert(System.Type)", file="MetroColorConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.MetroColorConverter.CanConvert(System.Type)", span="48-48"];
m19_15 [cluster="Newtonsoft.Json.Tests.TestObjects.MetroColorConverter.CanConvert(System.Type)", color=green, community=0, file="MetroColorConverter.cs", label="0: return objectType == typeof(Color);", span="50-50"];
m19_16 [cluster="Newtonsoft.Json.Tests.TestObjects.MetroColorConverter.CanConvert(System.Type)", file="MetroColorConverter.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.MetroColorConverter.CanConvert(System.Type)", span="48-48"];
m19_12 [cluster="object.ToString()", file="MetroColorConverter.cs", label="Entry object.ToString()", span="0-0"];
m19_5 [cluster="Unk.ToKnownColor", file="MetroColorConverter.cs", label="Entry Unk.ToKnownColor", span=""];
m19_0 [cluster="Newtonsoft.Json.Tests.TestObjects.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="MetroColorConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="35-35"];
m19_1 [cluster="Newtonsoft.Json.Tests.TestObjects.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", color=green, community=0, file="MetroColorConverter.cs", label="0: Color color = (Color)value", span="37-37"];
m19_2 [cluster="Newtonsoft.Json.Tests.TestObjects.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", color=green, community=0, file="MetroColorConverter.cs", label="0: Color fixedColor = (color == Color.White || color == Color.Black) ? color : Color.Gray", span="38-38"];
m19_3 [cluster="Newtonsoft.Json.Tests.TestObjects.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", color=green, community=0, file="MetroColorConverter.cs", label="2: writer.WriteValue('':::'' + fixedColor.ToKnownColor().ToString().ToUpper() + '':::'')", span="40-40"];
m19_4 [cluster="Newtonsoft.Json.Tests.TestObjects.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="MetroColorConverter.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="35-35"];
m27_0 [cluster="Newtonsoft.Json.Tests.TestObjects.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", file="Pair.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", span="37-37"];
m27_1 [cluster="Newtonsoft.Json.Tests.TestObjects.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", color=green, community=0, file="Pair.cs", label="2: this.First = first", span="40-40"];
m27_2 [cluster="Newtonsoft.Json.Tests.TestObjects.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", color=green, community=0, file="Pair.cs", label="0: this.Second = second", span="41-41"];
m27_3 [cluster="Newtonsoft.Json.Tests.TestObjects.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", file="Pair.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", span="37-37"];
m28_3 [cluster="Newtonsoft.Json.Tests.TestObjects.Organization.Employee.Employee()", file="PersonConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Organization.Employee.Employee()", span="29-29"];
m28_0 [cluster="Newtonsoft.Json.Tests.TestObjects.PersonConverter.Create(System.Type)", file="PersonConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.PersonConverter.Create(System.Type)", span="38-38"];
m28_1 [cluster="Newtonsoft.Json.Tests.TestObjects.PersonConverter.Create(System.Type)", color=green, community=0, file="PersonConverter.cs", label="3: return new Employee();", span="40-40"];
m28_2 [cluster="Newtonsoft.Json.Tests.TestObjects.PersonConverter.Create(System.Type)", file="PersonConverter.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.PersonConverter.Create(System.Type)", span="38-38"];
m29_0 [cluster="Newtonsoft.Json.Tests.TestObjects.SerializableContractResolver.SerializableContractResolver()", file="SerializableContractResolver.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.SerializableContractResolver.SerializableContractResolver()", span="32-32"];
m29_1 [cluster="Newtonsoft.Json.Tests.TestObjects.SerializableContractResolver.SerializableContractResolver()", color=green, community=0, file="SerializableContractResolver.cs", label="0: IgnoreSerializableAttribute = false", span="34-34"];
m29_2 [cluster="Newtonsoft.Json.Tests.TestObjects.SerializableContractResolver.SerializableContractResolver()", file="SerializableContractResolver.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.SerializableContractResolver.SerializableContractResolver()", span="32-32"];
m31_0 [cluster="Newtonsoft.Json.Tests.TestObjects.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="StructISerializable.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="35-35"];
m31_1 [cluster="Newtonsoft.Json.Tests.TestObjects.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", color=green, community=0, file="StructISerializable.cs", label="0: _name = info.GetString(''Name'')", span="37-37"];
m31_2 [cluster="Newtonsoft.Json.Tests.TestObjects.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="StructISerializable.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="35-35"];
m31_4 [cluster="Newtonsoft.Json.Tests.TestObjects.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="StructISerializable.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="47-47"];
m31_5 [cluster="Newtonsoft.Json.Tests.TestObjects.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", color=green, community=0, file="StructISerializable.cs", label="0: info.AddValue(''Name'', _name)", span="49-49"];
m31_6 [cluster="Newtonsoft.Json.Tests.TestObjects.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="StructISerializable.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="47-47"];
m31_7 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", file="StructISerializable.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", span="0-0"];
m31_3 [cluster="System.Runtime.Serialization.SerializationInfo.GetString(string)", file="StructISerializable.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetString(string)", span="0-0"];
m31_8 [file="StructISerializable.cs", label="out Newtonsoft.Json.Tests.TestObjects.StructISerializable", span=""];
m31_9 [file="StructISerializable.cs", label="Newtonsoft.Json.Tests.TestObjects.StructISerializable", span=""];
m34_8 [cluster="Newtonsoft.Json.Linq.JObject.Properties()", file="TypeConverterSizeConverter.cs", label="Entry Newtonsoft.Json.Linq.JObject.Properties()", span="195-195"];
m34_9 [cluster="System.Console.WriteLine(string)", file="TypeConverterSizeConverter.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m34_0 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.JObjectProperties.Example()", file="TypeConverterSizeConverter.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Examples.Linq.JObjectProperties.Example()", span="10-10"];
m34_1 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.JObjectProperties.Example()", color=green, community=0, file="TypeConverterSizeConverter.cs", label="0: JObject o = new JObject\r\n        {\r\n          { ''name1'', ''value1'' },\r\n          { ''name2'', ''value2''}\r\n        }", span="13-17"];
m34_2 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.JObjectProperties.Example()", color=green, community=0, file="TypeConverterSizeConverter.cs", label="1: o.Properties()", span="19-19"];
m34_4 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.JObjectProperties.Example()", color=green, community=0, file="TypeConverterSizeConverter.cs", label="0: o", span="26-26"];
m34_3 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.JObjectProperties.Example()", color=green, community=0, file="TypeConverterSizeConverter.cs", label="0: Console.WriteLine(property.Name + '' - '' + property.Value)", span="21-21"];
m34_5 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.JObjectProperties.Example()", color=green, community=0, file="TypeConverterSizeConverter.cs", label="2: Console.WriteLine(property.Key + '' - '' + property.Value)", span="28-28"];
m34_6 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.JObjectProperties.Example()", file="TypeConverterSizeConverter.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Examples.Linq.JObjectProperties.Example()", span="10-10"];
m34_7 [cluster="Newtonsoft.Json.Linq.JObject.JObject()", file="TypeConverterSizeConverter.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject()", span="87-87"];
d1 -> d2  [color=green, key=0, style=solid];
d0 -> d1  [color=green, key=0, style=solid];
d2 -> d3  [color=green, key=0, style=solid];
d2 -> d8  [color=green, key=2, style=dotted];
d2 -> d9  [color=green, key=2, style=dotted];
d2 -> d4  [color=green, key=1, label=reader, style=dashed];
d2 -> d5  [color=green, key=1, label=reader, style=dashed];
d2 -> d6  [color=green, key=1, label=reader, style=dashed];
d3 -> d4  [color=green, key=0, style=solid];
d3 -> d7  [color=green, key=0, style=solid];
d3 -> d10  [color=green, key=2, style=dotted];
d4 -> d5  [color=green, key=0, style=solid];
d4 -> d6  [color=green, key=0, style=solid];
d5 -> d3  [color=green, key=0, style=solid];
d5 -> d11  [color=green, key=2, style=dotted];
d6 -> d3  [color=green, key=0, style=solid];
d6 -> d12  [color=green, key=2, style=dotted];
d7 -> d0  [color=blue, key=0, style=bold];
m4_0 -> m4_1  [color=green, key=0, style=solid];
m4_1 -> m4_2  [color=green, key=0, style=solid];
m4_1 -> m4_6  [color=green, key=2, style=dotted];
m4_1 -> m4_7  [color=green, key=2, style=dotted];
m4_2 -> m4_3  [color=green, key=0, style=solid];
m4_2 -> m4_8  [color=green, key=2, style=dotted];
m4_2 -> m4_4  [color=green, key=1, label=file, style=dashed];
m4_3 -> m4_4  [color=green, key=0, style=solid];
m4_3 -> m4_9  [color=green, key=2, style=dotted];
m4_4 -> m4_5  [color=green, key=0, style=solid];
m4_4 -> m4_10  [color=green, key=2, style=dotted];
m4_5 -> m4_0  [color=blue, key=0, style=bold];
m5_0 -> m5_1  [color=green, key=0, style=solid];
m5_1 -> m5_1  [color=green, key=3, label="Field variable int _value", style=bold];
m5_1 -> m5_2  [color=green, key=0, style=solid];
m5_1 -> m5_5  [color=green, key=2, style=dotted];
m5_1 -> m5_6  [color=green, key=2, style=dotted];
m5_2 -> m5_3  [color=green, key=0, style=solid];
m5_2 -> m5_7  [color=green, key=2, style=dotted];
m5_3 -> m5_4  [color=green, key=0, style=solid];
m5_3 -> m5_8  [color=green, key=2, style=dotted];
m5_4 -> m5_0  [color=blue, key=0, style=bold];
m10_12 -> m10_13  [color=green, key=0, style=solid];
m10_13 -> m10_14  [color=green, key=0, style=solid];
m10_13 -> m10_15  [color=green, key=2, style=dotted];
m10_14 -> m10_12  [color=blue, key=0, style=bold];
m10_0 -> m10_1  [color=green, key=0, style=solid];
m10_1 -> m10_2  [color=green, key=0, style=solid];
m10_1 -> m10_3  [color=green, key=2, style=dotted];
m10_2 -> m10_0  [color=blue, key=0, style=bold];
m10_4 -> m10_5  [color=green, key=0, style=solid];
m10_4 -> m10_7  [color=green, key=3, label="method methodReturn object ReadJson", style=bold];
m10_5 -> m10_6  [color=green, key=0, style=solid];
m10_5 -> m10_10  [color=green, key=2, style=dotted];
m10_5 -> m10_8  [color=green, key=1, label=encodingName, style=dashed];
m10_6 -> m10_7  [color=green, key=0, style=solid];
m10_6 -> m10_8  [color=green, key=0, style=solid];
m10_8 -> m10_9  [color=green, key=0, style=solid];
m10_8 -> m10_11  [color=green, key=2, style=dotted];
m10_7 -> m10_9  [color=green, key=0, style=solid];
m10_9 -> m10_4  [color=blue, key=0, style=bold];
m11_0 -> m11_1  [color=green, key=0, style=solid];
m11_1 -> m11_2  [color=green, key=0, style=solid];
m11_1 -> m11_3  [color=green, key=2, style=dotted];
m11_2 -> m11_0  [color=blue, key=0, style=bold];
m11_4 -> m11_1  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.FaqItem", style=dashed];
m13_0 -> m13_1  [key=0, style=solid];
m13_0 -> m13_6  [color=darkorchid, key=3, label="method methodReturn void WriteJson", style=bold];
m13_1 -> m13_0  [color=blue, key=0, style=bold];
m13_22 -> m13_23  [key=0, style=solid];
m13_22 -> m13_16  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonSerializer serializer", style=bold];
m13_23 -> m13_22  [color=blue, key=0, style=bold];
m13_2 -> m13_3  [key=0, style=solid];
m13_2 -> m13_16  [color=darkorchid, key=3, label="method methodReturn object ReadJson", style=bold];
m13_3 -> m13_2  [color=blue, key=0, style=bold];
m13_14 -> m13_15  [key=0, style=solid];
m13_14 -> m13_6  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonSerializer serializer", style=bold];
m13_15 -> m13_14  [color=blue, key=0, style=bold];
m13_16 -> m13_17  [key=0, style=solid];
m13_16 -> m13_18  [color=darkseagreen4, key=1, label=object, style=dashed];
m13_16 -> m13_20  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m13_16 -> m13_2  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonSerializer serializer", style=bold];
m13_16 -> m13_22  [color=darkorchid, key=3, label="method methodReturn object ReadJson", style=bold];
m13_17 -> m13_18  [key=0, style=solid];
m13_17 -> m13_20  [color=darkseagreen4, key=1, label=existingIsNull, style=dashed];
m13_18 -> m13_19  [key=0, style=solid];
m13_18 -> m13_20  [key=0, style=solid];
m13_20 -> m13_21  [key=0, style=solid];
m13_20 -> m13_22  [key=2, style=dotted];
m13_19 -> m13_21  [key=0, style=solid];
m13_19 -> m13_12  [key=2, style=dotted];
m13_19 -> m13_13  [key=2, style=dotted];
m13_21 -> m13_16  [color=blue, key=0, style=bold];
m13_24 -> m13_25  [key=0, style=solid];
m13_24 -> m13_4  [color=darkorchid, key=3, label="Parameter variable System.Type objectType", style=bold];
m13_25 -> m13_26  [key=0, style=solid];
m13_25 -> m13_27  [key=2, style=dotted];
m13_26 -> m13_24  [color=blue, key=0, style=bold];
m13_4 -> m13_5  [key=0, style=solid];
m13_4 -> m13_24  [color=darkorchid, key=3, label="method methodReturn bool CanConvert", style=bold];
m13_5 -> m13_4  [color=blue, key=0, style=bold];
m13_6 -> m13_7  [key=0, style=solid];
m13_6 -> m13_9  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m13_6 -> m13_0  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonSerializer serializer", style=bold];
m13_7 -> m13_8  [key=0, style=solid];
m13_7 -> m13_9  [key=0, style=solid];
m13_7 -> m13_11  [key=2, style=dotted];
m13_9 -> m13_10  [key=0, style=solid];
m13_9 -> m13_14  [key=2, style=dotted];
m13_8 -> m13_10  [key=0, style=solid];
m13_8 -> m13_12  [key=2, style=dotted];
m13_8 -> m13_13  [key=2, style=dotted];
m13_10 -> m13_6  [color=blue, key=0, style=bold];
m13_28 -> m13_9  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonConverter<T>", style=dashed];
m13_28 -> m13_20  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonConverter<T>", style=dashed];
m14_2094 -> m14_2095  [color=red, key=0, style=solid];
m14_2095 -> m14_2096  [color=red, key=0, style=solid];
m14_2095 -> m14_2097  [color=red, key=2, style=dotted];
m14_2096 -> m14_2094  [color=blue, key=0, style=bold];
m14_772 -> m14_773  [key=0, style=solid];
m14_773 -> m14_774  [key=0, style=solid];
m14_773 -> m14_1160  [color=darkorchid, key=3, label="Local variable string s", style=bold];
m14_774 -> m14_775  [key=0, style=solid];
m14_774 -> m14_782  [key=2, style=dotted];
m14_774 -> m14_776  [color=darkseagreen4, key=1, label=v, style=dashed];
m14_774 -> m14_778  [color=darkseagreen4, key=1, label=v, style=dashed];
m14_774 -> m14_779  [color=darkseagreen4, key=1, label=v, style=dashed];
m14_775 -> m14_776  [key=0, style=solid];
m14_775 -> m14_783  [key=2, style=dotted];
m14_775 -> m14_777  [color=darkseagreen4, key=1, label=o, style=dashed];
m14_776 -> m14_777  [key=0, style=solid];
m14_776 -> m14_784  [key=2, style=dotted];
m14_778 -> m14_779  [key=0, style=solid];
m14_778 -> m14_10  [key=2, style=dotted];
m14_779 -> m14_780  [key=0, style=solid];
m14_779 -> m14_10  [key=2, style=dotted];
m14_777 -> m14_778  [key=0, style=solid];
m14_777 -> m14_785  [key=2, style=dotted];
m14_777 -> m14_780  [color=darkseagreen4, key=1, label=output, style=dashed];
m14_780 -> m14_781  [key=0, style=solid];
m14_780 -> m14_62  [key=2, style=dotted];
m14_781 -> m14_772  [color=blue, key=0, style=bold];
m14_251 -> m14_252  [key=0, style=solid];
m14_252 -> m14_253  [key=0, style=solid];
m14_252 -> m14_262  [key=2, style=dotted];
m14_252 -> m14_264  [color=darkseagreen4, key=1, label=c1, style=dashed];
m14_253 -> m14_254  [key=0, style=solid];
m14_253 -> m14_88  [key=2, style=dotted];
m14_253 -> m14_263  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_254 -> m14_255  [key=0, style=solid];
m14_254 -> m14_262  [key=2, style=dotted];
m14_255 -> m14_256  [key=0, style=solid];
m14_255 -> m14_9  [key=2, style=dotted];
m14_256 -> m14_257  [key=0, style=solid];
m14_256 -> m14_10  [key=2, style=dotted];
m14_257 -> m14_258  [key=0, style=solid];
m14_257 -> m14_88  [key=2, style=dotted];
m14_257 -> m14_266  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_258 -> m14_259  [key=0, style=solid];
m14_258 -> m14_88  [key=2, style=dotted];
m14_258 -> m14_269  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_259 -> m14_260  [key=0, style=solid];
m14_259 -> m14_11  [key=2, style=dotted];
m14_260 -> m14_261  [key=0, style=solid];
m14_260 -> m14_10  [key=2, style=dotted];
m14_261 -> m14_251  [color=blue, key=0, style=bold];
m14_3301 -> m14_3302  [key=0, style=solid];
m14_3302 -> m14_3303  [key=0, style=solid];
m14_3302 -> m14_3305  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_3302 -> m14_3308  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_3302 -> m14_3302  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_3303 -> m14_3304  [key=0, style=solid];
m14_3303 -> m14_196  [key=2, style=dotted];
m14_3305 -> m14_3306  [key=0, style=solid];
m14_3305 -> m14_88  [key=2, style=dotted];
m14_3305 -> m14_3307  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_3304 -> m14_3305  [key=0, style=solid];
m14_3304 -> m14_848  [key=2, style=dotted];
m14_3304 -> m14_3308  [color=darkseagreen4, key=1, label=s, style=dashed];
m14_3306 -> m14_3301  [color=blue, key=0, style=bold];
m14_2907 -> m14_2908  [key=0, style=solid];
m14_2908 -> m14_2909  [key=0, style=solid];
m14_2908 -> m14_2918  [key=2, style=dotted];
m14_2908 -> m14_2911  [color=darkseagreen4, key=1, label=ng, style=dashed];
m14_2908 -> m14_2915  [color=darkseagreen4, key=1, label=ng, style=dashed];
m14_2909 -> m14_2910  [key=0, style=solid];
m14_2909 -> m14_2919  [key=2, style=dotted];
m14_2909 -> m14_850  [key=2, style=dotted];
m14_2909 -> m14_2911  [color=darkseagreen4, key=1, label=writer, style=dashed];
m14_2909 -> m14_2912  [color=darkseagreen4, key=1, label=writer, style=dashed];
m14_2909 -> m14_2915  [color=darkseagreen4, key=1, label=writer, style=dashed];
m14_2909 -> m14_2916  [color=darkseagreen4, key=1, label=writer, style=dashed];
m14_2911 -> m14_2912  [key=0, style=solid];
m14_2911 -> m14_2777  [key=2, style=dotted];
m14_2915 -> m14_2916  [key=0, style=solid];
m14_2915 -> m14_2777  [key=2, style=dotted];
m14_2910 -> m14_2911  [key=0, style=solid];
m14_2910 -> m14_2920  [key=2, style=dotted];
m14_2910 -> m14_2914  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_2910 -> m14_2915  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_2912 -> m14_2913  [key=0, style=solid];
m14_2912 -> m14_10  [key=2, style=dotted];
m14_2916 -> m14_2917  [key=0, style=solid];
m14_2916 -> m14_10  [key=2, style=dotted];
m14_2914 -> m14_2915  [key=0, style=solid];
m14_2913 -> m14_2914  [key=0, style=solid];
m14_2913 -> m14_578  [key=2, style=dotted];
m14_2917 -> m14_2907  [color=blue, key=0, style=bold];
m14_3989 -> m14_3990  [color=red, key=0, style=solid];
m14_3990 -> m14_3991  [color=red, key=0, style=solid];
m14_3991 -> m14_3989  [color=blue, key=0, style=bold];
m14_813 -> m14_814  [key=0, style=solid];
m14_814 -> m14_815  [key=0, style=solid];
m14_814 -> m14_819  [key=2, style=dotted];
m14_814 -> m14_805  [key=2, style=dotted];
m14_815 -> m14_816  [key=0, style=solid];
m14_815 -> m14_9  [key=2, style=dotted];
m14_815 -> m14_817  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_816 -> m14_817  [key=0, style=solid];
m14_816 -> m14_816  [color=darkorchid, key=3, label="Local variable string expectedJson", style=bold];
m14_817 -> m14_818  [key=0, style=solid];
m14_817 -> m14_10  [key=2, style=dotted];
m14_818 -> m14_813  [color=blue, key=0, style=bold];
m14_1717 -> m14_1718  [key=0, style=solid];
m14_1718 -> m14_1719  [key=0, style=solid];
m14_1718 -> m14_1718  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_1719 -> m14_1720  [key=0, style=solid];
m14_1719 -> m14_11  [key=2, style=dotted];
m14_1719 -> m14_1721  [color=darkseagreen4, key=1, label=r, style=dashed];
m14_1719 -> m14_1722  [color=darkseagreen4, key=1, label=r, style=dashed];
m14_1720 -> m14_1721  [key=0, style=solid];
m14_1720 -> m14_10  [key=2, style=dotted];
m14_1721 -> m14_1722  [key=0, style=solid];
m14_1721 -> m14_10  [key=2, style=dotted];
m14_1722 -> m14_1723  [key=0, style=solid];
m14_1722 -> m14_10  [key=2, style=dotted];
m14_1723 -> m14_1717  [color=blue, key=0, style=bold];
m14_1237 -> m14_1238  [key=0, style=solid];
m14_1238 -> m14_1239  [key=0, style=solid];
m14_1238 -> m14_1105  [key=2, style=dotted];
m14_1239 -> m14_1240  [key=0, style=solid];
m14_1239 -> m14_9  [key=2, style=dotted];
m14_1240 -> m14_1241  [key=0, style=solid];
m14_1240 -> m14_10  [key=2, style=dotted];
m14_1241 -> m14_1237  [color=blue, key=0, style=bold];
m14_2268 -> m14_2269  [key=0, style=solid];
m14_2269 -> m14_2270  [key=0, style=solid];
m14_2269 -> m14_88  [key=2, style=dotted];
m14_2269 -> m14_2271  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_2270 -> m14_2268  [color=blue, key=0, style=bold];
m14_733 -> m14_734  [key=0, style=solid];
m14_734 -> m14_735  [key=0, style=solid];
m14_734 -> m14_754  [key=2, style=dotted];
m14_734 -> m14_736  [color=darkseagreen4, key=1, label=p1, style=dashed];
m14_734 -> m14_737  [color=darkseagreen4, key=1, label=p1, style=dashed];
m14_734 -> m14_738  [color=darkseagreen4, key=1, label=p1, style=dashed];
m14_735 -> m14_736  [key=0, style=solid];
m14_735 -> m14_754  [key=2, style=dotted];
m14_735 -> m14_737  [color=darkseagreen4, key=1, label=p2, style=dashed];
m14_735 -> m14_738  [color=darkseagreen4, key=1, label=p2, style=dashed];
m14_736 -> m14_737  [key=0, style=solid];
m14_737 -> m14_738  [key=0, style=solid];
m14_738 -> m14_739  [key=0, style=solid];
m14_738 -> m14_755  [key=2, style=dotted];
m14_738 -> m14_741  [color=darkseagreen4, key=1, label=obj, style=dashed];
m14_738 -> m14_744  [color=darkseagreen4, key=1, label=obj, style=dashed];
m14_738 -> m14_745  [color=darkseagreen4, key=1, label=obj, style=dashed];
m14_738 -> m14_746  [color=darkseagreen4, key=1, label=obj, style=dashed];
m14_738 -> m14_747  [color=darkseagreen4, key=1, label=obj, style=dashed];
m14_738 -> m14_748  [color=darkseagreen4, key=1, label=obj, style=dashed];
m14_739 -> m14_740  [key=0, style=solid];
m14_741 -> m14_742  [key=0, style=solid];
m14_741 -> m14_197  [key=2, style=dotted];
m14_741 -> m14_743  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_744 -> m14_745  [key=0, style=solid];
m14_744 -> m14_10  [key=2, style=dotted];
m14_745 -> m14_746  [key=0, style=solid];
m14_745 -> m14_10  [key=2, style=dotted];
m14_746 -> m14_747  [key=0, style=solid];
m14_746 -> m14_10  [key=2, style=dotted];
m14_747 -> m14_748  [key=0, style=solid];
m14_747 -> m14_10  [key=2, style=dotted];
m14_748 -> m14_749  [key=0, style=solid];
m14_748 -> m14_10  [key=2, style=dotted];
m14_740 -> m14_741  [key=0, style=solid];
m14_740 -> m14_196  [key=2, style=dotted];
m14_742 -> m14_743  [key=0, style=solid];
m14_742 -> m14_62  [key=2, style=dotted];
m14_743 -> m14_744  [key=0, style=solid];
m14_743 -> m14_11  [key=2, style=dotted];
m14_743 -> m14_745  [color=darkseagreen4, key=1, label=obj2, style=dashed];
m14_743 -> m14_746  [color=darkseagreen4, key=1, label=obj2, style=dashed];
m14_743 -> m14_747  [color=darkseagreen4, key=1, label=obj2, style=dashed];
m14_743 -> m14_748  [color=darkseagreen4, key=1, label=obj2, style=dashed];
m14_743 -> m14_749  [color=darkseagreen4, key=1, label=obj2, style=dashed];
m14_743 -> m14_750  [color=darkseagreen4, key=1, label=obj2, style=dashed];
m14_743 -> m14_751  [color=darkseagreen4, key=1, label=obj2, style=dashed];
m14_743 -> m14_752  [color=darkseagreen4, key=1, label=obj2, style=dashed];
m14_749 -> m14_750  [key=0, style=solid];
m14_749 -> m14_10  [key=2, style=dotted];
m14_750 -> m14_751  [key=0, style=solid];
m14_750 -> m14_10  [key=2, style=dotted];
m14_751 -> m14_752  [key=0, style=solid];
m14_751 -> m14_10  [key=2, style=dotted];
m14_752 -> m14_753  [key=0, style=solid];
m14_752 -> m14_10  [key=2, style=dotted];
m14_753 -> m14_733  [color=blue, key=0, style=bold];
m14_1141 -> m14_939  [color=darkorchid, key=3, label="Property variable System.Collections.Generic.ICollection<Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqSection> Sections", style=bold];
m14_1329 -> m14_1330  [key=0, style=solid];
m14_1330 -> m14_1331  [key=0, style=solid];
m14_1330 -> m14_1309  [key=2, style=dotted];
m14_1330 -> m14_1335  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m14_1330 -> m14_1336  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m14_1331 -> m14_1332  [key=0, style=solid];
m14_1331 -> m14_1310  [key=2, style=dotted];
m14_1335 -> m14_1336  [key=0, style=solid];
m14_1335 -> m14_10  [key=2, style=dotted];
m14_1336 -> m14_1337  [key=0, style=solid];
m14_1336 -> m14_10  [key=2, style=dotted];
m14_1332 -> m14_1333  [key=0, style=solid];
m14_1332 -> m14_196  [key=2, style=dotted];
m14_1332 -> m14_197  [key=2, style=dotted];
m14_1332 -> m14_1334  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_1333 -> m14_1334  [key=0, style=solid];
m14_1333 -> m14_10  [key=2, style=dotted];
m14_1334 -> m14_1335  [key=0, style=solid];
m14_1334 -> m14_11  [key=2, style=dotted];
m14_1334 -> m14_1336  [color=darkseagreen4, key=1, label=m2, style=dashed];
m14_1337 -> m14_1329  [color=blue, key=0, style=bold];
m14_1756 -> m14_1757  [key=0, style=solid];
m14_1757 -> m14_1758  [key=0, style=solid];
m14_1757 -> m14_11  [key=2, style=dotted];
m14_1757 -> m14_1759  [color=darkseagreen4, key=1, label=l, style=dashed];
m14_1757 -> m14_1760  [color=darkseagreen4, key=1, label=l, style=dashed];
m14_1757 -> m14_1761  [color=darkseagreen4, key=1, label=l, style=dashed];
m14_1758 -> m14_1759  [key=0, style=solid];
m14_1758 -> m14_10  [key=2, style=dotted];
m14_1759 -> m14_1760  [key=0, style=solid];
m14_1759 -> m14_10  [key=2, style=dotted];
m14_1760 -> m14_1761  [key=0, style=solid];
m14_1760 -> m14_10  [key=2, style=dotted];
m14_1761 -> m14_1762  [key=0, style=solid];
m14_1761 -> m14_10  [key=2, style=dotted];
m14_1762 -> m14_1756  [color=blue, key=0, style=bold];
m14_2818 -> m14_2819  [key=0, style=solid];
m14_2819 -> m14_2820  [key=0, style=solid];
m14_2819 -> m14_300  [key=2, style=dotted];
m14_2819 -> m14_2822  [color=darkseagreen4, key=1, label=d1, style=dashed];
m14_2819 -> m14_2823  [color=darkseagreen4, key=1, label=d1, style=dashed];
m14_2820 -> m14_2821  [key=0, style=solid];
m14_2820 -> m14_9  [key=2, style=dotted];
m14_2822 -> m14_2823  [key=0, style=solid];
m14_2822 -> m14_10  [key=2, style=dotted];
m14_2823 -> m14_2824  [key=0, style=solid];
m14_2823 -> m14_10  [key=2, style=dotted];
m14_2821 -> m14_2822  [key=0, style=solid];
m14_2821 -> m14_11  [key=2, style=dotted];
m14_2821 -> m14_2823  [color=darkseagreen4, key=1, label=d2, style=dashed];
m14_2824 -> m14_2818  [color=blue, key=0, style=bold];
m14_1697 -> m14_1698  [key=0, style=solid];
m14_1698 -> m14_1699  [key=0, style=solid];
m14_1698 -> m14_921  [key=2, style=dotted];
m14_1698 -> m14_1702  [key=2, style=dotted];
m14_1699 -> m14_1700  [key=0, style=solid];
m14_1699 -> m14_9  [key=2, style=dotted];
m14_1700 -> m14_1701  [key=0, style=solid];
m14_1700 -> m14_10  [key=2, style=dotted];
m14_1701 -> m14_1697  [color=blue, key=0, style=bold];
m14_2404 -> m14_2405  [key=0, style=solid];
m14_2405 -> m14_2406  [key=0, style=solid];
m14_2405 -> m14_11  [key=2, style=dotted];
m14_2406 -> m14_2407  [key=0, style=solid];
m14_2406 -> m14_2389  [key=2, style=dotted];
m14_2406 -> m14_957  [key=2, style=dotted];
m14_2406 -> m14_1113  [key=2, style=dotted];
m14_2406 -> m14_10  [key=2, style=dotted];
m14_2407 -> m14_2404  [color=blue, key=0, style=bold];
m14_1484 -> m14_1485  [key=0, style=solid];
m14_1485 -> m14_1486  [key=0, style=solid];
m14_1485 -> m14_1494  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_1485 -> m14_1485  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_1486 -> m14_1487  [key=0, style=solid];
m14_1486 -> m14_11  [key=2, style=dotted];
m14_1486 -> m14_1488  [color=darkseagreen4, key=1, label=aa, style=dashed];
m14_1486 -> m14_1489  [color=darkseagreen4, key=1, label=aa, style=dashed];
m14_1486 -> m14_1490  [color=darkseagreen4, key=1, label=aa, style=dashed];
m14_1486 -> m14_1491  [color=darkseagreen4, key=1, label=aa, style=dashed];
m14_1486 -> m14_1492  [color=darkseagreen4, key=1, label=aa, style=dashed];
m14_1486 -> m14_1493  [color=darkseagreen4, key=1, label=aa, style=dashed];
m14_1494 -> m14_1495  [key=0, style=solid];
m14_1494 -> m14_10  [key=2, style=dotted];
m14_1487 -> m14_1488  [key=0, style=solid];
m14_1487 -> m14_10  [key=2, style=dotted];
m14_1488 -> m14_1489  [key=0, style=solid];
m14_1488 -> m14_10  [key=2, style=dotted];
m14_1489 -> m14_1490  [key=0, style=solid];
m14_1489 -> m14_10  [key=2, style=dotted];
m14_1490 -> m14_1491  [key=0, style=solid];
m14_1490 -> m14_10  [key=2, style=dotted];
m14_1491 -> m14_1492  [key=0, style=solid];
m14_1491 -> m14_10  [key=2, style=dotted];
m14_1492 -> m14_1493  [key=0, style=solid];
m14_1492 -> m14_10  [key=2, style=dotted];
m14_1493 -> m14_1494  [key=0, style=solid];
m14_1493 -> m14_9  [key=2, style=dotted];
m14_1495 -> m14_1484  [color=blue, key=0, style=bold];
m14_1736 -> m14_1737  [key=0, style=solid];
m14_1737 -> m14_1738  [key=0, style=solid];
m14_1737 -> m14_1741  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_1737 -> m14_1737  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_1738 -> m14_1739  [key=0, style=solid];
m14_1738 -> m14_88  [key=2, style=dotted];
m14_1738 -> m14_1740  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_1739 -> m14_1736  [color=blue, key=0, style=bold];
m14_2558 -> m14_2559  [key=0, style=solid];
m14_2559 -> m14_2560  [key=0, style=solid];
m14_2559 -> m14_2559  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_2560 -> m14_2561  [key=0, style=solid];
m14_2560 -> m14_11  [key=2, style=dotted];
m14_2560 -> m14_2562  [color=darkseagreen4, key=1, label=p, style=dashed];
m14_2560 -> m14_2563  [color=darkseagreen4, key=1, label=p, style=dashed];
m14_2561 -> m14_2562  [key=0, style=solid];
m14_2561 -> m14_10  [key=2, style=dotted];
m14_2562 -> m14_2563  [key=0, style=solid];
m14_2562 -> m14_10  [key=2, style=dotted];
m14_2563 -> m14_2564  [key=0, style=solid];
m14_2563 -> m14_10  [key=2, style=dotted];
m14_2564 -> m14_2558  [color=blue, key=0, style=bold];
m14_3285 -> m14_3286  [key=0, style=solid];
m14_3286 -> m14_3287  [key=0, style=solid];
m14_3286 -> m14_3289  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_3286 -> m14_3286  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_3287 -> m14_3288  [key=0, style=solid];
m14_3287 -> m14_196  [key=2, style=dotted];
m14_3289 -> m14_3290  [key=0, style=solid];
m14_3289 -> m14_43  [key=2, style=dotted];
m14_3289 -> m14_403  [key=2, style=dotted];
m14_3289 -> m14_47  [key=2, style=dotted];
m14_3289 -> m14_3291  [color=darkseagreen4, key=1, label=o, style=dashed];
m14_3288 -> m14_3289  [key=0, style=solid];
m14_3288 -> m14_848  [key=2, style=dotted];
m14_3290 -> m14_3291  [key=0, style=solid];
m14_3290 -> m14_812  [key=2, style=dotted];
m14_3291 -> m14_3292  [key=0, style=solid];
m14_3291 -> m14_10  [key=2, style=dotted];
m14_3292 -> m14_3285  [color=blue, key=0, style=bold];
m14_2282 -> m14_2283  [key=0, style=solid];
m14_2283 -> m14_2284  [key=0, style=solid];
m14_2283 -> m14_210  [key=2, style=dotted];
m14_2283 -> m14_2285  [color=darkseagreen4, key=1, label=reference, style=dashed];
m14_2283 -> m14_2286  [color=darkseagreen4, key=1, label=reference, style=dashed];
m14_2283 -> m14_2290  [color=darkseagreen4, key=1, label=reference, style=dashed];
m14_2284 -> m14_2285  [key=0, style=solid];
m14_2284 -> m14_847  [key=2, style=dotted];
m14_2285 -> m14_2286  [key=0, style=solid];
m14_2285 -> m14_847  [key=2, style=dotted];
m14_2286 -> m14_2287  [key=0, style=solid];
m14_2286 -> m14_847  [key=2, style=dotted];
m14_2290 -> m14_2291  [key=0, style=solid];
m14_2290 -> m14_847  [key=2, style=dotted];
m14_2287 -> m14_2288  [key=0, style=solid];
m14_2287 -> m14_210  [key=2, style=dotted];
m14_2287 -> m14_2289  [color=darkseagreen4, key=1, label=child, style=dashed];
m14_2287 -> m14_2290  [color=darkseagreen4, key=1, label=child, style=dashed];
m14_2287 -> m14_2291  [color=darkseagreen4, key=1, label=child, style=dashed];
m14_2288 -> m14_2289  [key=0, style=solid];
m14_2288 -> m14_847  [key=2, style=dotted];
m14_2289 -> m14_2290  [key=0, style=solid];
m14_2289 -> m14_847  [key=2, style=dotted];
m14_2291 -> m14_2292  [key=0, style=solid];
m14_2291 -> m14_9  [key=2, style=dotted];
m14_2291 -> m14_2293  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_2292 -> m14_2293  [key=0, style=solid];
m14_2292 -> m14_10  [key=2, style=dotted];
m14_2293 -> m14_2294  [key=0, style=solid];
m14_2293 -> m14_11  [key=2, style=dotted];
m14_2293 -> m14_2295  [color=darkseagreen4, key=1, label=result, style=dashed];
m14_2293 -> m14_2296  [color=darkseagreen4, key=1, label=result, style=dashed];
m14_2294 -> m14_2295  [key=0, style=solid];
m14_2294 -> m14_10  [key=2, style=dotted];
m14_2295 -> m14_2296  [key=0, style=solid];
m14_2295 -> m14_10  [key=2, style=dotted];
m14_2296 -> m14_2297  [key=0, style=solid];
m14_2296 -> m14_10  [key=2, style=dotted];
m14_2297 -> m14_2282  [color=blue, key=0, style=bold];
m14_3965 -> m14_3966  [color=red, key=0, style=solid];
m14_3966 -> m14_3967  [color=red, key=0, style=solid];
m14_3967 -> m14_3965  [color=blue, key=0, style=bold];
m14_1159 -> m14_1160  [key=0, style=solid];
m14_1160 -> m14_1161  [key=0, style=solid];
m14_1160 -> m14_9  [key=2, style=dotted];
m14_1161 -> m14_1162  [key=0, style=solid];
m14_1161 -> m14_10  [key=2, style=dotted];
m14_1162 -> m14_1159  [color=blue, key=0, style=bold];
m14_3796 -> m14_3797  [key=0, style=solid];
m14_3797 -> m14_3798  [key=0, style=solid];
m14_3797 -> m14_3801  [key=2, style=dotted];
m14_3797 -> m14_3802  [key=2, style=dotted];
m14_3798 -> m14_3799  [key=0, style=solid];
m14_3798 -> m14_61  [key=2, style=dotted];
m14_3799 -> m14_3800  [key=0, style=solid];
m14_3799 -> m14_62  [key=2, style=dotted];
m14_3800 -> m14_3796  [color=blue, key=0, style=bold];
m14_3056 -> m14_3057  [key=0, style=solid];
m14_3057 -> m14_3058  [key=0, style=solid];
m14_3057 -> m14_956  [key=2, style=dotted];
m14_3057 -> m14_957  [key=2, style=dotted];
m14_3057 -> m14_3059  [color=darkseagreen4, key=1, label=product, style=dashed];
m14_3058 -> m14_3059  [key=0, style=solid];
m14_3058 -> m14_9  [key=2, style=dotted];
m14_3059 -> m14_3060  [key=0, style=solid];
m14_3059 -> m14_196  [key=2, style=dotted];
m14_3059 -> m14_3065  [key=2, style=dotted];
m14_3059 -> m14_3066  [key=2, style=dotted];
m14_3059 -> m14_197  [key=2, style=dotted];
m14_3060 -> m14_3061  [key=0, style=solid];
m14_3060 -> m14_62  [key=2, style=dotted];
m14_3061 -> m14_3062  [key=0, style=solid];
m14_3062 -> m14_3063  [key=0, style=solid];
m14_3062 -> m14_196  [key=2, style=dotted];
m14_3062 -> m14_3065  [key=2, style=dotted];
m14_3062 -> m14_3066  [key=2, style=dotted];
m14_3062 -> m14_3067  [key=2, style=dotted];
m14_3062 -> m14_197  [key=2, style=dotted];
m14_3063 -> m14_3064  [key=0, style=solid];
m14_3063 -> m14_62  [key=2, style=dotted];
m14_3064 -> m14_3056  [color=blue, key=0, style=bold];
m14_387 -> m14_388  [key=0, style=solid];
m14_388 -> m14_389  [key=0, style=solid];
m14_388 -> m14_11  [key=2, style=dotted];
m14_388 -> m14_390  [color=darkseagreen4, key=1, label=d, style=dashed];
m14_389 -> m14_390  [key=0, style=solid];
m14_389 -> m14_10  [key=2, style=dotted];
m14_390 -> m14_391  [key=0, style=solid];
m14_390 -> m14_10  [key=2, style=dotted];
m14_391 -> m14_387  [color=blue, key=0, style=bold];
m14_1475 -> m14_1476  [key=0, style=solid];
m14_1476 -> m14_1477  [key=0, style=solid];
m14_1476 -> m14_1483  [key=2, style=dotted];
m14_1476 -> m14_1478  [color=darkseagreen4, key=1, label=aa, style=dashed];
m14_1476 -> m14_1479  [color=darkseagreen4, key=1, label=aa, style=dashed];
m14_1476 -> m14_1480  [color=darkseagreen4, key=1, label=aa, style=dashed];
m14_1477 -> m14_1478  [key=0, style=solid];
m14_1478 -> m14_1479  [key=0, style=solid];
m14_1479 -> m14_1480  [key=0, style=solid];
m14_1480 -> m14_1481  [key=0, style=solid];
m14_1480 -> m14_9  [key=2, style=dotted];
m14_1481 -> m14_1482  [key=0, style=solid];
m14_1481 -> m14_10  [key=2, style=dotted];
m14_1482 -> m14_1475  [color=blue, key=0, style=bold];
m14_3803 -> m14_3804  [key=0, style=solid];
m14_3804 -> m14_3805  [key=0, style=solid];
m14_3804 -> m14_3804  [color=darkorchid, key=3, label="Local variable string content", style=bold];
m14_3805 -> m14_3806  [key=0, style=solid];
m14_3805 -> m14_11  [key=2, style=dotted];
m14_3806 -> m14_3807  [key=0, style=solid];
m14_3807 -> m14_3808  [key=0, style=solid];
m14_3807 -> m14_10  [key=2, style=dotted];
m14_3808 -> m14_3803  [color=blue, key=0, style=bold];
m14_2311 -> m14_2312  [key=0, style=solid];
m14_2312 -> m14_2313  [key=0, style=solid];
m14_2312 -> m14_210  [key=2, style=dotted];
m14_2312 -> m14_2314  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m14_2312 -> m14_2315  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m14_2313 -> m14_2314  [key=0, style=solid];
m14_2313 -> m14_2320  [key=2, style=dotted];
m14_2313 -> m14_847  [key=2, style=dotted];
m14_2314 -> m14_2315  [key=0, style=solid];
m14_2314 -> m14_2320  [key=2, style=dotted];
m14_2314 -> m14_847  [key=2, style=dotted];
m14_2315 -> m14_2316  [key=0, style=solid];
m14_2315 -> m14_61  [key=2, style=dotted];
m14_2315 -> m14_2317  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_2316 -> m14_2317  [key=0, style=solid];
m14_2316 -> m14_62  [key=2, style=dotted];
m14_2317 -> m14_2318  [key=0, style=solid];
m14_2317 -> m14_11  [key=2, style=dotted];
m14_2318 -> m14_2319  [key=0, style=solid];
m14_2318 -> m14_10  [key=2, style=dotted];
m14_2319 -> m14_2311  [color=blue, key=0, style=bold];
m14_1994 -> m14_1995  [key=0, style=solid];
m14_1995 -> m14_1996  [key=0, style=solid];
m14_1995 -> m14_1995  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_1996 -> m14_1997  [key=0, style=solid];
m14_1996 -> m14_11  [key=2, style=dotted];
m14_1996 -> m14_1998  [color=darkseagreen4, key=1, label=dic, style=dashed];
m14_1996 -> m14_1999  [color=darkseagreen4, key=1, label=dic, style=dashed];
m14_1996 -> m14_2000  [color=darkseagreen4, key=1, label=dic, style=dashed];
m14_1997 -> m14_1998  [key=0, style=solid];
m14_1997 -> m14_10  [key=2, style=dotted];
m14_1998 -> m14_1999  [key=0, style=solid];
m14_1998 -> m14_10  [key=2, style=dotted];
m14_1999 -> m14_2000  [key=0, style=solid];
m14_1999 -> m14_10  [key=2, style=dotted];
m14_2000 -> m14_2001  [key=0, style=solid];
m14_2000 -> m14_10  [key=2, style=dotted];
m14_2001 -> m14_1994  [color=blue, key=0, style=bold];
m14_2753 -> m14_2754  [key=0, style=solid];
m14_2754 -> m14_2755  [key=0, style=solid];
m14_2754 -> m14_2754  [color=darkorchid, key=3, label="Local variable string input", style=bold];
m14_2755 -> m14_2756  [key=0, style=solid];
m14_2755 -> m14_1695  [key=2, style=dotted];
m14_2755 -> m14_2758  [color=darkseagreen4, key=1, label=uri, style=dashed];
m14_2756 -> m14_2757  [key=0, style=solid];
m14_2756 -> m14_9  [key=2, style=dotted];
m14_2758 -> m14_2759  [key=0, style=solid];
m14_2758 -> m14_10  [key=2, style=dotted];
m14_2757 -> m14_2758  [key=0, style=solid];
m14_2757 -> m14_11  [key=2, style=dotted];
m14_2759 -> m14_2753  [color=blue, key=0, style=bold];
m14_2102 -> m14_2103  [color=red, key=0, style=solid];
m14_2103 -> m14_2104  [color=red, key=0, style=solid];
m14_2103 -> m14_2105  [color=red, key=2, style=dotted];
m14_2104 -> m14_2102  [color=blue, key=0, style=bold];
m14_2832 -> m14_2833  [key=0, style=solid];
m14_2833 -> m14_2834  [key=0, style=solid];
m14_2833 -> m14_300  [key=2, style=dotted];
m14_2833 -> m14_2836  [color=darkseagreen4, key=1, label=d1, style=dashed];
m14_2833 -> m14_2837  [color=darkseagreen4, key=1, label=d1, style=dashed];
m14_2834 -> m14_2835  [key=0, style=solid];
m14_2834 -> m14_9  [key=2, style=dotted];
m14_2836 -> m14_2837  [key=0, style=solid];
m14_2836 -> m14_10  [key=2, style=dotted];
m14_2837 -> m14_2838  [key=0, style=solid];
m14_2837 -> m14_10  [key=2, style=dotted];
m14_2835 -> m14_2836  [key=0, style=solid];
m14_2835 -> m14_11  [key=2, style=dotted];
m14_2835 -> m14_2837  [color=darkseagreen4, key=1, label=d2, style=dashed];
m14_2838 -> m14_2832  [color=blue, key=0, style=bold];
m14_3905 -> m14_3906  [key=0, style=solid];
m14_3906 -> m14_3907  [key=0, style=solid];
m14_3906 -> m14_3911  [key=2, style=dotted];
m14_3907 -> m14_3908  [key=0, style=solid];
m14_3907 -> m14_61  [key=2, style=dotted];
m14_3907 -> m14_3909  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_3908 -> m14_3909  [key=0, style=solid];
m14_3908 -> m14_62  [key=2, style=dotted];
m14_3909 -> m14_3910  [key=0, style=solid];
m14_3909 -> m14_11  [key=2, style=dotted];
m14_3910 -> m14_3905  [color=blue, key=0, style=bold];
m14_3479 -> m14_3480  [key=0, style=solid];
m14_3480 -> m14_3481  [key=0, style=solid];
m14_3480 -> m14_3487  [key=2, style=dotted];
m14_3481 -> m14_3482  [key=0, style=solid];
m14_3481 -> m14_9  [key=2, style=dotted];
m14_3481 -> m14_3483  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_3482 -> m14_3483  [key=0, style=solid];
m14_3482 -> m14_10  [key=2, style=dotted];
m14_3483 -> m14_3484  [key=0, style=solid];
m14_3483 -> m14_11  [key=2, style=dotted];
m14_3483 -> m14_3485  [color=darkseagreen4, key=1, label=tuple2, style=dashed];
m14_3484 -> m14_3485  [key=0, style=solid];
m14_3484 -> m14_10  [key=2, style=dotted];
m14_3485 -> m14_3486  [key=0, style=solid];
m14_3485 -> m14_10  [key=2, style=dotted];
m14_3486 -> m14_3479  [color=blue, key=0, style=bold];
m14_3080 -> m14_3081  [color=red, key=0, style=solid];
m14_3081 -> m14_3082  [color=red, key=0, style=solid];
m14_3082 -> m14_3080  [color=blue, key=0, style=bold];
m14_2527 -> m14_2528  [key=0, style=solid];
m14_2528 -> m14_2529  [key=0, style=solid];
m14_2528 -> m14_11  [key=2, style=dotted];
m14_2529 -> m14_2530  [key=0, style=solid];
m14_2529 -> m14_10  [key=2, style=dotted];
m14_2530 -> m14_2527  [color=blue, key=0, style=bold];
m14_3432 -> m14_3433  [color=red, key=0, style=solid];
m14_3433 -> m14_3434  [color=red, key=0, style=solid];
m14_3434 -> m14_3432  [color=blue, key=0, style=bold];
m14_355 -> m14_356  [key=0, style=solid];
m14_356 -> m14_357  [key=0, style=solid];
m14_356 -> m14_11  [key=2, style=dotted];
m14_356 -> m14_358  [color=darkseagreen4, key=1, label=otc, style=dashed];
m14_356 -> m14_359  [color=darkseagreen4, key=1, label=otc, style=dashed];
m14_356 -> m14_360  [color=darkseagreen4, key=1, label=otc, style=dashed];
m14_356 -> m14_361  [color=darkseagreen4, key=1, label=otc, style=dashed];
m14_357 -> m14_358  [key=0, style=solid];
m14_357 -> m14_173  [key=2, style=dotted];
m14_358 -> m14_359  [key=0, style=solid];
m14_358 -> m14_10  [key=2, style=dotted];
m14_359 -> m14_360  [key=0, style=solid];
m14_359 -> m14_10  [key=2, style=dotted];
m14_360 -> m14_361  [key=0, style=solid];
m14_360 -> m14_10  [key=2, style=dotted];
m14_361 -> m14_362  [key=0, style=solid];
m14_361 -> m14_173  [key=2, style=dotted];
m14_362 -> m14_355  [color=blue, key=0, style=bold];
m14_2444 -> m14_2445  [key=0, style=solid];
m14_2445 -> m14_2446  [key=0, style=solid];
m14_2445 -> m14_2445  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_2446 -> m14_2447  [key=0, style=solid];
m14_2446 -> m14_43  [key=2, style=dotted];
m14_2446 -> m14_403  [key=2, style=dotted];
m14_2446 -> m14_2449  [color=darkseagreen4, key=1, label=reader, style=dashed];
m14_2447 -> m14_2448  [key=0, style=solid];
m14_2449 -> m14_2450  [key=0, style=solid];
m14_2449 -> m14_47  [key=2, style=dotted];
m14_2448 -> m14_2449  [key=0, style=solid];
m14_2448 -> m14_46  [key=2, style=dotted];
m14_2450 -> m14_2451  [key=0, style=solid];
m14_2450 -> m14_10  [key=2, style=dotted];
m14_2451 -> m14_2444  [color=blue, key=0, style=bold];
m14_2379 -> m14_2380  [key=0, style=solid];
m14_2380 -> m14_2381  [key=0, style=solid];
m14_2380 -> m14_2388  [key=2, style=dotted];
m14_2380 -> m14_2389  [key=2, style=dotted];
m14_2380 -> m14_957  [key=2, style=dotted];
m14_2380 -> m14_1113  [key=2, style=dotted];
m14_2380 -> m14_9  [key=2, style=dotted];
m14_2380 -> m14_2382  [color=darkseagreen4, key=1, label=serializeObject, style=dashed];
m14_2381 -> m14_2382  [key=0, style=solid];
m14_2381 -> m14_10  [key=2, style=dotted];
m14_2382 -> m14_2383  [key=0, style=solid];
m14_2382 -> m14_43  [key=2, style=dotted];
m14_2382 -> m14_403  [key=2, style=dotted];
m14_2382 -> m14_2384  [color=darkseagreen4, key=1, label=reader, style=dashed];
m14_2383 -> m14_2384  [key=0, style=solid];
m14_2383 -> m14_46  [key=2, style=dotted];
m14_2384 -> m14_2385  [key=0, style=solid];
m14_2384 -> m14_47  [key=2, style=dotted];
m14_2384 -> m14_2386  [color=darkseagreen4, key=1, label=deserializeObject, style=dashed];
m14_2385 -> m14_2386  [key=0, style=solid];
m14_2385 -> m14_1113  [key=2, style=dotted];
m14_2385 -> m14_10  [key=2, style=dotted];
m14_2386 -> m14_2387  [key=0, style=solid];
m14_2386 -> m14_957  [key=2, style=dotted];
m14_2386 -> m14_10  [key=2, style=dotted];
m14_2387 -> m14_2379  [color=blue, key=0, style=bold];
m14_2594 -> m14_2595  [key=0, style=solid];
m14_2595 -> m14_2596  [key=0, style=solid];
m14_2595 -> m14_2598  [key=2, style=dotted];
m14_2595 -> m14_9  [key=2, style=dotted];
m14_2596 -> m14_2597  [key=0, style=solid];
m14_2596 -> m14_11  [key=2, style=dotted];
m14_2597 -> m14_2594  [color=blue, key=0, style=bold];
m14_863 -> m14_864  [key=0, style=solid];
m14_864 -> m14_865  [key=0, style=solid];
m14_864 -> m14_872  [key=2, style=dotted];
m14_864 -> m14_866  [color=darkseagreen4, key=1, label=baseWith, style=dashed];
m14_864 -> m14_867  [color=darkseagreen4, key=1, label=baseWith, style=dashed];
m14_864 -> m14_868  [color=darkseagreen4, key=1, label=baseWith, style=dashed];
m14_864 -> m14_869  [color=darkseagreen4, key=1, label=baseWith, style=dashed];
m14_865 -> m14_866  [key=0, style=solid];
m14_866 -> m14_867  [key=0, style=solid];
m14_867 -> m14_868  [key=0, style=solid];
m14_868 -> m14_869  [key=0, style=solid];
m14_869 -> m14_870  [key=0, style=solid];
m14_869 -> m14_873  [key=2, style=dotted];
m14_870 -> m14_871  [key=0, style=solid];
m14_870 -> m14_62  [key=2, style=dotted];
m14_871 -> m14_863  [color=blue, key=0, style=bold];
m14_3513 -> m14_3514  [key=0, style=solid];
m14_3514 -> m14_3515  [key=0, style=solid];
m14_3514 -> m14_3517  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_3514 -> m14_3520  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_3514 -> m14_3514  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_3515 -> m14_3516  [key=0, style=solid];
m14_3515 -> m14_11  [key=2, style=dotted];
m14_3517 -> m14_3518  [key=0, style=solid];
m14_3517 -> m14_88  [key=2, style=dotted];
m14_3517 -> m14_3519  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_3516 -> m14_3517  [key=0, style=solid];
m14_3516 -> m14_2228  [key=2, style=dotted];
m14_3516 -> m14_10  [key=2, style=dotted];
m14_3518 -> m14_3513  [color=blue, key=0, style=bold];
m14_4023 -> m14_4024  [key=0, style=solid];
m14_4024 -> m14_4025  [key=0, style=solid];
m14_4024 -> m14_4031  [key=2, style=dotted];
m14_4025 -> m14_4026  [key=0, style=solid];
m14_4025 -> m14_10  [key=2, style=dotted];
m14_4026 -> m14_4027  [key=0, style=solid];
m14_4026 -> m14_4029  [color=darkseagreen4, key=1, label=propertyValue, style=dashed];
m14_4026 -> m14_4026  [color=darkorchid, key=3, label="Local variable string propertyValue", style=bold];
m14_4027 -> m14_4028  [key=0, style=solid];
m14_4029 -> m14_4030  [key=0, style=solid];
m14_4029 -> m14_4032  [key=2, style=dotted];
m14_4029 -> m14_10  [key=2, style=dotted];
m14_4028 -> m14_4029  [key=0, style=solid];
m14_4028 -> m14_11  [key=2, style=dotted];
m14_4030 -> m14_4023  [color=blue, key=0, style=bold];
m14_652 -> m14_653  [key=0, style=solid];
m14_653 -> m14_654  [key=0, style=solid];
m14_653 -> m14_722  [key=2, style=dotted];
m14_653 -> m14_723  [key=2, style=dotted];
m14_653 -> m14_46  [key=2, style=dotted];
m14_653 -> m14_655  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m14_653 -> m14_656  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m14_653 -> m14_657  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m14_653 -> m14_658  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m14_653 -> m14_659  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m14_653 -> m14_660  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m14_653 -> m14_661  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m14_653 -> m14_662  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m14_653 -> m14_663  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m14_653 -> m14_664  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m14_653 -> m14_665  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m14_653 -> m14_666  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m14_653 -> m14_668  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m14_653 -> m14_669  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m14_653 -> m14_670  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m14_653 -> m14_671  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m14_653 -> m14_672  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m14_653 -> m14_673  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m14_653 -> m14_674  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m14_653 -> m14_675  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m14_653 -> m14_676  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m14_653 -> m14_677  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m14_653 -> m14_678  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m14_653 -> m14_679  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m14_653 -> m14_680  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m14_653 -> m14_681  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m14_653 -> m14_682  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m14_653 -> m14_683  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m14_653 -> m14_684  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m14_653 -> m14_685  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m14_653 -> m14_686  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m14_653 -> m14_687  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m14_653 -> m14_688  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m14_653 -> m14_689  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m14_653 -> m14_690  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m14_653 -> m14_691  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m14_653 -> m14_692  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m14_653 -> m14_693  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m14_653 -> m14_694  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m14_653 -> m14_695  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m14_653 -> m14_696  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m14_653 -> m14_697  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m14_653 -> m14_698  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m14_653 -> m14_699  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m14_653 -> m14_700  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m14_653 -> m14_701  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m14_653 -> m14_702  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m14_653 -> m14_703  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m14_653 -> m14_705  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m14_653 -> m14_706  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m14_653 -> m14_707  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m14_653 -> m14_708  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m14_653 -> m14_710  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m14_653 -> m14_711  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m14_653 -> m14_712  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m14_653 -> m14_713  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m14_653 -> m14_714  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m14_653 -> m14_715  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m14_653 -> m14_716  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m14_653 -> m14_717  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m14_653 -> m14_718  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m14_653 -> m14_719  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m14_653 -> m14_720  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m14_654 -> m14_655  [key=0, style=solid];
m14_654 -> m14_570  [key=2, style=dotted];
m14_654 -> m14_656  [color=darkseagreen4, key=1, label=customBinder, style=dashed];
m14_654 -> m14_658  [color=darkseagreen4, key=1, label=customBinder, style=dashed];
m14_654 -> m14_659  [color=darkseagreen4, key=1, label=customBinder, style=dashed];
m14_654 -> m14_660  [color=darkseagreen4, key=1, label=customBinder, style=dashed];
m14_655 -> m14_656  [key=0, style=solid];
m14_656 -> m14_657  [key=0, style=solid];
m14_656 -> m14_10  [key=2, style=dotted];
m14_657 -> m14_658  [key=0, style=solid];
m14_657 -> m14_571  [key=2, style=dotted];
m14_658 -> m14_659  [key=0, style=solid];
m14_659 -> m14_660  [key=0, style=solid];
m14_659 -> m14_10  [key=2, style=dotted];
m14_660 -> m14_661  [key=0, style=solid];
m14_660 -> m14_10  [key=2, style=dotted];
m14_661 -> m14_662  [key=0, style=solid];
m14_662 -> m14_663  [key=0, style=solid];
m14_662 -> m14_10  [key=2, style=dotted];
m14_663 -> m14_664  [key=0, style=solid];
m14_664 -> m14_665  [key=0, style=solid];
m14_664 -> m14_10  [key=2, style=dotted];
m14_665 -> m14_666  [key=0, style=solid];
m14_665 -> m14_572  [key=2, style=dotted];
m14_666 -> m14_667  [key=0, style=solid];
m14_666 -> m14_572  [key=2, style=dotted];
m14_666 -> m14_10  [key=2, style=dotted];
m14_668 -> m14_669  [key=0, style=solid];
m14_669 -> m14_670  [key=0, style=solid];
m14_669 -> m14_10  [key=2, style=dotted];
m14_670 -> m14_671  [key=0, style=solid];
m14_670 -> m14_249  [key=2, style=dotted];
m14_670 -> m14_574  [key=2, style=dotted];
m14_671 -> m14_672  [key=0, style=solid];
m14_671 -> m14_10  [key=2, style=dotted];
m14_672 -> m14_673  [key=0, style=solid];
m14_672 -> m14_575  [key=2, style=dotted];
m14_673 -> m14_674  [key=0, style=solid];
m14_673 -> m14_576  [key=2, style=dotted];
m14_673 -> m14_10  [key=2, style=dotted];
m14_674 -> m14_675  [key=0, style=solid];
m14_675 -> m14_676  [key=0, style=solid];
m14_675 -> m14_10  [key=2, style=dotted];
m14_676 -> m14_677  [key=0, style=solid];
m14_677 -> m14_678  [key=0, style=solid];
m14_677 -> m14_10  [key=2, style=dotted];
m14_678 -> m14_679  [key=0, style=solid];
m14_679 -> m14_680  [key=0, style=solid];
m14_679 -> m14_10  [key=2, style=dotted];
m14_680 -> m14_681  [key=0, style=solid];
m14_681 -> m14_682  [key=0, style=solid];
m14_681 -> m14_10  [key=2, style=dotted];
m14_682 -> m14_683  [key=0, style=solid];
m14_683 -> m14_684  [key=0, style=solid];
m14_683 -> m14_10  [key=2, style=dotted];
m14_684 -> m14_685  [key=0, style=solid];
m14_685 -> m14_686  [key=0, style=solid];
m14_685 -> m14_10  [key=2, style=dotted];
m14_686 -> m14_687  [key=0, style=solid];
m14_687 -> m14_688  [key=0, style=solid];
m14_687 -> m14_10  [key=2, style=dotted];
m14_688 -> m14_689  [key=0, style=solid];
m14_689 -> m14_690  [key=0, style=solid];
m14_689 -> m14_10  [key=2, style=dotted];
m14_690 -> m14_691  [key=0, style=solid];
m14_691 -> m14_692  [key=0, style=solid];
m14_691 -> m14_10  [key=2, style=dotted];
m14_692 -> m14_693  [key=0, style=solid];
m14_693 -> m14_694  [key=0, style=solid];
m14_693 -> m14_10  [key=2, style=dotted];
m14_694 -> m14_695  [key=0, style=solid];
m14_695 -> m14_696  [key=0, style=solid];
m14_695 -> m14_10  [key=2, style=dotted];
m14_696 -> m14_697  [key=0, style=solid];
m14_697 -> m14_698  [key=0, style=solid];
m14_697 -> m14_10  [key=2, style=dotted];
m14_698 -> m14_699  [key=0, style=solid];
m14_699 -> m14_700  [key=0, style=solid];
m14_699 -> m14_10  [key=2, style=dotted];
m14_700 -> m14_701  [key=0, style=solid];
m14_701 -> m14_702  [key=0, style=solid];
m14_701 -> m14_10  [key=2, style=dotted];
m14_702 -> m14_703  [key=0, style=solid];
m14_703 -> m14_704  [key=0, style=solid];
m14_703 -> m14_10  [key=2, style=dotted];
m14_705 -> m14_706  [key=0, style=solid];
m14_706 -> m14_707  [key=0, style=solid];
m14_706 -> m14_10  [key=2, style=dotted];
m14_707 -> m14_708  [key=0, style=solid];
m14_708 -> m14_709  [key=0, style=solid];
m14_708 -> m14_10  [key=2, style=dotted];
m14_710 -> m14_711  [key=0, style=solid];
m14_711 -> m14_712  [key=0, style=solid];
m14_711 -> m14_10  [key=2, style=dotted];
m14_712 -> m14_713  [key=0, style=solid];
m14_713 -> m14_714  [key=0, style=solid];
m14_713 -> m14_10  [key=2, style=dotted];
m14_714 -> m14_715  [key=0, style=solid];
m14_714 -> m14_10  [key=2, style=dotted];
m14_715 -> m14_716  [key=0, style=solid];
m14_716 -> m14_717  [key=0, style=solid];
m14_716 -> m14_10  [key=2, style=dotted];
m14_717 -> m14_718  [key=0, style=solid];
m14_718 -> m14_719  [key=0, style=solid];
m14_718 -> m14_10  [key=2, style=dotted];
m14_719 -> m14_720  [key=0, style=solid];
m14_720 -> m14_721  [key=0, style=solid];
m14_720 -> m14_10  [key=2, style=dotted];
m14_667 -> m14_668  [key=0, style=solid];
m14_667 -> m14_573  [key=2, style=dotted];
m14_667 -> m14_669  [color=darkseagreen4, key=1, label=resolver, style=dashed];
m14_704 -> m14_705  [key=0, style=solid];
m14_704 -> m14_577  [key=2, style=dotted];
m14_704 -> m14_706  [color=darkseagreen4, key=1, label=referenceResolver, style=dashed];
m14_709 -> m14_710  [key=0, style=solid];
m14_709 -> m14_578  [key=2, style=dotted];
m14_709 -> m14_711  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m14_721 -> m14_652  [color=blue, key=0, style=bold];
m14_2857 -> m14_2858  [key=0, style=solid];
m14_2858 -> m14_2859  [key=0, style=solid];
m14_2858 -> m14_2862  [key=2, style=dotted];
m14_2858 -> m14_2863  [key=2, style=dotted];
m14_2859 -> m14_2860  [key=0, style=solid];
m14_2859 -> m14_61  [key=2, style=dotted];
m14_2860 -> m14_2861  [key=0, style=solid];
m14_2860 -> m14_62  [key=2, style=dotted];
m14_2861 -> m14_2857  [color=blue, key=0, style=bold];
m14_4069 -> m14_4070  [key=0, style=solid];
m14_4070 -> m14_4071  [key=0, style=solid];
m14_4070 -> m14_88  [key=2, style=dotted];
m14_4070 -> m14_4072  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_4071 -> m14_4069  [color=blue, key=0, style=bold];
m14_2575 -> m14_2576  [key=0, style=solid];
m14_2576 -> m14_2577  [key=0, style=solid];
m14_2576 -> m14_2580  [key=2, style=dotted];
m14_2577 -> m14_2578  [key=0, style=solid];
m14_2577 -> m14_61  [key=2, style=dotted];
m14_2578 -> m14_2579  [key=0, style=solid];
m14_2578 -> m14_10  [key=2, style=dotted];
m14_2579 -> m14_2575  [color=blue, key=0, style=bold];
m14_2054 -> m14_2055  [color=red, key=0, style=solid];
m14_2054 -> m14_2056  [color=red, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m14_2054 -> m14_2057  [color=red, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m14_2055 -> m14_2056  [color=red, key=0, style=solid];
m14_2055 -> m14_2057  [color=red, key=0, style=solid];
m14_2056 -> m14_2059  [color=red, key=0, style=solid];
m14_2056 -> m14_2060  [color=red, key=2, style=dotted];
m14_2056 -> m14_2061  [color=red, key=2, style=dotted];
m14_2057 -> m14_2058  [color=red, key=0, style=solid];
m14_2057 -> m14_2059  [color=red, key=0, style=solid];
m14_2058 -> m14_2057  [color=red, key=0, style=solid];
m14_2058 -> m14_847  [color=red, key=2, style=dotted];
m14_2058 -> m14_2058  [color=red, key=1, label=entry, style=dashed];
m14_2059 -> m14_2054  [color=blue, key=0, style=bold];
m14_1446 -> m14_1447  [key=0, style=solid];
m14_1447 -> m14_1448  [key=0, style=solid];
m14_1447 -> m14_1447  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_1448 -> m14_1449  [key=0, style=solid];
m14_1448 -> m14_11  [key=2, style=dotted];
m14_1448 -> m14_1450  [color=darkseagreen4, key=1, label=c, style=dashed];
m14_1448 -> m14_1451  [color=darkseagreen4, key=1, label=c, style=dashed];
m14_1449 -> m14_1450  [key=0, style=solid];
m14_1449 -> m14_10  [key=2, style=dotted];
m14_1450 -> m14_1451  [key=0, style=solid];
m14_1450 -> m14_10  [key=2, style=dotted];
m14_1451 -> m14_1452  [key=0, style=solid];
m14_1451 -> m14_10  [key=2, style=dotted];
m14_1452 -> m14_1446  [color=blue, key=0, style=bold];
m14_3175 -> m14_3176  [key=0, style=solid];
m14_3176 -> m14_3177  [key=0, style=solid];
m14_3176 -> m14_210  [key=2, style=dotted];
m14_3176 -> m14_406  [key=2, style=dotted];
m14_3177 -> m14_3178  [key=0, style=solid];
m14_3177 -> m14_61  [key=2, style=dotted];
m14_3177 -> m14_3179  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_3178 -> m14_3179  [key=0, style=solid];
m14_3178 -> m14_62  [key=2, style=dotted];
m14_3179 -> m14_3180  [key=0, style=solid];
m14_3179 -> m14_11  [key=2, style=dotted];
m14_3179 -> m14_3181  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m14_3179 -> m14_3182  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m14_3180 -> m14_3181  [key=0, style=solid];
m14_3180 -> m14_10  [key=2, style=dotted];
m14_3181 -> m14_3182  [key=0, style=solid];
m14_3181 -> m14_406  [key=2, style=dotted];
m14_3181 -> m14_10  [key=2, style=dotted];
m14_3182 -> m14_3183  [key=0, style=solid];
m14_3182 -> m14_406  [key=2, style=dotted];
m14_3182 -> m14_10  [key=2, style=dotted];
m14_3183 -> m14_3175  [color=blue, key=0, style=bold];
m14_3526 -> m14_3527  [key=0, style=solid];
m14_3527 -> m14_3528  [key=0, style=solid];
m14_3527 -> m14_3522  [key=2, style=dotted];
m14_3527 -> m14_3532  [color=darkseagreen4, key=1, label=p, style=dashed];
m14_3528 -> m14_3529  [key=0, style=solid];
m14_3528 -> m14_9  [key=2, style=dotted];
m14_3532 -> m14_3533  [key=0, style=solid];
m14_3532 -> m14_196  [key=2, style=dotted];
m14_3532 -> m14_197  [key=2, style=dotted];
m14_3529 -> m14_3530  [key=0, style=solid];
m14_3529 -> m14_10  [key=2, style=dotted];
m14_3530 -> m14_3531  [key=0, style=solid];
m14_3530 -> m14_1852  [key=2, style=dotted];
m14_3531 -> m14_3532  [key=0, style=solid];
m14_3531 -> m14_3531  [color=darkseagreen4, key=1, label=r, style=dashed];
m14_3533 -> m14_3534  [key=0, style=solid];
m14_3533 -> m14_10  [key=2, style=dotted];
m14_3534 -> m14_3526  [color=blue, key=0, style=bold];
m14_3378 -> m14_3379  [key=0, style=solid];
m14_3379 -> m14_3380  [key=0, style=solid];
m14_3379 -> m14_3382  [key=2, style=dotted];
m14_3379 -> m14_196  [key=2, style=dotted];
m14_3379 -> m14_573  [key=2, style=dotted];
m14_3379 -> m14_212  [key=2, style=dotted];
m14_3380 -> m14_3381  [key=0, style=solid];
m14_3380 -> m14_62  [key=2, style=dotted];
m14_3381 -> m14_3378  [color=blue, key=0, style=bold];
m14_1791 -> m14_1792  [key=0, style=solid];
m14_1792 -> m14_1793  [key=0, style=solid];
m14_1792 -> m14_1796  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_1792 -> m14_1764  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_1793 -> m14_1794  [key=0, style=solid];
m14_1793 -> m14_88  [key=2, style=dotted];
m14_1793 -> m14_1795  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_1794 -> m14_1791  [color=blue, key=0, style=bold];
m14_806 -> m14_807  [key=0, style=solid];
m14_807 -> m14_808  [key=0, style=solid];
m14_807 -> m14_801  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_808 -> m14_809  [key=0, style=solid];
m14_808 -> m14_11  [key=2, style=dotted];
m14_808 -> m14_810  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m14_809 -> m14_810  [key=0, style=solid];
m14_809 -> m14_812  [key=2, style=dotted];
m14_810 -> m14_811  [key=0, style=solid];
m14_810 -> m14_10  [key=2, style=dotted];
m14_811 -> m14_806  [color=blue, key=0, style=bold];
m14_2062 -> m14_2063  [color=red, key=0, style=solid];
m14_2063 -> m14_2064  [color=red, key=0, style=solid];
m14_2063 -> m14_354  [color=red, key=2, style=dotted];
m14_2064 -> m14_2062  [color=blue, key=0, style=bold];
m14_2305 -> m14_2306  [key=0, style=solid];
m14_2306 -> m14_2307  [key=0, style=solid];
m14_2306 -> m14_2306  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_2307 -> m14_2308  [key=0, style=solid];
m14_2307 -> m14_196  [key=2, style=dotted];
m14_2307 -> m14_302  [key=2, style=dotted];
m14_2307 -> m14_2309  [color=darkseagreen4, key=1, label=dic, style=dashed];
m14_2308 -> m14_2309  [key=0, style=solid];
m14_2308 -> m14_405  [key=2, style=dotted];
m14_2308 -> m14_10  [key=2, style=dotted];
m14_2309 -> m14_2310  [key=0, style=solid];
m14_2309 -> m14_10  [key=2, style=dotted];
m14_2310 -> m14_2305  [color=blue, key=0, style=bold];
m14_2436 -> m14_2437  [key=0, style=solid];
m14_2437 -> m14_2438  [key=0, style=solid];
m14_2437 -> m14_11  [key=2, style=dotted];
m14_2438 -> m14_2439  [key=0, style=solid];
m14_2438 -> m14_10  [key=2, style=dotted];
m14_2439 -> m14_2436  [color=blue, key=0, style=bold];
m14_2215 -> m14_2216  [key=0, style=solid];
m14_2216 -> m14_2217  [key=0, style=solid];
m14_2216 -> m14_2227  [key=2, style=dotted];
m14_2216 -> m14_2218  [color=darkseagreen4, key=1, label=testObject, style=dashed];
m14_2216 -> m14_2219  [color=darkseagreen4, key=1, label=testObject, style=dashed];
m14_2216 -> m14_2223  [color=darkseagreen4, key=1, label=testObject, style=dashed];
m14_2216 -> m14_2224  [color=darkseagreen4, key=1, label=testObject, style=dashed];
m14_2217 -> m14_2218  [key=0, style=solid];
m14_2217 -> m14_2228  [key=2, style=dotted];
m14_2218 -> m14_2219  [key=0, style=solid];
m14_2218 -> m14_2228  [key=2, style=dotted];
m14_2219 -> m14_2220  [key=0, style=solid];
m14_2219 -> m14_61  [key=2, style=dotted];
m14_2219 -> m14_2221  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_2219 -> m14_2222  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_2223 -> m14_2224  [key=0, style=solid];
m14_2223 -> m14_2229  [key=2, style=dotted];
m14_2223 -> m14_10  [key=2, style=dotted];
m14_2224 -> m14_2225  [key=0, style=solid];
m14_2224 -> m14_2229  [key=2, style=dotted];
m14_2224 -> m14_10  [key=2, style=dotted];
m14_2220 -> m14_2221  [key=0, style=solid];
m14_2220 -> m14_2220  [color=darkorchid, key=3, label="Local variable string expected", style=bold];
m14_2221 -> m14_2222  [key=0, style=solid];
m14_2221 -> m14_62  [key=2, style=dotted];
m14_2222 -> m14_2223  [key=0, style=solid];
m14_2222 -> m14_11  [key=2, style=dotted];
m14_2222 -> m14_2224  [color=darkseagreen4, key=1, label=newTestObject, style=dashed];
m14_2222 -> m14_2225  [color=darkseagreen4, key=1, label=newTestObject, style=dashed];
m14_2225 -> m14_2226  [key=0, style=solid];
m14_2225 -> m14_173  [key=2, style=dotted];
m14_2226 -> m14_2215  [color=blue, key=0, style=bold];
m14_1002 -> m14_1003  [key=0, style=solid];
m14_1003 -> m14_1004  [key=0, style=solid];
m14_1003 -> m14_1003  [color=darkorchid, key=3, label="Local variable string value", style=bold];
m14_1004 -> m14_1005  [key=0, style=solid];
m14_1004 -> m14_939  [key=2, style=dotted];
m14_1004 -> m14_1006  [color=darkseagreen4, key=1, label=p, style=dashed];
m14_1005 -> m14_1006  [key=0, style=solid];
m14_1005 -> m14_1001  [key=2, style=dotted];
m14_1005 -> m14_10  [key=2, style=dotted];
m14_1006 -> m14_1007  [key=0, style=solid];
m14_1006 -> m14_1001  [key=2, style=dotted];
m14_1006 -> m14_62  [key=2, style=dotted];
m14_1007 -> m14_1002  [color=blue, key=0, style=bold];
m14_2068 -> m14_2069  [color=red, key=0, style=solid];
m14_2069 -> m14_2070  [color=red, key=0, style=solid];
m14_2069 -> m14_2071  [color=red, key=2, style=dotted];
m14_2070 -> m14_2068  [color=blue, key=0, style=bold];
m14_1356 -> m14_1357  [key=0, style=solid];
m14_1357 -> m14_1358  [key=0, style=solid];
m14_1357 -> m14_1366  [key=2, style=dotted];
m14_1357 -> m14_1359  [color=darkseagreen4, key=1, label=c1, style=dashed];
m14_1357 -> m14_1360  [color=darkseagreen4, key=1, label=c1, style=dashed];
m14_1358 -> m14_1359  [key=0, style=solid];
m14_1358 -> m14_1290  [key=2, style=dotted];
m14_1359 -> m14_1360  [key=0, style=solid];
m14_1359 -> m14_1290  [key=2, style=dotted];
m14_1360 -> m14_1361  [key=0, style=solid];
m14_1360 -> m14_1298  [key=2, style=dotted];
m14_1360 -> m14_1299  [key=2, style=dotted];
m14_1360 -> m14_1362  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_1361 -> m14_1362  [key=0, style=solid];
m14_1361 -> m14_10  [key=2, style=dotted];
m14_1362 -> m14_1363  [key=0, style=solid];
m14_1362 -> m14_1298  [key=2, style=dotted];
m14_1362 -> m14_250  [key=2, style=dotted];
m14_1362 -> m14_1364  [color=darkseagreen4, key=1, label=c2, style=dashed];
m14_1363 -> m14_1364  [key=0, style=solid];
m14_1363 -> m14_10  [key=2, style=dotted];
m14_1364 -> m14_1365  [key=0, style=solid];
m14_1364 -> m14_10  [key=2, style=dotted];
m14_1365 -> m14_1356  [color=blue, key=0, style=bold];
m14_1853 -> m14_1854  [key=0, style=solid];
m14_1854 -> m14_1855  [key=0, style=solid];
m14_1854 -> m14_1093  [key=2, style=dotted];
m14_1854 -> m14_1856  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_1855 -> m14_1853  [color=blue, key=0, style=bold];
m14_3096 -> m14_3097  [key=0, style=solid];
m14_3097 -> m14_3098  [key=0, style=solid];
m14_3097 -> m14_849  [key=2, style=dotted];
m14_3097 -> m14_3102  [color=darkseagreen4, key=1, label=ms, style=dashed];
m14_3098 -> m14_3099  [key=0, style=solid];
m14_3098 -> m14_3109  [key=2, style=dotted];
m14_3098 -> m14_3100  [color=darkseagreen4, key=1, label=writer, style=dashed];
m14_3098 -> m14_3101  [color=darkseagreen4, key=1, label=writer, style=dashed];
m14_3102 -> m14_3103  [key=0, style=solid];
m14_3102 -> m14_919  [key=2, style=dotted];
m14_3099 -> m14_3100  [key=0, style=solid];
m14_3099 -> m14_3110  [key=2, style=dotted];
m14_3100 -> m14_3101  [key=0, style=solid];
m14_3100 -> m14_3111  [key=2, style=dotted];
m14_3101 -> m14_3102  [key=0, style=solid];
m14_3101 -> m14_3112  [key=2, style=dotted];
m14_3103 -> m14_3104  [key=0, style=solid];
m14_3103 -> m14_3113  [key=2, style=dotted];
m14_3103 -> m14_1078  [key=2, style=dotted];
m14_3104 -> m14_3105  [key=0, style=solid];
m14_3104 -> m14_3114  [key=2, style=dotted];
m14_3104 -> m14_3107  [color=darkseagreen4, key=1, label=a, style=dashed];
m14_3105 -> m14_3106  [key=0, style=solid];
m14_3107 -> m14_3108  [key=0, style=solid];
m14_3107 -> m14_785  [key=2, style=dotted];
m14_3107 -> m14_62  [key=2, style=dotted];
m14_3106 -> m14_3107  [key=0, style=solid];
m14_3106 -> m14_405  [key=2, style=dotted];
m14_3106 -> m14_10  [key=2, style=dotted];
m14_3108 -> m14_3096  [color=blue, key=0, style=bold];
m14_1380 -> m14_1381  [key=0, style=solid];
m14_1381 -> m14_1382  [key=0, style=solid];
m14_1382 -> m14_1383  [key=0, style=solid];
m14_1382 -> m14_9  [key=2, style=dotted];
m14_1383 -> m14_1384  [key=0, style=solid];
m14_1383 -> m14_10  [key=2, style=dotted];
m14_1384 -> m14_1385  [key=0, style=solid];
m14_1384 -> m14_9  [key=2, style=dotted];
m14_1385 -> m14_1386  [key=0, style=solid];
m14_1385 -> m14_10  [key=2, style=dotted];
m14_1386 -> m14_1380  [color=blue, key=0, style=bold];
m14_1703 -> m14_1704  [key=0, style=solid];
m14_1704 -> m14_1705  [key=0, style=solid];
m14_1704 -> m14_1708  [key=2, style=dotted];
m14_1704 -> m14_300  [key=2, style=dotted];
m14_1705 -> m14_1706  [key=0, style=solid];
m14_1705 -> m14_61  [key=2, style=dotted];
m14_1706 -> m14_1707  [key=0, style=solid];
m14_1706 -> m14_62  [key=2, style=dotted];
m14_1707 -> m14_1703  [color=blue, key=0, style=bold];
m14_3587 -> m14_3588  [key=0, style=solid];
m14_3588 -> m14_3589  [key=0, style=solid];
m14_3588 -> m14_3588  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_3589 -> m14_3590  [key=0, style=solid];
m14_3589 -> m14_11  [key=2, style=dotted];
m14_3590 -> m14_3591  [key=0, style=solid];
m14_3590 -> m14_10  [key=2, style=dotted];
m14_3591 -> m14_3587  [color=blue, key=0, style=bold];
m14_2119 -> m14_2120  [key=0, style=solid];
m14_2120 -> m14_2121  [key=0, style=solid];
m14_2120 -> m14_1515  [key=2, style=dotted];
m14_2120 -> m14_2122  [color=darkseagreen4, key=1, label=person, style=dashed];
m14_2120 -> m14_2123  [color=darkseagreen4, key=1, label=person, style=dashed];
m14_2120 -> m14_2124  [color=darkseagreen4, key=1, label=person, style=dashed];
m14_2120 -> m14_2128  [color=darkseagreen4, key=1, label=person, style=dashed];
m14_2121 -> m14_2122  [key=0, style=solid];
m14_2121 -> m14_1105  [key=2, style=dotted];
m14_2122 -> m14_2123  [key=0, style=solid];
m14_2123 -> m14_2124  [key=0, style=solid];
m14_2124 -> m14_2125  [key=0, style=solid];
m14_2128 -> m14_2129  [key=0, style=solid];
m14_2128 -> m14_2139  [key=2, style=dotted];
m14_2125 -> m14_2126  [key=0, style=solid];
m14_2125 -> m14_406  [key=2, style=dotted];
m14_2125 -> m14_1113  [key=2, style=dotted];
m14_2125 -> m14_2128  [color=darkseagreen4, key=1, label=dateTimeOffset, style=dashed];
m14_2125 -> m14_2134  [color=darkseagreen4, key=1, label=dateTimeOffset, style=dashed];
m14_2126 -> m14_2127  [key=0, style=solid];
m14_2134 -> m14_2135  [key=0, style=solid];
m14_2134 -> m14_10  [key=2, style=dotted];
m14_2127 -> m14_2128  [key=0, style=solid];
m14_2127 -> m14_2130  [color=darkseagreen4, key=1, label=dateTimeOffsetText, style=dashed];
m14_2130 -> m14_2131  [key=0, style=solid];
m14_2130 -> m14_62  [key=2, style=dotted];
m14_2129 -> m14_2130  [key=0, style=solid];
m14_2129 -> m14_61  [key=2, style=dotted];
m14_2129 -> m14_2131  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_2131 -> m14_2132  [key=0, style=solid];
m14_2131 -> m14_11  [key=2, style=dotted];
m14_2131 -> m14_2133  [color=darkseagreen4, key=1, label=o2, style=dashed];
m14_2131 -> m14_2134  [color=darkseagreen4, key=1, label=o2, style=dashed];
m14_2131 -> m14_2135  [color=darkseagreen4, key=1, label=o2, style=dashed];
m14_2131 -> m14_2136  [color=darkseagreen4, key=1, label=o2, style=dashed];
m14_2131 -> m14_2137  [color=darkseagreen4, key=1, label=o2, style=dashed];
m14_2132 -> m14_2133  [key=0, style=solid];
m14_2132 -> m14_10  [key=2, style=dotted];
m14_2133 -> m14_2134  [key=0, style=solid];
m14_2133 -> m14_10  [key=2, style=dotted];
m14_2135 -> m14_2136  [key=0, style=solid];
m14_2135 -> m14_10  [key=2, style=dotted];
m14_2136 -> m14_2137  [key=0, style=solid];
m14_2136 -> m14_10  [key=2, style=dotted];
m14_2137 -> m14_2138  [key=0, style=solid];
m14_2137 -> m14_10  [key=2, style=dotted];
m14_2138 -> m14_2119  [color=blue, key=0, style=bold];
m14_2839 -> m14_2840  [key=0, style=solid];
m14_2840 -> m14_2841  [key=0, style=solid];
m14_2840 -> m14_2849  [key=2, style=dotted];
m14_2840 -> m14_2842  [color=darkseagreen4, key=1, label=b, style=dashed];
m14_2840 -> m14_2844  [color=darkseagreen4, key=1, label=b, style=dashed];
m14_2841 -> m14_2842  [key=0, style=solid];
m14_2842 -> m14_2843  [key=0, style=solid];
m14_2842 -> m14_2840  [color=darkorchid, key=3, label="Local variable Newtonsoft.Json.Tests.TestObjects.Aa a", style=bold];
m14_2844 -> m14_2845  [key=0, style=solid];
m14_2844 -> m14_9  [key=2, style=dotted];
m14_2844 -> m14_2846  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_2843 -> m14_2844  [key=0, style=solid];
m14_2845 -> m14_2846  [key=0, style=solid];
m14_2845 -> m14_10  [key=2, style=dotted];
m14_2846 -> m14_2847  [key=0, style=solid];
m14_2846 -> m14_11  [key=2, style=dotted];
m14_2847 -> m14_2848  [key=0, style=solid];
m14_2847 -> m14_10  [key=2, style=dotted];
m14_2848 -> m14_2839  [color=blue, key=0, style=bold];
m14_1437 -> m14_1438  [key=0, style=solid];
m14_1438 -> m14_1439  [key=0, style=solid];
m14_1438 -> m14_1445  [key=2, style=dotted];
m14_1438 -> m14_1105  [key=2, style=dotted];
m14_1439 -> m14_1440  [key=0, style=solid];
m14_1439 -> m14_61  [key=2, style=dotted];
m14_1439 -> m14_1441  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_1440 -> m14_1441  [key=0, style=solid];
m14_1440 -> m14_62  [key=2, style=dotted];
m14_1441 -> m14_1442  [key=0, style=solid];
m14_1441 -> m14_11  [key=2, style=dotted];
m14_1441 -> m14_1443  [color=darkseagreen4, key=1, label=c2, style=dashed];
m14_1442 -> m14_1443  [key=0, style=solid];
m14_1442 -> m14_10  [key=2, style=dotted];
m14_1443 -> m14_1444  [key=0, style=solid];
m14_1443 -> m14_1105  [key=2, style=dotted];
m14_1443 -> m14_10  [key=2, style=dotted];
m14_1444 -> m14_1437  [color=blue, key=0, style=bold];
m14_4063 -> m14_4064  [key=0, style=solid];
m14_4064 -> m14_4065  [key=0, style=solid];
m14_4064 -> m14_88  [key=2, style=dotted];
m14_4064 -> m14_4066  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_4065 -> m14_4063  [color=blue, key=0, style=bold];
m14_2009 -> m14_2010  [key=0, style=solid];
m14_2010 -> m14_2011  [key=0, style=solid];
m14_2010 -> m14_2014  [key=2, style=dotted];
m14_2011 -> m14_2012  [key=0, style=solid];
m14_2011 -> m14_61  [key=2, style=dotted];
m14_2012 -> m14_2013  [key=0, style=solid];
m14_2012 -> m14_62  [key=2, style=dotted];
m14_2013 -> m14_2009  [color=blue, key=0, style=bold];
m14_1604 -> m14_1605  [key=0, style=solid];
m14_1605 -> m14_1606  [key=0, style=solid];
m14_1606 -> m14_1607  [key=0, style=solid];
m14_1606 -> m14_88  [key=2, style=dotted];
m14_1606 -> m14_1608  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_1607 -> m14_1604  [color=blue, key=0, style=bold];
m14_1453 -> m14_1454  [key=0, style=solid];
m14_1454 -> m14_1455  [key=0, style=solid];
m14_1454 -> m14_1454  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_1455 -> m14_1456  [key=0, style=solid];
m14_1455 -> m14_11  [key=2, style=dotted];
m14_1456 -> m14_1457  [key=0, style=solid];
m14_1456 -> m14_1459  [key=0, style=solid];
m14_1456 -> m14_48  [key=2, style=dotted];
m14_1457 -> m14_1458  [key=0, style=solid];
m14_1458 -> m14_1459  [key=0, style=solid];
m14_1458 -> m14_1460  [key=2, style=dotted];
m14_1458 -> m14_49  [key=2, style=dotted];
m14_1459 -> m14_1453  [color=blue, key=0, style=bold];
m14_317 -> m14_318  [key=0, style=solid];
m14_318 -> m14_319  [key=0, style=solid];
m14_318 -> m14_4077  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImmutableStructWithConstructorAttribute", style=dashed];
m14_319 -> m14_317  [color=blue, key=0, style=bold];
m14_3451 -> m14_3452  [key=0, style=solid];
m14_3452 -> m14_3453  [key=0, style=solid];
m14_3452 -> m14_575  [key=2, style=dotted];
m14_3452 -> m14_3454  [color=darkseagreen4, key=1, label=culture, style=dashed];
m14_3452 -> m14_3456  [color=darkseagreen4, key=1, label=culture, style=dashed];
m14_3453 -> m14_3454  [key=0, style=solid];
m14_3454 -> m14_3455  [key=0, style=solid];
m14_3456 -> m14_3457  [key=0, style=solid];
m14_3456 -> m14_196  [key=2, style=dotted];
m14_3456 -> m14_212  [key=2, style=dotted];
m14_3455 -> m14_3456  [key=0, style=solid];
m14_3455 -> m14_300  [key=2, style=dotted];
m14_3455 -> m14_1105  [key=2, style=dotted];
m14_3455 -> m14_406  [key=2, style=dotted];
m14_3455 -> m14_1113  [key=2, style=dotted];
m14_3457 -> m14_3458  [key=0, style=solid];
m14_3457 -> m14_62  [key=2, style=dotted];
m14_3458 -> m14_3451  [color=blue, key=0, style=bold];
m14_192 -> m14_193  [key=0, style=solid];
m14_193 -> m14_194  [key=0, style=solid];
m14_193 -> m14_191  [key=2, style=dotted];
m14_193 -> m14_196  [key=2, style=dotted];
m14_193 -> m14_197  [key=2, style=dotted];
m14_194 -> m14_195  [key=0, style=solid];
m14_194 -> m14_10  [key=2, style=dotted];
m14_195 -> m14_192  [color=blue, key=0, style=bold];
m14_2065 -> m14_2066  [color=red, key=0, style=solid];
m14_2065 -> m14_2112  [color=darkorchid, key=3, label="Parameter variable T value", style=bold];
m14_2066 -> m14_2067  [color=red, key=0, style=solid];
m14_2066 -> m14_847  [color=red, key=2, style=dotted];
m14_2067 -> m14_2065  [color=blue, key=0, style=bold];
m14_1900 -> m14_1901  [key=0, style=solid];
m14_1901 -> m14_1902  [key=0, style=solid];
m14_1901 -> m14_1913  [key=2, style=dotted];
m14_1901 -> m14_1903  [color=darkseagreen4, key=1, label=f, style=dashed];
m14_1901 -> m14_1904  [color=darkseagreen4, key=1, label=f, style=dashed];
m14_1901 -> m14_1905  [color=darkseagreen4, key=1, label=f, style=dashed];
m14_1902 -> m14_1903  [key=0, style=solid];
m14_1902 -> m14_1914  [key=2, style=dotted];
m14_1902 -> m14_1879  [key=2, style=dotted];
m14_1903 -> m14_1904  [key=0, style=solid];
m14_1903 -> m14_1914  [key=2, style=dotted];
m14_1903 -> m14_1879  [key=2, style=dotted];
m14_1904 -> m14_1905  [key=0, style=solid];
m14_1904 -> m14_1914  [key=2, style=dotted];
m14_1904 -> m14_1879  [key=2, style=dotted];
m14_1905 -> m14_1906  [key=0, style=solid];
m14_1905 -> m14_61  [key=2, style=dotted];
m14_1905 -> m14_1907  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_1906 -> m14_1907  [key=0, style=solid];
m14_1906 -> m14_62  [key=2, style=dotted];
m14_1907 -> m14_1908  [key=0, style=solid];
m14_1907 -> m14_11  [key=2, style=dotted];
m14_1907 -> m14_1909  [color=darkseagreen4, key=1, label=newFoo, style=dashed];
m14_1907 -> m14_1910  [color=darkseagreen4, key=1, label=newFoo, style=dashed];
m14_1907 -> m14_1911  [color=darkseagreen4, key=1, label=newFoo, style=dashed];
m14_1908 -> m14_1909  [key=0, style=solid];
m14_1908 -> m14_10  [key=2, style=dotted];
m14_1909 -> m14_1910  [key=0, style=solid];
m14_1909 -> m14_10  [key=2, style=dotted];
m14_1910 -> m14_1911  [key=0, style=solid];
m14_1910 -> m14_10  [key=2, style=dotted];
m14_1911 -> m14_1912  [key=0, style=solid];
m14_1911 -> m14_10  [key=2, style=dotted];
m14_1912 -> m14_1900  [color=blue, key=0, style=bold];
m14_1422 -> m14_1423  [key=0, style=solid];
m14_1423 -> m14_1424  [key=0, style=solid];
m14_1423 -> m14_1426  [color=darkseagreen4, key=1, label=boolRef, style=dashed];
m14_1424 -> m14_1425  [key=0, style=solid];
m14_1424 -> m14_1436  [key=2, style=dotted];
m14_1426 -> m14_1427  [key=0, style=solid];
m14_1426 -> m14_10  [key=2, style=dotted];
m14_1425 -> m14_1426  [key=0, style=solid];
m14_1425 -> m14_9  [key=2, style=dotted];
m14_1425 -> m14_1427  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_1427 -> m14_1428  [key=0, style=solid];
m14_1427 -> m14_11  [key=2, style=dotted];
m14_1428 -> m14_1429  [key=0, style=solid];
m14_1428 -> m14_10  [key=2, style=dotted];
m14_1429 -> m14_1430  [key=0, style=solid];
m14_1429 -> m14_1432  [color=darkseagreen4, key=1, label=jsonSerializerTestRef, style=dashed];
m14_1430 -> m14_1431  [key=0, style=solid];
m14_1430 -> m14_1436  [key=2, style=dotted];
m14_1432 -> m14_1433  [key=0, style=solid];
m14_1432 -> m14_10  [key=2, style=dotted];
m14_1431 -> m14_1432  [key=0, style=solid];
m14_1431 -> m14_9  [key=2, style=dotted];
m14_1431 -> m14_1433  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_1433 -> m14_1434  [key=0, style=solid];
m14_1433 -> m14_11  [key=2, style=dotted];
m14_1434 -> m14_1435  [key=0, style=solid];
m14_1434 -> m14_10  [key=2, style=dotted];
m14_1435 -> m14_1422  [color=blue, key=0, style=bold];
m14_104 -> m14_105  [key=0, style=solid];
m14_105 -> m14_106  [key=0, style=solid];
m14_105 -> m14_88  [key=2, style=dotted];
m14_105 -> m14_107  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_106 -> m14_104  [color=blue, key=0, style=bold];
m14_3784 -> m14_3785  [color=red, key=0, style=solid];
m14_3785 -> m14_3786  [color=red, key=0, style=solid];
m14_3785 -> m14_3750  [color=red, key=2, style=dotted];
m14_3786 -> m14_3784  [color=blue, key=0, style=bold];
m14_3464 -> m14_3465  [key=0, style=solid];
m14_3465 -> m14_3466  [key=0, style=solid];
m14_3465 -> m14_575  [key=2, style=dotted];
m14_3465 -> m14_3467  [color=darkseagreen4, key=1, label=culture, style=dashed];
m14_3465 -> m14_3471  [color=darkseagreen4, key=1, label=culture, style=dashed];
m14_3466 -> m14_3467  [key=0, style=solid];
m14_3467 -> m14_3468  [key=0, style=solid];
m14_3471 -> m14_3472  [key=0, style=solid];
m14_3471 -> m14_196  [key=2, style=dotted];
m14_3471 -> m14_848  [key=2, style=dotted];
m14_3468 -> m14_3469  [key=0, style=solid];
m14_3468 -> m14_300  [key=2, style=dotted];
m14_3468 -> m14_1105  [key=2, style=dotted];
m14_3468 -> m14_406  [key=2, style=dotted];
m14_3468 -> m14_1113  [key=2, style=dotted];
m14_3468 -> m14_3472  [color=darkseagreen4, key=1, label=dates, style=dashed];
m14_3469 -> m14_3470  [key=0, style=solid];
m14_3469 -> m14_2740  [key=2, style=dotted];
m14_3469 -> m14_3476  [color=darkseagreen4, key=1, label=sw, style=dashed];
m14_3472 -> m14_3473  [key=0, style=solid];
m14_3472 -> m14_2777  [key=2, style=dotted];
m14_3470 -> m14_3471  [key=0, style=solid];
m14_3470 -> m14_2741  [key=2, style=dotted];
m14_3470 -> m14_3472  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m14_3470 -> m14_3473  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m14_3470 -> m14_3474  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m14_3470 -> m14_3475  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m14_3476 -> m14_3477  [key=0, style=solid];
m14_3476 -> m14_2745  [key=2, style=dotted];
m14_3473 -> m14_3474  [key=0, style=solid];
m14_3473 -> m14_173  [key=2, style=dotted];
m14_3474 -> m14_3475  [key=0, style=solid];
m14_3474 -> m14_10  [key=2, style=dotted];
m14_3475 -> m14_3476  [key=0, style=solid];
m14_3475 -> m14_10  [key=2, style=dotted];
m14_3477 -> m14_3478  [key=0, style=solid];
m14_3477 -> m14_62  [key=2, style=dotted];
m14_3478 -> m14_3464  [color=blue, key=0, style=bold];
m14_377 -> m14_378  [key=0, style=solid];
m14_378 -> m14_379  [key=0, style=solid];
m14_378 -> m14_386  [key=2, style=dotted];
m14_379 -> m14_380  [key=0, style=solid];
m14_379 -> m14_9  [key=2, style=dotted];
m14_379 -> m14_381  [color=darkseagreen4, key=1, label=output, style=dashed];
m14_380 -> m14_381  [key=0, style=solid];
m14_380 -> m14_10  [key=2, style=dotted];
m14_381 -> m14_382  [key=0, style=solid];
m14_381 -> m14_11  [key=2, style=dotted];
m14_381 -> m14_383  [color=darkseagreen4, key=1, label=c2, style=dashed];
m14_381 -> m14_384  [color=darkseagreen4, key=1, label=c2, style=dashed];
m14_382 -> m14_383  [key=0, style=solid];
m14_382 -> m14_10  [key=2, style=dotted];
m14_383 -> m14_384  [key=0, style=solid];
m14_383 -> m14_10  [key=2, style=dotted];
m14_384 -> m14_385  [key=0, style=solid];
m14_384 -> m14_10  [key=2, style=dotted];
m14_385 -> m14_377  [color=blue, key=0, style=bold];
m14_1770 -> m14_1771  [key=0, style=solid];
m14_1771 -> m14_1772  [key=0, style=solid];
m14_1771 -> m14_1775  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_1771 -> m14_1764  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_1772 -> m14_1773  [key=0, style=solid];
m14_1772 -> m14_88  [key=2, style=dotted];
m14_1772 -> m14_1774  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_1773 -> m14_1770  [color=blue, key=0, style=bold];
m14_2646 -> m14_2647  [key=0, style=solid];
m14_2647 -> m14_2648  [key=0, style=solid];
m14_2647 -> m14_2658  [key=2, style=dotted];
m14_2647 -> m14_2649  [color=darkseagreen4, key=1, label=c1, style=dashed];
m14_2647 -> m14_2650  [color=darkseagreen4, key=1, label=c1, style=dashed];
m14_2647 -> m14_2653  [color=darkseagreen4, key=1, label=c1, style=dashed];
m14_2647 -> m14_2654  [color=darkseagreen4, key=1, label=c1, style=dashed];
m14_2648 -> m14_2649  [key=0, style=solid];
m14_2648 -> m14_2659  [key=2, style=dotted];
m14_2649 -> m14_2650  [key=0, style=solid];
m14_2649 -> m14_2659  [key=2, style=dotted];
m14_2650 -> m14_2651  [key=0, style=solid];
m14_2650 -> m14_61  [key=2, style=dotted];
m14_2650 -> m14_2652  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_2653 -> m14_2654  [key=0, style=solid];
m14_2653 -> m14_10  [key=2, style=dotted];
m14_2654 -> m14_2655  [key=0, style=solid];
m14_2654 -> m14_10  [key=2, style=dotted];
m14_2651 -> m14_2652  [key=0, style=solid];
m14_2651 -> m14_62  [key=2, style=dotted];
m14_2652 -> m14_2653  [key=0, style=solid];
m14_2652 -> m14_11  [key=2, style=dotted];
m14_2652 -> m14_2654  [color=darkseagreen4, key=1, label=c2, style=dashed];
m14_2652 -> m14_2655  [color=darkseagreen4, key=1, label=c2, style=dashed];
m14_2652 -> m14_2656  [color=darkseagreen4, key=1, label=c2, style=dashed];
m14_2655 -> m14_2656  [key=0, style=solid];
m14_2655 -> m14_10  [key=2, style=dotted];
m14_2656 -> m14_2657  [key=0, style=solid];
m14_2656 -> m14_10  [key=2, style=dotted];
m14_2657 -> m14_2646  [color=blue, key=0, style=bold];
m14_3329 -> m14_3330  [key=0, style=solid];
m14_3330 -> m14_3331  [key=0, style=solid];
m14_3330 -> m14_3332  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_3330 -> m14_3330  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_3331 -> m14_3332  [key=0, style=solid];
m14_3331 -> m14_46  [key=2, style=dotted];
m14_3331 -> m14_3333  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_3332 -> m14_3333  [key=0, style=solid];
m14_3332 -> m14_43  [key=2, style=dotted];
m14_3332 -> m14_403  [key=2, style=dotted];
m14_3333 -> m14_3334  [key=0, style=solid];
m14_3333 -> m14_2353  [key=2, style=dotted];
m14_3334 -> m14_3335  [key=0, style=solid];
m14_3334 -> m14_10  [key=2, style=dotted];
m14_3335 -> m14_3329  [color=blue, key=0, style=bold];
m14_3638 -> m14_3639  [color=red, key=0, style=solid];
m14_3638 -> m14_3641  [color=red, key=1, label="System.ComponentModel.ITypeDescriptorContext", style=dashed];
m14_3638 -> m14_3645  [color=red, key=1, label="System.Globalization.CultureInfo", style=dashed];
m14_3638 -> m14_3652  [color=red, key=1, label="System.ComponentModel.ITypeDescriptorContext", style=dashed];
m14_3638 -> m14_1160  [color=darkorchid, key=3, label="method methodReturn object ConvertFrom", style=bold];
m14_3639 -> m14_3640  [color=red, key=0, style=solid];
m14_3639 -> m14_3642  [color=red, key=1, label=str, style=dashed];
m14_3641 -> m14_3657  [color=red, key=0, style=solid];
m14_3641 -> m14_3658  [color=red, key=2, style=dotted];
m14_3645 -> m14_3646  [color=red, key=0, style=solid];
m14_3645 -> m14_3647  [color=red, key=0, style=solid];
m14_3652 -> m14_3653  [color=red, key=0, style=solid];
m14_3652 -> m14_3662  [color=red, key=2, style=dotted];
m14_3640 -> m14_3641  [color=red, key=0, style=solid];
m14_3640 -> m14_3642  [color=red, key=0, style=solid];
m14_3642 -> m14_3643  [color=red, key=0, style=solid];
m14_3642 -> m14_3659  [color=red, key=2, style=dotted];
m14_3642 -> m14_3647  [color=red, key=1, label=str2, style=dashed];
m14_3643 -> m14_3644  [color=red, key=0, style=solid];
m14_3643 -> m14_3645  [color=red, key=0, style=solid];
m14_3647 -> m14_3648  [color=red, key=0, style=solid];
m14_3647 -> m14_3660  [color=red, key=2, style=dotted];
m14_3647 -> m14_3652  [color=red, key=1, label=strArray, style=dashed];
m14_3644 -> m14_3657  [color=red, key=0, style=solid];
m14_3646 -> m14_3647  [color=red, key=0, style=solid];
m14_3646 -> m14_3652  [color=red, key=1, label="System.Globalization.CultureInfo", style=dashed];
m14_3648 -> m14_3649  [color=red, key=0, style=solid];
m14_3648 -> m14_3651  [color=red, key=1, label=numArray, style=dashed];
m14_3648 -> m14_3652  [color=red, key=1, label=numArray, style=dashed];
m14_3648 -> m14_3654  [color=red, key=1, label=numArray, style=dashed];
m14_3648 -> m14_3655  [color=red, key=1, label=numArray, style=dashed];
m14_3649 -> m14_3650  [color=red, key=0, style=solid];
m14_3649 -> m14_3661  [color=red, key=2, style=dotted];
m14_3649 -> m14_3652  [color=red, key=1, label=converter, style=dashed];
m14_3651 -> m14_3652  [color=red, key=0, style=solid];
m14_3651 -> m14_3654  [color=red, key=0, style=solid];
m14_3651 -> m14_112  [color=red, key=3, label="Local variable int i", style=bold];
m14_3654 -> m14_3655  [color=red, key=0, style=solid];
m14_3654 -> m14_3656  [color=red, key=0, style=solid];
m14_3655 -> m14_3657  [color=red, key=0, style=solid];
m14_3655 -> m14_3626  [color=red, key=2, style=dotted];
m14_3650 -> m14_3651  [color=red, key=0, style=solid];
m14_3650 -> m14_3652  [color=red, key=1, label=i, style=dashed];
m14_3650 -> m14_3653  [color=red, key=1, label=i, style=dashed];
m14_3653 -> m14_3651  [color=red, key=0, style=solid];
m14_3653 -> m14_3653  [color=red, key=1, label=i, style=dashed];
m14_3656 -> m14_3657  [color=red, key=0, style=solid];
m14_3656 -> m14_3663  [color=red, key=2, style=dotted];
m14_3657 -> m14_3638  [color=blue, key=0, style=bold];
m14_2182 -> m14_2183  [key=0, style=solid];
m14_2183 -> m14_2184  [key=0, style=solid];
m14_2183 -> m14_11  [key=2, style=dotted];
m14_2183 -> m14_2185  [color=darkseagreen4, key=1, label=myA, style=dashed];
m14_2183 -> m14_2186  [color=darkseagreen4, key=1, label=myA, style=dashed];
m14_2183 -> m14_2187  [color=darkseagreen4, key=1, label=myA, style=dashed];
m14_2183 -> m14_2188  [color=darkseagreen4, key=1, label=myA, style=dashed];
m14_2183 -> m14_2189  [color=darkseagreen4, key=1, label=myA, style=dashed];
m14_2183 -> m14_2190  [color=darkseagreen4, key=1, label=myA, style=dashed];
m14_2183 -> m14_2191  [color=darkseagreen4, key=1, label=myA, style=dashed];
m14_2184 -> m14_2185  [key=0, style=solid];
m14_2184 -> m14_2212  [key=2, style=dotted];
m14_2184 -> m14_2213  [key=2, style=dotted];
m14_2184 -> m14_10  [key=2, style=dotted];
m14_2185 -> m14_2186  [key=0, style=solid];
m14_2185 -> m14_2212  [key=2, style=dotted];
m14_2185 -> m14_2213  [key=2, style=dotted];
m14_2185 -> m14_10  [key=2, style=dotted];
m14_2186 -> m14_2187  [key=0, style=solid];
m14_2186 -> m14_2214  [key=2, style=dotted];
m14_2186 -> m14_2213  [key=2, style=dotted];
m14_2186 -> m14_10  [key=2, style=dotted];
m14_2187 -> m14_2188  [key=0, style=solid];
m14_2187 -> m14_2214  [key=2, style=dotted];
m14_2187 -> m14_2213  [key=2, style=dotted];
m14_2187 -> m14_10  [key=2, style=dotted];
m14_2188 -> m14_2189  [key=0, style=solid];
m14_2188 -> m14_2214  [key=2, style=dotted];
m14_2188 -> m14_2213  [key=2, style=dotted];
m14_2188 -> m14_10  [key=2, style=dotted];
m14_2189 -> m14_2190  [key=0, style=solid];
m14_2189 -> m14_2214  [key=2, style=dotted];
m14_2189 -> m14_2213  [key=2, style=dotted];
m14_2189 -> m14_10  [key=2, style=dotted];
m14_2190 -> m14_2191  [key=0, style=solid];
m14_2190 -> m14_2214  [key=2, style=dotted];
m14_2190 -> m14_2213  [key=2, style=dotted];
m14_2190 -> m14_10  [key=2, style=dotted];
m14_2191 -> m14_2192  [key=0, style=solid];
m14_2191 -> m14_2214  [key=2, style=dotted];
m14_2191 -> m14_2213  [key=2, style=dotted];
m14_2191 -> m14_10  [key=2, style=dotted];
m14_2192 -> m14_2193  [key=0, style=solid];
m14_2192 -> m14_11  [key=2, style=dotted];
m14_2192 -> m14_2194  [color=darkseagreen4, key=1, label=myB, style=dashed];
m14_2192 -> m14_2195  [color=darkseagreen4, key=1, label=myB, style=dashed];
m14_2192 -> m14_2196  [color=darkseagreen4, key=1, label=myB, style=dashed];
m14_2192 -> m14_2197  [color=darkseagreen4, key=1, label=myB, style=dashed];
m14_2192 -> m14_2198  [color=darkseagreen4, key=1, label=myB, style=dashed];
m14_2192 -> m14_2199  [color=darkseagreen4, key=1, label=myB, style=dashed];
m14_2192 -> m14_2200  [color=darkseagreen4, key=1, label=myB, style=dashed];
m14_2192 -> m14_2201  [color=darkseagreen4, key=1, label=myB, style=dashed];
m14_2192 -> m14_2202  [color=darkseagreen4, key=1, label=myB, style=dashed];
m14_2192 -> m14_2203  [color=darkseagreen4, key=1, label=myB, style=dashed];
m14_2192 -> m14_2204  [color=darkseagreen4, key=1, label=myB, style=dashed];
m14_2192 -> m14_2205  [color=darkseagreen4, key=1, label=myB, style=dashed];
m14_2192 -> m14_2206  [color=darkseagreen4, key=1, label=myB, style=dashed];
m14_2192 -> m14_2207  [color=darkseagreen4, key=1, label=myB, style=dashed];
m14_2192 -> m14_2208  [color=darkseagreen4, key=1, label=myB, style=dashed];
m14_2192 -> m14_2209  [color=darkseagreen4, key=1, label=myB, style=dashed];
m14_2192 -> m14_2210  [color=darkseagreen4, key=1, label=myB, style=dashed];
m14_2193 -> m14_2194  [key=0, style=solid];
m14_2193 -> m14_2212  [key=2, style=dotted];
m14_2193 -> m14_2213  [key=2, style=dotted];
m14_2193 -> m14_10  [key=2, style=dotted];
m14_2194 -> m14_2195  [key=0, style=solid];
m14_2194 -> m14_2212  [key=2, style=dotted];
m14_2194 -> m14_2213  [key=2, style=dotted];
m14_2194 -> m14_10  [key=2, style=dotted];
m14_2195 -> m14_2196  [key=0, style=solid];
m14_2195 -> m14_2214  [key=2, style=dotted];
m14_2195 -> m14_2213  [key=2, style=dotted];
m14_2195 -> m14_10  [key=2, style=dotted];
m14_2196 -> m14_2197  [key=0, style=solid];
m14_2196 -> m14_2214  [key=2, style=dotted];
m14_2196 -> m14_2213  [key=2, style=dotted];
m14_2196 -> m14_10  [key=2, style=dotted];
m14_2197 -> m14_2198  [key=0, style=solid];
m14_2197 -> m14_2214  [key=2, style=dotted];
m14_2197 -> m14_2213  [key=2, style=dotted];
m14_2197 -> m14_10  [key=2, style=dotted];
m14_2198 -> m14_2199  [key=0, style=solid];
m14_2198 -> m14_2214  [key=2, style=dotted];
m14_2198 -> m14_2213  [key=2, style=dotted];
m14_2198 -> m14_10  [key=2, style=dotted];
m14_2199 -> m14_2200  [key=0, style=solid];
m14_2199 -> m14_2214  [key=2, style=dotted];
m14_2199 -> m14_2213  [key=2, style=dotted];
m14_2199 -> m14_10  [key=2, style=dotted];
m14_2200 -> m14_2201  [key=0, style=solid];
m14_2200 -> m14_2214  [key=2, style=dotted];
m14_2200 -> m14_2213  [key=2, style=dotted];
m14_2200 -> m14_10  [key=2, style=dotted];
m14_2201 -> m14_2202  [key=0, style=solid];
m14_2201 -> m14_10  [key=2, style=dotted];
m14_2202 -> m14_2203  [key=0, style=solid];
m14_2202 -> m14_10  [key=2, style=dotted];
m14_2203 -> m14_2204  [key=0, style=solid];
m14_2203 -> m14_10  [key=2, style=dotted];
m14_2204 -> m14_2205  [key=0, style=solid];
m14_2204 -> m14_10  [key=2, style=dotted];
m14_2205 -> m14_2206  [key=0, style=solid];
m14_2205 -> m14_2214  [key=2, style=dotted];
m14_2205 -> m14_2213  [key=2, style=dotted];
m14_2205 -> m14_10  [key=2, style=dotted];
m14_2206 -> m14_2207  [key=0, style=solid];
m14_2206 -> m14_2214  [key=2, style=dotted];
m14_2206 -> m14_2213  [key=2, style=dotted];
m14_2206 -> m14_10  [key=2, style=dotted];
m14_2207 -> m14_2208  [key=0, style=solid];
m14_2207 -> m14_10  [key=2, style=dotted];
m14_2208 -> m14_2209  [key=0, style=solid];
m14_2208 -> m14_2214  [key=2, style=dotted];
m14_2208 -> m14_2213  [key=2, style=dotted];
m14_2208 -> m14_10  [key=2, style=dotted];
m14_2209 -> m14_2210  [key=0, style=solid];
m14_2209 -> m14_2214  [key=2, style=dotted];
m14_2209 -> m14_2213  [key=2, style=dotted];
m14_2209 -> m14_10  [key=2, style=dotted];
m14_2210 -> m14_2211  [key=0, style=solid];
m14_2210 -> m14_2214  [key=2, style=dotted];
m14_2210 -> m14_2213  [key=2, style=dotted];
m14_2210 -> m14_10  [key=2, style=dotted];
m14_2211 -> m14_2182  [color=blue, key=0, style=bold];
m14_756 -> m14_757  [key=0, style=solid];
m14_757 -> m14_758  [key=0, style=solid];
m14_757 -> m14_490  [key=2, style=dotted];
m14_757 -> m14_759  [color=darkseagreen4, key=1, label=o, style=dashed];
m14_758 -> m14_759  [key=0, style=solid];
m14_758 -> m14_761  [key=2, style=dotted];
m14_759 -> m14_760  [key=0, style=solid];
m14_759 -> m14_762  [key=2, style=dotted];
m14_759 -> m14_49  [key=2, style=dotted];
m14_760 -> m14_756  [color=blue, key=0, style=bold];
m14_3772 -> m14_3773  [color=red, key=0, style=solid];
m14_3773 -> m14_3774  [color=red, key=0, style=solid];
m14_3774 -> m14_3772  [color=blue, key=0, style=bold];
m14_1540 -> m14_1541  [key=0, style=solid];
m14_1541 -> m14_1542  [key=0, style=solid];
m14_1541 -> m14_1541  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_1542 -> m14_1543  [key=0, style=solid];
m14_1542 -> m14_11  [key=2, style=dotted];
m14_1542 -> m14_1544  [color=darkseagreen4, key=1, label=o, style=dashed];
m14_1542 -> m14_1545  [color=darkseagreen4, key=1, label=o, style=dashed];
m14_1542 -> m14_1546  [color=darkseagreen4, key=1, label=o, style=dashed];
m14_1542 -> m14_1547  [color=darkseagreen4, key=1, label=o, style=dashed];
m14_1543 -> m14_1544  [key=0, style=solid];
m14_1543 -> m14_812  [key=2, style=dotted];
m14_1544 -> m14_1545  [key=0, style=solid];
m14_1544 -> m14_10  [key=2, style=dotted];
m14_1545 -> m14_1546  [key=0, style=solid];
m14_1545 -> m14_10  [key=2, style=dotted];
m14_1546 -> m14_1547  [key=0, style=solid];
m14_1546 -> m14_10  [key=2, style=dotted];
m14_1547 -> m14_1548  [key=0, style=solid];
m14_1547 -> m14_10  [key=2, style=dotted];
m14_1548 -> m14_1540  [color=blue, key=0, style=bold];
m14_1584 -> m14_1585  [key=0, style=solid];
m14_1585 -> m14_1586  [key=0, style=solid];
m14_1585 -> m14_1595  [key=2, style=dotted];
m14_1585 -> m14_1587  [color=darkseagreen4, key=1, label=o, style=dashed];
m14_1585 -> m14_1588  [color=darkseagreen4, key=1, label=o, style=dashed];
m14_1585 -> m14_1589  [color=darkseagreen4, key=1, label=o, style=dashed];
m14_1585 -> m14_1590  [color=darkseagreen4, key=1, label=o, style=dashed];
m14_1585 -> m14_1592  [color=darkseagreen4, key=1, label=o, style=dashed];
m14_1586 -> m14_1587  [key=0, style=solid];
m14_1587 -> m14_1588  [key=0, style=solid];
m14_1588 -> m14_1589  [key=0, style=solid];
m14_1589 -> m14_1590  [key=0, style=solid];
m14_1590 -> m14_1591  [key=0, style=solid];
m14_1590 -> m14_61  [key=2, style=dotted];
m14_1592 -> m14_1593  [key=0, style=solid];
m14_1592 -> m14_196  [key=2, style=dotted];
m14_1592 -> m14_212  [key=2, style=dotted];
m14_1591 -> m14_1592  [key=0, style=solid];
m14_1591 -> m14_62  [key=2, style=dotted];
m14_1593 -> m14_1594  [key=0, style=solid];
m14_1593 -> m14_62  [key=2, style=dotted];
m14_1594 -> m14_1584  [color=blue, key=0, style=bold];
m14_1183 -> m14_1184  [key=0, style=solid];
m14_1184 -> m14_1185  [key=0, style=solid];
m14_1184 -> m14_1187  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_1184 -> m14_1174  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_1185 -> m14_1186  [key=0, style=solid];
m14_1185 -> m14_46  [key=2, style=dotted];
m14_1185 -> m14_1187  [color=darkseagreen4, key=1, label=s, style=dashed];
m14_1187 -> m14_1188  [key=0, style=solid];
m14_1187 -> m14_403  [key=2, style=dotted];
m14_1187 -> m14_855  [key=2, style=dotted];
m14_1187 -> m14_1189  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m14_1186 -> m14_1187  [key=0, style=solid];
m14_1188 -> m14_1189  [key=0, style=solid];
m14_1188 -> m14_10  [key=2, style=dotted];
m14_1189 -> m14_1190  [key=0, style=solid];
m14_1189 -> m14_10  [key=2, style=dotted];
m14_1190 -> m14_1183  [color=blue, key=0, style=bold];
m14_4002 -> m14_4003  [color=red, key=0, style=solid];
m14_4003 -> m14_4004  [color=red, key=0, style=solid];
m14_4003 -> m14_4005  [color=red, key=2, style=dotted];
m14_4004 -> m14_4002  [color=blue, key=0, style=bold];
m14_174 -> m14_175  [key=0, style=solid];
m14_175 -> m14_176  [key=0, style=solid];
m14_175 -> m14_88  [key=2, style=dotted];
m14_175 -> m14_177  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_176 -> m14_174  [color=blue, key=0, style=bold];
m14_3692 -> m14_3693  [key=0, style=solid];
m14_3693 -> m14_3694  [key=0, style=solid];
m14_3693 -> m14_3599  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_3694 -> m14_3695  [key=0, style=solid];
m14_3694 -> m14_196  [key=2, style=dotted];
m14_3694 -> m14_302  [key=2, style=dotted];
m14_3694 -> m14_3696  [color=darkseagreen4, key=1, label=people, style=dashed];
m14_3694 -> m14_3697  [color=darkseagreen4, key=1, label=people, style=dashed];
m14_3695 -> m14_3696  [key=0, style=solid];
m14_3695 -> m14_10  [key=2, style=dotted];
m14_3696 -> m14_3697  [key=0, style=solid];
m14_3696 -> m14_3698  [color=darkseagreen4, key=1, label=john, style=dashed];
m14_3696 -> m14_3699  [color=darkseagreen4, key=1, label=john, style=dashed];
m14_3697 -> m14_3698  [key=0, style=solid];
m14_3697 -> m14_3699  [color=darkseagreen4, key=1, label=jane, style=dashed];
m14_3698 -> m14_3699  [key=0, style=solid];
m14_3698 -> m14_10  [key=2, style=dotted];
m14_3699 -> m14_3700  [key=0, style=solid];
m14_3699 -> m14_10  [key=2, style=dotted];
m14_3700 -> m14_3692  [color=blue, key=0, style=bold];
m14_1128 -> m14_1129  [key=0, style=solid];
m14_1129 -> m14_1130  [key=0, style=solid];
m14_1129 -> m14_956  [key=2, style=dotted];
m14_1129 -> m14_1132  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m14_1130 -> m14_1131  [key=0, style=solid];
m14_1130 -> m14_9  [key=2, style=dotted];
m14_1130 -> m14_1132  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_1132 -> m14_1133  [key=0, style=solid];
m14_1132 -> m14_1141  [key=2, style=dotted];
m14_1132 -> m14_1132  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m14_1132 -> m14_1134  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m14_1132 -> m14_1135  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m14_1132 -> m14_1136  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m14_1132 -> m14_1137  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m14_1132 -> m14_1138  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m14_1132 -> m14_1139  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m14_1131 -> m14_1132  [key=0, style=solid];
m14_1131 -> m14_10  [key=2, style=dotted];
m14_1133 -> m14_1134  [key=0, style=solid];
m14_1133 -> m14_10  [key=2, style=dotted];
m14_1134 -> m14_1135  [key=0, style=solid];
m14_1134 -> m14_10  [key=2, style=dotted];
m14_1135 -> m14_1136  [key=0, style=solid];
m14_1135 -> m14_10  [key=2, style=dotted];
m14_1136 -> m14_1137  [key=0, style=solid];
m14_1136 -> m14_10  [key=2, style=dotted];
m14_1137 -> m14_1138  [key=0, style=solid];
m14_1137 -> m14_10  [key=2, style=dotted];
m14_1138 -> m14_1139  [key=0, style=solid];
m14_1138 -> m14_10  [key=2, style=dotted];
m14_1139 -> m14_1140  [key=0, style=solid];
m14_1139 -> m14_10  [key=2, style=dotted];
m14_1140 -> m14_1128  [color=blue, key=0, style=bold];
m14_2298 -> m14_2299  [key=0, style=solid];
m14_2299 -> m14_2300  [key=0, style=solid];
m14_2299 -> m14_2299  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_2300 -> m14_2301  [key=0, style=solid];
m14_2300 -> m14_11  [key=2, style=dotted];
m14_2300 -> m14_2302  [color=darkseagreen4, key=1, label=cc, style=dashed];
m14_2300 -> m14_2303  [color=darkseagreen4, key=1, label=cc, style=dashed];
m14_2301 -> m14_2302  [key=0, style=solid];
m14_2301 -> m14_10  [key=2, style=dotted];
m14_2302 -> m14_2303  [key=0, style=solid];
m14_2302 -> m14_10  [key=2, style=dotted];
m14_2303 -> m14_2304  [key=0, style=solid];
m14_2303 -> m14_10  [key=2, style=dotted];
m14_2304 -> m14_2298  [color=blue, key=0, style=bold];
m14_3355 -> m14_3356  [key=0, style=solid];
m14_3356 -> m14_3357  [key=0, style=solid];
m14_3356 -> m14_11  [key=2, style=dotted];
m14_3356 -> m14_3358  [color=darkseagreen4, key=1, label=uris, style=dashed];
m14_3357 -> m14_3358  [key=0, style=solid];
m14_3357 -> m14_10  [key=2, style=dotted];
m14_3358 -> m14_3359  [key=0, style=solid];
m14_3358 -> m14_1695  [key=2, style=dotted];
m14_3358 -> m14_10  [key=2, style=dotted];
m14_3359 -> m14_3360  [key=0, style=solid];
m14_3359 -> m14_11  [key=2, style=dotted];
m14_3360 -> m14_3361  [key=0, style=solid];
m14_3360 -> m14_812  [key=2, style=dotted];
m14_3361 -> m14_3362  [key=0, style=solid];
m14_3361 -> m14_3368  [key=2, style=dotted];
m14_3361 -> m14_3363  [color=darkseagreen4, key=1, label=i1, style=dashed];
m14_3362 -> m14_3363  [key=0, style=solid];
m14_3362 -> m14_1695  [key=2, style=dotted];
m14_3363 -> m14_3364  [key=0, style=solid];
m14_3363 -> m14_10  [key=2, style=dotted];
m14_3364 -> m14_3365  [key=0, style=solid];
m14_3364 -> m14_11  [key=2, style=dotted];
m14_3364 -> m14_3366  [color=darkseagreen4, key=1, label=uri, style=dashed];
m14_3365 -> m14_3366  [key=0, style=solid];
m14_3365 -> m14_812  [key=2, style=dotted];
m14_3366 -> m14_3367  [key=0, style=solid];
m14_3366 -> m14_3368  [key=2, style=dotted];
m14_3366 -> m14_10  [key=2, style=dotted];
m14_3367 -> m14_3355  [color=blue, key=0, style=bold];
m14_163 -> m14_164  [key=0, style=solid];
m14_164 -> m14_165  [key=0, style=solid];
m14_164 -> m14_88  [key=2, style=dotted];
m14_164 -> m14_166  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_165 -> m14_163  [color=blue, key=0, style=bold];
m14_213 -> m14_214  [key=0, style=solid];
m14_214 -> m14_215  [key=0, style=solid];
m14_214 -> m14_88  [key=2, style=dotted];
m14_214 -> m14_222  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_215 -> m14_216  [key=0, style=solid];
m14_215 -> m14_88  [key=2, style=dotted];
m14_215 -> m14_225  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_216 -> m14_217  [key=0, style=solid];
m14_216 -> m14_88  [key=2, style=dotted];
m14_216 -> m14_228  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_217 -> m14_218  [key=0, style=solid];
m14_217 -> m14_88  [key=2, style=dotted];
m14_217 -> m14_231  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_218 -> m14_219  [key=0, style=solid];
m14_218 -> m14_88  [key=2, style=dotted];
m14_218 -> m14_234  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_219 -> m14_220  [key=0, style=solid];
m14_219 -> m14_88  [key=2, style=dotted];
m14_219 -> m14_237  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_220 -> m14_221  [key=0, style=solid];
m14_220 -> m14_88  [key=2, style=dotted];
m14_220 -> m14_240  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_221 -> m14_213  [color=blue, key=0, style=bold];
m14_2685 -> m14_2686  [key=0, style=solid];
m14_2686 -> m14_2687  [key=0, style=solid];
m14_2686 -> m14_2690  [key=2, style=dotted];
m14_2687 -> m14_2688  [key=0, style=solid];
m14_2687 -> m14_61  [key=2, style=dotted];
m14_2688 -> m14_2689  [key=0, style=solid];
m14_2688 -> m14_62  [key=2, style=dotted];
m14_2689 -> m14_2685  [color=blue, key=0, style=bold];
m14_2691 -> m14_2692  [key=0, style=solid];
m14_2692 -> m14_2693  [key=0, style=solid];
m14_2692 -> m14_2703  [key=2, style=dotted];
m14_2692 -> m14_2695  [color=darkseagreen4, key=1, label=classWithException, style=dashed];
m14_2692 -> m14_2696  [color=darkseagreen4, key=1, label=classWithException, style=dashed];
m14_2692 -> m14_2699  [color=darkseagreen4, key=1, label=classWithException, style=dashed];
m14_2693 -> m14_2696  [key=0, style=solid];
m14_2693 -> m14_2704  [key=2, style=dotted];
m14_2695 -> m14_2696  [key=0, style=solid];
m14_2695 -> m14_354  [key=2, style=dotted];
m14_2696 -> m14_2697  [key=0, style=solid];
m14_2696 -> m14_9  [key=2, style=dotted];
m14_2699 -> m14_2700  [key=0, style=solid];
m14_2699 -> m14_61  [key=2, style=dotted];
m14_2694 -> m14_2695  [key=0, style=solid];
m14_2697 -> m14_2698  [key=0, style=solid];
m14_2697 -> m14_11  [key=2, style=dotted];
m14_2698 -> m14_2699  [key=0, style=solid];
m14_2698 -> m14_2705  [key=2, style=dotted];
m14_2698 -> m14_10  [key=2, style=dotted];
m14_2700 -> m14_2701  [key=0, style=solid];
m14_2700 -> m14_11  [key=2, style=dotted];
m14_2701 -> m14_2702  [key=0, style=solid];
m14_2701 -> m14_2705  [key=2, style=dotted];
m14_2701 -> m14_10  [key=2, style=dotted];
m14_2702 -> m14_2691  [color=blue, key=0, style=bold];
m14_2230 -> m14_2231  [key=0, style=solid];
m14_2231 -> m14_2232  [key=0, style=solid];
m14_2231 -> m14_2241  [key=2, style=dotted];
m14_2231 -> m14_2234  [color=darkseagreen4, key=1, label=testObject, style=dashed];
m14_2231 -> m14_2235  [color=darkseagreen4, key=1, label=testObject, style=dashed];
m14_2231 -> m14_2239  [color=darkseagreen4, key=1, label=testObject, style=dashed];
m14_2232 -> m14_2233  [key=0, style=solid];
m14_2232 -> m14_2242  [key=2, style=dotted];
m14_2232 -> m14_2234  [color=darkseagreen4, key=1, label=document, style=dashed];
m14_2234 -> m14_2235  [key=0, style=solid];
m14_2235 -> m14_2236  [key=0, style=solid];
m14_2235 -> m14_61  [key=2, style=dotted];
m14_2235 -> m14_2237  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_2235 -> m14_2238  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_2239 -> m14_2240  [key=0, style=solid];
m14_2239 -> m14_10  [key=2, style=dotted];
m14_2233 -> m14_2234  [key=0, style=solid];
m14_2233 -> m14_2243  [key=2, style=dotted];
m14_2236 -> m14_2237  [key=0, style=solid];
m14_2236 -> m14_2236  [color=darkorchid, key=3, label="Local variable string expected", style=bold];
m14_2237 -> m14_2238  [key=0, style=solid];
m14_2237 -> m14_62  [key=2, style=dotted];
m14_2238 -> m14_2239  [key=0, style=solid];
m14_2238 -> m14_11  [key=2, style=dotted];
m14_2240 -> m14_2230  [color=blue, key=0, style=bold];
m14_2084 -> m14_2085  [color=red, key=0, style=solid];
m14_2085 -> m14_2086  [color=red, key=0, style=solid];
m14_2085 -> m14_2087  [color=red, key=2, style=dotted];
m14_2086 -> m14_2084  [color=blue, key=0, style=bold];
m14_2465 -> m14_2466  [key=0, style=solid];
m14_2466 -> m14_2467  [key=0, style=solid];
m14_2466 -> m14_2474  [key=2, style=dotted];
m14_2466 -> m14_2468  [color=darkseagreen4, key=1, label=obj, style=dashed];
m14_2467 -> m14_2468  [key=0, style=solid];
m14_2467 -> m14_2475  [key=2, style=dotted];
m14_2468 -> m14_2469  [key=0, style=solid];
m14_2468 -> m14_9  [key=2, style=dotted];
m14_2469 -> m14_2470  [key=0, style=solid];
m14_2469 -> m14_11  [key=2, style=dotted];
m14_2469 -> m14_2471  [color=darkseagreen4, key=1, label=obj, style=dashed];
m14_2469 -> m14_2472  [color=darkseagreen4, key=1, label=obj, style=dashed];
m14_2470 -> m14_2471  [key=0, style=solid];
m14_2470 -> m14_10  [key=2, style=dotted];
m14_2471 -> m14_2472  [key=0, style=solid];
m14_2471 -> m14_10  [key=2, style=dotted];
m14_2472 -> m14_2473  [key=0, style=solid];
m14_2472 -> m14_10  [key=2, style=dotted];
m14_2473 -> m14_2465  [color=blue, key=0, style=bold];
m14_1637 -> m14_1638  [key=0, style=solid];
m14_1638 -> m14_1639  [key=0, style=solid];
m14_1638 -> m14_1645  [key=2, style=dotted];
m14_1638 -> m14_1640  [color=darkseagreen4, key=1, label=c, style=dashed];
m14_1639 -> m14_1640  [key=0, style=solid];
m14_1640 -> m14_1641  [key=0, style=solid];
m14_1640 -> m14_61  [key=2, style=dotted];
m14_1640 -> m14_1642  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_1641 -> m14_1642  [key=0, style=solid];
m14_1641 -> m14_62  [key=2, style=dotted];
m14_1642 -> m14_1643  [key=0, style=solid];
m14_1642 -> m14_11  [key=2, style=dotted];
m14_1643 -> m14_1644  [key=0, style=solid];
m14_1643 -> m14_1646  [key=2, style=dotted];
m14_1643 -> m14_10  [key=2, style=dotted];
m14_1644 -> m14_1637  [color=blue, key=0, style=bold];
m14_2981 -> m14_2982  [key=0, style=solid];
m14_2982 -> m14_2983  [key=0, style=solid];
m14_2982 -> m14_88  [key=2, style=dotted];
m14_2982 -> m14_2984  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_2983 -> m14_2981  [color=blue, key=0, style=bold];
m14_2015 -> m14_2016  [key=0, style=solid];
m14_2016 -> m14_2017  [key=0, style=solid];
m14_2016 -> m14_2018  [color=darkseagreen4, key=1, label=jsonIsoText, style=dashed];
m14_2016 -> m14_2016  [color=darkorchid, key=3, label="Local variable string jsonIsoText", style=bold];
m14_2017 -> m14_2018  [key=0, style=solid];
m14_2017 -> m14_196  [key=2, style=dotted];
m14_2017 -> m14_1152  [key=2, style=dotted];
m14_2017 -> m14_302  [key=2, style=dotted];
m14_2017 -> m14_2019  [color=darkseagreen4, key=1, label=cISO, style=dashed];
m14_2018 -> m14_2019  [key=0, style=solid];
m14_2018 -> m14_196  [key=2, style=dotted];
m14_2018 -> m14_302  [key=2, style=dotted];
m14_2019 -> m14_2020  [key=0, style=solid];
m14_2019 -> m14_10  [key=2, style=dotted];
m14_2020 -> m14_2015  [color=blue, key=0, style=bold];
m14_3435 -> m14_3436  [key=0, style=solid];
m14_3436 -> m14_3437  [key=0, style=solid];
m14_3436 -> m14_3438  [color=darkseagreen4, key=1, label=content, style=dashed];
m14_3436 -> m14_3436  [color=darkorchid, key=3, label="Local variable string content", style=bold];
m14_3437 -> m14_3438  [key=0, style=solid];
m14_3437 -> m14_196  [key=2, style=dotted];
m14_3438 -> m14_3439  [key=0, style=solid];
m14_3438 -> m14_3443  [key=2, style=dotted];
m14_3439 -> m14_3440  [key=0, style=solid];
m14_3440 -> m14_3441  [key=0, style=solid];
m14_3440 -> m14_1113  [key=2, style=dotted];
m14_3440 -> m14_10  [key=2, style=dotted];
m14_3440 -> m14_3440  [color=darkseagreen4, key=1, label=dateTimeOffset, style=dashed];
m14_3441 -> m14_3442  [key=0, style=solid];
m14_3441 -> m14_3444  [key=2, style=dotted];
m14_3441 -> m14_10  [key=2, style=dotted];
m14_3441 -> m14_3441  [color=darkseagreen4, key=1, label=dateTimeOffset, style=dashed];
m14_3442 -> m14_3435  [color=blue, key=0, style=bold];
m14_1283 -> m14_1284  [key=0, style=solid];
m14_1284 -> m14_1285  [key=0, style=solid];
m14_1284 -> m14_1290  [key=2, style=dotted];
m14_1285 -> m14_1286  [key=0, style=solid];
m14_1285 -> m14_9  [key=2, style=dotted];
m14_1285 -> m14_1287  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_1286 -> m14_1287  [key=0, style=solid];
m14_1286 -> m14_10  [key=2, style=dotted];
m14_1287 -> m14_1288  [key=0, style=solid];
m14_1287 -> m14_11  [key=2, style=dotted];
m14_1288 -> m14_1289  [key=0, style=solid];
m14_1288 -> m14_10  [key=2, style=dotted];
m14_1289 -> m14_1283  [color=blue, key=0, style=bold];
m14_1596 -> m14_1597  [key=0, style=solid];
m14_1597 -> m14_1598  [key=0, style=solid];
m14_1597 -> m14_170  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_1598 -> m14_1599  [key=0, style=solid];
m14_1598 -> m14_11  [key=2, style=dotted];
m14_1598 -> m14_1600  [color=darkseagreen4, key=1, label=o, style=dashed];
m14_1598 -> m14_1601  [color=darkseagreen4, key=1, label=o, style=dashed];
m14_1598 -> m14_1602  [color=darkseagreen4, key=1, label=o, style=dashed];
m14_1599 -> m14_1600  [key=0, style=solid];
m14_1599 -> m14_10  [key=2, style=dotted];
m14_1600 -> m14_1601  [key=0, style=solid];
m14_1600 -> m14_10  [key=2, style=dotted];
m14_1601 -> m14_1602  [key=0, style=solid];
m14_1601 -> m14_10  [key=2, style=dotted];
m14_1602 -> m14_1603  [key=0, style=solid];
m14_1602 -> m14_10  [key=2, style=dotted];
m14_1603 -> m14_1596  [color=blue, key=0, style=bold];
m14_85 -> m14_86  [key=0, style=solid];
m14_86 -> m14_87  [key=0, style=solid];
m14_86 -> m14_88  [key=2, style=dotted];
m14_86 -> m14_89  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_87 -> m14_85  [color=blue, key=0, style=bold];
m14_3236 -> m14_3238  [key=0, style=solid];
m14_3236 -> m14_3241  [color=darkseagreen4, key=1, label=T, style=dashed];
m14_3236 -> m14_3229  [color=darkorchid, key=3, label="Parameter variable T obj", style=bold];
m14_3238 -> m14_3239  [key=0, style=solid];
m14_3238 -> m14_2740  [key=2, style=dotted];
m14_3238 -> m14_3241  [color=darkseagreen4, key=1, label=stringWriter, style=dashed];
m14_3238 -> m14_3242  [color=darkseagreen4, key=1, label=stringWriter, style=dashed];
m14_3241 -> m14_3242  [key=0, style=solid];
m14_3241 -> m14_851  [key=2, style=dotted];
m14_3239 -> m14_3240  [key=0, style=solid];
m14_3239 -> m14_46  [key=2, style=dotted];
m14_3239 -> m14_3241  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_3242 -> m14_3243  [key=0, style=solid];
m14_3242 -> m14_2745  [key=2, style=dotted];
m14_3240 -> m14_3241  [key=0, style=solid];
m14_3240 -> m14_1852  [key=2, style=dotted];
m14_3243 -> m14_3236  [color=blue, key=0, style=bold];
m14_2921 -> m14_2922  [key=0, style=solid];
m14_2922 -> m14_2923  [key=0, style=solid];
m14_2922 -> m14_2931  [key=2, style=dotted];
m14_2922 -> m14_1249  [key=2, style=dotted];
m14_2922 -> m14_1105  [key=2, style=dotted];
m14_2923 -> m14_2924  [key=0, style=solid];
m14_2923 -> m14_61  [key=2, style=dotted];
m14_2923 -> m14_2925  [color=darkseagreen4, key=1, label=jsonString, style=dashed];
m14_2924 -> m14_2925  [key=0, style=solid];
m14_2924 -> m14_2932  [key=2, style=dotted];
m14_2924 -> m14_62  [key=2, style=dotted];
m14_2925 -> m14_2926  [key=0, style=solid];
m14_2925 -> m14_11  [key=2, style=dotted];
m14_2925 -> m14_2927  [color=darkseagreen4, key=1, label=actual, style=dashed];
m14_2925 -> m14_2928  [color=darkseagreen4, key=1, label=actual, style=dashed];
m14_2926 -> m14_2927  [key=0, style=solid];
m14_2926 -> m14_1249  [key=2, style=dotted];
m14_2926 -> m14_10  [key=2, style=dotted];
m14_2927 -> m14_2928  [key=0, style=solid];
m14_2927 -> m14_1249  [key=2, style=dotted];
m14_2927 -> m14_10  [key=2, style=dotted];
m14_2928 -> m14_2929  [key=0, style=solid];
m14_2929 -> m14_2930  [key=0, style=solid];
m14_2929 -> m14_455  [key=2, style=dotted];
m14_2929 -> m14_2780  [key=2, style=dotted];
m14_2930 -> m14_2921  [color=blue, key=0, style=bold];
m14_419 -> m14_420  [key=0, style=solid];
m14_420 -> m14_421  [key=0, style=solid];
m14_420 -> m14_427  [key=2, style=dotted];
m14_420 -> m14_423  [color=darkseagreen4, key=1, label=input, style=dashed];
m14_420 -> m14_424  [color=darkseagreen4, key=1, label=input, style=dashed];
m14_420 -> m14_425  [color=darkseagreen4, key=1, label=input, style=dashed];
m14_421 -> m14_422  [key=0, style=solid];
m14_421 -> m14_9  [key=2, style=dotted];
m14_423 -> m14_424  [key=0, style=solid];
m14_423 -> m14_10  [key=2, style=dotted];
m14_424 -> m14_425  [key=0, style=solid];
m14_424 -> m14_10  [key=2, style=dotted];
m14_425 -> m14_426  [key=0, style=solid];
m14_425 -> m14_10  [key=2, style=dotted];
m14_422 -> m14_423  [key=0, style=solid];
m14_422 -> m14_11  [key=2, style=dotted];
m14_422 -> m14_424  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m14_422 -> m14_425  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m14_426 -> m14_419  [color=blue, key=0, style=bold];
m14_3271 -> m14_3272  [key=0, style=solid];
m14_3272 -> m14_3273  [key=0, style=solid];
m14_3272 -> m14_3275  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_3272 -> m14_3280  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_3272 -> m14_3283  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_3272 -> m14_3272  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_3273 -> m14_3274  [key=0, style=solid];
m14_3273 -> m14_196  [key=2, style=dotted];
m14_3273 -> m14_3278  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_3273 -> m14_3279  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_3275 -> m14_3276  [key=0, style=solid];
m14_3275 -> m14_43  [key=2, style=dotted];
m14_3275 -> m14_403  [key=2, style=dotted];
m14_3275 -> m14_47  [key=2, style=dotted];
m14_3275 -> m14_3277  [color=darkseagreen4, key=1, label=o, style=dashed];
m14_3280 -> m14_3281  [key=0, style=solid];
m14_3280 -> m14_88  [key=2, style=dotted];
m14_3280 -> m14_3282  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_3274 -> m14_3275  [key=0, style=solid];
m14_3274 -> m14_848  [key=2, style=dotted];
m14_3278 -> m14_3279  [key=0, style=solid];
m14_3279 -> m14_3280  [key=0, style=solid];
m14_3279 -> m14_848  [key=2, style=dotted];
m14_3279 -> m14_3283  [color=darkseagreen4, key=1, label=s, style=dashed];
m14_3276 -> m14_3277  [key=0, style=solid];
m14_3276 -> m14_812  [key=2, style=dotted];
m14_3277 -> m14_3278  [key=0, style=solid];
m14_3277 -> m14_10  [key=2, style=dotted];
m14_3281 -> m14_3271  [color=blue, key=0, style=bold];
m14_2172 -> m14_2173  [key=0, style=solid];
m14_2173 -> m14_2174  [key=0, style=solid];
m14_2173 -> m14_2180  [key=2, style=dotted];
m14_2174 -> m14_2175  [key=0, style=solid];
m14_2174 -> m14_61  [key=2, style=dotted];
m14_2175 -> m14_2176  [key=0, style=solid];
m14_2175 -> m14_62  [key=2, style=dotted];
m14_2176 -> m14_2177  [key=0, style=solid];
m14_2176 -> m14_2181  [key=2, style=dotted];
m14_2177 -> m14_2178  [key=0, style=solid];
m14_2177 -> m14_61  [key=2, style=dotted];
m14_2178 -> m14_2179  [key=0, style=solid];
m14_2178 -> m14_62  [key=2, style=dotted];
m14_2179 -> m14_2172  [color=blue, key=0, style=bold];
m14_3766 -> m14_3767  [color=red, key=0, style=solid];
m14_3767 -> m14_3768  [color=red, key=0, style=solid];
m14_3767 -> m14_3750  [color=red, key=2, style=dotted];
m14_3768 -> m14_3766  [color=blue, key=0, style=bold];
m14_4013 -> m14_4014  [color=red, key=0, style=solid];
m14_4014 -> m14_4015  [color=red, key=0, style=solid];
m14_4014 -> m14_3988  [color=red, key=2, style=dotted];
m14_4015 -> m14_4013  [color=blue, key=0, style=bold];
m14_2507 -> m14_2508  [key=0, style=solid];
m14_2507 -> m14_2496  [color=darkorchid, key=3, label="Parameter variable string serStr", style=bold];
m14_2508 -> m14_2509  [key=0, style=solid];
m14_2508 -> m14_196  [key=2, style=dotted];
m14_2508 -> m14_302  [key=2, style=dotted];
m14_2509 -> m14_2507  [color=blue, key=0, style=bold];
m14_2993 -> m14_2994  [key=0, style=solid];
m14_2994 -> m14_2995  [key=0, style=solid];
m14_2994 -> m14_88  [key=2, style=dotted];
m14_2994 -> m14_2996  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_2995 -> m14_2993  [color=blue, key=0, style=bold];
m14_1496 -> m14_1497  [key=0, style=solid];
m14_1497 -> m14_1498  [key=0, style=solid];
m14_1497 -> m14_1497  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_1498 -> m14_1499  [key=0, style=solid];
m14_1498 -> m14_11  [key=2, style=dotted];
m14_1499 -> m14_1496  [color=blue, key=0, style=bold];
m14_3601 -> m14_3602  [key=0, style=solid];
m14_3602 -> m14_3603  [key=0, style=solid];
m14_3602 -> m14_754  [key=2, style=dotted];
m14_3602 -> m14_1249  [key=2, style=dotted];
m14_3602 -> m14_3604  [color=darkseagreen4, key=1, label=john, style=dashed];
m14_3602 -> m14_3605  [color=darkseagreen4, key=1, label=john, style=dashed];
m14_3602 -> m14_3606  [color=darkseagreen4, key=1, label=john, style=dashed];
m14_3603 -> m14_3604  [key=0, style=solid];
m14_3603 -> m14_754  [key=2, style=dotted];
m14_3603 -> m14_1249  [key=2, style=dotted];
m14_3603 -> m14_3605  [color=darkseagreen4, key=1, label=jane, style=dashed];
m14_3603 -> m14_3606  [color=darkseagreen4, key=1, label=jane, style=dashed];
m14_3604 -> m14_3605  [key=0, style=solid];
m14_3605 -> m14_3606  [key=0, style=solid];
m14_3606 -> m14_3607  [key=0, style=solid];
m14_3606 -> m14_300  [key=2, style=dotted];
m14_3607 -> m14_3608  [key=0, style=solid];
m14_3607 -> m14_196  [key=2, style=dotted];
m14_3607 -> m14_197  [key=2, style=dotted];
m14_3608 -> m14_3609  [key=0, style=solid];
m14_3608 -> m14_62  [key=2, style=dotted];
m14_3609 -> m14_3601  [color=blue, key=0, style=bold];
m14_1962 -> m14_1963  [key=0, style=solid];
m14_1963 -> m14_1964  [key=0, style=solid];
m14_1963 -> m14_11  [key=2, style=dotted];
m14_1963 -> m14_1965  [color=darkseagreen4, key=1, label=d, style=dashed];
m14_1963 -> m14_1966  [color=darkseagreen4, key=1, label=d, style=dashed];
m14_1963 -> m14_1967  [color=darkseagreen4, key=1, label=d, style=dashed];
m14_1963 -> m14_1968  [color=darkseagreen4, key=1, label=d, style=dashed];
m14_1963 -> m14_1969  [color=darkseagreen4, key=1, label=d, style=dashed];
m14_1963 -> m14_1970  [color=darkseagreen4, key=1, label=d, style=dashed];
m14_1963 -> m14_1971  [color=darkseagreen4, key=1, label=d, style=dashed];
m14_1963 -> m14_1972  [color=darkseagreen4, key=1, label=d, style=dashed];
m14_1964 -> m14_1965  [key=0, style=solid];
m14_1964 -> m14_812  [key=2, style=dotted];
m14_1965 -> m14_1966  [key=0, style=solid];
m14_1965 -> m14_812  [key=2, style=dotted];
m14_1966 -> m14_1967  [key=0, style=solid];
m14_1966 -> m14_405  [key=2, style=dotted];
m14_1966 -> m14_10  [key=2, style=dotted];
m14_1967 -> m14_1968  [key=0, style=solid];
m14_1967 -> m14_405  [key=2, style=dotted];
m14_1967 -> m14_10  [key=2, style=dotted];
m14_1968 -> m14_1969  [key=0, style=solid];
m14_1968 -> m14_10  [key=2, style=dotted];
m14_1969 -> m14_1970  [key=0, style=solid];
m14_1969 -> m14_10  [key=2, style=dotted];
m14_1970 -> m14_1971  [key=0, style=solid];
m14_1970 -> m14_10  [key=2, style=dotted];
m14_1971 -> m14_1972  [key=0, style=solid];
m14_1971 -> m14_10  [key=2, style=dotted];
m14_1972 -> m14_1973  [key=0, style=solid];
m14_1972 -> m14_10  [key=2, style=dotted];
m14_1973 -> m14_1962  [color=blue, key=0, style=bold];
m14_471 -> m14_472  [key=0, style=solid];
m14_472 -> m14_473  [key=0, style=solid];
m14_472 -> m14_479  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_472 -> m14_472  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_473 -> m14_474  [key=0, style=solid];
m14_473 -> m14_490  [key=2, style=dotted];
m14_473 -> m14_475  [color=darkseagreen4, key=1, label=o, style=dashed];
m14_473 -> m14_476  [color=darkseagreen4, key=1, label=o, style=dashed];
m14_473 -> m14_477  [color=darkseagreen4, key=1, label=o, style=dashed];
m14_473 -> m14_478  [color=darkseagreen4, key=1, label=o, style=dashed];
m14_473 -> m14_479  [color=darkseagreen4, key=1, label=o, style=dashed];
m14_479 -> m14_480  [key=0, style=solid];
m14_479 -> m14_492  [key=2, style=dotted];
m14_479 -> m14_493  [key=2, style=dotted];
m14_479 -> m14_49  [key=2, style=dotted];
m14_474 -> m14_475  [key=0, style=solid];
m14_474 -> m14_10  [key=2, style=dotted];
m14_475 -> m14_476  [key=0, style=solid];
m14_475 -> m14_10  [key=2, style=dotted];
m14_476 -> m14_477  [key=0, style=solid];
m14_476 -> m14_10  [key=2, style=dotted];
m14_477 -> m14_478  [key=0, style=solid];
m14_477 -> m14_491  [key=2, style=dotted];
m14_477 -> m14_10  [key=2, style=dotted];
m14_478 -> m14_479  [key=0, style=solid];
m14_478 -> m14_10  [key=2, style=dotted];
m14_480 -> m14_481  [key=0, style=solid];
m14_480 -> m14_483  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_481 -> m14_482  [key=0, style=solid];
m14_481 -> m14_490  [key=2, style=dotted];
m14_481 -> m14_483  [color=darkseagreen4, key=1, label=o, style=dashed];
m14_483 -> m14_484  [key=0, style=solid];
m14_483 -> m14_492  [key=2, style=dotted];
m14_483 -> m14_493  [key=2, style=dotted];
m14_483 -> m14_49  [key=2, style=dotted];
m14_482 -> m14_483  [key=0, style=solid];
m14_482 -> m14_10  [key=2, style=dotted];
m14_484 -> m14_485  [key=0, style=solid];
m14_484 -> m14_488  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_485 -> m14_486  [key=0, style=solid];
m14_485 -> m14_490  [key=2, style=dotted];
m14_485 -> m14_487  [color=darkseagreen4, key=1, label=o, style=dashed];
m14_485 -> m14_488  [color=darkseagreen4, key=1, label=o, style=dashed];
m14_488 -> m14_489  [key=0, style=solid];
m14_488 -> m14_492  [key=2, style=dotted];
m14_488 -> m14_493  [key=2, style=dotted];
m14_488 -> m14_49  [key=2, style=dotted];
m14_486 -> m14_487  [key=0, style=solid];
m14_486 -> m14_10  [key=2, style=dotted];
m14_487 -> m14_488  [key=0, style=solid];
m14_487 -> m14_10  [key=2, style=dotted];
m14_489 -> m14_471  [color=blue, key=0, style=bold];
m14_1798 -> m14_1799  [key=0, style=solid];
m14_1799 -> m14_1800  [key=0, style=solid];
m14_1799 -> m14_1803  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_1799 -> m14_1764  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_1800 -> m14_1801  [key=0, style=solid];
m14_1800 -> m14_88  [key=2, style=dotted];
m14_1800 -> m14_1802  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_1801 -> m14_1798  [color=blue, key=0, style=bold];
m14_941 -> m14_942  [key=0, style=solid];
m14_942 -> m14_943  [key=0, style=solid];
m14_942 -> m14_956  [key=2, style=dotted];
m14_942 -> m14_944  [color=darkseagreen4, key=1, label=product, style=dashed];
m14_942 -> m14_945  [color=darkseagreen4, key=1, label=product, style=dashed];
m14_942 -> m14_946  [color=darkseagreen4, key=1, label=product, style=dashed];
m14_942 -> m14_947  [color=darkseagreen4, key=1, label=product, style=dashed];
m14_943 -> m14_944  [key=0, style=solid];
m14_944 -> m14_945  [key=0, style=solid];
m14_944 -> m14_957  [key=2, style=dotted];
m14_945 -> m14_946  [key=0, style=solid];
m14_946 -> m14_947  [key=0, style=solid];
m14_947 -> m14_948  [key=0, style=solid];
m14_947 -> m14_9  [key=2, style=dotted];
m14_948 -> m14_949  [key=0, style=solid];
m14_948 -> m14_939  [key=2, style=dotted];
m14_948 -> m14_950  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m14_948 -> m14_951  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m14_948 -> m14_952  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m14_948 -> m14_953  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m14_948 -> m14_954  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m14_949 -> m14_950  [key=0, style=solid];
m14_949 -> m14_10  [key=2, style=dotted];
m14_950 -> m14_951  [key=0, style=solid];
m14_950 -> m14_957  [key=2, style=dotted];
m14_950 -> m14_10  [key=2, style=dotted];
m14_951 -> m14_952  [key=0, style=solid];
m14_951 -> m14_10  [key=2, style=dotted];
m14_952 -> m14_953  [key=0, style=solid];
m14_952 -> m14_10  [key=2, style=dotted];
m14_953 -> m14_954  [key=0, style=solid];
m14_953 -> m14_10  [key=2, style=dotted];
m14_954 -> m14_955  [key=0, style=solid];
m14_954 -> m14_10  [key=2, style=dotted];
m14_955 -> m14_941  [color=blue, key=0, style=bold];
m14_3739 -> m14_3740  [color=red, key=0, style=solid];
m14_3739 -> m14_3742  [color=red, key=1, label="System.Type", style=dashed];
m14_3739 -> m14_3744  [color=red, key=1, label="System.Type", style=dashed];
m14_3739 -> m14_3746  [color=red, key=1, label="System.Type", style=dashed];
m14_3740 -> m14_3741  [color=red, key=0, style=solid];
m14_3740 -> m14_3742  [color=red, key=0, style=solid];
m14_3742 -> m14_3743  [color=red, key=0, style=solid];
m14_3742 -> m14_3744  [color=red, key=0, style=solid];
m14_3744 -> m14_3745  [color=red, key=0, style=solid];
m14_3744 -> m14_3746  [color=red, key=0, style=solid];
m14_3746 -> m14_3747  [color=red, key=0, style=solid];
m14_3746 -> m14_3748  [color=red, key=0, style=solid];
m14_3741 -> m14_3749  [color=red, key=0, style=solid];
m14_3743 -> m14_3749  [color=red, key=0, style=solid];
m14_3745 -> m14_3749  [color=red, key=0, style=solid];
m14_3747 -> m14_3749  [color=red, key=0, style=solid];
m14_3747 -> m14_846  [color=red, key=2, style=dotted];
m14_3748 -> m14_3749  [color=red, key=0, style=solid];
m14_3748 -> m14_3750  [color=red, key=2, style=dotted];
m14_3749 -> m14_3739  [color=blue, key=0, style=bold];
m14_2413 -> m14_2414  [key=0, style=solid];
m14_2414 -> m14_2415  [key=0, style=solid];
m14_2414 -> m14_2434  [key=2, style=dotted];
m14_2414 -> m14_2416  [color=darkseagreen4, key=1, label=expando, style=dashed];
m14_2414 -> m14_2417  [color=darkseagreen4, key=1, label=expando, style=dashed];
m14_2414 -> m14_2418  [color=darkseagreen4, key=1, label=expando, style=dashed];
m14_2414 -> m14_2419  [color=darkseagreen4, key=1, label=expando, style=dashed];
m14_2414 -> m14_2420  [color=darkseagreen4, key=1, label=expando, style=dashed];
m14_2414 -> m14_2424  [color=darkseagreen4, key=1, label=expando, style=dashed];
m14_2414 -> m14_2426  [color=darkseagreen4, key=1, label=expando, style=dashed];
m14_2414 -> m14_2430  [color=darkseagreen4, key=1, label=expando, style=dashed];
m14_2414 -> m14_2432  [color=darkseagreen4, key=1, label=expando, style=dashed];
m14_2415 -> m14_2416  [key=0, style=solid];
m14_2416 -> m14_2417  [key=0, style=solid];
m14_2417 -> m14_2418  [key=0, style=solid];
m14_2417 -> m14_2434  [key=2, style=dotted];
m14_2418 -> m14_2419  [key=0, style=solid];
m14_2419 -> m14_2420  [key=0, style=solid];
m14_2419 -> m14_1105  [key=2, style=dotted];
m14_2420 -> m14_2421  [key=0, style=solid];
m14_2420 -> m14_2435  [key=2, style=dotted];
m14_2420 -> m14_2422  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_2424 -> m14_2425  [key=0, style=solid];
m14_2424 -> m14_10  [key=2, style=dotted];
m14_2426 -> m14_2427  [key=0, style=solid];
m14_2426 -> m14_10  [key=2, style=dotted];
m14_2430 -> m14_2431  [key=0, style=solid];
m14_2430 -> m14_10  [key=2, style=dotted];
m14_2432 -> m14_2433  [key=0, style=solid];
m14_2432 -> m14_10  [key=2, style=dotted];
m14_2421 -> m14_2422  [key=0, style=solid];
m14_2421 -> m14_62  [key=2, style=dotted];
m14_2422 -> m14_2423  [key=0, style=solid];
m14_2422 -> m14_11  [key=2, style=dotted];
m14_2422 -> m14_2424  [color=darkseagreen4, key=1, label=newExpando, style=dashed];
m14_2422 -> m14_2425  [color=darkseagreen4, key=1, label=newExpando, style=dashed];
m14_2422 -> m14_2426  [color=darkseagreen4, key=1, label=newExpando, style=dashed];
m14_2422 -> m14_2427  [color=darkseagreen4, key=1, label=newExpando, style=dashed];
m14_2422 -> m14_2428  [color=darkseagreen4, key=1, label=newExpando, style=dashed];
m14_2423 -> m14_2424  [key=0, style=solid];
m14_2423 -> m14_761  [key=2, style=dotted];
m14_2425 -> m14_2426  [key=0, style=solid];
m14_2425 -> m14_761  [key=2, style=dotted];
m14_2427 -> m14_2428  [key=0, style=solid];
m14_2427 -> m14_761  [key=2, style=dotted];
m14_2428 -> m14_2429  [key=0, style=solid];
m14_2428 -> m14_2430  [color=darkseagreen4, key=1, label=o, style=dashed];
m14_2428 -> m14_2431  [color=darkseagreen4, key=1, label=o, style=dashed];
m14_2428 -> m14_2432  [color=darkseagreen4, key=1, label=o, style=dashed];
m14_2429 -> m14_2430  [key=0, style=solid];
m14_2429 -> m14_761  [key=2, style=dotted];
m14_2431 -> m14_2432  [key=0, style=solid];
m14_2431 -> m14_761  [key=2, style=dotted];
m14_2433 -> m14_2413  [color=blue, key=0, style=bold];
m14_3754 -> m14_3755  [color=red, key=0, style=solid];
m14_3755 -> m14_3756  [color=red, key=0, style=solid];
m14_3755 -> m14_3750  [color=red, key=2, style=dotted];
m14_3756 -> m14_3754  [color=blue, key=0, style=bold];
m14_1841 -> m14_1842  [key=0, style=solid];
m14_1842 -> m14_1843  [key=0, style=solid];
m14_1842 -> m14_1842  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_1843 -> m14_1844  [key=0, style=solid];
m14_1843 -> m14_11  [key=2, style=dotted];
m14_1844 -> m14_1845  [key=0, style=solid];
m14_1844 -> m14_10  [key=2, style=dotted];
m14_1845 -> m14_1841  [color=blue, key=0, style=bold];
m14_205 -> m14_206  [key=0, style=solid];
m14_206 -> m14_207  [key=0, style=solid];
m14_206 -> m14_210  [key=2, style=dotted];
m14_207 -> m14_208  [key=0, style=solid];
m14_207 -> m14_196  [key=2, style=dotted];
m14_207 -> m14_211  [key=2, style=dotted];
m14_207 -> m14_212  [key=2, style=dotted];
m14_208 -> m14_209  [key=0, style=solid];
m14_208 -> m14_10  [key=2, style=dotted];
m14_209 -> m14_205  [color=blue, key=0, style=bold];
m14_78 -> m14_79  [key=0, style=solid];
m14_79 -> m14_80  [key=0, style=solid];
m14_79 -> m14_11  [key=2, style=dotted];
m14_80 -> m14_81  [key=0, style=solid];
m14_80 -> m14_84  [key=2, style=dotted];
m14_80 -> m14_80  [color=darkseagreen4, key=1, label=d, style=dashed];
m14_80 -> m14_82  [color=darkseagreen4, key=1, label=d, style=dashed];
m14_81 -> m14_82  [key=0, style=solid];
m14_81 -> m14_10  [key=2, style=dotted];
m14_82 -> m14_83  [key=0, style=solid];
m14_82 -> m14_10  [key=2, style=dotted];
m14_82 -> m14_82  [color=darkseagreen4, key=1, label=d, style=dashed];
m14_83 -> m14_78  [color=blue, key=0, style=bold];
m14_3317 -> m14_3318  [key=0, style=solid];
m14_3318 -> m14_3319  [key=0, style=solid];
m14_3318 -> m14_88  [key=2, style=dotted];
m14_3318 -> m14_3320  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_3318 -> m14_3318  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_3319 -> m14_3317  [color=blue, key=0, style=bold];
m14_3864 -> m14_3865  [key=0, style=solid];
m14_3865 -> m14_3866  [key=0, style=solid];
m14_3865 -> m14_957  [key=2, style=dotted];
m14_3865 -> m14_3868  [color=darkseagreen4, key=1, label=dt, style=dashed];
m14_3865 -> m14_3871  [color=darkseagreen4, key=1, label=dt, style=dashed];
m14_3866 -> m14_3867  [key=0, style=solid];
m14_3866 -> m14_3818  [color=darkorchid, key=3, label="Local variable string dateFormatString", style=bold];
m14_3868 -> m14_3869  [key=0, style=solid];
m14_3868 -> m14_210  [key=2, style=dotted];
m14_3868 -> m14_197  [key=2, style=dotted];
m14_3868 -> m14_3870  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_3871 -> m14_3872  [key=0, style=solid];
m14_3871 -> m14_1668  [key=2, style=dotted];
m14_3871 -> m14_10  [key=2, style=dotted];
m14_3867 -> m14_3868  [key=0, style=solid];
m14_3867 -> m14_196  [key=2, style=dotted];
m14_3867 -> m14_3870  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_3870 -> m14_3871  [key=0, style=solid];
m14_3870 -> m14_302  [key=2, style=dotted];
m14_3869 -> m14_3870  [key=0, style=solid];
m14_3869 -> m14_62  [key=2, style=dotted];
m14_3872 -> m14_3864  [color=blue, key=0, style=bold];
m14_1889 -> m14_1890  [key=0, style=solid];
m14_1890 -> m14_1891  [key=0, style=solid];
m14_1890 -> m14_1899  [key=2, style=dotted];
m14_1890 -> m14_1894  [color=darkseagreen4, key=1, label=structTest, style=dashed];
m14_1891 -> m14_1892  [key=0, style=solid];
m14_1891 -> m14_61  [key=2, style=dotted];
m14_1891 -> m14_1893  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_1894 -> m14_1895  [key=0, style=solid];
m14_1894 -> m14_10  [key=2, style=dotted];
m14_1894 -> m14_1894  [color=darkseagreen4, key=1, label=structTest, style=dashed];
m14_1894 -> m14_1896  [color=darkseagreen4, key=1, label=structTest, style=dashed];
m14_1892 -> m14_1893  [key=0, style=solid];
m14_1892 -> m14_62  [key=2, style=dotted];
m14_1893 -> m14_1894  [key=0, style=solid];
m14_1893 -> m14_11  [key=2, style=dotted];
m14_1895 -> m14_1896  [key=0, style=solid];
m14_1895 -> m14_10  [key=2, style=dotted];
m14_1896 -> m14_1897  [key=0, style=solid];
m14_1896 -> m14_10  [key=2, style=dotted];
m14_1896 -> m14_1896  [color=darkseagreen4, key=1, label=structTest, style=dashed];
m14_1897 -> m14_1898  [key=0, style=solid];
m14_1897 -> m14_10  [key=2, style=dotted];
m14_1898 -> m14_1889  [color=blue, key=0, style=bold];
m14_2885 -> m14_2886  [key=0, style=solid];
m14_2886 -> m14_2887  [key=0, style=solid];
m14_2886 -> m14_88  [key=2, style=dotted];
m14_2886 -> m14_2888  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_2886 -> m14_2886  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_2887 -> m14_2885  [color=blue, key=0, style=bold];
m14_3626 -> m14_3627  [color=red, key=0, style=solid];
m14_3626 -> m14_3628  [color=red, key=1, label=int, style=dashed];
m14_3627 -> m14_3628  [color=red, key=0, style=solid];
m14_3627 -> m14_4115  [color=red, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSize", style=dashed];
m14_3628 -> m14_3629  [color=red, key=0, style=solid];
m14_3628 -> m14_4115  [color=red, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSize", style=dashed];
m14_3629 -> m14_3626  [color=blue, key=0, style=bold];
m14_3882 -> m14_3883  [key=0, style=solid];
m14_3883 -> m14_3884  [key=0, style=solid];
m14_3883 -> m14_406  [key=2, style=dotted];
m14_3883 -> m14_3886  [color=darkseagreen4, key=1, label=dt, style=dashed];
m14_3883 -> m14_3889  [color=darkseagreen4, key=1, label=dt, style=dashed];
m14_3884 -> m14_3885  [key=0, style=solid];
m14_3884 -> m14_3875  [color=darkorchid, key=3, label="Local variable string dateFormatString", style=bold];
m14_3886 -> m14_3887  [key=0, style=solid];
m14_3886 -> m14_210  [key=2, style=dotted];
m14_3886 -> m14_197  [key=2, style=dotted];
m14_3886 -> m14_3888  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_3889 -> m14_3890  [key=0, style=solid];
m14_3889 -> m14_1668  [key=2, style=dotted];
m14_3889 -> m14_10  [key=2, style=dotted];
m14_3885 -> m14_3886  [key=0, style=solid];
m14_3885 -> m14_196  [key=2, style=dotted];
m14_3885 -> m14_3888  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_3888 -> m14_3889  [key=0, style=solid];
m14_3888 -> m14_302  [key=2, style=dotted];
m14_3887 -> m14_3888  [key=0, style=solid];
m14_3887 -> m14_62  [key=2, style=dotted];
m14_3890 -> m14_3882  [color=blue, key=0, style=bold];
m14_1063 -> m14_1064  [key=0, style=solid];
m14_1064 -> m14_1065  [key=0, style=solid];
m14_1064 -> m14_1068  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_1064 -> m14_1064  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_1065 -> m14_1066  [key=0, style=solid];
m14_1065 -> m14_88  [key=2, style=dotted];
m14_1065 -> m14_1067  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_1066 -> m14_1063  [color=blue, key=0, style=bold];
m14_1565 -> m14_1566  [key=0, style=solid];
m14_1566 -> m14_1567  [key=0, style=solid];
m14_1566 -> m14_1574  [key=2, style=dotted];
m14_1566 -> m14_1568  [color=darkseagreen4, key=1, label=i, style=dashed];
m14_1567 -> m14_1568  [key=0, style=solid];
m14_1568 -> m14_1569  [key=0, style=solid];
m14_1568 -> m14_9  [key=2, style=dotted];
m14_1568 -> m14_1570  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_1569 -> m14_1570  [key=0, style=solid];
m14_1569 -> m14_10  [key=2, style=dotted];
m14_1570 -> m14_1571  [key=0, style=solid];
m14_1570 -> m14_11  [key=2, style=dotted];
m14_1571 -> m14_1572  [key=0, style=solid];
m14_1571 -> m14_9  [key=2, style=dotted];
m14_1572 -> m14_1573  [key=0, style=solid];
m14_1572 -> m14_10  [key=2, style=dotted];
m14_1573 -> m14_1565  [color=blue, key=0, style=bold];
m14_3215 -> m14_3216  [key=0, style=solid];
m14_3216 -> m14_3217  [key=0, style=solid];
m14_3216 -> m14_210  [key=2, style=dotted];
m14_3216 -> m14_1105  [key=2, style=dotted];
m14_3217 -> m14_3218  [key=0, style=solid];
m14_3217 -> m14_196  [key=2, style=dotted];
m14_3217 -> m14_212  [key=2, style=dotted];
m14_3217 -> m14_3219  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_3218 -> m14_3219  [key=0, style=solid];
m14_3218 -> m14_62  [key=2, style=dotted];
m14_3219 -> m14_3220  [key=0, style=solid];
m14_3219 -> m14_11  [key=2, style=dotted];
m14_3219 -> m14_3221  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m14_3219 -> m14_3222  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m14_3220 -> m14_3221  [key=0, style=solid];
m14_3220 -> m14_10  [key=2, style=dotted];
m14_3221 -> m14_3222  [key=0, style=solid];
m14_3221 -> m14_1105  [key=2, style=dotted];
m14_3221 -> m14_10  [key=2, style=dotted];
m14_3222 -> m14_3223  [key=0, style=solid];
m14_3222 -> m14_1105  [key=2, style=dotted];
m14_3222 -> m14_10  [key=2, style=dotted];
m14_3223 -> m14_3215  [color=blue, key=0, style=bold];
m14_798 -> m14_799  [key=0, style=solid];
m14_799 -> m14_800  [key=0, style=solid];
m14_799 -> m14_804  [key=2, style=dotted];
m14_799 -> m14_805  [key=2, style=dotted];
m14_800 -> m14_801  [key=0, style=solid];
m14_800 -> m14_9  [key=2, style=dotted];
m14_800 -> m14_802  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_801 -> m14_802  [key=0, style=solid];
m14_801 -> m14_801  [color=darkorchid, key=3, label="Local variable string expectedJson", style=bold];
m14_802 -> m14_803  [key=0, style=solid];
m14_802 -> m14_10  [key=2, style=dotted];
m14_803 -> m14_798  [color=blue, key=0, style=bold];
m14_2706 -> m14_2707  [key=0, style=solid];
m14_2707 -> m14_2708  [key=0, style=solid];
m14_2707 -> m14_2717  [key=2, style=dotted];
m14_2707 -> m14_2711  [color=darkseagreen4, key=1, label=c1, style=dashed];
m14_2707 -> m14_2712  [color=darkseagreen4, key=1, label=c1, style=dashed];
m14_2707 -> m14_2713  [color=darkseagreen4, key=1, label=c1, style=dashed];
m14_2707 -> m14_2714  [color=darkseagreen4, key=1, label=c1, style=dashed];
m14_2707 -> m14_2715  [color=darkseagreen4, key=1, label=c1, style=dashed];
m14_2708 -> m14_2709  [key=0, style=solid];
m14_2708 -> m14_61  [key=2, style=dotted];
m14_2708 -> m14_2710  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_2711 -> m14_2712  [key=0, style=solid];
m14_2711 -> m14_10  [key=2, style=dotted];
m14_2712 -> m14_2713  [key=0, style=solid];
m14_2712 -> m14_10  [key=2, style=dotted];
m14_2713 -> m14_2714  [key=0, style=solid];
m14_2713 -> m14_10  [key=2, style=dotted];
m14_2714 -> m14_2715  [key=0, style=solid];
m14_2714 -> m14_10  [key=2, style=dotted];
m14_2715 -> m14_2716  [key=0, style=solid];
m14_2715 -> m14_10  [key=2, style=dotted];
m14_2709 -> m14_2710  [key=0, style=solid];
m14_2709 -> m14_62  [key=2, style=dotted];
m14_2710 -> m14_2711  [key=0, style=solid];
m14_2710 -> m14_11  [key=2, style=dotted];
m14_2710 -> m14_2712  [color=darkseagreen4, key=1, label=c2, style=dashed];
m14_2710 -> m14_2713  [color=darkseagreen4, key=1, label=c2, style=dashed];
m14_2710 -> m14_2714  [color=darkseagreen4, key=1, label=c2, style=dashed];
m14_2710 -> m14_2715  [color=darkseagreen4, key=1, label=c2, style=dashed];
m14_2716 -> m14_2706  [color=blue, key=0, style=bold];
m14_3683 -> m14_3684  [key=0, style=solid];
m14_3684 -> m14_3685  [key=0, style=solid];
m14_3684 -> m14_3599  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_3685 -> m14_3686  [key=0, style=solid];
m14_3685 -> m14_196  [key=2, style=dotted];
m14_3685 -> m14_577  [key=2, style=dotted];
m14_3685 -> m14_302  [key=2, style=dotted];
m14_3685 -> m14_3687  [color=darkseagreen4, key=1, label=people, style=dashed];
m14_3685 -> m14_3688  [color=darkseagreen4, key=1, label=people, style=dashed];
m14_3686 -> m14_3687  [key=0, style=solid];
m14_3686 -> m14_10  [key=2, style=dotted];
m14_3687 -> m14_3688  [key=0, style=solid];
m14_3687 -> m14_3689  [color=darkseagreen4, key=1, label=john, style=dashed];
m14_3687 -> m14_3690  [color=darkseagreen4, key=1, label=john, style=dashed];
m14_3688 -> m14_3689  [key=0, style=solid];
m14_3688 -> m14_3690  [color=darkseagreen4, key=1, label=jane, style=dashed];
m14_3689 -> m14_3690  [key=0, style=solid];
m14_3689 -> m14_10  [key=2, style=dotted];
m14_3690 -> m14_3691  [key=0, style=solid];
m14_3690 -> m14_10  [key=2, style=dotted];
m14_3691 -> m14_3683  [color=blue, key=0, style=bold];
m14_1777 -> m14_1778  [key=0, style=solid];
m14_1778 -> m14_1779  [key=0, style=solid];
m14_1778 -> m14_1782  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_1778 -> m14_1764  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_1779 -> m14_1780  [key=0, style=solid];
m14_1779 -> m14_88  [key=2, style=dotted];
m14_1779 -> m14_1781  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_1780 -> m14_1777  [color=blue, key=0, style=bold];
m14_3403 -> m14_3404  [key=0, style=solid];
m14_3404 -> m14_3405  [key=0, style=solid];
m14_3404 -> m14_3404  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_3405 -> m14_3406  [key=0, style=solid];
m14_3405 -> m14_11  [key=2, style=dotted];
m14_3405 -> m14_3407  [color=darkseagreen4, key=1, label=l, style=dashed];
m14_3406 -> m14_3407  [key=0, style=solid];
m14_3406 -> m14_10  [key=2, style=dotted];
m14_3407 -> m14_3408  [key=0, style=solid];
m14_3407 -> m14_10  [key=2, style=dotted];
m14_3408 -> m14_3403  [color=blue, key=0, style=bold];
m14_3968 -> m14_3969  [color=red, key=0, style=solid];
m14_3968 -> m14_1160  [color=darkorchid, key=3, label="method methodReturn object ReadJson", style=bold];
m14_3969 -> m14_3970  [color=red, key=0, style=solid];
m14_3969 -> m14_47  [color=red, key=2, style=dotted];
m14_3969 -> m14_3972  [color=red, key=1, label=messageJObject, style=dashed];
m14_3969 -> m14_3975  [color=red, key=1, label=messageJObject, style=dashed];
m14_3970 -> m14_3971  [color=red, key=0, style=solid];
m14_3970 -> m14_3972  [color=red, key=0, style=solid];
m14_3972 -> m14_3973  [color=red, key=0, style=solid];
m14_3972 -> m14_3979  [color=red, key=2, style=dotted];
m14_3972 -> m14_3980  [color=red, key=2, style=dotted];
m14_3972 -> m14_3976  [color=red, key=1, label=address, style=dashed];
m14_3972 -> m14_3977  [color=red, key=1, label=address, style=dashed];
m14_3975 -> m14_3976  [color=red, key=0, style=solid];
m14_3975 -> m14_3977  [color=red, key=0, style=solid];
m14_3975 -> m14_3981  [color=red, key=2, style=dotted];
m14_3975 -> m14_3980  [color=red, key=2, style=dotted];
m14_3975 -> m14_3982  [color=red, key=2, style=dotted];
m14_3975 -> m14_3975  [color=red, key=1, label=displayNameToken, style=dashed];
m14_3971 -> m14_3978  [color=red, key=0, style=solid];
m14_3973 -> m14_3974  [color=red, key=0, style=solid];
m14_3973 -> m14_3975  [color=red, key=1, label=displayNameToken, style=dashed];
m14_3976 -> m14_3978  [color=red, key=0, style=solid];
m14_3976 -> m14_3983  [color=red, key=2, style=dotted];
m14_3977 -> m14_3978  [color=red, key=0, style=solid];
m14_3977 -> m14_3984  [color=red, key=2, style=dotted];
m14_3974 -> m14_3975  [color=red, key=0, style=solid];
m14_3978 -> m14_3968  [color=blue, key=0, style=bold];
m14_1819 -> m14_1820  [key=0, style=solid];
m14_1820 -> m14_1821  [key=0, style=solid];
m14_1820 -> m14_170  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_1821 -> m14_1822  [key=0, style=solid];
m14_1821 -> m14_11  [key=2, style=dotted];
m14_1822 -> m14_1823  [key=0, style=solid];
m14_1822 -> m14_1825  [key=0, style=solid];
m14_1822 -> m14_48  [key=2, style=dotted];
m14_1823 -> m14_1824  [key=0, style=solid];
m14_1824 -> m14_1825  [key=0, style=solid];
m14_1824 -> m14_1460  [key=2, style=dotted];
m14_1824 -> m14_49  [key=2, style=dotted];
m14_1825 -> m14_1819  [color=blue, key=0, style=bold];
m14_579 -> m14_580  [key=0, style=solid];
m14_580 -> m14_581  [key=0, style=solid];
m14_580 -> m14_196  [key=2, style=dotted];
m14_580 -> m14_582  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_580 -> m14_583  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_580 -> m14_584  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_580 -> m14_585  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_580 -> m14_586  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_580 -> m14_587  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_580 -> m14_588  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_580 -> m14_589  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_580 -> m14_591  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_580 -> m14_592  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_580 -> m14_593  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_580 -> m14_594  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_580 -> m14_595  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_580 -> m14_596  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_580 -> m14_597  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_580 -> m14_598  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_580 -> m14_599  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_580 -> m14_600  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_580 -> m14_601  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_580 -> m14_602  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_580 -> m14_603  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_580 -> m14_604  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_580 -> m14_605  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_580 -> m14_606  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_580 -> m14_607  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_580 -> m14_608  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_580 -> m14_609  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_580 -> m14_610  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_580 -> m14_611  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_580 -> m14_612  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_580 -> m14_613  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_580 -> m14_614  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_580 -> m14_615  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_580 -> m14_616  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_580 -> m14_617  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_580 -> m14_618  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_580 -> m14_619  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_580 -> m14_620  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_580 -> m14_621  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_580 -> m14_622  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_580 -> m14_623  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_580 -> m14_624  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_580 -> m14_625  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_580 -> m14_626  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_580 -> m14_628  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_580 -> m14_629  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_580 -> m14_630  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_580 -> m14_631  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_580 -> m14_632  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_580 -> m14_633  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_580 -> m14_634  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_580 -> m14_636  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_580 -> m14_637  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_580 -> m14_638  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_580 -> m14_639  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_580 -> m14_640  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_580 -> m14_641  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_580 -> m14_642  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_580 -> m14_643  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_580 -> m14_644  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_580 -> m14_645  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_580 -> m14_646  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_581 -> m14_582  [key=0, style=solid];
m14_581 -> m14_570  [key=2, style=dotted];
m14_581 -> m14_583  [color=darkseagreen4, key=1, label=customBinder, style=dashed];
m14_582 -> m14_583  [key=0, style=solid];
m14_583 -> m14_584  [key=0, style=solid];
m14_583 -> m14_10  [key=2, style=dotted];
m14_584 -> m14_585  [key=0, style=solid];
m14_585 -> m14_586  [key=0, style=solid];
m14_585 -> m14_10  [key=2, style=dotted];
m14_586 -> m14_587  [key=0, style=solid];
m14_587 -> m14_588  [key=0, style=solid];
m14_587 -> m14_10  [key=2, style=dotted];
m14_588 -> m14_589  [key=0, style=solid];
m14_588 -> m14_572  [key=2, style=dotted];
m14_589 -> m14_590  [key=0, style=solid];
m14_589 -> m14_572  [key=2, style=dotted];
m14_589 -> m14_10  [key=2, style=dotted];
m14_591 -> m14_592  [key=0, style=solid];
m14_592 -> m14_593  [key=0, style=solid];
m14_592 -> m14_10  [key=2, style=dotted];
m14_593 -> m14_594  [key=0, style=solid];
m14_593 -> m14_249  [key=2, style=dotted];
m14_593 -> m14_354  [key=2, style=dotted];
m14_594 -> m14_595  [key=0, style=solid];
m14_594 -> m14_10  [key=2, style=dotted];
m14_595 -> m14_596  [key=0, style=solid];
m14_595 -> m14_575  [key=2, style=dotted];
m14_596 -> m14_597  [key=0, style=solid];
m14_596 -> m14_576  [key=2, style=dotted];
m14_596 -> m14_10  [key=2, style=dotted];
m14_597 -> m14_598  [key=0, style=solid];
m14_598 -> m14_599  [key=0, style=solid];
m14_598 -> m14_10  [key=2, style=dotted];
m14_599 -> m14_600  [key=0, style=solid];
m14_600 -> m14_601  [key=0, style=solid];
m14_600 -> m14_10  [key=2, style=dotted];
m14_601 -> m14_602  [key=0, style=solid];
m14_602 -> m14_603  [key=0, style=solid];
m14_602 -> m14_10  [key=2, style=dotted];
m14_603 -> m14_604  [key=0, style=solid];
m14_604 -> m14_605  [key=0, style=solid];
m14_604 -> m14_10  [key=2, style=dotted];
m14_605 -> m14_606  [key=0, style=solid];
m14_606 -> m14_607  [key=0, style=solid];
m14_606 -> m14_10  [key=2, style=dotted];
m14_607 -> m14_608  [key=0, style=solid];
m14_608 -> m14_609  [key=0, style=solid];
m14_608 -> m14_10  [key=2, style=dotted];
m14_609 -> m14_610  [key=0, style=solid];
m14_610 -> m14_611  [key=0, style=solid];
m14_610 -> m14_10  [key=2, style=dotted];
m14_611 -> m14_612  [key=0, style=solid];
m14_612 -> m14_613  [key=0, style=solid];
m14_612 -> m14_10  [key=2, style=dotted];
m14_613 -> m14_614  [key=0, style=solid];
m14_614 -> m14_615  [key=0, style=solid];
m14_614 -> m14_10  [key=2, style=dotted];
m14_615 -> m14_616  [key=0, style=solid];
m14_616 -> m14_617  [key=0, style=solid];
m14_616 -> m14_10  [key=2, style=dotted];
m14_617 -> m14_618  [key=0, style=solid];
m14_618 -> m14_619  [key=0, style=solid];
m14_618 -> m14_10  [key=2, style=dotted];
m14_619 -> m14_620  [key=0, style=solid];
m14_620 -> m14_621  [key=0, style=solid];
m14_620 -> m14_10  [key=2, style=dotted];
m14_621 -> m14_622  [key=0, style=solid];
m14_622 -> m14_623  [key=0, style=solid];
m14_622 -> m14_10  [key=2, style=dotted];
m14_623 -> m14_624  [key=0, style=solid];
m14_624 -> m14_625  [key=0, style=solid];
m14_624 -> m14_10  [key=2, style=dotted];
m14_625 -> m14_626  [key=0, style=solid];
m14_626 -> m14_627  [key=0, style=solid];
m14_626 -> m14_10  [key=2, style=dotted];
m14_628 -> m14_629  [key=0, style=solid];
m14_629 -> m14_630  [key=0, style=solid];
m14_629 -> m14_10  [key=2, style=dotted];
m14_630 -> m14_631  [key=0, style=solid];
m14_630 -> m14_648  [key=2, style=dotted];
m14_630 -> m14_10  [key=2, style=dotted];
m14_631 -> m14_632  [key=0, style=solid];
m14_632 -> m14_633  [key=0, style=solid];
m14_632 -> m14_648  [key=2, style=dotted];
m14_632 -> m14_10  [key=2, style=dotted];
m14_633 -> m14_634  [key=0, style=solid];
m14_634 -> m14_635  [key=0, style=solid];
m14_634 -> m14_10  [key=2, style=dotted];
m14_636 -> m14_637  [key=0, style=solid];
m14_637 -> m14_638  [key=0, style=solid];
m14_637 -> m14_10  [key=2, style=dotted];
m14_638 -> m14_639  [key=0, style=solid];
m14_639 -> m14_640  [key=0, style=solid];
m14_639 -> m14_10  [key=2, style=dotted];
m14_640 -> m14_641  [key=0, style=solid];
m14_640 -> m14_10  [key=2, style=dotted];
m14_641 -> m14_642  [key=0, style=solid];
m14_642 -> m14_643  [key=0, style=solid];
m14_642 -> m14_10  [key=2, style=dotted];
m14_643 -> m14_644  [key=0, style=solid];
m14_644 -> m14_645  [key=0, style=solid];
m14_644 -> m14_10  [key=2, style=dotted];
m14_645 -> m14_646  [key=0, style=solid];
m14_646 -> m14_647  [key=0, style=solid];
m14_646 -> m14_10  [key=2, style=dotted];
m14_590 -> m14_591  [key=0, style=solid];
m14_590 -> m14_573  [key=2, style=dotted];
m14_590 -> m14_592  [color=darkseagreen4, key=1, label=resolver, style=dashed];
m14_627 -> m14_628  [key=0, style=solid];
m14_627 -> m14_577  [key=2, style=dotted];
m14_627 -> m14_629  [color=darkseagreen4, key=1, label=referenceResolver, style=dashed];
m14_627 -> m14_630  [color=darkseagreen4, key=1, label=referenceResolver, style=dashed];
m14_627 -> m14_631  [color=darkseagreen4, key=1, label=referenceResolver, style=dashed];
m14_627 -> m14_650  [color=darkseagreen4, key=1, label=referenceResolver, style=dashed];
m14_627 -> m14_632  [color=darkseagreen4, key=1, label=referenceResolver, style=dashed];
m14_635 -> m14_636  [key=0, style=solid];
m14_635 -> m14_578  [key=2, style=dotted];
m14_635 -> m14_637  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m14_647 -> m14_579  [color=blue, key=0, style=bold];
m14_2476 -> m14_2477  [key=0, style=solid];
m14_2477 -> m14_2478  [key=0, style=solid];
m14_2477 -> m14_2484  [key=2, style=dotted];
m14_2477 -> m14_2479  [color=darkseagreen4, key=1, label=derived, style=dashed];
m14_2478 -> m14_2479  [key=0, style=solid];
m14_2478 -> m14_196  [key=2, style=dotted];
m14_2478 -> m14_2480  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_2479 -> m14_2480  [key=0, style=solid];
m14_2479 -> m14_212  [key=2, style=dotted];
m14_2480 -> m14_2481  [key=0, style=solid];
m14_2480 -> m14_302  [key=2, style=dotted];
m14_2480 -> m14_2482  [color=darkseagreen4, key=1, label=meh, style=dashed];
m14_2481 -> m14_2482  [key=0, style=solid];
m14_2481 -> m14_10  [key=2, style=dotted];
m14_2482 -> m14_2483  [key=0, style=solid];
m14_2482 -> m14_10  [key=2, style=dotted];
m14_2483 -> m14_2476  [color=blue, key=0, style=bold];
m14_1805 -> m14_1806  [key=0, style=solid];
m14_1806 -> m14_1807  [key=0, style=solid];
m14_1806 -> m14_1810  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_1806 -> m14_1806  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_1807 -> m14_1808  [key=0, style=solid];
m14_1807 -> m14_88  [key=2, style=dotted];
m14_1807 -> m14_1809  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_1808 -> m14_1805  [color=blue, key=0, style=bold];
m14_428 -> m14_429  [key=0, style=solid];
m14_429 -> m14_430  [key=0, style=solid];
m14_429 -> m14_436  [key=2, style=dotted];
m14_429 -> m14_432  [color=darkseagreen4, key=1, label=input, style=dashed];
m14_429 -> m14_433  [color=darkseagreen4, key=1, label=input, style=dashed];
m14_429 -> m14_434  [color=darkseagreen4, key=1, label=input, style=dashed];
m14_430 -> m14_431  [key=0, style=solid];
m14_430 -> m14_9  [key=2, style=dotted];
m14_432 -> m14_433  [key=0, style=solid];
m14_432 -> m14_10  [key=2, style=dotted];
m14_433 -> m14_434  [key=0, style=solid];
m14_433 -> m14_10  [key=2, style=dotted];
m14_434 -> m14_435  [key=0, style=solid];
m14_434 -> m14_10  [key=2, style=dotted];
m14_431 -> m14_432  [key=0, style=solid];
m14_431 -> m14_11  [key=2, style=dotted];
m14_431 -> m14_433  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m14_431 -> m14_434  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m14_435 -> m14_428  [color=blue, key=0, style=bold];
m14_3760 -> m14_3761  [color=red, key=0, style=solid];
m14_3761 -> m14_3762  [color=red, key=0, style=solid];
m14_3761 -> m14_3750  [color=red, key=2, style=dotted];
m14_3762 -> m14_3760  [color=blue, key=0, style=bold];
m14_2457 -> m14_2458  [key=0, style=solid];
m14_2458 -> m14_2459  [key=0, style=solid];
m14_2458 -> m14_2458  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_2459 -> m14_2460  [key=0, style=solid];
m14_2459 -> m14_43  [key=2, style=dotted];
m14_2459 -> m14_403  [key=2, style=dotted];
m14_2459 -> m14_2462  [color=darkseagreen4, key=1, label=reader, style=dashed];
m14_2460 -> m14_2461  [key=0, style=solid];
m14_2462 -> m14_2463  [key=0, style=solid];
m14_2462 -> m14_47  [key=2, style=dotted];
m14_2461 -> m14_2462  [key=0, style=solid];
m14_2461 -> m14_46  [key=2, style=dotted];
m14_2463 -> m14_2464  [key=0, style=solid];
m14_2463 -> m14_10  [key=2, style=dotted];
m14_2464 -> m14_2457  [color=blue, key=0, style=bold];
m14_1257 -> m14_1258  [key=0, style=solid];
m14_1258 -> m14_1259  [key=0, style=solid];
m14_1258 -> m14_1264  [key=2, style=dotted];
m14_1258 -> m14_1262  [color=darkseagreen4, key=1, label=ts, style=dashed];
m14_1259 -> m14_1260  [key=0, style=solid];
m14_1259 -> m14_1265  [key=2, style=dotted];
m14_1259 -> m14_61  [key=2, style=dotted];
m14_1259 -> m14_1261  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_1262 -> m14_1263  [key=0, style=solid];
m14_1262 -> m14_10  [key=2, style=dotted];
m14_1260 -> m14_1261  [key=0, style=solid];
m14_1260 -> m14_62  [key=2, style=dotted];
m14_1261 -> m14_1262  [key=0, style=solid];
m14_1261 -> m14_11  [key=2, style=dotted];
m14_1263 -> m14_1257  [color=blue, key=0, style=bold];
m14_3409 -> m14_3410  [key=0, style=solid];
m14_3410 -> m14_3411  [key=0, style=solid];
m14_3410 -> m14_3418  [key=2, style=dotted];
m14_3411 -> m14_3412  [key=0, style=solid];
m14_3411 -> m14_9  [key=2, style=dotted];
m14_3411 -> m14_3414  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_3411 -> m14_3421  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_3412 -> m14_3413  [key=0, style=solid];
m14_3412 -> m14_10  [key=2, style=dotted];
m14_3414 -> m14_3415  [key=0, style=solid];
m14_3414 -> m14_3414  [color=darkorchid, key=3, label="Local variable Newtonsoft.Json.Serialization.Action doStuff", style=bold];
m14_3413 -> m14_3414  [key=0, style=solid];
m14_3413 -> m14_1160  [color=darkorchid, key=3, label="Local variable Newtonsoft.Json.Tests.TestObjects.MyTuple<int> obj", style=bold];
m14_3415 -> m14_3416  [key=0, style=solid];
m14_3415 -> m14_3419  [key=2, style=dotted];
m14_3416 -> m14_3417  [key=0, style=solid];
m14_3416 -> m14_10  [key=2, style=dotted];
m14_3417 -> m14_3409  [color=blue, key=0, style=bold];
m14_724 -> m14_725  [key=0, style=solid];
m14_725 -> m14_726  [key=0, style=solid];
m14_725 -> m14_732  [key=2, style=dotted];
m14_725 -> m14_729  [color=darkseagreen4, key=1, label=ratio, style=dashed];
m14_726 -> m14_727  [key=0, style=solid];
m14_726 -> m14_9  [key=2, style=dotted];
m14_726 -> m14_728  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_729 -> m14_730  [key=0, style=solid];
m14_729 -> m14_10  [key=2, style=dotted];
m14_729 -> m14_729  [color=darkseagreen4, key=1, label=ratio, style=dashed];
m14_727 -> m14_728  [key=0, style=solid];
m14_727 -> m14_10  [key=2, style=dotted];
m14_728 -> m14_729  [key=0, style=solid];
m14_728 -> m14_11  [key=2, style=dotted];
m14_730 -> m14_731  [key=0, style=solid];
m14_730 -> m14_10  [key=2, style=dotted];
m14_730 -> m14_730  [color=darkseagreen4, key=1, label=ratio, style=dashed];
m14_731 -> m14_724  [color=blue, key=0, style=bold];
m14_2933 -> m14_2934  [key=0, style=solid];
m14_2934 -> m14_2935  [key=0, style=solid];
m14_2934 -> m14_196  [key=2, style=dotted];
m14_2934 -> m14_848  [key=2, style=dotted];
m14_2935 -> m14_2936  [key=0, style=solid];
m14_2935 -> m14_43  [key=2, style=dotted];
m14_2935 -> m14_403  [key=2, style=dotted];
m14_2935 -> m14_47  [key=2, style=dotted];
m14_2935 -> m14_2937  [color=darkseagreen4, key=1, label=dict, style=dashed];
m14_2936 -> m14_2937  [key=0, style=solid];
m14_2936 -> m14_10  [key=2, style=dotted];
m14_2937 -> m14_2938  [key=0, style=solid];
m14_2937 -> m14_10  [key=2, style=dotted];
m14_2938 -> m14_2933  [color=blue, key=0, style=bold];
m14_169 -> m14_170  [key=0, style=solid];
m14_170 -> m14_171  [key=0, style=solid];
m14_170 -> m14_11  [key=2, style=dotted];
m14_171 -> m14_172  [key=0, style=solid];
m14_171 -> m14_173  [key=2, style=dotted];
m14_172 -> m14_169  [color=blue, key=0, style=bold];
m14_3224 -> m14_3225  [key=0, style=solid];
m14_3225 -> m14_3226  [key=0, style=solid];
m14_3225 -> m14_46  [key=2, style=dotted];
m14_3225 -> m14_43  [key=2, style=dotted];
m14_3225 -> m14_403  [key=2, style=dotted];
m14_3225 -> m14_2779  [key=2, style=dotted];
m14_3226 -> m14_3227  [key=0, style=solid];
m14_3226 -> m14_10  [key=2, style=dotted];
m14_3227 -> m14_3224  [color=blue, key=0, style=bold];
m14_3373 -> m14_3374  [key=0, style=solid];
m14_3374 -> m14_3375  [key=0, style=solid];
m14_3374 -> m14_11  [key=2, style=dotted];
m14_3375 -> m14_3376  [key=0, style=solid];
m14_3375 -> m14_10  [key=2, style=dotted];
m14_3375 -> m14_3375  [color=darkseagreen4, key=1, label=result, style=dashed];
m14_3376 -> m14_3377  [key=0, style=solid];
m14_3376 -> m14_10  [key=2, style=dotted];
m14_3376 -> m14_3376  [color=darkseagreen4, key=1, label=result, style=dashed];
m14_3377 -> m14_3373  [color=blue, key=0, style=bold];
m14_2052 -> m14_2053  [key=0, style=solid];
m14_2053 -> m14_2052  [color=blue, key=0, style=bold];
m14_3630 -> m14_3631  [color=red, key=0, style=solid];
m14_3631 -> m14_3632  [color=red, key=0, style=solid];
m14_3631 -> m14_3633  [color=red, key=2, style=dotted];
m14_3632 -> m14_3630  [color=blue, key=0, style=bold];
m14_958 -> m14_959  [key=0, style=solid];
m14_959 -> m14_960  [key=0, style=solid];
m14_959 -> m14_959  [color=darkorchid, key=3, label="Local variable string value", style=bold];
m14_960 -> m14_961  [key=0, style=solid];
m14_960 -> m14_939  [key=2, style=dotted];
m14_960 -> m14_962  [color=darkseagreen4, key=1, label=p, style=dashed];
m14_960 -> m14_963  [color=darkseagreen4, key=1, label=p, style=dashed];
m14_961 -> m14_962  [key=0, style=solid];
m14_961 -> m14_10  [key=2, style=dotted];
m14_962 -> m14_963  [key=0, style=solid];
m14_962 -> m14_965  [key=2, style=dotted];
m14_962 -> m14_10  [key=2, style=dotted];
m14_963 -> m14_964  [key=0, style=solid];
m14_963 -> m14_10  [key=2, style=dotted];
m14_964 -> m14_958  [color=blue, key=0, style=bold];
m14_1511 -> m14_1512  [key=0, style=solid];
m14_1512 -> m14_1513  [key=0, style=solid];
m14_1512 -> m14_1515  [key=2, style=dotted];
m14_1512 -> m14_1105  [key=2, style=dotted];
m14_1513 -> m14_1514  [key=0, style=solid];
m14_1514 -> m14_1511  [color=blue, key=0, style=bold];
m14_1558 -> m14_1559  [key=0, style=solid];
m14_1559 -> m14_1560  [key=0, style=solid];
m14_1559 -> m14_1550  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_1560 -> m14_1561  [key=0, style=solid];
m14_1560 -> m14_11  [key=2, style=dotted];
m14_1561 -> m14_1562  [key=0, style=solid];
m14_1561 -> m14_1564  [key=0, style=solid];
m14_1561 -> m14_48  [key=2, style=dotted];
m14_1562 -> m14_1563  [key=0, style=solid];
m14_1563 -> m14_1564  [key=0, style=solid];
m14_1563 -> m14_1460  [key=2, style=dotted];
m14_1563 -> m14_49  [key=2, style=dotted];
m14_1564 -> m14_1558  [color=blue, key=0, style=bold];
m14_1468 -> m14_1469  [key=0, style=solid];
m14_1469 -> m14_1470  [key=0, style=solid];
m14_1469 -> m14_1469  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_1470 -> m14_1471  [key=0, style=solid];
m14_1470 -> m14_11  [key=2, style=dotted];
m14_1471 -> m14_1472  [key=0, style=solid];
m14_1471 -> m14_1474  [key=0, style=solid];
m14_1471 -> m14_48  [key=2, style=dotted];
m14_1472 -> m14_1473  [key=0, style=solid];
m14_1473 -> m14_1474  [key=0, style=solid];
m14_1473 -> m14_1460  [key=2, style=dotted];
m14_1473 -> m14_49  [key=2, style=dotted];
m14_1474 -> m14_1468  [color=blue, key=0, style=bold];
m14_1461 -> m14_1462  [key=0, style=solid];
m14_1462 -> m14_1463  [key=0, style=solid];
m14_1462 -> m14_88  [key=2, style=dotted];
m14_1462 -> m14_1464  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_1463 -> m14_1461  [color=blue, key=0, style=bold];
m14_2489 -> m14_2490  [color=red, key=0, style=solid];
m14_2490 -> m14_2491  [color=red, key=0, style=solid];
m14_2490 -> m14_2492  [color=red, key=2, style=dotted];
m14_2491 -> m14_2489  [color=blue, key=0, style=bold];
m14_3790 -> m14_3791  [color=red, key=0, style=solid];
m14_3791 -> m14_3792  [color=red, key=0, style=solid];
m14_3791 -> m14_3750  [color=red, key=2, style=dotted];
m14_3792 -> m14_3790  [color=blue, key=0, style=bold];
m14_3047 -> m14_3048  [key=0, style=solid];
m14_3048 -> m14_3049  [key=0, style=solid];
m14_3048 -> m14_3055  [key=2, style=dotted];
m14_3048 -> m14_3050  [color=darkseagreen4, key=1, label=person, style=dashed];
m14_3048 -> m14_3051  [color=darkseagreen4, key=1, label=person, style=dashed];
m14_3048 -> m14_3053  [color=darkseagreen4, key=1, label=person, style=dashed];
m14_3049 -> m14_3050  [key=0, style=solid];
m14_3050 -> m14_3051  [key=0, style=solid];
m14_3051 -> m14_3052  [key=0, style=solid];
m14_3051 -> m14_9  [key=2, style=dotted];
m14_3053 -> m14_3054  [key=0, style=solid];
m14_3053 -> m14_10  [key=2, style=dotted];
m14_3052 -> m14_3053  [key=0, style=solid];
m14_3052 -> m14_11  [key=2, style=dotted];
m14_3054 -> m14_3047  [color=blue, key=0, style=bold];
m14_1669 -> m14_1670  [key=0, style=solid];
m14_1670 -> m14_1671  [key=0, style=solid];
m14_1670 -> m14_1670  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_1671 -> m14_1672  [key=0, style=solid];
m14_1671 -> m14_939  [key=2, style=dotted];
m14_1671 -> m14_1673  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m14_1671 -> m14_1674  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m14_1671 -> m14_1675  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m14_1671 -> m14_1676  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m14_1671 -> m14_1677  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m14_1672 -> m14_1673  [key=0, style=solid];
m14_1672 -> m14_10  [key=2, style=dotted];
m14_1673 -> m14_1674  [key=0, style=solid];
m14_1673 -> m14_1105  [key=2, style=dotted];
m14_1673 -> m14_10  [key=2, style=dotted];
m14_1674 -> m14_1675  [key=0, style=solid];
m14_1674 -> m14_10  [key=2, style=dotted];
m14_1675 -> m14_1676  [key=0, style=solid];
m14_1675 -> m14_10  [key=2, style=dotted];
m14_1676 -> m14_1677  [key=0, style=solid];
m14_1676 -> m14_10  [key=2, style=dotted];
m14_1677 -> m14_1678  [key=0, style=solid];
m14_1677 -> m14_10  [key=2, style=dotted];
m14_1678 -> m14_1669  [color=blue, key=0, style=bold];
m14_930 -> m14_931  [key=0, style=solid];
m14_931 -> m14_932  [key=0, style=solid];
m14_931 -> m14_938  [key=2, style=dotted];
m14_931 -> m14_934  [color=darkseagreen4, key=1, label=store, style=dashed];
m14_931 -> m14_935  [color=darkseagreen4, key=1, label=store, style=dashed];
m14_932 -> m14_933  [key=0, style=solid];
m14_932 -> m14_9  [key=2, style=dotted];
m14_932 -> m14_936  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m14_934 -> m14_935  [key=0, style=solid];
m14_934 -> m14_10  [key=2, style=dotted];
m14_935 -> m14_936  [key=0, style=solid];
m14_935 -> m14_10  [key=2, style=dotted];
m14_933 -> m14_934  [key=0, style=solid];
m14_933 -> m14_939  [key=2, style=dotted];
m14_933 -> m14_935  [color=darkseagreen4, key=1, label=deserializedStore, style=dashed];
m14_936 -> m14_937  [key=0, style=solid];
m14_936 -> m14_940  [key=2, style=dotted];
m14_937 -> m14_930  [color=blue, key=0, style=bold];
m14_3505 -> m14_3506  [key=0, style=solid];
m14_3506 -> m14_3505  [color=blue, key=0, style=bold];
m14_3249 -> m14_3250  [key=0, style=solid];
m14_3250 -> m14_3251  [key=0, style=solid];
m14_3250 -> m14_3254  [key=2, style=dotted];
m14_3250 -> m14_300  [key=2, style=dotted];
m14_3250 -> m14_3255  [key=2, style=dotted];
m14_3251 -> m14_3252  [key=0, style=solid];
m14_3251 -> m14_61  [key=2, style=dotted];
m14_3252 -> m14_3253  [key=0, style=solid];
m14_3252 -> m14_62  [key=2, style=dotted];
m14_3253 -> m14_3249  [color=blue, key=0, style=bold];
m14_1191 -> m14_1192  [key=0, style=solid];
m14_1192 -> m14_1193  [key=0, style=solid];
m14_1192 -> m14_1207  [key=2, style=dotted];
m14_1192 -> m14_1194  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m14_1192 -> m14_1195  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m14_1192 -> m14_1196  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m14_1192 -> m14_1197  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m14_1193 -> m14_1194  [key=0, style=solid];
m14_1194 -> m14_1195  [key=0, style=solid];
m14_1194 -> m14_354  [key=2, style=dotted];
m14_1195 -> m14_1196  [key=0, style=solid];
m14_1195 -> m14_354  [key=2, style=dotted];
m14_1196 -> m14_1197  [key=0, style=solid];
m14_1196 -> m14_354  [key=2, style=dotted];
m14_1197 -> m14_1198  [key=0, style=solid];
m14_1197 -> m14_9  [key=2, style=dotted];
m14_1198 -> m14_1199  [key=0, style=solid];
m14_1198 -> m14_11  [key=2, style=dotted];
m14_1198 -> m14_1200  [color=darkseagreen4, key=1, label=wibbleOut, style=dashed];
m14_1198 -> m14_1201  [color=darkseagreen4, key=1, label=wibbleOut, style=dashed];
m14_1198 -> m14_1202  [color=darkseagreen4, key=1, label=wibbleOut, style=dashed];
m14_1198 -> m14_1203  [color=darkseagreen4, key=1, label=wibbleOut, style=dashed];
m14_1198 -> m14_1204  [color=darkseagreen4, key=1, label=wibbleOut, style=dashed];
m14_1198 -> m14_1205  [color=darkseagreen4, key=1, label=wibbleOut, style=dashed];
m14_1199 -> m14_1200  [key=0, style=solid];
m14_1199 -> m14_10  [key=2, style=dotted];
m14_1200 -> m14_1201  [key=0, style=solid];
m14_1200 -> m14_10  [key=2, style=dotted];
m14_1201 -> m14_1202  [key=0, style=solid];
m14_1201 -> m14_10  [key=2, style=dotted];
m14_1202 -> m14_1203  [key=0, style=solid];
m14_1202 -> m14_10  [key=2, style=dotted];
m14_1203 -> m14_1204  [key=0, style=solid];
m14_1203 -> m14_10  [key=2, style=dotted];
m14_1204 -> m14_1205  [key=0, style=solid];
m14_1204 -> m14_10  [key=2, style=dotted];
m14_1205 -> m14_1206  [key=0, style=solid];
m14_1205 -> m14_10  [key=2, style=dotted];
m14_1206 -> m14_1191  [color=blue, key=0, style=bold];
m14_2140 -> m14_2141  [key=0, style=solid];
m14_2141 -> m14_2142  [key=0, style=solid];
m14_2141 -> m14_1515  [key=2, style=dotted];
m14_2141 -> m14_2143  [color=darkseagreen4, key=1, label=person, style=dashed];
m14_2141 -> m14_2144  [color=darkseagreen4, key=1, label=person, style=dashed];
m14_2141 -> m14_2145  [color=darkseagreen4, key=1, label=person, style=dashed];
m14_2141 -> m14_2149  [color=darkseagreen4, key=1, label=person, style=dashed];
m14_2142 -> m14_2143  [key=0, style=solid];
m14_2142 -> m14_1105  [key=2, style=dotted];
m14_2143 -> m14_2144  [key=0, style=solid];
m14_2144 -> m14_2145  [key=0, style=solid];
m14_2145 -> m14_2146  [key=0, style=solid];
m14_2149 -> m14_2150  [key=0, style=solid];
m14_2149 -> m14_2139  [key=2, style=dotted];
m14_2146 -> m14_2147  [key=0, style=solid];
m14_2146 -> m14_406  [key=2, style=dotted];
m14_2146 -> m14_1113  [key=2, style=dotted];
m14_2146 -> m14_2149  [color=darkseagreen4, key=1, label=dateTimeOffset, style=dashed];
m14_2146 -> m14_2155  [color=darkseagreen4, key=1, label=dateTimeOffset, style=dashed];
m14_2147 -> m14_2148  [key=0, style=solid];
m14_2155 -> m14_2156  [key=0, style=solid];
m14_2155 -> m14_10  [key=2, style=dotted];
m14_2148 -> m14_2149  [key=0, style=solid];
m14_2148 -> m14_2151  [color=darkseagreen4, key=1, label=dateTimeOffsetText, style=dashed];
m14_2151 -> m14_2152  [key=0, style=solid];
m14_2151 -> m14_62  [key=2, style=dotted];
m14_2150 -> m14_2151  [key=0, style=solid];
m14_2150 -> m14_196  [key=2, style=dotted];
m14_2150 -> m14_212  [key=2, style=dotted];
m14_2150 -> m14_2152  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_2152 -> m14_2153  [key=0, style=solid];
m14_2152 -> m14_11  [key=2, style=dotted];
m14_2152 -> m14_2154  [color=darkseagreen4, key=1, label=o2, style=dashed];
m14_2152 -> m14_2155  [color=darkseagreen4, key=1, label=o2, style=dashed];
m14_2152 -> m14_2156  [color=darkseagreen4, key=1, label=o2, style=dashed];
m14_2152 -> m14_2157  [color=darkseagreen4, key=1, label=o2, style=dashed];
m14_2152 -> m14_2158  [color=darkseagreen4, key=1, label=o2, style=dashed];
m14_2153 -> m14_2154  [key=0, style=solid];
m14_2153 -> m14_10  [key=2, style=dotted];
m14_2154 -> m14_2155  [key=0, style=solid];
m14_2154 -> m14_10  [key=2, style=dotted];
m14_2156 -> m14_2157  [key=0, style=solid];
m14_2156 -> m14_10  [key=2, style=dotted];
m14_2157 -> m14_2158  [key=0, style=solid];
m14_2157 -> m14_10  [key=2, style=dotted];
m14_2158 -> m14_2159  [key=0, style=solid];
m14_2158 -> m14_10  [key=2, style=dotted];
m14_2159 -> m14_2140  [color=blue, key=0, style=bold];
m14_3445 -> m14_3446  [key=0, style=solid];
m14_3446 -> m14_3447  [key=0, style=solid];
m14_3446 -> m14_3450  [key=2, style=dotted];
m14_3447 -> m14_3448  [key=0, style=solid];
m14_3447 -> m14_196  [key=2, style=dotted];
m14_3447 -> m14_212  [key=2, style=dotted];
m14_3448 -> m14_3449  [key=0, style=solid];
m14_3448 -> m14_62  [key=2, style=dotted];
m14_3449 -> m14_3445  [color=blue, key=0, style=bold];
m14_1338 -> m14_1339  [key=0, style=solid];
m14_1339 -> m14_1340  [key=0, style=solid];
m14_1339 -> m14_1309  [key=2, style=dotted];
m14_1339 -> m14_1344  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m14_1339 -> m14_1345  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m14_1340 -> m14_1341  [key=0, style=solid];
m14_1340 -> m14_1310  [key=2, style=dotted];
m14_1344 -> m14_1345  [key=0, style=solid];
m14_1344 -> m14_10  [key=2, style=dotted];
m14_1345 -> m14_1346  [key=0, style=solid];
m14_1345 -> m14_10  [key=2, style=dotted];
m14_1341 -> m14_1342  [key=0, style=solid];
m14_1341 -> m14_1347  [key=2, style=dotted];
m14_1341 -> m14_1299  [key=2, style=dotted];
m14_1341 -> m14_1343  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_1342 -> m14_1343  [key=0, style=solid];
m14_1342 -> m14_10  [key=2, style=dotted];
m14_1343 -> m14_1344  [key=0, style=solid];
m14_1343 -> m14_1347  [key=2, style=dotted];
m14_1343 -> m14_250  [key=2, style=dotted];
m14_1343 -> m14_1345  [color=darkseagreen4, key=1, label=m2, style=dashed];
m14_1346 -> m14_1338  [color=blue, key=0, style=bold];
m14_2899 -> m14_2900  [key=0, style=solid];
m14_2900 -> m14_2901  [key=0, style=solid];
m14_2900 -> m14_2900  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_2901 -> m14_2902  [key=0, style=solid];
m14_2901 -> m14_11  [key=2, style=dotted];
m14_2902 -> m14_2903  [key=0, style=solid];
m14_2902 -> m14_10  [key=2, style=dotted];
m14_2903 -> m14_2904  [key=0, style=solid];
m14_2904 -> m14_2905  [key=0, style=solid];
m14_2904 -> m14_11  [key=2, style=dotted];
m14_2905 -> m14_2906  [key=0, style=solid];
m14_2905 -> m14_1249  [key=2, style=dotted];
m14_2905 -> m14_10  [key=2, style=dotted];
m14_2906 -> m14_2899  [color=blue, key=0, style=bold];
m14_1709 -> m14_1710  [key=0, style=solid];
m14_1710 -> m14_1711  [key=0, style=solid];
m14_1710 -> m14_1706  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_1711 -> m14_1712  [key=0, style=solid];
m14_1711 -> m14_11  [key=2, style=dotted];
m14_1711 -> m14_1713  [color=darkseagreen4, key=1, label=content, style=dashed];
m14_1711 -> m14_1714  [color=darkseagreen4, key=1, label=content, style=dashed];
m14_1711 -> m14_1715  [color=darkseagreen4, key=1, label=content, style=dashed];
m14_1712 -> m14_1713  [key=0, style=solid];
m14_1712 -> m14_10  [key=2, style=dotted];
m14_1713 -> m14_1714  [key=0, style=solid];
m14_1713 -> m14_10  [key=2, style=dotted];
m14_1714 -> m14_1715  [key=0, style=solid];
m14_1714 -> m14_10  [key=2, style=dotted];
m14_1715 -> m14_1716  [key=0, style=solid];
m14_1715 -> m14_10  [key=2, style=dotted];
m14_1716 -> m14_1709  [color=blue, key=0, style=bold];
m14_4072 -> m14_4073  [key=0, style=solid];
m14_89 -> m14_90  [key=0, style=solid];
m14_90 -> m14_91  [key=0, style=solid];
m14_90 -> m14_11  [key=2, style=dotted];
m14_91 -> m14_89  [color=blue, key=0, style=bold];
m14_95 -> m14_96  [key=0, style=solid];
m14_96 -> m14_97  [key=0, style=solid];
m14_96 -> m14_11  [key=2, style=dotted];
m14_97 -> m14_95  [color=blue, key=0, style=bold];
m14_101 -> m14_102  [key=0, style=solid];
m14_102 -> m14_103  [key=0, style=solid];
m14_102 -> m14_11  [key=2, style=dotted];
m14_103 -> m14_101  [color=blue, key=0, style=bold];
m14_107 -> m14_108  [key=0, style=solid];
m14_108 -> m14_109  [key=0, style=solid];
m14_108 -> m14_11  [key=2, style=dotted];
m14_109 -> m14_107  [color=blue, key=0, style=bold];
m14_160 -> m14_161  [key=0, style=solid];
m14_161 -> m14_162  [key=0, style=solid];
m14_161 -> m14_11  [key=2, style=dotted];
m14_162 -> m14_160  [color=blue, key=0, style=bold];
m14_166 -> m14_167  [key=0, style=solid];
m14_167 -> m14_168  [key=0, style=solid];
m14_167 -> m14_11  [key=2, style=dotted];
m14_168 -> m14_166  [color=blue, key=0, style=bold];
m14_177 -> m14_178  [key=0, style=solid];
m14_178 -> m14_179  [key=0, style=solid];
m14_178 -> m14_11  [key=2, style=dotted];
m14_179 -> m14_177  [color=blue, key=0, style=bold];
m14_188 -> m14_189  [key=0, style=solid];
m14_189 -> m14_190  [key=0, style=solid];
m14_189 -> m14_191  [key=2, style=dotted];
m14_189 -> m14_9  [key=2, style=dotted];
m14_190 -> m14_188  [color=blue, key=0, style=bold];
m14_201 -> m14_202  [key=0, style=solid];
m14_202 -> m14_203  [key=0, style=solid];
m14_202 -> m14_204  [key=2, style=dotted];
m14_202 -> m14_9  [key=2, style=dotted];
m14_203 -> m14_201  [color=blue, key=0, style=bold];
m14_222 -> m14_223  [key=0, style=solid];
m14_225 -> m14_226  [key=0, style=solid];
m14_228 -> m14_229  [key=0, style=solid];
m14_231 -> m14_232  [key=0, style=solid];
m14_234 -> m14_235  [key=0, style=solid];
m14_237 -> m14_238  [key=0, style=solid];
m14_240 -> m14_241  [key=0, style=solid];
m14_223 -> m14_224  [key=0, style=solid];
m14_223 -> m14_11  [key=2, style=dotted];
m14_224 -> m14_222  [color=blue, key=0, style=bold];
m14_226 -> m14_227  [key=0, style=solid];
m14_226 -> m14_11  [key=2, style=dotted];
m14_227 -> m14_225  [color=blue, key=0, style=bold];
m14_229 -> m14_230  [key=0, style=solid];
m14_229 -> m14_11  [key=2, style=dotted];
m14_230 -> m14_228  [color=blue, key=0, style=bold];
m14_232 -> m14_233  [key=0, style=solid];
m14_232 -> m14_11  [key=2, style=dotted];
m14_233 -> m14_231  [color=blue, key=0, style=bold];
m14_235 -> m14_236  [key=0, style=solid];
m14_235 -> m14_11  [key=2, style=dotted];
m14_236 -> m14_234  [color=blue, key=0, style=bold];
m14_238 -> m14_239  [key=0, style=solid];
m14_238 -> m14_11  [key=2, style=dotted];
m14_239 -> m14_237  [color=blue, key=0, style=bold];
m14_241 -> m14_242  [key=0, style=solid];
m14_241 -> m14_11  [key=2, style=dotted];
m14_242 -> m14_240  [color=blue, key=0, style=bold];
m14_264 -> m14_265  [key=0, style=solid];
m14_264 -> m14_9  [key=2, style=dotted];
m14_263 -> m14_264  [key=0, style=solid];
m14_266 -> m14_267  [key=0, style=solid];
m14_269 -> m14_270  [key=0, style=solid];
m14_265 -> m14_263  [color=blue, key=0, style=bold];
m14_267 -> m14_268  [key=0, style=solid];
m14_267 -> m14_11  [key=2, style=dotted];
m14_268 -> m14_266  [color=blue, key=0, style=bold];
m14_270 -> m14_271  [key=0, style=solid];
m14_270 -> m14_11  [key=2, style=dotted];
m14_271 -> m14_269  [color=blue, key=0, style=bold];
m14_284 -> m14_285  [key=0, style=solid];
m14_284 -> m14_9  [key=2, style=dotted];
m14_283 -> m14_284  [key=0, style=solid];
m14_286 -> m14_287  [key=0, style=solid];
m14_285 -> m14_283  [color=blue, key=0, style=bold];
m14_287 -> m14_288  [key=0, style=solid];
m14_287 -> m14_11  [key=2, style=dotted];
m14_288 -> m14_286  [color=blue, key=0, style=bold];
m14_369 -> m14_370  [key=0, style=solid];
m14_368 -> m14_369  [key=0, style=solid];
m14_370 -> m14_368  [color=blue, key=0, style=bold];
m14_469 -> m14_470  [key=0, style=solid];
m14_469 -> m14_11  [key=2, style=dotted];
m14_468 -> m14_469  [key=0, style=solid];
m14_470 -> m14_468  [color=blue, key=0, style=bold];
m14_650 -> m14_651  [key=0, style=solid];
m14_649 -> m14_650  [key=0, style=solid];
m14_651 -> m14_649  [color=blue, key=0, style=bold];
m14_924 -> m14_925  [key=0, style=solid];
m14_927 -> m14_928  [key=0, style=solid];
m14_925 -> m14_926  [key=0, style=solid];
m14_926 -> m14_924  [color=blue, key=0, style=bold];
m14_928 -> m14_929  [key=0, style=solid];
m14_929 -> m14_927  [color=blue, key=0, style=bold];
m14_1059 -> m14_1060  [key=0, style=solid];
m14_1060 -> m14_1061  [key=0, style=solid];
m14_1060 -> m14_1062  [key=2, style=dotted];
m14_1060 -> m14_9  [key=2, style=dotted];
m14_1061 -> m14_1059  [color=blue, key=0, style=bold];
m14_1068 -> m14_1069  [key=0, style=solid];
m14_1068 -> m14_11  [key=2, style=dotted];
m14_1067 -> m14_1068  [key=0, style=solid];
m14_1069 -> m14_1067  [color=blue, key=0, style=bold];
m14_1370 -> m14_1371  [key=0, style=solid];
m14_1371 -> m14_1372  [key=0, style=solid];
m14_1371 -> m14_1374  [key=2, style=dotted];
m14_1372 -> m14_1373  [key=0, style=solid];
m14_1372 -> m14_9  [key=2, style=dotted];
m14_1373 -> m14_1370  [color=blue, key=0, style=bold];
m14_1464 -> m14_1465  [key=0, style=solid];
m14_1465 -> m14_1466  [key=0, style=solid];
m14_1465 -> m14_1445  [key=2, style=dotted];
m14_1465 -> m14_1105  [key=2, style=dotted];
m14_1466 -> m14_1467  [key=0, style=solid];
m14_1466 -> m14_9  [key=2, style=dotted];
m14_1467 -> m14_1464  [color=blue, key=0, style=bold];
m14_1509 -> m14_1510  [key=0, style=solid];
m14_1509 -> m14_939  [key=2, style=dotted];
m14_1508 -> m14_1509  [key=0, style=solid];
m14_1510 -> m14_1508  [color=blue, key=0, style=bold];
m14_1608 -> m14_1609  [key=0, style=solid];
m14_1609 -> m14_1610  [key=0, style=solid];
m14_1609 -> m14_1595  [key=2, style=dotted];
m14_1609 -> m14_1611  [color=darkseagreen4, key=1, label=o, style=dashed];
m14_1610 -> m14_1611  [key=0, style=solid];
m14_1611 -> m14_1612  [key=0, style=solid];
m14_1611 -> m14_196  [key=2, style=dotted];
m14_1611 -> m14_212  [key=2, style=dotted];
m14_1612 -> m14_1608  [color=blue, key=0, style=bold];
m14_1741 -> m14_1742  [key=0, style=solid];
m14_1741 -> m14_11  [key=2, style=dotted];
m14_1740 -> m14_1741  [key=0, style=solid];
m14_1742 -> m14_1740  [color=blue, key=0, style=bold];
m14_1768 -> m14_1769  [key=0, style=solid];
m14_1768 -> m14_11  [key=2, style=dotted];
m14_1767 -> m14_1768  [key=0, style=solid];
m14_1769 -> m14_1767  [color=blue, key=0, style=bold];
m14_1775 -> m14_1776  [key=0, style=solid];
m14_1775 -> m14_11  [key=2, style=dotted];
m14_1774 -> m14_1775  [key=0, style=solid];
m14_1776 -> m14_1774  [color=blue, key=0, style=bold];
m14_1782 -> m14_1783  [key=0, style=solid];
m14_1782 -> m14_11  [key=2, style=dotted];
m14_1781 -> m14_1782  [key=0, style=solid];
m14_1783 -> m14_1781  [color=blue, key=0, style=bold];
m14_1789 -> m14_1790  [key=0, style=solid];
m14_1789 -> m14_11  [key=2, style=dotted];
m14_1788 -> m14_1789  [key=0, style=solid];
m14_1790 -> m14_1788  [color=blue, key=0, style=bold];
m14_1796 -> m14_1797  [key=0, style=solid];
m14_1796 -> m14_11  [key=2, style=dotted];
m14_1795 -> m14_1796  [key=0, style=solid];
m14_1797 -> m14_1795  [color=blue, key=0, style=bold];
m14_1803 -> m14_1804  [key=0, style=solid];
m14_1803 -> m14_11  [key=2, style=dotted];
m14_1802 -> m14_1803  [key=0, style=solid];
m14_1804 -> m14_1802  [color=blue, key=0, style=bold];
m14_1810 -> m14_1811  [key=0, style=solid];
m14_1810 -> m14_11  [key=2, style=dotted];
m14_1809 -> m14_1810  [key=0, style=solid];
m14_1811 -> m14_1809  [color=blue, key=0, style=bold];
m14_1817 -> m14_1818  [key=0, style=solid];
m14_1817 -> m14_11  [key=2, style=dotted];
m14_1816 -> m14_1817  [key=0, style=solid];
m14_1818 -> m14_1816  [color=blue, key=0, style=bold];
m14_1831 -> m14_1832  [key=0, style=solid];
m14_1831 -> m14_1515  [key=2, style=dotted];
m14_1831 -> m14_1833  [key=2, style=dotted];
m14_1830 -> m14_1831  [key=0, style=solid];
m14_1832 -> m14_1830  [color=blue, key=0, style=bold];
m14_1839 -> m14_1840  [key=0, style=solid];
m14_1839 -> m14_300  [key=2, style=dotted];
m14_1839 -> m14_1833  [key=2, style=dotted];
m14_1838 -> m14_1839  [key=0, style=solid];
m14_1840 -> m14_1838  [color=blue, key=0, style=bold];
m14_1849 -> m14_1850  [key=0, style=solid];
m14_1850 -> m14_1851  [key=0, style=solid];
m14_1850 -> m14_849  [key=2, style=dotted];
m14_1850 -> m14_196  [key=2, style=dotted];
m14_1850 -> m14_1852  [key=2, style=dotted];
m14_1850 -> m14_197  [key=2, style=dotted];
m14_1851 -> m14_1849  [color=blue, key=0, style=bold];
m14_1856 -> m14_1857  [key=0, style=solid];
m14_1857 -> m14_1858  [key=0, style=solid];
m14_1857 -> m14_196  [key=2, style=dotted];
m14_1857 -> m14_1852  [key=2, style=dotted];
m14_1857 -> m14_302  [key=2, style=dotted];
m14_1858 -> m14_1856  [color=blue, key=0, style=bold];
m14_1862 -> m14_1863  [key=0, style=solid];
m14_1863 -> m14_1864  [key=0, style=solid];
m14_1863 -> m14_196  [key=2, style=dotted];
m14_1863 -> m14_1852  [key=2, style=dotted];
m14_1863 -> m14_302  [key=2, style=dotted];
m14_1864 -> m14_1862  [color=blue, key=0, style=bold];
m14_1868 -> m14_1869  [key=0, style=solid];
m14_1869 -> m14_1870  [key=0, style=solid];
m14_1869 -> m14_196  [key=2, style=dotted];
m14_1869 -> m14_1852  [key=2, style=dotted];
m14_1869 -> m14_302  [key=2, style=dotted];
m14_1870 -> m14_1868  [color=blue, key=0, style=bold];
m14_2007 -> m14_2008  [key=0, style=solid];
m14_2007 -> m14_196  [key=2, style=dotted];
m14_2007 -> m14_302  [key=2, style=dotted];
m14_2006 -> m14_2007  [key=0, style=solid];
m14_2008 -> m14_2006  [color=blue, key=0, style=bold];
m14_2266 -> m14_2267  [key=0, style=solid];
m14_2266 -> m14_11  [key=2, style=dotted];
m14_2265 -> m14_2266  [key=0, style=solid];
m14_2267 -> m14_2265  [color=blue, key=0, style=bold];
m14_2271 -> m14_2272  [key=0, style=solid];
m14_2272 -> m14_2273  [key=0, style=solid];
m14_2272 -> m14_210  [key=2, style=dotted];
m14_2272 -> m14_2274  [color=darkseagreen4, key=1, label=reference, style=dashed];
m14_2272 -> m14_2278  [color=darkseagreen4, key=1, label=reference, style=dashed];
m14_2273 -> m14_2274  [key=0, style=solid];
m14_2273 -> m14_847  [key=2, style=dotted];
m14_2274 -> m14_2275  [key=0, style=solid];
m14_2274 -> m14_847  [key=2, style=dotted];
m14_2278 -> m14_2279  [key=0, style=solid];
m14_2278 -> m14_847  [key=2, style=dotted];
m14_2275 -> m14_2276  [key=0, style=solid];
m14_2275 -> m14_210  [key=2, style=dotted];
m14_2275 -> m14_2277  [color=darkseagreen4, key=1, label=child, style=dashed];
m14_2275 -> m14_2278  [color=darkseagreen4, key=1, label=child, style=dashed];
m14_2275 -> m14_2279  [color=darkseagreen4, key=1, label=child, style=dashed];
m14_2276 -> m14_2277  [key=0, style=solid];
m14_2276 -> m14_847  [key=2, style=dotted];
m14_2277 -> m14_2278  [key=0, style=solid];
m14_2277 -> m14_847  [key=2, style=dotted];
m14_2279 -> m14_2280  [key=0, style=solid];
m14_2279 -> m14_61  [key=2, style=dotted];
m14_2280 -> m14_2281  [key=0, style=solid];
m14_2280 -> m14_11  [key=2, style=dotted];
m14_2281 -> m14_2271  [color=blue, key=0, style=bold];
m14_2369 -> m14_2370  [key=0, style=solid];
m14_2369 -> m14_11  [key=2, style=dotted];
m14_2368 -> m14_2369  [key=0, style=solid];
m14_2370 -> m14_2368  [color=blue, key=0, style=bold];
m14_2568 -> m14_2569  [key=0, style=solid];
m14_2569 -> m14_2570  [key=0, style=solid];
m14_2569 -> m14_939  [key=2, style=dotted];
m14_2570 -> m14_2568  [color=blue, key=0, style=bold];
m14_2855 -> m14_2856  [key=0, style=solid];
m14_2855 -> m14_11  [key=2, style=dotted];
m14_2854 -> m14_2855  [key=0, style=solid];
m14_2856 -> m14_2854  [color=blue, key=0, style=bold];
m14_2869 -> m14_2870  [color=red, key=0, style=solid];
m14_2869 -> m14_11  [color=red, key=2, style=dotted];
m14_2868 -> m14_2869  [color=red, key=0, style=solid];
m14_2870 -> m14_2868  [color=blue, key=0, style=bold];
m14_2888 -> m14_2889  [key=0, style=solid];
m14_2889 -> m14_2890  [key=0, style=solid];
m14_2890 -> m14_2891  [key=0, style=solid];
m14_2890 -> m14_11  [key=2, style=dotted];
m14_2891 -> m14_2888  [color=blue, key=0, style=bold];
m14_2895 -> m14_2896  [key=0, style=solid];
m14_2896 -> m14_2897  [key=0, style=solid];
m14_2897 -> m14_2898  [key=0, style=solid];
m14_2897 -> m14_11  [key=2, style=dotted];
m14_2898 -> m14_2895  [color=blue, key=0, style=bold];
m14_2984 -> m14_2985  [key=0, style=solid];
m14_2985 -> m14_2986  [key=0, style=solid];
m14_2985 -> m14_11  [key=2, style=dotted];
m14_2986 -> m14_2984  [color=blue, key=0, style=bold];
m14_2990 -> m14_2991  [key=0, style=solid];
m14_2991 -> m14_2992  [key=0, style=solid];
m14_2991 -> m14_11  [key=2, style=dotted];
m14_2992 -> m14_2990  [color=blue, key=0, style=bold];
m14_2996 -> m14_2997  [key=0, style=solid];
m14_2997 -> m14_2998  [key=0, style=solid];
m14_2997 -> m14_11  [key=2, style=dotted];
m14_2998 -> m14_2996  [color=blue, key=0, style=bold];
m14_3006 -> m14_3007  [key=0, style=solid];
m14_3007 -> m14_3008  [key=0, style=solid];
m14_3007 -> m14_11  [key=2, style=dotted];
m14_3008 -> m14_3006  [color=blue, key=0, style=bold];
m14_3012 -> m14_3013  [key=0, style=solid];
m14_3013 -> m14_3014  [key=0, style=solid];
m14_3013 -> m14_490  [key=2, style=dotted];
m14_3014 -> m14_3012  [color=blue, key=0, style=bold];
m14_3128 -> m14_3129  [key=0, style=solid];
m14_3128 -> m14_354  [key=2, style=dotted];
m14_3129 -> m14_3130  [key=0, style=solid];
m14_3127 -> m14_3128  [key=0, style=solid];
m14_3127 -> m14_3129  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m14_3130 -> m14_3127  [color=blue, key=0, style=bold];
m14_3143 -> m14_3144  [key=0, style=solid];
m14_3143 -> m14_354  [key=2, style=dotted];
m14_3144 -> m14_3145  [key=0, style=solid];
m14_3142 -> m14_3143  [key=0, style=solid];
m14_3142 -> m14_3144  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m14_3145 -> m14_3142  [color=blue, key=0, style=bold];
m14_3158 -> m14_3159  [key=0, style=solid];
m14_3158 -> m14_354  [key=2, style=dotted];
m14_3159 -> m14_3160  [key=0, style=solid];
m14_3157 -> m14_3158  [key=0, style=solid];
m14_3157 -> m14_3159  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m14_3160 -> m14_3157  [color=blue, key=0, style=bold];
m14_3283 -> m14_3284  [key=0, style=solid];
m14_3283 -> m14_43  [key=2, style=dotted];
m14_3283 -> m14_403  [key=2, style=dotted];
m14_3283 -> m14_47  [key=2, style=dotted];
m14_3282 -> m14_3283  [key=0, style=solid];
m14_3284 -> m14_3282  [color=blue, key=0, style=bold];
m14_3308 -> m14_3309  [key=0, style=solid];
m14_3308 -> m14_43  [key=2, style=dotted];
m14_3308 -> m14_403  [key=2, style=dotted];
m14_3308 -> m14_47  [key=2, style=dotted];
m14_3307 -> m14_3308  [key=0, style=solid];
m14_3309 -> m14_3307  [color=blue, key=0, style=bold];
m14_3320 -> m14_3321  [key=0, style=solid];
m14_3321 -> m14_3322  [key=0, style=solid];
m14_3321 -> m14_3324  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_3322 -> m14_3323  [key=0, style=solid];
m14_3322 -> m14_46  [key=2, style=dotted];
m14_3322 -> m14_3327  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_3324 -> m14_3325  [key=0, style=solid];
m14_3324 -> m14_43  [key=2, style=dotted];
m14_3324 -> m14_403  [key=2, style=dotted];
m14_3324 -> m14_3326  [color=darkseagreen4, key=1, label=reader, style=dashed];
m14_3324 -> m14_3327  [color=darkseagreen4, key=1, label=reader, style=dashed];
m14_3323 -> m14_3324  [key=0, style=solid];
m14_3327 -> m14_3328  [key=0, style=solid];
m14_3327 -> m14_2353  [key=2, style=dotted];
m14_3325 -> m14_3326  [key=0, style=solid];
m14_3325 -> d10  [key=2, style=dotted];
m14_3326 -> m14_3327  [key=0, style=solid];
m14_3326 -> d10  [key=2, style=dotted];
m14_3328 -> m14_3320  [color=blue, key=0, style=bold];
m14_3353 -> m14_3354  [key=0, style=solid];
m14_3353 -> m14_2353  [key=2, style=dotted];
m14_3352 -> m14_3353  [key=0, style=solid];
m14_3354 -> m14_3352  [color=blue, key=0, style=bold];
m14_3421 -> m14_3422  [key=0, style=solid];
m14_3421 -> m14_11  [key=2, style=dotted];
m14_3421 -> m14_3416  [color=darkseagreen4, key=1, label=obj, style=dashed];
m14_3420 -> m14_3421  [key=0, style=solid];
m14_3422 -> m14_3420  [color=blue, key=0, style=bold];
m14_3502 -> m14_3503  [color=red, key=0, style=solid];
m14_3503 -> m14_3504  [color=red, key=0, style=solid];
m14_3503 -> m14_11  [color=red, key=2, style=dotted];
m14_3504 -> m14_3502  [color=blue, key=0, style=bold];
m14_3510 -> m14_3511  [color=red, key=0, style=solid];
m14_3511 -> m14_3512  [color=red, key=0, style=solid];
m14_3511 -> m14_11  [color=red, key=2, style=dotted];
m14_3512 -> m14_3510  [color=blue, key=0, style=bold];
m14_3520 -> m14_3521  [key=0, style=solid];
m14_3520 -> m14_11  [key=2, style=dotted];
m14_3519 -> m14_3520  [key=0, style=solid];
m14_3521 -> m14_3519  [color=blue, key=0, style=bold];
m14_3701 -> m14_3702  [key=0, style=solid];
m14_3702 -> m14_3703  [key=0, style=solid];
m14_3702 -> m14_577  [key=2, style=dotted];
m14_3703 -> m14_3701  [color=blue, key=0, style=bold];
m14_3932 -> m14_3933  [key=0, style=solid];
m14_3933 -> m14_3934  [key=0, style=solid];
m14_3933 -> m14_3935  [key=2, style=dotted];
m14_3933 -> m14_9  [key=2, style=dotted];
m14_3934 -> m14_3932  [color=blue, key=0, style=bold];
m14_3939 -> m14_3940  [key=0, style=solid];
m14_3940 -> m14_3941  [key=0, style=solid];
m14_3940 -> m14_11  [key=2, style=dotted];
m14_3941 -> m14_3939  [color=blue, key=0, style=bold];
m14_3960 -> m14_3961  [key=0, style=solid];
m14_3960 -> m14_3962  [key=2, style=dotted];
m14_3960 -> m14_3963  [key=2, style=dotted];
m14_3960 -> m14_3964  [key=2, style=dotted];
m14_3960 -> m14_250  [key=2, style=dotted];
m14_3959 -> m14_3960  [key=0, style=solid];
m14_3961 -> m14_3959  [color=blue, key=0, style=bold];
m14_4021 -> m14_4022  [key=0, style=solid];
m14_4021 -> m14_11  [key=2, style=dotted];
m14_4020 -> m14_4021  [key=0, style=solid];
m14_4022 -> m14_4020  [color=blue, key=0, style=bold];
m14_4048 -> m14_4049  [key=0, style=solid];
m14_4049 -> m14_4050  [key=0, style=solid];
m14_4049 -> m14_11  [key=2, style=dotted];
m14_4050 -> m14_4048  [color=blue, key=0, style=bold];
m14_4054 -> m14_4055  [key=0, style=solid];
m14_4055 -> m14_4056  [key=0, style=solid];
m14_4055 -> m14_11  [key=2, style=dotted];
m14_4056 -> m14_4054  [color=blue, key=0, style=bold];
m14_4060 -> m14_4061  [key=0, style=solid];
m14_4061 -> m14_4062  [key=0, style=solid];
m14_4061 -> m14_11  [key=2, style=dotted];
m14_4062 -> m14_4060  [color=blue, key=0, style=bold];
m14_4066 -> m14_4067  [key=0, style=solid];
m14_4067 -> m14_4068  [key=0, style=solid];
m14_4067 -> m14_11  [key=2, style=dotted];
m14_4068 -> m14_4066  [color=blue, key=0, style=bold];
m14_4073 -> m14_4074  [key=0, style=solid];
m14_4073 -> m14_11  [key=2, style=dotted];
m14_4074 -> m14_4072  [color=blue, key=0, style=bold];
m14_3383 -> m14_3384  [key=0, style=solid];
m14_3384 -> m14_3385  [key=0, style=solid];
m14_3385 -> m14_3386  [key=0, style=solid];
m14_3385 -> m14_300  [key=2, style=dotted];
m14_3385 -> m14_3387  [color=darkseagreen4, key=1, label=d, style=dashed];
m14_3385 -> m14_3388  [color=darkseagreen4, key=1, label=d, style=dashed];
m14_3386 -> m14_3387  [key=0, style=solid];
m14_3386 -> m14_9  [key=2, style=dotted];
m14_3387 -> m14_3388  [key=0, style=solid];
m14_3387 -> m14_196  [key=2, style=dotted];
m14_3387 -> m14_197  [key=2, style=dotted];
m14_3388 -> m14_3389  [key=0, style=solid];
m14_3388 -> m14_196  [key=2, style=dotted];
m14_3388 -> m14_197  [key=2, style=dotted];
m14_3389 -> m14_3390  [key=0, style=solid];
m14_3389 -> m14_10  [key=2, style=dotted];
m14_3390 -> m14_3383  [color=blue, key=0, style=bold];
m14_3809 -> m14_3810  [key=0, style=solid];
m14_3810 -> m14_3811  [key=0, style=solid];
m14_3810 -> m14_3814  [color=darkseagreen4, key=1, label=originalUri, style=dashed];
m14_3810 -> m14_3810  [color=darkorchid, key=3, label="Local variable string originalUri", style=bold];
m14_3811 -> m14_3812  [key=0, style=solid];
m14_3811 -> m14_1695  [key=2, style=dotted];
m14_3814 -> m14_3815  [key=0, style=solid];
m14_3814 -> m14_10  [key=2, style=dotted];
m14_3812 -> m14_3813  [key=0, style=solid];
m14_3812 -> m14_9  [key=2, style=dotted];
m14_3813 -> m14_3814  [key=0, style=solid];
m14_3813 -> m14_11  [key=2, style=dotted];
m14_3815 -> m14_3809  [color=blue, key=0, style=bold];
m14_4057 -> m14_4058  [key=0, style=solid];
m14_4058 -> m14_4059  [key=0, style=solid];
m14_4058 -> m14_88  [key=2, style=dotted];
m14_4058 -> m14_4060  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_4059 -> m14_4057  [color=blue, key=0, style=bold];
m14_1348 -> m14_1349  [key=0, style=solid];
m14_1349 -> m14_1350  [key=0, style=solid];
m14_1349 -> m14_1354  [key=2, style=dotted];
m14_1349 -> m14_1355  [key=2, style=dotted];
m14_1350 -> m14_1351  [key=0, style=solid];
m14_1350 -> m14_1310  [key=2, style=dotted];
m14_1351 -> m14_1352  [key=0, style=solid];
m14_1351 -> m14_61  [key=2, style=dotted];
m14_1352 -> m14_1353  [key=0, style=solid];
m14_1352 -> m14_62  [key=2, style=dotted];
m14_1353 -> m14_1348  [color=blue, key=0, style=bold];
m14_3507 -> m14_3508  [color=red, key=0, style=solid];
m14_3508 -> m14_3509  [color=red, key=0, style=solid];
m14_3508 -> m14_88  [color=red, key=2, style=dotted];
m14_3508 -> m14_3510  [color=red, key=1, label="lambda expression", style=dashed];
m14_3509 -> m14_3507  [color=blue, key=0, style=bold];
m14_1859 -> m14_1860  [key=0, style=solid];
m14_1860 -> m14_1861  [key=0, style=solid];
m14_1860 -> m14_1093  [key=2, style=dotted];
m14_1860 -> m14_1862  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_1861 -> m14_1859  [color=blue, key=0, style=bold];
m14_363 -> m14_364  [key=0, style=solid];
m14_364 -> m14_365  [key=0, style=solid];
m14_364 -> m14_364  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_365 -> m14_366  [key=0, style=solid];
m14_365 -> m14_196  [key=2, style=dotted];
m14_365 -> m14_302  [key=2, style=dotted];
m14_365 -> m14_369  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m14_366 -> m14_367  [key=0, style=solid];
m14_366 -> m14_10  [key=2, style=dotted];
m14_367 -> m14_363  [color=blue, key=0, style=bold];
m14_371 -> m14_372  [key=0, style=solid];
m14_372 -> m14_373  [key=0, style=solid];
m14_372 -> m14_11  [key=2, style=dotted];
m14_372 -> m14_374  [color=darkseagreen4, key=1, label=s, style=dashed];
m14_372 -> m14_375  [color=darkseagreen4, key=1, label=s, style=dashed];
m14_373 -> m14_374  [key=0, style=solid];
m14_373 -> m14_10  [key=2, style=dotted];
m14_374 -> m14_375  [key=0, style=solid];
m14_374 -> m14_10  [key=2, style=dotted];
m14_375 -> m14_376  [key=0, style=solid];
m14_375 -> m14_10  [key=2, style=dotted];
m14_376 -> m14_371  [color=blue, key=0, style=bold];
m14_1936 -> m14_1937  [key=0, style=solid];
m14_1937 -> m14_1938  [key=0, style=solid];
m14_1937 -> m14_1937  [color=darkorchid, key=3, label="Local variable string googleSearchText", style=bold];
m14_1938 -> m14_1939  [key=0, style=solid];
m14_1938 -> m14_492  [key=2, style=dotted];
m14_1939 -> m14_1940  [key=0, style=solid];
m14_1939 -> m14_1044  [key=2, style=dotted];
m14_1939 -> m14_455  [key=2, style=dotted];
m14_1939 -> m14_1941  [color=darkseagreen4, key=1, label=results, style=dashed];
m14_1940 -> m14_1941  [key=0, style=solid];
m14_1940 -> m14_300  [key=2, style=dotted];
m14_1940 -> m14_1943  [color=darkseagreen4, key=1, label=searchResults, style=dashed];
m14_1940 -> m14_1944  [color=darkseagreen4, key=1, label=searchResults, style=dashed];
m14_1940 -> m14_1945  [color=darkseagreen4, key=1, label=searchResults, style=dashed];
m14_1940 -> m14_1946  [color=darkseagreen4, key=1, label=searchResults, style=dashed];
m14_1941 -> m14_1942  [key=0, style=solid];
m14_1941 -> m14_1944  [key=0, style=solid];
m14_1943 -> m14_1941  [key=0, style=solid];
m14_1943 -> m14_354  [key=2, style=dotted];
m14_1944 -> m14_1945  [key=0, style=solid];
m14_1944 -> m14_10  [key=2, style=dotted];
m14_1945 -> m14_1946  [key=0, style=solid];
m14_1945 -> m14_10  [key=2, style=dotted];
m14_1946 -> m14_1947  [key=0, style=solid];
m14_1946 -> m14_10  [key=2, style=dotted];
m14_1942 -> m14_1943  [key=0, style=solid];
m14_1942 -> m14_785  [key=2, style=dotted];
m14_1942 -> m14_11  [key=2, style=dotted];
m14_1947 -> m14_1936  [color=blue, key=0, style=bold];
m14_828 -> m14_829  [key=0, style=solid];
m14_829 -> m14_830  [key=0, style=solid];
m14_829 -> m14_210  [key=2, style=dotted];
m14_829 -> m14_832  [color=darkseagreen4, key=1, label=dictStore, style=dashed];
m14_829 -> m14_838  [color=darkseagreen4, key=1, label=dictStore, style=dashed];
m14_830 -> m14_831  [key=0, style=solid];
m14_830 -> m14_832  [color=darkseagreen4, key=1, label=i, style=dashed];
m14_830 -> m14_833  [color=darkseagreen4, key=1, label=i, style=dashed];
m14_830 -> m14_112  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m14_832 -> m14_833  [key=0, style=solid];
m14_832 -> m14_845  [key=2, style=dotted];
m14_832 -> m14_846  [key=2, style=dotted];
m14_832 -> m14_847  [key=2, style=dotted];
m14_838 -> m14_839  [key=0, style=solid];
m14_838 -> m14_851  [key=2, style=dotted];
m14_831 -> m14_832  [key=0, style=solid];
m14_831 -> m14_834  [key=0, style=solid];
m14_833 -> m14_831  [key=0, style=solid];
m14_833 -> m14_833  [color=darkseagreen4, key=1, label=i, style=dashed];
m14_834 -> m14_835  [key=0, style=solid];
m14_834 -> m14_196  [key=2, style=dotted];
m14_835 -> m14_836  [key=0, style=solid];
m14_835 -> m14_848  [key=2, style=dotted];
m14_835 -> m14_838  [color=darkseagreen4, key=1, label=jsonSerializer, style=dashed];
m14_835 -> m14_842  [color=darkseagreen4, key=1, label=jsonSerializer, style=dashed];
m14_836 -> m14_837  [key=0, style=solid];
m14_836 -> m14_849  [key=2, style=dotted];
m14_836 -> m14_840  [color=darkseagreen4, key=1, label=ms, style=dashed];
m14_836 -> m14_842  [color=darkseagreen4, key=1, label=ms, style=dashed];
m14_842 -> m14_843  [key=0, style=solid];
m14_842 -> m14_44  [key=2, style=dotted];
m14_842 -> m14_855  [key=2, style=dotted];
m14_837 -> m14_838  [key=0, style=solid];
m14_837 -> m14_850  [key=2, style=dotted];
m14_837 -> m14_839  [color=darkseagreen4, key=1, label=streamWriter, style=dashed];
m14_840 -> m14_841  [key=0, style=solid];
m14_840 -> m14_853  [key=2, style=dotted];
m14_839 -> m14_840  [key=0, style=solid];
m14_839 -> m14_852  [key=2, style=dotted];
m14_841 -> m14_842  [key=0, style=solid];
m14_841 -> m14_854  [key=2, style=dotted];
m14_841 -> m14_843  [color=darkseagreen4, key=1, label=stopWatch, style=dashed];
m14_843 -> m14_844  [key=0, style=solid];
m14_843 -> m14_856  [key=2, style=dotted];
m14_844 -> m14_828  [color=blue, key=0, style=bold];
m14_1500 -> m14_1501  [key=0, style=solid];
m14_1501 -> m14_1502  [key=0, style=solid];
m14_1501 -> m14_1506  [key=2, style=dotted];
m14_1501 -> m14_1503  [color=darkseagreen4, key=1, label=testClass, style=dashed];
m14_1502 -> m14_1503  [key=0, style=solid];
m14_1502 -> m14_1507  [key=2, style=dotted];
m14_1503 -> m14_1504  [key=0, style=solid];
m14_1503 -> m14_9  [key=2, style=dotted];
m14_1503 -> m14_1509  [color=darkseagreen4, key=1, label=strFromTest, style=dashed];
m14_1504 -> m14_1505  [key=0, style=solid];
m14_1504 -> m14_88  [key=2, style=dotted];
m14_1504 -> m14_1508  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_1505 -> m14_1500  [color=blue, key=0, style=bold];
m14_2164 -> m14_2165  [key=0, style=solid];
m14_2165 -> m14_2166  [key=0, style=solid];
m14_2165 -> m14_11  [key=2, style=dotted];
m14_2165 -> m14_2167  [color=darkseagreen4, key=1, label=kvPairs, style=dashed];
m14_2165 -> m14_2168  [color=darkseagreen4, key=1, label=kvPairs, style=dashed];
m14_2165 -> m14_2169  [color=darkseagreen4, key=1, label=kvPairs, style=dashed];
m14_2165 -> m14_2170  [color=darkseagreen4, key=1, label=kvPairs, style=dashed];
m14_2166 -> m14_2167  [key=0, style=solid];
m14_2166 -> m14_10  [key=2, style=dotted];
m14_2167 -> m14_2168  [key=0, style=solid];
m14_2167 -> m14_10  [key=2, style=dotted];
m14_2168 -> m14_2169  [key=0, style=solid];
m14_2168 -> m14_10  [key=2, style=dotted];
m14_2169 -> m14_2170  [key=0, style=solid];
m14_2169 -> m14_10  [key=2, style=dotted];
m14_2170 -> m14_2171  [key=0, style=solid];
m14_2170 -> m14_10  [key=2, style=dotted];
m14_2171 -> m14_2164  [color=blue, key=0, style=bold];
m14_3369 -> m14_3370  [key=0, style=solid];
m14_3370 -> m14_3371  [key=0, style=solid];
m14_3370 -> m14_11  [key=2, style=dotted];
m14_3371 -> m14_3372  [key=0, style=solid];
m14_3371 -> m14_10  [key=2, style=dotted];
m14_3372 -> m14_3369  [color=blue, key=0, style=bold];
m14_3769 -> m14_3770  [color=red, key=0, style=solid];
m14_3770 -> m14_3771  [color=red, key=0, style=solid];
m14_3771 -> m14_3769  [color=blue, key=0, style=bold];
m14_3003 -> m14_3004  [key=0, style=solid];
m14_3004 -> m14_3005  [key=0, style=solid];
m14_3004 -> m14_88  [key=2, style=dotted];
m14_3004 -> m14_3006  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_3005 -> m14_3003  [color=blue, key=0, style=bold];
m14_1922 -> m14_1923  [key=0, style=solid];
m14_1923 -> m14_1924  [key=0, style=solid];
m14_1923 -> m14_210  [key=2, style=dotted];
m14_1923 -> m14_1925  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m14_1923 -> m14_1926  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m14_1924 -> m14_1925  [key=0, style=solid];
m14_1924 -> m14_1515  [key=2, style=dotted];
m14_1924 -> m14_847  [key=2, style=dotted];
m14_1925 -> m14_1926  [key=0, style=solid];
m14_1925 -> m14_1515  [key=2, style=dotted];
m14_1925 -> m14_847  [key=2, style=dotted];
m14_1926 -> m14_1927  [key=0, style=solid];
m14_1926 -> m14_61  [key=2, style=dotted];
m14_1927 -> m14_1928  [key=0, style=solid];
m14_1927 -> m14_62  [key=2, style=dotted];
m14_1928 -> m14_1922  [color=blue, key=0, style=bold];
m14_494 -> m14_495  [key=0, style=solid];
m14_495 -> m14_496  [key=0, style=solid];
m14_495 -> m14_11  [key=2, style=dotted];
m14_496 -> m14_497  [key=0, style=solid];
m14_496 -> m14_10  [key=2, style=dotted];
m14_497 -> m14_498  [key=0, style=solid];
m14_497 -> m14_11  [key=2, style=dotted];
m14_498 -> m14_499  [key=0, style=solid];
m14_498 -> m14_10  [key=2, style=dotted];
m14_499 -> m14_494  [color=blue, key=0, style=bold];
m14_1251 -> m14_1252  [key=0, style=solid];
m14_1252 -> m14_1253  [key=0, style=solid];
m14_1252 -> m14_9  [key=2, style=dotted];
m14_1252 -> m14_1254  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_1253 -> m14_1254  [key=0, style=solid];
m14_1253 -> m14_10  [key=2, style=dotted];
m14_1254 -> m14_1255  [key=0, style=solid];
m14_1254 -> m14_11  [key=2, style=dotted];
m14_1255 -> m14_1256  [key=0, style=solid];
m14_1255 -> m14_10  [key=2, style=dotted];
m14_1256 -> m14_1251  [color=blue, key=0, style=bold];
m14_2965 -> m14_2966  [key=0, style=solid];
m14_2966 -> m14_2967  [key=0, style=solid];
m14_2966 -> m14_11  [key=2, style=dotted];
m14_2967 -> m14_2968  [key=0, style=solid];
m14_2967 -> m14_173  [key=2, style=dotted];
m14_2968 -> m14_2969  [key=0, style=solid];
m14_2968 -> m14_11  [key=2, style=dotted];
m14_2969 -> m14_2970  [key=0, style=solid];
m14_2969 -> m14_173  [key=2, style=dotted];
m14_2970 -> m14_2971  [key=0, style=solid];
m14_2970 -> m14_11  [key=2, style=dotted];
m14_2971 -> m14_2972  [key=0, style=solid];
m14_2971 -> m14_173  [key=2, style=dotted];
m14_2972 -> m14_2973  [key=0, style=solid];
m14_2972 -> m14_11  [key=2, style=dotted];
m14_2973 -> m14_2974  [key=0, style=solid];
m14_2973 -> m14_173  [key=2, style=dotted];
m14_2974 -> m14_2975  [key=0, style=solid];
m14_2974 -> m14_11  [key=2, style=dotted];
m14_2975 -> m14_2976  [key=0, style=solid];
m14_2975 -> m14_173  [key=2, style=dotted];
m14_2976 -> m14_2977  [key=0, style=solid];
m14_2976 -> m14_11  [key=2, style=dotted];
m14_2977 -> m14_2978  [key=0, style=solid];
m14_2977 -> m14_173  [key=2, style=dotted];
m14_2978 -> m14_2979  [key=0, style=solid];
m14_2978 -> m14_11  [key=2, style=dotted];
m14_2979 -> m14_2980  [key=0, style=solid];
m14_2979 -> m14_173  [key=2, style=dotted];
m14_2980 -> m14_2965  [color=blue, key=0, style=bold];
m14_3552 -> m14_3553  [key=0, style=solid];
m14_3553 -> m14_3554  [key=0, style=solid];
m14_3553 -> m14_3553  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_3554 -> m14_3555  [key=0, style=solid];
m14_3554 -> m14_11  [key=2, style=dotted];
m14_3554 -> m14_3556  [color=darkseagreen4, key=1, label=c2, style=dashed];
m14_3554 -> m14_3557  [color=darkseagreen4, key=1, label=c2, style=dashed];
m14_3554 -> m14_3558  [color=darkseagreen4, key=1, label=c2, style=dashed];
m14_3554 -> m14_3559  [color=darkseagreen4, key=1, label=c2, style=dashed];
m14_3555 -> m14_3556  [key=0, style=solid];
m14_3555 -> m14_173  [key=2, style=dotted];
m14_3556 -> m14_3557  [key=0, style=solid];
m14_3556 -> m14_173  [key=2, style=dotted];
m14_3557 -> m14_3558  [key=0, style=solid];
m14_3557 -> m14_173  [key=2, style=dotted];
m14_3558 -> m14_3559  [key=0, style=solid];
m14_3558 -> m14_173  [key=2, style=dotted];
m14_3559 -> m14_3560  [key=0, style=solid];
m14_3559 -> m14_173  [key=2, style=dotted];
m14_3560 -> m14_3552  [color=blue, key=0, style=bold];
m14_2871 -> m14_2872  [key=0, style=solid];
m14_2872 -> m14_2873  [key=0, style=solid];
m14_2872 -> m14_2876  [key=2, style=dotted];
m14_2872 -> m14_2877  [key=2, style=dotted];
m14_2873 -> m14_2874  [key=0, style=solid];
m14_2873 -> m14_9  [key=2, style=dotted];
m14_2874 -> m14_2875  [key=0, style=solid];
m14_2874 -> m14_10  [key=2, style=dotted];
m14_2875 -> m14_2871  [color=blue, key=0, style=bold];
m14_1219 -> m14_1220  [key=0, style=solid];
m14_1220 -> m14_1221  [key=0, style=solid];
m14_1220 -> m14_1227  [key=2, style=dotted];
m14_1220 -> m14_1222  [color=darkseagreen4, key=1, label=s, style=dashed];
m14_1220 -> m14_1223  [color=darkseagreen4, key=1, label=s, style=dashed];
m14_1220 -> m14_1224  [color=darkseagreen4, key=1, label=s, style=dashed];
m14_1221 -> m14_1222  [key=0, style=solid];
m14_1221 -> m14_1228  [key=2, style=dotted];
m14_1222 -> m14_1223  [key=0, style=solid];
m14_1222 -> m14_1228  [key=2, style=dotted];
m14_1223 -> m14_1224  [key=0, style=solid];
m14_1223 -> m14_1228  [key=2, style=dotted];
m14_1224 -> m14_1225  [key=0, style=solid];
m14_1224 -> m14_9  [key=2, style=dotted];
m14_1225 -> m14_1226  [key=0, style=solid];
m14_1225 -> m14_10  [key=2, style=dotted];
m14_1226 -> m14_1219  [color=blue, key=0, style=bold];
m14_1094 -> m14_1095  [key=0, style=solid];
m14_1095 -> m14_1096  [key=0, style=solid];
m14_1095 -> m14_300  [key=2, style=dotted];
m14_1095 -> m14_1105  [key=2, style=dotted];
m14_1095 -> m14_1098  [color=darkseagreen4, key=1, label=testDates, style=dashed];
m14_1095 -> m14_1102  [color=darkseagreen4, key=1, label=testDates, style=dashed];
m14_1096 -> m14_1097  [key=0, style=solid];
m14_1096 -> m14_849  [key=2, style=dotted];
m14_1096 -> m14_1098  [color=darkseagreen4, key=1, label=ms, style=dashed];
m14_1096 -> m14_1099  [color=darkseagreen4, key=1, label=ms, style=dashed];
m14_1096 -> m14_1100  [color=darkseagreen4, key=1, label=ms, style=dashed];
m14_1098 -> m14_1099  [key=0, style=solid];
m14_1098 -> m14_918  [key=2, style=dotted];
m14_1102 -> m14_1103  [key=0, style=solid];
m14_1102 -> m14_196  [key=2, style=dotted];
m14_1102 -> m14_197  [key=2, style=dotted];
m14_1097 -> m14_1098  [key=0, style=solid];
m14_1097 -> m14_917  [key=2, style=dotted];
m14_1099 -> m14_1100  [key=0, style=solid];
m14_1099 -> m14_853  [key=2, style=dotted];
m14_1100 -> m14_1101  [key=0, style=solid];
m14_1100 -> m14_44  [key=2, style=dotted];
m14_1101 -> m14_1102  [key=0, style=solid];
m14_1101 -> m14_1106  [key=2, style=dotted];
m14_1101 -> m14_1103  [color=darkseagreen4, key=1, label=expected, style=dashed];
m14_1103 -> m14_1104  [key=0, style=solid];
m14_1103 -> m14_10  [key=2, style=dotted];
m14_1104 -> m14_1094  [color=blue, key=0, style=bold];
m14_3336 -> m14_3337  [key=0, style=solid];
m14_3337 -> m14_3338  [key=0, style=solid];
m14_3337 -> m14_3339  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_3337 -> m14_3337  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_3338 -> m14_3339  [key=0, style=solid];
m14_3338 -> m14_46  [key=2, style=dotted];
m14_3338 -> m14_3340  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_3339 -> m14_3340  [key=0, style=solid];
m14_3339 -> m14_43  [key=2, style=dotted];
m14_3339 -> m14_403  [key=2, style=dotted];
m14_3340 -> m14_3341  [key=0, style=solid];
m14_3340 -> m14_2353  [key=2, style=dotted];
m14_3341 -> m14_3342  [key=0, style=solid];
m14_3341 -> m14_10  [key=2, style=dotted];
m14_3342 -> m14_3336  [color=blue, key=0, style=bold];
m14_2760 -> m14_2761  [key=0, style=solid];
m14_2761 -> m14_2762  [key=0, style=solid];
m14_2761 -> m14_2776  [key=2, style=dotted];
m14_2761 -> m14_2767  [color=darkseagreen4, key=1, label=test, style=dashed];
m14_2762 -> m14_2763  [key=0, style=solid];
m14_2762 -> m14_46  [key=2, style=dotted];
m14_2762 -> m14_2767  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_2762 -> m14_2772  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_2767 -> m14_2768  [key=0, style=solid];
m14_2767 -> m14_2777  [key=2, style=dotted];
m14_2763 -> m14_2764  [key=0, style=solid];
m14_2772 -> m14_2773  [key=0, style=solid];
m14_2772 -> m14_2779  [key=2, style=dotted];
m14_2772 -> m14_2774  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m14_2764 -> m14_2765  [key=0, style=solid];
m14_2765 -> m14_2766  [key=0, style=solid];
m14_2765 -> m14_849  [key=2, style=dotted];
m14_2765 -> m14_2769  [color=darkseagreen4, key=1, label=stream, style=dashed];
m14_2766 -> m14_2767  [key=0, style=solid];
m14_2766 -> m14_2741  [key=2, style=dotted];
m14_2766 -> m14_850  [key=2, style=dotted];
m14_2766 -> m14_2768  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m14_2769 -> m14_2770  [key=0, style=solid];
m14_2769 -> m14_919  [key=2, style=dotted];
m14_2768 -> m14_2769  [key=0, style=solid];
m14_2768 -> m14_2778  [key=2, style=dotted];
m14_2770 -> m14_2771  [key=0, style=solid];
m14_2770 -> m14_1078  [key=2, style=dotted];
m14_2771 -> m14_2772  [key=0, style=solid];
m14_2771 -> m14_43  [key=2, style=dotted];
m14_2771 -> m14_44  [key=2, style=dotted];
m14_2773 -> m14_2774  [key=0, style=solid];
m14_2773 -> m14_10  [key=2, style=dotted];
m14_2774 -> m14_2775  [key=0, style=solid];
m14_2774 -> m14_2780  [key=2, style=dotted];
m14_2775 -> m14_2760  [color=blue, key=0, style=bold];
m14_2072 -> m14_2073  [color=red, key=0, style=solid];
m14_2073 -> m14_2074  [color=red, key=0, style=solid];
m14_2073 -> m14_2075  [color=red, key=2, style=dotted];
m14_2074 -> m14_2072  [color=blue, key=0, style=bold];
m14_4045 -> m14_4046  [key=0, style=solid];
m14_4046 -> m14_4047  [key=0, style=solid];
m14_4046 -> m14_88  [key=2, style=dotted];
m14_4046 -> m14_4048  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_4047 -> m14_4045  [color=blue, key=0, style=bold];
m14_1015 -> m14_1016  [key=0, style=solid];
m14_1016 -> m14_1017  [key=0, style=solid];
m14_1016 -> m14_1020  [key=2, style=dotted];
m14_1016 -> m14_9  [key=2, style=dotted];
m14_1017 -> m14_1018  [key=0, style=solid];
m14_1017 -> m14_11  [key=2, style=dotted];
m14_1018 -> m14_1019  [key=0, style=solid];
m14_1018 -> m14_10  [key=2, style=dotted];
m14_1019 -> m14_1015  [color=blue, key=0, style=bold];
m14_272 -> m14_273  [key=0, style=solid];
m14_273 -> m14_274  [key=0, style=solid];
m14_273 -> m14_282  [key=2, style=dotted];
m14_273 -> m14_284  [color=darkseagreen4, key=1, label=c1, style=dashed];
m14_274 -> m14_275  [key=0, style=solid];
m14_274 -> m14_88  [key=2, style=dotted];
m14_274 -> m14_283  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_275 -> m14_276  [key=0, style=solid];
m14_275 -> m14_282  [key=2, style=dotted];
m14_276 -> m14_277  [key=0, style=solid];
m14_276 -> m14_9  [key=2, style=dotted];
m14_277 -> m14_278  [key=0, style=solid];
m14_277 -> m14_10  [key=2, style=dotted];
m14_278 -> m14_279  [key=0, style=solid];
m14_278 -> m14_88  [key=2, style=dotted];
m14_278 -> m14_286  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_279 -> m14_280  [key=0, style=solid];
m14_279 -> m14_11  [key=2, style=dotted];
m14_280 -> m14_281  [key=0, style=solid];
m14_280 -> m14_10  [key=2, style=dotted];
m14_281 -> m14_272  [color=blue, key=0, style=bold];
m14_3115 -> m14_3116  [key=0, style=solid];
m14_3116 -> m14_3117  [key=0, style=solid];
m14_3116 -> m14_3119  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_3116 -> m14_170  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_3117 -> m14_3118  [key=0, style=solid];
m14_3117 -> m14_300  [key=2, style=dotted];
m14_3117 -> m14_3128  [color=darkseagreen4, key=1, label=errors, style=dashed];
m14_3117 -> m14_3121  [color=darkseagreen4, key=1, label=errors, style=dashed];
m14_3117 -> m14_3122  [color=darkseagreen4, key=1, label=errors, style=dashed];
m14_3117 -> m14_3123  [color=darkseagreen4, key=1, label=errors, style=dashed];
m14_3117 -> m14_3124  [color=darkseagreen4, key=1, label=errors, style=dashed];
m14_3117 -> m14_3125  [color=darkseagreen4, key=1, label=errors, style=dashed];
m14_3119 -> m14_3120  [key=0, style=solid];
m14_3119 -> m14_196  [key=2, style=dotted];
m14_3119 -> m14_302  [key=2, style=dotted];
m14_3118 -> m14_3119  [key=0, style=solid];
m14_3118 -> m14_3128  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m14_3118 -> m14_3129  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m14_3118 -> m14_3118  [color=darkorchid, key=3, label="Local variable System.EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error", style=bold];
m14_3121 -> m14_3122  [key=0, style=solid];
m14_3121 -> m14_10  [key=2, style=dotted];
m14_3122 -> m14_3123  [key=0, style=solid];
m14_3122 -> m14_1460  [key=2, style=dotted];
m14_3122 -> m14_49  [key=2, style=dotted];
m14_3123 -> m14_3124  [key=0, style=solid];
m14_3123 -> m14_1460  [key=2, style=dotted];
m14_3123 -> m14_49  [key=2, style=dotted];
m14_3124 -> m14_3125  [key=0, style=solid];
m14_3124 -> m14_1460  [key=2, style=dotted];
m14_3124 -> m14_49  [key=2, style=dotted];
m14_3125 -> m14_3126  [key=0, style=solid];
m14_3125 -> m14_1460  [key=2, style=dotted];
m14_3125 -> m14_49  [key=2, style=dotted];
m14_3120 -> m14_3121  [key=0, style=solid];
m14_3120 -> m14_812  [key=2, style=dotted];
m14_3126 -> m14_3115  [color=blue, key=0, style=bold];
m14_2794 -> m14_2795  [key=0, style=solid];
m14_2795 -> m14_2796  [key=0, style=solid];
m14_2795 -> m14_2806  [key=2, style=dotted];
m14_2795 -> m14_2799  [color=darkseagreen4, key=1, label=contractResolver, style=dashed];
m14_2795 -> m14_2801  [color=darkseagreen4, key=1, label=contractResolver, style=dashed];
m14_2796 -> m14_2797  [key=0, style=solid];
m14_2796 -> m14_2793  [key=2, style=dotted];
m14_2796 -> m14_2799  [color=darkseagreen4, key=1, label=c, style=dashed];
m14_2799 -> m14_2800  [key=0, style=solid];
m14_2799 -> m14_196  [key=2, style=dotted];
m14_2799 -> m14_212  [key=2, style=dotted];
m14_2801 -> m14_2802  [key=0, style=solid];
m14_2801 -> m14_196  [key=2, style=dotted];
m14_2801 -> m14_302  [key=2, style=dotted];
m14_2797 -> m14_2798  [key=0, style=solid];
m14_2798 -> m14_2799  [key=0, style=solid];
m14_2800 -> m14_2801  [key=0, style=solid];
m14_2800 -> m14_62  [key=2, style=dotted];
m14_2802 -> m14_2803  [key=0, style=solid];
m14_2802 -> m14_10  [key=2, style=dotted];
m14_2803 -> m14_2804  [key=0, style=solid];
m14_2803 -> m14_10  [key=2, style=dotted];
m14_2804 -> m14_2805  [key=0, style=solid];
m14_2804 -> m14_10  [key=2, style=dotted];
m14_2805 -> m14_2794  [color=blue, key=0, style=bold];
m14_1320 -> m14_1321  [key=0, style=solid];
m14_1321 -> m14_1322  [key=0, style=solid];
m14_1321 -> m14_1309  [key=2, style=dotted];
m14_1322 -> m14_1323  [key=0, style=solid];
m14_1322 -> m14_1310  [key=2, style=dotted];
m14_1323 -> m14_1324  [key=0, style=solid];
m14_1323 -> m14_196  [key=2, style=dotted];
m14_1323 -> m14_197  [key=2, style=dotted];
m14_1323 -> m14_1325  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_1324 -> m14_1325  [key=0, style=solid];
m14_1324 -> m14_10  [key=2, style=dotted];
m14_1325 -> m14_1326  [key=0, style=solid];
m14_1325 -> m14_196  [key=2, style=dotted];
m14_1325 -> m14_302  [key=2, style=dotted];
m14_1325 -> m14_1327  [color=darkseagreen4, key=1, label=m2, style=dashed];
m14_1326 -> m14_1327  [key=0, style=solid];
m14_1326 -> m14_957  [key=2, style=dotted];
m14_1326 -> m14_10  [key=2, style=dotted];
m14_1327 -> m14_1328  [key=0, style=solid];
m14_1327 -> m14_957  [key=2, style=dotted];
m14_1327 -> m14_10  [key=2, style=dotted];
m14_1328 -> m14_1320  [color=blue, key=0, style=bold];
m14_3535 -> m14_3536  [key=0, style=solid];
m14_3536 -> m14_3537  [key=0, style=solid];
m14_3536 -> m14_3541  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_3536 -> m14_3536  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_3537 -> m14_3538  [key=0, style=solid];
m14_3537 -> m14_11  [key=2, style=dotted];
m14_3537 -> m14_3539  [color=darkseagreen4, key=1, label=floats, style=dashed];
m14_3537 -> m14_3540  [color=darkseagreen4, key=1, label=floats, style=dashed];
m14_3541 -> m14_3542  [key=0, style=solid];
m14_3541 -> m14_11  [key=2, style=dotted];
m14_3541 -> m14_3543  [color=darkseagreen4, key=1, label=doubles, style=dashed];
m14_3541 -> m14_3544  [color=darkseagreen4, key=1, label=doubles, style=dashed];
m14_3538 -> m14_3539  [key=0, style=solid];
m14_3538 -> m14_10  [key=2, style=dotted];
m14_3539 -> m14_3540  [key=0, style=solid];
m14_3539 -> m14_10  [key=2, style=dotted];
m14_3540 -> m14_3541  [key=0, style=solid];
m14_3540 -> m14_10  [key=2, style=dotted];
m14_3542 -> m14_3543  [key=0, style=solid];
m14_3542 -> m14_10  [key=2, style=dotted];
m14_3543 -> m14_3544  [key=0, style=solid];
m14_3543 -> m14_10  [key=2, style=dotted];
m14_3544 -> m14_3545  [key=0, style=solid];
m14_3544 -> m14_10  [key=2, style=dotted];
m14_3545 -> m14_3535  [color=blue, key=0, style=bold];
m14_2098 -> m14_2099  [color=red, key=0, style=solid];
m14_2099 -> m14_2100  [color=red, key=0, style=solid];
m14_2099 -> m14_2101  [color=red, key=2, style=dotted];
m14_2100 -> m14_2098  [color=blue, key=0, style=bold];
m14_2552 -> m14_2553  [key=0, style=solid];
m14_2553 -> m14_2554  [key=0, style=solid];
m14_2553 -> m14_2557  [key=2, style=dotted];
m14_2554 -> m14_2555  [key=0, style=solid];
m14_2554 -> m14_61  [key=2, style=dotted];
m14_2555 -> m14_2556  [key=0, style=solid];
m14_2555 -> m14_62  [key=2, style=dotted];
m14_2556 -> m14_2552  [color=blue, key=0, style=bold];
m14_1784 -> m14_1785  [key=0, style=solid];
m14_1785 -> m14_1786  [key=0, style=solid];
m14_1785 -> m14_1789  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_1785 -> m14_1764  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_1786 -> m14_1787  [key=0, style=solid];
m14_1786 -> m14_88  [key=2, style=dotted];
m14_1786 -> m14_1788  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_1787 -> m14_1784  [color=blue, key=0, style=bold];
m14_3035 -> m14_3036  [key=0, style=solid];
m14_3036 -> m14_3037  [key=0, style=solid];
m14_3036 -> m14_196  [key=2, style=dotted];
m14_3036 -> m14_302  [key=2, style=dotted];
m14_3036 -> m14_3038  [color=darkseagreen4, key=1, label=c, style=dashed];
m14_3036 -> m14_3039  [color=darkseagreen4, key=1, label=c, style=dashed];
m14_3036 -> m14_3040  [color=darkseagreen4, key=1, label=c, style=dashed];
m14_3037 -> m14_3038  [key=0, style=solid];
m14_3037 -> m14_3032  [key=2, style=dotted];
m14_3037 -> m14_3033  [key=2, style=dotted];
m14_3037 -> m14_10  [key=2, style=dotted];
m14_3038 -> m14_3039  [key=0, style=solid];
m14_3038 -> m14_3034  [key=2, style=dotted];
m14_3038 -> m14_10  [key=2, style=dotted];
m14_3039 -> m14_3040  [key=0, style=solid];
m14_3039 -> m14_10  [key=2, style=dotted];
m14_3040 -> m14_3041  [key=0, style=solid];
m14_3040 -> m14_10  [key=2, style=dotted];
m14_3041 -> m14_3042  [key=0, style=solid];
m14_3041 -> m14_11  [key=2, style=dotted];
m14_3041 -> m14_3043  [color=darkseagreen4, key=1, label=c2, style=dashed];
m14_3041 -> m14_3044  [color=darkseagreen4, key=1, label=c2, style=dashed];
m14_3041 -> m14_3045  [color=darkseagreen4, key=1, label=c2, style=dashed];
m14_3042 -> m14_3043  [key=0, style=solid];
m14_3042 -> m14_10  [key=2, style=dotted];
m14_3043 -> m14_3044  [key=0, style=solid];
m14_3043 -> m14_10  [key=2, style=dotted];
m14_3044 -> m14_3045  [key=0, style=solid];
m14_3044 -> m14_10  [key=2, style=dotted];
m14_3045 -> m14_3046  [key=0, style=solid];
m14_3045 -> m14_10  [key=2, style=dotted];
m14_3046 -> m14_3035  [color=blue, key=0, style=bold];
m14_392 -> m14_393  [key=0, style=solid];
m14_393 -> m14_394  [key=0, style=solid];
m14_393 -> m14_43  [key=2, style=dotted];
m14_393 -> m14_403  [key=2, style=dotted];
m14_393 -> m14_398  [color=darkseagreen4, key=1, label=reader, style=dashed];
m14_393 -> m14_401  [color=darkseagreen4, key=1, label=reader, style=dashed];
m14_394 -> m14_395  [key=0, style=solid];
m14_394 -> m14_10  [key=2, style=dotted];
m14_398 -> m14_399  [key=0, style=solid];
m14_398 -> m14_404  [key=2, style=dotted];
m14_401 -> m14_402  [key=0, style=solid];
m14_401 -> m14_10  [key=2, style=dotted];
m14_395 -> m14_396  [key=0, style=solid];
m14_395 -> m14_46  [key=2, style=dotted];
m14_395 -> m14_398  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_396 -> m14_397  [key=0, style=solid];
m14_397 -> m14_398  [key=0, style=solid];
m14_397 -> m14_300  [key=2, style=dotted];
m14_397 -> m14_399  [color=darkseagreen4, key=1, label=l, style=dashed];
m14_397 -> m14_400  [color=darkseagreen4, key=1, label=l, style=dashed];
m14_399 -> m14_400  [key=0, style=solid];
m14_399 -> m14_405  [key=2, style=dotted];
m14_399 -> m14_10  [key=2, style=dotted];
m14_400 -> m14_401  [key=0, style=solid];
m14_400 -> m14_406  [key=2, style=dotted];
m14_400 -> m14_10  [key=2, style=dotted];
m14_402 -> m14_392  [color=blue, key=0, style=bold];
m14_3929 -> m14_3930  [key=0, style=solid];
m14_3930 -> m14_3931  [key=0, style=solid];
m14_3930 -> m14_88  [key=2, style=dotted];
m14_3930 -> m14_3932  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_3931 -> m14_3929  [color=blue, key=0, style=bold];
m14_3985 -> m14_3986  [color=red, key=0, style=solid];
m14_3986 -> m14_3987  [color=red, key=0, style=solid];
m14_3986 -> m14_3988  [color=red, key=2, style=dotted];
m14_3987 -> m14_3985  [color=blue, key=0, style=bold];
m14_1300 -> m14_1301  [key=0, style=solid];
m14_1301 -> m14_1302  [key=0, style=solid];
m14_1301 -> m14_1309  [key=2, style=dotted];
m14_1301 -> m14_1306  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m14_1301 -> m14_1307  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m14_1302 -> m14_1303  [key=0, style=solid];
m14_1302 -> m14_1310  [key=2, style=dotted];
m14_1306 -> m14_1307  [key=0, style=solid];
m14_1306 -> m14_10  [key=2, style=dotted];
m14_1307 -> m14_1308  [key=0, style=solid];
m14_1307 -> m14_10  [key=2, style=dotted];
m14_1303 -> m14_1304  [key=0, style=solid];
m14_1303 -> m14_9  [key=2, style=dotted];
m14_1303 -> m14_1305  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_1304 -> m14_1305  [key=0, style=solid];
m14_1304 -> m14_10  [key=2, style=dotted];
m14_1305 -> m14_1306  [key=0, style=solid];
m14_1305 -> m14_11  [key=2, style=dotted];
m14_1305 -> m14_1307  [color=darkseagreen4, key=1, label=m2, style=dashed];
m14_1308 -> m14_1300  [color=blue, key=0, style=bold];
m14_3793 -> m14_3794  [color=red, key=0, style=solid];
m14_3794 -> m14_3795  [color=red, key=0, style=solid];
m14_3794 -> m14_3750  [color=red, key=2, style=dotted];
m14_3795 -> m14_3793  [color=blue, key=0, style=bold];
m14_2076 -> m14_2077  [color=red, key=0, style=solid];
m14_2077 -> m14_2078  [color=red, key=0, style=solid];
m14_2077 -> m14_2079  [color=red, key=2, style=dotted];
m14_2078 -> m14_2076  [color=blue, key=0, style=bold];
m14_1763 -> m14_1764  [key=0, style=solid];
m14_1764 -> m14_1765  [key=0, style=solid];
m14_1764 -> m14_1768  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_1764 -> m14_1764  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_1765 -> m14_1766  [key=0, style=solid];
m14_1765 -> m14_88  [key=2, style=dotted];
m14_1765 -> m14_1767  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_1766 -> m14_1763  [color=blue, key=0, style=bold];
m14_407 -> m14_408  [key=0, style=solid];
m14_408 -> m14_409  [key=0, style=solid];
m14_408 -> m14_412  [key=2, style=dotted];
m14_408 -> m14_9  [key=2, style=dotted];
m14_408 -> m14_10  [key=2, style=dotted];
m14_409 -> m14_410  [key=0, style=solid];
m14_409 -> m14_11  [key=2, style=dotted];
m14_410 -> m14_411  [key=0, style=solid];
m14_410 -> m14_10  [key=2, style=dotted];
m14_411 -> m14_407  [color=blue, key=0, style=bold];
m14_3131 -> m14_3132  [key=0, style=solid];
m14_3132 -> m14_3133  [key=0, style=solid];
m14_3132 -> m14_3135  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_3132 -> m14_3132  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_3133 -> m14_3134  [key=0, style=solid];
m14_3133 -> m14_300  [key=2, style=dotted];
m14_3133 -> m14_3143  [color=darkseagreen4, key=1, label=errors, style=dashed];
m14_3133 -> m14_3137  [color=darkseagreen4, key=1, label=errors, style=dashed];
m14_3133 -> m14_3138  [color=darkseagreen4, key=1, label=errors, style=dashed];
m14_3133 -> m14_3139  [color=darkseagreen4, key=1, label=errors, style=dashed];
m14_3133 -> m14_3140  [color=darkseagreen4, key=1, label=errors, style=dashed];
m14_3135 -> m14_3136  [key=0, style=solid];
m14_3135 -> m14_196  [key=2, style=dotted];
m14_3135 -> m14_302  [key=2, style=dotted];
m14_3134 -> m14_3135  [key=0, style=solid];
m14_3134 -> m14_3143  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m14_3134 -> m14_3144  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m14_3134 -> m14_3134  [color=darkorchid, key=3, label="Local variable System.EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error", style=bold];
m14_3137 -> m14_3138  [key=0, style=solid];
m14_3137 -> m14_10  [key=2, style=dotted];
m14_3138 -> m14_3139  [key=0, style=solid];
m14_3138 -> m14_1460  [key=2, style=dotted];
m14_3138 -> m14_49  [key=2, style=dotted];
m14_3139 -> m14_3140  [key=0, style=solid];
m14_3139 -> m14_1460  [key=2, style=dotted];
m14_3139 -> m14_49  [key=2, style=dotted];
m14_3140 -> m14_3141  [key=0, style=solid];
m14_3140 -> m14_1460  [key=2, style=dotted];
m14_3140 -> m14_49  [key=2, style=dotted];
m14_3136 -> m14_3137  [key=0, style=solid];
m14_3136 -> m14_812  [key=2, style=dotted];
m14_3141 -> m14_3131  [color=blue, key=0, style=bold];
m14_3228 -> m14_3229  [key=0, style=solid];
m14_3229 -> m14_3230  [key=0, style=solid];
m14_3229 -> m14_3235  [key=2, style=dotted];
m14_3229 -> m14_3232  [color=darkseagreen4, key=1, label=testObj, style=dashed];
m14_3230 -> m14_3231  [key=0, style=solid];
m14_3230 -> m14_3236  [key=2, style=dotted];
m14_3232 -> m14_3233  [key=0, style=solid];
m14_3232 -> m14_10  [key=2, style=dotted];
m14_3231 -> m14_3232  [key=0, style=solid];
m14_3231 -> m14_3237  [key=2, style=dotted];
m14_3231 -> m14_3233  [color=darkseagreen4, key=1, label=objDeserialized, style=dashed];
m14_3233 -> m14_3234  [key=0, style=solid];
m14_3233 -> m14_10  [key=2, style=dotted];
m14_3234 -> m14_3228  [color=blue, key=0, style=bold];
m14_2542 -> m14_2543  [key=0, style=solid];
m14_2543 -> m14_2544  [key=0, style=solid];
m14_2543 -> m14_2551  [key=2, style=dotted];
m14_2543 -> m14_300  [key=2, style=dotted];
m14_2544 -> m14_2545  [key=0, style=solid];
m14_2544 -> m14_61  [key=2, style=dotted];
m14_2544 -> m14_2546  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_2545 -> m14_2546  [key=0, style=solid];
m14_2545 -> m14_62  [key=2, style=dotted];
m14_2546 -> m14_2547  [key=0, style=solid];
m14_2546 -> m14_11  [key=2, style=dotted];
m14_2546 -> m14_2548  [color=darkseagreen4, key=1, label=c2, style=dashed];
m14_2546 -> m14_2549  [color=darkseagreen4, key=1, label=c2, style=dashed];
m14_2547 -> m14_2548  [key=0, style=solid];
m14_2547 -> m14_1668  [key=2, style=dotted];
m14_2547 -> m14_10  [key=2, style=dotted];
m14_2548 -> m14_2549  [key=0, style=solid];
m14_2548 -> m14_1668  [key=2, style=dotted];
m14_2548 -> m14_10  [key=2, style=dotted];
m14_2549 -> m14_2550  [key=0, style=solid];
m14_2549 -> m14_1668  [key=2, style=dotted];
m14_2549 -> m14_10  [key=2, style=dotted];
m14_2550 -> m14_2542  [color=blue, key=0, style=bold];
m14_2160 -> m14_2161  [color=red, key=0, style=solid];
m14_2160 -> m14_2162  [color=red, key=1, label=TValue, style=dashed];
m14_2161 -> m14_2162  [color=red, key=0, style=solid];
m14_2162 -> m14_2163  [color=red, key=0, style=solid];
m14_2163 -> m14_2160  [color=blue, key=0, style=bold];
m14_2878 -> m14_2879  [key=0, style=solid];
m14_2879 -> m14_2880  [key=0, style=solid];
m14_2879 -> m14_2879  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_2880 -> m14_2881  [key=0, style=solid];
m14_2880 -> m14_11  [key=2, style=dotted];
m14_2880 -> m14_2882  [color=darkseagreen4, key=1, label=w, style=dashed];
m14_2880 -> m14_2883  [color=darkseagreen4, key=1, label=w, style=dashed];
m14_2881 -> m14_2882  [key=0, style=solid];
m14_2881 -> m14_2877  [key=2, style=dotted];
m14_2881 -> m14_10  [key=2, style=dotted];
m14_2882 -> m14_2883  [key=0, style=solid];
m14_2882 -> m14_2877  [key=2, style=dotted];
m14_2882 -> m14_10  [key=2, style=dotted];
m14_2883 -> m14_2884  [key=0, style=solid];
m14_2883 -> m14_10  [key=2, style=dotted];
m14_2884 -> m14_2878  [color=blue, key=0, style=bold];
m14_3619 -> m14_3620  [key=0, style=solid];
m14_3620 -> m14_3621  [key=0, style=solid];
m14_3620 -> m14_210  [key=2, style=dotted];
m14_3620 -> m14_3626  [key=2, style=dotted];
m14_3620 -> m14_9  [key=2, style=dotted];
m14_3620 -> m14_3622  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_3621 -> m14_3622  [key=0, style=solid];
m14_3621 -> m14_10  [key=2, style=dotted];
m14_3622 -> m14_3623  [key=0, style=solid];
m14_3622 -> m14_11  [key=2, style=dotted];
m14_3622 -> m14_3624  [color=darkseagreen4, key=1, label=d, style=dashed];
m14_3623 -> m14_3624  [key=0, style=solid];
m14_3623 -> m14_3626  [key=2, style=dotted];
m14_3623 -> m14_3618  [key=2, style=dotted];
m14_3623 -> m14_10  [key=2, style=dotted];
m14_3624 -> m14_3625  [key=0, style=solid];
m14_3624 -> m14_3626  [key=2, style=dotted];
m14_3624 -> m14_3618  [key=2, style=dotted];
m14_3624 -> m14_10  [key=2, style=dotted];
m14_3625 -> m14_3619  [color=blue, key=0, style=bold];
m14_1311 -> m14_1312  [key=0, style=solid];
m14_1312 -> m14_1313  [key=0, style=solid];
m14_1312 -> m14_1309  [key=2, style=dotted];
m14_1312 -> m14_1317  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m14_1312 -> m14_1318  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m14_1313 -> m14_1314  [key=0, style=solid];
m14_1313 -> m14_1310  [key=2, style=dotted];
m14_1317 -> m14_1318  [key=0, style=solid];
m14_1317 -> m14_10  [key=2, style=dotted];
m14_1318 -> m14_1319  [key=0, style=solid];
m14_1318 -> m14_10  [key=2, style=dotted];
m14_1314 -> m14_1315  [key=0, style=solid];
m14_1314 -> m14_196  [key=2, style=dotted];
m14_1314 -> m14_197  [key=2, style=dotted];
m14_1314 -> m14_1316  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_1315 -> m14_1316  [key=0, style=solid];
m14_1315 -> m14_10  [key=2, style=dotted];
m14_1316 -> m14_1317  [key=0, style=solid];
m14_1316 -> m14_11  [key=2, style=dotted];
m14_1316 -> m14_1318  [color=darkseagreen4, key=1, label=m2, style=dashed];
m14_1319 -> m14_1311  [color=blue, key=0, style=bold];
m14_2958 -> m14_2959  [key=0, style=solid];
m14_2959 -> m14_2960  [key=0, style=solid];
m14_2959 -> m14_196  [key=2, style=dotted];
m14_2959 -> m14_848  [key=2, style=dotted];
m14_2959 -> m14_2962  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_2960 -> m14_2961  [key=0, style=solid];
m14_2960 -> m14_43  [key=2, style=dotted];
m14_2960 -> m14_403  [key=2, style=dotted];
m14_2960 -> m14_47  [key=2, style=dotted];
m14_2960 -> m14_2963  [color=darkseagreen4, key=1, label=dict, style=dashed];
m14_2962 -> m14_2963  [key=0, style=solid];
m14_2962 -> m14_47  [key=2, style=dotted];
m14_2961 -> m14_2962  [key=0, style=solid];
m14_2961 -> m14_43  [key=2, style=dotted];
m14_2961 -> m14_403  [key=2, style=dotted];
m14_2963 -> m14_2964  [key=0, style=solid];
m14_2963 -> m14_10  [key=2, style=dotted];
m14_2964 -> m14_2958  [color=blue, key=0, style=bold];
m14_180 -> m14_181  [key=0, style=solid];
m14_181 -> m14_182  [key=0, style=solid];
m14_181 -> m14_11  [key=2, style=dotted];
m14_181 -> m14_183  [color=darkseagreen4, key=1, label=p, style=dashed];
m14_182 -> m14_183  [key=0, style=solid];
m14_182 -> m14_173  [key=2, style=dotted];
m14_183 -> m14_184  [key=0, style=solid];
m14_183 -> m14_173  [key=2, style=dotted];
m14_184 -> m14_180  [color=blue, key=0, style=bold];
m14_873 -> m14_904  [key=0, style=solid];
m14_873 -> m14_905  [color=darkseagreen4, key=1, label=object, style=dashed];
m14_873 -> m14_906  [color=darkseagreen4, key=1, label=object, style=dashed];
m14_873 -> m14_910  [color=darkseagreen4, key=1, label=object, style=dashed];
m14_873 -> m14_864  [color=darkorchid, key=3, label="Parameter variable object o", style=bold];
m14_873 -> m14_885  [color=darkorchid, key=3, label="Parameter variable object o", style=bold];
m14_873 -> m14_895  [color=darkorchid, key=3, label="Parameter variable object o", style=bold];
m14_904 -> m14_905  [key=0, style=solid];
m14_904 -> m14_849  [key=2, style=dotted];
m14_904 -> m14_906  [color=darkseagreen4, key=1, label=ms, style=dashed];
m14_904 -> m14_907  [color=darkseagreen4, key=1, label=ms, style=dashed];
m14_905 -> m14_906  [key=0, style=solid];
m14_905 -> m14_917  [key=2, style=dotted];
m14_905 -> m14_405  [key=2, style=dotted];
m14_906 -> m14_907  [key=0, style=solid];
m14_906 -> m14_918  [key=2, style=dotted];
m14_910 -> m14_911  [key=0, style=solid];
m14_910 -> m14_9  [key=2, style=dotted];
m14_910 -> m14_492  [key=2, style=dotted];
m14_907 -> m14_908  [key=0, style=solid];
m14_907 -> m14_919  [key=2, style=dotted];
m14_908 -> m14_909  [key=0, style=solid];
m14_908 -> m14_920  [key=2, style=dotted];
m14_908 -> m14_492  [key=2, style=dotted];
m14_909 -> m14_910  [key=0, style=solid];
m14_909 -> m14_921  [key=2, style=dotted];
m14_909 -> m14_922  [key=2, style=dotted];
m14_909 -> m14_923  [key=2, style=dotted];
m14_909 -> m14_909  [color=darkseagreen4, key=1, label=dataContractJson, style=dashed];
m14_909 -> m14_924  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_909 -> m14_912  [color=darkseagreen4, key=1, label=dataContractJson, style=dashed];
m14_909 -> m14_913  [color=darkseagreen4, key=1, label=dataContractJson, style=dashed];
m14_912 -> m14_913  [key=0, style=solid];
m14_912 -> m14_10  [key=2, style=dotted];
m14_913 -> m14_914  [key=0, style=solid];
m14_913 -> m14_915  [key=0, style=solid];
m14_911 -> m14_912  [key=0, style=solid];
m14_911 -> m14_921  [key=2, style=dotted];
m14_911 -> m14_922  [key=2, style=dotted];
m14_911 -> m14_923  [key=2, style=dotted];
m14_911 -> m14_911  [color=darkseagreen4, key=1, label=jsonNetJson, style=dashed];
m14_911 -> m14_927  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_911 -> m14_914  [color=darkseagreen4, key=1, label=jsonNetJson, style=dashed];
m14_911 -> m14_915  [color=darkseagreen4, key=1, label=jsonNetJson, style=dashed];
m14_914 -> m14_913  [key=0, style=solid];
m14_914 -> m14_493  [key=2, style=dotted];
m14_914 -> m14_49  [key=2, style=dotted];
m14_914 -> m14_914  [color=darkseagreen4, key=1, label=property, style=dashed];
m14_915 -> m14_916  [key=0, style=solid];
m14_915 -> m14_785  [key=2, style=dotted];
m14_916 -> m14_873  [color=blue, key=0, style=bold];
m14_3873 -> m14_3874  [key=0, style=solid];
m14_3874 -> m14_3875  [key=0, style=solid];
m14_3874 -> m14_406  [key=2, style=dotted];
m14_3874 -> m14_3877  [color=darkseagreen4, key=1, label=dt, style=dashed];
m14_3874 -> m14_3880  [color=darkseagreen4, key=1, label=dt, style=dashed];
m14_3875 -> m14_3876  [key=0, style=solid];
m14_3875 -> m14_3875  [color=darkorchid, key=3, label="Local variable string dateFormatString", style=bold];
m14_3877 -> m14_3878  [key=0, style=solid];
m14_3877 -> m14_210  [key=2, style=dotted];
m14_3877 -> m14_197  [key=2, style=dotted];
m14_3877 -> m14_3879  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_3880 -> m14_3881  [key=0, style=solid];
m14_3880 -> m14_1668  [key=2, style=dotted];
m14_3880 -> m14_10  [key=2, style=dotted];
m14_3876 -> m14_3877  [key=0, style=solid];
m14_3876 -> m14_196  [key=2, style=dotted];
m14_3876 -> m14_3879  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_3879 -> m14_3880  [key=0, style=solid];
m14_3879 -> m14_302  [key=2, style=dotted];
m14_3878 -> m14_3879  [key=0, style=solid];
m14_3878 -> m14_62  [key=2, style=dotted];
m14_3881 -> m14_3873  [color=blue, key=0, style=bold];
m14_3146 -> m14_3147  [key=0, style=solid];
m14_3147 -> m14_3148  [key=0, style=solid];
m14_3147 -> m14_300  [key=2, style=dotted];
m14_3147 -> m14_3158  [color=darkseagreen4, key=1, label=errors, style=dashed];
m14_3147 -> m14_3151  [color=darkseagreen4, key=1, label=errors, style=dashed];
m14_3147 -> m14_3152  [color=darkseagreen4, key=1, label=errors, style=dashed];
m14_3147 -> m14_3153  [color=darkseagreen4, key=1, label=errors, style=dashed];
m14_3147 -> m14_3154  [color=darkseagreen4, key=1, label=errors, style=dashed];
m14_3148 -> m14_3149  [key=0, style=solid];
m14_3148 -> m14_3158  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m14_3148 -> m14_3159  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m14_3148 -> m14_3148  [color=darkorchid, key=3, label="Local variable System.EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error", style=bold];
m14_3151 -> m14_3152  [key=0, style=solid];
m14_3151 -> m14_10  [key=2, style=dotted];
m14_3152 -> m14_3153  [key=0, style=solid];
m14_3152 -> m14_10  [key=2, style=dotted];
m14_3153 -> m14_3154  [key=0, style=solid];
m14_3153 -> m14_10  [key=2, style=dotted];
m14_3154 -> m14_3155  [key=0, style=solid];
m14_3154 -> m14_10  [key=2, style=dotted];
m14_3149 -> m14_3150  [key=0, style=solid];
m14_3149 -> m14_3156  [key=2, style=dotted];
m14_3149 -> m14_196  [key=2, style=dotted];
m14_3149 -> m14_197  [key=2, style=dotted];
m14_3150 -> m14_3151  [key=0, style=solid];
m14_3150 -> m14_62  [key=2, style=dotted];
m14_3155 -> m14_3146  [color=blue, key=0, style=bold];
m14_1163 -> m14_1164  [key=0, style=solid];
m14_1164 -> m14_1165  [key=0, style=solid];
m14_1164 -> m14_1164  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_1165 -> m14_1166  [key=0, style=solid];
m14_1165 -> m14_11  [key=2, style=dotted];
m14_1165 -> m14_1167  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m14_1165 -> m14_1168  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m14_1165 -> m14_1169  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m14_1165 -> m14_1170  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m14_1165 -> m14_1171  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m14_1166 -> m14_1167  [key=0, style=solid];
m14_1166 -> m14_10  [key=2, style=dotted];
m14_1167 -> m14_1168  [key=0, style=solid];
m14_1167 -> m14_10  [key=2, style=dotted];
m14_1168 -> m14_1169  [key=0, style=solid];
m14_1168 -> m14_10  [key=2, style=dotted];
m14_1169 -> m14_1170  [key=0, style=solid];
m14_1169 -> m14_10  [key=2, style=dotted];
m14_1170 -> m14_1171  [key=0, style=solid];
m14_1170 -> m14_10  [key=2, style=dotted];
m14_1171 -> m14_1172  [key=0, style=solid];
m14_1171 -> m14_10  [key=2, style=dotted];
m14_1172 -> m14_1163  [color=blue, key=0, style=bold];
m14_329 -> m14_330  [color=red, key=0, style=solid];
m14_330 -> m14_331  [color=red, key=0, style=solid];
m14_330 -> m14_332  [color=red, key=2, style=dotted];
m14_331 -> m14_329  [color=blue, key=0, style=bold];
m14_1119 -> m14_1120  [key=0, style=solid];
m14_1120 -> m14_1121  [key=0, style=solid];
m14_1120 -> m14_210  [key=2, style=dotted];
m14_1120 -> m14_1122  [color=darkseagreen4, key=1, label=values, style=dashed];
m14_1120 -> m14_1123  [color=darkseagreen4, key=1, label=values, style=dashed];
m14_1120 -> m14_1126  [color=darkseagreen4, key=1, label=values, style=dashed];
m14_1121 -> m14_1122  [key=0, style=solid];
m14_1121 -> m14_847  [key=2, style=dotted];
m14_1122 -> m14_1123  [key=0, style=solid];
m14_1122 -> m14_847  [key=2, style=dotted];
m14_1123 -> m14_1124  [key=0, style=solid];
m14_1123 -> m14_9  [key=2, style=dotted];
m14_1123 -> m14_1125  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_1126 -> m14_1127  [key=0, style=solid];
m14_1126 -> m14_10  [key=2, style=dotted];
m14_1124 -> m14_1125  [key=0, style=solid];
m14_1124 -> m14_10  [key=2, style=dotted];
m14_1125 -> m14_1126  [key=0, style=solid];
m14_1125 -> m14_11  [key=2, style=dotted];
m14_1127 -> m14_1119  [color=blue, key=0, style=bold];
m14_185 -> m14_186  [key=0, style=solid];
m14_186 -> m14_187  [key=0, style=solid];
m14_186 -> m14_88  [key=2, style=dotted];
m14_186 -> m14_188  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_187 -> m14_185  [color=blue, key=0, style=bold];
m14_3704 -> m14_3705  [key=0, style=solid];
m14_3705 -> m14_3706  [key=0, style=solid];
m14_3705 -> m14_3724  [key=2, style=dotted];
m14_3705 -> m14_3707  [color=darkseagreen4, key=1, label=consoleWriter, style=dashed];
m14_3705 -> m14_3712  [color=darkseagreen4, key=1, label=consoleWriter, style=dashed];
m14_3705 -> m14_3718  [color=darkseagreen4, key=1, label=consoleWriter, style=dashed];
m14_3706 -> m14_3707  [key=0, style=solid];
m14_3706 -> m14_196  [key=2, style=dotted];
m14_3706 -> m14_3725  [key=2, style=dotted];
m14_3706 -> m14_3726  [key=2, style=dotted];
m14_3706 -> m14_3709  [color=darkseagreen4, key=1, label=options, style=dashed];
m14_3706 -> m14_3713  [color=darkseagreen4, key=1, label=options, style=dashed];
m14_3706 -> m14_3715  [color=darkseagreen4, key=1, label=options, style=dashed];
m14_3706 -> m14_3719  [color=darkseagreen4, key=1, label=options, style=dashed];
m14_3706 -> m14_3721  [color=darkseagreen4, key=1, label=options, style=dashed];
m14_3707 -> m14_3708  [key=0, style=solid];
m14_3707 -> m14_212  [key=2, style=dotted];
m14_3707 -> m14_3709  [color=darkseagreen4, key=1, label=text1, style=dashed];
m14_3712 -> m14_3713  [key=0, style=solid];
m14_3712 -> m14_847  [key=2, style=dotted];
m14_3718 -> m14_3719  [key=0, style=solid];
m14_3718 -> m14_847  [key=2, style=dotted];
m14_3709 -> m14_3710  [key=0, style=solid];
m14_3709 -> m14_302  [key=2, style=dotted];
m14_3713 -> m14_3714  [key=0, style=solid];
m14_3713 -> m14_212  [key=2, style=dotted];
m14_3713 -> m14_3715  [color=darkseagreen4, key=1, label=text2, style=dashed];
m14_3715 -> m14_3716  [key=0, style=solid];
m14_3715 -> m14_302  [key=2, style=dotted];
m14_3719 -> m14_3720  [key=0, style=solid];
m14_3719 -> m14_212  [key=2, style=dotted];
m14_3719 -> m14_3721  [color=darkseagreen4, key=1, label=text3, style=dashed];
m14_3721 -> m14_3722  [key=0, style=solid];
m14_3721 -> m14_302  [key=2, style=dotted];
m14_3708 -> m14_3709  [key=0, style=solid];
m14_3708 -> m14_10  [key=2, style=dotted];
m14_3710 -> m14_3711  [key=0, style=solid];
m14_3710 -> m14_3727  [key=2, style=dotted];
m14_3710 -> m14_10  [key=2, style=dotted];
m14_3711 -> m14_3712  [key=0, style=solid];
m14_3711 -> m14_210  [key=2, style=dotted];
m14_3711 -> m14_3713  [color=darkseagreen4, key=1, label=dict2, style=dashed];
m14_3714 -> m14_3715  [key=0, style=solid];
m14_3714 -> m14_62  [key=2, style=dotted];
m14_3716 -> m14_3717  [key=0, style=solid];
m14_3716 -> m14_3618  [key=2, style=dotted];
m14_3716 -> m14_3727  [key=2, style=dotted];
m14_3716 -> m14_10  [key=2, style=dotted];
m14_3717 -> m14_3718  [key=0, style=solid];
m14_3717 -> m14_210  [key=2, style=dotted];
m14_3717 -> m14_3719  [color=darkseagreen4, key=1, label=dict3, style=dashed];
m14_3720 -> m14_3721  [key=0, style=solid];
m14_3720 -> m14_62  [key=2, style=dotted];
m14_3722 -> m14_3723  [key=0, style=solid];
m14_3722 -> m14_3618  [key=2, style=dotted];
m14_3722 -> m14_3727  [key=2, style=dotted];
m14_3722 -> m14_10  [key=2, style=dotted];
m14_3723 -> m14_3704  [color=blue, key=0, style=bold];
m14_1948 -> m14_1949  [key=0, style=solid];
m14_1949 -> m14_1950  [key=0, style=solid];
m14_1949 -> m14_1961  [key=2, style=dotted];
m14_1949 -> m14_1956  [color=darkseagreen4, key=1, label=personPropertyClass, style=dashed];
m14_1950 -> m14_1951  [key=0, style=solid];
m14_1950 -> m14_1952  [color=darkseagreen4, key=1, label=wagePerson, style=dashed];
m14_1950 -> m14_1953  [color=darkseagreen4, key=1, label=wagePerson, style=dashed];
m14_1950 -> m14_1954  [color=darkseagreen4, key=1, label=wagePerson, style=dashed];
m14_1950 -> m14_1955  [color=darkseagreen4, key=1, label=wagePerson, style=dashed];
m14_1950 -> m14_1959  [color=darkseagreen4, key=1, label=wagePerson, style=dashed];
m14_1956 -> m14_1957  [key=0, style=solid];
m14_1956 -> m14_61  [key=2, style=dotted];
m14_1956 -> m14_1958  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_1951 -> m14_1952  [key=0, style=solid];
m14_1951 -> m14_1105  [key=2, style=dotted];
m14_1952 -> m14_1953  [key=0, style=solid];
m14_1953 -> m14_1954  [key=0, style=solid];
m14_1954 -> m14_1955  [key=0, style=solid];
m14_1954 -> m14_1105  [key=2, style=dotted];
m14_1955 -> m14_1956  [key=0, style=solid];
m14_1959 -> m14_1960  [key=0, style=solid];
m14_1959 -> m14_10  [key=2, style=dotted];
m14_1957 -> m14_1958  [key=0, style=solid];
m14_1957 -> m14_62  [key=2, style=dotted];
m14_1958 -> m14_1959  [key=0, style=solid];
m14_1958 -> m14_11  [key=2, style=dotted];
m14_1960 -> m14_1948  [color=blue, key=0, style=bold];
m14_1367 -> m14_1368  [key=0, style=solid];
m14_1368 -> m14_1369  [key=0, style=solid];
m14_1368 -> m14_88  [key=2, style=dotted];
m14_1368 -> m14_1370  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_1369 -> m14_1367  [color=blue, key=0, style=bold];
m14_2002 -> m14_2003  [key=0, style=solid];
m14_2003 -> m14_2004  [key=0, style=solid];
m14_2003 -> m14_2007  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_2003 -> m14_2003  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_2004 -> m14_2005  [key=0, style=solid];
m14_2004 -> m14_88  [key=2, style=dotted];
m14_2004 -> m14_2006  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_2005 -> m14_2002  [color=blue, key=0, style=bold];
m14_1035 -> m14_1036  [key=0, style=solid];
m14_1036 -> m14_1037  [key=0, style=solid];
m14_1036 -> m14_1036  [color=darkorchid, key=3, label="Local variable string jsonText", style=bold];
m14_1037 -> m14_1038  [key=0, style=solid];
m14_1037 -> m14_490  [key=2, style=dotted];
m14_1037 -> m14_1039  [color=darkseagreen4, key=1, label=o, style=dashed];
m14_1038 -> m14_1039  [key=0, style=solid];
m14_1038 -> m14_1043  [key=2, style=dotted];
m14_1038 -> m14_491  [key=2, style=dotted];
m14_1038 -> m14_10  [key=2, style=dotted];
m14_1039 -> m14_1040  [key=0, style=solid];
m14_1040 -> m14_1041  [key=0, style=solid];
m14_1041 -> m14_1042  [key=0, style=solid];
m14_1041 -> m14_1044  [key=2, style=dotted];
m14_1041 -> m14_491  [key=2, style=dotted];
m14_1041 -> m14_10  [key=2, style=dotted];
m14_1042 -> m14_1035  [color=blue, key=0, style=bold];
m14_446 -> m14_447  [key=0, style=solid];
m14_447 -> m14_448  [key=0, style=solid];
m14_447 -> m14_427  [key=2, style=dotted];
m14_447 -> m14_454  [key=2, style=dotted];
m14_447 -> m14_455  [key=2, style=dotted];
m14_447 -> m14_450  [color=darkseagreen4, key=1, label=input, style=dashed];
m14_447 -> m14_451  [color=darkseagreen4, key=1, label=input, style=dashed];
m14_447 -> m14_452  [color=darkseagreen4, key=1, label=input, style=dashed];
m14_448 -> m14_449  [key=0, style=solid];
m14_448 -> m14_9  [key=2, style=dotted];
m14_450 -> m14_451  [key=0, style=solid];
m14_450 -> m14_10  [key=2, style=dotted];
m14_451 -> m14_452  [key=0, style=solid];
m14_451 -> m14_10  [key=2, style=dotted];
m14_452 -> m14_453  [key=0, style=solid];
m14_452 -> m14_10  [key=2, style=dotted];
m14_449 -> m14_450  [key=0, style=solid];
m14_449 -> m14_11  [key=2, style=dotted];
m14_449 -> m14_451  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m14_449 -> m14_452  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m14_453 -> m14_446  [color=blue, key=0, style=bold];
m14_1575 -> m14_1576  [key=0, style=solid];
m14_1576 -> m14_1577  [key=0, style=solid];
m14_1576 -> m14_1574  [key=2, style=dotted];
m14_1576 -> m14_1578  [color=darkseagreen4, key=1, label=i, style=dashed];
m14_1577 -> m14_1578  [key=0, style=solid];
m14_1578 -> m14_1579  [key=0, style=solid];
m14_1578 -> m14_196  [key=2, style=dotted];
m14_1578 -> m14_197  [key=2, style=dotted];
m14_1578 -> m14_1580  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_1579 -> m14_1580  [key=0, style=solid];
m14_1579 -> m14_10  [key=2, style=dotted];
m14_1580 -> m14_1581  [key=0, style=solid];
m14_1580 -> m14_196  [key=2, style=dotted];
m14_1580 -> m14_302  [key=2, style=dotted];
m14_1581 -> m14_1582  [key=0, style=solid];
m14_1581 -> m14_196  [key=2, style=dotted];
m14_1581 -> m14_197  [key=2, style=dotted];
m14_1582 -> m14_1583  [key=0, style=solid];
m14_1582 -> m14_10  [key=2, style=dotted];
m14_1583 -> m14_1575  [color=blue, key=0, style=bold];
m14_303 -> m14_304  [key=0, style=solid];
m14_304 -> m14_305  [key=0, style=solid];
m14_304 -> m14_312  [key=2, style=dotted];
m14_305 -> m14_306  [key=0, style=solid];
m14_305 -> m14_61  [key=2, style=dotted];
m14_305 -> m14_307  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_306 -> m14_307  [key=0, style=solid];
m14_306 -> m14_62  [key=2, style=dotted];
m14_307 -> m14_308  [key=0, style=solid];
m14_307 -> m14_11  [key=2, style=dotted];
m14_307 -> m14_309  [color=darkseagreen4, key=1, label=t2, style=dashed];
m14_307 -> m14_310  [color=darkseagreen4, key=1, label=t2, style=dashed];
m14_308 -> m14_309  [key=0, style=solid];
m14_308 -> m14_10  [key=2, style=dotted];
m14_309 -> m14_310  [key=0, style=solid];
m14_309 -> m14_10  [key=2, style=dotted];
m14_310 -> m14_311  [key=0, style=solid];
m14_310 -> m14_10  [key=2, style=dotted];
m14_311 -> m14_303  [color=blue, key=0, style=bold];
m14_3391 -> m14_3392  [key=0, style=solid];
m14_3392 -> m14_3393  [key=0, style=solid];
m14_3392 -> m14_3392  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_3393 -> m14_3394  [key=0, style=solid];
m14_3393 -> m14_11  [key=2, style=dotted];
m14_3394 -> m14_3395  [key=0, style=solid];
m14_3395 -> m14_3396  [key=0, style=solid];
m14_3395 -> m14_2228  [key=2, style=dotted];
m14_3395 -> m14_10  [key=2, style=dotted];
m14_3396 -> m14_3391  [color=blue, key=0, style=bold];
m14_3015 -> m14_3016  [key=0, style=solid];
m14_3016 -> m14_3017  [key=0, style=solid];
m14_3016 -> m14_3016  [color=darkorchid, key=3, label="Local variable string jsonIsoText", style=bold];
m14_3017 -> m14_3018  [key=0, style=solid];
m14_3017 -> m14_1152  [key=2, style=dotted];
m14_3017 -> m14_250  [key=2, style=dotted];
m14_3018 -> m14_3019  [key=0, style=solid];
m14_3018 -> m14_10  [key=2, style=dotted];
m14_3019 -> m14_3015  [color=blue, key=0, style=bold];
m14_98 -> m14_99  [key=0, style=solid];
m14_99 -> m14_100  [key=0, style=solid];
m14_99 -> m14_88  [key=2, style=dotted];
m14_99 -> m14_101  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_100 -> m14_98  [color=blue, key=0, style=bold];
m14_500 -> m14_501  [key=0, style=solid];
m14_501 -> m14_502  [key=0, style=solid];
m14_501 -> m14_46  [key=2, style=dotted];
m14_501 -> m14_503  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_501 -> m14_504  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_501 -> m14_505  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_501 -> m14_506  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_501 -> m14_507  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_501 -> m14_508  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_501 -> m14_509  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_501 -> m14_510  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_501 -> m14_511  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_501 -> m14_512  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_501 -> m14_513  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_501 -> m14_514  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_501 -> m14_516  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_501 -> m14_517  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_501 -> m14_518  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_501 -> m14_519  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_501 -> m14_520  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_501 -> m14_521  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_501 -> m14_522  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_501 -> m14_523  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_501 -> m14_524  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_501 -> m14_525  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_501 -> m14_526  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_501 -> m14_527  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_501 -> m14_528  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_501 -> m14_529  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_501 -> m14_530  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_501 -> m14_531  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_501 -> m14_532  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_501 -> m14_533  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_501 -> m14_534  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_501 -> m14_535  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_501 -> m14_536  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_501 -> m14_537  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_501 -> m14_538  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_501 -> m14_539  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_501 -> m14_540  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_501 -> m14_541  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_501 -> m14_542  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_501 -> m14_543  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_501 -> m14_544  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_501 -> m14_545  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_501 -> m14_546  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_501 -> m14_547  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_501 -> m14_548  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_501 -> m14_549  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_501 -> m14_550  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_501 -> m14_551  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_501 -> m14_553  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_501 -> m14_554  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_501 -> m14_555  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_501 -> m14_556  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_501 -> m14_558  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_501 -> m14_559  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_501 -> m14_560  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_501 -> m14_561  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_501 -> m14_562  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_501 -> m14_563  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_501 -> m14_564  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_501 -> m14_565  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_501 -> m14_566  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_501 -> m14_567  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_501 -> m14_568  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_502 -> m14_503  [key=0, style=solid];
m14_502 -> m14_570  [key=2, style=dotted];
m14_502 -> m14_504  [color=darkseagreen4, key=1, label=customBinder, style=dashed];
m14_502 -> m14_506  [color=darkseagreen4, key=1, label=customBinder, style=dashed];
m14_502 -> m14_507  [color=darkseagreen4, key=1, label=customBinder, style=dashed];
m14_502 -> m14_508  [color=darkseagreen4, key=1, label=customBinder, style=dashed];
m14_503 -> m14_504  [key=0, style=solid];
m14_504 -> m14_505  [key=0, style=solid];
m14_504 -> m14_10  [key=2, style=dotted];
m14_505 -> m14_506  [key=0, style=solid];
m14_505 -> m14_571  [key=2, style=dotted];
m14_506 -> m14_507  [key=0, style=solid];
m14_507 -> m14_508  [key=0, style=solid];
m14_507 -> m14_10  [key=2, style=dotted];
m14_508 -> m14_509  [key=0, style=solid];
m14_508 -> m14_10  [key=2, style=dotted];
m14_509 -> m14_510  [key=0, style=solid];
m14_510 -> m14_511  [key=0, style=solid];
m14_510 -> m14_10  [key=2, style=dotted];
m14_511 -> m14_512  [key=0, style=solid];
m14_512 -> m14_513  [key=0, style=solid];
m14_512 -> m14_10  [key=2, style=dotted];
m14_513 -> m14_514  [key=0, style=solid];
m14_513 -> m14_572  [key=2, style=dotted];
m14_514 -> m14_515  [key=0, style=solid];
m14_514 -> m14_572  [key=2, style=dotted];
m14_514 -> m14_10  [key=2, style=dotted];
m14_516 -> m14_517  [key=0, style=solid];
m14_517 -> m14_518  [key=0, style=solid];
m14_517 -> m14_10  [key=2, style=dotted];
m14_518 -> m14_519  [key=0, style=solid];
m14_518 -> m14_249  [key=2, style=dotted];
m14_518 -> m14_574  [key=2, style=dotted];
m14_519 -> m14_520  [key=0, style=solid];
m14_519 -> m14_10  [key=2, style=dotted];
m14_520 -> m14_521  [key=0, style=solid];
m14_520 -> m14_575  [key=2, style=dotted];
m14_521 -> m14_522  [key=0, style=solid];
m14_521 -> m14_576  [key=2, style=dotted];
m14_521 -> m14_10  [key=2, style=dotted];
m14_522 -> m14_523  [key=0, style=solid];
m14_523 -> m14_524  [key=0, style=solid];
m14_523 -> m14_10  [key=2, style=dotted];
m14_524 -> m14_525  [key=0, style=solid];
m14_525 -> m14_526  [key=0, style=solid];
m14_525 -> m14_10  [key=2, style=dotted];
m14_526 -> m14_527  [key=0, style=solid];
m14_527 -> m14_528  [key=0, style=solid];
m14_527 -> m14_10  [key=2, style=dotted];
m14_528 -> m14_529  [key=0, style=solid];
m14_529 -> m14_530  [key=0, style=solid];
m14_529 -> m14_10  [key=2, style=dotted];
m14_530 -> m14_531  [key=0, style=solid];
m14_531 -> m14_532  [key=0, style=solid];
m14_531 -> m14_10  [key=2, style=dotted];
m14_532 -> m14_533  [key=0, style=solid];
m14_533 -> m14_534  [key=0, style=solid];
m14_533 -> m14_10  [key=2, style=dotted];
m14_534 -> m14_535  [key=0, style=solid];
m14_535 -> m14_536  [key=0, style=solid];
m14_535 -> m14_10  [key=2, style=dotted];
m14_536 -> m14_537  [key=0, style=solid];
m14_537 -> m14_538  [key=0, style=solid];
m14_537 -> m14_10  [key=2, style=dotted];
m14_538 -> m14_539  [key=0, style=solid];
m14_539 -> m14_540  [key=0, style=solid];
m14_539 -> m14_10  [key=2, style=dotted];
m14_540 -> m14_541  [key=0, style=solid];
m14_541 -> m14_542  [key=0, style=solid];
m14_541 -> m14_10  [key=2, style=dotted];
m14_542 -> m14_543  [key=0, style=solid];
m14_543 -> m14_544  [key=0, style=solid];
m14_543 -> m14_10  [key=2, style=dotted];
m14_544 -> m14_545  [key=0, style=solid];
m14_545 -> m14_546  [key=0, style=solid];
m14_545 -> m14_10  [key=2, style=dotted];
m14_546 -> m14_547  [key=0, style=solid];
m14_547 -> m14_548  [key=0, style=solid];
m14_547 -> m14_10  [key=2, style=dotted];
m14_548 -> m14_549  [key=0, style=solid];
m14_549 -> m14_550  [key=0, style=solid];
m14_549 -> m14_10  [key=2, style=dotted];
m14_550 -> m14_551  [key=0, style=solid];
m14_551 -> m14_552  [key=0, style=solid];
m14_551 -> m14_10  [key=2, style=dotted];
m14_553 -> m14_554  [key=0, style=solid];
m14_554 -> m14_555  [key=0, style=solid];
m14_554 -> m14_10  [key=2, style=dotted];
m14_555 -> m14_556  [key=0, style=solid];
m14_556 -> m14_557  [key=0, style=solid];
m14_556 -> m14_10  [key=2, style=dotted];
m14_558 -> m14_559  [key=0, style=solid];
m14_559 -> m14_560  [key=0, style=solid];
m14_559 -> m14_10  [key=2, style=dotted];
m14_560 -> m14_561  [key=0, style=solid];
m14_561 -> m14_562  [key=0, style=solid];
m14_561 -> m14_10  [key=2, style=dotted];
m14_562 -> m14_563  [key=0, style=solid];
m14_562 -> m14_10  [key=2, style=dotted];
m14_563 -> m14_564  [key=0, style=solid];
m14_564 -> m14_565  [key=0, style=solid];
m14_564 -> m14_10  [key=2, style=dotted];
m14_565 -> m14_566  [key=0, style=solid];
m14_566 -> m14_567  [key=0, style=solid];
m14_566 -> m14_10  [key=2, style=dotted];
m14_567 -> m14_568  [key=0, style=solid];
m14_568 -> m14_569  [key=0, style=solid];
m14_568 -> m14_10  [key=2, style=dotted];
m14_515 -> m14_516  [key=0, style=solid];
m14_515 -> m14_573  [key=2, style=dotted];
m14_515 -> m14_517  [color=darkseagreen4, key=1, label=resolver, style=dashed];
m14_552 -> m14_553  [key=0, style=solid];
m14_552 -> m14_577  [key=2, style=dotted];
m14_552 -> m14_554  [color=darkseagreen4, key=1, label=referenceResolver, style=dashed];
m14_557 -> m14_558  [key=0, style=solid];
m14_557 -> m14_578  [key=2, style=dotted];
m14_557 -> m14_559  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m14_569 -> m14_500  [color=blue, key=0, style=bold];
m14_2510 -> m14_2511  [key=0, style=solid];
m14_2511 -> m14_2512  [key=0, style=solid];
m14_2511 -> m14_2517  [key=2, style=dotted];
m14_2511 -> m14_2518  [key=2, style=dotted];
m14_2511 -> m14_1702  [key=2, style=dotted];
m14_2511 -> m14_2515  [color=darkseagreen4, key=1, label=c, style=dashed];
m14_2512 -> m14_2513  [key=0, style=solid];
m14_2512 -> m14_61  [key=2, style=dotted];
m14_2515 -> m14_2516  [key=0, style=solid];
m14_2515 -> m14_2519  [key=2, style=dotted];
m14_2515 -> m14_49  [key=2, style=dotted];
m14_2513 -> m14_2514  [key=0, style=solid];
m14_2513 -> m14_11  [key=2, style=dotted];
m14_2513 -> m14_2515  [color=darkseagreen4, key=1, label=deserializedResponse, style=dashed];
m14_2514 -> m14_2515  [key=0, style=solid];
m14_2514 -> m14_10  [key=2, style=dotted];
m14_2516 -> m14_2510  [color=blue, key=0, style=bold];
m14_2485 -> m14_2486  [color=red, key=0, style=solid];
m14_2486 -> m14_2487  [color=red, key=0, style=solid];
m14_2486 -> m14_2488  [color=red, key=2, style=dotted];
m14_2486 -> m14_4100  [color=red, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable", style=dashed];
m14_2487 -> m14_2485  [color=blue, key=0, style=bold];
m14_1929 -> m14_1930  [key=0, style=solid];
m14_1930 -> m14_1931  [key=0, style=solid];
m14_1930 -> m14_1927  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_1931 -> m14_1932  [key=0, style=solid];
m14_1931 -> m14_11  [key=2, style=dotted];
m14_1932 -> m14_1933  [key=0, style=solid];
m14_1932 -> m14_1935  [key=0, style=solid];
m14_1932 -> m14_48  [key=2, style=dotted];
m14_1933 -> m14_1934  [key=0, style=solid];
m14_1934 -> m14_1935  [key=0, style=solid];
m14_1934 -> m14_1460  [key=2, style=dotted];
m14_1934 -> m14_49  [key=2, style=dotted];
m14_1935 -> m14_1929  [color=blue, key=0, style=bold];
m14_3459 -> m14_3460  [key=0, style=solid];
m14_3460 -> m14_3461  [key=0, style=solid];
m14_3460 -> m14_300  [key=2, style=dotted];
m14_3460 -> m14_1105  [key=2, style=dotted];
m14_3460 -> m14_406  [key=2, style=dotted];
m14_3460 -> m14_1113  [key=2, style=dotted];
m14_3461 -> m14_3462  [key=0, style=solid];
m14_3461 -> m14_196  [key=2, style=dotted];
m14_3461 -> m14_212  [key=2, style=dotted];
m14_3462 -> m14_3463  [key=0, style=solid];
m14_3462 -> m14_62  [key=2, style=dotted];
m14_3463 -> m14_3459  [color=blue, key=0, style=bold];
m14_2531 -> m14_2532  [key=0, style=solid];
m14_2532 -> m14_2533  [key=0, style=solid];
m14_2532 -> m14_11  [key=2, style=dotted];
m14_2532 -> m14_2534  [color=darkseagreen4, key=1, label=c, style=dashed];
m14_2533 -> m14_2534  [key=0, style=solid];
m14_2533 -> m14_10  [key=2, style=dotted];
m14_2534 -> m14_2535  [key=0, style=solid];
m14_2534 -> m14_10  [key=2, style=dotted];
m14_2535 -> m14_2531  [color=blue, key=0, style=bold];
m14_3763 -> m14_3764  [color=red, key=0, style=solid];
m14_3764 -> m14_3765  [color=red, key=0, style=solid];
m14_3764 -> m14_3750  [color=red, key=2, style=dotted];
m14_3765 -> m14_3763  [color=blue, key=0, style=bold];
m14_3936 -> m14_3937  [key=0, style=solid];
m14_3937 -> m14_3938  [key=0, style=solid];
m14_3937 -> m14_88  [key=2, style=dotted];
m14_3937 -> m14_3939  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_3938 -> m14_3936  [color=blue, key=0, style=bold];
m14_1070 -> m14_1071  [key=0, style=solid];
m14_1071 -> m14_1072  [key=0, style=solid];
m14_1071 -> m14_1073  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_1071 -> m14_1074  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_1071 -> m14_1071  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_1072 -> m14_1073  [key=0, style=solid];
m14_1072 -> m14_917  [key=2, style=dotted];
m14_1073 -> m14_1074  [key=0, style=solid];
m14_1073 -> m14_1078  [key=2, style=dotted];
m14_1073 -> m14_1079  [key=2, style=dotted];
m14_1073 -> m14_1080  [key=2, style=dotted];
m14_1073 -> m14_1076  [color=darkseagreen4, key=1, label=dataContractResult, style=dashed];
m14_1074 -> m14_1075  [key=0, style=solid];
m14_1074 -> m14_11  [key=2, style=dotted];
m14_1074 -> m14_1076  [color=darkseagreen4, key=1, label=jsonNetResult, style=dashed];
m14_1076 -> m14_1077  [key=0, style=solid];
m14_1076 -> m14_10  [key=2, style=dotted];
m14_1075 -> m14_1076  [key=0, style=solid];
m14_1075 -> m14_10  [key=2, style=dotted];
m14_1077 -> m14_1070  [color=blue, key=0, style=bold];
m14_3736 -> m14_3737  [color=red, key=0, style=solid];
m14_3736 -> m14_1252  [color=darkorchid, key=3, label="method methodReturn System.TypeCode System.IConvertible.GetTypeCode", style=bold];
m14_3737 -> m14_3738  [color=red, key=0, style=solid];
m14_3738 -> m14_3736  [color=blue, key=0, style=bold];
m14_2627 -> m14_2628  [key=0, style=solid];
m14_2628 -> m14_2629  [key=0, style=solid];
m14_2628 -> m14_2632  [key=2, style=dotted];
m14_2628 -> m14_1105  [key=2, style=dotted];
m14_2629 -> m14_2630  [key=0, style=solid];
m14_2629 -> m14_61  [key=2, style=dotted];
m14_2630 -> m14_2631  [key=0, style=solid];
m14_2630 -> m14_62  [key=2, style=dotted];
m14_2631 -> m14_2627  [color=blue, key=0, style=bold];
m14_3634 -> m14_3635  [color=red, key=0, style=solid];
m14_3635 -> m14_3636  [color=red, key=0, style=solid];
m14_3635 -> m14_3637  [color=red, key=2, style=dotted];
m14_3636 -> m14_3634  [color=blue, key=0, style=bold];
m14_2781 -> m14_2782  [key=0, style=solid];
m14_2782 -> m14_2783  [key=0, style=solid];
m14_2782 -> m14_1852  [key=2, style=dotted];
m14_2782 -> m14_2786  [color=darkseagreen4, key=1, label=contractResolver, style=dashed];
m14_2782 -> m14_2788  [color=darkseagreen4, key=1, label=contractResolver, style=dashed];
m14_2783 -> m14_2784  [key=0, style=solid];
m14_2783 -> m14_2793  [key=2, style=dotted];
m14_2783 -> m14_2786  [color=darkseagreen4, key=1, label=c, style=dashed];
m14_2786 -> m14_2787  [key=0, style=solid];
m14_2786 -> m14_196  [key=2, style=dotted];
m14_2786 -> m14_212  [key=2, style=dotted];
m14_2788 -> m14_2789  [key=0, style=solid];
m14_2788 -> m14_196  [key=2, style=dotted];
m14_2788 -> m14_302  [key=2, style=dotted];
m14_2784 -> m14_2785  [key=0, style=solid];
m14_2785 -> m14_2786  [key=0, style=solid];
m14_2787 -> m14_2788  [key=0, style=solid];
m14_2787 -> m14_62  [key=2, style=dotted];
m14_2789 -> m14_2790  [key=0, style=solid];
m14_2789 -> m14_10  [key=2, style=dotted];
m14_2790 -> m14_2791  [key=0, style=solid];
m14_2790 -> m14_10  [key=2, style=dotted];
m14_2791 -> m14_2792  [key=0, style=solid];
m14_2791 -> m14_10  [key=2, style=dotted];
m14_2792 -> m14_2781  [color=blue, key=0, style=bold];
m14_857 -> m14_858  [key=0, style=solid];
m14_858 -> m14_859  [key=0, style=solid];
m14_858 -> m14_862  [key=2, style=dotted];
m14_859 -> m14_860  [key=0, style=solid];
m14_859 -> m14_9  [key=2, style=dotted];
m14_860 -> m14_861  [key=0, style=solid];
m14_860 -> m14_10  [key=2, style=dotted];
m14_861 -> m14_857  [color=blue, key=0, style=bold];
m14_966 -> m14_967  [key=0, style=solid];
m14_967 -> m14_968  [key=0, style=solid];
m14_967 -> m14_957  [key=2, style=dotted];
m14_967 -> m14_969  [color=darkseagreen4, key=1, label=dateValue, style=dashed];
m14_967 -> m14_978  [color=darkseagreen4, key=1, label=dateValue, style=dashed];
m14_968 -> m14_969  [key=0, style=solid];
m14_968 -> m14_210  [key=2, style=dotted];
m14_968 -> m14_970  [color=darkseagreen4, key=1, label=testDictionary, style=dashed];
m14_968 -> m14_973  [color=darkseagreen4, key=1, label=testDictionary, style=dashed];
m14_969 -> m14_970  [key=0, style=solid];
m14_978 -> m14_979  [key=0, style=solid];
m14_978 -> m14_10  [key=2, style=dotted];
m14_970 -> m14_971  [key=0, style=solid];
m14_970 -> m14_9  [key=2, style=dotted];
m14_970 -> m14_976  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m14_973 -> m14_974  [key=0, style=solid];
m14_973 -> m14_918  [key=2, style=dotted];
m14_971 -> m14_972  [key=0, style=solid];
m14_971 -> m14_849  [key=2, style=dotted];
m14_971 -> m14_973  [color=darkseagreen4, key=1, label=ms, style=dashed];
m14_971 -> m14_974  [color=darkseagreen4, key=1, label=ms, style=dashed];
m14_976 -> m14_977  [key=0, style=solid];
m14_976 -> m14_939  [key=2, style=dotted];
m14_972 -> m14_973  [key=0, style=solid];
m14_972 -> m14_917  [key=2, style=dotted];
m14_974 -> m14_975  [key=0, style=solid];
m14_974 -> m14_919  [key=2, style=dotted];
m14_975 -> m14_976  [key=0, style=solid];
m14_975 -> m14_920  [key=2, style=dotted];
m14_977 -> m14_978  [key=0, style=solid];
m14_979 -> m14_966  [color=blue, key=0, style=bold];
m14_2106 -> m14_2107  [color=red, key=0, style=solid];
m14_2107 -> m14_2108  [color=red, key=0, style=solid];
m14_2107 -> m14_2109  [color=red, key=2, style=dotted];
m14_2108 -> m14_2106  [color=blue, key=0, style=bold];
m14_3920 -> m14_3921  [key=0, style=solid];
m14_3921 -> m14_3922  [key=0, style=solid];
m14_3921 -> m14_3928  [key=2, style=dotted];
m14_3921 -> m14_3923  [color=darkseagreen4, key=1, label=original, style=dashed];
m14_3922 -> m14_3923  [key=0, style=solid];
m14_3922 -> m14_196  [key=2, style=dotted];
m14_3922 -> m14_3924  [color=darkseagreen4, key=1, label=serializerSettings, style=dashed];
m14_3923 -> m14_3924  [key=0, style=solid];
m14_3923 -> m14_197  [key=2, style=dotted];
m14_3924 -> m14_3925  [key=0, style=solid];
m14_3924 -> m14_302  [key=2, style=dotted];
m14_3924 -> m14_3926  [color=darkseagreen4, key=1, label=clonedObject, style=dashed];
m14_3925 -> m14_3926  [key=0, style=solid];
m14_3925 -> m14_10  [key=2, style=dotted];
m14_3926 -> m14_3927  [key=0, style=solid];
m14_3926 -> m14_10  [key=2, style=dotted];
m14_3927 -> m14_3920  [color=blue, key=0, style=bold];
m14_1654 -> m14_1655  [key=0, style=solid];
m14_1655 -> m14_1656  [key=0, style=solid];
m14_1655 -> m14_1655  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_1656 -> m14_1657  [key=0, style=solid];
m14_1656 -> m14_196  [key=2, style=dotted];
m14_1656 -> m14_302  [key=2, style=dotted];
m14_1656 -> m14_1658  [color=darkseagreen4, key=1, label=c, style=dashed];
m14_1656 -> m14_1659  [color=darkseagreen4, key=1, label=c, style=dashed];
m14_1656 -> m14_1660  [color=darkseagreen4, key=1, label=c, style=dashed];
m14_1656 -> m14_1661  [color=darkseagreen4, key=1, label=c, style=dashed];
m14_1656 -> m14_1662  [color=darkseagreen4, key=1, label=c, style=dashed];
m14_1656 -> m14_1663  [color=darkseagreen4, key=1, label=c, style=dashed];
m14_1656 -> m14_1664  [color=darkseagreen4, key=1, label=c, style=dashed];
m14_1656 -> m14_1665  [color=darkseagreen4, key=1, label=c, style=dashed];
m14_1656 -> m14_1666  [color=darkseagreen4, key=1, label=c, style=dashed];
m14_1657 -> m14_1658  [key=0, style=solid];
m14_1657 -> m14_10  [key=2, style=dotted];
m14_1658 -> m14_1659  [key=0, style=solid];
m14_1658 -> m14_10  [key=2, style=dotted];
m14_1659 -> m14_1660  [key=0, style=solid];
m14_1659 -> m14_10  [key=2, style=dotted];
m14_1660 -> m14_1661  [key=0, style=solid];
m14_1660 -> m14_10  [key=2, style=dotted];
m14_1661 -> m14_1662  [key=0, style=solid];
m14_1661 -> m14_10  [key=2, style=dotted];
m14_1662 -> m14_1663  [key=0, style=solid];
m14_1662 -> m14_1668  [key=2, style=dotted];
m14_1662 -> m14_10  [key=2, style=dotted];
m14_1663 -> m14_1664  [key=0, style=solid];
m14_1663 -> m14_1668  [key=2, style=dotted];
m14_1663 -> m14_10  [key=2, style=dotted];
m14_1664 -> m14_1665  [key=0, style=solid];
m14_1664 -> m14_10  [key=2, style=dotted];
m14_1665 -> m14_1666  [key=0, style=solid];
m14_1665 -> m14_10  [key=2, style=dotted];
m14_1666 -> m14_1667  [key=0, style=solid];
m14_1666 -> m14_812  [key=2, style=dotted];
m14_1667 -> m14_1654  [color=blue, key=0, style=bold];
m14_1387 -> m14_1388  [key=0, style=solid];
m14_1388 -> m14_1389  [key=0, style=solid];
m14_1388 -> m14_1393  [key=2, style=dotted];
m14_1388 -> m14_1394  [key=2, style=dotted];
m14_1388 -> m14_1390  [color=darkseagreen4, key=1, label=personRaw, style=dashed];
m14_1389 -> m14_1390  [key=0, style=solid];
m14_1390 -> m14_1391  [key=0, style=solid];
m14_1390 -> m14_9  [key=2, style=dotted];
m14_1391 -> m14_1392  [key=0, style=solid];
m14_1391 -> m14_10  [key=2, style=dotted];
m14_1392 -> m14_1387  [color=blue, key=0, style=bold];
m14_894 -> m14_895  [key=0, style=solid];
m14_895 -> m14_896  [key=0, style=solid];
m14_895 -> m14_903  [key=2, style=dotted];
m14_895 -> m14_897  [color=darkseagreen4, key=1, label=baseWith, style=dashed];
m14_895 -> m14_898  [color=darkseagreen4, key=1, label=baseWith, style=dashed];
m14_895 -> m14_899  [color=darkseagreen4, key=1, label=baseWith, style=dashed];
m14_895 -> m14_900  [color=darkseagreen4, key=1, label=baseWith, style=dashed];
m14_896 -> m14_897  [key=0, style=solid];
m14_897 -> m14_898  [key=0, style=solid];
m14_898 -> m14_899  [key=0, style=solid];
m14_899 -> m14_900  [key=0, style=solid];
m14_900 -> m14_901  [key=0, style=solid];
m14_900 -> m14_873  [key=2, style=dotted];
m14_901 -> m14_902  [key=0, style=solid];
m14_901 -> m14_62  [key=2, style=dotted];
m14_902 -> m14_894  [color=blue, key=0, style=bold];
m14_2080 -> m14_2081  [color=red, key=0, style=solid];
m14_2081 -> m14_2082  [color=red, key=0, style=solid];
m14_2081 -> m14_2083  [color=red, key=2, style=dotted];
m14_2082 -> m14_2080  [color=blue, key=0, style=bold];
m14_3261 -> m14_3262  [key=0, style=solid];
m14_3262 -> m14_3263  [key=0, style=solid];
m14_3262 -> m14_3269  [key=2, style=dotted];
m14_3263 -> m14_3264  [key=0, style=solid];
m14_3263 -> m14_61  [key=2, style=dotted];
m14_3264 -> m14_3265  [key=0, style=solid];
m14_3264 -> m14_62  [key=2, style=dotted];
m14_3265 -> m14_3266  [key=0, style=solid];
m14_3265 -> m14_3270  [key=2, style=dotted];
m14_3266 -> m14_3267  [key=0, style=solid];
m14_3266 -> m14_61  [key=2, style=dotted];
m14_3267 -> m14_3268  [key=0, style=solid];
m14_3267 -> m14_62  [key=2, style=dotted];
m14_3268 -> m14_3261  [color=blue, key=0, style=bold];
m14_4006 -> m14_4007  [color=red, key=0, style=solid];
m14_4006 -> m14_1160  [color=darkorchid, key=3, label="method methodReturn object ReadJson", style=bold];
m14_4007 -> m14_4008  [color=red, key=0, style=solid];
m14_4007 -> m14_47  [color=red, key=2, style=dotted];
m14_4007 -> m14_4010  [color=red, key=1, label=encodingName, style=dashed];
m14_4008 -> m14_4009  [color=red, key=0, style=solid];
m14_4008 -> m14_4010  [color=red, key=0, style=solid];
m14_4010 -> m14_4011  [color=red, key=0, style=solid];
m14_4010 -> m14_4012  [color=red, key=2, style=dotted];
m14_4009 -> m14_4011  [color=red, key=0, style=solid];
m14_4011 -> m14_4006  [color=blue, key=0, style=bold];
m14_884 -> m14_885  [key=0, style=solid];
m14_885 -> m14_886  [key=0, style=solid];
m14_885 -> m14_893  [key=2, style=dotted];
m14_885 -> m14_887  [color=darkseagreen4, key=1, label=baseWith, style=dashed];
m14_885 -> m14_888  [color=darkseagreen4, key=1, label=baseWith, style=dashed];
m14_885 -> m14_889  [color=darkseagreen4, key=1, label=baseWith, style=dashed];
m14_885 -> m14_890  [color=darkseagreen4, key=1, label=baseWith, style=dashed];
m14_886 -> m14_887  [key=0, style=solid];
m14_887 -> m14_888  [key=0, style=solid];
m14_888 -> m14_889  [key=0, style=solid];
m14_889 -> m14_890  [key=0, style=solid];
m14_890 -> m14_891  [key=0, style=solid];
m14_890 -> m14_873  [key=2, style=dotted];
m14_891 -> m14_892  [key=0, style=solid];
m14_891 -> m14_62  [key=2, style=dotted];
m14_892 -> m14_884  [color=blue, key=0, style=bold];
m14_2390 -> m14_2391  [key=0, style=solid];
m14_2391 -> m14_2392  [key=0, style=solid];
m14_2391 -> m14_11  [key=2, style=dotted];
m14_2392 -> m14_2393  [key=0, style=solid];
m14_2392 -> m14_2389  [key=2, style=dotted];
m14_2392 -> m14_957  [key=2, style=dotted];
m14_2392 -> m14_1113  [key=2, style=dotted];
m14_2392 -> m14_10  [key=2, style=dotted];
m14_2393 -> m14_2390  [color=blue, key=0, style=bold];
m14_2581 -> m14_2582  [key=0, style=solid];
m14_2582 -> m14_2583  [key=0, style=solid];
m14_2582 -> m14_2582  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_2583 -> m14_2584  [key=0, style=solid];
m14_2583 -> m14_11  [key=2, style=dotted];
m14_2583 -> m14_2585  [color=darkseagreen4, key=1, label=commentTestClass, style=dashed];
m14_2583 -> m14_2586  [color=darkseagreen4, key=1, label=commentTestClass, style=dashed];
m14_2584 -> m14_2585  [key=0, style=solid];
m14_2584 -> m14_10  [key=2, style=dotted];
m14_2585 -> m14_2586  [key=0, style=solid];
m14_2585 -> m14_10  [key=2, style=dotted];
m14_2586 -> m14_2587  [key=0, style=solid];
m14_2586 -> m14_10  [key=2, style=dotted];
m14_2587 -> m14_2581  [color=blue, key=0, style=bold];
m14_1731 -> m14_1732  [key=0, style=solid];
m14_1732 -> m14_1733  [key=0, style=solid];
m14_1732 -> m14_1732  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_1733 -> m14_1734  [key=0, style=solid];
m14_1733 -> m14_11  [key=2, style=dotted];
m14_1734 -> m14_1735  [key=0, style=solid];
m14_1734 -> m14_10  [key=2, style=dotted];
m14_1735 -> m14_1731  [color=blue, key=0, style=bold];
m14_3497 -> m14_3498  [key=0, style=solid];
m14_3498 -> m14_3497  [color=blue, key=0, style=bold];
m14_1107 -> m14_1108  [key=0, style=solid];
m14_1108 -> m14_1109  [key=0, style=solid];
m14_1108 -> m14_300  [key=2, style=dotted];
m14_1108 -> m14_1112  [key=2, style=dotted];
m14_1108 -> m14_1105  [key=2, style=dotted];
m14_1108 -> m14_406  [key=2, style=dotted];
m14_1108 -> m14_1113  [key=2, style=dotted];
m14_1109 -> m14_1110  [key=0, style=solid];
m14_1109 -> m14_9  [key=2, style=dotted];
m14_1110 -> m14_1111  [key=0, style=solid];
m14_1110 -> m14_10  [key=2, style=dotted];
m14_1111 -> m14_1107  [color=blue, key=0, style=bold];
m14_2536 -> m14_2537  [key=0, style=solid];
m14_2537 -> m14_2538  [key=0, style=solid];
m14_2537 -> m14_11  [key=2, style=dotted];
m14_2537 -> m14_2539  [color=darkseagreen4, key=1, label=c, style=dashed];
m14_2537 -> m14_2540  [color=darkseagreen4, key=1, label=c, style=dashed];
m14_2538 -> m14_2539  [key=0, style=solid];
m14_2538 -> m14_10  [key=2, style=dotted];
m14_2539 -> m14_2540  [key=0, style=solid];
m14_2539 -> m14_10  [key=2, style=dotted];
m14_2540 -> m14_2541  [key=0, style=solid];
m14_2540 -> m14_10  [key=2, style=dotted];
m14_2541 -> m14_2536  [color=blue, key=0, style=bold];
m14_2987 -> m14_2988  [key=0, style=solid];
m14_2988 -> m14_2989  [key=0, style=solid];
m14_2988 -> m14_88  [key=2, style=dotted];
m14_2988 -> m14_2990  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_2989 -> m14_2987  [color=blue, key=0, style=bold];
m14_3237 -> m14_3244  [key=0, style=solid];
m14_3237 -> m14_3230  [color=darkorchid, key=3, label="Parameter variable string json", style=bold];
m14_3244 -> m14_3245  [key=0, style=solid];
m14_3244 -> m14_43  [key=2, style=dotted];
m14_3244 -> m14_403  [key=2, style=dotted];
m14_3244 -> m14_3247  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m14_3245 -> m14_3246  [key=0, style=solid];
m14_3245 -> m14_46  [key=2, style=dotted];
m14_3245 -> m14_3247  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_3247 -> m14_3248  [key=0, style=solid];
m14_3247 -> m14_2353  [key=2, style=dotted];
m14_3246 -> m14_3247  [key=0, style=solid];
m14_3246 -> m14_1852  [key=2, style=dotted];
m14_3248 -> m14_3237  [color=blue, key=0, style=bold];
m14_2939 -> m14_2940  [key=0, style=solid];
m14_2940 -> m14_2941  [key=0, style=solid];
m14_2940 -> m14_2949  [key=2, style=dotted];
m14_2940 -> m14_9  [key=2, style=dotted];
m14_2940 -> m14_2942  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_2941 -> m14_2942  [key=0, style=solid];
m14_2941 -> m14_10  [key=2, style=dotted];
m14_2942 -> m14_2943  [key=0, style=solid];
m14_2942 -> m14_11  [key=2, style=dotted];
m14_2943 -> m14_2944  [key=0, style=solid];
m14_2943 -> m14_10  [key=2, style=dotted];
m14_2944 -> m14_2945  [key=0, style=solid];
m14_2944 -> m14_2949  [key=2, style=dotted];
m14_2944 -> m14_9  [key=2, style=dotted];
m14_2944 -> m14_2946  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_2945 -> m14_2946  [key=0, style=solid];
m14_2945 -> m14_10  [key=2, style=dotted];
m14_2946 -> m14_2947  [key=0, style=solid];
m14_2946 -> m14_11  [key=2, style=dotted];
m14_2947 -> m14_2948  [key=0, style=solid];
m14_2947 -> m14_10  [key=2, style=dotted];
m14_2948 -> m14_2939  [color=blue, key=0, style=bold];
m14_1114 -> m14_1115  [key=0, style=solid];
m14_1115 -> m14_1116  [key=0, style=solid];
m14_1115 -> m14_300  [key=2, style=dotted];
m14_1115 -> m14_1112  [key=2, style=dotted];
m14_1115 -> m14_1105  [key=2, style=dotted];
m14_1115 -> m14_406  [key=2, style=dotted];
m14_1115 -> m14_1113  [key=2, style=dotted];
m14_1116 -> m14_1117  [key=0, style=solid];
m14_1116 -> m14_196  [key=2, style=dotted];
m14_1116 -> m14_197  [key=2, style=dotted];
m14_1117 -> m14_1118  [key=0, style=solid];
m14_1117 -> m14_10  [key=2, style=dotted];
m14_1118 -> m14_1114  [color=blue, key=0, style=bold];
m14_3728 -> m14_3729  [key=0, style=solid];
m14_3729 -> m14_3730  [key=0, style=solid];
m14_3729 -> m14_3735  [key=2, style=dotted];
m14_3729 -> m14_3731  [color=darkseagreen4, key=1, label=product, style=dashed];
m14_3730 -> m14_3731  [key=0, style=solid];
m14_3730 -> m14_210  [key=2, style=dotted];
m14_3731 -> m14_3732  [key=0, style=solid];
m14_3731 -> m14_9  [key=2, style=dotted];
m14_3731 -> m14_3733  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_3732 -> m14_3733  [key=0, style=solid];
m14_3732 -> m14_10  [key=2, style=dotted];
m14_3733 -> m14_3734  [key=0, style=solid];
m14_3733 -> m14_11  [key=2, style=dotted];
m14_3734 -> m14_3728  [color=blue, key=0, style=bold];
m14_1229 -> m14_1230  [key=0, style=solid];
m14_1230 -> m14_1231  [key=0, style=solid];
m14_1230 -> m14_1232  [color=darkseagreen4, key=1, label=obj, style=dashed];
m14_1230 -> m14_1233  [color=darkseagreen4, key=1, label=obj, style=dashed];
m14_1231 -> m14_1232  [key=0, style=solid];
m14_1231 -> m14_196  [key=2, style=dotted];
m14_1231 -> m14_1233  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_1232 -> m14_1233  [key=0, style=solid];
m14_1232 -> m14_197  [key=2, style=dotted];
m14_1232 -> m14_1234  [color=darkseagreen4, key=1, label=indented, style=dashed];
m14_1233 -> m14_1234  [key=0, style=solid];
m14_1233 -> m14_212  [key=2, style=dotted];
m14_1234 -> m14_1235  [key=0, style=solid];
m14_1234 -> m14_1236  [key=2, style=dotted];
m14_1235 -> m14_1229  [color=blue, key=0, style=bold];
m14_3577 -> m14_3578  [key=0, style=solid];
m14_3578 -> m14_3579  [key=0, style=solid];
m14_3578 -> m14_3581  [key=2, style=dotted];
m14_3578 -> m14_196  [key=2, style=dotted];
m14_3578 -> m14_1852  [key=2, style=dotted];
m14_3578 -> m14_212  [key=2, style=dotted];
m14_3579 -> m14_3580  [key=0, style=solid];
m14_3579 -> m14_62  [key=2, style=dotted];
m14_3580 -> m14_3577  [color=blue, key=0, style=bold];
m14_0 -> m14_1  [key=0, style=solid];
m14_1 -> m14_2  [key=0, style=solid];
m14_1 -> m14_8  [key=2, style=dotted];
m14_1 -> m14_3  [color=darkseagreen4, key=1, label=c, style=dashed];
m14_2 -> m14_3  [key=0, style=solid];
m14_3 -> m14_4  [key=0, style=solid];
m14_3 -> m14_9  [key=2, style=dotted];
m14_3 -> m14_5  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_4 -> m14_5  [key=0, style=solid];
m14_4 -> m14_10  [key=2, style=dotted];
m14_5 -> m14_6  [key=0, style=solid];
m14_5 -> m14_11  [key=2, style=dotted];
m14_6 -> m14_7  [key=0, style=solid];
m14_6 -> m14_10  [key=2, style=dotted];
m14_7 -> m14_0  [color=blue, key=0, style=bold];
m14_2565 -> m14_2566  [key=0, style=solid];
m14_2566 -> m14_2567  [key=0, style=solid];
m14_2566 -> m14_88  [key=2, style=dotted];
m14_2566 -> m14_2568  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_2567 -> m14_2565  [color=blue, key=0, style=bold];
m14_2110 -> m14_2111  [key=0, style=solid];
m14_2111 -> m14_2112  [key=0, style=solid];
m14_2111 -> m14_2052  [key=2, style=dotted];
m14_2111 -> m14_2113  [color=darkseagreen4, key=1, label=modelStateDictionary, style=dashed];
m14_2112 -> m14_2113  [key=0, style=solid];
m14_2112 -> m14_2065  [key=2, style=dotted];
m14_2113 -> m14_2114  [key=0, style=solid];
m14_2113 -> m14_9  [key=2, style=dotted];
m14_2113 -> m14_2115  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_2114 -> m14_2115  [key=0, style=solid];
m14_2114 -> m14_10  [key=2, style=dotted];
m14_2115 -> m14_2116  [key=0, style=solid];
m14_2115 -> m14_11  [key=2, style=dotted];
m14_2115 -> m14_2117  [color=darkseagreen4, key=1, label=newModelStateDictionary, style=dashed];
m14_2116 -> m14_2117  [key=0, style=solid];
m14_2116 -> m14_10  [key=2, style=dotted];
m14_2117 -> m14_2118  [key=0, style=solid];
m14_2117 -> m14_10  [key=2, style=dotted];
m14_2118 -> m14_2110  [color=blue, key=0, style=bold];
m14_2892 -> m14_2893  [key=0, style=solid];
m14_2893 -> m14_2894  [key=0, style=solid];
m14_2893 -> m14_88  [key=2, style=dotted];
m14_2893 -> m14_2895  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_2893 -> m14_2893  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_2894 -> m14_2892  [color=blue, key=0, style=bold];
m14_63 -> m14_64  [key=0, style=solid];
m14_64 -> m14_65  [key=0, style=solid];
m14_64 -> m14_64  [color=darkorchid, key=3, label="Local variable string deserialized", style=bold];
m14_65 -> m14_66  [key=0, style=solid];
m14_65 -> m14_11  [key=2, style=dotted];
m14_66 -> m14_67  [key=0, style=solid];
m14_66 -> m14_71  [key=2, style=dotted];
m14_66 -> m14_68  [color=darkseagreen4, key=1, label=enumerableObject, style=dashed];
m14_66 -> m14_69  [color=darkseagreen4, key=1, label=enumerableObject, style=dashed];
m14_67 -> m14_68  [key=0, style=solid];
m14_67 -> m14_10  [key=2, style=dotted];
m14_68 -> m14_69  [key=0, style=solid];
m14_68 -> m14_10  [key=2, style=dotted];
m14_69 -> m14_70  [key=0, style=solid];
m14_69 -> m14_10  [key=2, style=dotted];
m14_70 -> m14_63  [color=blue, key=0, style=bold];
m14_17 -> m14_18  [key=0, style=solid];
m14_17 -> m14_19  [color=darkseagreen4, key=1, label=int, style=dashed];
m14_18 -> m14_19  [key=0, style=solid];
m14_19 -> m14_20  [key=0, style=solid];
m14_20 -> m14_17  [color=blue, key=0, style=bold];
m14_2605 -> m14_2606  [key=0, style=solid];
m14_2606 -> m14_2607  [key=0, style=solid];
m14_2606 -> m14_2604  [key=2, style=dotted];
m14_2606 -> m14_2609  [color=darkseagreen4, key=1, label=cc, style=dashed];
m14_2607 -> m14_2608  [key=0, style=solid];
m14_2607 -> m14_2613  [key=2, style=dotted];
m14_2607 -> m14_2609  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_2609 -> m14_2610  [key=0, style=solid];
m14_2609 -> m14_918  [key=2, style=dotted];
m14_2608 -> m14_2609  [key=0, style=solid];
m14_2608 -> m14_849  [key=2, style=dotted];
m14_2608 -> m14_2610  [color=darkseagreen4, key=1, label=ms, style=dashed];
m14_2610 -> m14_2611  [color=red, key=0, style=solid];
m14_2610 -> m14_919  [key=2, style=dotted];
m14_2610 -> m14_2614  [key=2, style=dotted];
m14_2610 -> m14_920  [key=2, style=dotted];
m14_2611 -> m14_2612  [color=red, key=0, style=solid];
m14_2611 -> m14_10  [color=red, key=2, style=dotted];
m14_2612 -> m14_2605  [color=blue, key=0, style=bold];
m14_2615 -> m14_2616  [key=0, style=solid];
m14_2616 -> m14_2617  [key=0, style=solid];
m14_2616 -> m14_2620  [key=2, style=dotted];
m14_2617 -> m14_2618  [key=0, style=solid];
m14_2617 -> m14_9  [key=2, style=dotted];
m14_2618 -> m14_2619  [key=0, style=solid];
m14_2618 -> m14_10  [key=2, style=dotted];
m14_2619 -> m14_2615  [color=blue, key=0, style=bold];
m14_3835 -> m14_3836  [key=0, style=solid];
m14_3836 -> m14_3837  [key=0, style=solid];
m14_3836 -> m14_575  [key=2, style=dotted];
m14_3836 -> m14_3839  [color=darkseagreen4, key=1, label=culture, style=dashed];
m14_3836 -> m14_3844  [color=darkseagreen4, key=1, label=culture, style=dashed];
m14_3836 -> m14_3849  [color=darkseagreen4, key=1, label=culture, style=dashed];
m14_3837 -> m14_3838  [key=0, style=solid];
m14_3837 -> m14_957  [key=2, style=dotted];
m14_3837 -> m14_3840  [color=darkseagreen4, key=1, label=dt, style=dashed];
m14_3837 -> m14_3843  [color=darkseagreen4, key=1, label=dt, style=dashed];
m14_3837 -> m14_3848  [color=darkseagreen4, key=1, label=dt, style=dashed];
m14_3839 -> m14_3840  [key=0, style=solid];
m14_3839 -> m14_196  [key=2, style=dotted];
m14_3839 -> m14_3842  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_3844 -> m14_3845  [key=0, style=solid];
m14_3844 -> m14_43  [key=2, style=dotted];
m14_3844 -> m14_403  [key=2, style=dotted];
m14_3849 -> m14_3850  [key=0, style=solid];
m14_3849 -> m14_43  [key=2, style=dotted];
m14_3849 -> m14_403  [key=2, style=dotted];
m14_3838 -> m14_3839  [key=0, style=solid];
m14_3838 -> m14_3844  [color=darkseagreen4, key=1, label=dateFormatString, style=dashed];
m14_3838 -> m14_3849  [color=darkseagreen4, key=1, label=dateFormatString, style=dashed];
m14_3838 -> m14_3818  [color=darkorchid, key=3, label="Local variable string dateFormatString", style=bold];
m14_3840 -> m14_3841  [key=0, style=solid];
m14_3840 -> m14_197  [key=2, style=dotted];
m14_3840 -> m14_3842  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_3840 -> m14_3844  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_3843 -> m14_3844  [key=0, style=solid];
m14_3843 -> m14_10  [key=2, style=dotted];
m14_3848 -> m14_3849  [key=0, style=solid];
m14_3848 -> m14_10  [key=2, style=dotted];
m14_3842 -> m14_3843  [key=0, style=solid];
m14_3842 -> m14_302  [key=2, style=dotted];
m14_3841 -> m14_3842  [key=0, style=solid];
m14_3841 -> m14_10  [key=2, style=dotted];
m14_3845 -> m14_3846  [key=0, style=solid];
m14_3845 -> m14_3114  [key=2, style=dotted];
m14_3845 -> m14_3847  [color=darkseagreen4, key=1, label=v, style=dashed];
m14_3845 -> m14_3848  [color=darkseagreen4, key=1, label=v, style=dashed];
m14_3846 -> m14_3847  [key=0, style=solid];
m14_3846 -> m14_10  [key=2, style=dotted];
m14_3847 -> m14_3848  [key=0, style=solid];
m14_3847 -> m14_405  [key=2, style=dotted];
m14_3847 -> m14_10  [key=2, style=dotted];
m14_3850 -> m14_3851  [key=0, style=solid];
m14_3850 -> m14_3114  [key=2, style=dotted];
m14_3850 -> m14_3852  [color=darkseagreen4, key=1, label=v, style=dashed];
m14_3850 -> m14_3853  [color=darkseagreen4, key=1, label=v, style=dashed];
m14_3851 -> m14_3852  [key=0, style=solid];
m14_3851 -> m14_10  [key=2, style=dotted];
m14_3852 -> m14_3853  [key=0, style=solid];
m14_3852 -> m14_405  [key=2, style=dotted];
m14_3852 -> m14_10  [key=2, style=dotted];
m14_3853 -> m14_3854  [key=0, style=solid];
m14_3853 -> m14_10  [key=2, style=dotted];
m14_3854 -> m14_3835  [color=blue, key=0, style=bold];
m14_3955 -> m14_3956  [key=0, style=solid];
m14_3956 -> m14_3957  [key=0, style=solid];
m14_3956 -> m14_3960  [color=darkseagreen4, key=1, label=JsonMessage, style=dashed];
m14_3956 -> m14_3956  [color=darkorchid, key=3, label="Local variable string JsonMessage", style=bold];
m14_3957 -> m14_3958  [key=0, style=solid];
m14_3957 -> m14_88  [key=2, style=dotted];
m14_3957 -> m14_3959  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_3958 -> m14_3955  [color=blue, key=0, style=bold];
m14_1871 -> m14_1872  [key=0, style=solid];
m14_1872 -> m14_1873  [key=0, style=solid];
m14_1872 -> m14_300  [key=2, style=dotted];
m14_1872 -> m14_1874  [color=darkseagreen4, key=1, label=strings, style=dashed];
m14_1872 -> m14_1875  [color=darkseagreen4, key=1, label=strings, style=dashed];
m14_1872 -> m14_1876  [color=darkseagreen4, key=1, label=strings, style=dashed];
m14_1873 -> m14_1874  [key=0, style=solid];
m14_1873 -> m14_1879  [key=2, style=dotted];
m14_1874 -> m14_1875  [key=0, style=solid];
m14_1874 -> m14_1879  [key=2, style=dotted];
m14_1875 -> m14_1876  [key=0, style=solid];
m14_1875 -> m14_1879  [key=2, style=dotted];
m14_1876 -> m14_1877  [key=0, style=solid];
m14_1876 -> m14_9  [key=2, style=dotted];
m14_1877 -> m14_1878  [key=0, style=solid];
m14_1877 -> m14_10  [key=2, style=dotted];
m14_1878 -> m14_1871  [color=blue, key=0, style=bold];
m14_1880 -> m14_1881  [key=0, style=solid];
m14_1881 -> m14_1882  [key=0, style=solid];
m14_1881 -> m14_1888  [key=2, style=dotted];
m14_1882 -> m14_1883  [key=0, style=solid];
m14_1882 -> m14_61  [key=2, style=dotted];
m14_1882 -> m14_1884  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_1883 -> m14_1884  [key=0, style=solid];
m14_1883 -> m14_62  [key=2, style=dotted];
m14_1884 -> m14_1885  [key=0, style=solid];
m14_1884 -> m14_11  [key=2, style=dotted];
m14_1884 -> m14_1886  [color=darkseagreen4, key=1, label=c2, style=dashed];
m14_1885 -> m14_1886  [key=0, style=solid];
m14_1885 -> m14_10  [key=2, style=dotted];
m14_1886 -> m14_1887  [key=0, style=solid];
m14_1886 -> m14_10  [key=2, style=dotted];
m14_1887 -> m14_1880  [color=blue, key=0, style=bold];
m14_51 -> m14_52  [key=0, style=solid];
m14_52 -> m14_53  [key=0, style=solid];
m14_52 -> m14_59  [key=2, style=dotted];
m14_52 -> m14_54  [color=darkseagreen4, key=1, label=mySubclass, style=dashed];
m14_53 -> m14_54  [key=0, style=solid];
m14_53 -> m14_60  [key=2, style=dotted];
m14_53 -> m14_56  [color=darkseagreen4, key=1, label=myMainClass, style=dashed];
m14_54 -> m14_55  [key=0, style=solid];
m14_54 -> m14_61  [key=2, style=dotted];
m14_56 -> m14_57  [key=0, style=solid];
m14_56 -> m14_61  [key=2, style=dotted];
m14_55 -> m14_56  [key=0, style=solid];
m14_55 -> m14_62  [key=2, style=dotted];
m14_57 -> m14_58  [key=0, style=solid];
m14_57 -> m14_62  [key=2, style=dotted];
m14_58 -> m14_51  [color=blue, key=0, style=bold];
m14_2950 -> m14_2951  [key=0, style=solid];
m14_2951 -> m14_2952  [key=0, style=solid];
m14_2951 -> m14_2956  [key=2, style=dotted];
m14_2951 -> m14_2957  [key=2, style=dotted];
m14_2951 -> m14_9  [key=2, style=dotted];
m14_2952 -> m14_2953  [key=0, style=solid];
m14_2952 -> m14_10  [key=2, style=dotted];
m14_2953 -> m14_2954  [key=0, style=solid];
m14_2953 -> m14_11  [key=2, style=dotted];
m14_2954 -> m14_2955  [key=0, style=solid];
m14_2954 -> m14_2957  [key=2, style=dotted];
m14_2954 -> m14_10  [key=2, style=dotted];
m14_2955 -> m14_2950  [color=blue, key=0, style=bold];
m14_3161 -> m14_3162  [key=0, style=solid];
m14_3162 -> m14_3163  [key=0, style=solid];
m14_3162 -> m14_3169  [key=2, style=dotted];
m14_3163 -> m14_3164  [key=0, style=solid];
m14_3163 -> m14_11  [key=2, style=dotted];
m14_3163 -> m14_3165  [color=darkseagreen4, key=1, label=c2, style=dashed];
m14_3163 -> m14_3166  [color=darkseagreen4, key=1, label=c2, style=dashed];
m14_3163 -> m14_3167  [color=darkseagreen4, key=1, label=c2, style=dashed];
m14_3164 -> m14_3165  [key=0, style=solid];
m14_3164 -> m14_812  [key=2, style=dotted];
m14_3165 -> m14_3166  [key=0, style=solid];
m14_3165 -> m14_10  [key=2, style=dotted];
m14_3166 -> m14_3167  [key=0, style=solid];
m14_3166 -> m14_10  [key=2, style=dotted];
m14_3167 -> m14_3168  [key=0, style=solid];
m14_3167 -> m14_10  [key=2, style=dotted];
m14_3168 -> m14_3161  [color=blue, key=0, style=bold];
m14_3020 -> m14_3021  [key=0, style=solid];
m14_3021 -> m14_3022  [key=0, style=solid];
m14_3021 -> m14_196  [key=2, style=dotted];
m14_3021 -> m14_302  [key=2, style=dotted];
m14_3021 -> m14_3023  [color=darkseagreen4, key=1, label=c, style=dashed];
m14_3021 -> m14_3024  [color=darkseagreen4, key=1, label=c, style=dashed];
m14_3021 -> m14_3025  [color=darkseagreen4, key=1, label=c, style=dashed];
m14_3022 -> m14_3023  [key=0, style=solid];
m14_3022 -> m14_3032  [key=2, style=dotted];
m14_3022 -> m14_3033  [key=2, style=dotted];
m14_3022 -> m14_10  [key=2, style=dotted];
m14_3023 -> m14_3024  [key=0, style=solid];
m14_3023 -> m14_3034  [key=2, style=dotted];
m14_3023 -> m14_10  [key=2, style=dotted];
m14_3024 -> m14_3025  [key=0, style=solid];
m14_3024 -> m14_10  [key=2, style=dotted];
m14_3025 -> m14_3026  [key=0, style=solid];
m14_3025 -> m14_10  [key=2, style=dotted];
m14_3026 -> m14_3027  [key=0, style=solid];
m14_3026 -> m14_196  [key=2, style=dotted];
m14_3026 -> m14_302  [key=2, style=dotted];
m14_3026 -> m14_3028  [color=darkseagreen4, key=1, label=c2, style=dashed];
m14_3026 -> m14_3029  [color=darkseagreen4, key=1, label=c2, style=dashed];
m14_3026 -> m14_3030  [color=darkseagreen4, key=1, label=c2, style=dashed];
m14_3027 -> m14_3028  [key=0, style=solid];
m14_3027 -> m14_3032  [key=2, style=dotted];
m14_3027 -> m14_3033  [key=2, style=dotted];
m14_3027 -> m14_10  [key=2, style=dotted];
m14_3028 -> m14_3029  [key=0, style=solid];
m14_3028 -> m14_3034  [key=2, style=dotted];
m14_3028 -> m14_10  [key=2, style=dotted];
m14_3029 -> m14_3030  [key=0, style=solid];
m14_3029 -> m14_10  [key=2, style=dotted];
m14_3030 -> m14_3031  [key=0, style=solid];
m14_3030 -> m14_10  [key=2, style=dotted];
m14_3031 -> m14_3020  [color=blue, key=0, style=bold];
m14_1266 -> m14_1267  [key=0, style=solid];
m14_1267 -> m14_1268  [key=0, style=solid];
m14_1267 -> m14_1273  [key=2, style=dotted];
m14_1267 -> m14_9  [key=2, style=dotted];
m14_1268 -> m14_1269  [key=0, style=solid];
m14_1268 -> m14_10  [key=2, style=dotted];
m14_1269 -> m14_1270  [key=0, style=solid];
m14_1269 -> m14_11  [key=2, style=dotted];
m14_1269 -> m14_1271  [color=darkseagreen4, key=1, label=c, style=dashed];
m14_1270 -> m14_1271  [key=0, style=solid];
m14_1270 -> m14_10  [key=2, style=dotted];
m14_1271 -> m14_1272  [key=0, style=solid];
m14_1271 -> m14_10  [key=2, style=dotted];
m14_1272 -> m14_1266  [color=blue, key=0, style=bold];
m14_2660 -> m14_2661  [key=0, style=solid];
m14_2661 -> m14_2662  [key=0, style=solid];
m14_2661 -> m14_2666  [key=2, style=dotted];
m14_2661 -> m14_61  [key=2, style=dotted];
m14_2662 -> m14_2663  [key=0, style=solid];
m14_2662 -> m14_62  [key=2, style=dotted];
m14_2663 -> m14_2664  [key=0, style=solid];
m14_2663 -> m14_2667  [key=2, style=dotted];
m14_2663 -> m14_61  [key=2, style=dotted];
m14_2664 -> m14_2665  [key=0, style=solid];
m14_2664 -> m14_62  [key=2, style=dotted];
m14_2665 -> m14_2660  [color=blue, key=0, style=bold];
m14_146 -> m14_147  [key=0, style=solid];
m14_147 -> m14_148  [key=0, style=solid];
m14_147 -> m14_156  [key=2, style=dotted];
m14_147 -> m14_151  [color=darkseagreen4, key=1, label=foo1, style=dashed];
m14_147 -> m14_152  [color=darkseagreen4, key=1, label=foo1, style=dashed];
m14_147 -> m14_153  [color=darkseagreen4, key=1, label=foo1, style=dashed];
m14_147 -> m14_154  [color=darkseagreen4, key=1, label=foo1, style=dashed];
m14_148 -> m14_149  [key=0, style=solid];
m14_148 -> m14_9  [key=2, style=dotted];
m14_148 -> m14_150  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_151 -> m14_152  [key=0, style=solid];
m14_151 -> m14_10  [key=2, style=dotted];
m14_152 -> m14_153  [key=0, style=solid];
m14_152 -> m14_10  [key=2, style=dotted];
m14_153 -> m14_154  [key=0, style=solid];
m14_153 -> m14_10  [key=2, style=dotted];
m14_154 -> m14_155  [key=0, style=solid];
m14_154 -> m14_10  [key=2, style=dotted];
m14_149 -> m14_150  [key=0, style=solid];
m14_149 -> m14_62  [key=2, style=dotted];
m14_150 -> m14_151  [key=0, style=solid];
m14_150 -> m14_11  [key=2, style=dotted];
m14_150 -> m14_152  [color=darkseagreen4, key=1, label=foo2, style=dashed];
m14_150 -> m14_153  [color=darkseagreen4, key=1, label=foo2, style=dashed];
m14_150 -> m14_154  [color=darkseagreen4, key=1, label=foo2, style=dashed];
m14_155 -> m14_146  [color=blue, key=0, style=bold];
m14_313 -> m14_314  [key=0, style=solid];
m14_314 -> m14_315  [key=0, style=solid];
m14_314 -> m14_11  [key=2, style=dotted];
m14_315 -> m14_316  [key=0, style=solid];
m14_315 -> m14_10  [key=2, style=dotted];
m14_315 -> m14_315  [color=darkseagreen4, key=1, label=result, style=dashed];
m14_316 -> m14_313  [color=blue, key=0, style=bold];
m14_1826 -> m14_1827  [key=0, style=solid];
m14_1827 -> m14_1828  [key=0, style=solid];
m14_1827 -> m14_1831  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_1827 -> m14_1764  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_1828 -> m14_1829  [key=0, style=solid];
m14_1828 -> m14_88  [key=2, style=dotted];
m14_1828 -> m14_1830  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_1829 -> m14_1826  [color=blue, key=0, style=bold];
m14_320 -> m14_321  [key=0, style=solid];
m14_321 -> m14_322  [key=0, style=solid];
m14_321 -> m14_327  [key=2, style=dotted];
m14_321 -> m14_328  [key=2, style=dotted];
m14_322 -> m14_323  [key=0, style=solid];
m14_322 -> m14_9  [key=2, style=dotted];
m14_323 -> m14_324  [key=0, style=solid];
m14_323 -> m14_10  [key=2, style=dotted];
m14_324 -> m14_325  [key=0, style=solid];
m14_324 -> m14_11  [key=2, style=dotted];
m14_325 -> m14_326  [key=0, style=solid];
m14_325 -> m14_10  [key=2, style=dotted];
m14_326 -> m14_320  [color=blue, key=0, style=bold];
m14_3193 -> m14_3194  [key=0, style=solid];
m14_3194 -> m14_3195  [key=0, style=solid];
m14_3194 -> m14_210  [key=2, style=dotted];
m14_3194 -> m14_1105  [key=2, style=dotted];
m14_3195 -> m14_3196  [key=0, style=solid];
m14_3195 -> m14_61  [key=2, style=dotted];
m14_3195 -> m14_3197  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_3196 -> m14_3197  [key=0, style=solid];
m14_3196 -> m14_62  [key=2, style=dotted];
m14_3197 -> m14_3198  [key=0, style=solid];
m14_3197 -> m14_11  [key=2, style=dotted];
m14_3197 -> m14_3199  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m14_3197 -> m14_3200  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m14_3198 -> m14_3199  [key=0, style=solid];
m14_3198 -> m14_10  [key=2, style=dotted];
m14_3199 -> m14_3200  [key=0, style=solid];
m14_3199 -> m14_1105  [key=2, style=dotted];
m14_3199 -> m14_10  [key=2, style=dotted];
m14_3200 -> m14_3201  [key=0, style=solid];
m14_3200 -> m14_1105  [key=2, style=dotted];
m14_3200 -> m14_10  [key=2, style=dotted];
m14_3201 -> m14_3193  [color=blue, key=0, style=bold];
m14_1724 -> m14_1725  [key=0, style=solid];
m14_1725 -> m14_1726  [key=0, style=solid];
m14_1725 -> m14_1725  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_1726 -> m14_1727  [key=0, style=solid];
m14_1726 -> m14_11  [key=2, style=dotted];
m14_1726 -> m14_1728  [color=darkseagreen4, key=1, label=values, style=dashed];
m14_1726 -> m14_1729  [color=darkseagreen4, key=1, label=values, style=dashed];
m14_1727 -> m14_1728  [key=0, style=solid];
m14_1727 -> m14_10  [key=2, style=dotted];
m14_1728 -> m14_1729  [key=0, style=solid];
m14_1728 -> m14_10  [key=2, style=dotted];
m14_1729 -> m14_1730  [key=0, style=solid];
m14_1729 -> m14_10  [key=2, style=dotted];
m14_1730 -> m14_1724  [color=blue, key=0, style=bold];
m14_2452 -> m14_2453  [key=0, style=solid];
m14_2453 -> m14_2454  [key=0, style=solid];
m14_2453 -> m14_2453  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_2454 -> m14_2455  [key=0, style=solid];
m14_2454 -> m14_11  [key=2, style=dotted];
m14_2455 -> m14_2456  [key=0, style=solid];
m14_2455 -> m14_10  [key=2, style=dotted];
m14_2456 -> m14_2452  [color=blue, key=0, style=bold];
m14_3816 -> m14_3817  [key=0, style=solid];
m14_3817 -> m14_3818  [key=0, style=solid];
m14_3817 -> m14_957  [key=2, style=dotted];
m14_3817 -> m14_3820  [color=darkseagreen4, key=1, label=dt, style=dashed];
m14_3817 -> m14_3823  [color=darkseagreen4, key=1, label=dt, style=dashed];
m14_3817 -> m14_3828  [color=darkseagreen4, key=1, label=dt, style=dashed];
m14_3818 -> m14_3819  [key=0, style=solid];
m14_3818 -> m14_3824  [color=darkseagreen4, key=1, label=dateFormatString, style=dashed];
m14_3818 -> m14_3829  [color=darkseagreen4, key=1, label=dateFormatString, style=dashed];
m14_3818 -> m14_3818  [color=darkorchid, key=3, label="Local variable string dateFormatString", style=bold];
m14_3820 -> m14_3821  [key=0, style=solid];
m14_3820 -> m14_197  [key=2, style=dotted];
m14_3820 -> m14_3822  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_3820 -> m14_3824  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_3823 -> m14_3824  [key=0, style=solid];
m14_3823 -> m14_10  [key=2, style=dotted];
m14_3828 -> m14_3829  [key=0, style=solid];
m14_3828 -> m14_10  [key=2, style=dotted];
m14_3819 -> m14_3820  [key=0, style=solid];
m14_3819 -> m14_196  [key=2, style=dotted];
m14_3819 -> m14_3822  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_3824 -> m14_3825  [key=0, style=solid];
m14_3824 -> m14_43  [key=2, style=dotted];
m14_3824 -> m14_403  [key=2, style=dotted];
m14_3829 -> m14_3830  [key=0, style=solid];
m14_3829 -> m14_43  [key=2, style=dotted];
m14_3829 -> m14_403  [key=2, style=dotted];
m14_3822 -> m14_3823  [key=0, style=solid];
m14_3822 -> m14_302  [key=2, style=dotted];
m14_3821 -> m14_3822  [key=0, style=solid];
m14_3821 -> m14_10  [key=2, style=dotted];
m14_3825 -> m14_3826  [key=0, style=solid];
m14_3825 -> m14_3114  [key=2, style=dotted];
m14_3825 -> m14_3827  [color=darkseagreen4, key=1, label=v, style=dashed];
m14_3825 -> m14_3828  [color=darkseagreen4, key=1, label=v, style=dashed];
m14_3826 -> m14_3827  [key=0, style=solid];
m14_3826 -> m14_10  [key=2, style=dotted];
m14_3827 -> m14_3828  [key=0, style=solid];
m14_3827 -> m14_405  [key=2, style=dotted];
m14_3827 -> m14_10  [key=2, style=dotted];
m14_3830 -> m14_3831  [key=0, style=solid];
m14_3830 -> m14_3114  [key=2, style=dotted];
m14_3830 -> m14_3832  [color=darkseagreen4, key=1, label=v, style=dashed];
m14_3830 -> m14_3833  [color=darkseagreen4, key=1, label=v, style=dashed];
m14_3831 -> m14_3832  [key=0, style=solid];
m14_3831 -> m14_10  [key=2, style=dotted];
m14_3832 -> m14_3833  [key=0, style=solid];
m14_3832 -> m14_405  [key=2, style=dotted];
m14_3832 -> m14_10  [key=2, style=dotted];
m14_3833 -> m14_3834  [key=0, style=solid];
m14_3833 -> m14_10  [key=2, style=dotted];
m14_3834 -> m14_3816  [color=blue, key=0, style=bold];
m14_1752 -> m14_1753  [key=0, style=solid];
m14_1753 -> m14_1754  [key=0, style=solid];
m14_1753 -> m14_1753  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_1754 -> m14_1755  [key=0, style=solid];
m14_1754 -> m14_11  [key=2, style=dotted];
m14_1755 -> m14_1752  [color=blue, key=0, style=bold];
m14_1291 -> m14_1292  [key=0, style=solid];
m14_1292 -> m14_1293  [key=0, style=solid];
m14_1292 -> m14_1290  [key=2, style=dotted];
m14_1293 -> m14_1294  [key=0, style=solid];
m14_1293 -> m14_1298  [key=2, style=dotted];
m14_1293 -> m14_1299  [key=2, style=dotted];
m14_1293 -> m14_1295  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_1294 -> m14_1295  [key=0, style=solid];
m14_1294 -> m14_10  [key=2, style=dotted];
m14_1295 -> m14_1296  [key=0, style=solid];
m14_1295 -> m14_1298  [key=2, style=dotted];
m14_1295 -> m14_250  [key=2, style=dotted];
m14_1296 -> m14_1297  [key=0, style=solid];
m14_1296 -> m14_10  [key=2, style=dotted];
m14_1297 -> m14_1291  [color=blue, key=0, style=bold];
m14_3423 -> m14_3424  [key=0, style=solid];
m14_3424 -> m14_3425  [key=0, style=solid];
m14_3424 -> m14_3431  [key=2, style=dotted];
m14_3424 -> m14_3426  [color=darkseagreen4, key=1, label=tuple, style=dashed];
m14_3425 -> m14_3426  [key=0, style=solid];
m14_3425 -> m14_3432  [key=2, style=dotted];
m14_3425 -> m14_3428  [color=darkseagreen4, key=1, label=contractResolver, style=dashed];
m14_3426 -> m14_3427  [key=0, style=solid];
m14_3426 -> m14_196  [key=2, style=dotted];
m14_3426 -> m14_197  [key=2, style=dotted];
m14_3426 -> m14_3428  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_3428 -> m14_3429  [key=0, style=solid];
m14_3428 -> m14_196  [key=2, style=dotted];
m14_3428 -> m14_302  [key=2, style=dotted];
m14_3427 -> m14_3428  [key=0, style=solid];
m14_3427 -> m14_10  [key=2, style=dotted];
m14_3429 -> m14_3430  [key=0, style=solid];
m14_3429 -> m14_10  [key=2, style=dotted];
m14_3430 -> m14_3423  [color=blue, key=0, style=bold];
m14_1403 -> m14_1404  [key=0, style=solid];
m14_1404 -> m14_1405  [key=0, style=solid];
m14_1404 -> m14_1416  [key=2, style=dotted];
m14_1404 -> m14_1249  [key=2, style=dotted];
m14_1405 -> m14_1406  [key=0, style=solid];
m14_1405 -> m14_9  [key=2, style=dotted];
m14_1405 -> m14_1407  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_1406 -> m14_1407  [key=0, style=solid];
m14_1406 -> m14_10  [key=2, style=dotted];
m14_1407 -> m14_1408  [key=0, style=solid];
m14_1407 -> m14_11  [key=2, style=dotted];
m14_1407 -> m14_1409  [color=darkseagreen4, key=1, label=userNullablleDeserialized, style=dashed];
m14_1407 -> m14_1410  [color=darkseagreen4, key=1, label=userNullablleDeserialized, style=dashed];
m14_1407 -> m14_1411  [color=darkseagreen4, key=1, label=userNullablleDeserialized, style=dashed];
m14_1407 -> m14_1412  [color=darkseagreen4, key=1, label=userNullablleDeserialized, style=dashed];
m14_1407 -> m14_1413  [color=darkseagreen4, key=1, label=userNullablleDeserialized, style=dashed];
m14_1407 -> m14_1414  [color=darkseagreen4, key=1, label=userNullablleDeserialized, style=dashed];
m14_1408 -> m14_1409  [key=0, style=solid];
m14_1408 -> m14_1249  [key=2, style=dotted];
m14_1408 -> m14_10  [key=2, style=dotted];
m14_1409 -> m14_1410  [key=0, style=solid];
m14_1409 -> m14_10  [key=2, style=dotted];
m14_1410 -> m14_1411  [key=0, style=solid];
m14_1410 -> m14_10  [key=2, style=dotted];
m14_1411 -> m14_1412  [key=0, style=solid];
m14_1411 -> m14_10  [key=2, style=dotted];
m14_1412 -> m14_1413  [key=0, style=solid];
m14_1412 -> m14_10  [key=2, style=dotted];
m14_1413 -> m14_1414  [key=0, style=solid];
m14_1413 -> m14_10  [key=2, style=dotted];
m14_1414 -> m14_1415  [key=0, style=solid];
m14_1414 -> m14_10  [key=2, style=dotted];
m14_1415 -> m14_1403  [color=blue, key=0, style=bold];
m14_1865 -> m14_1866  [key=0, style=solid];
m14_1866 -> m14_1867  [key=0, style=solid];
m14_1866 -> m14_1093  [key=2, style=dotted];
m14_1866 -> m14_1868  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_1867 -> m14_1865  [color=blue, key=0, style=bold];
m14_2668 -> m14_2669  [key=0, style=solid];
m14_2669 -> m14_2670  [key=0, style=solid];
m14_2669 -> m14_2675  [key=2, style=dotted];
m14_2670 -> m14_2671  [key=0, style=solid];
m14_2670 -> m14_61  [key=2, style=dotted];
m14_2670 -> m14_2672  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_2671 -> m14_2672  [key=0, style=solid];
m14_2671 -> m14_62  [key=2, style=dotted];
m14_2672 -> m14_2673  [key=0, style=solid];
m14_2672 -> m14_11  [key=2, style=dotted];
m14_2673 -> m14_2674  [key=0, style=solid];
m14_2673 -> m14_2676  [key=2, style=dotted];
m14_2673 -> m14_10  [key=2, style=dotted];
m14_2674 -> m14_2668  [color=blue, key=0, style=bold];
m14_3488 -> m14_3489  [key=0, style=solid];
m14_3489 -> m14_3490  [key=0, style=solid];
m14_3489 -> m14_2740  [key=2, style=dotted];
m14_3489 -> m14_3494  [color=darkseagreen4, key=1, label=sw, style=dashed];
m14_3490 -> m14_3491  [key=0, style=solid];
m14_3490 -> m14_2741  [key=2, style=dotted];
m14_3490 -> m14_3492  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m14_3490 -> m14_3493  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m14_3494 -> m14_3495  [key=0, style=solid];
m14_3494 -> m14_2745  [key=2, style=dotted];
m14_3491 -> m14_3492  [key=0, style=solid];
m14_3491 -> m14_196  [key=2, style=dotted];
m14_3491 -> m14_848  [key=2, style=dotted];
m14_3492 -> m14_3493  [key=0, style=solid];
m14_3492 -> m14_2777  [key=2, style=dotted];
m14_3493 -> m14_3494  [key=0, style=solid];
m14_3493 -> m14_10  [key=2, style=dotted];
m14_3495 -> m14_3496  [key=0, style=solid];
m14_3495 -> m14_62  [key=2, style=dotted];
m14_3496 -> m14_3488  [color=blue, key=0, style=bold];
m14_198 -> m14_199  [key=0, style=solid];
m14_199 -> m14_200  [key=0, style=solid];
m14_199 -> m14_88  [key=2, style=dotted];
m14_199 -> m14_201  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_200 -> m14_198  [color=blue, key=0, style=bold];
m14_1812 -> m14_1813  [key=0, style=solid];
m14_1813 -> m14_1814  [key=0, style=solid];
m14_1813 -> m14_1817  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_1813 -> m14_1813  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_1814 -> m14_1815  [key=0, style=solid];
m14_1814 -> m14_88  [key=2, style=dotted];
m14_1814 -> m14_1816  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_1815 -> m14_1812  [color=blue, key=0, style=bold];
m14_763 -> m14_764  [key=0, style=solid];
m14_764 -> m14_765  [key=0, style=solid];
m14_764 -> m14_770  [key=2, style=dotted];
m14_765 -> m14_766  [key=0, style=solid];
m14_765 -> m14_61  [key=2, style=dotted];
m14_766 -> m14_767  [key=0, style=solid];
m14_766 -> m14_11  [key=2, style=dotted];
m14_766 -> m14_768  [color=darkseagreen4, key=1, label=r2, style=dashed];
m14_767 -> m14_768  [key=0, style=solid];
m14_767 -> m14_771  [key=2, style=dotted];
m14_767 -> m14_10  [key=2, style=dotted];
m14_768 -> m14_769  [key=0, style=solid];
m14_768 -> m14_10  [key=2, style=dotted];
m14_769 -> m14_763  [color=blue, key=0, style=bold];
m14_1624 -> m14_1625  [key=0, style=solid];
m14_1625 -> m14_1626  [key=0, style=solid];
m14_1625 -> m14_1636  [key=2, style=dotted];
m14_1625 -> m14_1627  [color=darkseagreen4, key=1, label=optInClass, style=dashed];
m14_1625 -> m14_1628  [color=darkseagreen4, key=1, label=optInClass, style=dashed];
m14_1625 -> m14_1629  [color=darkseagreen4, key=1, label=optInClass, style=dashed];
m14_1626 -> m14_1627  [key=0, style=solid];
m14_1627 -> m14_1628  [key=0, style=solid];
m14_1628 -> m14_1629  [key=0, style=solid];
m14_1629 -> m14_1630  [key=0, style=solid];
m14_1629 -> m14_61  [key=2, style=dotted];
m14_1630 -> m14_1631  [key=0, style=solid];
m14_1630 -> m14_62  [key=2, style=dotted];
m14_1631 -> m14_1632  [key=0, style=solid];
m14_1631 -> m14_11  [key=2, style=dotted];
m14_1631 -> m14_1633  [color=darkseagreen4, key=1, label=newOptInClass, style=dashed];
m14_1631 -> m14_1634  [color=darkseagreen4, key=1, label=newOptInClass, style=dashed];
m14_1632 -> m14_1633  [key=0, style=solid];
m14_1632 -> m14_10  [key=2, style=dotted];
m14_1633 -> m14_1634  [key=0, style=solid];
m14_1633 -> m14_10  [key=2, style=dotted];
m14_1634 -> m14_1635  [key=0, style=solid];
m14_1634 -> m14_10  [key=2, style=dotted];
m14_1635 -> m14_1624  [color=blue, key=0, style=bold];
m14_1517 -> m14_1518  [key=0, style=solid];
m14_1517 -> m14_1525  [key=2, style=dotted];
m14_1517 -> m14_1105  [key=2, style=dotted];
m14_1517 -> m14_1519  [color=darkseagreen4, key=1, label=entry, style=dashed];
m14_1517 -> m14_1520  [color=darkseagreen4, key=1, label=entry, style=dashed];
m14_1516 -> m14_1517  [key=0, style=solid];
m14_1518 -> m14_1519  [key=0, style=solid];
m14_1518 -> m14_9  [key=2, style=dotted];
m14_1518 -> m14_1521  [color=darkseagreen4, key=1, label=defaultJson, style=dashed];
m14_1519 -> m14_1520  [key=0, style=solid];
m14_1519 -> m14_1152  [key=2, style=dotted];
m14_1519 -> m14_1299  [key=2, style=dotted];
m14_1519 -> m14_1522  [color=darkseagreen4, key=1, label=isoJson, style=dashed];
m14_1520 -> m14_1521  [key=0, style=solid];
m14_1520 -> m14_1347  [key=2, style=dotted];
m14_1520 -> m14_1299  [key=2, style=dotted];
m14_1520 -> m14_1523  [color=darkseagreen4, key=1, label=javascriptJson, style=dashed];
m14_1521 -> m14_1522  [key=0, style=solid];
m14_1521 -> m14_10  [key=2, style=dotted];
m14_1522 -> m14_1523  [key=0, style=solid];
m14_1522 -> m14_10  [key=2, style=dotted];
m14_1523 -> m14_1524  [key=0, style=solid];
m14_1523 -> m14_10  [key=2, style=dotted];
m14_1524 -> m14_1516  [color=blue, key=0, style=bold];
m14_980 -> m14_981  [key=0, style=solid];
m14_981 -> m14_982  [key=0, style=solid];
m14_981 -> m14_993  [key=2, style=dotted];
m14_981 -> m14_983  [color=darkseagreen4, key=1, label=executorObject, style=dashed];
m14_981 -> m14_984  [color=darkseagreen4, key=1, label=executorObject, style=dashed];
m14_981 -> m14_985  [color=darkseagreen4, key=1, label=executorObject, style=dashed];
m14_981 -> m14_987  [color=darkseagreen4, key=1, label=executorObject, style=dashed];
m14_982 -> m14_983  [key=0, style=solid];
m14_983 -> m14_984  [key=0, style=solid];
m14_984 -> m14_985  [key=0, style=solid];
m14_985 -> m14_986  [key=0, style=solid];
m14_985 -> m14_9  [key=2, style=dotted];
m14_987 -> m14_988  [key=0, style=solid];
m14_987 -> m14_994  [key=2, style=dotted];
m14_986 -> m14_987  [key=0, style=solid];
m14_986 -> m14_939  [key=2, style=dotted];
m14_986 -> m14_988  [color=darkseagreen4, key=1, label=executorObject2, style=dashed];
m14_986 -> m14_989  [color=darkseagreen4, key=1, label=executorObject2, style=dashed];
m14_986 -> m14_990  [color=darkseagreen4, key=1, label=executorObject2, style=dashed];
m14_986 -> m14_991  [color=darkseagreen4, key=1, label=executorObject2, style=dashed];
m14_988 -> m14_989  [key=0, style=solid];
m14_988 -> m14_10  [key=2, style=dotted];
m14_989 -> m14_990  [key=0, style=solid];
m14_989 -> m14_10  [key=2, style=dotted];
m14_990 -> m14_991  [key=0, style=solid];
m14_990 -> m14_995  [key=2, style=dotted];
m14_991 -> m14_992  [key=0, style=solid];
m14_991 -> m14_10  [key=2, style=dotted];
m14_992 -> m14_980  [color=blue, key=0, style=bold];
m14_157 -> m14_158  [key=0, style=solid];
m14_158 -> m14_159  [key=0, style=solid];
m14_158 -> m14_88  [key=2, style=dotted];
m14_158 -> m14_160  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_159 -> m14_157  [color=blue, key=0, style=bold];
m14_793 -> m14_794  [key=0, style=solid];
m14_794 -> m14_795  [key=0, style=solid];
m14_794 -> m14_789  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_795 -> m14_796  [key=0, style=solid];
m14_795 -> m14_11  [key=2, style=dotted];
m14_796 -> m14_797  [key=0, style=solid];
m14_796 -> m14_10  [key=2, style=dotted];
m14_797 -> m14_793  [color=blue, key=0, style=bold];
m14_3068 -> m14_3069  [color=red, key=0, style=solid];
m14_3068 -> m14_3071  [color=red, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m14_3069 -> m14_3070  [color=red, key=0, style=solid];
m14_3071 -> m14_3072  [color=red, key=0, style=solid];
m14_3071 -> m14_3073  [color=red, key=2, style=dotted];
m14_3071 -> m14_2229  [color=red, key=2, style=dotted];
m14_3071 -> m14_3074  [color=red, key=2, style=dotted];
m14_3071 -> m14_3075  [color=red, key=2, style=dotted];
m14_3070 -> m14_3071  [color=red, key=0, style=solid];
m14_3072 -> m14_3068  [color=blue, key=0, style=bold];
m14_2371 -> m14_2372  [key=0, style=solid];
m14_2372 -> m14_2373  [key=0, style=solid];
m14_2372 -> m14_2378  [key=2, style=dotted];
m14_2373 -> m14_2374  [key=0, style=solid];
m14_2373 -> m14_61  [key=2, style=dotted];
m14_2373 -> m14_2375  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_2374 -> m14_2375  [key=0, style=solid];
m14_2374 -> m14_62  [key=2, style=dotted];
m14_2375 -> m14_2376  [key=0, style=solid];
m14_2375 -> m14_11  [key=2, style=dotted];
m14_2376 -> m14_2377  [key=0, style=solid];
m14_2376 -> m14_10  [key=2, style=dotted];
m14_2376 -> m14_2376  [color=darkseagreen4, key=1, label=newStruct, style=dashed];
m14_2377 -> m14_2371  [color=blue, key=0, style=bold];
m14_3787 -> m14_3788  [color=red, key=0, style=solid];
m14_3788 -> m14_3789  [color=red, key=0, style=solid];
m14_3788 -> m14_3750  [color=red, key=2, style=dotted];
m14_3789 -> m14_3787  [color=blue, key=0, style=bold];
m14_127 -> m14_128  [key=0, style=solid];
m14_128 -> m14_129  [key=0, style=solid];
m14_128 -> m14_11  [key=2, style=dotted];
m14_128 -> m14_130  [color=darkseagreen4, key=1, label=l, style=dashed];
m14_128 -> m14_131  [color=darkseagreen4, key=1, label=l, style=dashed];
m14_128 -> m14_132  [color=darkseagreen4, key=1, label=l, style=dashed];
m14_128 -> m14_133  [color=darkseagreen4, key=1, label=l, style=dashed];
m14_128 -> m14_134  [color=darkseagreen4, key=1, label=l, style=dashed];
m14_128 -> m14_135  [color=darkseagreen4, key=1, label=l, style=dashed];
m14_128 -> m14_136  [color=darkseagreen4, key=1, label=l, style=dashed];
m14_128 -> m14_137  [color=darkseagreen4, key=1, label=l, style=dashed];
m14_128 -> m14_138  [color=darkseagreen4, key=1, label=l, style=dashed];
m14_128 -> m14_139  [color=darkseagreen4, key=1, label=l, style=dashed];
m14_128 -> m14_140  [color=darkseagreen4, key=1, label=l, style=dashed];
m14_128 -> m14_141  [color=darkseagreen4, key=1, label=l, style=dashed];
m14_128 -> m14_142  [color=darkseagreen4, key=1, label=l, style=dashed];
m14_128 -> m14_143  [color=darkseagreen4, key=1, label=l, style=dashed];
m14_128 -> m14_144  [color=darkseagreen4, key=1, label=l, style=dashed];
m14_129 -> m14_130  [key=0, style=solid];
m14_129 -> m14_112  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m14_130 -> m14_131  [key=0, style=solid];
m14_130 -> m14_10  [key=2, style=dotted];
m14_130 -> m14_130  [color=darkseagreen4, key=1, label=i, style=dashed];
m14_131 -> m14_132  [key=0, style=solid];
m14_131 -> m14_10  [key=2, style=dotted];
m14_131 -> m14_131  [color=darkseagreen4, key=1, label=i, style=dashed];
m14_132 -> m14_133  [key=0, style=solid];
m14_132 -> m14_10  [key=2, style=dotted];
m14_132 -> m14_132  [color=darkseagreen4, key=1, label=i, style=dashed];
m14_133 -> m14_134  [key=0, style=solid];
m14_133 -> m14_10  [key=2, style=dotted];
m14_133 -> m14_133  [color=darkseagreen4, key=1, label=i, style=dashed];
m14_134 -> m14_135  [key=0, style=solid];
m14_134 -> m14_10  [key=2, style=dotted];
m14_134 -> m14_134  [color=darkseagreen4, key=1, label=i, style=dashed];
m14_135 -> m14_136  [key=0, style=solid];
m14_135 -> m14_10  [key=2, style=dotted];
m14_135 -> m14_135  [color=darkseagreen4, key=1, label=i, style=dashed];
m14_136 -> m14_137  [key=0, style=solid];
m14_136 -> m14_10  [key=2, style=dotted];
m14_136 -> m14_136  [color=darkseagreen4, key=1, label=i, style=dashed];
m14_137 -> m14_138  [key=0, style=solid];
m14_137 -> m14_10  [key=2, style=dotted];
m14_137 -> m14_137  [color=darkseagreen4, key=1, label=i, style=dashed];
m14_138 -> m14_139  [key=0, style=solid];
m14_138 -> m14_10  [key=2, style=dotted];
m14_138 -> m14_138  [color=darkseagreen4, key=1, label=i, style=dashed];
m14_139 -> m14_140  [key=0, style=solid];
m14_139 -> m14_10  [key=2, style=dotted];
m14_139 -> m14_139  [color=darkseagreen4, key=1, label=i, style=dashed];
m14_140 -> m14_141  [key=0, style=solid];
m14_140 -> m14_10  [key=2, style=dotted];
m14_140 -> m14_140  [color=darkseagreen4, key=1, label=i, style=dashed];
m14_141 -> m14_142  [key=0, style=solid];
m14_141 -> m14_10  [key=2, style=dotted];
m14_141 -> m14_141  [color=darkseagreen4, key=1, label=i, style=dashed];
m14_142 -> m14_143  [key=0, style=solid];
m14_142 -> m14_10  [key=2, style=dotted];
m14_142 -> m14_142  [color=darkseagreen4, key=1, label=i, style=dashed];
m14_143 -> m14_144  [key=0, style=solid];
m14_143 -> m14_10  [key=2, style=dotted];
m14_143 -> m14_143  [color=darkseagreen4, key=1, label=i, style=dashed];
m14_144 -> m14_145  [key=0, style=solid];
m14_144 -> m14_10  [key=2, style=dotted];
m14_144 -> m14_144  [color=darkseagreen4, key=1, label=i, style=dashed];
m14_145 -> m14_127  [color=blue, key=0, style=bold];
m14_1549 -> m14_1550  [key=0, style=solid];
m14_1550 -> m14_1551  [key=0, style=solid];
m14_1550 -> m14_1554  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_1550 -> m14_1550  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_1551 -> m14_1552  [key=0, style=solid];
m14_1551 -> m14_196  [key=2, style=dotted];
m14_1551 -> m14_302  [key=2, style=dotted];
m14_1551 -> m14_1553  [color=darkseagreen4, key=1, label=c, style=dashed];
m14_1554 -> m14_1555  [key=0, style=solid];
m14_1554 -> m14_196  [key=2, style=dotted];
m14_1554 -> m14_302  [key=2, style=dotted];
m14_1554 -> m14_1556  [color=darkseagreen4, key=1, label=c, style=dashed];
m14_1552 -> m14_1553  [key=0, style=solid];
m14_1552 -> m14_10  [key=2, style=dotted];
m14_1553 -> m14_1554  [key=0, style=solid];
m14_1553 -> m14_10  [key=2, style=dotted];
m14_1555 -> m14_1556  [key=0, style=solid];
m14_1555 -> m14_10  [key=2, style=dotted];
m14_1556 -> m14_1557  [key=0, style=solid];
m14_1556 -> m14_10  [key=2, style=dotted];
m14_1557 -> m14_1549  [color=blue, key=0, style=bold];
m14_2571 -> m14_2572  [key=0, style=solid];
m14_2572 -> m14_2573  [key=0, style=solid];
m14_2572 -> m14_939  [key=2, style=dotted];
m14_2573 -> m14_2574  [key=0, style=solid];
m14_2573 -> m14_173  [key=2, style=dotted];
m14_2574 -> m14_2571  [color=blue, key=0, style=bold];
m14_3256 -> m14_3257  [key=0, style=solid];
m14_3257 -> m14_3258  [key=0, style=solid];
m14_3257 -> m14_3260  [key=2, style=dotted];
m14_3257 -> m14_61  [key=2, style=dotted];
m14_3258 -> m14_3259  [key=0, style=solid];
m14_3258 -> m14_10  [key=2, style=dotted];
m14_3259 -> m14_3256  [color=blue, key=0, style=bold];
m14_2825 -> m14_2826  [key=0, style=solid];
m14_2826 -> m14_2827  [key=0, style=solid];
m14_2826 -> m14_300  [key=2, style=dotted];
m14_2826 -> m14_2829  [color=darkseagreen4, key=1, label=d1, style=dashed];
m14_2826 -> m14_2830  [color=darkseagreen4, key=1, label=d1, style=dashed];
m14_2827 -> m14_2828  [key=0, style=solid];
m14_2827 -> m14_9  [key=2, style=dotted];
m14_2829 -> m14_2830  [key=0, style=solid];
m14_2829 -> m14_10  [key=2, style=dotted];
m14_2830 -> m14_2831  [key=0, style=solid];
m14_2830 -> m14_10  [key=2, style=dotted];
m14_2828 -> m14_2829  [key=0, style=solid];
m14_2828 -> m14_11  [key=2, style=dotted];
m14_2828 -> m14_2830  [color=darkseagreen4, key=1, label=d2, style=dashed];
m14_2831 -> m14_2825  [color=blue, key=0, style=bold];
m14_3499 -> m14_3500  [color=red, key=0, style=solid];
m14_3500 -> m14_3501  [color=red, key=0, style=solid];
m14_3500 -> m14_88  [color=red, key=2, style=dotted];
m14_3500 -> m14_3502  [color=red, key=1, label="lambda expression", style=dashed];
m14_3501 -> m14_3499  [color=blue, key=0, style=bold];
m14_3397 -> m14_3398  [key=0, style=solid];
m14_3398 -> m14_3399  [key=0, style=solid];
m14_3398 -> m14_3398  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_3399 -> m14_3400  [key=0, style=solid];
m14_3399 -> m14_11  [key=2, style=dotted];
m14_3400 -> m14_3401  [key=0, style=solid];
m14_3401 -> m14_3402  [key=0, style=solid];
m14_3401 -> m14_10  [key=2, style=dotted];
m14_3402 -> m14_3397  [color=blue, key=0, style=bold];
m14_786 -> m14_787  [key=0, style=solid];
m14_787 -> m14_788  [key=0, style=solid];
m14_787 -> m14_792  [key=2, style=dotted];
m14_788 -> m14_789  [key=0, style=solid];
m14_788 -> m14_9  [key=2, style=dotted];
m14_788 -> m14_790  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_789 -> m14_790  [key=0, style=solid];
m14_789 -> m14_789  [color=darkorchid, key=3, label="Local variable string expectedJson", style=bold];
m14_790 -> m14_791  [key=0, style=solid];
m14_790 -> m14_10  [key=2, style=dotted];
m14_791 -> m14_786  [color=blue, key=0, style=bold];
m14_2394 -> m14_2395  [key=0, style=solid];
m14_2395 -> m14_2396  [key=0, style=solid];
m14_2395 -> m14_2388  [key=2, style=dotted];
m14_2395 -> m14_2389  [key=2, style=dotted];
m14_2395 -> m14_957  [key=2, style=dotted];
m14_2395 -> m14_1113  [key=2, style=dotted];
m14_2395 -> m14_196  [key=2, style=dotted];
m14_2395 -> m14_212  [key=2, style=dotted];
m14_2395 -> m14_2397  [color=darkseagreen4, key=1, label=serializeObject, style=dashed];
m14_2396 -> m14_2397  [key=0, style=solid];
m14_2396 -> m14_10  [key=2, style=dotted];
m14_2397 -> m14_2398  [key=0, style=solid];
m14_2397 -> m14_43  [key=2, style=dotted];
m14_2397 -> m14_403  [key=2, style=dotted];
m14_2397 -> m14_2400  [color=darkseagreen4, key=1, label=reader, style=dashed];
m14_2398 -> m14_2399  [key=0, style=solid];
m14_2398 -> m14_46  [key=2, style=dotted];
m14_2398 -> m14_2400  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_2400 -> m14_2401  [key=0, style=solid];
m14_2400 -> m14_47  [key=2, style=dotted];
m14_2400 -> m14_2402  [color=darkseagreen4, key=1, label=deserializeObject, style=dashed];
m14_2399 -> m14_2400  [key=0, style=solid];
m14_2401 -> m14_2402  [key=0, style=solid];
m14_2401 -> m14_1113  [key=2, style=dotted];
m14_2401 -> m14_10  [key=2, style=dotted];
m14_2402 -> m14_2403  [key=0, style=solid];
m14_2402 -> m14_957  [key=2, style=dotted];
m14_2402 -> m14_10  [key=2, style=dotted];
m14_2403 -> m14_2394  [color=blue, key=0, style=bold];
m14_1395 -> m14_1396  [key=0, style=solid];
m14_1396 -> m14_1397  [key=0, style=solid];
m14_1396 -> m14_1396  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_1397 -> m14_1398  [key=0, style=solid];
m14_1397 -> m14_11  [key=2, style=dotted];
m14_1397 -> m14_1399  [color=darkseagreen4, key=1, label=personRaw, style=dashed];
m14_1397 -> m14_1400  [color=darkseagreen4, key=1, label=personRaw, style=dashed];
m14_1398 -> m14_1399  [key=0, style=solid];
m14_1398 -> m14_10  [key=2, style=dotted];
m14_1399 -> m14_1400  [key=0, style=solid];
m14_1399 -> m14_1402  [key=2, style=dotted];
m14_1399 -> m14_10  [key=2, style=dotted];
m14_1400 -> m14_1401  [key=0, style=solid];
m14_1400 -> m14_10  [key=2, style=dotted];
m14_1401 -> m14_1395  [color=blue, key=0, style=bold];
m14_2321 -> m14_2322  [key=0, style=solid];
m14_2322 -> m14_2323  [key=0, style=solid];
m14_2322 -> m14_61  [key=2, style=dotted];
m14_2323 -> m14_2324  [key=0, style=solid];
m14_2323 -> m14_62  [key=2, style=dotted];
m14_2324 -> m14_2321  [color=blue, key=0, style=bold];
m14_3999 -> m14_4000  [color=red, key=0, style=solid];
m14_4000 -> m14_4001  [color=red, key=0, style=solid];
m14_4000 -> m14_3988  [color=red, key=2, style=dotted];
m14_4001 -> m14_3999  [color=blue, key=0, style=bold];
m14_1274 -> m14_1275  [key=0, style=solid];
m14_1275 -> m14_1276  [key=0, style=solid];
m14_1275 -> m14_1282  [key=2, style=dotted];
m14_1276 -> m14_1277  [key=0, style=solid];
m14_1276 -> m14_9  [key=2, style=dotted];
m14_1277 -> m14_1278  [key=0, style=solid];
m14_1277 -> m14_11  [key=2, style=dotted];
m14_1277 -> m14_1279  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m14_1277 -> m14_1280  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m14_1278 -> m14_1279  [key=0, style=solid];
m14_1278 -> m14_10  [key=2, style=dotted];
m14_1279 -> m14_1280  [key=0, style=solid];
m14_1279 -> m14_10  [key=2, style=dotted];
m14_1280 -> m14_1281  [key=0, style=solid];
m14_1280 -> m14_10  [key=2, style=dotted];
m14_1281 -> m14_1274  [color=blue, key=0, style=bold];
m14_110 -> m14_111  [key=0, style=solid];
m14_111 -> m14_112  [key=0, style=solid];
m14_111 -> m14_11  [key=2, style=dotted];
m14_111 -> m14_113  [color=darkseagreen4, key=1, label=l, style=dashed];
m14_111 -> m14_114  [color=darkseagreen4, key=1, label=l, style=dashed];
m14_111 -> m14_115  [color=darkseagreen4, key=1, label=l, style=dashed];
m14_111 -> m14_116  [color=darkseagreen4, key=1, label=l, style=dashed];
m14_111 -> m14_117  [color=darkseagreen4, key=1, label=l, style=dashed];
m14_111 -> m14_118  [color=darkseagreen4, key=1, label=l, style=dashed];
m14_111 -> m14_119  [color=darkseagreen4, key=1, label=l, style=dashed];
m14_111 -> m14_120  [color=darkseagreen4, key=1, label=l, style=dashed];
m14_111 -> m14_121  [color=darkseagreen4, key=1, label=l, style=dashed];
m14_111 -> m14_122  [color=darkseagreen4, key=1, label=l, style=dashed];
m14_111 -> m14_123  [color=darkseagreen4, key=1, label=l, style=dashed];
m14_111 -> m14_124  [color=darkseagreen4, key=1, label=l, style=dashed];
m14_111 -> m14_125  [color=darkseagreen4, key=1, label=l, style=dashed];
m14_112 -> m14_113  [key=0, style=solid];
m14_112 -> m14_112  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m14_113 -> m14_114  [key=0, style=solid];
m14_113 -> m14_10  [key=2, style=dotted];
m14_113 -> m14_113  [color=darkseagreen4, key=1, label=i, style=dashed];
m14_114 -> m14_115  [key=0, style=solid];
m14_114 -> m14_10  [key=2, style=dotted];
m14_114 -> m14_114  [color=darkseagreen4, key=1, label=i, style=dashed];
m14_115 -> m14_116  [key=0, style=solid];
m14_115 -> m14_10  [key=2, style=dotted];
m14_115 -> m14_115  [color=darkseagreen4, key=1, label=i, style=dashed];
m14_116 -> m14_117  [key=0, style=solid];
m14_116 -> m14_10  [key=2, style=dotted];
m14_116 -> m14_116  [color=darkseagreen4, key=1, label=i, style=dashed];
m14_117 -> m14_118  [key=0, style=solid];
m14_117 -> m14_10  [key=2, style=dotted];
m14_117 -> m14_117  [color=darkseagreen4, key=1, label=i, style=dashed];
m14_118 -> m14_119  [key=0, style=solid];
m14_118 -> m14_10  [key=2, style=dotted];
m14_118 -> m14_118  [color=darkseagreen4, key=1, label=i, style=dashed];
m14_119 -> m14_120  [key=0, style=solid];
m14_119 -> m14_10  [key=2, style=dotted];
m14_119 -> m14_119  [color=darkseagreen4, key=1, label=i, style=dashed];
m14_120 -> m14_121  [key=0, style=solid];
m14_120 -> m14_10  [key=2, style=dotted];
m14_120 -> m14_120  [color=darkseagreen4, key=1, label=i, style=dashed];
m14_121 -> m14_122  [key=0, style=solid];
m14_121 -> m14_10  [key=2, style=dotted];
m14_121 -> m14_121  [color=darkseagreen4, key=1, label=i, style=dashed];
m14_122 -> m14_123  [key=0, style=solid];
m14_122 -> m14_10  [key=2, style=dotted];
m14_122 -> m14_122  [color=darkseagreen4, key=1, label=i, style=dashed];
m14_123 -> m14_124  [key=0, style=solid];
m14_123 -> m14_10  [key=2, style=dotted];
m14_123 -> m14_123  [color=darkseagreen4, key=1, label=i, style=dashed];
m14_124 -> m14_125  [key=0, style=solid];
m14_124 -> m14_10  [key=2, style=dotted];
m14_124 -> m14_124  [color=darkseagreen4, key=1, label=i, style=dashed];
m14_125 -> m14_126  [key=0, style=solid];
m14_125 -> m14_10  [key=2, style=dotted];
m14_125 -> m14_125  [color=darkseagreen4, key=1, label=i, style=dashed];
m14_126 -> m14_110  [color=blue, key=0, style=bold];
m14_464 -> m14_465  [key=0, style=solid];
m14_465 -> m14_466  [key=0, style=solid];
m14_465 -> m14_469  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_465 -> m14_465  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_466 -> m14_467  [key=0, style=solid];
m14_466 -> m14_88  [key=2, style=dotted];
m14_466 -> m14_468  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_467 -> m14_464  [color=blue, key=0, style=bold];
m14_2354 -> m14_2355  [key=0, style=solid];
m14_2355 -> m14_2356  [key=0, style=solid];
m14_2355 -> m14_2364  [color=darkseagreen4, key=1, label=classRef, style=dashed];
m14_2356 -> m14_2357  [key=0, style=solid];
m14_2356 -> m14_2366  [key=2, style=dotted];
m14_2356 -> m14_2367  [key=2, style=dotted];
m14_2356 -> m14_2358  [color=darkseagreen4, key=1, label=s1, style=dashed];
m14_2364 -> m14_2365  [key=0, style=solid];
m14_2364 -> m14_88  [key=2, style=dotted];
m14_2364 -> m14_2368  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_2357 -> m14_2358  [key=0, style=solid];
m14_2357 -> m14_61  [key=2, style=dotted];
m14_2357 -> m14_2359  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_2357 -> m14_2364  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_2357 -> m14_2369  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_2358 -> m14_2359  [key=0, style=solid];
m14_2358 -> m14_2364  [key=0, style=solid];
m14_2359 -> m14_2360  [key=0, style=solid];
m14_2359 -> m14_11  [key=2, style=dotted];
m14_2359 -> m14_2361  [color=darkseagreen4, key=1, label=d, style=dashed];
m14_2359 -> m14_2362  [color=darkseagreen4, key=1, label=d, style=dashed];
m14_2359 -> m14_2363  [color=darkseagreen4, key=1, label=d, style=dashed];
m14_2360 -> m14_2361  [key=0, style=solid];
m14_2360 -> m14_10  [key=2, style=dotted];
m14_2361 -> m14_2362  [key=0, style=solid];
m14_2361 -> m14_10  [key=2, style=dotted];
m14_2362 -> m14_2363  [key=0, style=solid];
m14_2362 -> m14_10  [key=2, style=dotted];
m14_2363 -> m14_2365  [key=0, style=solid];
m14_2363 -> m14_10  [key=2, style=dotted];
m14_2365 -> m14_2354  [color=blue, key=0, style=bold];
m14_2021 -> m14_2022  [key=0, style=solid];
m14_2022 -> m14_2023  [key=0, style=solid];
m14_2022 -> m14_2034  [key=2, style=dotted];
m14_2022 -> m14_2024  [color=darkseagreen4, key=1, label=c1, style=dashed];
m14_2022 -> m14_2025  [color=darkseagreen4, key=1, label=c1, style=dashed];
m14_2022 -> m14_2026  [color=darkseagreen4, key=1, label=c1, style=dashed];
m14_2023 -> m14_2024  [key=0, style=solid];
m14_2023 -> m14_2035  [key=2, style=dotted];
m14_2023 -> m14_2025  [color=darkseagreen4, key=1, label=c2, style=dashed];
m14_2024 -> m14_2025  [key=0, style=solid];
m14_2025 -> m14_2026  [key=0, style=solid];
m14_2026 -> m14_2027  [key=0, style=solid];
m14_2026 -> m14_196  [key=2, style=dotted];
m14_2026 -> m14_197  [key=2, style=dotted];
m14_2027 -> m14_2028  [key=0, style=solid];
m14_2027 -> m14_62  [key=2, style=dotted];
m14_2028 -> m14_2029  [key=0, style=solid];
m14_2028 -> m14_11  [key=2, style=dotted];
m14_2028 -> m14_2030  [color=darkseagreen4, key=1, label=newC1, style=dashed];
m14_2028 -> m14_2031  [color=darkseagreen4, key=1, label=newC1, style=dashed];
m14_2028 -> m14_2032  [color=darkseagreen4, key=1, label=newC1, style=dashed];
m14_2029 -> m14_2030  [key=0, style=solid];
m14_2029 -> m14_10  [key=2, style=dotted];
m14_2030 -> m14_2031  [key=0, style=solid];
m14_2030 -> m14_10  [key=2, style=dotted];
m14_2031 -> m14_2032  [key=0, style=solid];
m14_2031 -> m14_10  [key=2, style=dotted];
m14_2032 -> m14_2033  [key=0, style=solid];
m14_2032 -> m14_10  [key=2, style=dotted];
m14_2033 -> m14_2021  [color=blue, key=0, style=bold];
m14_1242 -> m14_1243  [key=0, style=solid];
m14_1243 -> m14_1244  [key=0, style=solid];
m14_1243 -> m14_1249  [key=2, style=dotted];
m14_1243 -> m14_1247  [color=darkseagreen4, key=1, label=guid, style=dashed];
m14_1244 -> m14_1245  [key=0, style=solid];
m14_1244 -> m14_1250  [key=2, style=dotted];
m14_1244 -> m14_9  [key=2, style=dotted];
m14_1244 -> m14_1246  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_1247 -> m14_1248  [key=0, style=solid];
m14_1247 -> m14_10  [key=2, style=dotted];
m14_1245 -> m14_1246  [key=0, style=solid];
m14_1245 -> m14_10  [key=2, style=dotted];
m14_1246 -> m14_1247  [key=0, style=solid];
m14_1246 -> m14_11  [key=2, style=dotted];
m14_1248 -> m14_1242  [color=blue, key=0, style=bold];
m14_3009 -> m14_3010  [key=0, style=solid];
m14_3010 -> m14_3011  [key=0, style=solid];
m14_3010 -> m14_88  [key=2, style=dotted];
m14_3010 -> m14_3012  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_3011 -> m14_3009  [color=blue, key=0, style=bold];
m14_12 -> m14_13  [key=0, style=solid];
m14_13 -> m14_14  [key=0, style=solid];
m14_13 -> m14_11  [key=2, style=dotted];
m14_14 -> m14_15  [key=0, style=solid];
m14_14 -> m14_10  [key=2, style=dotted];
m14_14 -> m14_14  [color=darkseagreen4, key=1, label=result, style=dashed];
m14_15 -> m14_16  [key=0, style=solid];
m14_15 -> m14_10  [key=2, style=dotted];
m14_15 -> m14_15  [color=darkseagreen4, key=1, label=result, style=dashed];
m14_16 -> m14_12  [color=blue, key=0, style=bold];
m14_1154 -> m14_1155  [key=0, style=solid];
m14_1155 -> m14_1156  [key=0, style=solid];
m14_1155 -> m14_1158  [key=2, style=dotted];
m14_1155 -> m14_9  [key=2, style=dotted];
m14_1156 -> m14_1157  [key=0, style=solid];
m14_1156 -> m14_10  [key=2, style=dotted];
m14_1157 -> m14_1154  [color=blue, key=0, style=bold];
m14_3343 -> m14_3344  [key=0, style=solid];
m14_3344 -> m14_3345  [key=0, style=solid];
m14_3344 -> m14_3347  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_3344 -> m14_3344  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_3345 -> m14_3346  [key=0, style=solid];
m14_3345 -> m14_46  [key=2, style=dotted];
m14_3345 -> m14_3350  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_3345 -> m14_3353  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_3347 -> m14_3348  [key=0, style=solid];
m14_3347 -> m14_43  [key=2, style=dotted];
m14_3347 -> m14_403  [key=2, style=dotted];
m14_3347 -> m14_3349  [color=darkseagreen4, key=1, label=reader, style=dashed];
m14_3347 -> m14_3350  [color=darkseagreen4, key=1, label=reader, style=dashed];
m14_3347 -> m14_3353  [color=darkseagreen4, key=1, label=reader, style=dashed];
m14_3346 -> m14_3347  [key=0, style=solid];
m14_3350 -> m14_3351  [key=0, style=solid];
m14_3350 -> m14_88  [key=2, style=dotted];
m14_3350 -> m14_3352  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_3348 -> m14_3349  [key=0, style=solid];
m14_3348 -> d10  [key=2, style=dotted];
m14_3349 -> m14_3350  [key=0, style=solid];
m14_3349 -> d10  [key=2, style=dotted];
m14_3351 -> m14_3343  [color=blue, key=0, style=bold];
m14_2599 -> m14_2600  [key=0, style=solid];
m14_2600 -> m14_2601  [key=0, style=solid];
m14_2600 -> m14_2604  [key=2, style=dotted];
m14_2601 -> m14_2602  [key=0, style=solid];
m14_2601 -> m14_61  [key=2, style=dotted];
m14_2602 -> m14_2603  [key=0, style=solid];
m14_2602 -> m14_62  [key=2, style=dotted];
m14_2603 -> m14_2599  [color=blue, key=0, style=bold];
m14_1208 -> m14_1209  [key=0, style=solid];
m14_1209 -> m14_1210  [key=0, style=solid];
m14_1209 -> m14_1218  [key=2, style=dotted];
m14_1209 -> m14_61  [key=2, style=dotted];
m14_1209 -> m14_1212  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_1209 -> m14_1213  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_1210 -> m14_1211  [key=0, style=solid];
m14_1210 -> m14_1160  [color=darkorchid, key=3, label="Local variable string expected", style=bold];
m14_1212 -> m14_1213  [key=0, style=solid];
m14_1212 -> m14_62  [key=2, style=dotted];
m14_1213 -> m14_1214  [key=0, style=solid];
m14_1213 -> m14_11  [key=2, style=dotted];
m14_1213 -> m14_1215  [color=darkseagreen4, key=1, label=c, style=dashed];
m14_1213 -> m14_1216  [color=darkseagreen4, key=1, label=c, style=dashed];
m14_1211 -> m14_1212  [key=0, style=solid];
m14_1214 -> m14_1215  [key=0, style=solid];
m14_1214 -> m14_10  [key=2, style=dotted];
m14_1215 -> m14_1216  [key=0, style=solid];
m14_1215 -> m14_10  [key=2, style=dotted];
m14_1216 -> m14_1217  [key=0, style=solid];
m14_1216 -> m14_10  [key=2, style=dotted];
m14_1217 -> m14_1208  [color=blue, key=0, style=bold];
m14_2342 -> m14_2343  [key=0, style=solid];
m14_2343 -> m14_2344  [key=0, style=solid];
m14_2343 -> m14_46  [key=2, style=dotted];
m14_2343 -> m14_2345  [color=darkseagreen4, key=1, label=serializer1, style=dashed];
m14_2343 -> m14_2348  [color=darkseagreen4, key=1, label=serializer1, style=dashed];
m14_2344 -> m14_2345  [key=0, style=solid];
m14_2344 -> m14_1152  [key=2, style=dotted];
m14_2344 -> m14_574  [key=2, style=dotted];
m14_2345 -> m14_2346  [key=0, style=solid];
m14_2348 -> m14_2349  [key=0, style=solid];
m14_2348 -> m14_2353  [key=2, style=dotted];
m14_2348 -> m14_2350  [color=darkseagreen4, key=1, label=z, style=dashed];
m14_2348 -> m14_2351  [color=darkseagreen4, key=1, label=z, style=dashed];
m14_2346 -> m14_2347  [key=0, style=solid];
m14_2346 -> m14_2346  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_2347 -> m14_2348  [key=0, style=solid];
m14_2347 -> m14_43  [key=2, style=dotted];
m14_2347 -> m14_403  [key=2, style=dotted];
m14_2349 -> m14_2350  [key=0, style=solid];
m14_2349 -> m14_10  [key=2, style=dotted];
m14_2350 -> m14_2351  [key=0, style=solid];
m14_2350 -> m14_10  [key=2, style=dotted];
m14_2351 -> m14_2352  [key=0, style=solid];
m14_2351 -> m14_10  [key=2, style=dotted];
m14_2352 -> m14_2342  [color=blue, key=0, style=bold];
m14_1679 -> m14_1680  [key=0, style=solid];
m14_1680 -> m14_1681  [key=0, style=solid];
m14_1680 -> m14_1680  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_1681 -> m14_1682  [key=0, style=solid];
m14_1681 -> m14_492  [key=2, style=dotted];
m14_1682 -> m14_1683  [key=0, style=solid];
m14_1682 -> m14_785  [key=2, style=dotted];
m14_1682 -> m14_11  [key=2, style=dotted];
m14_1682 -> m14_1684  [color=darkseagreen4, key=1, label=s, style=dashed];
m14_1682 -> m14_1685  [color=darkseagreen4, key=1, label=s, style=dashed];
m14_1682 -> m14_1686  [color=darkseagreen4, key=1, label=s, style=dashed];
m14_1683 -> m14_1684  [key=0, style=solid];
m14_1683 -> m14_812  [key=2, style=dotted];
m14_1684 -> m14_1685  [key=0, style=solid];
m14_1684 -> m14_10  [key=2, style=dotted];
m14_1685 -> m14_1686  [key=0, style=solid];
m14_1685 -> m14_10  [key=2, style=dotted];
m14_1686 -> m14_1687  [key=0, style=solid];
m14_1686 -> m14_10  [key=2, style=dotted];
m14_1687 -> m14_1679  [color=blue, key=0, style=bold];
m14_342 -> m14_343  [key=0, style=solid];
m14_343 -> m14_344  [key=0, style=solid];
m14_343 -> m14_353  [key=2, style=dotted];
m14_343 -> m14_345  [color=darkseagreen4, key=1, label=c, style=dashed];
m14_343 -> m14_346  [color=darkseagreen4, key=1, label=c, style=dashed];
m14_343 -> m14_347  [color=darkseagreen4, key=1, label=c, style=dashed];
m14_344 -> m14_345  [key=0, style=solid];
m14_345 -> m14_346  [key=0, style=solid];
m14_345 -> m14_341  [key=2, style=dotted];
m14_345 -> m14_354  [key=2, style=dotted];
m14_346 -> m14_347  [key=0, style=solid];
m14_347 -> m14_348  [key=0, style=solid];
m14_347 -> m14_61  [key=2, style=dotted];
m14_347 -> m14_349  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_348 -> m14_349  [key=0, style=solid];
m14_348 -> m14_62  [key=2, style=dotted];
m14_349 -> m14_350  [key=0, style=solid];
m14_349 -> m14_11  [key=2, style=dotted];
m14_349 -> m14_351  [color=darkseagreen4, key=1, label=c2, style=dashed];
m14_350 -> m14_351  [key=0, style=solid];
m14_350 -> m14_10  [key=2, style=dotted];
m14_351 -> m14_352  [key=0, style=solid];
m14_351 -> m14_10  [key=2, style=dotted];
m14_352 -> m14_342  [color=blue, key=0, style=bold];
m14_2807 -> m14_2808  [key=0, style=solid];
m14_2808 -> m14_2809  [key=0, style=solid];
m14_2809 -> m14_2810  [key=0, style=solid];
m14_2809 -> m14_2817  [key=2, style=dotted];
m14_2809 -> m14_2811  [color=darkseagreen4, key=1, label=testCulture, style=dashed];
m14_2810 -> m14_2811  [key=0, style=solid];
m14_2811 -> m14_2812  [key=0, style=solid];
m14_2812 -> m14_2813  [key=0, style=solid];
m14_2812 -> m14_2812  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_2813 -> m14_2814  [key=0, style=solid];
m14_2813 -> m14_11  [key=2, style=dotted];
m14_2813 -> m14_2815  [color=darkseagreen4, key=1, label=c, style=dashed];
m14_2814 -> m14_2815  [key=0, style=solid];
m14_2814 -> m14_10  [key=2, style=dotted];
m14_2815 -> m14_2816  [key=0, style=solid];
m14_2815 -> m14_10  [key=2, style=dotted];
m14_2816 -> m14_2807  [color=blue, key=0, style=bold];
m14_1526 -> m14_1527  [key=0, style=solid];
m14_1527 -> m14_1528  [key=0, style=solid];
m14_1527 -> m14_1539  [key=2, style=dotted];
m14_1527 -> m14_1529  [color=darkseagreen4, key=1, label=o, style=dashed];
m14_1527 -> m14_1530  [color=darkseagreen4, key=1, label=o, style=dashed];
m14_1527 -> m14_1531  [color=darkseagreen4, key=1, label=o, style=dashed];
m14_1527 -> m14_1535  [color=darkseagreen4, key=1, label=o, style=dashed];
m14_1527 -> m14_1536  [color=darkseagreen4, key=1, label=o, style=dashed];
m14_1527 -> m14_1537  [color=darkseagreen4, key=1, label=o, style=dashed];
m14_1528 -> m14_1529  [key=0, style=solid];
m14_1528 -> m14_210  [key=2, style=dotted];
m14_1529 -> m14_1530  [key=0, style=solid];
m14_1529 -> m14_300  [key=2, style=dotted];
m14_1530 -> m14_1531  [key=0, style=solid];
m14_1530 -> m14_300  [key=2, style=dotted];
m14_1531 -> m14_1532  [key=0, style=solid];
m14_1531 -> m14_61  [key=2, style=dotted];
m14_1531 -> m14_1533  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_1535 -> m14_1536  [key=0, style=solid];
m14_1535 -> m14_71  [key=2, style=dotted];
m14_1535 -> m14_10  [key=2, style=dotted];
m14_1536 -> m14_1537  [key=0, style=solid];
m14_1536 -> m14_71  [key=2, style=dotted];
m14_1536 -> m14_10  [key=2, style=dotted];
m14_1537 -> m14_1538  [key=0, style=solid];
m14_1537 -> m14_71  [key=2, style=dotted];
m14_1537 -> m14_10  [key=2, style=dotted];
m14_1532 -> m14_1533  [key=0, style=solid];
m14_1532 -> m14_10  [key=2, style=dotted];
m14_1533 -> m14_1534  [key=0, style=solid];
m14_1533 -> m14_11  [key=2, style=dotted];
m14_1533 -> m14_1535  [color=darkseagreen4, key=1, label=deserializedObject, style=dashed];
m14_1533 -> m14_1536  [color=darkseagreen4, key=1, label=deserializedObject, style=dashed];
m14_1533 -> m14_1537  [color=darkseagreen4, key=1, label=deserializedObject, style=dashed];
m14_1534 -> m14_1535  [key=0, style=solid];
m14_1534 -> m14_812  [key=2, style=dotted];
m14_1538 -> m14_1526  [color=blue, key=0, style=bold];
m14_2746 -> m14_2747  [key=0, style=solid];
m14_2747 -> m14_2748  [key=0, style=solid];
m14_2747 -> m14_2747  [color=darkorchid, key=3, label="Local variable string input", style=bold];
m14_2748 -> m14_2749  [key=0, style=solid];
m14_2748 -> m14_1695  [key=2, style=dotted];
m14_2748 -> m14_2751  [color=darkseagreen4, key=1, label=uri, style=dashed];
m14_2749 -> m14_2750  [key=0, style=solid];
m14_2749 -> m14_9  [key=2, style=dotted];
m14_2751 -> m14_2752  [key=0, style=solid];
m14_2751 -> m14_10  [key=2, style=dotted];
m14_2750 -> m14_2751  [key=0, style=solid];
m14_2750 -> m14_11  [key=2, style=dotted];
m14_2752 -> m14_2746  [color=blue, key=0, style=bold];
m14_3775 -> m14_3776  [color=red, key=0, style=solid];
m14_3776 -> m14_3777  [color=red, key=0, style=solid];
m14_3777 -> m14_3775  [color=blue, key=0, style=bold];
m14_1613 -> m14_1614  [key=0, style=solid];
m14_1614 -> m14_1615  [key=0, style=solid];
m14_1614 -> m14_1617  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_1614 -> m14_1614  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_1615 -> m14_1616  [key=0, style=solid];
m14_1615 -> m14_11  [key=2, style=dotted];
m14_1617 -> m14_1618  [key=0, style=solid];
m14_1617 -> m14_11  [key=2, style=dotted];
m14_1617 -> m14_1619  [color=darkseagreen4, key=1, label=n, style=dashed];
m14_1617 -> m14_1620  [color=darkseagreen4, key=1, label=n, style=dashed];
m14_1617 -> m14_1621  [color=darkseagreen4, key=1, label=n, style=dashed];
m14_1617 -> m14_1622  [color=darkseagreen4, key=1, label=n, style=dashed];
m14_1616 -> m14_1617  [key=0, style=solid];
m14_1616 -> m14_10  [key=2, style=dotted];
m14_1618 -> m14_1619  [key=0, style=solid];
m14_1618 -> m14_1249  [key=2, style=dotted];
m14_1618 -> m14_10  [key=2, style=dotted];
m14_1619 -> m14_1620  [key=0, style=solid];
m14_1619 -> m14_1249  [key=2, style=dotted];
m14_1619 -> m14_10  [key=2, style=dotted];
m14_1620 -> m14_1621  [key=0, style=solid];
m14_1620 -> m14_10  [key=2, style=dotted];
m14_1621 -> m14_1622  [key=0, style=solid];
m14_1621 -> m14_10  [key=2, style=dotted];
m14_1622 -> m14_1623  [key=0, style=solid];
m14_1622 -> m14_10  [key=2, style=dotted];
m14_1623 -> m14_1613  [color=blue, key=0, style=bold];
m14_4016 -> m14_4017  [key=0, style=solid];
m14_4017 -> m14_4018  [key=0, style=solid];
m14_4017 -> m14_4021  [color=darkseagreen4, key=1, label=s, style=dashed];
m14_4017 -> m14_4017  [color=darkorchid, key=3, label="Local variable string s", style=bold];
m14_4018 -> m14_4019  [key=0, style=solid];
m14_4018 -> m14_88  [key=2, style=dotted];
m14_4018 -> m14_4020  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_4019 -> m14_4016  [color=blue, key=0, style=bold];
m14_2493 -> m14_2494  [key=0, style=solid];
m14_2494 -> m14_2495  [key=0, style=solid];
m14_2494 -> m14_2505  [key=2, style=dotted];
m14_2494 -> m14_2506  [key=2, style=dotted];
m14_2494 -> m14_2496  [color=darkseagreen4, key=1, label=nullableStructPropertyClass, style=dashed];
m14_2495 -> m14_2496  [key=0, style=solid];
m14_2495 -> m14_2505  [key=2, style=dotted];
m14_2495 -> m14_2506  [key=2, style=dotted];
m14_2495 -> m14_2500  [color=darkseagreen4, key=1, label=barWithNull, style=dashed];
m14_2496 -> m14_2497  [key=0, style=solid];
m14_2496 -> m14_9  [key=2, style=dotted];
m14_2500 -> m14_2501  [key=0, style=solid];
m14_2500 -> m14_9  [key=2, style=dotted];
m14_2497 -> m14_2498  [key=0, style=solid];
m14_2497 -> m14_2507  [key=2, style=dotted];
m14_2497 -> m14_2499  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m14_2498 -> m14_2499  [key=0, style=solid];
m14_2498 -> m14_10  [key=2, style=dotted];
m14_2499 -> m14_2500  [key=0, style=solid];
m14_2499 -> m14_10  [key=2, style=dotted];
m14_2501 -> m14_2502  [key=0, style=solid];
m14_2501 -> m14_2507  [key=2, style=dotted];
m14_2501 -> m14_2503  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m14_2502 -> m14_2503  [key=0, style=solid];
m14_2502 -> m14_10  [key=2, style=dotted];
m14_2503 -> m14_2504  [key=0, style=solid];
m14_2503 -> m14_10  [key=2, style=dotted];
m14_2504 -> m14_2493  [color=blue, key=0, style=bold];
m14_3610 -> m14_3611  [key=0, style=solid];
m14_3611 -> m14_3612  [key=0, style=solid];
m14_3611 -> m14_210  [key=2, style=dotted];
m14_3611 -> m14_3617  [key=2, style=dotted];
m14_3611 -> m14_9  [key=2, style=dotted];
m14_3611 -> m14_3613  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_3612 -> m14_3613  [key=0, style=solid];
m14_3612 -> m14_10  [key=2, style=dotted];
m14_3613 -> m14_3614  [key=0, style=solid];
m14_3613 -> m14_11  [key=2, style=dotted];
m14_3613 -> m14_3615  [color=darkseagreen4, key=1, label=d, style=dashed];
m14_3614 -> m14_3615  [key=0, style=solid];
m14_3614 -> m14_3617  [key=2, style=dotted];
m14_3614 -> m14_3618  [key=2, style=dotted];
m14_3614 -> m14_10  [key=2, style=dotted];
m14_3615 -> m14_3616  [key=0, style=solid];
m14_3615 -> m14_3617  [key=2, style=dotted];
m14_3615 -> m14_3618  [key=2, style=dotted];
m14_3615 -> m14_10  [key=2, style=dotted];
m14_3616 -> m14_3610  [color=blue, key=0, style=bold];
m14_1417 -> m14_1418  [key=0, style=solid];
m14_1418 -> m14_1419  [key=0, style=solid];
m14_1418 -> m14_1418  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_1419 -> m14_1420  [key=0, style=solid];
m14_1419 -> m14_11  [key=2, style=dotted];
m14_1420 -> m14_1421  [key=0, style=solid];
m14_1420 -> m14_10  [key=2, style=dotted];
m14_1421 -> m14_1417  [color=blue, key=0, style=bold];
m14_3293 -> m14_3294  [key=0, style=solid];
m14_3294 -> m14_3295  [key=0, style=solid];
m14_3294 -> m14_3297  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_3294 -> m14_3294  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_3295 -> m14_3296  [key=0, style=solid];
m14_3295 -> m14_196  [key=2, style=dotted];
m14_3297 -> m14_3298  [key=0, style=solid];
m14_3297 -> m14_43  [key=2, style=dotted];
m14_3297 -> m14_403  [key=2, style=dotted];
m14_3297 -> m14_47  [key=2, style=dotted];
m14_3297 -> m14_3299  [color=darkseagreen4, key=1, label=o, style=dashed];
m14_3296 -> m14_3297  [key=0, style=solid];
m14_3296 -> m14_848  [key=2, style=dotted];
m14_3298 -> m14_3299  [key=0, style=solid];
m14_3298 -> m14_812  [key=2, style=dotted];
m14_3299 -> m14_3300  [key=0, style=solid];
m14_3299 -> m14_10  [key=2, style=dotted];
m14_3300 -> m14_3293  [color=blue, key=0, style=bold];
m14_3202 -> m14_3203  [key=0, style=solid];
m14_3203 -> m14_3204  [key=0, style=solid];
m14_3203 -> m14_210  [key=2, style=dotted];
m14_3203 -> m14_1105  [key=2, style=dotted];
m14_3204 -> m14_3205  [key=0, style=solid];
m14_3204 -> m14_196  [key=2, style=dotted];
m14_3204 -> m14_212  [key=2, style=dotted];
m14_3204 -> m14_3208  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_3205 -> m14_3206  [key=0, style=solid];
m14_3205 -> m14_492  [key=2, style=dotted];
m14_3205 -> m14_3207  [color=darkseagreen4, key=1, label=o, style=dashed];
m14_3208 -> m14_3209  [key=0, style=solid];
m14_3208 -> m14_196  [key=2, style=dotted];
m14_3208 -> m14_302  [key=2, style=dotted];
m14_3208 -> m14_3210  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m14_3208 -> m14_3211  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m14_3206 -> m14_3207  [key=0, style=solid];
m14_3206 -> m14_922  [key=2, style=dotted];
m14_3206 -> m14_1668  [key=2, style=dotted];
m14_3206 -> m14_3213  [key=2, style=dotted];
m14_3206 -> m14_3214  [key=2, style=dotted];
m14_3207 -> m14_3208  [key=0, style=solid];
m14_3207 -> m14_922  [key=2, style=dotted];
m14_3207 -> m14_1668  [key=2, style=dotted];
m14_3207 -> m14_3213  [key=2, style=dotted];
m14_3207 -> m14_3214  [key=2, style=dotted];
m14_3209 -> m14_3210  [key=0, style=solid];
m14_3209 -> m14_10  [key=2, style=dotted];
m14_3210 -> m14_3211  [key=0, style=solid];
m14_3210 -> m14_1105  [key=2, style=dotted];
m14_3210 -> m14_10  [key=2, style=dotted];
m14_3211 -> m14_3212  [key=0, style=solid];
m14_3211 -> m14_1105  [key=2, style=dotted];
m14_3211 -> m14_10  [key=2, style=dotted];
m14_3212 -> m14_3202  [color=blue, key=0, style=bold];
m14_2520 -> m14_2521  [key=0, style=solid];
m14_2521 -> m14_2522  [key=0, style=solid];
m14_2521 -> m14_2526  [key=2, style=dotted];
m14_2522 -> m14_2523  [key=0, style=solid];
m14_2522 -> m14_9  [key=2, style=dotted];
m14_2523 -> m14_2524  [key=0, style=solid];
m14_2523 -> m14_196  [key=2, style=dotted];
m14_2523 -> m14_302  [key=2, style=dotted];
m14_2524 -> m14_2525  [key=0, style=solid];
m14_2524 -> m14_10  [key=2, style=dotted];
m14_2525 -> m14_2520  [color=blue, key=0, style=bold];
m14_26 -> m14_27  [key=0, style=solid];
m14_27 -> m14_28  [key=0, style=solid];
m14_27 -> m14_41  [key=2, style=dotted];
m14_27 -> m14_42  [key=2, style=dotted];
m14_27 -> m14_37  [color=darkseagreen4, key=1, label=s, style=dashed];
m14_27 -> m14_38  [color=darkseagreen4, key=1, label=s, style=dashed];
m14_27 -> m14_39  [color=darkseagreen4, key=1, label=s, style=dashed];
m14_28 -> m14_29  [key=0, style=solid];
m14_28 -> m14_43  [key=2, style=dotted];
m14_28 -> m14_44  [key=2, style=dotted];
m14_28 -> m14_30  [color=darkseagreen4, key=1, label=reader, style=dashed];
m14_28 -> m14_31  [color=darkseagreen4, key=1, label=reader, style=dashed];
m14_28 -> m14_34  [color=darkseagreen4, key=1, label=reader, style=dashed];
m14_37 -> m14_38  [key=0, style=solid];
m14_37 -> m14_49  [key=2, style=dotted];
m14_38 -> m14_39  [key=0, style=solid];
m14_38 -> m14_50  [key=2, style=dotted];
m14_39 -> m14_40  [key=0, style=solid];
m14_39 -> m14_10  [key=2, style=dotted];
m14_29 -> m14_30  [key=0, style=solid];
m14_30 -> m14_31  [key=0, style=solid];
m14_31 -> m14_32  [key=0, style=solid];
m14_31 -> d10  [key=2, style=dotted];
m14_34 -> m14_35  [key=0, style=solid];
m14_34 -> m14_47  [key=2, style=dotted];
m14_32 -> m14_33  [key=0, style=solid];
m14_32 -> m14_46  [key=2, style=dotted];
m14_32 -> m14_34  [color=darkseagreen4, key=1, label=ser, style=dashed];
m14_33 -> m14_34  [key=0, style=solid];
m14_35 -> m14_36  [key=0, style=solid];
m14_35 -> m14_40  [key=0, style=solid];
m14_35 -> m14_48  [key=2, style=dotted];
m14_36 -> m14_37  [key=0, style=solid];
m14_40 -> m14_26  [color=blue, key=0, style=bold];
m14_2244 -> m14_2245  [key=0, style=solid];
m14_2245 -> m14_2246  [key=0, style=solid];
m14_2245 -> m14_2249  [key=2, style=dotted];
m14_2245 -> m14_2250  [key=2, style=dotted];
m14_2245 -> m14_2251  [key=2, style=dotted];
m14_2246 -> m14_2247  [key=0, style=solid];
m14_2246 -> m14_2252  [key=2, style=dotted];
m14_2246 -> m14_2253  [key=2, style=dotted];
m14_2246 -> m14_1299  [key=2, style=dotted];
m14_2247 -> m14_2248  [key=0, style=solid];
m14_2247 -> m14_10  [key=2, style=dotted];
m14_2248 -> m14_2244  [color=blue, key=0, style=bold];
m14_3942 -> m14_3943  [key=0, style=solid];
m14_3943 -> m14_3944  [key=0, style=solid];
m14_3943 -> m14_3943  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_3944 -> m14_3945  [key=0, style=solid];
m14_3944 -> m14_11  [key=2, style=dotted];
m14_3944 -> m14_3946  [color=darkseagreen4, key=1, label=d, style=dashed];
m14_3945 -> m14_3946  [key=0, style=solid];
m14_3945 -> m14_10  [key=2, style=dotted];
m14_3946 -> m14_3947  [key=0, style=solid];
m14_3946 -> m14_10  [key=2, style=dotted];
m14_3947 -> m14_3942  [color=blue, key=0, style=bold];
m14_3664 -> m14_3665  [color=red, key=0, style=solid];
m14_3664 -> m14_3667  [color=red, key=1, label=object, style=dashed];
m14_3664 -> m14_3668  [color=red, key=1, label="System.Type", style=dashed];
m14_3664 -> m14_3669  [color=red, key=1, label=object, style=dashed];
m14_3664 -> m14_3670  [color=red, key=1, label="System.Globalization.CultureInfo", style=dashed];
m14_3664 -> m14_3675  [color=red, key=1, label="System.ComponentModel.ITypeDescriptorContext", style=dashed];
m14_3664 -> m14_3676  [color=red, key=1, label="System.ComponentModel.ITypeDescriptorContext", style=dashed];
m14_3664 -> m14_3678  [color=red, key=1, label="System.ComponentModel.ITypeDescriptorContext", style=dashed];
m14_3665 -> m14_3666  [color=red, key=0, style=solid];
m14_3665 -> m14_3667  [color=red, key=0, style=solid];
m14_3667 -> m14_3668  [color=red, key=0, style=solid];
m14_3667 -> m14_3678  [color=red, key=0, style=solid];
m14_3668 -> m14_3669  [color=red, key=0, style=solid];
m14_3668 -> m14_3678  [color=red, key=0, style=solid];
m14_3669 -> m14_3670  [color=red, key=0, style=solid];
m14_3669 -> m14_3675  [color=red, key=1, label=size, style=dashed];
m14_3670 -> m14_3671  [color=red, key=0, style=solid];
m14_3670 -> m14_3672  [color=red, key=0, style=solid];
m14_3675 -> m14_3676  [color=red, key=0, style=solid];
m14_3675 -> m14_3680  [color=red, key=2, style=dotted];
m14_3675 -> m14_3675  [color=red, key=1, label=num, style=dashed];
m14_3676 -> m14_3677  [color=red, key=0, style=solid];
m14_3676 -> m14_3680  [color=red, key=2, style=dotted];
m14_3676 -> m14_3676  [color=red, key=1, label=num, style=dashed];
m14_3678 -> m14_3679  [color=red, key=0, style=solid];
m14_3678 -> m14_3682  [color=red, key=2, style=dotted];
m14_3666 -> m14_3679  [color=red, key=0, style=solid];
m14_3666 -> m14_2060  [color=red, key=2, style=dotted];
m14_3671 -> m14_3672  [color=red, key=0, style=solid];
m14_3671 -> m14_3675  [color=red, key=1, label="System.Globalization.CultureInfo", style=dashed];
m14_3671 -> m14_3676  [color=red, key=1, label="System.Globalization.CultureInfo", style=dashed];
m14_3671 -> m14_3678  [color=red, key=1, label="System.Globalization.CultureInfo", style=dashed];
m14_3672 -> m14_3673  [color=red, key=0, style=solid];
m14_3672 -> m14_3661  [color=red, key=2, style=dotted];
m14_3672 -> m14_3675  [color=red, key=1, label=converter, style=dashed];
m14_3672 -> m14_3676  [color=red, key=1, label=converter, style=dashed];
m14_3673 -> m14_3674  [color=red, key=0, style=solid];
m14_3673 -> m14_3675  [color=red, key=1, label=strArray, style=dashed];
m14_3673 -> m14_3676  [color=red, key=1, label=strArray, style=dashed];
m14_3673 -> m14_3677  [color=red, key=1, label=strArray, style=dashed];
m14_3674 -> m14_3675  [color=red, key=0, style=solid];
m14_3674 -> m14_112  [color=red, key=3, label="Local variable int num", style=bold];
m14_3677 -> m14_3679  [color=red, key=0, style=solid];
m14_3677 -> m14_3681  [color=red, key=2, style=dotted];
m14_3679 -> m14_3664  [color=blue, key=0, style=bold];
m14_2730 -> m14_2731  [key=0, style=solid];
m14_2731 -> m14_2732  [key=0, style=solid];
m14_2732 -> m14_2733  [key=0, style=solid];
m14_2732 -> m14_783  [key=2, style=dotted];
m14_2732 -> m14_2735  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_2733 -> m14_2734  [key=0, style=solid];
m14_2733 -> m14_2740  [key=2, style=dotted];
m14_2733 -> m14_2737  [color=darkseagreen4, key=1, label=sw, style=dashed];
m14_2735 -> m14_2736  [key=0, style=solid];
m14_2735 -> m14_2742  [key=2, style=dotted];
m14_2735 -> m14_2743  [key=2, style=dotted];
m14_2734 -> m14_2735  [key=0, style=solid];
m14_2734 -> m14_2741  [key=2, style=dotted];
m14_2734 -> m14_2736  [color=darkseagreen4, key=1, label=jw, style=dashed];
m14_2737 -> m14_2738  [key=0, style=solid];
m14_2737 -> m14_2745  [key=2, style=dotted];
m14_2736 -> m14_2737  [key=0, style=solid];
m14_2736 -> m14_2744  [key=2, style=dotted];
m14_2738 -> m14_2739  [key=0, style=solid];
m14_2738 -> m14_10  [key=2, style=dotted];
m14_2739 -> m14_2730  [color=blue, key=0, style=bold];
m14_2088 -> m14_2089  [color=red, key=0, style=solid];
m14_2088 -> m14_2091  [color=red, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m14_2089 -> m14_2090  [color=red, key=0, style=solid];
m14_2089 -> m14_2091  [color=red, key=0, style=solid];
m14_2091 -> m14_2092  [color=red, key=0, style=solid];
m14_2091 -> m14_2093  [color=red, key=0, style=solid];
m14_2090 -> m14_2093  [color=red, key=0, style=solid];
m14_2092 -> m14_2091  [color=red, key=0, style=solid];
m14_2092 -> m14_2092  [color=red, key=1, label=entry, style=dashed];
m14_2093 -> m14_2088  [color=blue, key=0, style=bold];
m14_2408 -> m14_2409  [key=0, style=solid];
m14_2409 -> m14_2410  [key=0, style=solid];
m14_2409 -> m14_2412  [key=2, style=dotted];
m14_2409 -> m14_61  [key=2, style=dotted];
m14_2410 -> m14_2411  [key=0, style=solid];
m14_2410 -> m14_62  [key=2, style=dotted];
m14_2411 -> m14_2408  [color=blue, key=0, style=bold];
m14_1173 -> m14_1174  [key=0, style=solid];
m14_1174 -> m14_1175  [key=0, style=solid];
m14_1174 -> m14_1174  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_1175 -> m14_1176  [key=0, style=solid];
m14_1175 -> m14_11  [key=2, style=dotted];
m14_1175 -> m14_1177  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m14_1175 -> m14_1178  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m14_1175 -> m14_1179  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m14_1175 -> m14_1180  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m14_1175 -> m14_1181  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m14_1176 -> m14_1177  [key=0, style=solid];
m14_1176 -> m14_10  [key=2, style=dotted];
m14_1177 -> m14_1178  [key=0, style=solid];
m14_1177 -> m14_10  [key=2, style=dotted];
m14_1178 -> m14_1179  [key=0, style=solid];
m14_1178 -> m14_10  [key=2, style=dotted];
m14_1179 -> m14_1180  [key=0, style=solid];
m14_1179 -> m14_10  [key=2, style=dotted];
m14_1180 -> m14_1181  [key=0, style=solid];
m14_1180 -> m14_10  [key=2, style=dotted];
m14_1181 -> m14_1182  [key=0, style=solid];
m14_1181 -> m14_10  [key=2, style=dotted];
m14_1182 -> m14_1173  [color=blue, key=0, style=bold];
m14_1021 -> m14_1022  [key=0, style=solid];
m14_1022 -> m14_1023  [key=0, style=solid];
m14_1022 -> m14_1028  [key=2, style=dotted];
m14_1022 -> m14_9  [key=2, style=dotted];
m14_1023 -> m14_1024  [key=0, style=solid];
m14_1023 -> m14_10  [key=2, style=dotted];
m14_1024 -> m14_1025  [key=0, style=solid];
m14_1024 -> m14_11  [key=2, style=dotted];
m14_1024 -> m14_1026  [color=darkseagreen4, key=1, label=c, style=dashed];
m14_1025 -> m14_1026  [key=0, style=solid];
m14_1025 -> m14_10  [key=2, style=dotted];
m14_1026 -> m14_1027  [key=0, style=solid];
m14_1026 -> m14_10  [key=2, style=dotted];
m14_1027 -> m14_1021  [color=blue, key=0, style=bold];
m14_289 -> m14_290  [key=0, style=solid];
m14_290 -> m14_291  [key=0, style=solid];
m14_290 -> m14_298  [key=2, style=dotted];
m14_291 -> m14_292  [key=0, style=solid];
m14_291 -> m14_299  [key=2, style=dotted];
m14_291 -> m14_300  [key=2, style=dotted];
m14_291 -> m14_210  [key=2, style=dotted];
m14_292 -> m14_293  [key=0, style=solid];
m14_292 -> m14_196  [key=2, style=dotted];
m14_292 -> m14_301  [key=2, style=dotted];
m14_292 -> m14_212  [key=2, style=dotted];
m14_293 -> m14_294  [key=0, style=solid];
m14_293 -> m14_10  [key=2, style=dotted];
m14_294 -> m14_295  [key=0, style=solid];
m14_294 -> m14_294  [color=darkorchid, key=3, label="Local variable string deserializeJson", style=bold];
m14_295 -> m14_296  [key=0, style=solid];
m14_295 -> m14_196  [key=2, style=dotted];
m14_295 -> m14_301  [key=2, style=dotted];
m14_295 -> m14_302  [key=2, style=dotted];
m14_296 -> m14_297  [key=0, style=solid];
m14_296 -> m14_10  [key=2, style=dotted];
m14_297 -> m14_289  [color=blue, key=0, style=bold];
m14_2325 -> m14_2326  [key=0, style=solid];
m14_2326 -> m14_2327  [key=0, style=solid];
m14_2326 -> m14_939  [key=2, style=dotted];
m14_2326 -> m14_2328  [color=darkseagreen4, key=1, label=d, style=dashed];
m14_2326 -> m14_2329  [color=darkseagreen4, key=1, label=d, style=dashed];
m14_2326 -> m14_2330  [color=darkseagreen4, key=1, label=d, style=dashed];
m14_2327 -> m14_2328  [key=0, style=solid];
m14_2327 -> m14_10  [key=2, style=dotted];
m14_2328 -> m14_2329  [key=0, style=solid];
m14_2328 -> m14_10  [key=2, style=dotted];
m14_2329 -> m14_2330  [key=0, style=solid];
m14_2329 -> m14_10  [key=2, style=dotted];
m14_2330 -> m14_2331  [key=0, style=solid];
m14_2330 -> m14_10  [key=2, style=dotted];
m14_2331 -> m14_2325  [color=blue, key=0, style=bold];
m14_820 -> m14_821  [key=0, style=solid];
m14_821 -> m14_822  [key=0, style=solid];
m14_821 -> m14_816  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_822 -> m14_823  [key=0, style=solid];
m14_822 -> m14_11  [key=2, style=dotted];
m14_822 -> m14_824  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m14_822 -> m14_825  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m14_822 -> m14_826  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m14_823 -> m14_824  [key=0, style=solid];
m14_823 -> m14_812  [key=2, style=dotted];
m14_824 -> m14_825  [key=0, style=solid];
m14_824 -> m14_10  [key=2, style=dotted];
m14_825 -> m14_826  [key=0, style=solid];
m14_825 -> m14_812  [key=2, style=dotted];
m14_826 -> m14_827  [key=0, style=solid];
m14_826 -> m14_10  [key=2, style=dotted];
m14_827 -> m14_820  [color=blue, key=0, style=bold];
m14_1081 -> m14_1082  [key=0, style=solid];
m14_1082 -> m14_1083  [key=0, style=solid];
m14_1082 -> m14_1084  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_1082 -> m14_1086  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_1082 -> m14_1087  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_1082 -> m14_1082  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_1083 -> m14_1084  [key=0, style=solid];
m14_1083 -> m14_1092  [key=2, style=dotted];
m14_1084 -> m14_1085  [key=0, style=solid];
m14_1084 -> m14_1093  [key=2, style=dotted];
m14_1084 -> m14_1090  [color=darkseagreen4, key=1, label=javaScriptSerializerResult, style=dashed];
m14_1086 -> m14_1087  [key=0, style=solid];
m14_1086 -> m14_1078  [key=2, style=dotted];
m14_1086 -> m14_1079  [key=2, style=dotted];
m14_1086 -> m14_1080  [key=2, style=dotted];
m14_1086 -> m14_1089  [color=darkseagreen4, key=1, label=dataContractResult, style=dashed];
m14_1087 -> m14_1088  [key=0, style=solid];
m14_1087 -> m14_11  [key=2, style=dotted];
m14_1087 -> m14_1089  [color=darkseagreen4, key=1, label=jsonNetResult, style=dashed];
m14_1087 -> m14_1090  [color=darkseagreen4, key=1, label=jsonNetResult, style=dashed];
m14_1085 -> m14_1086  [key=0, style=solid];
m14_1085 -> m14_917  [key=2, style=dotted];
m14_1090 -> m14_1091  [key=0, style=solid];
m14_1090 -> m14_10  [key=2, style=dotted];
m14_1089 -> m14_1090  [key=0, style=solid];
m14_1089 -> m14_10  [key=2, style=dotted];
m14_1088 -> m14_1089  [key=0, style=solid];
m14_1088 -> m14_10  [key=2, style=dotted];
m14_1091 -> m14_1081  [color=blue, key=0, style=bold];
m14_3781 -> m14_3782  [color=red, key=0, style=solid];
m14_3782 -> m14_3783  [color=red, key=0, style=solid];
m14_3782 -> m14_3750  [color=red, key=2, style=dotted];
m14_3783 -> m14_3781  [color=blue, key=0, style=bold];
m14_4051 -> m14_4052  [key=0, style=solid];
m14_4052 -> m14_4053  [key=0, style=solid];
m14_4052 -> m14_88  [key=2, style=dotted];
m14_4052 -> m14_4054  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_4053 -> m14_4051  [color=blue, key=0, style=bold];
m14_1056 -> m14_1057  [key=0, style=solid];
m14_1057 -> m14_1058  [key=0, style=solid];
m14_1057 -> m14_88  [key=2, style=dotted];
m14_1057 -> m14_1059  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_1058 -> m14_1056  [color=blue, key=0, style=bold];
m14_3076 -> m14_3077  [color=red, key=0, style=solid];
m14_3077 -> m14_3078  [color=red, key=0, style=solid];
m14_3077 -> m14_1001  [color=red, key=2, style=dotted];
m14_3077 -> m14_3079  [color=red, key=2, style=dotted];
m14_3078 -> m14_3076  [color=blue, key=0, style=bold];
m14_4033 -> m14_4034  [key=0, style=solid];
m14_4034 -> m14_4035  [key=0, style=solid];
m14_4034 -> m14_1105  [key=2, style=dotted];
m14_4034 -> m14_4036  [color=darkseagreen4, key=1, label=dt, style=dashed];
m14_4034 -> m14_4040  [color=darkseagreen4, key=1, label=dt, style=dashed];
m14_4034 -> m14_4041  [color=darkseagreen4, key=1, label=dt, style=dashed];
m14_4035 -> m14_4036  [key=0, style=solid];
m14_4035 -> m14_196  [key=2, style=dotted];
m14_4035 -> m14_4043  [key=2, style=dotted];
m14_4035 -> m14_4037  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_4035 -> m14_4039  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_4036 -> m14_4037  [key=0, style=solid];
m14_4036 -> m14_4044  [key=2, style=dotted];
m14_4040 -> m14_4041  [key=0, style=solid];
m14_4040 -> m14_10  [key=2, style=dotted];
m14_4041 -> m14_4042  [key=0, style=solid];
m14_4041 -> m14_10  [key=2, style=dotted];
m14_4037 -> m14_4038  [key=0, style=solid];
m14_4037 -> m14_197  [key=2, style=dotted];
m14_4037 -> m14_4039  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_4039 -> m14_4040  [key=0, style=solid];
m14_4039 -> m14_302  [key=2, style=dotted];
m14_4039 -> m14_4041  [color=darkseagreen4, key=1, label=c2, style=dashed];
m14_4038 -> m14_4039  [key=0, style=solid];
m14_4038 -> m14_62  [key=2, style=dotted];
m14_4042 -> m14_4033  [color=blue, key=0, style=bold];
m14_874 -> m14_875  [key=0, style=solid];
m14_875 -> m14_876  [key=0, style=solid];
m14_875 -> m14_883  [key=2, style=dotted];
m14_875 -> m14_877  [color=darkseagreen4, key=1, label=baseWith, style=dashed];
m14_875 -> m14_878  [color=darkseagreen4, key=1, label=baseWith, style=dashed];
m14_875 -> m14_879  [color=darkseagreen4, key=1, label=baseWith, style=dashed];
m14_875 -> m14_880  [color=darkseagreen4, key=1, label=baseWith, style=dashed];
m14_876 -> m14_877  [key=0, style=solid];
m14_877 -> m14_878  [key=0, style=solid];
m14_878 -> m14_879  [key=0, style=solid];
m14_879 -> m14_880  [key=0, style=solid];
m14_880 -> m14_881  [key=0, style=solid];
m14_880 -> m14_61  [key=2, style=dotted];
m14_881 -> m14_882  [key=0, style=solid];
m14_881 -> m14_62  [key=2, style=dotted];
m14_882 -> m14_874  [color=blue, key=0, style=bold];
m14_3912 -> m14_3913  [key=0, style=solid];
m14_3913 -> m14_3914  [key=0, style=solid];
m14_3913 -> m14_3919  [key=2, style=dotted];
m14_3914 -> m14_3915  [key=0, style=solid];
m14_3914 -> m14_61  [key=2, style=dotted];
m14_3914 -> m14_3916  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_3915 -> m14_3916  [key=0, style=solid];
m14_3915 -> m14_62  [key=2, style=dotted];
m14_3916 -> m14_3917  [key=0, style=solid];
m14_3916 -> m14_11  [key=2, style=dotted];
m14_3917 -> m14_3918  [key=0, style=solid];
m14_3917 -> m14_10  [key=2, style=dotted];
m14_3918 -> m14_3912  [color=blue, key=0, style=bold];
m14_456 -> m14_457  [key=0, style=solid];
m14_457 -> m14_458  [key=0, style=solid];
m14_457 -> m14_457  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_458 -> m14_459  [key=0, style=solid];
m14_458 -> m14_11  [key=2, style=dotted];
m14_458 -> m14_460  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m14_458 -> m14_461  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m14_458 -> m14_462  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m14_459 -> m14_460  [key=0, style=solid];
m14_459 -> m14_10  [key=2, style=dotted];
m14_460 -> m14_461  [key=0, style=solid];
m14_460 -> m14_10  [key=2, style=dotted];
m14_461 -> m14_462  [key=0, style=solid];
m14_461 -> m14_10  [key=2, style=dotted];
m14_462 -> m14_463  [key=0, style=solid];
m14_462 -> m14_10  [key=2, style=dotted];
m14_463 -> m14_456  [color=blue, key=0, style=bold];
m14_3891 -> m14_3892  [key=0, style=solid];
m14_3892 -> m14_3893  [key=0, style=solid];
m14_3892 -> m14_1112  [key=2, style=dotted];
m14_3892 -> m14_957  [key=2, style=dotted];
m14_3892 -> m14_3895  [color=darkseagreen4, key=1, label=dt, style=dashed];
m14_3892 -> m14_3898  [color=darkseagreen4, key=1, label=dt, style=dashed];
m14_3892 -> m14_3903  [color=darkseagreen4, key=1, label=dt, style=dashed];
m14_3893 -> m14_3894  [key=0, style=solid];
m14_3893 -> m14_3899  [color=darkseagreen4, key=1, label=dateFormatString, style=dashed];
m14_3893 -> m14_3818  [color=darkorchid, key=3, label="Local variable string dateFormatString", style=bold];
m14_3895 -> m14_3896  [key=0, style=solid];
m14_3895 -> m14_197  [key=2, style=dotted];
m14_3895 -> m14_3897  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_3895 -> m14_3899  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_3898 -> m14_3899  [key=0, style=solid];
m14_3898 -> m14_10  [key=2, style=dotted];
m14_3903 -> m14_3904  [key=0, style=solid];
m14_3903 -> m14_10  [key=2, style=dotted];
m14_3894 -> m14_3895  [key=0, style=solid];
m14_3894 -> m14_196  [key=2, style=dotted];
m14_3894 -> m14_3897  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_3899 -> m14_3900  [key=0, style=solid];
m14_3899 -> m14_43  [key=2, style=dotted];
m14_3899 -> m14_403  [key=2, style=dotted];
m14_3897 -> m14_3898  [key=0, style=solid];
m14_3897 -> m14_302  [key=2, style=dotted];
m14_3896 -> m14_3897  [key=0, style=solid];
m14_3896 -> m14_10  [key=2, style=dotted];
m14_3900 -> m14_3901  [key=0, style=solid];
m14_3900 -> m14_3114  [key=2, style=dotted];
m14_3900 -> m14_3902  [color=darkseagreen4, key=1, label=v, style=dashed];
m14_3900 -> m14_3903  [color=darkseagreen4, key=1, label=v, style=dashed];
m14_3901 -> m14_3902  [key=0, style=solid];
m14_3901 -> m14_10  [key=2, style=dotted];
m14_3902 -> m14_3903  [key=0, style=solid];
m14_3902 -> m14_405  [key=2, style=dotted];
m14_3902 -> m14_10  [key=2, style=dotted];
m14_3904 -> m14_3891  [color=blue, key=0, style=bold];
m14_3522 -> m14_3523  [color=red, key=0, style=solid];
m14_3522 -> m14_3524  [color=red, key=1, label=TSecond, style=dashed];
m14_3523 -> m14_3524  [color=red, key=0, style=solid];
m14_3524 -> m14_3525  [color=red, key=0, style=solid];
m14_3525 -> m14_3522  [color=blue, key=0, style=bold];
m14_3992 -> m14_3993  [color=red, key=0, style=solid];
m14_3992 -> m14_3994  [color=red, key=3, label="method methodReturn object ReadJson", style=bold];
m14_3993 -> m14_3994  [color=red, key=0, style=solid];
m14_3993 -> m14_47  [color=red, key=2, style=dotted];
m14_3994 -> m14_3995  [color=red, key=0, style=solid];
m14_3994 -> m14_3997  [color=red, key=2, style=dotted];
m14_3994 -> m14_1078  [color=red, key=2, style=dotted];
m14_3994 -> m14_3998  [color=red, key=2, style=dotted];
m14_3995 -> m14_3996  [color=red, key=0, style=solid];
m14_3996 -> m14_3992  [color=blue, key=0, style=bold];
m14_2718 -> m14_2719  [key=0, style=solid];
m14_2719 -> m14_2720  [key=0, style=solid];
m14_2719 -> m14_2717  [key=2, style=dotted];
m14_2719 -> m14_1249  [key=2, style=dotted];
m14_2719 -> m14_2729  [key=2, style=dotted];
m14_2719 -> m14_1113  [key=2, style=dotted];
m14_2719 -> m14_1695  [key=2, style=dotted];
m14_2719 -> m14_2723  [color=darkseagreen4, key=1, label=c1, style=dashed];
m14_2719 -> m14_2724  [color=darkseagreen4, key=1, label=c1, style=dashed];
m14_2719 -> m14_2725  [color=darkseagreen4, key=1, label=c1, style=dashed];
m14_2719 -> m14_2726  [color=darkseagreen4, key=1, label=c1, style=dashed];
m14_2719 -> m14_2727  [color=darkseagreen4, key=1, label=c1, style=dashed];
m14_2720 -> m14_2721  [key=0, style=solid];
m14_2720 -> m14_61  [key=2, style=dotted];
m14_2720 -> m14_2722  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_2723 -> m14_2724  [key=0, style=solid];
m14_2723 -> m14_10  [key=2, style=dotted];
m14_2724 -> m14_2725  [key=0, style=solid];
m14_2724 -> m14_10  [key=2, style=dotted];
m14_2725 -> m14_2726  [key=0, style=solid];
m14_2725 -> m14_10  [key=2, style=dotted];
m14_2726 -> m14_2727  [key=0, style=solid];
m14_2726 -> m14_10  [key=2, style=dotted];
m14_2727 -> m14_2728  [key=0, style=solid];
m14_2727 -> m14_10  [key=2, style=dotted];
m14_2721 -> m14_2722  [key=0, style=solid];
m14_2721 -> m14_62  [key=2, style=dotted];
m14_2722 -> m14_2723  [key=0, style=solid];
m14_2722 -> m14_11  [key=2, style=dotted];
m14_2722 -> m14_2724  [color=darkseagreen4, key=1, label=c2, style=dashed];
m14_2722 -> m14_2725  [color=darkseagreen4, key=1, label=c2, style=dashed];
m14_2722 -> m14_2726  [color=darkseagreen4, key=1, label=c2, style=dashed];
m14_2722 -> m14_2727  [color=darkseagreen4, key=1, label=c2, style=dashed];
m14_2728 -> m14_2718  [color=blue, key=0, style=bold];
m14_243 -> m14_244  [key=0, style=solid];
m14_244 -> m14_245  [key=0, style=solid];
m14_244 -> m14_11  [key=2, style=dotted];
m14_245 -> m14_246  [key=0, style=solid];
m14_245 -> m14_10  [key=2, style=dotted];
m14_246 -> m14_247  [key=0, style=solid];
m14_246 -> m14_249  [key=2, style=dotted];
m14_246 -> m14_250  [key=2, style=dotted];
m14_247 -> m14_248  [key=0, style=solid];
m14_247 -> m14_10  [key=2, style=dotted];
m14_248 -> m14_243  [color=blue, key=0, style=bold];
m14_2633 -> m14_2634  [key=0, style=solid];
m14_2634 -> m14_2635  [key=0, style=solid];
m14_2634 -> m14_2645  [key=2, style=dotted];
m14_2634 -> m14_2636  [color=darkseagreen4, key=1, label=c1, style=dashed];
m14_2634 -> m14_2637  [color=darkseagreen4, key=1, label=c1, style=dashed];
m14_2634 -> m14_2640  [color=darkseagreen4, key=1, label=c1, style=dashed];
m14_2634 -> m14_2641  [color=darkseagreen4, key=1, label=c1, style=dashed];
m14_2635 -> m14_2636  [key=0, style=solid];
m14_2635 -> m14_354  [key=2, style=dotted];
m14_2636 -> m14_2637  [key=0, style=solid];
m14_2636 -> m14_354  [key=2, style=dotted];
m14_2637 -> m14_2638  [key=0, style=solid];
m14_2637 -> m14_61  [key=2, style=dotted];
m14_2637 -> m14_2639  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_2640 -> m14_2641  [key=0, style=solid];
m14_2640 -> m14_10  [key=2, style=dotted];
m14_2641 -> m14_2642  [key=0, style=solid];
m14_2641 -> m14_10  [key=2, style=dotted];
m14_2638 -> m14_2639  [key=0, style=solid];
m14_2638 -> m14_62  [key=2, style=dotted];
m14_2639 -> m14_2640  [key=0, style=solid];
m14_2639 -> m14_11  [key=2, style=dotted];
m14_2639 -> m14_2641  [color=darkseagreen4, key=1, label=c2, style=dashed];
m14_2639 -> m14_2642  [color=darkseagreen4, key=1, label=c2, style=dashed];
m14_2639 -> m14_2643  [color=darkseagreen4, key=1, label=c2, style=dashed];
m14_2642 -> m14_2643  [key=0, style=solid];
m14_2642 -> m14_10  [key=2, style=dotted];
m14_2643 -> m14_2644  [key=0, style=solid];
m14_2643 -> m14_10  [key=2, style=dotted];
m14_2644 -> m14_2633  [color=blue, key=0, style=bold];
m14_1647 -> m14_1648  [key=0, style=solid];
m14_1648 -> m14_1649  [key=0, style=solid];
m14_1648 -> m14_1648  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_1649 -> m14_1650  [key=0, style=solid];
m14_1649 -> m14_196  [key=2, style=dotted];
m14_1649 -> m14_302  [key=2, style=dotted];
m14_1649 -> m14_1651  [color=darkseagreen4, key=1, label=c, style=dashed];
m14_1649 -> m14_1652  [color=darkseagreen4, key=1, label=c, style=dashed];
m14_1650 -> m14_1651  [key=0, style=solid];
m14_1650 -> m14_10  [key=2, style=dotted];
m14_1651 -> m14_1652  [key=0, style=solid];
m14_1651 -> m14_10  [key=2, style=dotted];
m14_1652 -> m14_1653  [key=0, style=solid];
m14_1652 -> m14_10  [key=2, style=dotted];
m14_1653 -> m14_1647  [color=blue, key=0, style=bold];
m14_1743 -> m14_1744  [key=0, style=solid];
m14_1744 -> m14_1745  [key=0, style=solid];
m14_1744 -> m14_1744  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_1745 -> m14_1746  [key=0, style=solid];
m14_1745 -> m14_11  [key=2, style=dotted];
m14_1746 -> m14_1747  [key=0, style=solid];
m14_1746 -> m14_1751  [key=2, style=dotted];
m14_1746 -> m14_1748  [color=darkseagreen4, key=1, label=a, style=dashed];
m14_1746 -> m14_1749  [color=darkseagreen4, key=1, label=a, style=dashed];
m14_1747 -> m14_1748  [key=0, style=solid];
m14_1747 -> m14_10  [key=2, style=dotted];
m14_1748 -> m14_1749  [key=0, style=solid];
m14_1748 -> m14_10  [key=2, style=dotted];
m14_1749 -> m14_1750  [key=0, style=solid];
m14_1749 -> m14_10  [key=2, style=dotted];
m14_1750 -> m14_1743  [color=blue, key=0, style=bold];
m14_3592 -> m14_3593  [key=0, style=solid];
m14_3593 -> m14_3594  [key=0, style=solid];
m14_3593 -> m14_754  [key=2, style=dotted];
m14_3593 -> m14_1249  [key=2, style=dotted];
m14_3593 -> m14_3595  [color=darkseagreen4, key=1, label=john, style=dashed];
m14_3593 -> m14_3596  [color=darkseagreen4, key=1, label=john, style=dashed];
m14_3593 -> m14_3597  [color=darkseagreen4, key=1, label=john, style=dashed];
m14_3594 -> m14_3595  [key=0, style=solid];
m14_3594 -> m14_754  [key=2, style=dotted];
m14_3594 -> m14_1249  [key=2, style=dotted];
m14_3594 -> m14_3596  [color=darkseagreen4, key=1, label=jane, style=dashed];
m14_3594 -> m14_3597  [color=darkseagreen4, key=1, label=jane, style=dashed];
m14_3595 -> m14_3596  [key=0, style=solid];
m14_3596 -> m14_3597  [key=0, style=solid];
m14_3597 -> m14_3598  [key=0, style=solid];
m14_3597 -> m14_300  [key=2, style=dotted];
m14_3598 -> m14_3599  [key=0, style=solid];
m14_3598 -> m14_196  [key=2, style=dotted];
m14_3598 -> m14_577  [key=2, style=dotted];
m14_3598 -> m14_197  [key=2, style=dotted];
m14_3599 -> m14_3600  [key=0, style=solid];
m14_3599 -> m14_62  [key=2, style=dotted];
m14_3600 -> m14_3592  [color=blue, key=0, style=bold];
m14_2036 -> m14_2037  [key=0, style=solid];
m14_2037 -> m14_2038  [key=0, style=solid];
m14_2037 -> m14_2037  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_2038 -> m14_2039  [key=0, style=solid];
m14_2038 -> m14_11  [key=2, style=dotted];
m14_2039 -> m14_2040  [key=0, style=solid];
m14_2039 -> m14_10  [key=2, style=dotted];
m14_2040 -> m14_2036  [color=blue, key=0, style=bold];
m14_1834 -> m14_1835  [key=0, style=solid];
m14_1835 -> m14_1836  [key=0, style=solid];
m14_1835 -> m14_1839  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_1835 -> m14_170  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_1836 -> m14_1837  [key=0, style=solid];
m14_1836 -> m14_88  [key=2, style=dotted];
m14_1836 -> m14_1838  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_1837 -> m14_1834  [color=blue, key=0, style=bold];
m14_3948 -> m14_3949  [key=0, style=solid];
m14_3949 -> m14_3950  [key=0, style=solid];
m14_3949 -> m14_3954  [key=2, style=dotted];
m14_3950 -> m14_3951  [key=0, style=solid];
m14_3950 -> m14_9  [key=2, style=dotted];
m14_3951 -> m14_3952  [key=0, style=solid];
m14_3951 -> m14_11  [key=2, style=dotted];
m14_3952 -> m14_3953  [key=0, style=solid];
m14_3952 -> m14_10  [key=2, style=dotted];
m14_3953 -> m14_3948  [color=blue, key=0, style=bold];
m14_72 -> m14_73  [key=0, style=solid];
m14_73 -> m14_74  [key=0, style=solid];
m14_73 -> m14_11  [key=2, style=dotted];
m14_74 -> m14_75  [key=0, style=solid];
m14_74 -> m14_10  [key=2, style=dotted];
m14_75 -> m14_76  [key=0, style=solid];
m14_75 -> m14_11  [key=2, style=dotted];
m14_76 -> m14_77  [key=0, style=solid];
m14_76 -> m14_10  [key=2, style=dotted];
m14_77 -> m14_72  [color=blue, key=0, style=bold];
m14_3751 -> m14_3752  [color=red, key=0, style=solid];
m14_3752 -> m14_3753  [color=red, key=0, style=solid];
m14_3752 -> m14_3750  [color=red, key=2, style=dotted];
m14_3753 -> m14_3751  [color=blue, key=0, style=bold];
m14_2041 -> m14_2042  [key=0, style=solid];
m14_2042 -> m14_2043  [key=0, style=solid];
m14_2042 -> m14_2049  [key=2, style=dotted];
m14_2042 -> m14_2050  [key=2, style=dotted];
m14_2042 -> m14_1249  [key=2, style=dotted];
m14_2042 -> m14_2051  [key=2, style=dotted];
m14_2042 -> m14_2045  [color=darkseagreen4, key=1, label=c, style=dashed];
m14_2043 -> m14_2044  [key=0, style=solid];
m14_2043 -> m14_849  [key=2, style=dotted];
m14_2043 -> m14_2045  [color=darkseagreen4, key=1, label=ms, style=dashed];
m14_2043 -> m14_2046  [color=darkseagreen4, key=1, label=ms, style=dashed];
m14_2045 -> m14_2046  [key=0, style=solid];
m14_2045 -> m14_918  [key=2, style=dotted];
m14_2044 -> m14_2045  [key=0, style=solid];
m14_2044 -> m14_917  [key=2, style=dotted];
m14_2046 -> m14_2047  [key=0, style=solid];
m14_2046 -> m14_919  [key=2, style=dotted];
m14_2047 -> m14_2048  [key=0, style=solid];
m14_2047 -> m14_920  [key=2, style=dotted];
m14_2048 -> m14_2041  [color=blue, key=0, style=bold];
m14_3570 -> m14_3571  [key=0, style=solid];
m14_3571 -> m14_3572  [key=0, style=solid];
m14_3571 -> m14_43  [key=2, style=dotted];
m14_3571 -> m14_403  [key=2, style=dotted];
m14_3571 -> m14_3574  [color=darkseagreen4, key=1, label=reader, style=dashed];
m14_3572 -> m14_3573  [key=0, style=solid];
m14_3572 -> m14_196  [key=2, style=dotted];
m14_3574 -> m14_3575  [key=0, style=solid];
m14_3574 -> m14_47  [key=2, style=dotted];
m14_3573 -> m14_3574  [key=0, style=solid];
m14_3573 -> m14_848  [key=2, style=dotted];
m14_3575 -> m14_3576  [key=0, style=solid];
m14_3575 -> m14_10  [key=2, style=dotted];
m14_3576 -> m14_3570  [color=blue, key=0, style=bold];
m14_996 -> m14_997  [key=0, style=solid];
m14_997 -> m14_998  [key=0, style=solid];
m14_997 -> m14_959  [color=darkorchid, key=3, label="Local variable string value", style=bold];
m14_998 -> m14_999  [key=0, style=solid];
m14_998 -> m14_939  [key=2, style=dotted];
m14_999 -> m14_1000  [key=0, style=solid];
m14_999 -> m14_1001  [key=2, style=dotted];
m14_999 -> m14_10  [key=2, style=dotted];
m14_1000 -> m14_996  [color=blue, key=0, style=bold];
m14_1915 -> m14_1916  [key=0, style=solid];
m14_1916 -> m14_1917  [key=0, style=solid];
m14_1916 -> m14_210  [key=2, style=dotted];
m14_1916 -> m14_1918  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m14_1916 -> m14_1919  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m14_1917 -> m14_1918  [key=0, style=solid];
m14_1917 -> m14_1249  [key=2, style=dotted];
m14_1917 -> m14_847  [key=2, style=dotted];
m14_1918 -> m14_1919  [key=0, style=solid];
m14_1918 -> m14_1249  [key=2, style=dotted];
m14_1918 -> m14_847  [key=2, style=dotted];
m14_1919 -> m14_1920  [key=0, style=solid];
m14_1919 -> m14_61  [key=2, style=dotted];
m14_1920 -> m14_1921  [key=0, style=solid];
m14_1920 -> m14_62  [key=2, style=dotted];
m14_1921 -> m14_1915  [color=blue, key=0, style=bold];
m14_2440 -> m14_2441  [key=0, style=solid];
m14_2441 -> m14_2442  [key=0, style=solid];
m14_2441 -> m14_11  [key=2, style=dotted];
m14_2442 -> m14_2443  [key=0, style=solid];
m14_2442 -> m14_10  [key=2, style=dotted];
m14_2443 -> m14_2440  [color=blue, key=0, style=bold];
m14_3855 -> m14_3856  [key=0, style=solid];
m14_3856 -> m14_3857  [key=0, style=solid];
m14_3856 -> m14_957  [key=2, style=dotted];
m14_3856 -> m14_3859  [color=darkseagreen4, key=1, label=dt, style=dashed];
m14_3856 -> m14_3862  [color=darkseagreen4, key=1, label=dt, style=dashed];
m14_3857 -> m14_3858  [key=0, style=solid];
m14_3857 -> m14_3818  [color=darkorchid, key=3, label="Local variable string dateFormatString", style=bold];
m14_3859 -> m14_3860  [key=0, style=solid];
m14_3859 -> m14_210  [key=2, style=dotted];
m14_3859 -> m14_197  [key=2, style=dotted];
m14_3859 -> m14_3861  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_3862 -> m14_3863  [key=0, style=solid];
m14_3862 -> m14_1668  [key=2, style=dotted];
m14_3862 -> m14_10  [key=2, style=dotted];
m14_3858 -> m14_3859  [key=0, style=solid];
m14_3858 -> m14_196  [key=2, style=dotted];
m14_3858 -> m14_3861  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_3861 -> m14_3862  [key=0, style=solid];
m14_3861 -> m14_302  [key=2, style=dotted];
m14_3860 -> m14_3861  [key=0, style=solid];
m14_3860 -> m14_62  [key=2, style=dotted];
m14_3863 -> m14_3855  [color=blue, key=0, style=bold];
m14_2332 -> m14_2333  [key=0, style=solid];
m14_2333 -> m14_2334  [key=0, style=solid];
m14_2333 -> m14_332  [key=2, style=dotted];
m14_2333 -> m14_61  [key=2, style=dotted];
m14_2333 -> m14_2335  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m14_2334 -> m14_2335  [key=0, style=solid];
m14_2334 -> m14_62  [key=2, style=dotted];
m14_2335 -> m14_2336  [key=0, style=solid];
m14_2335 -> m14_11  [key=2, style=dotted];
m14_2335 -> m14_2337  [color=darkseagreen4, key=1, label=d, style=dashed];
m14_2335 -> m14_2338  [color=darkseagreen4, key=1, label=d, style=dashed];
m14_2335 -> m14_2339  [color=darkseagreen4, key=1, label=d, style=dashed];
m14_2336 -> m14_2337  [key=0, style=solid];
m14_2336 -> m14_10  [key=2, style=dotted];
m14_2337 -> m14_2338  [key=0, style=solid];
m14_2337 -> m14_2341  [key=2, style=dotted];
m14_2337 -> m14_49  [key=2, style=dotted];
m14_2338 -> m14_2339  [key=0, style=solid];
m14_2338 -> m14_2341  [key=2, style=dotted];
m14_2338 -> m14_49  [key=2, style=dotted];
m14_2339 -> m14_2340  [key=0, style=solid];
m14_2339 -> m14_2341  [key=2, style=dotted];
m14_2339 -> m14_49  [key=2, style=dotted];
m14_2340 -> m14_2332  [color=blue, key=0, style=bold];
m14_1688 -> m14_1689  [key=0, style=solid];
m14_1689 -> m14_1690  [key=0, style=solid];
m14_1689 -> m14_1695  [key=2, style=dotted];
m14_1689 -> m14_1691  [color=darkseagreen4, key=1, label=uri, style=dashed];
m14_1689 -> m14_1693  [color=darkseagreen4, key=1, label=uri, style=dashed];
m14_1690 -> m14_1691  [key=0, style=solid];
m14_1690 -> m14_9  [key=2, style=dotted];
m14_1690 -> m14_1692  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_1691 -> m14_1692  [key=0, style=solid];
m14_1691 -> m14_1696  [key=2, style=dotted];
m14_1691 -> m14_10  [key=2, style=dotted];
m14_1693 -> m14_1694  [key=0, style=solid];
m14_1693 -> m14_10  [key=2, style=dotted];
m14_1692 -> m14_1693  [key=0, style=solid];
m14_1692 -> m14_11  [key=2, style=dotted];
m14_1694 -> m14_1688  [color=blue, key=0, style=bold];
m14_2254 -> m14_2255  [key=0, style=solid];
m14_2255 -> m14_2256  [key=0, style=solid];
m14_2255 -> m14_210  [key=2, style=dotted];
m14_2255 -> m14_2257  [color=darkseagreen4, key=1, label=reference, style=dashed];
m14_2255 -> m14_2261  [color=darkseagreen4, key=1, label=reference, style=dashed];
m14_2256 -> m14_2257  [key=0, style=solid];
m14_2256 -> m14_847  [key=2, style=dotted];
m14_2257 -> m14_2258  [key=0, style=solid];
m14_2257 -> m14_847  [key=2, style=dotted];
m14_2261 -> m14_2262  [key=0, style=solid];
m14_2261 -> m14_847  [key=2, style=dotted];
m14_2258 -> m14_2259  [key=0, style=solid];
m14_2258 -> m14_210  [key=2, style=dotted];
m14_2258 -> m14_2260  [color=darkseagreen4, key=1, label=child, style=dashed];
m14_2258 -> m14_2261  [color=darkseagreen4, key=1, label=child, style=dashed];
m14_2258 -> m14_2262  [color=darkseagreen4, key=1, label=child, style=dashed];
m14_2259 -> m14_2260  [key=0, style=solid];
m14_2259 -> m14_847  [key=2, style=dotted];
m14_2260 -> m14_2261  [key=0, style=solid];
m14_2260 -> m14_847  [key=2, style=dotted];
m14_2262 -> m14_2263  [key=0, style=solid];
m14_2262 -> m14_61  [key=2, style=dotted];
m14_2262 -> m14_2266  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_2263 -> m14_2264  [key=0, style=solid];
m14_2263 -> m14_88  [key=2, style=dotted];
m14_2263 -> m14_2265  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_2264 -> m14_2254  [color=blue, key=0, style=bold];
m14_3170 -> m14_3171  [key=0, style=solid];
m14_3171 -> m14_3172  [key=0, style=solid];
m14_3171 -> m14_3169  [key=2, style=dotted];
m14_3172 -> m14_3173  [key=0, style=solid];
m14_3172 -> m14_9  [key=2, style=dotted];
m14_3173 -> m14_3174  [key=0, style=solid];
m14_3173 -> m14_10  [key=2, style=dotted];
m14_3174 -> m14_3170  [color=blue, key=0, style=bold];
m14_2850 -> m14_2851  [key=0, style=solid];
m14_2851 -> m14_2852  [key=0, style=solid];
m14_2851 -> m14_2855  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_2851 -> m14_2851  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_2852 -> m14_2853  [key=0, style=solid];
m14_2852 -> m14_88  [key=2, style=dotted];
m14_2852 -> m14_2854  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_2853 -> m14_2850  [color=blue, key=0, style=bold];
m14_3757 -> m14_3758  [color=red, key=0, style=solid];
m14_3758 -> m14_3759  [color=red, key=0, style=solid];
m14_3758 -> m14_3750  [color=red, key=2, style=dotted];
m14_3759 -> m14_3757  [color=blue, key=0, style=bold];
m14_3561 -> m14_3562  [key=0, style=solid];
m14_3562 -> m14_3563  [key=0, style=solid];
m14_3562 -> m14_3569  [key=2, style=dotted];
m14_3562 -> m14_3565  [color=darkseagreen4, key=1, label=s1, style=dashed];
m14_3562 -> m14_3566  [color=darkseagreen4, key=1, label=s1, style=dashed];
m14_3563 -> m14_3564  [key=0, style=solid];
m14_3563 -> m14_9  [key=2, style=dotted];
m14_3565 -> m14_3566  [key=0, style=solid];
m14_3565 -> m14_10  [key=2, style=dotted];
m14_3566 -> m14_3567  [key=0, style=solid];
m14_3566 -> m14_3568  [key=0, style=solid];
m14_3564 -> m14_3565  [key=0, style=solid];
m14_3564 -> m14_11  [key=2, style=dotted];
m14_3564 -> m14_3567  [color=darkseagreen4, key=1, label=s2, style=dashed];
m14_3567 -> m14_3566  [key=0, style=solid];
m14_3567 -> m14_2075  [key=2, style=dotted];
m14_3567 -> m14_49  [key=2, style=dotted];
m14_3568 -> m14_3561  [color=blue, key=0, style=bold];
m14_1029 -> m14_1030  [key=0, style=solid];
m14_1030 -> m14_1031  [key=0, style=solid];
m14_1030 -> m14_1030  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_1031 -> m14_1032  [key=0, style=solid];
m14_1031 -> m14_490  [key=2, style=dotted];
m14_1032 -> m14_1033  [key=0, style=solid];
m14_1032 -> m14_1032  [color=darkorchid, key=3, label="Local variable string s", style=bold];
m14_1033 -> m14_1034  [key=0, style=solid];
m14_1033 -> m14_1033  [color=darkseagreen4, key=1, label=s, style=dashed];
m14_1034 -> m14_1029  [color=blue, key=0, style=bold];
m14_3778 -> m14_3779  [color=red, key=0, style=solid];
m14_3779 -> m14_3780  [color=red, key=0, style=solid];
m14_3779 -> m14_3750  [color=red, key=2, style=dotted];
m14_3780 -> m14_3778  [color=blue, key=0, style=bold];
m14_1988 -> m14_1989  [key=0, style=solid];
m14_1989 -> m14_1990  [key=0, style=solid];
m14_1989 -> m14_11  [key=2, style=dotted];
m14_1990 -> m14_1991  [key=0, style=solid];
m14_1990 -> m14_1402  [key=2, style=dotted];
m14_1990 -> m14_10  [key=2, style=dotted];
m14_1991 -> m14_1992  [key=0, style=solid];
m14_1991 -> m14_11  [key=2, style=dotted];
m14_1992 -> m14_1993  [key=0, style=solid];
m14_1992 -> m14_1402  [key=2, style=dotted];
m14_1992 -> m14_10  [key=2, style=dotted];
m14_1993 -> m14_1988  [color=blue, key=0, style=bold];
m14_3546 -> m14_3547  [key=0, style=solid];
m14_3547 -> m14_3548  [key=0, style=solid];
m14_3547 -> m14_210  [key=2, style=dotted];
m14_3547 -> m14_1105  [key=2, style=dotted];
m14_3547 -> m14_406  [key=2, style=dotted];
m14_3547 -> m14_1113  [key=2, style=dotted];
m14_3547 -> m14_3549  [color=darkseagreen4, key=1, label=dates, style=dashed];
m14_3548 -> m14_3549  [key=0, style=solid];
m14_3548 -> m14_61  [key=2, style=dotted];
m14_3548 -> m14_3550  [color=darkseagreen4, key=1, label=expected, style=dashed];
m14_3549 -> m14_3550  [key=0, style=solid];
m14_3549 -> m14_196  [key=2, style=dotted];
m14_3549 -> m14_212  [key=2, style=dotted];
m14_3550 -> m14_3551  [key=0, style=solid];
m14_3550 -> m14_10  [key=2, style=dotted];
m14_3551 -> m14_3546  [color=blue, key=0, style=bold];
m14_3184 -> m14_3185  [key=0, style=solid];
m14_3185 -> m14_3186  [key=0, style=solid];
m14_3185 -> m14_210  [key=2, style=dotted];
m14_3185 -> m14_406  [key=2, style=dotted];
m14_3186 -> m14_3187  [key=0, style=solid];
m14_3186 -> m14_196  [key=2, style=dotted];
m14_3186 -> m14_212  [key=2, style=dotted];
m14_3186 -> m14_3188  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_3187 -> m14_3188  [key=0, style=solid];
m14_3187 -> m14_62  [key=2, style=dotted];
m14_3188 -> m14_3189  [key=0, style=solid];
m14_3188 -> m14_11  [key=2, style=dotted];
m14_3188 -> m14_3190  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m14_3188 -> m14_3191  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m14_3189 -> m14_3190  [key=0, style=solid];
m14_3189 -> m14_10  [key=2, style=dotted];
m14_3190 -> m14_3191  [key=0, style=solid];
m14_3190 -> m14_406  [key=2, style=dotted];
m14_3190 -> m14_10  [key=2, style=dotted];
m14_3191 -> m14_3192  [key=0, style=solid];
m14_3191 -> m14_406  [key=2, style=dotted];
m14_3191 -> m14_10  [key=2, style=dotted];
m14_3192 -> m14_3184  [color=blue, key=0, style=bold];
m14_21 -> m14_22  [key=0, style=solid];
m14_22 -> m14_23  [key=0, style=solid];
m14_22 -> m14_11  [key=2, style=dotted];
m14_23 -> m14_24  [key=0, style=solid];
m14_23 -> m14_10  [key=2, style=dotted];
m14_23 -> m14_23  [color=darkseagreen4, key=1, label=result, style=dashed];
m14_24 -> m14_25  [key=0, style=solid];
m14_24 -> m14_10  [key=2, style=dotted];
m14_24 -> m14_24  [color=darkseagreen4, key=1, label=result, style=dashed];
m14_25 -> m14_21  [color=blue, key=0, style=bold];
m14_92 -> m14_93  [key=0, style=solid];
m14_93 -> m14_94  [key=0, style=solid];
m14_93 -> m14_88  [key=2, style=dotted];
m14_93 -> m14_95  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_94 -> m14_92  [color=blue, key=0, style=bold];
m14_1008 -> m14_1009  [key=0, style=solid];
m14_1009 -> m14_1010  [key=0, style=solid];
m14_1009 -> m14_1014  [key=2, style=dotted];
m14_1009 -> m14_9  [key=2, style=dotted];
m14_1010 -> m14_1011  [key=0, style=solid];
m14_1010 -> m14_11  [key=2, style=dotted];
m14_1010 -> m14_1012  [color=darkseagreen4, key=1, label=c, style=dashed];
m14_1011 -> m14_1012  [key=0, style=solid];
m14_1011 -> m14_10  [key=2, style=dotted];
m14_1012 -> m14_1013  [key=0, style=solid];
m14_1012 -> m14_10  [key=2, style=dotted];
m14_1013 -> m14_1008  [color=blue, key=0, style=bold];
m14_1142 -> m14_1143  [key=0, style=solid];
m14_1143 -> m14_1144  [key=0, style=solid];
m14_1143 -> m14_957  [key=2, style=dotted];
m14_1143 -> m14_1150  [color=darkseagreen4, key=1, label=d, style=dashed];
m14_1144 -> m14_1145  [key=0, style=solid];
m14_1144 -> m14_1147  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m14_1144 -> m14_1149  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m14_1150 -> m14_1151  [key=0, style=solid];
m14_1150 -> m14_10  [key=2, style=dotted];
m14_1145 -> m14_1146  [key=0, style=solid];
m14_1145 -> m14_196  [key=2, style=dotted];
m14_1145 -> m14_1147  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_1145 -> m14_1149  [color=darkseagreen4, key=1, label=settings, style=dashed];
m14_1147 -> m14_1148  [key=0, style=solid];
m14_1147 -> m14_197  [key=2, style=dotted];
m14_1147 -> m14_1149  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_1149 -> m14_1150  [key=0, style=solid];
m14_1149 -> m14_1153  [key=2, style=dotted];
m14_1149 -> m14_1149  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m14_1146 -> m14_1147  [key=0, style=solid];
m14_1146 -> m14_1152  [key=2, style=dotted];
m14_1146 -> m14_354  [key=2, style=dotted];
m14_1148 -> m14_1149  [key=0, style=solid];
m14_1148 -> m14_10  [key=2, style=dotted];
m14_1151 -> m14_1142  [color=blue, key=0, style=bold];
m14_2588 -> m14_2589  [key=0, style=solid];
m14_2589 -> m14_2590  [key=0, style=solid];
m14_2589 -> m14_2591  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_2589 -> m14_2589  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_2590 -> m14_2591  [key=0, style=solid];
m14_2590 -> m14_11  [key=2, style=dotted];
m14_2590 -> m14_2592  [color=darkseagreen4, key=1, label=withoutParameterisedConstructor, style=dashed];
m14_2591 -> m14_2592  [key=0, style=solid];
m14_2591 -> m14_11  [key=2, style=dotted];
m14_2592 -> m14_2593  [key=0, style=solid];
m14_2592 -> m14_10  [key=2, style=dotted];
m14_2593 -> m14_2588  [color=blue, key=0, style=bold];
m14_3083 -> m14_3084  [key=0, style=solid];
m14_3084 -> m14_3085  [key=0, style=solid];
m14_3084 -> m14_300  [key=2, style=dotted];
m14_3084 -> m14_3091  [color=darkseagreen4, key=1, label=values, style=dashed];
m14_3084 -> m14_3092  [color=darkseagreen4, key=1, label=values, style=dashed];
m14_3084 -> m14_3093  [color=darkseagreen4, key=1, label=values, style=dashed];
m14_3084 -> m14_3094  [color=darkseagreen4, key=1, label=values, style=dashed];
m14_3085 -> m14_3086  [key=0, style=solid];
m14_3085 -> m14_43  [key=2, style=dotted];
m14_3085 -> m14_403  [key=2, style=dotted];
m14_3085 -> m14_3088  [color=darkseagreen4, key=1, label=reader, style=dashed];
m14_3085 -> m14_3090  [color=darkseagreen4, key=1, label=reader, style=dashed];
m14_3091 -> m14_3087  [key=0, style=solid];
m14_3091 -> m14_354  [key=2, style=dotted];
m14_3092 -> m14_3093  [key=0, style=solid];
m14_3092 -> m14_10  [key=2, style=dotted];
m14_3093 -> m14_3094  [key=0, style=solid];
m14_3093 -> m14_10  [key=2, style=dotted];
m14_3094 -> m14_3095  [key=0, style=solid];
m14_3094 -> m14_10  [key=2, style=dotted];
m14_3086 -> m14_3087  [key=0, style=solid];
m14_3088 -> m14_3089  [key=0, style=solid];
m14_3088 -> m14_3092  [key=0, style=solid];
m14_3088 -> d10  [key=2, style=dotted];
m14_3090 -> m14_3091  [key=0, style=solid];
m14_3090 -> m14_47  [key=2, style=dotted];
m14_3087 -> m14_3088  [key=0, style=solid];
m14_3087 -> m14_3092  [key=0, style=solid];
m14_3089 -> m14_3090  [key=0, style=solid];
m14_3089 -> m14_46  [key=2, style=dotted];
m14_3095 -> m14_3083  [color=blue, key=0, style=bold];
m14_333 -> m14_334  [key=0, style=solid];
m14_334 -> m14_335  [key=0, style=solid];
m14_334 -> m14_329  [key=2, style=dotted];
m14_334 -> m14_341  [key=2, style=dotted];
m14_335 -> m14_336  [key=0, style=solid];
m14_335 -> m14_61  [key=2, style=dotted];
m14_335 -> m14_337  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_336 -> m14_337  [key=0, style=solid];
m14_336 -> m14_62  [key=2, style=dotted];
m14_337 -> m14_338  [key=0, style=solid];
m14_337 -> m14_11  [key=2, style=dotted];
m14_337 -> m14_339  [color=darkseagreen4, key=1, label=c2, style=dashed];
m14_338 -> m14_339  [key=0, style=solid];
m14_338 -> m14_10  [key=2, style=dotted];
m14_339 -> m14_340  [key=0, style=solid];
m14_339 -> m14_10  [key=2, style=dotted];
m14_340 -> m14_333  [color=blue, key=0, style=bold];
m14_3310 -> m14_3311  [key=0, style=solid];
m14_3311 -> m14_3312  [key=0, style=solid];
m14_3311 -> m14_3311  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_3312 -> m14_3313  [key=0, style=solid];
m14_3312 -> m14_11  [key=2, style=dotted];
m14_3312 -> m14_3314  [color=darkseagreen4, key=1, label=exception, style=dashed];
m14_3312 -> m14_3315  [color=darkseagreen4, key=1, label=exception, style=dashed];
m14_3313 -> m14_3314  [key=0, style=solid];
m14_3313 -> m14_812  [key=2, style=dotted];
m14_3314 -> m14_3315  [key=0, style=solid];
m14_3314 -> m14_761  [key=2, style=dotted];
m14_3315 -> m14_3316  [key=0, style=solid];
m14_3315 -> m14_10  [key=2, style=dotted];
m14_3316 -> m14_3310  [color=blue, key=0, style=bold];
m14_437 -> m14_438  [key=0, style=solid];
m14_438 -> m14_439  [key=0, style=solid];
m14_438 -> m14_445  [key=2, style=dotted];
m14_438 -> m14_441  [color=darkseagreen4, key=1, label=input, style=dashed];
m14_438 -> m14_442  [color=darkseagreen4, key=1, label=input, style=dashed];
m14_438 -> m14_443  [color=darkseagreen4, key=1, label=input, style=dashed];
m14_439 -> m14_440  [key=0, style=solid];
m14_439 -> m14_9  [key=2, style=dotted];
m14_441 -> m14_442  [key=0, style=solid];
m14_441 -> m14_10  [key=2, style=dotted];
m14_442 -> m14_443  [key=0, style=solid];
m14_442 -> m14_10  [key=2, style=dotted];
m14_443 -> m14_444  [key=0, style=solid];
m14_443 -> m14_10  [key=2, style=dotted];
m14_440 -> m14_441  [key=0, style=solid];
m14_440 -> m14_11  [key=2, style=dotted];
m14_440 -> m14_442  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m14_440 -> m14_443  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m14_444 -> m14_437  [color=blue, key=0, style=bold];
m14_1974 -> m14_1975  [key=0, style=solid];
m14_1975 -> m14_1976  [key=0, style=solid];
m14_1975 -> m14_1984  [key=2, style=dotted];
m14_1975 -> m14_1977  [color=darkseagreen4, key=1, label=g, style=dashed];
m14_1975 -> m14_1978  [color=darkseagreen4, key=1, label=g, style=dashed];
m14_1975 -> m14_1979  [color=darkseagreen4, key=1, label=g, style=dashed];
m14_1976 -> m14_1977  [key=0, style=solid];
m14_1976 -> m14_1985  [key=2, style=dotted];
m14_1976 -> m14_1986  [key=2, style=dotted];
m14_1977 -> m14_1978  [key=0, style=solid];
m14_1977 -> m14_1985  [key=2, style=dotted];
m14_1977 -> m14_1986  [key=2, style=dotted];
m14_1978 -> m14_1979  [key=0, style=solid];
m14_1979 -> m14_1980  [key=0, style=solid];
m14_1979 -> m14_1987  [key=2, style=dotted];
m14_1979 -> m14_1981  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_1980 -> m14_1981  [key=0, style=solid];
m14_1980 -> m14_62  [key=2, style=dotted];
m14_1981 -> m14_1982  [key=0, style=solid];
m14_1981 -> m14_11  [key=2, style=dotted];
m14_1982 -> m14_1983  [key=0, style=solid];
m14_1982 -> m14_10  [key=2, style=dotted];
m14_1983 -> m14_1974  [color=blue, key=0, style=bold];
m14_1375 -> m14_1376  [key=0, style=solid];
m14_1376 -> m14_1377  [key=0, style=solid];
m14_1376 -> m14_1379  [key=2, style=dotted];
m14_1376 -> m14_9  [key=2, style=dotted];
m14_1377 -> m14_1378  [key=0, style=solid];
m14_1377 -> m14_10  [key=2, style=dotted];
m14_1378 -> m14_1375  [color=blue, key=0, style=bold];
m14_3582 -> m14_3583  [key=0, style=solid];
m14_3583 -> m14_3584  [key=0, style=solid];
m14_3583 -> m14_2228  [key=2, style=dotted];
m14_3584 -> m14_3585  [key=0, style=solid];
m14_3584 -> m14_61  [key=2, style=dotted];
m14_3585 -> m14_3586  [key=0, style=solid];
m14_3585 -> m14_62  [key=2, style=dotted];
m14_3586 -> m14_3582  [color=blue, key=0, style=bold];
m14_413 -> m14_414  [key=0, style=solid];
m14_414 -> m14_415  [key=0, style=solid];
m14_414 -> m14_418  [key=2, style=dotted];
m14_414 -> m14_9  [key=2, style=dotted];
m14_414 -> m14_10  [key=2, style=dotted];
m14_415 -> m14_416  [key=0, style=solid];
m14_415 -> m14_11  [key=2, style=dotted];
m14_416 -> m14_417  [key=0, style=solid];
m14_416 -> m14_10  [key=2, style=dotted];
m14_417 -> m14_413  [color=blue, key=0, style=bold];
m14_1846 -> m14_1847  [key=0, style=solid];
m14_1847 -> m14_1848  [key=0, style=solid];
m14_1847 -> m14_1093  [key=2, style=dotted];
m14_1847 -> m14_1849  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_1848 -> m14_1846  [color=blue, key=0, style=bold];
m14_1045 -> m14_1046  [key=0, style=solid];
m14_1046 -> m14_1047  [key=0, style=solid];
m14_1046 -> m14_1055  [key=2, style=dotted];
m14_1046 -> m14_1048  [color=darkseagreen4, key=1, label=test, style=dashed];
m14_1046 -> m14_1049  [color=darkseagreen4, key=1, label=test, style=dashed];
m14_1046 -> m14_1052  [color=darkseagreen4, key=1, label=test, style=dashed];
m14_1046 -> m14_1053  [color=darkseagreen4, key=1, label=test, style=dashed];
m14_1047 -> m14_1048  [key=0, style=solid];
m14_1048 -> m14_1049  [key=0, style=solid];
m14_1049 -> m14_1050  [key=0, style=solid];
m14_1049 -> m14_9  [key=2, style=dotted];
m14_1049 -> m14_1051  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m14_1052 -> m14_1053  [key=0, style=solid];
m14_1052 -> m14_10  [key=2, style=dotted];
m14_1053 -> m14_1054  [key=0, style=solid];
m14_1053 -> m14_10  [key=2, style=dotted];
m14_1050 -> m14_1051  [key=0, style=solid];
m14_1050 -> m14_10  [key=2, style=dotted];
m14_1051 -> m14_1052  [key=0, style=solid];
m14_1051 -> m14_11  [key=2, style=dotted];
m14_1051 -> m14_1053  [color=darkseagreen4, key=1, label=test2, style=dashed];
m14_1054 -> m14_1045  [color=blue, key=0, style=bold];
m14_2999 -> m14_3000  [key=0, style=solid];
m14_3000 -> m14_3001  [key=0, style=solid];
m14_3000 -> m14_11  [key=2, style=dotted];
m14_3001 -> m14_3002  [key=0, style=solid];
m14_3001 -> m14_173  [key=2, style=dotted];
m14_3002 -> m14_2999  [color=blue, key=0, style=bold];
m14_2621 -> m14_2622  [key=0, style=solid];
m14_2622 -> m14_2623  [key=0, style=solid];
m14_2622 -> m14_2626  [key=2, style=dotted];
m14_2623 -> m14_2624  [key=0, style=solid];
m14_2623 -> m14_9  [key=2, style=dotted];
m14_2624 -> m14_2625  [key=0, style=solid];
m14_2624 -> m14_10  [key=2, style=dotted];
m14_2625 -> m14_2621  [color=blue, key=0, style=bold];
m14_2864 -> m14_2865  [key=0, style=solid];
m14_2865 -> m14_2866  [color=red, key=0, style=solid];
m14_2865 -> m14_2869  [color=red, key=1, label=json, style=dashed];
m14_2865 -> m14_2860  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m14_2866 -> m14_2867  [color=red, key=0, style=solid];
m14_2866 -> m14_88  [color=red, key=2, style=dotted];
m14_2866 -> m14_2868  [color=red, key=1, label="lambda expression", style=dashed];
m14_2867 -> m14_2864  [color=blue, key=0, style=bold];
m14_2677 -> m14_2678  [key=0, style=solid];
m14_2678 -> m14_2679  [key=0, style=solid];
m14_2678 -> m14_11  [key=2, style=dotted];
m14_2678 -> m14_2680  [color=darkseagreen4, key=1, label=r, style=dashed];
m14_2678 -> m14_2681  [color=darkseagreen4, key=1, label=r, style=dashed];
m14_2678 -> m14_2682  [color=darkseagreen4, key=1, label=r, style=dashed];
m14_2678 -> m14_2683  [color=darkseagreen4, key=1, label=r, style=dashed];
m14_2679 -> m14_2680  [key=0, style=solid];
m14_2679 -> m14_405  [key=2, style=dotted];
m14_2679 -> m14_10  [key=2, style=dotted];
m14_2680 -> m14_2681  [key=0, style=solid];
m14_2680 -> m14_491  [key=2, style=dotted];
m14_2680 -> m14_10  [key=2, style=dotted];
m14_2681 -> m14_2682  [key=0, style=solid];
m14_2681 -> m14_1668  [key=2, style=dotted];
m14_2681 -> m14_812  [key=2, style=dotted];
m14_2682 -> m14_2683  [key=0, style=solid];
m14_2682 -> m14_1668  [key=2, style=dotted];
m14_2682 -> m14_812  [key=2, style=dotted];
m14_2683 -> m14_2684  [key=0, style=solid];
m14_2683 -> m14_1668  [key=2, style=dotted];
m14_2683 -> m14_173  [key=2, style=dotted];
m14_2684 -> m14_2677  [color=blue, key=0, style=bold];
m14_4075 -> m14_264  [color=darkseagreen4, key=1, label=c1, style=dashed];
m14_4076 -> m14_284  [color=darkseagreen4, key=1, label=c1, style=dashed];
m14_4078 -> m14_330  [color=red, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem", style=dashed];
m14_4079 -> m14_469  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_4080 -> m14_650  [color=darkseagreen4, key=1, label=referenceResolver, style=dashed];
m14_4081 -> m14_869  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest", style=dashed];
m14_4081 -> m14_890  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest", style=dashed];
m14_4081 -> m14_900  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest", style=dashed];
m14_4081 -> m14_3230  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest", style=dashed];
m14_4081 -> m14_3231  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest", style=dashed];
m14_4082 -> m14_1068  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_4083 -> m14_1509  [color=darkseagreen4, key=1, label=strFromTest, style=dashed];
m14_4084 -> m14_1741  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_4085 -> m14_1768  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_4086 -> m14_1775  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_4087 -> m14_1782  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_4088 -> m14_1789  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_4089 -> m14_1796  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_4090 -> m14_1803  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_4091 -> m14_1810  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_4092 -> m14_1817  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_4093 -> m14_1831  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_4094 -> m14_1839  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_4095 -> m14_2007  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_4096 -> m14_2058  [color=red, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m14_4096 -> m14_2063  [color=red, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m14_4096 -> m14_2066  [color=red, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m14_4096 -> m14_2069  [color=red, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m14_4096 -> m14_2073  [color=red, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m14_4096 -> m14_2077  [color=red, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m14_4096 -> m14_2081  [color=red, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m14_4096 -> m14_2085  [color=red, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m14_4096 -> m14_2092  [color=red, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m14_4096 -> m14_2095  [color=red, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m14_4096 -> m14_2099  [color=red, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m14_4096 -> m14_2103  [color=red, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m14_4096 -> m14_2107  [color=red, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m14_4097 -> m14_2161  [color=red, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>", style=dashed];
m14_4097 -> m14_2162  [color=red, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>", style=dashed];
m14_4098 -> m14_2266  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_4099 -> m14_2369  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_4101 -> m14_2490  [color=red, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable", style=dashed];
m14_4102 -> m14_2855  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_4103 -> m14_2869  [color=red, key=1, label=json, style=dashed];
m14_4104 -> m14_3128  [color=darkseagreen4, key=1, label=errors, style=dashed];
m14_4105 -> m14_3143  [color=darkseagreen4, key=1, label=errors, style=dashed];
m14_4106 -> m14_3158  [color=darkseagreen4, key=1, label=errors, style=dashed];
m14_4107 -> m14_3283  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_4108 -> m14_3283  [color=darkseagreen4, key=1, label=s, style=dashed];
m14_4109 -> m14_3308  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_4110 -> m14_3308  [color=darkseagreen4, key=1, label=s, style=dashed];
m14_4111 -> m14_3353  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m14_4112 -> m14_3353  [color=darkseagreen4, key=1, label=reader, style=dashed];
m14_4113 -> m14_3421  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_4114 -> m14_3520  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_4116 -> m14_3631  [color=red, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter", style=dashed];
m14_4116 -> m14_3635  [color=red, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter", style=dashed];
m14_4116 -> m14_3641  [color=red, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter", style=dashed];
m14_4116 -> m14_3678  [color=red, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter", style=dashed];
m14_4117 -> m14_3741  [color=red, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId", style=dashed];
m14_4117 -> m14_3743  [color=red, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId", style=dashed];
m14_4117 -> m14_3745  [color=red, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId", style=dashed];
m14_4117 -> m14_3747  [color=red, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId", style=dashed];
m14_4117 -> m14_3770  [color=red, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId", style=dashed];
m14_4117 -> m14_3773  [color=red, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId", style=dashed];
m14_4117 -> m14_3776  [color=red, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId", style=dashed];
m14_4118 -> m14_3960  [color=darkseagreen4, key=1, label=JsonMessage, style=dashed];
m14_4119 -> m14_4021  [color=darkseagreen4, key=1, label=s, style=dashed];
m15_0 -> m15_1  [key=0, style=solid];
m15_1 -> m15_2  [key=0, style=solid];
m15_1 -> m15_3  [color=darkseagreen4, key=1, label=xml, style=dashed];
m15_1 -> m15_1  [color=darkorchid, key=3, label="Local variable string xml", style=bold];
m15_2 -> m15_3  [key=0, style=solid];
m15_2 -> m15_12  [key=2, style=dotted];
m15_2 -> m15_4  [color=darkseagreen4, key=1, label=doc, style=dashed];
m15_3 -> m15_4  [key=0, style=solid];
m15_3 -> m15_13  [key=2, style=dotted];
m15_4 -> m15_5  [key=0, style=solid];
m15_4 -> m15_14  [key=2, style=dotted];
m15_5 -> m15_6  [key=0, style=solid];
m15_5 -> m15_15  [key=2, style=dotted];
m15_6 -> m15_7  [key=0, style=solid];
m15_6 -> m15_8  [color=darkseagreen4, key=1, label=xml, style=dashed];
m15_7 -> m15_8  [key=0, style=solid];
m15_7 -> m15_12  [key=2, style=dotted];
m15_7 -> m15_9  [color=darkseagreen4, key=1, label=doc, style=dashed];
m15_8 -> m15_9  [key=0, style=solid];
m15_8 -> m15_13  [key=2, style=dotted];
m15_9 -> m15_10  [key=0, style=solid];
m15_9 -> m15_14  [key=2, style=dotted];
m15_10 -> m15_11  [key=0, style=solid];
m15_10 -> m15_15  [key=2, style=dotted];
m15_11 -> m15_0  [color=blue, key=0, style=bold];
m17_0 -> m17_1  [color=green, key=0, style=solid];
m17_0 -> m17_2  [color=green, key=1, label=TValue, style=dashed];
m17_1 -> m17_2  [color=green, key=0, style=solid];
m17_2 -> m17_3  [color=green, key=0, style=solid];
m17_3 -> m17_0  [color=blue, key=0, style=bold];
m17_4 -> m17_1  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.KVPair<TKey, TValue>", style=dashed];
m17_4 -> m17_2  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.KVPair<TKey, TValue>", style=dashed];
m18_3 -> m18_4  [color=green, key=0, style=solid];
m18_3 -> m18_6  [color=green, key=3, label="method methodReturn object ReadJson", style=bold];
m18_4 -> m18_5  [color=green, key=0, style=solid];
m18_4 -> m18_14  [color=green, key=2, style=dotted];
m18_4 -> m18_7  [color=green, key=1, label=messageJObject, style=dashed];
m18_4 -> m18_10  [color=green, key=1, label=messageJObject, style=dashed];
m18_5 -> m18_6  [color=green, key=0, style=solid];
m18_5 -> m18_7  [color=green, key=0, style=solid];
m18_7 -> m18_8  [color=green, key=0, style=solid];
m18_7 -> m18_15  [color=green, key=2, style=dotted];
m18_7 -> m18_16  [color=green, key=2, style=dotted];
m18_7 -> m18_11  [color=green, key=1, label=address, style=dashed];
m18_7 -> m18_12  [color=green, key=1, label=address, style=dashed];
m18_10 -> m18_10  [color=green, key=1, label=displayNameToken, style=dashed];
m18_10 -> m18_11  [color=green, key=0, style=solid];
m18_10 -> m18_12  [color=green, key=0, style=solid];
m18_10 -> m18_17  [color=green, key=2, style=dotted];
m18_10 -> m18_16  [color=green, key=2, style=dotted];
m18_10 -> m18_18  [color=green, key=2, style=dotted];
m18_6 -> m18_13  [color=green, key=0, style=solid];
m18_8 -> m18_10  [color=green, key=1, label=displayNameToken, style=dashed];
m18_8 -> m18_9  [color=green, key=0, style=solid];
m18_11 -> m18_13  [color=green, key=0, style=solid];
m18_11 -> m18_19  [color=green, key=2, style=dotted];
m18_12 -> m18_13  [color=green, key=0, style=solid];
m18_12 -> m18_20  [color=green, key=2, style=dotted];
m18_9 -> m18_10  [color=green, key=0, style=solid];
m18_13 -> m18_3  [color=blue, key=0, style=bold];
m18_0 -> m18_1  [color=green, key=0, style=solid];
m18_1 -> m18_2  [color=green, key=0, style=solid];
m18_2 -> m18_0  [color=blue, key=0, style=bold];
m18_21 -> m18_22  [color=green, key=0, style=solid];
m18_22 -> m18_23  [color=green, key=0, style=solid];
m18_22 -> m18_24  [color=green, key=2, style=dotted];
m18_23 -> m18_21  [color=blue, key=0, style=bold];
m19_9 -> m19_10  [color=green, key=0, style=solid];
m19_10 -> m19_11  [color=green, key=0, style=solid];
m19_10 -> m19_12  [color=green, key=2, style=dotted];
m19_10 -> m19_13  [color=green, key=2, style=dotted];
m19_11 -> m19_9  [color=blue, key=0, style=bold];
m19_14 -> m19_15  [color=green, key=0, style=solid];
m19_15 -> m19_16  [color=green, key=0, style=solid];
m19_16 -> m19_14  [color=blue, key=0, style=bold];
m19_0 -> m19_1  [color=green, key=0, style=solid];
m19_0 -> m19_3  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m19_1 -> m19_2  [color=green, key=0, style=solid];
m19_2 -> m19_3  [color=green, key=0, style=solid];
m19_3 -> m19_4  [color=green, key=0, style=solid];
m19_3 -> m19_5  [color=green, key=2, style=dotted];
m19_3 -> m19_6  [color=green, key=2, style=dotted];
m19_3 -> m19_7  [color=green, key=2, style=dotted];
m19_3 -> m19_8  [color=green, key=2, style=dotted];
m19_4 -> m19_0  [color=blue, key=0, style=bold];
m27_0 -> m27_1  [color=green, key=0, style=solid];
m27_0 -> m27_2  [color=green, key=1, label=TSecond, style=dashed];
m27_1 -> m27_2  [color=green, key=0, style=solid];
m27_2 -> m27_3  [color=green, key=0, style=solid];
m27_3 -> m27_0  [color=blue, key=0, style=bold];
m28_0 -> m28_1  [color=green, key=0, style=solid];
m28_1 -> m28_2  [color=green, key=0, style=solid];
m28_1 -> m28_3  [color=green, key=2, style=dotted];
m28_2 -> m28_0  [color=blue, key=0, style=bold];
m29_0 -> m29_1  [color=green, key=0, style=solid];
m29_1 -> m29_2  [color=green, key=0, style=solid];
m29_2 -> m29_0  [color=blue, key=0, style=bold];
m31_0 -> m31_1  [color=green, key=0, style=solid];
m31_1 -> m31_2  [color=green, key=0, style=solid];
m31_1 -> m31_3  [color=green, key=2, style=dotted];
m31_1 -> m31_8  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.StructISerializable", style=dashed];
m31_2 -> m31_0  [color=blue, key=0, style=bold];
m31_4 -> m31_5  [color=green, key=0, style=solid];
m31_5 -> m31_6  [color=green, key=0, style=solid];
m31_5 -> m31_7  [color=green, key=2, style=dotted];
m31_6 -> m31_4  [color=blue, key=0, style=bold];
m31_9 -> m31_5  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.StructISerializable", style=dashed];
m34_0 -> m34_1  [color=green, key=0, style=solid];
m34_1 -> m34_2  [color=green, key=0, style=solid];
m34_1 -> m34_7  [color=green, key=2, style=dotted];
m34_1 -> m34_4  [color=green, key=1, label=o, style=dashed];
m34_2 -> m34_3  [color=green, key=0, style=solid];
m34_2 -> m34_4  [color=green, key=0, style=solid];
m34_2 -> m34_8  [color=green, key=2, style=dotted];
m34_4 -> m34_5  [color=green, key=0, style=solid];
m34_4 -> m34_6  [color=green, key=0, style=solid];
m34_3 -> m34_2  [color=green, key=0, style=solid];
m34_3 -> m34_9  [color=green, key=2, style=dotted];
m34_5 -> m34_4  [color=green, key=0, style=solid];
m34_5 -> m34_5  [color=green, key=1, label=property, style=dashed];
m34_5 -> m34_9  [color=green, key=2, style=dotted];
m34_6 -> m34_0  [color=blue, key=0, style=bold];
}
