digraph  {
m1_246 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessType(Newtonsoft.Json.Linq.JToken)", file="JTokenReaderTest.cs", label="Exit Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessType(Newtonsoft.Json.Linq.JToken)", span="408-408"];
m1_227 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessItems(Newtonsoft.Json.Linq.JToken)", file="JTokenReaderTest.cs", label="CurrentSchema.Items.Add(BuildSchema(token))", span="393-393"];
m1_198 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessExtends(Newtonsoft.Json.Linq.JToken)", file="JTokenReaderTest.cs", label="CurrentSchema.Extends = schemas", span="336-336"];
m1_72 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ResolveReferences(Newtonsoft.Json.Schema.JsonSchema)", file="JTokenReaderTest.cs", label="int i = 0", span="158-158"];
m1_117 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadLineInfo()", file="JTokenReaderTest.cs", label="string input = @''{\r\n  CPU: 'Intel',\r\n  Drives: [\r\n    'DVD read/writer',\r\n    ''''500 gigabyte hard drive''''\r\n  ]\r\n}''", span="202-208"];
m1_4 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.JsonSchemaBuilder(Newtonsoft.Json.Schema.JsonSchemaResolver)", file="JTokenReaderTest.cs", label="Exit Newtonsoft.Json.Schema.JsonSchemaBuilder.JsonSchemaBuilder(Newtonsoft.Json.Schema.JsonSchemaResolver)", span="46-46"];
m1_88 [cluster="lambda expression", file="JTokenReaderTest.cs", label="Exit lambda expression", span="156-156"];
m1_14 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", file="JTokenReaderTest.cs", label="JObject o =\r\n                new JObject(\r\n                    new JProperty(''Test1'', new DateTime(2000, 10, 15, 5, 5, 5, DateTimeKind.Utc)),\r\n                    new JProperty(''Test2'', new DateTimeOffset(2000, 10, 15, 5, 5, 5, new TimeSpan(11, 11, 0))),\r\n                    new JProperty(''Test3'', ''Test3Value''),\r\n                    new JProperty(''Test4'', null)\r\n                    )", span="67-73"];
m1_229 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessItems(Newtonsoft.Json.Linq.JToken)", file="JTokenReaderTest.cs", label="JTokenType.Array", span="396-396"];
m1_235 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessType(Newtonsoft.Json.Linq.JToken)", file="JTokenReaderTest.cs", label="token.Type", span="410-410"];
m1_234 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessItems(Newtonsoft.Json.Linq.JToken)", file="JTokenReaderTest.cs", label="Exit Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessItems(Newtonsoft.Json.Linq.JToken)", span="386-386"];
m1_236 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessType(Newtonsoft.Json.Linq.JToken)", file="JTokenReaderTest.cs", label="JTokenType.Array", span="412-412"];
m1_237 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessType(Newtonsoft.Json.Linq.JToken)", file="JTokenReaderTest.cs", label="JsonSchemaType? type = JsonSchemaType.None", span="414-414"];
m1_232 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessItems(Newtonsoft.Json.Linq.JToken)", file="JTokenReaderTest.cs", label="CurrentSchema.Items.Add(BuildSchema(schemaToken))", span="400-400"];
m1_233 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessItems(Newtonsoft.Json.Linq.JToken)", file="JTokenReaderTest.cs", label="throw JsonException.Create(token, token.Path, ''Expected array or JSON schema object, got {0}.''.FormatWith(CultureInfo.InvariantCulture, token.Type));", span="404-404"];
m1_231 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessItems(Newtonsoft.Json.Linq.JToken)", file="JTokenReaderTest.cs", label=token, span="398-398"];
m1_230 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessItems(Newtonsoft.Json.Linq.JToken)", file="JTokenReaderTest.cs", label="CurrentSchema.PositionalItemsValidation = true", span="397-397"];
m1_238 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessType(Newtonsoft.Json.Linq.JToken)", file="JTokenReaderTest.cs", label=token, span="416-416"];
m1_182 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadBytes()", file="JTokenReaderTest.cs", label="JObject o =\r\n                new JObject(\r\n                    new JProperty(''Test1'', data)\r\n                    )", span="292-295"];
m1_240 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsBytesNull()", file="JTokenReaderTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsBytesNull()", span="390-390"];
m1_244 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsBytesNull()", file="JTokenReaderTest.cs", label="Assert.IsNull(x.Data)", span="396-396"];
m1_245 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsBytesNull()", file="JTokenReaderTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsBytesNull()", span="390-390"];
m1_243 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsBytesNull()", file="JTokenReaderTest.cs", label="ReadAsBytesTestObject x = s.Deserialize<ReadAsBytesTestObject>(new JTokenReader(nullToken))", span="395-395"];
m1_241 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsBytesNull()", file="JTokenReaderTest.cs", label="JsonSerializer s = new JsonSerializer()", span="392-392"];
m1_242 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsBytesNull()", file="JTokenReaderTest.cs", label="JToken nullToken = JToken.ReadFrom(new JsonTextReader(new StringReader(''{ Data: null }'')))", span="394-394"];
m1_239 [cluster="Unk.AreEquivalent", file="JTokenReaderTest.cs", label="Entry Unk.AreEquivalent", span=""];
m1_116 [cluster="Newtonsoft.Json.Linq.JObject.TryGetValue(string, out Newtonsoft.Json.Linq.JToken)", file="JTokenReaderTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.TryGetValue(string, out Newtonsoft.Json.Linq.JToken)", span="479-479"];
m1_168 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", color=green, community=0, file="JTokenReaderTest.cs", label="CurrentSchema.Hidden = (bool)property.Value", prediction=0, span="293-293"];
m1_121 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JTokenReaderTest.cs", label=schemaObject, span="222-222"];
m1_167 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JTokenReaderTest.cs", label="JsonSchemaConstants.HiddenPropertyName", span="292-292"];
m1_169 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", color=green, community=0, file="JTokenReaderTest.cs", label="JsonSchemaConstants.ReadOnlyPropertyName", prediction=1, span="295-295"];
m1_170 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", color=green, community=0, file="JTokenReaderTest.cs", label="CurrentSchema.ReadOnly = (bool)property.Value", prediction=2, span="296-296"];
m1_171 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JTokenReaderTest.cs", label="JsonSchemaConstants.FormatPropertyName", span="298-298"];
m1_173 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", color=green, community=0, file="JTokenReaderTest.cs", label="JsonSchemaConstants.PatternPropertyName", prediction=1, span="301-301"];
m1_172 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JTokenReaderTest.cs", label="CurrentSchema.Format = (string)property.Value", span="299-299"];
m1_174 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", color=green, community=0, file="JTokenReaderTest.cs", label="CurrentSchema.Pattern = (string)property.Value", prediction=4, span="302-302"];
m1_175 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", color=green, community=0, file="JTokenReaderTest.cs", label="JsonSchemaConstants.EnumPropertyName", prediction=1, span="304-304"];
m1_176 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JTokenReaderTest.cs", label="ProcessEnum(property.Value)", span="305-305"];
m1_120 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JTokenReaderTest.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", span="220-220"];
m1_122 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JTokenReaderTest.cs", label="property.Key", span="224-224"];
m1_123 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JTokenReaderTest.cs", label="JsonSchemaConstants.TypePropertyName", span="226-226"];
m1_124 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JTokenReaderTest.cs", label="CurrentSchema.Type = ProcessType(property.Value)", span="227-227"];
m1_125 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JTokenReaderTest.cs", label="JsonSchemaConstants.IdPropertyName", span="229-229"];
m1_128 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JTokenReaderTest.cs", label="CurrentSchema.Title = (string)property.Value", span="233-233"];
m1_129 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JTokenReaderTest.cs", label="JsonSchemaConstants.DescriptionPropertyName", span="235-235"];
m1_130 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JTokenReaderTest.cs", label="CurrentSchema.Description = (string)property.Value", span="236-236"];
m1_134 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JTokenReaderTest.cs", label="ProcessItems(property.Value)", span="242-242"];
m1_135 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JTokenReaderTest.cs", label="JsonSchemaConstants.AdditionalPropertiesPropertyName", span="244-244"];
m1_136 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JTokenReaderTest.cs", label="ProcessAdditionalProperties(property.Value)", span="245-245"];
m1_140 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JTokenReaderTest.cs", label="CurrentSchema.PatternProperties = ProcessProperties(property.Value)", span="251-251"];
m1_141 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JTokenReaderTest.cs", label="JsonSchemaConstants.RequiredPropertyName", span="253-253"];
m1_142 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JTokenReaderTest.cs", label="CurrentSchema.Required = (bool)property.Value", span="254-254"];
m1_146 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JTokenReaderTest.cs", label="CurrentSchema.Minimum = (double)property.Value", span="260-260"];
m1_147 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JTokenReaderTest.cs", label="JsonSchemaConstants.MaximumPropertyName", span="262-262"];
m1_148 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JTokenReaderTest.cs", label="CurrentSchema.Maximum = (double)property.Value", span="263-263"];
m1_151 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JTokenReaderTest.cs", label="JsonSchemaConstants.ExclusiveMaximumPropertyName", span="268-268"];
m1_152 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JTokenReaderTest.cs", label="CurrentSchema.ExclusiveMaximum = (bool)property.Value", span="269-269"];
m1_153 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JTokenReaderTest.cs", label="JsonSchemaConstants.MaximumLengthPropertyName", span="271-271"];
m1_157 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JTokenReaderTest.cs", label="JsonSchemaConstants.MaximumItemsPropertyName", span="277-277"];
m1_163 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JTokenReaderTest.cs", label="JsonSchemaConstants.DisallowPropertyName", span="286-286"];
m1_164 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JTokenReaderTest.cs", label="CurrentSchema.Disallow = ProcessType(property.Value)", span="287-287"];
m1_165 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JTokenReaderTest.cs", label="JsonSchemaConstants.DefaultPropertyName", span="289-289"];
m1_166 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JTokenReaderTest.cs", label="CurrentSchema.Default = property.Value.DeepClone()", span="290-290"];
m1_127 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JTokenReaderTest.cs", label="JsonSchemaConstants.TitlePropertyName", span="232-232"];
m1_132 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JTokenReaderTest.cs", label="CurrentSchema.Properties = ProcessProperties(property.Value)", span="239-239"];
m1_133 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JTokenReaderTest.cs", label="JsonSchemaConstants.ItemsPropertyName", span="241-241"];
m1_138 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JTokenReaderTest.cs", label="ProcessAdditionalItems(property.Value)", span="248-248"];
m1_139 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JTokenReaderTest.cs", label="JsonSchemaConstants.PatternPropertiesPropertyName", span="250-250"];
m1_144 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JTokenReaderTest.cs", label="CurrentSchema.Requires = (string)property.Value", span="257-257"];
m1_145 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JTokenReaderTest.cs", label="JsonSchemaConstants.MinimumPropertyName", span="259-259"];
m1_150 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JTokenReaderTest.cs", label="CurrentSchema.ExclusiveMinimum = (bool)property.Value", span="266-266"];
m1_156 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JTokenReaderTest.cs", label="CurrentSchema.MinimumLength = (int)property.Value", span="275-275"];
m1_161 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JTokenReaderTest.cs", label="JsonSchemaConstants.DivisibleByPropertyName", span="283-283"];
m1_162 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JTokenReaderTest.cs", label="CurrentSchema.DivisibleBy = (double)property.Value", span="284-284"];
m1_177 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JTokenReaderTest.cs", label="JsonSchemaConstants.ExtendsPropertyName", span="307-307"];
m1_119 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="JTokenReaderTest.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m1_126 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JTokenReaderTest.cs", label="CurrentSchema.Id = (string)property.Value", span="230-230"];
m1_131 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JTokenReaderTest.cs", label="JsonSchemaConstants.PropertiesPropertyName", span="238-238"];
m1_137 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JTokenReaderTest.cs", label="JsonSchemaConstants.AdditionalItemsPropertyName", span="247-247"];
m1_143 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JTokenReaderTest.cs", label="JsonSchemaConstants.RequiresPropertyName", span="256-256"];
m1_149 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JTokenReaderTest.cs", label="JsonSchemaConstants.ExclusiveMinimumPropertyName", span="265-265"];
m1_160 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JTokenReaderTest.cs", label="CurrentSchema.MinimumItems = (int)property.Value", span="281-281"];
m1_118 [cluster="string.IsNullOrEmpty(string)", file="JTokenReaderTest.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m1_178 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JTokenReaderTest.cs", label="ProcessExtends(property.Value)", span="308-308"];
m1_62 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ResolveReferences(Newtonsoft.Json.Schema.JsonSchema)", file="JTokenReaderTest.cs", label="schema = resolvedSchema", span="140-140"];
m1_189 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadBytes()", file="JTokenReaderTest.cs", label="byte[] readBytes = jsonReader.ReadAsBytes()", span="306-306"];
m1_190 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadBytes()", file="JTokenReaderTest.cs", label="Assert.AreEqual(data, readBytes)", span="307-307"];
m1_191 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadBytes()", file="JTokenReaderTest.cs", label="Assert.IsTrue(jsonReader.Read())", span="309-309"];
m1_192 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadBytes()", file="JTokenReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, jsonReader.TokenType)", span="310-310"];
m1_194 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadBytes()", file="JTokenReaderTest.cs", label="Assert.AreEqual(JsonToken.None, jsonReader.TokenType)", span="313-313"];
m1_193 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadBytes()", file="JTokenReaderTest.cs", label="Assert.IsFalse(jsonReader.Read())", span="312-312"];
m1_196 [cluster="System.Text.Encoding.GetBytes(string)", file="JTokenReaderTest.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m1_197 [cluster="Newtonsoft.Json.Linq.JObject.JObject(object)", file="JTokenReaderTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject(object)", span="113-113"];
m1_195 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadBytes()", file="JTokenReaderTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadBytes()", span="288-288"];
m1_199 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadBytesFailure()", file="JTokenReaderTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadBytesFailure()", span="318-318"];
m1_271 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalInt()", file="JTokenReaderTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalInt()", span="446-446"];
m1_276 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalInt()", file="JTokenReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="455-455"];
m1_278 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalInt()", file="JTokenReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="458-458"];
m1_280 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalInt()", file="JTokenReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="461-461"];
m1_281 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalInt()", file="JTokenReaderTest.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="462-462"];
m1_282 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalInt()", file="JTokenReaderTest.cs", label="Assert.AreEqual(1m, reader.Value)", span="463-463"];
m1_274 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalInt()", file="JTokenReaderTest.cs", label="JsonReader reader = o.CreateReader()", span="452-452"];
m1_275 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalInt()", file="JTokenReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="454-454"];
m1_277 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalInt()", file="JTokenReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="457-457"];
m1_279 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalInt()", file="JTokenReaderTest.cs", label="reader.ReadAsDecimal()", span="460-460"];
m1_273 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalInt()", file="JTokenReaderTest.cs", label="JObject o = JObject.Parse(json)", span="450-450"];
m1_272 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalInt()", file="JTokenReaderTest.cs", label="string json = @''{''''Name'''':1}''", span="448-448"];
m1_283 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalInt()", file="JTokenReaderTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalInt()", span="446-446"];
m1_200 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessEnum(Newtonsoft.Json.Linq.JToken)", file="JTokenReaderTest.cs", label="token.Type != JTokenType.Array", span="341-341"];
m1_201 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessEnum(Newtonsoft.Json.Linq.JToken)", file="JTokenReaderTest.cs", label="throw JsonException.Create(token, token.Path, ''Expected Array token while parsing enum values, got {0}.''.FormatWith(CultureInfo.InvariantCulture, token.Type));", span="342-342"];
m1_228 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessItems(Newtonsoft.Json.Linq.JToken)", file="JTokenReaderTest.cs", label="CurrentSchema.PositionalItemsValidation = false", span="394-394"];
m1_259 [cluster="lambda expression", file="JTokenReaderTest.cs", label="Exit lambda expression", span="443-443"];
m1_247 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.DeserializeByteArrayWithTypeNameHandling()", file="JTokenReaderTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenReaderTest.DeserializeByteArrayWithTypeNameHandling()", span="400-400"];
m1_248 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.DeserializeByteArrayWithTypeNameHandling()", file="JTokenReaderTest.cs", label="TestObject test = new TestObject(''Test'', new byte[] { 72, 63, 62, 71, 92, 55 })", span="402-402"];
m1_249 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.DeserializeByteArrayWithTypeNameHandling()", file="JTokenReaderTest.cs", label="string json = JsonConvert.SerializeObject(test, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.All\r\n            })", span="404-407"];
m1_250 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.DeserializeByteArrayWithTypeNameHandling()", file="JTokenReaderTest.cs", label="JObject o = JObject.Parse(json)", span="409-409"];
m1_251 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.DeserializeByteArrayWithTypeNameHandling()", file="JTokenReaderTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="411-411"];
m1_252 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.DeserializeByteArrayWithTypeNameHandling()", file="JTokenReaderTest.cs", label="serializer.TypeNameHandling = TypeNameHandling.All", span="412-412"];
m1_298 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32()", file="JTokenReaderTest.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsInt32()", span="371-371"];
m1_90 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetBoolean()", file="JTokenReaderTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetBoolean()", span="160-160"];
m1_285 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32Int()", file="JTokenReaderTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32Int()", span="467-467"];
m1_290 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32Int()", file="JTokenReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="476-476"];
m1_292 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32Int()", file="JTokenReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="479-479"];
m1_294 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32Int()", file="JTokenReaderTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="482-482"];
m1_295 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32Int()", file="JTokenReaderTest.cs", label="Assert.AreEqual(typeof(int), reader.ValueType)", span="483-483"];
m1_296 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32Int()", file="JTokenReaderTest.cs", label="Assert.AreEqual(1, reader.Value)", span="484-484"];
m1_288 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32Int()", file="JTokenReaderTest.cs", label="JsonReader reader = o.CreateReader()", span="473-473"];
m1_289 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32Int()", file="JTokenReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="475-475"];
m1_291 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32Int()", file="JTokenReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="478-478"];
m1_293 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32Int()", file="JTokenReaderTest.cs", label="reader.ReadAsInt32()", span="481-481"];
m1_287 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32Int()", file="JTokenReaderTest.cs", label="JObject o = JObject.Parse(json)", span="471-471"];
m1_286 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32Int()", file="JTokenReaderTest.cs", label="string json = @''{''''Name'''':1}''", span="469-469"];
m1_297 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32Int()", file="JTokenReaderTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32Int()", span="467-467"];
m1_73 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ResolveReferences(Newtonsoft.Json.Schema.JsonSchema)", file="JTokenReaderTest.cs", label="i < schema.Items.Count", span="158-158"];
m1_32 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", file="JTokenReaderTest.cs", label="Assert.AreEqual(''Test2'', jsonReader.Value)", span="97-97"];
m1_38 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", file="JTokenReaderTest.cs", label="Assert.AreEqual(''Test3'', jsonReader.Value)", span="105-105"];
m1_39 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", file="JTokenReaderTest.cs", label="jsonReader.Read()", span="107-107"];
m1_46 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", file="JTokenReaderTest.cs", label="Assert.AreEqual(JsonToken.Null, jsonReader.TokenType)", span="116-116"];
m1_61 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", file="JTokenReaderTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", span="65-65"];
m1_63 [cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", file="JTokenReaderTest.cs", label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", span="293-293"];
m1_64 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JTokenReaderTest.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m1_65 [cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", file="JTokenReaderTest.cs", label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", span="0-0"];
m1_66 [cluster="System.TimeSpan.TimeSpan(int, int, int)", file="JTokenReaderTest.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int)", span="0-0"];
m1_68 [cluster="Newtonsoft.Json.Linq.JTokenReader.JTokenReader(Newtonsoft.Json.Linq.JToken)", file="JTokenReaderTest.cs", label="Entry Newtonsoft.Json.Linq.JTokenReader.JTokenReader(Newtonsoft.Json.Linq.JToken)", span="44-44"];
m1_69 [cluster="Newtonsoft.Json.Linq.JTokenReader.Read()", file="JTokenReaderTest.cs", label="Entry Newtonsoft.Json.Linq.JTokenReader.Read()", span="137-137"];
m1_71 [cluster="Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", file="JTokenReaderTest.cs", label="Entry Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", span="38-38"];
m1_74 [cluster="Newtonsoft.Json.Linq.JObject.Property(string)", file="JTokenReaderTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.Property(string)", span="239-239"];
m1_76 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetBadString()", file="JTokenReaderTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetBadString()", span="142-142"];
m1_77 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetBadString()", file="JTokenReaderTest.cs", label="string json = @''{''''Offset'''':''''blablahbla''''}''", span="144-144"];
m1_78 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetBadString()", file="JTokenReaderTest.cs", label="JObject o = JObject.Parse(json)", span="146-146"];
m1_79 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetBadString()", file="JTokenReaderTest.cs", label="JsonReader reader = o.CreateReader()", span="148-148"];
m1_80 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetBadString()", file="JTokenReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="150-150"];
m1_81 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetBadString()", file="JTokenReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="151-151"];
m1_82 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetBadString()", file="JTokenReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="153-153"];
m1_83 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetBadString()", file="JTokenReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="154-154"];
m1_84 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetBadString()", file="JTokenReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDateTimeOffset(); }, ''Could not convert string to DateTimeOffset: blablahbla. Path 'Offset', line 1, position 22.'')", span="156-156"];
m1_85 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetBadString()", file="JTokenReaderTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetBadString()", span="142-142"];
m1_86 [cluster="lambda expression", file="JTokenReaderTest.cs", label="Entry lambda expression", span="156-156"];
m1_40 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", file="JTokenReaderTest.cs", label="Assert.AreEqual(JsonToken.String, jsonReader.TokenType)", span="108-108"];
m1_42 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", file="JTokenReaderTest.cs", label="jsonReader.Read()", span="111-111"];
m1_43 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", file="JTokenReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonReader.TokenType)", span="112-112"];
m1_41 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", file="JTokenReaderTest.cs", label="Assert.AreEqual(''Test3Value'', jsonReader.Value)", span="109-109"];
m1_45 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", file="JTokenReaderTest.cs", label="jsonReader.Read()", span="115-115"];
m1_44 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", file="JTokenReaderTest.cs", label="Assert.AreEqual(''Test4'', jsonReader.Value)", span="113-113"];
m1_60 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", file="JTokenReaderTest.cs", label="Assert.AreEqual(JsonToken.None, jsonReader.TokenType)", span="137-137"];
m1_47 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", file="JTokenReaderTest.cs", label="Assert.AreEqual(null, jsonReader.Value)", span="117-117"];
m1_48 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", file="JTokenReaderTest.cs", label="Assert.IsTrue(jsonReader.Read())", span="119-119"];
m1_50 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", file="JTokenReaderTest.cs", label="Assert.IsFalse(jsonReader.Read())", span="122-122"];
m1_51 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", file="JTokenReaderTest.cs", label="Assert.AreEqual(JsonToken.None, jsonReader.TokenType)", span="123-123"];
m1_52 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", file="JTokenReaderTest.cs", label="JsonReader jsonReader = new JTokenReader(o.Property(''Test2''))", span="126-126"];
m1_55 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", file="JTokenReaderTest.cs", label="Assert.AreEqual(''Test2'', jsonReader.Value)", span="130-130"];
m1_57 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", file="JTokenReaderTest.cs", label="Assert.AreEqual(JsonToken.Date, jsonReader.TokenType)", span="133-133"];
m1_58 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", file="JTokenReaderTest.cs", label="Assert.AreEqual(new DateTimeOffset(2000, 10, 15, 5, 5, 5, new TimeSpan(11, 11, 0)), jsonReader.Value)", span="134-134"];
m1_59 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", file="JTokenReaderTest.cs", label="Assert.IsFalse(jsonReader.Read())", span="136-136"];
m1_49 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", file="JTokenReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, jsonReader.TokenType)", span="120-120"];
m1_54 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", file="JTokenReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonReader.TokenType)", span="129-129"];
m1_53 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", file="JTokenReaderTest.cs", label="Assert.IsTrue(jsonReader.Read())", span="128-128"];
m1_56 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", file="JTokenReaderTest.cs", label="Assert.IsTrue(jsonReader.Read())", span="132-132"];
m1_67 [cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, params object[])", file="JTokenReaderTest.cs", label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, params object[])", span="283-283"];
m1_70 [cluster="Unk.AreEqual", file="JTokenReaderTest.cs", label="Entry Unk.AreEqual", span=""];
m1_75 [cluster="Newtonsoft.Json.JsonReader.Read()", file="JTokenReaderTest.cs", label="Entry Newtonsoft.Json.JsonReader.Read()", span="365-365"];
m1_87 [cluster="lambda expression", file="JTokenReaderTest.cs", label="reader.ReadAsDateTimeOffset()", span="156-156"];
m1_12 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.Push(Newtonsoft.Json.Schema.JsonSchema)", file="JTokenReaderTest.cs", label="Exit Newtonsoft.Json.Schema.JsonSchemaBuilder.Push(Newtonsoft.Json.Schema.JsonSchema)", span="53-53"];
m1_184 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadBytes()", file="JTokenReaderTest.cs", label="jsonReader.Read()", span="299-299"];
m1_224 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="JTokenReaderTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="512-512"];
m1_225 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JTokenReaderTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="72-72"];
m1_226 [cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JTokenReaderTest.cs", label="Entry Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", span="1837-1837"];
m1_258 [cluster="lambda expression", file="JTokenReaderTest.cs", label="kv.Value == type", span="443-443"];
m1_262 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.DeserializeStringInt()", file="JTokenReaderTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenReaderTest.DeserializeStringInt()", span="425-425"];
m1_268 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.DeserializeStringInt()", file="JTokenReaderTest.cs", label="Assert.AreEqual(99, c.PreProperty)", span="440-440"];
m1_269 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.DeserializeStringInt()", file="JTokenReaderTest.cs", label="Assert.AreEqual(-1, c.PostProperty)", span="441-441"];
m1_267 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.DeserializeStringInt()", file="JTokenReaderTest.cs", label="MyClass c = serializer.Deserialize<MyClass>(nodeReader)", span="438-438"];
m1_265 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.DeserializeStringInt()", file="JTokenReaderTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="434-434"];
m1_266 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.DeserializeStringInt()", file="JTokenReaderTest.cs", label="JsonReader nodeReader = o.CreateReader()", span="436-436"];
m1_264 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.DeserializeStringInt()", file="JTokenReaderTest.cs", label="JObject o = JObject.Parse(json)", span="432-432"];
m1_263 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.DeserializeStringInt()", file="JTokenReaderTest.cs", label="string json = @''{\r\n  ''''PreProperty'''': ''''99'''',\r\n  ''''PostProperty'''': ''''-1''''\r\n}''", span="427-430"];
m1_270 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.DeserializeStringInt()", file="JTokenReaderTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenReaderTest.DeserializeStringInt()", span="425-425"];
m1_94 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetBoolean()", file="JTokenReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="168-168"];
m1_185 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadBytes()", file="JTokenReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, jsonReader.TokenType)", span="300-300"];
m1_206 [cluster="lambda expression", file="JTokenReaderTest.cs", label="jsonReader.Read()", span="329-329"];
m1_207 [cluster="lambda expression", file="JTokenReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, jsonReader.TokenType)", span="330-330"];
m1_208 [cluster="lambda expression", file="JTokenReaderTest.cs", label="jsonReader.Read()", span="332-332"];
m1_209 [cluster="lambda expression", file="JTokenReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonReader.TokenType)", span="333-333"];
m1_15 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", file="JTokenReaderTest.cs", label="JTokenReader jsonReader = new JTokenReader(o)", span="75-75"];
m1_16 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", file="JTokenReaderTest.cs", label="IJsonLineInfo lineInfo = jsonReader", span="77-77"];
m1_17 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", file="JTokenReaderTest.cs", label="jsonReader.Read()", span="79-79"];
m1_19 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", file="JTokenReaderTest.cs", label="Assert.AreEqual(false, lineInfo.HasLineInfo())", span="81-81"];
m1_18 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", file="JTokenReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, jsonReader.TokenType)", span="80-80"];
m1_20 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", file="JTokenReaderTest.cs", label="jsonReader.Read()", span="83-83"];
m1_202 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessEnum(Newtonsoft.Json.Linq.JToken)", file="JTokenReaderTest.cs", label="CurrentSchema.Enum = new List<JToken>()", span="344-344"];
m1_91 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetBoolean()", file="JTokenReaderTest.cs", label="string json = @''{''''Offset'''':true}''", span="162-162"];
m1_7 [cluster="lambda expression", file="JTokenReaderTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="57-57"];
m1_8 [cluster="lambda expression", file="JTokenReaderTest.cs", label="serializer.Deserialize<TraceTestObject>(json.CreateReader())", span="59-59"];
m1_9 [cluster="lambda expression", file="JTokenReaderTest.cs", label="Exit lambda expression", span="55-60"];
m1_10 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JTokenReaderTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="433-433"];
m1_11 [cluster="Newtonsoft.Json.Linq.JToken.CreateReader()", file="JTokenReaderTest.cs", label="Entry Newtonsoft.Json.Linq.JToken.CreateReader()", span="1637-1637"];
m1_299 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32BadString()", file="JTokenReaderTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32BadString()", span="488-488"];
m1_304 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32BadString()", file="JTokenReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="497-497"];
m1_306 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32BadString()", file="JTokenReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="500-500"];
m1_302 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32BadString()", file="JTokenReaderTest.cs", label="JsonReader reader = o.CreateReader()", span="494-494"];
m1_303 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32BadString()", file="JTokenReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="496-496"];
m1_305 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32BadString()", file="JTokenReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="499-499"];
m1_307 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32BadString()", file="JTokenReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsInt32(); }, ''Could not convert string to integer: hi. Path 'Name', line 1, position 12.'')", span="502-502"];
m1_301 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32BadString()", file="JTokenReaderTest.cs", label="JObject o = JObject.Parse(json)", span="492-492"];
m1_300 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32BadString()", file="JTokenReaderTest.cs", label="string json = @''{''''Name'''':''''hi''''}''", span="490-490"];
m1_308 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32BadString()", file="JTokenReaderTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32BadString()", span="488-488"];
m1_36 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", file="JTokenReaderTest.cs", label="jsonReader.Read()", span="103-103"];
m1_338 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalBadString()", file="JTokenReaderTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalBadString()", span="545-545"];
m1_343 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalBadString()", file="JTokenReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="554-554"];
m1_345 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalBadString()", file="JTokenReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="557-557"];
m1_341 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalBadString()", file="JTokenReaderTest.cs", label="JsonReader reader = o.CreateReader()", span="551-551"];
m1_342 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalBadString()", file="JTokenReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="553-553"];
m1_344 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalBadString()", file="JTokenReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="556-556"];
m1_346 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalBadString()", file="JTokenReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDecimal(); }, ''Could not convert string to decimal: blah. Path 'Name', line 1, position 14.'')", span="559-559"];
m1_340 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalBadString()", file="JTokenReaderTest.cs", label="JObject o = JObject.Parse(json)", span="549-549"];
m1_339 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalBadString()", file="JTokenReaderTest.cs", label="string json = @''{''''Name'''':''''blah''''}''", span="547-547"];
m1_347 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalBadString()", file="JTokenReaderTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalBadString()", span="545-545"];
m1_183 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadBytes()", file="JTokenReaderTest.cs", label="JTokenReader jsonReader = new JTokenReader(o)", span="297-297"];
m1_214 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadBytesFromString()", file="JTokenReaderTest.cs", label="var bytes = new HasBytes { Bytes = new byte[] { 1, 2, 3, 4 } }", span="349-349"];
m1_215 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadBytesFromString()", file="JTokenReaderTest.cs", label="var json = JsonConvert.SerializeObject(bytes)", span="350-350"];
m1_216 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadBytesFromString()", file="JTokenReaderTest.cs", label="TextReader textReader = new StringReader(json)", span="352-352"];
m1_217 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadBytesFromString()", file="JTokenReaderTest.cs", label="JsonReader jsonReader = new JsonTextReader(textReader)", span="353-353"];
m1_218 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadBytesFromString()", file="JTokenReaderTest.cs", label="var jToken = JToken.ReadFrom(jsonReader)", span="355-355"];
m1_220 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadBytesFromString()", file="JTokenReaderTest.cs", label="var result2 = (HasBytes)JsonSerializer.Create(null)\r\n                .Deserialize(jsonReader, typeof(HasBytes))", span="359-360"];
m1_221 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadBytesFromString()", file="JTokenReaderTest.cs", label="CollectionAssert.AreEqual(new byte[] { 1, 2, 3, 4 }, result2.Bytes)", span="362-362"];
m1_219 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadBytesFromString()", file="JTokenReaderTest.cs", label="jsonReader = new JTokenReader(jToken)", span="357-357"];
m1_222 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadBytesFromString()", file="JTokenReaderTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadBytesFromString()", span="347-347"];
m1_103 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.BuildSchema(Newtonsoft.Json.Linq.JToken)", file="JTokenReaderTest.cs", label="return deferredSchema;", span="201-201"];
m1_108 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.BuildSchema(Newtonsoft.Json.Linq.JToken)", file="JTokenReaderTest.cs", label="JsonSchema existingSchema", span="209-209"];
m1_110 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.BuildSchema(Newtonsoft.Json.Linq.JToken)", file="JTokenReaderTest.cs", label="return existingSchema;", span="211-211"];
m1_112 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.BuildSchema(Newtonsoft.Json.Linq.JToken)", file="JTokenReaderTest.cs", label="ProcessSchemaProperties(schemaObject)", span="215-215"];
m1_113 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.BuildSchema(Newtonsoft.Json.Linq.JToken)", file="JTokenReaderTest.cs", label="return Pop();", span="217-217"];
m1_114 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.BuildSchema(Newtonsoft.Json.Linq.JToken)", file="JTokenReaderTest.cs", label="Exit Newtonsoft.Json.Schema.JsonSchemaBuilder.BuildSchema(Newtonsoft.Json.Linq.JToken)", span="189-189"];
m1_106 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.BuildSchema(Newtonsoft.Json.Linq.JToken)", file="JTokenReaderTest.cs", label="location = ''/'' + location", span="206-206"];
m1_107 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.BuildSchema(Newtonsoft.Json.Linq.JToken)", file="JTokenReaderTest.cs", label="location = ''#'' + location", span="207-207"];
m1_109 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.BuildSchema(Newtonsoft.Json.Linq.JToken)", file="JTokenReaderTest.cs", label="_documentSchemas.TryGetValue(location, out existingSchema)", span="210-210"];
m1_111 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.BuildSchema(Newtonsoft.Json.Linq.JToken)", file="JTokenReaderTest.cs", label="Push(new JsonSchema { Location = location })", span="213-213"];
m1_105 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.BuildSchema(Newtonsoft.Json.Linq.JToken)", file="JTokenReaderTest.cs", label="!string.IsNullOrEmpty(location)", span="205-205"];
m1_104 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.BuildSchema(Newtonsoft.Json.Linq.JToken)", file="JTokenReaderTest.cs", label="string location = token.Path.Replace(''.'', ''/'').Replace(''['', ''/'').Replace('']'', string.Empty)", span="204-204"];
m1_115 [cluster="Newtonsoft.Json.JsonException.Create(Newtonsoft.Json.IJsonLineInfo, string, string)", file="JTokenReaderTest.cs", label="Entry Newtonsoft.Json.JsonException.Create(Newtonsoft.Json.IJsonLineInfo, string, string)", span="84-84"];
m1_260 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JTokenReaderTest.cs", label="Newtonsoft.Json.Schema.JsonSchemaBuilder", span=""];
m1_13 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="JTokenReaderTest.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m1_21 [cluster="System.Collections.Generic.IList<T>.RemoveAt(int)", file="JTokenReaderTest.cs", label="Entry System.Collections.Generic.IList<T>.RemoveAt(int)", span="0-0"];
m1_22 [cluster="System.Collections.Generic.IEnumerable<TSource>.LastOrDefault<TSource>()", file="JTokenReaderTest.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.LastOrDefault<TSource>()", span="0-0"];
m1_25 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.Read(Newtonsoft.Json.JsonReader)", file="JTokenReaderTest.cs", label="_rootSchema = schemaToken as JObject", span="79-79"];
m1_26 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.Read(Newtonsoft.Json.JsonReader)", file="JTokenReaderTest.cs", label="JsonSchema schema = BuildSchema(schemaToken)", span="81-81"];
m1_31 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.BuildSchema(Newtonsoft.Json.Linq.JToken)", file="JTokenReaderTest.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaBuilder.BuildSchema(Newtonsoft.Json.Linq.JToken)", span="189-189"];
m1_34 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.UnescapeReference(string)", file="JTokenReaderTest.cs", label="return Uri.UnescapeDataString(reference).Replace(''~1'', ''/'').Replace(''~0'', ''~'');", span="90-90"];
m1_35 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.UnescapeReference(string)", file="JTokenReaderTest.cs", label="Exit Newtonsoft.Json.Schema.JsonSchemaBuilder.UnescapeReference(string)", span="88-88"];
m1_37 [cluster="string.Replace(string, string)", file="JTokenReaderTest.cs", label="Entry string.Replace(string, string)", span="0-0"];
m1_23 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.Read(Newtonsoft.Json.JsonReader)", file="JTokenReaderTest.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaBuilder.Read(Newtonsoft.Json.JsonReader)", span="75-75"];
m1_27 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.Read(Newtonsoft.Json.JsonReader)", file="JTokenReaderTest.cs", label="ResolveReferences(schema)", span="83-83"];
m1_28 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.Read(Newtonsoft.Json.JsonReader)", file="JTokenReaderTest.cs", label="return schema;", span="85-85"];
m1_29 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.Read(Newtonsoft.Json.JsonReader)", file="JTokenReaderTest.cs", label="Exit Newtonsoft.Json.Schema.JsonSchemaBuilder.Read(Newtonsoft.Json.JsonReader)", span="75-75"];
m1_24 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.Read(Newtonsoft.Json.JsonReader)", file="JTokenReaderTest.cs", label="JToken schemaToken = JToken.ReadFrom(reader)", span="77-77"];
m1_30 [cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JTokenReaderTest.cs", label="Entry Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", span="1541-1541"];
m1_33 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.UnescapeReference(string)", file="JTokenReaderTest.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaBuilder.UnescapeReference(string)", span="88-88"];
m1_351 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalBoolean()", file="JTokenReaderTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalBoolean()", span="563-563"];
m1_356 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalBoolean()", file="JTokenReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="572-572"];
m1_358 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalBoolean()", file="JTokenReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="575-575"];
m1_354 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalBoolean()", file="JTokenReaderTest.cs", label="JsonReader reader = o.CreateReader()", span="569-569"];
m1_355 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalBoolean()", file="JTokenReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="571-571"];
m1_357 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalBoolean()", file="JTokenReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="574-574"];
m1_359 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalBoolean()", file="JTokenReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDecimal(); }, ''Error reading decimal. Unexpected token: Boolean. Path 'Name', line 1, position 12.'')", span="577-577"];
m1_353 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalBoolean()", file="JTokenReaderTest.cs", label="JObject o = JObject.Parse(json)", span="567-567"];
m1_352 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalBoolean()", file="JTokenReaderTest.cs", label="string json = @''{''''Name'''':true}''", span="565-565"];
m1_360 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalBoolean()", file="JTokenReaderTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalBoolean()", span="563-563"];
m1_213 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessAdditionalItems(Newtonsoft.Json.Linq.JToken)", file="JTokenReaderTest.cs", label="Exit Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessAdditionalItems(Newtonsoft.Json.Linq.JToken)", span="360-360"];
m1_188 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadBytes()", file="JTokenReaderTest.cs", label="Assert.AreEqual(''Test1'', jsonReader.Value)", span="304-304"];
m1_203 [cluster="lambda expression", file="JTokenReaderTest.cs", label="Entry lambda expression", span="320-338"];
m1_204 [cluster="lambda expression", file="JTokenReaderTest.cs", label="JObject o =\r\n                    new JObject(\r\n                        new JProperty(''Test1'', 1)\r\n                        )", span="322-325"];
m1_205 [cluster="lambda expression", file="JTokenReaderTest.cs", label="JTokenReader jsonReader = new JTokenReader(o)", span="327-327"];
m1_255 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.MapType(Newtonsoft.Json.Schema.JsonSchemaType)", file="JTokenReaderTest.cs", label="Exit Newtonsoft.Json.Schema.JsonSchemaBuilder.MapType(Newtonsoft.Json.Schema.JsonSchemaType)", span="441-441"];
m1_254 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.MapType(Newtonsoft.Json.Schema.JsonSchemaType)", file="JTokenReaderTest.cs", label="return JsonSchemaConstants.JsonSchemaTypeMapping.Single(kv => kv.Value == type).Key;", span="443-443"];
m1_256 [cluster="Unk.Single", file="JTokenReaderTest.cs", label="Entry Unk.Single", span=""];
m1_253 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.MapType(Newtonsoft.Json.Schema.JsonSchemaType)", file="JTokenReaderTest.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaBuilder.MapType(Newtonsoft.Json.Schema.JsonSchemaType)", span="441-441"];
m1_257 [cluster="lambda expression", file="JTokenReaderTest.cs", label="Entry lambda expression", span="443-443"];
m1_186 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadBytes()", file="JTokenReaderTest.cs", label="jsonReader.Read()", span="302-302"];
m1_210 [cluster="lambda expression", file="JTokenReaderTest.cs", label="Assert.AreEqual(''Test1'', jsonReader.Value)", span="334-334"];
m1_211 [cluster="lambda expression", file="JTokenReaderTest.cs", label="jsonReader.ReadAsBytes()", span="336-336"];
m1_212 [cluster="lambda expression", file="JTokenReaderTest.cs", label="Exit lambda expression", span="320-338"];
m1_89 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffset()", file="JTokenReaderTest.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsDateTimeOffset()", span="402-402"];
m1_6 [cluster="lambda expression", file="JTokenReaderTest.cs", label="Entry lambda expression", span="55-60"];
m1_223 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.HasBytes.HasBytes()", file="JTokenReaderTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenReaderTest.HasBytes.HasBytes()", span="341-341"];
m1_96 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetBoolean()", file="JTokenReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="171-171"];
m1_98 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetBoolean()", file="JTokenReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDateTimeOffset(); }, ''Error reading date. Unexpected token: Boolean. Path 'Offset', line 1, position 14.'')", span="174-174"];
m1_97 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetBoolean()", file="JTokenReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="172-172"];
m1_100 [cluster="lambda expression", file="JTokenReaderTest.cs", label="Entry lambda expression", span="174-174"];
m1_99 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetBoolean()", file="JTokenReaderTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetBoolean()", span="160-160"];
m1_101 [cluster="lambda expression", file="JTokenReaderTest.cs", label="reader.ReadAsDateTimeOffset()", span="174-174"];
m1_102 [cluster="lambda expression", file="JTokenReaderTest.cs", label="Exit lambda expression", span="174-174"];
m1_180 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JTokenReaderTest.cs", label="CurrentSchema.UniqueItems = (bool)property.Value", span="311-311"];
m1_187 [cluster="Newtonsoft.Json.Linq.JToken.DeepClone()", file="JTokenReaderTest.cs", label="Entry Newtonsoft.Json.Linq.JToken.DeepClone()", span="1698-1698"];
m1_181 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JTokenReaderTest.cs", label="Exit Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", span="220-220"];
m1_364 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalNull()", file="JTokenReaderTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalNull()", span="581-581"];
m1_369 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalNull()", file="JTokenReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="590-590"];
m1_371 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalNull()", file="JTokenReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="593-593"];
m1_373 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalNull()", file="JTokenReaderTest.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="596-596"];
m1_374 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalNull()", file="JTokenReaderTest.cs", label="Assert.AreEqual(null, reader.ValueType)", span="597-597"];
m1_375 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalNull()", file="JTokenReaderTest.cs", label="Assert.AreEqual(null, reader.Value)", span="598-598"];
m1_367 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalNull()", file="JTokenReaderTest.cs", label="JsonReader reader = o.CreateReader()", span="587-587"];
m1_368 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalNull()", file="JTokenReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="589-589"];
m1_370 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalNull()", file="JTokenReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="592-592"];
m1_372 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalNull()", file="JTokenReaderTest.cs", label="reader.ReadAsDecimal()", span="595-595"];
m1_366 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalNull()", file="JTokenReaderTest.cs", label="JObject o = JObject.Parse(json)", span="585-585"];
m1_365 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalNull()", file="JTokenReaderTest.cs", label="string json = @''{''''Name'''':null}''", span="583-583"];
m1_376 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalNull()", file="JTokenReaderTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalNull()", span="581-581"];
m1_310 [cluster="lambda expression", file="JTokenReaderTest.cs", label="reader.ReadAsInt32()", span="502-502"];
m1_309 [cluster="lambda expression", file="JTokenReaderTest.cs", label="Entry lambda expression", span="502-502"];
m1_323 [cluster="lambda expression", file="JTokenReaderTest.cs", label="reader.ReadAsInt32()", span="520-520"];
m1_322 [cluster="lambda expression", file="JTokenReaderTest.cs", label="Entry lambda expression", span="520-520"];
m1_349 [cluster="lambda expression", file="JTokenReaderTest.cs", label="reader.ReadAsDecimal()", span="559-559"];
m1_348 [cluster="lambda expression", file="JTokenReaderTest.cs", label="Entry lambda expression", span="559-559"];
m1_362 [cluster="lambda expression", file="JTokenReaderTest.cs", label="reader.ReadAsDecimal()", span="577-577"];
m1_361 [cluster="lambda expression", file="JTokenReaderTest.cs", label="Entry lambda expression", span="577-577"];
m1_311 [cluster="lambda expression", file="JTokenReaderTest.cs", label="Exit lambda expression", span="502-502"];
m1_324 [cluster="lambda expression", file="JTokenReaderTest.cs", label="Exit lambda expression", span="520-520"];
m1_350 [cluster="lambda expression", file="JTokenReaderTest.cs", label="Exit lambda expression", span="559-559"];
m1_363 [cluster="lambda expression", file="JTokenReaderTest.cs", label="Exit lambda expression", span="577-577"];
m1_92 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetBoolean()", file="JTokenReaderTest.cs", label="JObject o = JObject.Parse(json)", span="164-164"];
m1_95 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetBoolean()", file="JTokenReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="169-169"];
m1_179 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.ProcessSchemaProperties(Newtonsoft.Json.Linq.JObject)", file="JTokenReaderTest.cs", label="JsonSchemaConstants.UniqueItemsPropertyName", span="310-310"];
m1_93 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetBoolean()", file="JTokenReaderTest.cs", label="JsonReader reader = o.CreateReader()", span="166-166"];
m1_5 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="JTokenReaderTest.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="351-351"];
m1_284 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimal()", file="JTokenReaderTest.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsDecimal()", span="389-389"];
m1_261 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", file="JTokenReaderTest.cs", label="Newtonsoft.Json.Schema.JsonSchemaType", span=""];
m1_0 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ErrorTokenIndex()", file="JTokenReaderTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ErrorTokenIndex()", span="51-51"];
m1_1 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ErrorTokenIndex()", file="JTokenReaderTest.cs", label="JObject json = JObject.Parse(@''{''''IntList'''':[1, ''''two'''']}'')", span="53-53"];
m1_3 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ErrorTokenIndex()", file="JTokenReaderTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ErrorTokenIndex()", span="51-51"];
m1_2 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ErrorTokenIndex()", file="JTokenReaderTest.cs", label="ExceptionAssert.Throws<Exception>(() =>\r\n            {\r\n                JsonSerializer serializer = new JsonSerializer();\r\n\r\n                serializer.Deserialize<TraceTestObject>(json.CreateReader());\r\n            }, ''Could not convert string to integer: two. Path 'IntList[1]', line 1, position 20.'')", span="55-60"];
m1_325 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalString()", file="JTokenReaderTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalString()", span="524-524"];
m1_330 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalString()", file="JTokenReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="533-533"];
m1_332 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalString()", file="JTokenReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="536-536"];
m1_334 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalString()", file="JTokenReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="539-539"];
m1_335 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalString()", file="JTokenReaderTest.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="540-540"];
m1_336 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalString()", file="JTokenReaderTest.cs", label="Assert.AreEqual(1.1m, reader.Value)", span="541-541"];
m1_328 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalString()", file="JTokenReaderTest.cs", label="JsonReader reader = o.CreateReader()", span="530-530"];
m1_329 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalString()", file="JTokenReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="532-532"];
m1_331 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalString()", file="JTokenReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="535-535"];
m1_333 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalString()", file="JTokenReaderTest.cs", label="reader.ReadAsDecimal()", span="538-538"];
m1_327 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalString()", file="JTokenReaderTest.cs", label="JObject o = JObject.Parse(json)", span="528-528"];
m1_326 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalString()", file="JTokenReaderTest.cs", label="string json = @''{''''Name'''':''''1.1''''}''", span="526-526"];
m1_337 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalString()", file="JTokenReaderTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalString()", span="524-524"];
m1_312 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32Boolean()", file="JTokenReaderTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32Boolean()", span="506-506"];
m1_317 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32Boolean()", file="JTokenReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="515-515"];
m1_319 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32Boolean()", file="JTokenReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="518-518"];
m1_315 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32Boolean()", file="JTokenReaderTest.cs", label="JsonReader reader = o.CreateReader()", span="512-512"];
m1_316 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32Boolean()", file="JTokenReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="514-514"];
m1_318 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32Boolean()", file="JTokenReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="517-517"];
m1_320 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32Boolean()", file="JTokenReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsInt32(); }, ''Error reading integer. Unexpected token: Boolean. Path 'Name', line 1, position 12.'')", span="520-520"];
m1_314 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32Boolean()", file="JTokenReaderTest.cs", label="JObject o = JObject.Parse(json)", span="510-510"];
m1_313 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32Boolean()", file="JTokenReaderTest.cs", label="string json = @''{''''Name'''':true}''", span="508-508"];
m1_321 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32Boolean()", file="JTokenReaderTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32Boolean()", span="506-506"];
m1_378 [file="JTokenReaderTest.cs", label=reader, span=""];
m1_379 [file="JTokenReaderTest.cs", label=reader, span=""];
m1_380 [file="JTokenReaderTest.cs", label=reader, span=""];
m1_381 [file="JTokenReaderTest.cs", label=reader, span=""];
m1_382 [file="JTokenReaderTest.cs", label=reader, span=""];
m1_383 [file="JTokenReaderTest.cs", label=reader, span=""];
m1_377 [file="JTokenReaderTest.cs", label=json, span=""];
m2_362 [cluster="Newtonsoft.Json.JsonReader.ReadDateTimeOffsetString(string)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonReader.ReadDateTimeOffsetString(string)", span="864-864"];
m2_669 [cluster="Newtonsoft.Json.Utilities.StringReference.StringReference(char[], int, int)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Utilities.StringReference.StringReference(char[], int, int)", span="55-55"];
m2_1113 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", span="840-840"];
m2_1274 [cluster="Newtonsoft.Json.JsonTextReader.HasLineInfo()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.HasLineInfo()", span="2427-2427"];
m2_1275 [cluster="Newtonsoft.Json.JsonTextReader.HasLineInfo()", file="TypeNameHandlingTests.cs", label="return true;", span="2429-2429"];
m2_1276 [cluster="Newtonsoft.Json.JsonTextReader.HasLineInfo()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonTextReader.HasLineInfo()", span="2427-2427"];
m2_367 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", span="956-956"];
m2_138 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.Read()", span="366-366"];
m2_139 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="TypeNameHandlingTests.cs", label="EnsureBuffer()", span="368-368"];
m2_141 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="TypeNameHandlingTests.cs", label=_currentState, span="372-372"];
m2_148 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="TypeNameHandlingTests.cs", label="return ParseValue();", span="380-380"];
m2_151 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="TypeNameHandlingTests.cs", label="return ParseObject();", span="383-383"];
m2_153 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="TypeNameHandlingTests.cs", label="ParsePostValue()", span="387-387"];
m2_156 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="TypeNameHandlingTests.cs", label="EnsureChars(0, false)", span="393-393"];
m2_157 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="TypeNameHandlingTests.cs", label="EatWhitespace(false)", span="395-395"];
m2_158 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="TypeNameHandlingTests.cs", label=_isEndOfFile, span="396-396"];
m2_159 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="TypeNameHandlingTests.cs", label="SetToken(JsonToken.None)", span="398-398"];
m2_161 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="TypeNameHandlingTests.cs", label="_chars[_charPos] == '/'", span="401-401"];
m2_162 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="TypeNameHandlingTests.cs", label="ParseComment(true)", span="403-403"];
m2_164 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="TypeNameHandlingTests.cs", label="throw JsonReaderException.Create(this, ''Additional text encountered after finished reading JSON content: {0}.''.FormatWith(CultureInfo.InvariantCulture, _chars[_charPos]));", span="407-407"];
m2_165 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="TypeNameHandlingTests.cs", label="SetToken(JsonToken.None)", span="409-409"];
m2_167 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="TypeNameHandlingTests.cs", label="throw JsonReaderException.Create(this, ''Unexpected state: {0}.''.FormatWith(CultureInfo.InvariantCulture, CurrentState));", span="412-412"];
m2_140 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="TypeNameHandlingTests.cs", label=true, span="370-370"];
m2_142 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="TypeNameHandlingTests.cs", label="State.Start", span="374-374"];
m2_149 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="TypeNameHandlingTests.cs", label="State.Object", span="381-381"];
m2_152 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="TypeNameHandlingTests.cs", label="State.PostValue", span="384-384"];
m2_155 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="TypeNameHandlingTests.cs", label="State.Finished", span="392-392"];
m2_147 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="TypeNameHandlingTests.cs", label="State.ConstructorStart", span="379-379"];
m2_150 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="TypeNameHandlingTests.cs", label="State.ObjectStart", span="382-382"];
m2_154 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="TypeNameHandlingTests.cs", label="return true;", span="389-389"];
m2_160 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="TypeNameHandlingTests.cs", label="return false;", span="399-399"];
m2_163 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="TypeNameHandlingTests.cs", label="return true;", span="404-404"];
m2_166 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="TypeNameHandlingTests.cs", label="return false;", span="410-410"];
m2_143 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="TypeNameHandlingTests.cs", label="State.Property", span="375-375"];
m2_146 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="TypeNameHandlingTests.cs", label="State.Constructor", span="378-378"];
m2_144 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="TypeNameHandlingTests.cs", label="State.Array", span="376-376"];
m2_145 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="TypeNameHandlingTests.cs", label="State.ArrayStart", span="377-377"];
m2_168 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonTextReader.Read()", span="366-366"];
m2_932 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseConstructor()", span="1730-1730"];
m2_963 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs", label="MatchValueWithTrailingSeparator(''new'')", span="1732-1732"];
m2_964 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs", label="EatWhitespace(false)", span="1734-1734"];
m2_965 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs", label="int initialPosition = _charPos", span="1736-1736"];
m2_968 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs", label="char currentChar = _chars[_charPos]", span="1741-1741"];
m2_970 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs", label="_charsUsed == _charPos", span="1744-1744"];
m2_971 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs", label="ReadData(true) == 0", span="1746-1746"];
m2_972 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs", label="throw JsonReaderException.Create(this, ''Unexpected end while parsing constructor.'');", span="1748-1748"];
m2_973 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs", label="endPosition = _charPos", span="1753-1753"];
m2_974 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs", label="_charPos++", span="1754-1754"];
m2_976 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs", label="_charPos++", span="1760-1760"];
m2_978 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs", label="endPosition = _charPos", span="1764-1764"];
m2_979 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs", label="ProcessCarriageReturn(true)", span="1765-1765"];
m2_981 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs", label="endPosition = _charPos", span="1770-1770"];
m2_982 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs", label="ProcessLineFeed()", span="1771-1771"];
m2_984 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs", label="endPosition = _charPos", span="1776-1776"];
m2_985 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs", label="_charPos++", span="1777-1777"];
m2_987 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs", label="endPosition = _charPos", span="1782-1782"];
m2_988 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs", label="throw JsonReaderException.Create(this, ''Unexpected character while parsing constructor: {0}.''.FormatWith(CultureInfo.InvariantCulture, currentChar));", span="1787-1787"];
m2_989 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs", label="_stringReference = new StringReference(_chars, initialPosition, endPosition - initialPosition)", span="1791-1791"];
m2_990 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs", label="string constructorName = _stringReference.ToString()", span="1792-1792"];
m2_991 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs", label="EatWhitespace(false)", span="1794-1794"];
m2_992 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs", label="_chars[_charPos] != '('", span="1796-1796"];
m2_993 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs", label="throw JsonReaderException.Create(this, ''Unexpected character while parsing constructor: {0}.''.FormatWith(CultureInfo.InvariantCulture, _chars[_charPos]));", span="1798-1798"];
m2_994 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs", label="_charPos++", span="1801-1801"];
m2_995 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs", label="ClearRecentString()", span="1803-1803"];
m2_996 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs", label="SetToken(JsonToken.StartConstructor, constructorName)", span="1805-1805"];
m2_997 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs", label="throw JsonReaderException.Create(this, ''Unexpected content while parsing JSON.'');", span="1809-1809"];
m2_966 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs", label="int endPosition", span="1737-1737"];
m2_967 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs", label=true, span="1739-1739"];
m2_969 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs", label="currentChar == '\0'", span="1742-1742"];
m2_975 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs", label="char.IsLetterOrDigit(currentChar)", span="1758-1758"];
m2_977 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs", label="currentChar == StringUtils.CarriageReturn", span="1762-1762"];
m2_980 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs", label="currentChar == StringUtils.LineFeed", span="1768-1768"];
m2_983 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs", label="char.IsWhiteSpace(currentChar)", span="1774-1774"];
m2_986 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs", label="currentChar == '('", span="1780-1780"];
m2_998 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseConstructor()", span="1730-1730"];
m2_557 [cluster="Newtonsoft.Json.JsonReader.CreateUnexpectedEndException()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonReader.CreateUnexpectedEndException()", span="898-898"];
m2_556 [cluster="Newtonsoft.Json.JsonTextReader.ParseNull()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseNull()", span="2285-2285"];
m2_1211 [cluster="Newtonsoft.Json.JsonTextReader.ParseNull()", file="TypeNameHandlingTests.cs", label="MatchValueWithTrailingSeparator(JsonConvert.Null)", span="2287-2287"];
m2_1212 [cluster="Newtonsoft.Json.JsonTextReader.ParseNull()", file="TypeNameHandlingTests.cs", label="SetToken(JsonToken.Null)", span="2289-2289"];
m2_1213 [cluster="Newtonsoft.Json.JsonTextReader.ParseNull()", file="TypeNameHandlingTests.cs", label="throw JsonReaderException.Create(this, ''Error parsing null value.'');", span="2293-2293"];
m2_1214 [cluster="Newtonsoft.Json.JsonTextReader.ParseNull()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseNull()", span="2285-2285"];
m2_1271 [cluster="Newtonsoft.Json.JsonReader.Close()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonReader.Close()", span="1129-1129"];
m2_667 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsHighSurrogate(char)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.IsHighSurrogate(char)", span="260-260"];
m2_263 [cluster="char.IsWhiteSpace(char)", file="TypeNameHandlingTests.cs", label="Entry char.IsWhiteSpace(char)", span="0-0"];
m2_1109 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", span="746-746"];
m2_830 [cluster="Newtonsoft.Json.Utilities.PropertyNameTable.Get(char[], int, int)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Utilities.PropertyNameTable.Get(char[], int, int)", span="48-48"];
m2_1104 [cluster="string.StartsWith(string, System.StringComparison)", file="TypeNameHandlingTests.cs", label="Entry string.StartsWith(string, System.StringComparison)", span="0-0"];
m2_83 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadData(bool)", span="240-240"];
m2_84 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool)", file="TypeNameHandlingTests.cs", label="return ReadData(append, 0);", span="242-242"];
m2_85 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadData(bool)", span="240-240"];
m2_364 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", span="2321-2321"];
m2_1223 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="MatchValueWithTrailingSeparator(JsonConvert.NegativeInfinity)", span="2323-2323"];
m2_1227 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="_floatParseHandling == FloatParseHandling.Double", span="2329-2329"];
m2_1228 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="SetToken(JsonToken.Float, double.NegativeInfinity)", span="2331-2331"];
m2_1231 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="SetToken(JsonToken.String, JsonConvert.NegativeInfinity)", span="2336-2336"];
m2_1233 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="throw JsonReaderException.Create(this, ''Cannot read -Infinity value.'');", span="2340-2340"];
m2_1234 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="throw JsonReaderException.Create(this, ''Error parsing -Infinity value.'');", span="2343-2343"];
m2_1224 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label=readType, span="2325-2325"];
m2_1226 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="ReadType.ReadAsDouble", span="2328-2328"];
m2_1229 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="return double.NegativeInfinity;", span="2332-2332"];
m2_1230 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="ReadType.ReadAsString", span="2335-2335"];
m2_1232 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="return JsonConvert.NegativeInfinity;", span="2337-2337"];
m2_1225 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="ReadType.Read", span="2327-2327"];
m2_1235 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", span="2321-2321"];
m2_186 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsString()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsString()", span="439-439"];
m2_187 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsString()", file="TypeNameHandlingTests.cs", label="return (string)ReadStringValue(ReadType.ReadAsString);", span="441-441"];
m2_188 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsString()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadAsString()", span="439-439"];
m2_1117 [cluster="Unk.Parse", file="TypeNameHandlingTests.cs", label="Entry Unk.Parse", span=""];
m2_17 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", span="127-127"];
m2_18 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="_charPos++", span="129-129"];
m2_19 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="ShiftBufferIfNeeded()", span="131-131"];
m2_20 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="ReadStringIntoBuffer(quote)", span="132-132"];
m2_21 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="SetPostValueState(true)", span="133-133"];
m2_26 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="_stringReference.Length == 0", span="140-140"];
m2_28 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="_stringReference.Length == 36 && ConvertUtils.TryConvertGuid(_stringReference.ToString(), out g)", span="144-144"];
m2_30 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="data = Convert.FromBase64CharArray(_stringReference.Chars, _stringReference.StartIndex, _stringReference.Length)", span="150-150"];
m2_31 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="SetToken(JsonToken.Bytes, data, false)", span="153-153"];
m2_33 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="string text = _stringReference.ToString()", span="156-156"];
m2_34 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="SetToken(JsonToken.String, text, false)", span="158-158"];
m2_35 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="_quoteChar = quote", span="159-159"];
m2_39 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="_dateParseHandling != DateParseHandling.None", span="167-167"];
m2_45 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="dateParseHandling = _dateParseHandling", span="182-182"];
m2_48 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="DateTimeUtils.TryParseDateTime(_stringReference, DateTimeZoneHandling, DateFormatString, Culture, out dt)", span="188-188"];
m2_49 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="SetToken(JsonToken.Date, dt, false)", span="190-190"];
m2_52 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="DateTimeUtils.TryParseDateTimeOffset(_stringReference, DateFormatString, Culture, out dt)", span="198-198"];
m2_53 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="SetToken(JsonToken.Date, dt, false)", span="200-200"];
m2_55 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="SetToken(JsonToken.String, _stringReference.ToString(), false)", span="207-207"];
m2_56 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="_quoteChar = quote", span="208-208"];
m2_22 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label=readType, span="135-135"];
m2_25 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="byte[] data", span="139-139"];
m2_27 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="data = new byte[0]", span="142-142"];
m2_29 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="data = g.ToByteArray()", span="146-146"];
m2_32 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="ReadType.ReadAsString", span="155-155"];
m2_40 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="DateParseHandling dateParseHandling", span="169-169"];
m2_43 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="readType == ReadType.ReadAsDateTimeOffset", span="175-175"];
m2_46 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="dateParseHandling == DateParseHandling.DateTime", span="185-185"];
m2_47 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="DateTime dt", span="187-187"];
m2_50 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="return;", span="191-191"];
m2_51 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="DateTimeOffset dt", span="197-197"];
m2_54 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="return;", span="201-201"];
m2_41 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="readType == ReadType.ReadAsDateTime", span="170-170"];
m2_23 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="ReadType.ReadAsBytes", span="137-137"];
m2_36 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="ReadType.ReadAsInt32", span="161-161"];
m2_24 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="Guid g", span="138-138"];
m2_38 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="ReadType.ReadAsBoolean", span="163-163"];
m2_44 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="dateParseHandling = DateParseHandling.DateTimeOffset", span="177-177"];
m2_42 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="dateParseHandling = DateParseHandling.DateTime", span="172-172"];
m2_37 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="ReadType.ReadAsDecimal", span="162-162"];
m2_57 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", span="127-127"];
m2_181 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", span="830-830"];
m2_483 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="throw new ArgumentOutOfRangeException(nameof(readType));", span="868-868"];
m2_457 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="EnsureBuffer()", span="832-832"];
m2_458 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label=_currentState, span="834-834"];
m2_467 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="char currentChar = _chars[_charPos]", span="845-845"];
m2_470 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="ReadNullChar()", span="850-850"];
m2_471 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="SetToken(JsonToken.None, null, false)", span="852-852"];
m2_475 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="ParseString(currentChar, readType)", span="858-858"];
m2_478 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="return ReadInt32String(_stringReference.ToString());", span="862-862"];
m2_480 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="return ReadDecimalString(_stringReference.ToString());", span="864-864"];
m2_482 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="return ReadDoubleString(_stringReference.ToString());", span="866-866"];
m2_485 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="HandleNull()", span="871-871"];
m2_488 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="return ParseNumberNaN(readType);", span="874-874"];
m2_490 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="return ParseNumberPositiveInfinity(readType);", span="876-876"];
m2_492 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="EnsureChars(1, true) && _chars[_charPos + 1] == 'I'", span="878-878"];
m2_493 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="return ParseNumberNegativeInfinity(readType);", span="880-880"];
m2_494 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="ParseNumber(readType)", span="884-884"];
m2_495 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="return Value;", span="885-885"];
m2_507 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="ParseNumber(readType)", span="898-898"];
m2_508 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="return Value;", span="899-899"];
m2_510 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="ParseComment(false)", span="901-901"];
m2_512 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="ProcessValueComma()", span="904-904"];
m2_514 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="_charPos++", span="907-907"];
m2_515 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="_currentState == State.Array || _currentState == State.ArrayStart || _currentState == State.PostValue", span="908-908"];
m2_516 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="SetToken(JsonToken.EndArray)", span="910-910"];
m2_518 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="throw CreateUnexpectedCharacterException(currentChar);", span="913-913"];
m2_520 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="ProcessCarriageReturn(false)", span="915-915"];
m2_522 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="ProcessLineFeed()", span="918-918"];
m2_525 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="_charPos++", span="923-923"];
m2_526 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="_charPos++", span="926-926"];
m2_528 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="throw CreateUnexpectedCharacterException(currentChar);", span="930-930"];
m2_530 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="ReadFinished()", span="938-938"];
m2_532 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="throw JsonReaderException.Create(this, ''Unexpected state: {0}.''.FormatWith(CultureInfo.InvariantCulture, CurrentState));", span="941-941"];
m2_476 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label=readType, span="859-859"];
m2_459 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="State.Start", span="836-836"];
m2_529 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="State.Finished", span="937-937"];
m2_466 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label=true, span="843-843"];
m2_468 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label=currentChar, span="847-847"];
m2_527 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="!char.IsWhiteSpace(currentChar)", span="928-928"];
m2_469 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="'\0'", span="849-849"];
m2_472 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="return null;", span="853-853"];
m2_474 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="'\''", span="857-857"];
m2_477 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="ReadType.ReadAsInt32", span="861-861"];
m2_479 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="ReadType.ReadAsDecimal", span="863-863"];
m2_481 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="ReadType.ReadAsDouble", span="865-865"];
m2_484 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="'n'", span="870-870"];
m2_486 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="return null;", span="872-872"];
m2_487 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="'N'", span="873-873"];
m2_489 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="'I'", span="875-875"];
m2_491 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="'-'", span="877-877"];
m2_506 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="'9'", span="897-897"];
m2_509 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="'/'", span="900-900"];
m2_511 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="','", span="903-903"];
m2_513 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="']'", span="906-906"];
m2_517 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="return null;", span="911-911"];
m2_519 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="StringUtils.CarriageReturn", span="914-914"];
m2_521 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="StringUtils.LineFeed", span="917-917"];
m2_524 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="StringUtils.Tab", span="921-921"];
m2_531 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="return null;", span="939-939"];
m2_460 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="State.Property", span="837-837"];
m2_465 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="State.PostValue", span="842-842"];
m2_473 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="''''", span="856-856"];
m2_496 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="'.'", span="887-887"];
m2_523 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="' '", span="920-920"];
m2_505 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="'8'", span="896-896"];
m2_461 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="State.Array", span="838-838"];
m2_464 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="State.ConstructorStart", span="841-841"];
m2_497 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="'0'", span="888-888"];
m2_504 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="'7'", span="895-895"];
m2_462 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="State.ArrayStart", span="839-839"];
m2_463 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="State.Constructor", span="840-840"];
m2_498 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="'1'", span="889-889"];
m2_503 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="'6'", span="894-894"];
m2_499 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="'2'", span="890-890"];
m2_502 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="'5'", span="893-893"];
m2_500 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="'3'", span="891-891"];
m2_501 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="'4'", span="892-892"];
m2_533 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", span="830-830"];
m2_684 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.HexTextToInt(char[], int, int)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.HexTextToInt(char[], int, int)", span="956-956"];
m2_829 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", span="1498-1498"];
m2_834 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="TypeNameHandlingTests.cs", label="int initialPosition = _charPos", span="1500-1500"];
m2_836 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="TypeNameHandlingTests.cs", label="_chars[_charPos]", span="1505-1505"];
m2_838 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="TypeNameHandlingTests.cs", label="_charsUsed == _charPos", span="1508-1508"];
m2_839 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="TypeNameHandlingTests.cs", label="ReadData(true) == 0", span="1510-1510"];
m2_840 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="TypeNameHandlingTests.cs", label="throw JsonReaderException.Create(this, ''Unexpected end while parsing unquoted property name.'');", span="1512-1512"];
m2_841 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="TypeNameHandlingTests.cs", label="_stringReference = new StringReference(_chars, initialPosition, _charPos - initialPosition)", span="1518-1518"];
m2_843 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="TypeNameHandlingTests.cs", label="char currentChar = _chars[_charPos]", span="1521-1521"];
m2_844 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="TypeNameHandlingTests.cs", label="ValidIdentifierChar(currentChar)", span="1523-1523"];
m2_845 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="TypeNameHandlingTests.cs", label="_charPos++", span="1525-1525"];
m2_847 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="TypeNameHandlingTests.cs", label="_stringReference = new StringReference(_chars, initialPosition, _charPos - initialPosition)", span="1530-1530"];
m2_849 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="TypeNameHandlingTests.cs", label="throw JsonReaderException.Create(this, ''Invalid JavaScript property identifier character: {0}.''.FormatWith(CultureInfo.InvariantCulture, currentChar));", span="1534-1534"];
m2_835 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="TypeNameHandlingTests.cs", label=true, span="1503-1503"];
m2_837 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="TypeNameHandlingTests.cs", label="'\0'", span="1507-1507"];
m2_842 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="TypeNameHandlingTests.cs", label="return;", span="1519-1519"];
m2_846 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="TypeNameHandlingTests.cs", label="char.IsWhiteSpace(currentChar) || currentChar == ':'", span="1528-1528"];
m2_848 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="TypeNameHandlingTests.cs", label="return;", span="1531-1531"];
m2_850 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", span="1498-1498"];
m2_1262 [cluster="Newtonsoft.Json.JsonTextReader.Close()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.Close()", span="2399-2399"];
m2_1263 [cluster="Newtonsoft.Json.JsonTextReader.Close()", file="TypeNameHandlingTests.cs", label="base.Close()", span="2401-2401"];
m2_1264 [cluster="Newtonsoft.Json.JsonTextReader.Close()", file="TypeNameHandlingTests.cs", label="_chars != null", span="2403-2403"];
m2_1265 [cluster="Newtonsoft.Json.JsonTextReader.Close()", file="TypeNameHandlingTests.cs", label="BufferUtils.ReturnBuffer(_arrayPool, _chars)", span="2405-2405"];
m2_1266 [cluster="Newtonsoft.Json.JsonTextReader.Close()", file="TypeNameHandlingTests.cs", label="_chars = null", span="2406-2406"];
m2_1267 [cluster="Newtonsoft.Json.JsonTextReader.Close()", file="TypeNameHandlingTests.cs", label="CloseInput && _reader != null", span="2409-2409"];
m2_1268 [cluster="Newtonsoft.Json.JsonTextReader.Close()", file="TypeNameHandlingTests.cs", label="_reader.Close()", span="2412-2412"];
m2_1269 [cluster="Newtonsoft.Json.JsonTextReader.Close()", file="TypeNameHandlingTests.cs", label="_stringBuffer.Clear(_arrayPool)", span="2418-2418"];
m2_1270 [cluster="Newtonsoft.Json.JsonTextReader.Close()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonTextReader.Close()", span="2399-2399"];
m2_543 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDouble()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDouble()", span="969-969"];
m2_544 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDouble()", file="TypeNameHandlingTests.cs", label="return (double?)ReadNumberValue(ReadType.ReadAsDouble);", span="971-971"];
m2_545 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDouble()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadAsDouble()", span="969-969"];
m2_800 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseProperty()", span="1437-1437"];
m2_801 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="TypeNameHandlingTests.cs", label="char firstChar = _chars[_charPos]", span="1439-1439"];
m2_804 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="TypeNameHandlingTests.cs", label="_charPos++", span="1444-1444"];
m2_806 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="TypeNameHandlingTests.cs", label="ShiftBufferIfNeeded()", span="1446-1446"];
m2_807 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="TypeNameHandlingTests.cs", label="ReadStringIntoBuffer(quoteChar)", span="1447-1447"];
m2_808 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="TypeNameHandlingTests.cs", label="ValidIdentifierChar(firstChar)", span="1449-1449"];
m2_810 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="TypeNameHandlingTests.cs", label="ShiftBufferIfNeeded()", span="1452-1452"];
m2_811 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="TypeNameHandlingTests.cs", label="ParseUnquotedProperty()", span="1453-1453"];
m2_812 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="TypeNameHandlingTests.cs", label="throw JsonReaderException.Create(this, ''Invalid property identifier character: {0}.''.FormatWith(CultureInfo.InvariantCulture, _chars[_charPos]));", span="1457-1457"];
m2_814 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="TypeNameHandlingTests.cs", label="NameTable != null", span="1462-1462"];
m2_815 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="TypeNameHandlingTests.cs", label="propertyName = NameTable.Get(_stringReference.Chars, _stringReference.StartIndex, _stringReference.Length)", span="1464-1464"];
m2_817 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="TypeNameHandlingTests.cs", label="propertyName = _stringReference.ToString()", span="1469-1469"];
m2_818 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="TypeNameHandlingTests.cs", label="propertyName = _stringReference.ToString()", span="1474-1474"];
m2_819 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="TypeNameHandlingTests.cs", label="EatWhitespace(false)", span="1477-1477"];
m2_820 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="TypeNameHandlingTests.cs", label="_chars[_charPos] != ':'", span="1479-1479"];
m2_821 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="TypeNameHandlingTests.cs", label="throw JsonReaderException.Create(this, ''Invalid character after parsing property name. Expected ':' but got: {0}.''.FormatWith(CultureInfo.InvariantCulture, _chars[_charPos]));", span="1481-1481"];
m2_822 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="TypeNameHandlingTests.cs", label="_charPos++", span="1484-1484"];
m2_823 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="TypeNameHandlingTests.cs", label="SetToken(JsonToken.PropertyName, propertyName)", span="1486-1486"];
m2_824 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="TypeNameHandlingTests.cs", label="_quoteChar = quoteChar", span="1487-1487"];
m2_825 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="TypeNameHandlingTests.cs", label="ClearRecentString()", span="1488-1488"];
m2_802 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="TypeNameHandlingTests.cs", label="char quoteChar", span="1440-1440"];
m2_803 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="TypeNameHandlingTests.cs", label="firstChar == '''' || firstChar == '\''", span="1442-1442"];
m2_805 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="TypeNameHandlingTests.cs", label="quoteChar = firstChar", span="1445-1445"];
m2_813 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="TypeNameHandlingTests.cs", label="string propertyName", span="1460-1460"];
m2_809 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="TypeNameHandlingTests.cs", label="quoteChar = '\0'", span="1451-1451"];
m2_816 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="TypeNameHandlingTests.cs", label="propertyName == null", span="1467-1467"];
m2_826 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="TypeNameHandlingTests.cs", label="return true;", span="1490-1490"];
m2_827 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseProperty()", span="1437-1437"];
m2_675 [cluster="Newtonsoft.Json.Utilities.StringBuffer.Append(Newtonsoft.Json.IArrayPool<char>, char)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Utilities.StringBuffer.Append(Newtonsoft.Json.IArrayPool<char>, char)", span="58-58"];
m2_448 [cluster="Newtonsoft.Json.JsonReader.ReadBooleanString(string)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonReader.ReadBooleanString(string)", span="708-708"];
m2_1111 [cluster="decimal.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out decimal)", file="TypeNameHandlingTests.cs", label="Entry decimal.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out decimal)", span="0-0"];
m2_189 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsBytes()", span="448-448"];
m2_190 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs", label="EnsureBuffer()", span="450-450"];
m2_192 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs", label=_currentState, span="453-453"];
m2_201 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs", label="char currentChar = _chars[_charPos]", span="464-464"];
m2_204 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs", label="ReadNullChar()", span="469-469"];
m2_205 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs", label="SetToken(JsonToken.None, null, false)", span="471-471"];
m2_209 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs", label="ParseString(currentChar, ReadType.ReadAsBytes)", span="477-477"];
m2_210 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs", label="byte[] data = (byte[])Value", span="478-478"];
m2_212 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs", label="ReaderReadAndAssert()", span="481-481"];
m2_213 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs", label="TokenType != JsonToken.EndObject", span="482-482"];
m2_214 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs", label="throw JsonReaderException.Create(this, ''Error reading bytes. Unexpected token: {0}.''.FormatWith(CultureInfo.InvariantCulture, TokenType));", span="484-484"];
m2_215 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs", label="SetToken(JsonToken.Bytes, data, false)", span="486-486"];
m2_218 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs", label="_charPos++", span="490-490"];
m2_219 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs", label="SetToken(JsonToken.StartObject)", span="491-491"];
m2_220 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs", label="ReadIntoWrappedTypeObject()", span="492-492"];
m2_223 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs", label="_charPos++", span="496-496"];
m2_224 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs", label="SetToken(JsonToken.StartArray)", span="497-497"];
m2_225 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs", label="return ReadArrayIntoByteArray();", span="498-498"];
m2_227 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs", label="HandleNull()", span="500-500"];
m2_230 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs", label="ParseComment(false)", span="503-503"];
m2_232 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs", label="ProcessValueComma()", span="506-506"];
m2_234 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs", label="_charPos++", span="509-509"];
m2_235 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs", label="_currentState == State.Array || _currentState == State.ArrayStart || _currentState == State.PostValue", span="510-510"];
m2_236 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs", label="SetToken(JsonToken.EndArray)", span="512-512"];
m2_238 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs", label="throw CreateUnexpectedCharacterException(currentChar);", span="515-515"];
m2_240 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs", label="ProcessCarriageReturn(false)", span="517-517"];
m2_242 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs", label="ProcessLineFeed()", span="520-520"];
m2_245 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs", label="_charPos++", span="525-525"];
m2_246 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs", label="_charPos++", span="528-528"];
m2_248 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs", label="throw CreateUnexpectedCharacterException(currentChar);", span="532-532"];
m2_250 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs", label="ReadFinished()", span="540-540"];
m2_252 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs", label="throw JsonReaderException.Create(this, ''Unexpected state: {0}.''.FormatWith(CultureInfo.InvariantCulture, CurrentState));", span="543-543"];
m2_191 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs", label="bool isWrapped = false", span="451-451"];
m2_193 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs", label="State.Start", span="455-455"];
m2_249 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs", label="State.Finished", span="539-539"];
m2_200 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs", label=true, span="462-462"];
m2_202 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs", label=currentChar, span="466-466"];
m2_247 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs", label="!char.IsWhiteSpace(currentChar)", span="530-530"];
m2_203 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs", label="'\0'", span="468-468"];
m2_206 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs", label="return null;", span="472-472"];
m2_208 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs", label="'\''", span="476-476"];
m2_211 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs", label=isWrapped, span="479-479"];
m2_216 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs", label="return data;", span="488-488"];
m2_217 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs", label="'{'", span="489-489"];
m2_221 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs", label="isWrapped = true", span="493-493"];
m2_222 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs", label="'['", span="495-495"];
m2_226 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs", label="'n'", span="499-499"];
m2_228 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs", label="return null;", span="501-501"];
m2_229 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs", label="'/'", span="502-502"];
m2_231 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs", label="','", span="505-505"];
m2_233 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs", label="']'", span="508-508"];
m2_237 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs", label="return null;", span="513-513"];
m2_239 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs", label="StringUtils.CarriageReturn", span="516-516"];
m2_241 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs", label="StringUtils.LineFeed", span="519-519"];
m2_244 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs", label="StringUtils.Tab", span="523-523"];
m2_251 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs", label="return null;", span="541-541"];
m2_194 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs", label="State.Property", span="456-456"];
m2_199 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs", label="State.PostValue", span="461-461"];
m2_207 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs", label="''''", span="475-475"];
m2_243 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs", label="' '", span="522-522"];
m2_195 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs", label="State.Array", span="457-457"];
m2_198 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs", label="State.ConstructorStart", span="460-460"];
m2_196 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs", label="State.ArrayStart", span="458-458"];
m2_197 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs", label="State.Constructor", span="459-459"];
m2_253 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadAsBytes()", span="448-448"];
m2_118 [cluster="Newtonsoft.Json.Utilities.BufferUtils.ReturnBuffer(Newtonsoft.Json.IArrayPool<char>, char[])", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Utilities.BufferUtils.ReturnBuffer(Newtonsoft.Json.IArrayPool<char>, char[])", span="54-54"];
m2_668 [cluster="Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(char, int, int)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(char, int, int)", span="1215-1215"];
m2_672 [cluster="Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(char, int, int)", file="TypeNameHandlingTests.cs", label="_stringBuffer.Append(_arrayPool, _chars, lastWritePosition, writeToPosition - lastWritePosition)", span="1219-1219"];
m2_673 [cluster="Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(char, int, int)", file="TypeNameHandlingTests.cs", label="_stringBuffer.Append(_arrayPool, writeChar)", span="1222-1222"];
m2_671 [cluster="Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(char, int, int)", file="TypeNameHandlingTests.cs", label="writeToPosition > lastWritePosition", span="1217-1217"];
m2_674 [cluster="Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(char, int, int)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(char, int, int)", span="1215-1215"];
m2_828 [cluster="Newtonsoft.Json.JsonTextReader.ValidIdentifierChar(char)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.ValidIdentifierChar(char)", span="1493-1493"];
m2_831 [cluster="Newtonsoft.Json.JsonTextReader.ValidIdentifierChar(char)", file="TypeNameHandlingTests.cs", label="return (char.IsLetterOrDigit(value) || value == '_' || value == '$');", span="1495-1495"];
m2_832 [cluster="Newtonsoft.Json.JsonTextReader.ValidIdentifierChar(char)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonTextReader.ValidIdentifierChar(char)", span="1493-1493"];
m2_169 [cluster="Newtonsoft.Json.JsonTextReader.EnsureBuffer()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.EnsureBuffer()", span="1034-1034"];
m2_574 [cluster="Newtonsoft.Json.JsonTextReader.EnsureBuffer()", file="TypeNameHandlingTests.cs", label="_chars == null", span="1036-1036"];
m2_575 [cluster="Newtonsoft.Json.JsonTextReader.EnsureBuffer()", file="TypeNameHandlingTests.cs", label="_chars = BufferUtils.RentBuffer(_arrayPool, 1024)", span="1038-1038"];
m2_576 [cluster="Newtonsoft.Json.JsonTextReader.EnsureBuffer()", file="TypeNameHandlingTests.cs", label="_chars[0] = '\0'", span="1039-1039"];
m2_577 [cluster="Newtonsoft.Json.JsonTextReader.EnsureBuffer()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonTextReader.EnsureBuffer()", span="1034-1034"];
m2_185 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", span="547-547"];
m2_297 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="throw new ArgumentOutOfRangeException(nameof(readType));", span="597-597"];
m2_265 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="EnsureBuffer()", span="549-549"];
m2_266 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label=_currentState, span="551-551"];
m2_275 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="char currentChar = _chars[_charPos]", span="562-562"];
m2_278 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="ReadNullChar()", span="567-567"];
m2_279 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="SetToken(JsonToken.None, null, false)", span="569-569"];
m2_283 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="ParseString(currentChar, readType)", span="575-575"];
m2_286 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="return Value;", span="579-579"];
m2_288 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="return Value;", span="581-581"];
m2_290 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="Value is DateTime", span="583-583"];
m2_291 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="return (DateTime)Value;", span="585-585"];
m2_292 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="return ReadDateTimeString((string)Value);", span="587-587"];
m2_294 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="Value is DateTimeOffset", span="590-590"];
m2_295 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="return (DateTimeOffset)Value;", span="592-592"];
m2_296 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="return ReadDateTimeOffsetString((string)Value);", span="594-594"];
m2_299 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="EnsureChars(1, true) && _chars[_charPos + 1] == 'I'", span="600-600"];
m2_300 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="return ParseNumberNegativeInfinity(readType);", span="602-602"];
m2_301 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="ParseNumber(readType)", span="606-606"];
m2_302 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="return Value;", span="607-607"];
m2_315 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="_charPos++", span="622-622"];
m2_316 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="throw CreateUnexpectedCharacterException(currentChar);", span="623-623"];
m2_317 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="ParseNumber(ReadType.ReadAsString)", span="625-625"];
m2_318 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="return Value;", span="626-626"];
m2_322 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="_charPos++", span="631-631"];
m2_323 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="throw CreateUnexpectedCharacterException(currentChar);", span="632-632"];
m2_325 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="!MatchValueWithTrailingSeparator(expected)", span="635-635"];
m2_326 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="throw CreateUnexpectedCharacterException(_chars[_charPos]);", span="637-637"];
m2_327 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="SetToken(JsonToken.String, expected)", span="639-639"];
m2_330 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="return ParseNumberPositiveInfinity(readType);", span="642-642"];
m2_332 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="return ParseNumberNaN(readType);", span="644-644"];
m2_334 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="HandleNull()", span="646-646"];
m2_337 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="ParseComment(false)", span="649-649"];
m2_339 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="ProcessValueComma()", span="652-652"];
m2_341 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="_charPos++", span="655-655"];
m2_342 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="_currentState == State.Array || _currentState == State.ArrayStart || _currentState == State.PostValue", span="656-656"];
m2_343 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="SetToken(JsonToken.EndArray)", span="658-658"];
m2_345 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="throw CreateUnexpectedCharacterException(currentChar);", span="661-661"];
m2_347 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="ProcessCarriageReturn(false)", span="663-663"];
m2_349 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="ProcessLineFeed()", span="666-666"];
m2_352 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="_charPos++", span="671-671"];
m2_353 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="_charPos++", span="674-674"];
m2_355 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="throw CreateUnexpectedCharacterException(currentChar);", span="678-678"];
m2_357 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="ReadFinished()", span="686-686"];
m2_359 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="throw JsonReaderException.Create(this, ''Unexpected state: {0}.''.FormatWith(CultureInfo.InvariantCulture, CurrentState));", span="689-689"];
m2_284 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label=readType, span="576-576"];
m2_267 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="State.Start", span="553-553"];
m2_356 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="State.Finished", span="685-685"];
m2_274 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label=true, span="560-560"];
m2_276 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label=currentChar, span="564-564"];
m2_324 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="string expected = currentChar == 't' ? JsonConvert.True : JsonConvert.False", span="634-634"];
m2_354 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="!char.IsWhiteSpace(currentChar)", span="676-676"];
m2_277 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="'\0'", span="566-566"];
m2_280 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="return null;", span="570-570"];
m2_282 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="'\''", span="574-574"];
m2_285 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="ReadType.ReadAsBytes", span="578-578"];
m2_287 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="ReadType.ReadAsString", span="580-580"];
m2_289 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="ReadType.ReadAsDateTime", span="582-582"];
m2_293 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="ReadType.ReadAsDateTimeOffset", span="589-589"];
m2_298 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="'-'", span="599-599"];
m2_314 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="readType != ReadType.ReadAsString", span="620-620"];
m2_321 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="readType != ReadType.ReadAsString", span="629-629"];
m2_328 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="return expected;", span="640-640"];
m2_329 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="'I'", span="641-641"];
m2_331 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="'N'", span="643-643"];
m2_333 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="'n'", span="645-645"];
m2_335 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="return null;", span="647-647"];
m2_336 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="'/'", span="648-648"];
m2_338 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="','", span="651-651"];
m2_340 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="']'", span="654-654"];
m2_344 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="return null;", span="659-659"];
m2_346 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="StringUtils.CarriageReturn", span="662-662"];
m2_348 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="StringUtils.LineFeed", span="665-665"];
m2_351 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="StringUtils.Tab", span="669-669"];
m2_358 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="return null;", span="687-687"];
m2_268 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="State.Property", span="554-554"];
m2_273 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="State.PostValue", span="559-559"];
m2_281 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="''''", span="573-573"];
m2_303 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="'.'", span="609-609"];
m2_319 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="'t'", span="627-627"];
m2_350 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="' '", span="668-668"];
m2_313 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="'9'", span="619-619"];
m2_320 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="'f'", span="628-628"];
m2_269 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="State.Array", span="555-555"];
m2_272 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="State.ConstructorStart", span="558-558"];
m2_304 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="'0'", span="610-610"];
m2_312 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="'8'", span="618-618"];
m2_270 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="State.ArrayStart", span="556-556"];
m2_271 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="State.Constructor", span="557-557"];
m2_305 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="'1'", span="611-611"];
m2_311 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="'7'", span="617-617"];
m2_306 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="'2'", span="612-612"];
m2_310 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="'6'", span="616-616"];
m2_307 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="'3'", span="613-613"];
m2_309 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="'5'", span="615-615"];
m2_308 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="'4'", span="614-614"];
m2_360 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", span="547-547"];
m2_931 [cluster="Newtonsoft.Json.JsonTextReader.ParseFalse()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseFalse()", span="2309-2309"];
m2_1219 [cluster="Newtonsoft.Json.JsonTextReader.ParseFalse()", file="TypeNameHandlingTests.cs", label="MatchValueWithTrailingSeparator(JsonConvert.False)", span="2311-2311"];
m2_1220 [cluster="Newtonsoft.Json.JsonTextReader.ParseFalse()", file="TypeNameHandlingTests.cs", label="SetToken(JsonToken.Boolean, false)", span="2313-2313"];
m2_1221 [cluster="Newtonsoft.Json.JsonTextReader.ParseFalse()", file="TypeNameHandlingTests.cs", label="throw JsonReaderException.Create(this, ''Error parsing boolean value.'');", span="2317-2317"];
m2_1222 [cluster="Newtonsoft.Json.JsonTextReader.ParseFalse()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseFalse()", span="2309-2309"];
m2_1105 [cluster="System.Convert.ToInt64(string, int)", file="TypeNameHandlingTests.cs", label="Entry System.Convert.ToInt64(string, int)", span="0-0"];
m2_372 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", span="702-702"];
m2_373 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label="EnsureBuffer()", span="704-704"];
m2_374 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label=_currentState, span="706-706"];
m2_383 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label="char currentChar = _chars[_charPos]", span="717-717"];
m2_386 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label="ReadNullChar()", span="722-722"];
m2_387 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label="SetToken(JsonToken.None, null, false)", span="724-724"];
m2_391 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label="ParseString(currentChar, ReadType.Read)", span="730-730"];
m2_392 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label="return ReadBooleanString(_stringReference.ToString());", span="731-731"];
m2_394 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label="HandleNull()", span="733-733"];
m2_408 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label="ParseNumber(ReadType.Read)", span="747-747"];
m2_410 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label="Value is BigInteger", span="750-750"];
m2_411 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label="b = (BigInteger)Value != 0", span="752-752"];
m2_412 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label="b = Convert.ToBoolean(Value, CultureInfo.InvariantCulture)", span="757-757"];
m2_413 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label="SetToken(JsonToken.Boolean, b, false)", span="759-759"];
m2_419 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label="!MatchValueWithTrailingSeparator(expected)", span="766-766"];
m2_420 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label="throw CreateUnexpectedCharacterException(_chars[_charPos]);", span="768-768"];
m2_421 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label="SetToken(JsonToken.Boolean, isTrue)", span="770-770"];
m2_424 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label="ParseComment(false)", span="773-773"];
m2_426 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label="ProcessValueComma()", span="776-776"];
m2_428 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label="_charPos++", span="779-779"];
m2_429 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label="_currentState == State.Array || _currentState == State.ArrayStart || _currentState == State.PostValue", span="780-780"];
m2_430 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label="SetToken(JsonToken.EndArray)", span="782-782"];
m2_432 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label="throw CreateUnexpectedCharacterException(currentChar);", span="785-785"];
m2_434 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label="ProcessCarriageReturn(false)", span="787-787"];
m2_436 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label="ProcessLineFeed()", span="790-790"];
m2_439 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label="_charPos++", span="795-795"];
m2_440 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label="_charPos++", span="798-798"];
m2_442 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label="throw CreateUnexpectedCharacterException(currentChar);", span="802-802"];
m2_444 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label="ReadFinished()", span="810-810"];
m2_446 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label="throw JsonReaderException.Create(this, ''Unexpected state: {0}.''.FormatWith(CultureInfo.InvariantCulture, CurrentState));", span="813-813"];
m2_375 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label="State.Start", span="708-708"];
m2_443 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label="State.Finished", span="809-809"];
m2_382 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label=true, span="715-715"];
m2_384 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label=currentChar, span="719-719"];
m2_417 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label="bool isTrue = currentChar == 't'", span="763-763"];
m2_441 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label="!char.IsWhiteSpace(currentChar)", span="800-800"];
m2_385 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label="'\0'", span="721-721"];
m2_388 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label="return null;", span="725-725"];
m2_390 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label="'\''", span="729-729"];
m2_393 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label="'n'", span="732-732"];
m2_395 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label="return null;", span="734-734"];
m2_407 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label="'9'", span="746-746"];
m2_409 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label="bool b", span="748-748"];
m2_414 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label="return b;", span="760-760"];
m2_418 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label="string expected = isTrue ? JsonConvert.True : JsonConvert.False", span="764-764"];
m2_422 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label="return isTrue;", span="771-771"];
m2_423 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label="'/'", span="772-772"];
m2_425 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label="','", span="775-775"];
m2_427 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label="']'", span="778-778"];
m2_431 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label="return null;", span="783-783"];
m2_433 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label="StringUtils.CarriageReturn", span="786-786"];
m2_435 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label="StringUtils.LineFeed", span="789-789"];
m2_437 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label="' '", span="792-792"];
m2_438 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label="StringUtils.Tab", span="793-793"];
m2_445 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label="return null;", span="811-811"];
m2_376 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label="State.Property", span="709-709"];
m2_381 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label="State.PostValue", span="714-714"];
m2_389 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label="''''", span="728-728"];
m2_396 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label="'-'", span="735-735"];
m2_415 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label="'t'", span="761-761"];
m2_416 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label="'f'", span="762-762"];
m2_406 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label="'8'", span="745-745"];
m2_377 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label="State.Array", span="710-710"];
m2_380 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label="State.ConstructorStart", span="713-713"];
m2_397 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label="'.'", span="736-736"];
m2_405 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label="'7'", span="744-744"];
m2_378 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label="State.ArrayStart", span="711-711"];
m2_379 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label="State.Constructor", span="712-712"];
m2_398 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label="'0'", span="737-737"];
m2_404 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label="'6'", span="743-743"];
m2_399 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label="'1'", span="738-738"];
m2_403 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label="'5'", span="742-742"];
m2_400 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label="'2'", span="739-739"];
m2_402 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label="'4'", span="741-741"];
m2_401 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label="'3'", span="740-740"];
m2_447 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", span="702-702"];
m2_6 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="TypeNameHandlingTests.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m2_670 [cluster="Newtonsoft.Json.Utilities.StringBuffer.Append(Newtonsoft.Json.IArrayPool<char>, char[], int, int)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Utilities.StringBuffer.Append(Newtonsoft.Json.IArrayPool<char>, char[], int, int)", span="70-70"];
m2_686 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", span="1242-1242"];
m2_687 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs", label="int charPos = _charPos", span="1244-1244"];
m2_689 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs", label="_chars[charPos]", span="1248-1248"];
m2_691 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs", label="_charPos = charPos", span="1251-1251"];
m2_692 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs", label="_charsUsed == charPos", span="1253-1253"];
m2_693 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs", label="ReadData(true) == 0", span="1255-1255"];
m2_724 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs", label="_charPos = charPos", span="1295-1295"];
m2_725 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs", label="char currentChar = _chars[_charPos]", span="1297-1297"];
m2_728 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs", label="throw JsonReaderException.Create(this, ''Unexpected character encountered while parsing number: {0}.''.FormatWith(CultureInfo.InvariantCulture, currentChar));", span="1303-1303"];
m2_688 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs", label=true, span="1246-1246"];
m2_723 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs", label="charPos++", span="1292-1292"];
m2_690 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs", label="'\0'", span="1250-1250"];
m2_696 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs", label="'-'", span="1265-1265"];
m2_695 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs", label="return;", span="1262-1262"];
m2_694 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs", label="return;", span="1257-1257"];
m2_726 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs", label="char.IsWhiteSpace(currentChar) || currentChar == ',' || currentChar == '}' || currentChar == ']' || currentChar == ')' || currentChar == '/'", span="1298-1298"];
m2_722 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs", label="'9'", span="1291-1291"];
m2_697 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs", label="'+'", span="1266-1266"];
m2_727 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs", label="return;", span="1300-1300"];
m2_721 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs", label="'8'", span="1290-1290"];
m2_698 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs", label="'a'", span="1267-1267"];
m2_720 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs", label="'7'", span="1289-1289"];
m2_699 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs", label="'A'", span="1268-1268"];
m2_719 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs", label="'6'", span="1288-1288"];
m2_700 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs", label="'b'", span="1269-1269"];
m2_718 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs", label="'5'", span="1287-1287"];
m2_701 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs", label="'B'", span="1270-1270"];
m2_717 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs", label="'4'", span="1286-1286"];
m2_702 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs", label="'c'", span="1271-1271"];
m2_716 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs", label="'3'", span="1285-1285"];
m2_703 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs", label="'C'", span="1272-1272"];
m2_715 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs", label="'2'", span="1284-1284"];
m2_704 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs", label="'d'", span="1273-1273"];
m2_714 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs", label="'1'", span="1283-1283"];
m2_705 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs", label="'D'", span="1274-1274"];
m2_713 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs", label="'0'", span="1282-1282"];
m2_706 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs", label="'e'", span="1275-1275"];
m2_712 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs", label="'.'", span="1281-1281"];
m2_707 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs", label="'E'", span="1276-1276"];
m2_711 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs", label="'X'", span="1280-1280"];
m2_708 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs", label="'f'", span="1277-1277"];
m2_710 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs", label="'x'", span="1279-1279"];
m2_709 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs", label="'F'", span="1278-1278"];
m2_729 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", span="1242-1242"];
m2_258 [cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.HandleNull()", span="974-974"];
m2_546 [cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="TypeNameHandlingTests.cs", label="EnsureChars(1, true)", span="976-976"];
m2_547 [cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="TypeNameHandlingTests.cs", label="char next = _chars[_charPos + 1]", span="978-978"];
m2_549 [cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="TypeNameHandlingTests.cs", label="ParseNull()", span="982-982"];
m2_551 [cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="TypeNameHandlingTests.cs", label="_charPos += 2", span="986-986"];
m2_552 [cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="TypeNameHandlingTests.cs", label="throw CreateUnexpectedCharacterException(_chars[_charPos - 1]);", span="987-987"];
m2_553 [cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="TypeNameHandlingTests.cs", label="_charPos = _charsUsed", span="990-990"];
m2_554 [cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="TypeNameHandlingTests.cs", label="throw CreateUnexpectedEndException();", span="991-991"];
m2_548 [cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="TypeNameHandlingTests.cs", label="next == 'u'", span="980-980"];
m2_550 [cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="TypeNameHandlingTests.cs", label="return;", span="983-983"];
m2_555 [cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonTextReader.HandleNull()", span="974-974"];
m2_174 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken)", span="946-946"];
m2_933 [cluster="Newtonsoft.Json.JsonTextReader.ParseUndefined()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseUndefined()", span="2297-2297"];
m2_1215 [cluster="Newtonsoft.Json.JsonTextReader.ParseUndefined()", file="TypeNameHandlingTests.cs", label="MatchValueWithTrailingSeparator(JsonConvert.Undefined)", span="2299-2299"];
m2_1216 [cluster="Newtonsoft.Json.JsonTextReader.ParseUndefined()", file="TypeNameHandlingTests.cs", label="SetToken(JsonToken.Undefined)", span="2301-2301"];
m2_1217 [cluster="Newtonsoft.Json.JsonTextReader.ParseUndefined()", file="TypeNameHandlingTests.cs", label="throw JsonReaderException.Create(this, ''Error parsing undefined value.'');", span="2305-2305"];
m2_1218 [cluster="Newtonsoft.Json.JsonTextReader.ParseUndefined()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseUndefined()", span="2297-2297"];
m2_666 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsLowSurrogate(char)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.IsLowSurrogate(char)", span="269-269"];
m2_1164 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.MatchValue(string)", span="2190-2190"];
m2_1165 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="TypeNameHandlingTests.cs", label="!EnsureChars(value.Length - 1, true)", span="2192-2192"];
m2_1166 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="TypeNameHandlingTests.cs", label="_charPos = _charsUsed", span="2194-2194"];
m2_1167 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="TypeNameHandlingTests.cs", label="throw CreateUnexpectedEndException();", span="2195-2195"];
m2_1170 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="TypeNameHandlingTests.cs", label="_chars[_charPos + i] != value[i]", span="2200-2200"];
m2_1171 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="TypeNameHandlingTests.cs", label="_charPos += i", span="2202-2202"];
m2_1174 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="TypeNameHandlingTests.cs", label="_charPos += value.Length", span="2207-2207"];
m2_1169 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="TypeNameHandlingTests.cs", label="i < value.Length", span="2198-2198"];
m2_1168 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="TypeNameHandlingTests.cs", label="int i = 0", span="2198-2198"];
m2_1173 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="TypeNameHandlingTests.cs", label="i++", span="2198-2198"];
m2_1172 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="TypeNameHandlingTests.cs", label="return false;", span="2203-2203"];
m2_1175 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="TypeNameHandlingTests.cs", label="return true;", span="2209-2209"];
m2_1176 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonTextReader.MatchValue(string)", span="2190-2190"];
m2_537 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", span="950-950"];
m2_538 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="TypeNameHandlingTests.cs", label="return (DateTimeOffset?)ReadStringValue(ReadType.ReadAsDateTimeOffset);", span="952-952"];
m2_539 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", span="950-950"];
m2_540 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", span="960-960"];
m2_541 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="TypeNameHandlingTests.cs", label="return (decimal?)ReadNumberValue(ReadType.ReadAsDecimal);", span="962-962"];
m2_542 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", span="960-960"];
m2_361 [cluster="Newtonsoft.Json.JsonReader.ReadDateTimeString(string)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonReader.ReadDateTimeString(string)", span="808-808"];
m2_7 [cluster="Unk.nameof", file="TypeNameHandlingTests.cs", label="Entry Unk.nameof", span=""];
m2_449 [cluster="System.Convert.ToBoolean(object, System.IFormatProvider)", file="TypeNameHandlingTests.cs", label="Entry System.Convert.ToBoolean(object, System.IFormatProvider)", span="0-0"];
m2_119 [cluster="System.IO.TextReader.Read(char[], int, int)", file="TypeNameHandlingTests.cs", label="Entry System.IO.TextReader.Read(char[], int, int)", span="0-0"];
m2_368 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", span="2346-2346"];
m2_1236 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="MatchValueWithTrailingSeparator(JsonConvert.PositiveInfinity)", span="2348-2348"];
m2_1240 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="_floatParseHandling == FloatParseHandling.Double", span="2354-2354"];
m2_1241 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="SetToken(JsonToken.Float, double.PositiveInfinity)", span="2356-2356"];
m2_1244 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="SetToken(JsonToken.String, JsonConvert.PositiveInfinity)", span="2361-2361"];
m2_1246 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="throw JsonReaderException.Create(this, ''Cannot read Infinity value.'');", span="2365-2365"];
m2_1247 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="throw JsonReaderException.Create(this, ''Error parsing Infinity value.'');", span="2368-2368"];
m2_1237 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label=readType, span="2350-2350"];
m2_1239 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="ReadType.ReadAsDouble", span="2353-2353"];
m2_1242 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="return double.PositiveInfinity;", span="2357-2357"];
m2_1243 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="ReadType.ReadAsString", span="2360-2360"];
m2_1245 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="return JsonConvert.PositiveInfinity;", span="2362-2362"];
m2_1238 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="ReadType.Read", span="2352-2352"];
m2_1248 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", span="2346-2346"];
m2_366 [cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", span="2212-2212"];
m2_1177 [cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", file="TypeNameHandlingTests.cs", label="bool match = MatchValue(value)", span="2215-2215"];
m2_1180 [cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", file="TypeNameHandlingTests.cs", label="!EnsureChars(0, false)", span="2222-2222"];
m2_1182 [cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", file="TypeNameHandlingTests.cs", label="return IsSeparator(_chars[_charPos]) || _chars[_charPos] == '\0';", span="2227-2227"];
m2_1178 [cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", file="TypeNameHandlingTests.cs", label="!match", span="2217-2217"];
m2_1181 [cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", file="TypeNameHandlingTests.cs", label="return true;", span="2224-2224"];
m2_1179 [cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", file="TypeNameHandlingTests.cs", label="return false;", span="2219-2219"];
m2_1183 [cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", span="2212-2212"];
m2_72 [cluster="System.Buffer.BlockCopy(System.Array, int, System.Array, int, int)", file="TypeNameHandlingTests.cs", label="Entry System.Buffer.BlockCopy(System.Array, int, System.Array, int, int)", span="0-0"];
m2_1272 [cluster="System.IO.TextReader.Close()", file="TypeNameHandlingTests.cs", label="Entry System.IO.TextReader.Close()", span="0-0"];
m2_3 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", color=green, community=0, file="TypeNameHandlingTests.cs", label="_reader = reader", prediction=6, span="85-85"];
m2_262 [cluster="Newtonsoft.Json.JsonTextReader.ProcessLineFeed()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.ProcessLineFeed()", span="1666-1666"];
m2_935 [cluster="Newtonsoft.Json.JsonTextReader.ProcessLineFeed()", file="TypeNameHandlingTests.cs", label="_charPos++", span="1668-1668"];
m2_936 [cluster="Newtonsoft.Json.JsonTextReader.ProcessLineFeed()", file="TypeNameHandlingTests.cs", label="OnNewLine(_charPos)", span="1669-1669"];
m2_937 [cluster="Newtonsoft.Json.JsonTextReader.ProcessLineFeed()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonTextReader.ProcessLineFeed()", span="1666-1666"];
m2_369 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", span="2371-2371"];
m2_1249 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="MatchValueWithTrailingSeparator(JsonConvert.NaN)", span="2373-2373"];
m2_1253 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="_floatParseHandling == FloatParseHandling.Double", span="2379-2379"];
m2_1254 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="SetToken(JsonToken.Float, double.NaN)", span="2381-2381"];
m2_1257 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="SetToken(JsonToken.String, JsonConvert.NaN)", span="2386-2386"];
m2_1259 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="throw JsonReaderException.Create(this, ''Cannot read NaN value.'');", span="2390-2390"];
m2_1260 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="throw JsonReaderException.Create(this, ''Error parsing NaN value.'');", span="2393-2393"];
m2_1250 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label=readType, span="2375-2375"];
m2_1252 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="ReadType.ReadAsDouble", span="2378-2378"];
m2_1255 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="return double.NaN;", span="2382-2382"];
m2_1256 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="ReadType.ReadAsString", span="2385-2385"];
m2_1258 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="return JsonConvert.NaN;", span="2387-2387"];
m2_1251 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="ReadType.Read", span="2377-2377"];
m2_1261 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", span="2371-2371"];
m2_0 [cluster="Newtonsoft.Json.Serialization.JsonDynamicContract.JsonDynamicContract(System.Type)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Serialization.JsonDynamicContract.JsonDynamicContract(System.Type)", span="55-55"];
m2_1 [cluster="Newtonsoft.Json.Serialization.JsonDynamicContract.JsonDynamicContract(System.Type)", color=green, community=0, file="TypeNameHandlingTests.cs", label="Properties = new JsonPropertyCollection(UnderlyingType)", prediction=7, span="58-58"];
m2_2 [cluster="Newtonsoft.Json.Serialization.JsonDynamicContract.JsonDynamicContract(System.Type)", color=green, community=0, file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Serialization.JsonDynamicContract.JsonDynamicContract(System.Type)", prediction=8, span="55-55"];
m2_4 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", color=green, community=0, file="TypeNameHandlingTests.cs", label="Newtonsoft.Json.Serialization.JsonDynamicContract", prediction=9, span=""];
m2_5 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="78-78"];
m2_1159 [cluster="Newtonsoft.Json.JsonTextReader.EndComment(bool, int, int)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.EndComment(bool, int, int)", span="2182-2182"];
m2_1161 [cluster="Newtonsoft.Json.JsonTextReader.EndComment(bool, int, int)", file="TypeNameHandlingTests.cs", label="SetToken(JsonToken.Comment, new string(_chars, initialPosition, endPosition - initialPosition))", span="2186-2186"];
m2_1160 [cluster="Newtonsoft.Json.JsonTextReader.EndComment(bool, int, int)", file="TypeNameHandlingTests.cs", label=setToken, span="2184-2184"];
m2_1162 [cluster="Newtonsoft.Json.JsonTextReader.EndComment(bool, int, int)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonTextReader.EndComment(bool, int, int)", span="2182-2182"];
m2_66 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(Newtonsoft.Json.Utilities.StringReference, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out System.DateTime)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(Newtonsoft.Json.Utilities.StringReference, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out System.DateTime)", span="343-343"];
m2_116 [cluster="System.Math.Max(int, int)", file="TypeNameHandlingTests.cs", label="Entry System.Math.Max(int, int)", span="0-0"];
m2_1273 [cluster="Newtonsoft.Json.Utilities.StringBuffer.Clear(Newtonsoft.Json.IArrayPool<char>)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Utilities.StringBuffer.Clear(Newtonsoft.Json.IArrayPool<char>)", span="82-82"];
m2_535 [cluster="Newtonsoft.Json.JsonReader.ReadDecimalString(string)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonReader.ReadDecimalString(string)", span="758-758"];
m2_1184 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.IsSeparator(char)", span="2230-2230"];
m2_1191 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="TypeNameHandlingTests.cs", label="!EnsureChars(1, false)", span="2240-2240"];
m2_1193 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="TypeNameHandlingTests.cs", label="var nextChart = _chars[_charPos + 1]", span="2245-2245"];
m2_1196 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="TypeNameHandlingTests.cs", label="CurrentState == State.Constructor || CurrentState == State.ConstructorStart", span="2249-2249"];
m2_1190 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="TypeNameHandlingTests.cs", label="'/'", span="2238-2238"];
m2_1192 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="TypeNameHandlingTests.cs", label="return false;", span="2242-2242"];
m2_1194 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="TypeNameHandlingTests.cs", label="return (nextChart == '*' || nextChart == '/');", span="2247-2247"];
m2_1195 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="TypeNameHandlingTests.cs", label="')'", span="2248-2248"];
m2_1197 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="TypeNameHandlingTests.cs", label="return true;", span="2251-2251"];
m2_1205 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="TypeNameHandlingTests.cs", label="return false;", span="2267-2267"];
m2_1185 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="TypeNameHandlingTests.cs", label=c, span="2232-2232"];
m2_1203 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="TypeNameHandlingTests.cs", label="char.IsWhiteSpace(c)", span="2260-2260"];
m2_1189 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="TypeNameHandlingTests.cs", label="return true;", span="2237-2237"];
m2_1202 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="TypeNameHandlingTests.cs", label="return true;", span="2258-2258"];
m2_1204 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="TypeNameHandlingTests.cs", label="return true;", span="2262-2262"];
m2_1186 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="TypeNameHandlingTests.cs", label="'}'", span="2234-2234"];
m2_1198 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="TypeNameHandlingTests.cs", label="' '", span="2254-2254"];
m2_1188 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="TypeNameHandlingTests.cs", label="','", span="2236-2236"];
m2_1201 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="TypeNameHandlingTests.cs", label="StringUtils.CarriageReturn", span="2257-2257"];
m2_1187 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="TypeNameHandlingTests.cs", label="']'", span="2235-2235"];
m2_1199 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="TypeNameHandlingTests.cs", label="StringUtils.Tab", span="2255-2255"];
m2_1200 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="TypeNameHandlingTests.cs", label="StringUtils.LineFeed", span="2256-2256"];
m2_1206 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonTextReader.IsSeparator(char)", span="2230-2230"];
m2_13 [cluster="Newtonsoft.Json.JsonTextReader.OnNewLine(int)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.OnNewLine(int)", span="121-121"];
m2_14 [cluster="Newtonsoft.Json.JsonTextReader.OnNewLine(int)", color=green, community=0, file="TypeNameHandlingTests.cs", label="_lineNumber++", prediction=9, span="123-123"];
m2_15 [cluster="Newtonsoft.Json.JsonTextReader.OnNewLine(int)", color=green, community=0, file="TypeNameHandlingTests.cs", label="_lineStartPos = pos", prediction=11, span="124-124"];
m2_16 [cluster="Newtonsoft.Json.JsonTextReader.OnNewLine(int)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonTextReader.OnNewLine(int)", span="121-121"];
m2_1112 [cluster="System.Convert.ToDouble(long)", file="TypeNameHandlingTests.cs", label="Entry System.Convert.ToDouble(long)", span="0-0"];
m2_176 [cluster="string.FormatWith(System.IFormatProvider, object)", file="TypeNameHandlingTests.cs", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
m2_734 [cluster="Newtonsoft.Json.Utilities.StringReference.StringReference()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Utilities.StringReference.StringReference()", span="29-29"];
m2_256 [cluster="Newtonsoft.Json.JsonReader.ReadIntoWrappedTypeObject()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonReader.ReadIntoWrappedTypeObject()", span="903-903"];
m2_536 [cluster="Newtonsoft.Json.JsonReader.ReadDoubleString(string)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonReader.ReadDoubleString(string)", span="647-647"];
m2_12 [cluster="Newtonsoft.Json.Utilities.StringBuffer.StringBuffer(Newtonsoft.Json.IArrayPool<char>, int)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Utilities.StringBuffer.StringBuffer(Newtonsoft.Json.IArrayPool<char>, int)", span="48-48"];
m2_261 [cluster="Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", span="1672-1672"];
m2_938 [cluster="Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", file="TypeNameHandlingTests.cs", label="_charPos++", span="1674-1674"];
m2_939 [cluster="Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", file="TypeNameHandlingTests.cs", label="EnsureChars(1, append) && _chars[_charPos] == StringUtils.LineFeed", span="1676-1676"];
m2_940 [cluster="Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", file="TypeNameHandlingTests.cs", label="_charPos++", span="1678-1678"];
m2_941 [cluster="Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", file="TypeNameHandlingTests.cs", label="OnNewLine(_charPos)", span="1681-1681"];
m2_942 [cluster="Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", span="1672-1672"];
m2_67 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffset(Newtonsoft.Json.Utilities.StringReference, string, System.Globalization.CultureInfo, out System.DateTimeOffset)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffset(Newtonsoft.Json.Utilities.StringReference, string, System.Globalization.CultureInfo, out System.DateTimeOffset)", span="416-416"];
m2_125 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", span="327-327"];
m2_126 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="TypeNameHandlingTests.cs", label=_isEndOfFile, span="329-329"];
m2_128 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="TypeNameHandlingTests.cs", label="int charsRequired = _charPos + relativePosition - _charsUsed + 1", span="334-334"];
m2_130 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="TypeNameHandlingTests.cs", label="int charsRead = ReadData(append, charsRequired - totalCharsRead)", span="342-342"];
m2_127 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="TypeNameHandlingTests.cs", label="return false;", span="331-331"];
m2_129 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="TypeNameHandlingTests.cs", label="int totalCharsRead = 0", span="336-336"];
m2_133 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="TypeNameHandlingTests.cs", label="totalCharsRead < charsRequired", span="351-351"];
m2_134 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="TypeNameHandlingTests.cs", label="totalCharsRead < charsRequired", span="353-353"];
m2_131 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="TypeNameHandlingTests.cs", label="charsRead == 0", span="345-345"];
m2_132 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="TypeNameHandlingTests.cs", label="totalCharsRead += charsRead", span="350-350"];
m2_135 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="TypeNameHandlingTests.cs", label="return false;", span="355-355"];
m2_136 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="TypeNameHandlingTests.cs", label="return true;", span="357-357"];
m2_137 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", span="327-327"];
m2_1103 [cluster="char.IsDigit(char)", file="TypeNameHandlingTests.cs", label="Entry char.IsDigit(char)", span="0-0"];
m2_930 [cluster="Newtonsoft.Json.JsonTextReader.ParseTrue()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseTrue()", span="2270-2270"];
m2_1207 [cluster="Newtonsoft.Json.JsonTextReader.ParseTrue()", file="TypeNameHandlingTests.cs", label="MatchValueWithTrailingSeparator(JsonConvert.True)", span="2275-2275"];
m2_1208 [cluster="Newtonsoft.Json.JsonTextReader.ParseTrue()", file="TypeNameHandlingTests.cs", label="SetToken(JsonToken.Boolean, true)", span="2277-2277"];
m2_1209 [cluster="Newtonsoft.Json.JsonTextReader.ParseTrue()", file="TypeNameHandlingTests.cs", label="throw JsonReaderException.Create(this, ''Error parsing boolean value.'');", span="2281-2281"];
m2_1210 [cluster="Newtonsoft.Json.JsonTextReader.ParseTrue()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseTrue()", span="2270-2270"];
m2_255 [cluster="Newtonsoft.Json.JsonReader.ReaderReadAndAssert()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonReader.ReaderReadAndAssert()", span="890-890"];
m2_8 [cluster="Newtonsoft.Json.JsonTextReader.EnsureBufferNotEmpty()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.EnsureBufferNotEmpty()", span="113-113"];
m2_9 [cluster="Newtonsoft.Json.JsonTextReader.EnsureBufferNotEmpty()", color=green, community=0, file="TypeNameHandlingTests.cs", label="_stringBuffer.IsEmpty", prediction=9, span="115-115"];
m2_10 [cluster="Newtonsoft.Json.JsonTextReader.EnsureBufferNotEmpty()", color=green, community=0, file="TypeNameHandlingTests.cs", label="_stringBuffer = new StringBuffer(_arrayPool, 1024)", prediction=13, span="117-117"];
m2_11 [cluster="Newtonsoft.Json.JsonTextReader.EnsureBufferNotEmpty()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonTextReader.EnsureBufferNotEmpty()", span="113-113"];
m2_62 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertGuid(string, out System.Guid)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.TryConvertGuid(string, out System.Guid)", span="932-932"];
m2_1108 [cluster="System.Convert.ToInt32(string, int)", file="TypeNameHandlingTests.cs", label="Entry System.Convert.ToInt32(string, int)", span="0-0"];
m2_1163 [cluster="string.String(char[], int, int)", file="TypeNameHandlingTests.cs", label="Entry string.String(char[], int, int)", span="0-0"];
m2_68 [cluster="Newtonsoft.Json.JsonTextReader.BlockCopyChars(char[], int, char[], int, int)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.BlockCopyChars(char[], int, char[], int, int)", span="213-213"];
m2_69 [cluster="Newtonsoft.Json.JsonTextReader.BlockCopyChars(char[], int, char[], int, int)", file="TypeNameHandlingTests.cs", label="int charByteCount = 2", span="215-215"];
m2_70 [cluster="Newtonsoft.Json.JsonTextReader.BlockCopyChars(char[], int, char[], int, int)", file="TypeNameHandlingTests.cs", label="Buffer.BlockCopy(src, srcOffset * charByteCount, dst, dstOffset * charByteCount, count * charByteCount)", span="217-217"];
m2_71 [cluster="Newtonsoft.Json.JsonTextReader.BlockCopyChars(char[], int, char[], int, int)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonTextReader.BlockCopyChars(char[], int, char[], int, int)", span="213-213"];
m2_685 [cluster="System.Convert.ToChar(int)", file="TypeNameHandlingTests.cs", label="Entry System.Convert.ToChar(int)", span="0-0"];
m2_58 [cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", span="220-220"];
m2_73 [cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="TypeNameHandlingTests.cs", label="int length = _chars.Length", span="224-224"];
m2_74 [cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="TypeNameHandlingTests.cs", label="length - _charPos <= length * 0.1", span="225-225"];
m2_75 [cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="TypeNameHandlingTests.cs", label="int count = _charsUsed - _charPos", span="227-227"];
m2_77 [cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="TypeNameHandlingTests.cs", label="BlockCopyChars(_chars, _charPos, _chars, 0, count)", span="230-230"];
m2_78 [cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="TypeNameHandlingTests.cs", label="_lineStartPos -= _charPos", span="233-233"];
m2_79 [cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="TypeNameHandlingTests.cs", label="_charPos = 0", span="234-234"];
m2_80 [cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="TypeNameHandlingTests.cs", label="_charsUsed = count", span="235-235"];
m2_81 [cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="TypeNameHandlingTests.cs", label="_chars[_charsUsed] = '\0'", span="236-236"];
m2_76 [cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="TypeNameHandlingTests.cs", label="count > 0", span="228-228"];
m2_82 [cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", span="220-220"];
m2_260 [cluster="Newtonsoft.Json.JsonTextReader.CreateUnexpectedCharacterException(char)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.CreateUnexpectedCharacterException(char)", span="693-693"];
m2_370 [cluster="Newtonsoft.Json.JsonTextReader.CreateUnexpectedCharacterException(char)", file="TypeNameHandlingTests.cs", label="return JsonReaderException.Create(this, ''Unexpected character encountered while parsing value: {0}.''.FormatWith(CultureInfo.InvariantCulture, c));", span="695-695"];
m2_371 [cluster="Newtonsoft.Json.JsonTextReader.CreateUnexpectedCharacterException(char)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonTextReader.CreateUnexpectedCharacterException(char)", span="693-693"];
m2_177 [cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", span="108-108"];
m2_730 [cluster="Newtonsoft.Json.JsonTextReader.ClearRecentString()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.ClearRecentString()", span="1308-1308"];
m2_731 [cluster="Newtonsoft.Json.JsonTextReader.ClearRecentString()", file="TypeNameHandlingTests.cs", label="_stringBuffer.Position = 0", span="1310-1310"];
m2_732 [cluster="Newtonsoft.Json.JsonTextReader.ClearRecentString()", file="TypeNameHandlingTests.cs", label="_stringReference = new StringReference()", span="1311-1311"];
m2_733 [cluster="Newtonsoft.Json.JsonTextReader.ClearRecentString()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonTextReader.ClearRecentString()", span="1308-1308"];
m2_264 [cluster="Newtonsoft.Json.JsonTextReader.ReadFinished()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadFinished()", span="994-994"];
m2_558 [cluster="Newtonsoft.Json.JsonTextReader.ReadFinished()", file="TypeNameHandlingTests.cs", label="EnsureChars(0, false)", span="996-996"];
m2_559 [cluster="Newtonsoft.Json.JsonTextReader.ReadFinished()", file="TypeNameHandlingTests.cs", label="EatWhitespace(false)", span="998-998"];
m2_560 [cluster="Newtonsoft.Json.JsonTextReader.ReadFinished()", file="TypeNameHandlingTests.cs", label=_isEndOfFile, span="999-999"];
m2_562 [cluster="Newtonsoft.Json.JsonTextReader.ReadFinished()", file="TypeNameHandlingTests.cs", label="_chars[_charPos] == '/'", span="1003-1003"];
m2_563 [cluster="Newtonsoft.Json.JsonTextReader.ReadFinished()", file="TypeNameHandlingTests.cs", label="ParseComment(false)", span="1005-1005"];
m2_564 [cluster="Newtonsoft.Json.JsonTextReader.ReadFinished()", file="TypeNameHandlingTests.cs", label="throw JsonReaderException.Create(this, ''Additional text encountered after finished reading JSON content: {0}.''.FormatWith(CultureInfo.InvariantCulture, _chars[_charPos]));", span="1009-1009"];
m2_565 [cluster="Newtonsoft.Json.JsonTextReader.ReadFinished()", file="TypeNameHandlingTests.cs", label="SetToken(JsonToken.None)", span="1013-1013"];
m2_561 [cluster="Newtonsoft.Json.JsonTextReader.ReadFinished()", file="TypeNameHandlingTests.cs", label="return;", span="1001-1001"];
m2_566 [cluster="Newtonsoft.Json.JsonTextReader.ReadFinished()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadFinished()", span="994-994"];
m2_64 [cluster="System.Convert.FromBase64CharArray(char[], int, int)", file="TypeNameHandlingTests.cs", label="Entry System.Convert.FromBase64CharArray(char[], int, int)", span="0-0"];
m2_175 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseComment(bool)", span="2090-2090"];
m2_1118 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs", label="_charPos++", span="2093-2093"];
m2_1119 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs", label="!EnsureChars(1, false)", span="2095-2095"];
m2_1120 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs", label="throw JsonReaderException.Create(this, ''Unexpected end while parsing comment.'');", span="2097-2097"];
m2_1122 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs", label="_chars[_charPos] == '*'", span="2102-2102"];
m2_1124 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs", label="_chars[_charPos] == '/'", span="2106-2106"];
m2_1126 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs", label="throw JsonReaderException.Create(this, ''Error parsing comment. Expected: *, got {0}.''.FormatWith(CultureInfo.InvariantCulture, _chars[_charPos]));", span="2112-2112"];
m2_1127 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs", label="_charPos++", span="2115-2115"];
m2_1128 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs", label="int initialPosition = _charPos", span="2117-2117"];
m2_1130 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs", label="_chars[_charPos]", span="2121-2121"];
m2_1132 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs", label="_charsUsed == _charPos", span="2124-2124"];
m2_1133 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs", label="ReadData(true) == 0", span="2126-2126"];
m2_1135 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs", label="throw JsonReaderException.Create(this, ''Unexpected end while parsing comment.'');", span="2130-2130"];
m2_1136 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs", label="EndComment(setToken, initialPosition, _charPos)", span="2133-2133"];
m2_1138 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs", label="_charPos++", span="2139-2139"];
m2_1140 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs", label="_charPos++", span="2143-2143"];
m2_1142 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs", label="EnsureChars(0, true)", span="2147-2147"];
m2_1143 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs", label="_chars[_charPos] == '/'", span="2149-2149"];
m2_1144 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs", label="EndComment(setToken, initialPosition, _charPos - 1)", span="2151-2151"];
m2_1145 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs", label="_charPos++", span="2153-2153"];
m2_1149 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs", label="EndComment(setToken, initialPosition, _charPos)", span="2162-2162"];
m2_1151 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs", label="ProcessCarriageReturn(true)", span="2165-2165"];
m2_1154 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs", label="EndComment(setToken, initialPosition, _charPos)", span="2170-2170"];
m2_1156 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs", label="ProcessLineFeed()", span="2173-2173"];
m2_1157 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs", label="_charPos++", span="2176-2176"];
m2_1121 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs", label="bool singlelineComment", span="2100-2100"];
m2_1123 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs", label="singlelineComment = false", span="2104-2104"];
m2_1125 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs", label="singlelineComment = true", span="2108-2108"];
m2_1129 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs", label=true, span="2119-2119"];
m2_1131 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs", label="'\0'", span="2123-2123"];
m2_1139 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs", label="'*'", span="2142-2142"];
m2_1147 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs", label="StringUtils.CarriageReturn", span="2159-2159"];
m2_1152 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs", label="StringUtils.LineFeed", span="2167-2167"];
m2_1134 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs", label="!singlelineComment", span="2128-2128"];
m2_1137 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs", label="return;", span="2134-2134"];
m2_1141 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs", label="!singlelineComment", span="2145-2145"];
m2_1146 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs", label="return;", span="2154-2154"];
m2_1148 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs", label=singlelineComment, span="2160-2160"];
m2_1150 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs", label="return;", span="2163-2163"];
m2_1153 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs", label=singlelineComment, span="2168-2168"];
m2_1155 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs", label="return;", span="2171-2171"];
m2_1158 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseComment(bool)", span="2090-2090"];
m2_60 [cluster="Newtonsoft.Json.JsonReader.SetPostValueState(bool)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonReader.SetPostValueState(bool)", span="1008-1008"];
m2_1107 [cluster="double.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out double)", file="TypeNameHandlingTests.cs", label="Entry double.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out double)", span="0-0"];
m2_59 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", span="1043-1043"];
m2_613 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", color=green, community=0, file="TypeNameHandlingTests.cs", label="'/'", prediction=14, span="1103-1103"];
m2_612 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="'\''", span="1102-1102"];
m2_614 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="writeChar = currentChar", span="1104-1104"];
m2_659 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", color=green, community=0, file="TypeNameHandlingTests.cs", label="_stringBuffer.Append(_arrayPool, _chars, lastWritePosition, charPos - lastWritePosition)", prediction=9, span="1200-1200"];
m2_642 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="lastWritePosition = charPos", span="1172-1172"];
m2_654 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="charPos--", span="1188-1188"];
m2_658 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="charPos > lastWritePosition", span="1198-1198"];
m2_660 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", color=green, community=0, file="TypeNameHandlingTests.cs", label="_stringReference = new StringReference(_stringBuffer.InternalBuffer, 0, _stringBuffer.Position)", prediction=16, span="1203-1203"];
m2_661 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="charPos++", span="1206-1206"];
m2_578 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="int charPos = _charPos", span="1045-1045"];
m2_579 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="int initialPosition = _charPos", span="1046-1046"];
m2_580 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="int lastWritePosition = _charPos", span="1047-1047"];
m2_581 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="_stringBuffer.Position = 0", span="1048-1048"];
m2_583 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="_chars[charPos++]", span="1052-1052"];
m2_585 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="_charsUsed == charPos - 1", span="1055-1055"];
m2_587 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="ReadData(true) == 0", span="1059-1059"];
m2_588 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="_charPos = charPos", span="1061-1061"];
m2_589 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="throw JsonReaderException.Create(this, ''Unterminated string. Expected delimiter: {0}.''.FormatWith(CultureInfo.InvariantCulture, quote));", span="1062-1062"];
m2_591 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="_charPos = charPos", span="1067-1067"];
m2_592 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="!EnsureChars(0, true)", span="1068-1068"];
m2_593 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="throw JsonReaderException.Create(this, ''Unterminated string. Expected delimiter: {0}.''.FormatWith(CultureInfo.InvariantCulture, quote));", span="1070-1070"];
m2_595 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="char currentChar = _chars[charPos]", span="1076-1076"];
m2_616 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="_charPos = charPos", span="1107-1107"];
m2_617 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="writeChar = ParseUnicode()", span="1108-1108"];
m2_623 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="EnsureChars(2, true) && _chars[_charPos] == '\\' && _chars[_charPos + 1] == 'u'", span="1125-1125"];
m2_625 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="_charPos += 2", span="1129-1129"];
m2_626 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="writeChar = ParseUnicode()", span="1130-1130"];
m2_632 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="EnsureBufferNotEmpty()", span="1148-1148"];
m2_633 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="WriteCharToBuffer(highSurrogate, lastWritePosition, escapeStartPos)", span="1150-1150"];
m2_634 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="lastWritePosition = _charPos", span="1151-1151"];
m2_637 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="charPos = _charPos", span="1162-1162"];
m2_638 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="_charPos = charPos", span="1165-1165"];
m2_639 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="throw JsonReaderException.Create(this, ''Bad JSON escape sequence: {0}.''.FormatWith(CultureInfo.InvariantCulture, @''\'' + currentChar));", span="1166-1166"];
m2_640 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="EnsureBufferNotEmpty()", span="1169-1169"];
m2_641 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="WriteCharToBuffer(writeChar, lastWritePosition, escapeStartPos)", span="1170-1170"];
m2_644 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="_charPos = charPos - 1", span="1175-1175"];
m2_645 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="ProcessCarriageReturn(true)", span="1176-1176"];
m2_646 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="charPos = _charPos", span="1177-1177"];
m2_648 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="_charPos = charPos - 1", span="1180-1180"];
m2_649 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="ProcessLineFeed()", span="1181-1181"];
m2_650 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="charPos = _charPos", span="1182-1182"];
m2_653 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="_chars[charPos - 1] == quote", span="1186-1186"];
m2_656 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="_stringReference = new StringReference(_chars, initialPosition, charPos - initialPosition)", span="1192-1192"];
m2_657 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="EnsureBufferNotEmpty()", span="1196-1196"];
m2_662 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="_charPos = charPos", span="1207-1207"];
m2_611 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="''''", span="1101-1101"];
m2_582 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label=true, span="1050-1050"];
m2_655 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="initialPosition == lastWritePosition", span="1190-1190"];
m2_584 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="'\0'", span="1054-1054"];
m2_590 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="'\\'", span="1066-1066"];
m2_643 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="StringUtils.CarriageReturn", span="1174-1174"];
m2_647 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="StringUtils.LineFeed", span="1179-1179"];
m2_651 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="''''", span="1184-1184"];
m2_586 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="charPos--", span="1057-1057"];
m2_594 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="int escapeStartPos = charPos - 1", span="1074-1074"];
m2_596 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="charPos++", span="1077-1077"];
m2_597 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="char writeChar", span="1079-1079"];
m2_598 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label=currentChar, span="1081-1081"];
m2_615 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="'u'", span="1106-1106"];
m2_618 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="StringUtils.IsLowSurrogate(writeChar)", span="1110-1110"];
m2_620 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="StringUtils.IsHighSurrogate(writeChar)", span="1115-1115"];
m2_624 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="char highSurrogate = writeChar", span="1127-1127"];
m2_622 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="anotherHighSurrogate = false", span="1122-1122"];
m2_635 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="writeChar = UnicodeReplacementChar", span="1157-1157"];
m2_627 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="StringUtils.IsLowSurrogate(writeChar)", span="1132-1132"];
m2_628 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="StringUtils.IsHighSurrogate(writeChar)", span="1136-1136"];
m2_631 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="highSurrogate = UnicodeReplacementChar", span="1145-1145"];
m2_630 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="anotherHighSurrogate = true", span="1140-1140"];
m2_629 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="highSurrogate = UnicodeReplacementChar", span="1139-1139"];
m2_636 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label=anotherHighSurrogate, span="1159-1159"];
m2_619 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="writeChar = UnicodeReplacementChar", span="1113-1113"];
m2_600 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="writeChar = '\b'", span="1084-1084"];
m2_602 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="writeChar = '\t'", span="1087-1087"];
m2_604 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="writeChar = '\n'", span="1090-1090"];
m2_606 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="writeChar = '\f'", span="1093-1093"];
m2_608 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="writeChar = '\r'", span="1096-1096"];
m2_610 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="writeChar = '\\'", span="1099-1099"];
m2_652 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="'\''", span="1185-1185"];
m2_663 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="return;", span="1208-1208"];
m2_599 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="'b'", span="1083-1083"];
m2_601 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="'t'", span="1086-1086"];
m2_603 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="'n'", span="1089-1089"];
m2_605 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="'f'", span="1092-1092"];
m2_607 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="'r'", span="1095-1095"];
m2_609 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="'\\'", span="1098-1098"];
m2_621 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="bool anotherHighSurrogate", span="1117-1117"];
m2_664 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", span="1043-1043"];
m2_172 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParsePostValue()", span="1314-1314"];
m2_736 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs", label="char currentChar = _chars[_charPos]", span="1318-1318"];
m2_739 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs", label="_charsUsed == _charPos", span="1323-1323"];
m2_740 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs", label="ReadData(false) == 0", span="1325-1325"];
m2_741 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs", label="_currentState = State.Finished", span="1327-1327"];
m2_743 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs", label="_charPos++", span="1333-1333"];
m2_745 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs", label="_charPos++", span="1337-1337"];
m2_746 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs", label="SetToken(JsonToken.EndObject)", span="1338-1338"];
m2_749 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs", label="_charPos++", span="1341-1341"];
m2_750 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs", label="SetToken(JsonToken.EndArray)", span="1342-1342"];
m2_753 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs", label="_charPos++", span="1345-1345"];
m2_754 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs", label="SetToken(JsonToken.EndConstructor)", span="1346-1346"];
m2_757 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs", label="ParseComment(true)", span="1349-1349"];
m2_760 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs", label="_charPos++", span="1352-1352"];
m2_761 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs", label="SetStateBasedOnCurrent()", span="1355-1355"];
m2_765 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs", label="_charPos++", span="1360-1360"];
m2_767 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs", label="ProcessCarriageReturn(false)", span="1363-1363"];
m2_769 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs", label="ProcessLineFeed()", span="1366-1366"];
m2_771 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs", label="_charPos++", span="1372-1372"];
m2_772 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs", label="throw JsonReaderException.Create(this, ''After parsing a value an unexpected character was encountered: {0}.''.FormatWith(CultureInfo.InvariantCulture, currentChar));", span="1376-1376"];
m2_735 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs", label=true, span="1316-1316"];
m2_737 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs", label=currentChar, span="1320-1320"];
m2_770 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs", label="char.IsWhiteSpace(currentChar)", span="1369-1369"];
m2_738 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs", label="'\0'", span="1322-1322"];
m2_742 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs", label="return false;", span="1328-1328"];
m2_744 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs", label="'}'", span="1336-1336"];
m2_747 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs", label="return true;", span="1339-1339"];
m2_748 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs", label="']'", span="1340-1340"];
m2_751 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs", label="return true;", span="1343-1343"];
m2_752 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs", label="')'", span="1344-1344"];
m2_755 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs", label="return true;", span="1347-1347"];
m2_756 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs", label="'/'", span="1348-1348"];
m2_758 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs", label="return true;", span="1350-1350"];
m2_759 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs", label="','", span="1351-1351"];
m2_762 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs", label="return false;", span="1356-1356"];
m2_764 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs", label="StringUtils.Tab", span="1358-1358"];
m2_766 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs", label="StringUtils.CarriageReturn", span="1362-1362"];
m2_768 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs", label="StringUtils.LineFeed", span="1365-1365"];
m2_763 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs", label="' '", span="1357-1357"];
m2_773 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParsePostValue()", span="1314-1314"];
m2_254 [cluster="Newtonsoft.Json.JsonTextReader.ReadNullChar()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadNullChar()", span="1016-1016"];
m2_567 [cluster="Newtonsoft.Json.JsonTextReader.ReadNullChar()", file="TypeNameHandlingTests.cs", label="_charsUsed == _charPos", span="1018-1018"];
m2_568 [cluster="Newtonsoft.Json.JsonTextReader.ReadNullChar()", file="TypeNameHandlingTests.cs", label="ReadData(false) == 0", span="1020-1020"];
m2_569 [cluster="Newtonsoft.Json.JsonTextReader.ReadNullChar()", file="TypeNameHandlingTests.cs", label="_isEndOfFile = true", span="1022-1022"];
m2_571 [cluster="Newtonsoft.Json.JsonTextReader.ReadNullChar()", file="TypeNameHandlingTests.cs", label="_charPos++", span="1028-1028"];
m2_572 [cluster="Newtonsoft.Json.JsonTextReader.ReadNullChar()", file="TypeNameHandlingTests.cs", label="return false;", span="1031-1031"];
m2_570 [cluster="Newtonsoft.Json.JsonTextReader.ReadNullChar()", file="TypeNameHandlingTests.cs", label="return true;", span="1023-1023"];
m2_573 [cluster="Newtonsoft.Json.JsonTextReader.ReadNullChar()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadNullChar()", span="1016-1016"];
m2_61 [cluster="Newtonsoft.Json.Utilities.StringReference.ToString()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Utilities.StringReference.ToString()", span="62-62"];
m2_1114 [cluster="Newtonsoft.Json.JsonTextReader.BigIntegerParse(string, System.Globalization.CultureInfo)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.BigIntegerParse(string, System.Globalization.CultureInfo)", span="2084-2084"];
m2_1115 [cluster="Newtonsoft.Json.JsonTextReader.BigIntegerParse(string, System.Globalization.CultureInfo)", file="TypeNameHandlingTests.cs", label="return System.Numerics.BigInteger.Parse(number, culture);", span="2086-2086"];
m2_1116 [cluster="Newtonsoft.Json.JsonTextReader.BigIntegerParse(string, System.Globalization.CultureInfo)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonTextReader.BigIntegerParse(string, System.Globalization.CultureInfo)", span="2084-2084"];
m2_833 [cluster="char.IsLetterOrDigit(char)", file="TypeNameHandlingTests.cs", label="Entry char.IsLetterOrDigit(char)", span="0-0"];
m2_534 [cluster="Newtonsoft.Json.JsonReader.ReadInt32String(string)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonReader.ReadInt32String(string)", span="442-442"];
m2_173 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", span="1684-1684"];
m2_946 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="TypeNameHandlingTests.cs", label="char currentChar = _chars[_charPos]", span="1690-1690"];
m2_949 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="TypeNameHandlingTests.cs", label="_charsUsed == _charPos", span="1695-1695"];
m2_950 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="TypeNameHandlingTests.cs", label="ReadData(false) == 0", span="1697-1697"];
m2_952 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="TypeNameHandlingTests.cs", label="_charPos++", span="1704-1704"];
m2_954 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="TypeNameHandlingTests.cs", label="ProcessCarriageReturn(false)", span="1708-1708"];
m2_956 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="TypeNameHandlingTests.cs", label="ProcessLineFeed()", span="1711-1711"];
m2_959 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="TypeNameHandlingTests.cs", label="_charPos++", span="1717-1717"];
m2_943 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="TypeNameHandlingTests.cs", label="bool finished = false", span="1686-1686"];
m2_944 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="TypeNameHandlingTests.cs", label="bool ateWhitespace = false", span="1687-1687"];
m2_945 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="TypeNameHandlingTests.cs", label="!finished", span="1688-1688"];
m2_947 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="TypeNameHandlingTests.cs", label=currentChar, span="1692-1692"];
m2_957 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="TypeNameHandlingTests.cs", label="currentChar == ' ' || char.IsWhiteSpace(currentChar)", span="1714-1714"];
m2_948 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="TypeNameHandlingTests.cs", label="'\0'", span="1694-1694"];
m2_951 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="TypeNameHandlingTests.cs", label="finished = true", span="1699-1699"];
m2_953 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="TypeNameHandlingTests.cs", label="StringUtils.CarriageReturn", span="1707-1707"];
m2_955 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="TypeNameHandlingTests.cs", label="StringUtils.LineFeed", span="1710-1710"];
m2_958 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="TypeNameHandlingTests.cs", label="ateWhitespace = true", span="1716-1716"];
m2_961 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="TypeNameHandlingTests.cs", label="return (!oneOrMore || ateWhitespace);", span="1727-1727"];
m2_960 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="TypeNameHandlingTests.cs", label="finished = true", span="1721-1721"];
m2_962 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", span="1684-1684"];
m2_934 [cluster="char.IsNumber(char)", file="TypeNameHandlingTests.cs", label="Entry char.IsNumber(char)", span="0-0"];
m2_257 [cluster="Newtonsoft.Json.JsonReader.ReadArrayIntoByteArray()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonReader.ReadArrayIntoByteArray()", span="582-582"];
m2_120 [cluster="Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", span="317-317"];
m2_121 [cluster="Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", file="TypeNameHandlingTests.cs", label="_charPos + relativePosition >= _charsUsed", span="319-319"];
m2_122 [cluster="Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", file="TypeNameHandlingTests.cs", label="return ReadChars(relativePosition, append);", span="321-321"];
m2_123 [cluster="Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", file="TypeNameHandlingTests.cs", label="return true;", span="324-324"];
m2_124 [cluster="Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", span="317-317"];
m2_182 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", span="430-430"];
m2_183 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", file="TypeNameHandlingTests.cs", label="return (DateTime?)ReadStringValue(ReadType.ReadAsDateTime);", span="432-432"];
m2_184 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", span="430-430"];
m2_117 [cluster="Newtonsoft.Json.Utilities.BufferUtils.RentBuffer(Newtonsoft.Json.IArrayPool<char>, int)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Utilities.BufferUtils.RentBuffer(Newtonsoft.Json.IArrayPool<char>, int)", span="43-43"];
m2_86 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", span="245-245"];
m2_87 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="TypeNameHandlingTests.cs", label=_isEndOfFile, span="247-247"];
m2_89 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="TypeNameHandlingTests.cs", label="_charsUsed + charsRequired >= _chars.Length - 1", span="253-253"];
m2_91 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="TypeNameHandlingTests.cs", label="int newArrayLength = Math.Max(_chars.Length * 2, _charsUsed + charsRequired + 1)", span="258-258"];
m2_92 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="TypeNameHandlingTests.cs", label="char[] dst = BufferUtils.RentBuffer(_arrayPool, newArrayLength)", span="261-261"];
m2_93 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="TypeNameHandlingTests.cs", label="BlockCopyChars(_chars, 0, dst, 0, _chars.Length)", span="263-263"];
m2_94 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="TypeNameHandlingTests.cs", label="BufferUtils.ReturnBuffer(_arrayPool, _chars)", span="265-265"];
m2_95 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="TypeNameHandlingTests.cs", label="_chars = dst", span="267-267"];
m2_96 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="TypeNameHandlingTests.cs", label="int remainingCharCount = _charsUsed - _charPos", span="271-271"];
m2_97 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="TypeNameHandlingTests.cs", label="remainingCharCount + charsRequired + 1 >= _chars.Length", span="273-273"];
m2_98 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="TypeNameHandlingTests.cs", label="char[] dst = BufferUtils.RentBuffer(_arrayPool, remainingCharCount + charsRequired + 1)", span="276-276"];
m2_100 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="TypeNameHandlingTests.cs", label="BlockCopyChars(_chars, _charPos, dst, 0, remainingCharCount)", span="280-280"];
m2_101 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="TypeNameHandlingTests.cs", label="BufferUtils.ReturnBuffer(_arrayPool, _chars)", span="283-283"];
m2_102 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="TypeNameHandlingTests.cs", label="_chars = dst", span="285-285"];
m2_104 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="TypeNameHandlingTests.cs", label="BlockCopyChars(_chars, _charPos, _chars, 0, remainingCharCount)", span="292-292"];
m2_105 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="TypeNameHandlingTests.cs", label="_lineStartPos -= _charPos", span="296-296"];
m2_106 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="TypeNameHandlingTests.cs", label="_charPos = 0", span="297-297"];
m2_107 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="TypeNameHandlingTests.cs", label="_charsUsed = remainingCharCount", span="298-298"];
m2_108 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="TypeNameHandlingTests.cs", label="int attemptCharReadCount = _chars.Length - _charsUsed - 1", span="302-302"];
m2_109 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="TypeNameHandlingTests.cs", label="int charsRead = _reader.Read(_chars, _charsUsed, attemptCharReadCount)", span="304-304"];
m2_110 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="TypeNameHandlingTests.cs", label="_charsUsed += charsRead", span="306-306"];
m2_112 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="TypeNameHandlingTests.cs", label="_isEndOfFile = true", span="310-310"];
m2_113 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="TypeNameHandlingTests.cs", label="_chars[_charsUsed] = '\0'", span="313-313"];
m2_88 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="TypeNameHandlingTests.cs", label="return 0;", span="249-249"];
m2_90 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="TypeNameHandlingTests.cs", label=append, span="255-255"];
m2_99 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="TypeNameHandlingTests.cs", label="remainingCharCount > 0", span="278-278"];
m2_103 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="TypeNameHandlingTests.cs", label="remainingCharCount > 0", span="290-290"];
m2_111 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="TypeNameHandlingTests.cs", label="charsRead == 0", span="308-308"];
m2_114 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="TypeNameHandlingTests.cs", label="return charsRead;", span="314-314"];
m2_115 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", span="245-245"];
m2_63 [cluster="System.Guid.ToByteArray()", file="TypeNameHandlingTests.cs", label="Entry System.Guid.ToByteArray()", span="0-0"];
m2_456 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", span="1055-1055"];
m2_363 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="TypeNameHandlingTests.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
m2_259 [cluster="Newtonsoft.Json.JsonTextReader.ProcessValueComma()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.ProcessValueComma()", span="817-817"];
m2_450 [cluster="Newtonsoft.Json.JsonTextReader.ProcessValueComma()", file="TypeNameHandlingTests.cs", label="_charPos++", span="819-819"];
m2_451 [cluster="Newtonsoft.Json.JsonTextReader.ProcessValueComma()", file="TypeNameHandlingTests.cs", label="_currentState != State.PostValue", span="821-821"];
m2_452 [cluster="Newtonsoft.Json.JsonTextReader.ProcessValueComma()", file="TypeNameHandlingTests.cs", label="SetToken(JsonToken.Undefined)", span="823-823"];
m2_453 [cluster="Newtonsoft.Json.JsonTextReader.ProcessValueComma()", file="TypeNameHandlingTests.cs", label="throw CreateUnexpectedCharacterException(',');", span="824-824"];
m2_454 [cluster="Newtonsoft.Json.JsonTextReader.ProcessValueComma()", file="TypeNameHandlingTests.cs", label="SetStateBasedOnCurrent()", span="827-827"];
m2_455 [cluster="Newtonsoft.Json.JsonTextReader.ProcessValueComma()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonTextReader.ProcessValueComma()", span="817-817"];
m2_65 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", span="961-961"];
m2_665 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseUnicode()", span="1225-1225"];
m2_677 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="TypeNameHandlingTests.cs", label="EnsureChars(4, true)", span="1228-1228"];
m2_678 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="TypeNameHandlingTests.cs", label="char hexChar = Convert.ToChar(ConvertUtils.HexTextToInt(_chars, _charPos, _charPos + 4))", span="1230-1230"];
m2_680 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="TypeNameHandlingTests.cs", label="_charPos += 4", span="1233-1233"];
m2_681 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="TypeNameHandlingTests.cs", label="throw JsonReaderException.Create(this, ''Unexpected end while parsing unicode character.'');", span="1237-1237"];
m2_676 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="TypeNameHandlingTests.cs", label="char writeChar", span="1227-1227"];
m2_679 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="TypeNameHandlingTests.cs", label="writeChar = hexChar", span="1231-1231"];
m2_682 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="TypeNameHandlingTests.cs", label="return writeChar;", span="1239-1239"];
m2_683 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseUnicode()", span="1225-1225"];
m2_170 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseValue()", span="1539-1539"];
m2_852 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="char currentChar = _chars[_charPos]", span="1543-1543"];
m2_855 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="_charsUsed == _charPos", span="1548-1548"];
m2_856 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="ReadData(false) == 0", span="1550-1550"];
m2_858 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="_charPos++", span="1557-1557"];
m2_861 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="ParseString(currentChar, ReadType.Read)", span="1562-1562"];
m2_864 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="ParseTrue()", span="1565-1565"];
m2_867 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="ParseFalse()", span="1568-1568"];
m2_870 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="EnsureChars(1, true)", span="1571-1571"];
m2_871 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="char next = _chars[_charPos + 1]", span="1573-1573"];
m2_873 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="ParseNull()", span="1577-1577"];
m2_875 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="ParseConstructor()", span="1581-1581"];
m2_876 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="throw CreateUnexpectedCharacterException(_chars[_charPos]);", span="1585-1585"];
m2_877 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="_charPos++", span="1590-1590"];
m2_878 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="throw CreateUnexpectedEndException();", span="1591-1591"];
m2_881 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="ParseNumberNaN(ReadType.Read)", span="1595-1595"];
m2_884 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="ParseNumberPositiveInfinity(ReadType.Read)", span="1598-1598"];
m2_887 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="EnsureChars(1, true) && _chars[_charPos + 1] == 'I'", span="1601-1601"];
m2_888 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="ParseNumberNegativeInfinity(ReadType.Read)", span="1603-1603"];
m2_889 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="ParseNumber(ReadType.Read)", span="1607-1607"];
m2_892 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="ParseComment(true)", span="1611-1611"];
m2_895 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="ParseUndefined()", span="1614-1614"];
m2_898 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="_charPos++", span="1617-1617"];
m2_899 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="SetToken(JsonToken.StartObject)", span="1618-1618"];
m2_902 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="_charPos++", span="1621-1621"];
m2_903 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="SetToken(JsonToken.StartArray)", span="1622-1622"];
m2_906 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="_charPos++", span="1625-1625"];
m2_907 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="SetToken(JsonToken.EndArray)", span="1626-1626"];
m2_910 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="SetToken(JsonToken.Undefined)", span="1631-1631"];
m2_913 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="_charPos++", span="1634-1634"];
m2_914 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="SetToken(JsonToken.EndConstructor)", span="1635-1635"];
m2_917 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="ProcessCarriageReturn(false)", span="1638-1638"];
m2_919 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="ProcessLineFeed()", span="1641-1641"];
m2_922 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="_charPos++", span="1646-1646"];
m2_924 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="_charPos++", span="1652-1652"];
m2_926 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="ParseNumber(ReadType.Read)", span="1657-1657"];
m2_928 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="throw CreateUnexpectedCharacterException(currentChar);", span="1661-1661"];
m2_851 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label=true, span="1541-1541"];
m2_853 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label=currentChar, span="1545-1545"];
m2_923 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="char.IsWhiteSpace(currentChar)", span="1649-1649"];
m2_925 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="char.IsNumber(currentChar) || currentChar == '-' || currentChar == '.'", span="1655-1655"];
m2_854 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="'\0'", span="1547-1547"];
m2_857 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="return false;", span="1552-1552"];
m2_860 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="'\''", span="1561-1561"];
m2_862 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="return true;", span="1563-1563"];
m2_863 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="'t'", span="1564-1564"];
m2_865 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="return true;", span="1566-1566"];
m2_866 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="'f'", span="1567-1567"];
m2_868 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="return true;", span="1569-1569"];
m2_869 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="'n'", span="1570-1570"];
m2_872 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="next == 'u'", span="1575-1575"];
m2_874 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="next == 'e'", span="1579-1579"];
m2_879 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="return true;", span="1593-1593"];
m2_880 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="'N'", span="1594-1594"];
m2_882 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="return true;", span="1596-1596"];
m2_883 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="'I'", span="1597-1597"];
m2_885 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="return true;", span="1599-1599"];
m2_886 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="'-'", span="1600-1600"];
m2_890 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="return true;", span="1609-1609"];
m2_891 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="'/'", span="1610-1610"];
m2_893 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="return true;", span="1612-1612"];
m2_894 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="'u'", span="1613-1613"];
m2_896 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="return true;", span="1615-1615"];
m2_897 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="'{'", span="1616-1616"];
m2_900 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="return true;", span="1619-1619"];
m2_901 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="'['", span="1620-1620"];
m2_904 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="return true;", span="1623-1623"];
m2_905 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="']'", span="1624-1624"];
m2_908 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="return true;", span="1627-1627"];
m2_909 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="','", span="1628-1628"];
m2_911 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="return true;", span="1632-1632"];
m2_912 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="')'", span="1633-1633"];
m2_915 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="return true;", span="1636-1636"];
m2_916 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="StringUtils.CarriageReturn", span="1637-1637"];
m2_918 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="StringUtils.LineFeed", span="1640-1640"];
m2_921 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="StringUtils.Tab", span="1644-1644"];
m2_927 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="return true;", span="1658-1658"];
m2_859 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="''''", span="1560-1560"];
m2_920 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="' '", span="1643-1643"];
m2_929 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseValue()", span="1539-1539"];
m2_365 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", span="1813-1813"];
m2_1038 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", color=green, community=0, file="TypeNameHandlingTests.cs", label="numberType = JsonToken.Integer", prediction=17, span="1908-1908"];
m2_1024 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="numberValue = firstChar - 48", span="1873-1873"];
m2_1028 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="numberValue = integer", span="1883-1883"];
m2_1034 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="numberValue = value", span="1896-1896"];
m2_1100 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="ClearRecentString()", span="2072-2072"];
m2_1101 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="SetToken(numberType, numberValue, false)", span="2075-2075"];
m2_999 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="ShiftBufferIfNeeded()", span="1815-1815"];
m2_1000 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="char firstChar = _chars[_charPos]", span="1817-1817"];
m2_1001 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="int initialPosition = _charPos", span="1818-1818"];
m2_1002 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="ReadNumberIntoBuffer()", span="1820-1820"];
m2_1003 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="SetPostValueState(true)", span="1823-1823"];
m2_1004 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="_stringReference = new StringReference(_chars, initialPosition, _charPos - initialPosition)", span="1825-1825"];
m2_1007 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="bool singleDigit = (char.IsDigit(firstChar) && _stringReference.Length == 1)", span="1830-1830"];
m2_1008 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="bool nonBase10 = (firstChar == '0' && _stringReference.Length > 1 && _stringReference.Chars[_stringReference.StartIndex + 1] != '.' && _stringReference.Chars[_stringReference.StartIndex + 1] != 'e' && _stringReference.Chars[_stringReference.StartIndex + 1] != 'E')", span="1831-1831"];
m2_1010 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="string number = _stringReference.ToString()", span="1835-1835"];
m2_1016 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="throw JsonReaderException.Create(this, ''Input string '{0}' is not a valid number.''.FormatWith(CultureInfo.InvariantCulture, number), ex);", span="1853-1853"];
m2_1019 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="throw JsonReaderException.Create(this, ''Input string '{0}' is not a valid number.''.FormatWith(CultureInfo.InvariantCulture, _stringReference.ToString()));", span="1861-1861"];
m2_1026 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="string number = _stringReference.ToString()", span="1877-1877"];
m2_1030 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="throw JsonReaderException.Create(this, ''Input string '{0}' is not a valid integer.''.FormatWith(CultureInfo.InvariantCulture, number), ex);", span="1887-1887"];
m2_1032 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="ParseResult parseResult = ConvertUtils.Int32TryParse(_stringReference.Chars, _stringReference.StartIndex, _stringReference.Length, out value)", span="1893-1893"];
m2_1036 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="throw JsonReaderException.Create(this, ''JSON integer {0} is too large or small for an Int32.''.FormatWith(CultureInfo.InvariantCulture, _stringReference.ToString()));", span="1900-1900"];
m2_1037 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="throw JsonReaderException.Create(this, ''Input string '{0}' is not a valid integer.''.FormatWith(CultureInfo.InvariantCulture, _stringReference.ToString()));", span="1904-1904"];
m2_1043 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="string number = _stringReference.ToString()", span="1919-1919"];
m2_1047 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="throw JsonReaderException.Create(this, ''Input string '{0}' is not a valid decimal.''.FormatWith(CultureInfo.InvariantCulture, number), ex);", span="1930-1930"];
m2_1048 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="string number = _stringReference.ToString()", span="1935-1935"];
m2_1052 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="throw JsonReaderException.Create(this, ''Input string '{0}' is not a valid decimal.''.FormatWith(CultureInfo.InvariantCulture, _stringReference.ToString()));", span="1944-1944"];
m2_1058 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="string number = _stringReference.ToString()", span="1959-1959"];
m2_1062 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="throw JsonReaderException.Create(this, ''Input string '{0}' is not a valid double.''.FormatWith(CultureInfo.InvariantCulture, number), ex);", span="1970-1970"];
m2_1063 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="string number = _stringReference.ToString()", span="1975-1975"];
m2_1067 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="throw JsonReaderException.Create(this, ''Input string '{0}' is not a valid double.''.FormatWith(CultureInfo.InvariantCulture, _stringReference.ToString()));", span="1984-1984"];
m2_1073 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="string number = _stringReference.ToString()", span="2000-2000"];
m2_1076 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="throw JsonReaderException.Create(this, ''Input string '{0}' is not a valid number.''.FormatWith(CultureInfo.InvariantCulture, number), ex);", span="2008-2008"];
m2_1079 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="ParseResult parseResult = ConvertUtils.Int64TryParse(_stringReference.Chars, _stringReference.StartIndex, _stringReference.Length, out value)", span="2016-2016"];
m2_1084 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="string number = _stringReference.ToString()", span="2025-2025"];
m2_1086 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="throw JsonReaderException.Create(this, ''JSON integer {0} is too large to parse.''.FormatWith(CultureInfo.InvariantCulture, _stringReference.ToString()));", span="2029-2029"];
m2_1089 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="string number = _stringReference.ToString()", span="2040-2040"];
m2_1090 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="_floatParseHandling == FloatParseHandling.Decimal", span="2042-2042"];
m2_1094 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="throw JsonReaderException.Create(this, ''Input string '{0}' is not a valid decimal.''.FormatWith(CultureInfo.InvariantCulture, number));", span="2051-2051"];
m2_1098 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="throw JsonReaderException.Create(this, ''Input string '{0}' is not a valid number.''.FormatWith(CultureInfo.InvariantCulture, number));", span="2063-2063"];
m2_1023 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label=singleDigit, span="1870-1870"];
m2_1027 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="int integer = number.StartsWith(''0x'', StringComparison.OrdinalIgnoreCase) ? Convert.ToInt32(number, 16) : Convert.ToInt32(number, 8)", span="1881-1881"];
m2_1029 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label=Exception, span="1885-1885"];
m2_1033 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="parseResult == ParseResult.Success", span="1894-1894"];
m2_1021 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="numberValue = number", span="1866-1866"];
m2_1053 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="numberType = JsonToken.Float", span="1948-1948"];
m2_1068 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="numberType = JsonToken.Float", span="1988-1988"];
m2_1071 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="numberType = JsonToken.Integer", span="1996-1996"];
m2_1077 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="numberType = JsonToken.Integer", span="2011-2011"];
m2_1082 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="numberType = JsonToken.Integer", span="2020-2020"];
m2_1088 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="numberType = JsonToken.Integer", span="2033-2033"];
m2_1099 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="numberType = JsonToken.Float", span="2067-2067"];
m2_1041 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="numberValue = (decimal)firstChar - 48", span="1915-1915"];
m2_1056 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="numberValue = (double)firstChar - 48", span="1955-1955"];
m2_1070 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="numberValue = (long)firstChar - 48", span="1995-1995"];
m2_1005 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="object numberValue", span="1827-1827"];
m2_1020 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="numberType = JsonToken.String", span="1865-1865"];
m2_1045 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="numberValue = Convert.ToDecimal(integer)", span="1926-1926"];
m2_1051 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="numberValue = value", span="1940-1940"];
m2_1060 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="numberValue = Convert.ToDouble(integer)", span="1966-1966"];
m2_1066 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="numberValue = value", span="1980-1980"];
m2_1074 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="numberValue = number.StartsWith(''0x'', StringComparison.OrdinalIgnoreCase) ? Convert.ToInt64(number, 16) : Convert.ToInt64(number, 8)", span="2004-2004"];
m2_1081 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="numberValue = value", span="2019-2019"];
m2_1087 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="numberValue = BigIntegerParse(number, CultureInfo.InvariantCulture)", span="2032-2032"];
m2_1093 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="numberValue = d", span="2047-2047"];
m2_1097 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="numberValue = d", span="2059-2059"];
m2_1013 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="Convert.ToInt64(number, 16)", span="1844-1844"];
m2_1006 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="JsonToken numberType", span="1828-1828"];
m2_1040 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label=singleDigit, span="1912-1912"];
m2_1055 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label=singleDigit, span="1952-1952"];
m2_1069 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label=singleDigit, span="1992-1992"];
m2_1009 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="readType == ReadType.ReadAsString", span="1833-1833"];
m2_1011 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label=nonBase10, span="1838-1838"];
m2_1025 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label=nonBase10, span="1875-1875"];
m2_1042 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label=nonBase10, span="1917-1917"];
m2_1057 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label=nonBase10, span="1957-1957"];
m2_1072 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label=nonBase10, span="1998-1998"];
m2_1012 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="number.StartsWith(''0x'', StringComparison.OrdinalIgnoreCase)", span="1842-1842"];
m2_1014 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="Convert.ToInt64(number, 8)", span="1848-1848"];
m2_1018 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="!double.TryParse(number, NumberStyles.Float, CultureInfo.InvariantCulture, out value)", span="1859-1859"];
m2_1015 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label=Exception, span="1851-1851"];
m2_1031 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="int value", span="1892-1892"];
m2_1035 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="parseResult == ParseResult.Overflow", span="1898-1898"];
m2_1044 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="long integer = number.StartsWith(''0x'', StringComparison.OrdinalIgnoreCase) ? Convert.ToInt64(number, 16) : Convert.ToInt64(number, 8)", span="1924-1924"];
m2_1046 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label=Exception, span="1928-1928"];
m2_1049 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="decimal value", span="1937-1937"];
m2_1050 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="decimal.TryParse(number, NumberStyles.Number | NumberStyles.AllowExponent, CultureInfo.InvariantCulture, out value)", span="1938-1938"];
m2_1059 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="long integer = number.StartsWith(''0x'', StringComparison.OrdinalIgnoreCase) ? Convert.ToInt64(number, 16) : Convert.ToInt64(number, 8)", span="1964-1964"];
m2_1061 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label=Exception, span="1968-1968"];
m2_1064 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="double value", span="1977-1977"];
m2_1065 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="double.TryParse(number, NumberStyles.Float, CultureInfo.InvariantCulture, out value)", span="1978-1978"];
m2_1075 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label=Exception, span="2006-2006"];
m2_1078 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="long value", span="2015-2015"];
m2_1080 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="parseResult == ParseResult.Success", span="2017-2017"];
m2_1083 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="parseResult == ParseResult.Overflow", span="2022-2022"];
m2_1085 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="number.Length > MaximumJavascriptIntegerCharacterLength", span="2027-2027"];
m2_1092 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="decimal.TryParse(number, NumberStyles.Number | NumberStyles.AllowExponent, CultureInfo.InvariantCulture, out d)", span="2045-2045"];
m2_1096 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="double.TryParse(number, NumberStyles.Float | NumberStyles.AllowThousands, CultureInfo.InvariantCulture, out d)", span="2057-2057"];
m2_1091 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="decimal d", span="2044-2044"];
m2_1095 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="double d", span="2056-2056"];
m2_1022 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="readType == ReadType.ReadAsInt32", span="1868-1868"];
m2_1039 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="readType == ReadType.ReadAsDecimal", span="1910-1910"];
m2_1054 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="readType == ReadType.ReadAsDouble", span="1950-1950"];
m2_1017 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="double value", span="1858-1858"];
m2_1102 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", span="1813-1813"];
m2_1110 [cluster="System.Convert.ToDecimal(long)", file="TypeNameHandlingTests.cs", label="Entry System.Convert.ToDecimal(long)", span="0-0"];
m2_178 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsInt32()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsInt32()", span="421-421"];
m2_179 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsInt32()", file="TypeNameHandlingTests.cs", label="return (int?)ReadNumberValue(ReadType.ReadAsInt32);", span="423-423"];
m2_180 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsInt32()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadAsInt32()", span="421-421"];
m2_171 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseObject()", span="1383-1383"];
m2_775 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="TypeNameHandlingTests.cs", label="char currentChar = _chars[_charPos]", span="1387-1387"];
m2_778 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="TypeNameHandlingTests.cs", label="_charsUsed == _charPos", span="1392-1392"];
m2_779 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="TypeNameHandlingTests.cs", label="ReadData(false) == 0", span="1394-1394"];
m2_781 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="TypeNameHandlingTests.cs", label="_charPos++", span="1401-1401"];
m2_783 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="TypeNameHandlingTests.cs", label="SetToken(JsonToken.EndObject)", span="1405-1405"];
m2_784 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="TypeNameHandlingTests.cs", label="_charPos++", span="1406-1406"];
m2_787 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="TypeNameHandlingTests.cs", label="ParseComment(true)", span="1409-1409"];
m2_790 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="TypeNameHandlingTests.cs", label="ProcessCarriageReturn(false)", span="1412-1412"];
m2_792 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="TypeNameHandlingTests.cs", label="ProcessLineFeed()", span="1415-1415"];
m2_795 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="TypeNameHandlingTests.cs", label="_charPos++", span="1420-1420"];
m2_797 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="TypeNameHandlingTests.cs", label="_charPos++", span="1426-1426"];
m2_798 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="TypeNameHandlingTests.cs", label="return ParseProperty();", span="1430-1430"];
m2_774 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="TypeNameHandlingTests.cs", label=true, span="1385-1385"];
m2_776 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="TypeNameHandlingTests.cs", label=currentChar, span="1389-1389"];
m2_796 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="TypeNameHandlingTests.cs", label="char.IsWhiteSpace(currentChar)", span="1423-1423"];
m2_777 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="TypeNameHandlingTests.cs", label="'\0'", span="1391-1391"];
m2_780 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="TypeNameHandlingTests.cs", label="return false;", span="1396-1396"];
m2_782 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="TypeNameHandlingTests.cs", label="'}'", span="1404-1404"];
m2_785 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="TypeNameHandlingTests.cs", label="return true;", span="1407-1407"];
m2_786 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="TypeNameHandlingTests.cs", label="'/'", span="1408-1408"];
m2_788 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="TypeNameHandlingTests.cs", label="return true;", span="1410-1410"];
m2_789 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="TypeNameHandlingTests.cs", label="StringUtils.CarriageReturn", span="1411-1411"];
m2_791 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="TypeNameHandlingTests.cs", label="StringUtils.LineFeed", span="1414-1414"];
m2_794 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="TypeNameHandlingTests.cs", label="StringUtils.Tab", span="1418-1418"];
m2_793 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="TypeNameHandlingTests.cs", label="' '", span="1417-1417"];
m2_799 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseObject()", span="1383-1383"];
m2_1106 [cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", span="113-113"];
m2_1277 [file="TypeNameHandlingTests.cs", label="Newtonsoft.Json.JsonTextReader", span=""];
m1_72 -> m1_74  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_72 -> m1_75  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_117 -> m1_119  [color=darkseagreen4, key=1, label=input, style=dashed];
m1_238 -> m1_240  [color=darkseagreen4, key=1, label=typeToken, style=dashed];
m1_182 -> m1_238  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m1_182 -> m1_240  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m1_182 -> m1_244  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m1_182 -> m1_245  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m1_121 -> m1_169  [color=green, key=1, label=lineInfo, style=dashed];
m1_121 -> m1_173  [color=green, key=1, label=lineInfo, style=dashed];
m1_121 -> m1_175  [color=green, key=1, label=lineInfo, style=dashed];
m1_121 -> m1_123  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m1_121 -> m1_125  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m1_121 -> m1_129  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m1_121 -> m1_134  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m1_121 -> m1_135  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m1_121 -> m1_136  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m1_121 -> m1_141  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m1_121 -> m1_147  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m1_121 -> m1_151  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m1_121 -> m1_153  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m1_121 -> m1_157  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m1_121 -> m1_163  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m1_121 -> m1_165  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m1_174 -> m1_176  [color=darkseagreen4, key=1, label=property, style=dashed];
m1_176 -> m1_176  [color=darkseagreen4, key=1, label=property, style=dashed];
m1_176 -> m1_178  [color=darkseagreen4, key=1, label=property, style=dashed];
m1_120 -> m1_167  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m1_120 -> m1_171  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m1_120 -> m1_176  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m1_120 -> m1_122  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m1_120 -> m1_127  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m1_120 -> m1_131  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m1_120 -> m1_133  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m1_120 -> m1_137  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m1_120 -> m1_138  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m1_120 -> m1_139  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m1_120 -> m1_143  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m1_120 -> m1_145  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m1_120 -> m1_149  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m1_120 -> m1_161  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m1_120 -> m1_177  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m1_122 -> m1_122  [color=darkseagreen4, key=1, label=property, style=dashed];
m1_134 -> m1_134  [color=darkseagreen4, key=1, label=property, style=dashed];
m1_134 -> m1_136  [color=darkseagreen4, key=1, label=property, style=dashed];
m1_136 -> m1_136  [color=darkseagreen4, key=1, label=property, style=dashed];
m1_136 -> m1_138  [color=darkseagreen4, key=1, label=property, style=dashed];
m1_132 -> m1_134  [color=darkseagreen4, key=1, label=property, style=dashed];
m1_138 -> m1_138  [color=darkseagreen4, key=1, label=property, style=dashed];
m1_178 -> m1_178  [color=darkseagreen4, key=1, label=property, style=dashed];
m1_62 -> m1_64  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m1_62 -> m1_65  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m1_62 -> m1_66  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m1_62 -> m1_68  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m1_62 -> m1_69  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m1_62 -> m1_71  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m1_62 -> m1_73  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m1_62 -> m1_74  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m1_62 -> m1_76  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m1_62 -> m1_80  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m1_62 -> m1_81  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m1_62 -> m1_82  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m1_62 -> m1_83  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m1_62 -> m1_84  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m1_62 -> m1_85  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m1_62 -> m1_86  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m1_189 -> m1_191  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m1_189 -> m1_192  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m1_189 -> m1_194  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m1_190 -> m1_193  [color=darkseagreen4, key=1, label=schemas, style=dashed];
m1_190 -> m1_196  [color=darkseagreen4, key=1, label=schemas, style=dashed];
m1_190 -> m1_197  [color=darkseagreen4, key=1, label=schemas, style=dashed];
m1_194 -> m1_196  [color=darkseagreen4, key=1, label=schema, style=dashed];
m1_274 -> m1_276  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_274 -> m1_278  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_274 -> m1_280  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_274 -> m1_281  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_274 -> m1_282  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_274 -> m1_277  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_274 -> m1_279  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_200 -> m1_203  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_250 -> m1_253  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_251 -> m1_254  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_288 -> m1_290  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_288 -> m1_292  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_288 -> m1_294  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_288 -> m1_295  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_288 -> m1_296  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_288 -> m1_291  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_288 -> m1_293  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_32 -> m1_39  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m1_32 -> m1_46  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m1_32 -> m1_61  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m1_32 -> m1_63  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m1_32 -> m1_64  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m1_32 -> m1_65  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m1_32 -> m1_66  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m1_32 -> m1_68  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m1_32 -> m1_69  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m1_32 -> m1_71  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m1_32 -> m1_73  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m1_32 -> m1_74  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m1_32 -> m1_76  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m1_32 -> m1_80  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m1_32 -> m1_81  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m1_32 -> m1_82  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m1_32 -> m1_83  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m1_32 -> m1_84  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m1_32 -> m1_85  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m1_32 -> m1_86  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m1_39 -> m1_42  [color=darkseagreen4, key=1, label=reference, style=dashed];
m1_39 -> m1_43  [color=darkseagreen4, key=1, label=reference, style=dashed];
m1_46 -> m1_48  [color=darkseagreen4, key=1, label=escapedParts, style=dashed];
m1_79 -> m1_83  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_79 -> m1_82  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_79 -> m1_84  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_79 -> m1_87  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_80 -> m1_80  [color=darkseagreen4, key=1, label=patternProperty, style=dashed];
m1_83 -> m1_83  [color=darkseagreen4, key=1, label=property, style=dashed];
m1_40 -> m1_45  [color=darkseagreen4, key=1, label=locationReference, style=dashed];
m1_42 -> m1_42  [color=darkseagreen4, key=1, label=reference, style=dashed];
m1_43 -> m1_60  [color=darkseagreen4, key=1, label=resolvedSchema, style=dashed];
m1_47 -> m1_50  [color=darkseagreen4, key=1, label=currentToken, style=dashed];
m1_47 -> m1_51  [color=darkseagreen4, key=1, label=currentToken, style=dashed];
m1_47 -> m1_55  [color=darkseagreen4, key=1, label=currentToken, style=dashed];
m1_47 -> m1_57  [color=darkseagreen4, key=1, label=currentToken, style=dashed];
m1_47 -> m1_58  [color=darkseagreen4, key=1, label=currentToken, style=dashed];
m1_47 -> m1_59  [color=darkseagreen4, key=1, label=currentToken, style=dashed];
m1_51 -> m1_51  [color=darkseagreen4, key=1, label=currentToken, style=dashed];
m1_51 -> m1_58  [color=darkseagreen4, key=1, label=currentToken, style=dashed];
m1_51 -> m1_59  [color=darkseagreen4, key=1, label=currentToken, style=dashed];
m1_52 -> m1_54  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m1_52 -> m1_55  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m1_52 -> m1_58  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m1_52 -> m1_60  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m1_52 -> m1_56  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m1_52 -> m1_59  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m1_55 -> m1_55  [color=darkseagreen4, key=1, label=currentToken, style=dashed];
m1_55 -> m1_58  [color=darkseagreen4, key=1, label=currentToken, style=dashed];
m1_55 -> m1_59  [color=darkseagreen4, key=1, label=currentToken, style=dashed];
m1_49 -> m1_51  [color=darkseagreen4, key=1, label=part, style=dashed];
m1_49 -> m1_54  [color=darkseagreen4, key=1, label=part, style=dashed];
m1_56 -> m1_58  [color=darkseagreen4, key=1, label=currentToken, style=dashed];
m1_56 -> m1_59  [color=darkseagreen4, key=1, label=currentToken, style=dashed];
m1_67 -> m1_69  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_67 -> m1_70  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_70 -> m1_70  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_75 -> m1_75  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_184 -> m1_225  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m1_184 -> m1_227  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m1_184 -> m1_231  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m1_184 -> m1_233  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m1_258 -> m1_258  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Schema.JsonSchemaType>", style=dashed];
m1_267 -> m1_269  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_185 -> m1_207  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m1_185 -> m1_208  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m1_15 -> m1_18  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m1_15 -> m1_21  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m1_15 -> m1_22  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m1_15 -> m1_31  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m1_15 -> m1_32  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m1_15 -> m1_34  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m1_15 -> m1_35  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m1_15 -> m1_37  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m1_15 -> m1_38  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m1_15 -> m1_40  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m1_15 -> m1_41  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m1_15 -> m1_43  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m1_15 -> m1_44  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m1_15 -> m1_46  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m1_15 -> m1_47  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m1_15 -> m1_49  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m1_15 -> m1_51  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m1_15 -> m1_17  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m1_15 -> m1_20  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m1_15 -> m1_30  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m1_15 -> m1_33  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m1_15 -> m1_36  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m1_15 -> m1_39  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m1_15 -> m1_42  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m1_15 -> m1_45  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m1_15 -> m1_48  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m1_15 -> m1_50  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m1_16 -> m1_19  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m1_16 -> m1_23  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m1_16 -> m1_27  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m1_16 -> m1_28  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m1_16 -> m1_29  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m1_7 -> m1_9  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m1_7 -> m1_10  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m1_7 -> m1_11  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m1_302 -> m1_304  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_302 -> m1_306  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_302 -> m1_305  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_302 -> m1_307  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_302 -> m1_310  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_307 -> m1_309  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_341 -> m1_343  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_341 -> m1_345  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_341 -> m1_344  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_341 -> m1_346  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_341 -> m1_349  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_346 -> m1_348  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_183 -> m1_185  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m1_183 -> m1_187  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m1_183 -> m1_188  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m1_183 -> m1_192  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m1_183 -> m1_194  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m1_183 -> m1_191  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m1_183 -> m1_186  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m1_183 -> m1_193  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m1_214 -> m1_221  [color=darkseagreen4, key=1, label=properties, style=dashed];
m1_106 -> m1_108  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_106 -> m1_110  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_106 -> m1_112  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_106 -> m1_113  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_106 -> m1_114  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_106 -> m1_109  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_107 -> m1_109  [color=darkseagreen4, key=1, label=location, style=dashed];
m1_260 -> m1_3  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaBuilder", style=dashed];
m1_260 -> m1_8  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaBuilder", style=dashed];
m1_260 -> m1_9  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaBuilder", style=dashed];
m1_260 -> m1_10  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaBuilder", style=dashed];
m1_260 -> m1_11  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaBuilder", style=dashed];
m1_260 -> m1_17  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaBuilder", style=dashed];
m1_260 -> m1_18  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaBuilder", style=dashed];
m1_260 -> m1_27  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaBuilder", style=dashed];
m1_260 -> m1_42  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaBuilder", style=dashed];
m1_260 -> m1_43  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaBuilder", style=dashed];
m1_260 -> m1_47  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaBuilder", style=dashed];
m1_260 -> m1_49  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaBuilder", style=dashed];
m1_260 -> m1_59  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaBuilder", style=dashed];
m1_260 -> m1_69  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaBuilder", style=dashed];
m1_260 -> m1_74  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaBuilder", style=dashed];
m1_260 -> m1_80  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaBuilder", style=dashed];
m1_260 -> m1_83  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaBuilder", style=dashed];
m1_260 -> m1_85  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaBuilder", style=dashed];
m1_260 -> m1_109  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaBuilder", style=dashed];
m1_260 -> m1_112  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaBuilder", style=dashed];
m1_260 -> m1_113  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaBuilder", style=dashed];
m1_260 -> m1_134  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaBuilder", style=dashed];
m1_260 -> m1_136  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaBuilder", style=dashed];
m1_260 -> m1_138  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaBuilder", style=dashed];
m1_260 -> m1_176  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaBuilder", style=dashed];
m1_260 -> m1_178  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaBuilder", style=dashed];
m1_260 -> m1_193  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaBuilder", style=dashed];
m1_260 -> m1_194  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaBuilder", style=dashed];
m1_260 -> m1_204  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaBuilder", style=dashed];
m1_260 -> m1_207  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaBuilder", style=dashed];
m1_260 -> m1_208  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaBuilder", style=dashed];
m1_260 -> m1_211  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaBuilder", style=dashed];
m1_260 -> m1_212  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaBuilder", style=dashed];
m1_260 -> m1_224  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaBuilder", style=dashed];
m1_260 -> m1_227  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaBuilder", style=dashed];
m1_260 -> m1_232  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaBuilder", style=dashed];
m1_26 -> m1_28  [color=darkseagreen4, key=1, label=schema, style=dashed];
m1_31 -> m1_98  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m1_354 -> m1_356  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_354 -> m1_358  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_354 -> m1_357  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_354 -> m1_359  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_354 -> m1_362  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_359 -> m1_361  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_188 -> m1_201  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m1_188 -> m1_203  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m1_205 -> m1_207  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m1_205 -> m1_209  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m1_205 -> m1_210  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m1_205 -> m1_208  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m1_205 -> m1_211  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m1_254 -> m1_256  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m1_254 -> m1_257  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_253 -> m1_258  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaType", style=dashed];
m1_186 -> m1_211  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m1_186 -> m1_212  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m1_96 -> m1_100  [color=darkseagreen4, key=1, label=schemaObject, style=dashed];
m1_96 -> m1_112  [color=darkseagreen4, key=1, label=schemaObject, style=dashed];
m1_98 -> m1_100  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_100 -> m1_102  [color=darkseagreen4, key=1, label=referenceToken, style=dashed];
m1_101 -> m1_103  [color=darkseagreen4, key=1, label=deferredSchema, style=dashed];
m1_181 -> m1_190  [color=darkseagreen4, key=1, label=data, style=dashed];
m1_367 -> m1_369  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_367 -> m1_371  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_367 -> m1_373  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_367 -> m1_374  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_367 -> m1_375  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_367 -> m1_370  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_367 -> m1_372  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_93 -> m1_95  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_93 -> m1_97  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_93 -> m1_96  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_93 -> m1_98  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_93 -> m1_101  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_261 -> m1_258  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaType", style=dashed];
m1_0 -> m1_3  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaResolver", style=dashed];
m1_1 -> m1_8  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_328 -> m1_330  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_328 -> m1_332  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_328 -> m1_334  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_328 -> m1_335  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_328 -> m1_336  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_328 -> m1_331  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_328 -> m1_333  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_315 -> m1_317  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_315 -> m1_319  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_315 -> m1_318  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_315 -> m1_320  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_315 -> m1_323  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_320 -> m1_322  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_378 -> m1_87  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_379 -> m1_101  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_380 -> m1_310  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_381 -> m1_323  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_382 -> m1_349  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_383 -> m1_362  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_377 -> m1_8  [color=darkseagreen4, key=1, label=json, style=dashed];
m2_968 -> m2_975  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m2_968 -> m2_977  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m2_968 -> m2_980  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m2_968 -> m2_983  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m2_968 -> m2_986  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m2_968 -> m2_988  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m2_990 -> m2_996  [color=darkseagreen4, key=1, label=constructorName, style=dashed];
m2_364 -> m2_1224  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m2_17 -> m2_20  [color=darkseagreen4, key=1, label=char, style=dashed];
m2_17 -> m2_22  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m2_17 -> m2_41  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m2_17 -> m2_43  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m2_181 -> m2_483  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m2_181 -> m2_475  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m2_181 -> m2_488  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m2_181 -> m2_490  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m2_181 -> m2_493  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m2_181 -> m2_494  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m2_181 -> m2_507  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m2_181 -> m2_476  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m2_467 -> m2_475  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m2_467 -> m2_518  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m2_467 -> m2_527  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m2_467 -> m2_528  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m2_843 -> m2_846  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m2_843 -> m2_849  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m2_801 -> m2_803  [color=darkseagreen4, key=1, label=firstChar, style=dashed];
m2_801 -> m2_808  [color=darkseagreen4, key=1, label=firstChar, style=dashed];
m2_815 -> m2_823  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m2_817 -> m2_823  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m2_818 -> m2_823  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m2_805 -> m2_807  [color=darkseagreen4, key=1, label=quoteChar, style=dashed];
m2_201 -> m2_209  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m2_201 -> m2_238  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m2_201 -> m2_247  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m2_201 -> m2_248  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m2_210 -> m2_215  [color=darkseagreen4, key=1, label=data, style=dashed];
m2_210 -> m2_216  [color=darkseagreen4, key=1, label=data, style=dashed];
m2_191 -> m2_211  [color=darkseagreen4, key=1, label=isWrapped, style=dashed];
m2_668 -> m2_672  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_668 -> m2_673  [color=darkseagreen4, key=1, label=char, style=dashed];
m2_185 -> m2_297  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m2_185 -> m2_283  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m2_185 -> m2_300  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m2_185 -> m2_301  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m2_185 -> m2_330  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m2_185 -> m2_332  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m2_185 -> m2_284  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m2_185 -> m2_314  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m2_185 -> m2_321  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m2_275 -> m2_283  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m2_275 -> m2_316  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m2_275 -> m2_323  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m2_275 -> m2_345  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m2_275 -> m2_354  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m2_275 -> m2_355  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m2_324 -> m2_327  [color=darkseagreen4, key=1, label=expected, style=dashed];
m2_324 -> m2_328  [color=darkseagreen4, key=1, label=expected, style=dashed];
m2_383 -> m2_391  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m2_383 -> m2_432  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m2_383 -> m2_441  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m2_383 -> m2_442  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m2_411 -> m2_414  [color=darkseagreen4, key=1, label=b, style=dashed];
m2_412 -> m2_414  [color=darkseagreen4, key=1, label=b, style=dashed];
m2_417 -> m2_421  [color=darkseagreen4, key=1, label=isTrue, style=dashed];
m2_417 -> m2_422  [color=darkseagreen4, key=1, label=isTrue, style=dashed];
m2_687 -> m2_689  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m2_687 -> m2_692  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m2_687 -> m2_723  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m2_725 -> m2_728  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m2_723 -> m2_723  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m2_1164 -> m2_1170  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_1164 -> m2_1169  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_1168 -> m2_1170  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_1168 -> m2_1173  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_1173 -> m2_1173  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_368 -> m2_1237  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m2_369 -> m2_1250  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m2_0 -> m2_2  [color=green, key=1, label="System.IO.TextReader", style=dashed];
m2_1159 -> m2_1161  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_1184 -> m2_1203  [color=darkseagreen4, key=1, label=char, style=dashed];
m2_261 -> m2_939  [color=darkseagreen4, key=1, label=bool, style=dashed];
m2_128 -> m2_133  [color=darkseagreen4, key=1, label=charsRequired, style=dashed];
m2_128 -> m2_134  [color=darkseagreen4, key=1, label=charsRequired, style=dashed];
m2_132 -> m2_134  [color=darkseagreen4, key=1, label=totalCharsRead, style=dashed];
m2_68 -> m2_70  [color=darkseagreen4, key=1, label="char[]", style=dashed];
m2_75 -> m2_77  [color=darkseagreen4, key=1, label=count, style=dashed];
m2_175 -> m2_1136  [color=darkseagreen4, key=1, label=bool, style=dashed];
m2_175 -> m2_1144  [color=darkseagreen4, key=1, label=bool, style=dashed];
m2_175 -> m2_1149  [color=darkseagreen4, key=1, label=bool, style=dashed];
m2_175 -> m2_1154  [color=darkseagreen4, key=1, label=bool, style=dashed];
m2_1128 -> m2_1136  [color=darkseagreen4, key=1, label=initialPosition, style=dashed];
m2_1128 -> m2_1144  [color=darkseagreen4, key=1, label=initialPosition, style=dashed];
m2_1128 -> m2_1149  [color=darkseagreen4, key=1, label=initialPosition, style=dashed];
m2_1128 -> m2_1154  [color=darkseagreen4, key=1, label=initialPosition, style=dashed];
m2_1121 -> m2_1134  [color=darkseagreen4, key=1, label=singlelineComment, style=dashed];
m2_1121 -> m2_1141  [color=darkseagreen4, key=1, label=singlelineComment, style=dashed];
m2_1121 -> m2_1148  [color=darkseagreen4, key=1, label=singlelineComment, style=dashed];
m2_1121 -> m2_1153  [color=darkseagreen4, key=1, label=singlelineComment, style=dashed];
m2_1123 -> m2_1134  [color=darkseagreen4, key=1, label=singlelineComment, style=dashed];
m2_1123 -> m2_1141  [color=darkseagreen4, key=1, label=singlelineComment, style=dashed];
m2_1123 -> m2_1148  [color=darkseagreen4, key=1, label=singlelineComment, style=dashed];
m2_1123 -> m2_1153  [color=darkseagreen4, key=1, label=singlelineComment, style=dashed];
m2_1125 -> m2_1134  [color=darkseagreen4, key=1, label=singlelineComment, style=dashed];
m2_1125 -> m2_1141  [color=darkseagreen4, key=1, label=singlelineComment, style=dashed];
m2_1125 -> m2_1148  [color=darkseagreen4, key=1, label=singlelineComment, style=dashed];
m2_1125 -> m2_1153  [color=darkseagreen4, key=1, label=singlelineComment, style=dashed];
m2_59 -> m2_589  [color=darkseagreen4, key=1, label=char, style=dashed];
m2_59 -> m2_593  [color=darkseagreen4, key=1, label=char, style=dashed];
m2_59 -> m2_653  [color=darkseagreen4, key=1, label=char, style=dashed];
m2_642 -> m2_659  [color=green, key=1, label=lastWritePosition, style=dashed];
m2_642 -> m2_655  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m2_642 -> m2_658  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m2_654 -> m2_659  [color=green, key=1, label=charPos, style=dashed];
m2_654 -> m2_654  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m2_654 -> m2_658  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m2_654 -> m2_661  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m2_661 -> m2_661  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m2_578 -> m2_583  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m2_579 -> m2_655  [color=darkseagreen4, key=1, label=initialPosition, style=dashed];
m2_580 -> m2_633  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m2_580 -> m2_641  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m2_583 -> m2_583  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m2_583 -> m2_585  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m2_583 -> m2_586  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m2_583 -> m2_596  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m2_595 -> m2_598  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m2_595 -> m2_639  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m2_617 -> m2_620  [color=darkseagreen4, key=1, label=writeChar, style=dashed];
m2_617 -> m2_641  [color=darkseagreen4, key=1, label=writeChar, style=dashed];
m2_626 -> m2_628  [color=darkseagreen4, key=1, label=writeChar, style=dashed];
m2_626 -> m2_641  [color=darkseagreen4, key=1, label=writeChar, style=dashed];
m2_634 -> m2_641  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m2_650 -> m2_654  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m2_650 -> m2_653  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m2_586 -> m2_586  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m2_586 -> m2_596  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m2_594 -> m2_633  [color=darkseagreen4, key=1, label=escapeStartPos, style=dashed];
m2_594 -> m2_641  [color=darkseagreen4, key=1, label=escapeStartPos, style=dashed];
m2_596 -> m2_596  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m2_624 -> m2_633  [color=darkseagreen4, key=1, label=highSurrogate, style=dashed];
m2_622 -> m2_636  [color=darkseagreen4, key=1, label=anotherHighSurrogate, style=dashed];
m2_635 -> m2_641  [color=darkseagreen4, key=1, label=writeChar, style=dashed];
m2_631 -> m2_633  [color=darkseagreen4, key=1, label=highSurrogate, style=dashed];
m2_630 -> m2_636  [color=darkseagreen4, key=1, label=anotherHighSurrogate, style=dashed];
m2_629 -> m2_633  [color=darkseagreen4, key=1, label=highSurrogate, style=dashed];
m2_619 -> m2_641  [color=darkseagreen4, key=1, label=writeChar, style=dashed];
m2_736 -> m2_770  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m2_736 -> m2_772  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m2_173 -> m2_961  [color=darkseagreen4, key=1, label=bool, style=dashed];
m2_946 -> m2_957  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m2_943 -> m2_945  [color=darkseagreen4, key=1, label=finished, style=dashed];
m2_944 -> m2_961  [color=darkseagreen4, key=1, label=ateWhitespace, style=dashed];
m2_958 -> m2_961  [color=darkseagreen4, key=1, label=ateWhitespace, style=dashed];
m2_120 -> m2_122  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_86 -> m2_89  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_86 -> m2_97  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_86 -> m2_90  [color=darkseagreen4, key=1, label=bool, style=dashed];
m2_96 -> m2_99  [color=darkseagreen4, key=1, label=remainingCharCount, style=dashed];
m2_96 -> m2_100  [color=darkseagreen4, key=1, label=remainingCharCount, style=dashed];
m2_96 -> m2_103  [color=darkseagreen4, key=1, label=remainingCharCount, style=dashed];
m2_96 -> m2_104  [color=darkseagreen4, key=1, label=remainingCharCount, style=dashed];
m2_98 -> m2_100  [color=darkseagreen4, key=1, label=dst, style=dashed];
m2_109 -> m2_111  [color=darkseagreen4, key=1, label=charsRead, style=dashed];
m2_109 -> m2_114  [color=darkseagreen4, key=1, label=charsRead, style=dashed];
m2_676 -> m2_682  [color=darkseagreen4, key=1, label=writeChar, style=dashed];
m2_679 -> m2_682  [color=darkseagreen4, key=1, label=writeChar, style=dashed];
m2_852 -> m2_861  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m2_852 -> m2_923  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m2_852 -> m2_925  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m2_852 -> m2_928  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m2_871 -> m2_874  [color=darkseagreen4, key=1, label=next, style=dashed];
m2_365 -> m2_1009  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m2_365 -> m2_1022  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m2_365 -> m2_1039  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m2_365 -> m2_1054  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m2_1038 -> m2_1101  [color=green, key=1, label=numberType, style=dashed];
m2_1024 -> m2_1101  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m2_1028 -> m2_1101  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m2_1034 -> m2_1101  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m2_1007 -> m2_1023  [color=darkseagreen4, key=1, label=singleDigit, style=dashed];
m2_1007 -> m2_1040  [color=darkseagreen4, key=1, label=singleDigit, style=dashed];
m2_1007 -> m2_1055  [color=darkseagreen4, key=1, label=singleDigit, style=dashed];
m2_1007 -> m2_1069  [color=darkseagreen4, key=1, label=singleDigit, style=dashed];
m2_1008 -> m2_1011  [color=darkseagreen4, key=1, label=nonBase10, style=dashed];
m2_1008 -> m2_1025  [color=darkseagreen4, key=1, label=nonBase10, style=dashed];
m2_1008 -> m2_1042  [color=darkseagreen4, key=1, label=nonBase10, style=dashed];
m2_1008 -> m2_1057  [color=darkseagreen4, key=1, label=nonBase10, style=dashed];
m2_1008 -> m2_1072  [color=darkseagreen4, key=1, label=nonBase10, style=dashed];
m2_1010 -> m2_1012  [color=darkseagreen4, key=1, label=number, style=dashed];
m2_1010 -> m2_1013  [color=darkseagreen4, key=1, label=number, style=dashed];
m2_1010 -> m2_1014  [color=darkseagreen4, key=1, label=number, style=dashed];
m2_1010 -> m2_1016  [color=darkseagreen4, key=1, label=number, style=dashed];
m2_1010 -> m2_1018  [color=darkseagreen4, key=1, label=number, style=dashed];
m2_1026 -> m2_1030  [color=darkseagreen4, key=1, label=number, style=dashed];
m2_1032 -> m2_1035  [color=darkseagreen4, key=1, label=parseResult, style=dashed];
m2_1043 -> m2_1047  [color=darkseagreen4, key=1, label=number, style=dashed];
m2_1048 -> m2_1050  [color=darkseagreen4, key=1, label=number, style=dashed];
m2_1058 -> m2_1062  [color=darkseagreen4, key=1, label=number, style=dashed];
m2_1063 -> m2_1065  [color=darkseagreen4, key=1, label=number, style=dashed];
m2_1073 -> m2_1076  [color=darkseagreen4, key=1, label=number, style=dashed];
m2_1079 -> m2_1083  [color=darkseagreen4, key=1, label=parseResult, style=dashed];
m2_1089 -> m2_1092  [color=darkseagreen4, key=1, label=number, style=dashed];
m2_1089 -> m2_1094  [color=darkseagreen4, key=1, label=number, style=dashed];
m2_1089 -> m2_1096  [color=darkseagreen4, key=1, label=number, style=dashed];
m2_1089 -> m2_1098  [color=darkseagreen4, key=1, label=number, style=dashed];
m2_1021 -> m2_1101  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m2_1053 -> m2_1101  [color=darkseagreen4, key=1, label=numberType, style=dashed];
m2_1068 -> m2_1101  [color=darkseagreen4, key=1, label=numberType, style=dashed];
m2_1071 -> m2_1101  [color=darkseagreen4, key=1, label=numberType, style=dashed];
m2_1077 -> m2_1101  [color=darkseagreen4, key=1, label=numberType, style=dashed];
m2_1082 -> m2_1101  [color=darkseagreen4, key=1, label=numberType, style=dashed];
m2_1088 -> m2_1101  [color=darkseagreen4, key=1, label=numberType, style=dashed];
m2_1099 -> m2_1101  [color=darkseagreen4, key=1, label=numberType, style=dashed];
m2_1041 -> m2_1101  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m2_1056 -> m2_1101  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m2_1070 -> m2_1101  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m2_1005 -> m2_1101  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m2_1020 -> m2_1101  [color=darkseagreen4, key=1, label=numberType, style=dashed];
m2_1045 -> m2_1101  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m2_1051 -> m2_1101  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m2_1060 -> m2_1101  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m2_1066 -> m2_1101  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m2_1074 -> m2_1101  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m2_1081 -> m2_1101  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m2_1087 -> m2_1101  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m2_1093 -> m2_1101  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m2_1097 -> m2_1101  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m2_775 -> m2_796  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m2_1277 -> m2_4  [color=green, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_9  [color=green, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_14  [color=green, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_659  [color=green, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_18  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_19  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_20  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_21  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_26  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_28  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_31  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_34  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_39  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_48  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_49  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_52  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_53  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_55  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_74  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_77  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_84  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_87  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_89  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_93  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_94  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_97  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_100  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_101  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_104  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_121  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_122  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_126  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_139  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_141  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_148  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_151  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_153  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_156  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_157  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_158  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_159  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_161  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_162  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_164  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_165  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_167  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_179  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_183  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_187  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_190  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_192  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_204  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_205  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_209  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_212  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_213  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_214  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_215  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_218  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_219  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_220  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_223  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_224  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_225  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_227  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_230  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_232  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_234  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_235  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_236  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_238  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_240  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_242  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_245  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_246  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_248  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_250  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_252  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_265  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_266  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_278  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_279  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_283  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_286  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_288  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_290  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_291  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_292  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_294  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_295  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_296  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_299  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_300  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_301  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_302  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_315  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_316  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_317  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_318  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_322  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_323  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_325  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_326  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_327  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_330  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_332  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_334  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_337  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_339  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_341  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_342  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_343  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_345  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_347  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_349  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_352  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_353  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_355  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_357  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_359  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_370  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_373  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_374  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_386  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_387  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_391  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_392  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_394  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_408  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_410  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_413  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_419  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_420  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_421  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_424  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_426  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_428  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_429  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_430  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_432  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_434  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_436  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_439  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_440  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_442  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_444  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_446  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_450  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_451  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_452  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_453  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_454  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_457  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_458  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_470  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_471  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_475  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_478  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_480  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_482  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_485  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_488  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_490  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_492  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_493  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_494  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_495  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_507  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_508  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_510  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_512  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_514  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_515  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_516  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_518  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_520  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_522  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_525  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_526  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_528  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_530  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_532  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_538  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_541  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_544  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_546  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_549  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_552  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_554  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_558  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_559  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_560  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_562  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_563  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_564  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_565  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_567  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_568  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_571  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_574  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_583  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_585  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_587  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_589  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_592  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_593  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_623  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_632  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_633  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_639  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_640  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_641  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_645  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_649  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_653  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_657  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_672  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_673  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_677  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_681  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_689  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_692  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_693  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_728  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_739  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_740  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_743  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_745  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_746  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_749  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_750  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_753  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_754  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_757  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_760  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_761  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_765  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_767  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_769  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_771  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_772  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_778  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_779  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_781  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_783  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_784  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_787  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_790  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_792  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_795  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_797  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_798  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_804  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_806  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_807  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_808  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_810  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_811  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_812  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_814  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_819  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_820  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_821  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_822  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_823  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_825  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_836  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_838  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_839  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_840  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_844  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_845  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_849  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_855  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_856  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_858  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_861  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_864  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_867  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_870  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_873  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_875  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_876  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_877  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_878  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_881  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_884  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_887  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_888  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_889  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_892  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_895  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_898  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_899  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_902  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_903  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_906  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_907  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_910  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_913  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_914  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_917  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_919  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_922  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_924  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_926  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_928  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_935  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_936  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_938  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_939  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_940  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_941  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_949  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_950  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_952  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_954  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_956  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_959  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_963  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_964  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_970  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_971  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_972  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_974  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_976  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_979  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_982  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_985  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_988  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_991  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_992  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_993  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_994  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_995  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_996  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_997  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_999  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1002  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1003  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1016  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1019  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1030  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1036  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1037  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1047  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1052  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1062  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1067  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1076  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1086  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1090  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1094  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1098  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1100  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1101  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1118  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1119  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1120  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1122  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1124  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1126  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1127  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1130  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1132  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1133  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1135  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1136  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1138  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1140  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1142  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1143  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1144  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1145  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1149  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1151  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1154  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1156  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1157  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1161  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1165  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1167  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1170  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1180  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1182  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1191  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1196  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1207  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1208  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1209  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1211  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1212  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1213  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1215  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1216  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1217  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1219  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1220  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1221  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1223  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1227  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1228  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1231  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1233  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1234  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1236  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1240  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1241  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1244  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1246  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1247  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1249  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1253  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1254  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1257  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1259  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1260  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1263  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1264  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1265  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1267  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1268  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m2_1277 -> m2_1269  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
}
