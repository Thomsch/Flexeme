digraph  {
m0_0 [cluster="Newtonsoft.Json.Utilities.EnumValue<T>.EnumValue(string, T)", file="DynamicTests.cs", label="Entry Newtonsoft.Json.Utilities.EnumValue<T>.EnumValue(string, T)", span="46-46"];
m0_1 [cluster="Newtonsoft.Json.Utilities.EnumValue<T>.EnumValue(string, T)", file="DynamicTests.cs", label="_name = name", span="48-48"];
m0_2 [cluster="Newtonsoft.Json.Utilities.EnumValue<T>.EnumValue(string, T)", file="DynamicTests.cs", label="_value = value", span="49-49"];
m0_3 [cluster="Newtonsoft.Json.Utilities.EnumValue<T>.EnumValue(string, T)", file="DynamicTests.cs", label="Exit Newtonsoft.Json.Utilities.EnumValue<T>.EnumValue(string, T)", span="46-46"];
m0_4 [file="DynamicTests.cs", label="Newtonsoft.Json.Utilities.EnumValue<T>", span=""];
m1_306 [cluster="System.Collections.IEnumerable.Cast<TResult>()", file="EnumUtils.cs", label="Entry System.Collections.IEnumerable.Cast<TResult>()", span="0-0"];
m1_372 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something.Something()", file="EnumUtils.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something.Something()", span="793-793"];
m1_373 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something.Something()", file="EnumUtils.cs", label="this.RootSomethingElse = new RootSomethingElse()", span="795-795"];
m1_374 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something.Something()", file="EnumUtils.cs", label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something.Something()", span="793-793"];
m1_74 [cluster="lambda expression", file="EnumUtils.cs", label="Entry lambda expression", span="278-282"];
m1_52 [cluster="lambda expression", file="EnumUtils.cs", label="Exit lambda expression", span="91-91"];
m1_292 [cluster="Unk.ToDictionary", file="EnumUtils.cs", label="Entry Unk.ToDictionary", span=""];
m1_191 [cluster="Unk.IsNull", file="EnumUtils.cs", label="Entry Unk.IsNull", span=""];
m1_12 [cluster="Unk.IsTrue", file="EnumUtils.cs", label="Entry Unk.IsTrue", span=""];
m1_95 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNames(System.Type)", file="EnumUtils.cs", label="List<string> values = new List<string>()", span="163-163"];
m1_96 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNames(System.Type)", color=green, community=0, file="EnumUtils.cs", label="2: var fields = enumType.GetFields().Where(f => f.IsLiteral)", span="165-165"];
m1_97 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNames(System.Type)", file="EnumUtils.cs", label=fields, span="167-167"];
m1_98 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNames(System.Type)", file="EnumUtils.cs", label="values.Add(field.Name)", span="169-169"];
m1_99 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNames(System.Type)", file="EnumUtils.cs", label="return values;", span="172-172"];
m1_115 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ParseEnumName(string, bool, System.Type)", color=green, community=0, file="EnumUtils.cs", label="2: i++", span="186-186"];
m1_151 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.HandlingMultidimensionalArrayErrors()", file="EnumUtils.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.HandlingMultidimensionalArrayErrors()", span="454-454"];
m1_152 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.HandlingMultidimensionalArrayErrors()", file="EnumUtils.cs", label="string json = ''[[\''a\'',\''45\''],[\''b\'',34]]''", span="456-456"];
m1_153 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.HandlingMultidimensionalArrayErrors()", file="EnumUtils.cs", label="List<string> errors = new List<string>()", span="458-458"];
m1_156 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.HandlingMultidimensionalArrayErrors()", file="EnumUtils.cs", label="serializer.Deserialize(new JsonTextReader(new StringReader(json)), typeof(int[,]))", span="467-467"];
m1_154 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.HandlingMultidimensionalArrayErrors()", file="EnumUtils.cs", label="JsonSerializer serializer = new JsonSerializer()", span="460-460"];
m1_155 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.HandlingMultidimensionalArrayErrors()", file="EnumUtils.cs", label="serializer.Error += delegate(object sender, ErrorEventArgs args)\r\n            {\r\n                errors.Add(args.ErrorContext.Path + '' - '' + args.ErrorContext.Member + '' - '' + args.ErrorContext.Error.Message);\r\n                args.ErrorContext.Handled = true;\r\n            }", span="461-465"];
m1_157 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.HandlingMultidimensionalArrayErrors()", file="EnumUtils.cs", label="Assert.AreEqual(2, errors.Count)", span="469-469"];
m1_158 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.HandlingMultidimensionalArrayErrors()", file="EnumUtils.cs", label="Assert.AreEqual(''[0][0] - 0 - Could not convert string to integer: a. Path '[0][0]', line 1, position 5.'', errors[0])", span="470-470"];
m1_159 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.HandlingMultidimensionalArrayErrors()", file="EnumUtils.cs", label="Assert.AreEqual(''[1][0] - 0 - Could not convert string to integer: b. Path '[1][0]', line 1, position 16.'', errors[1])", span="471-471"];
m1_160 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.HandlingMultidimensionalArrayErrors()", file="EnumUtils.cs", label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.HandlingMultidimensionalArrayErrors()", span="454-454"];
m1_210 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.InfiniteLoopArrayHandlingInObject()", file="EnumUtils.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.InfiniteLoopArrayHandlingInObject()", span="544-544"];
m1_211 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.InfiniteLoopArrayHandlingInObject()", file="EnumUtils.cs", label="IList<string> errors = new List<string>()", span="546-546"];
m1_212 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.InfiniteLoopArrayHandlingInObject()", file="EnumUtils.cs", label="Dictionary<string, int[]> o = JsonConvert.DeserializeObject<Dictionary<string, int[]>>(\r\n                ''{'badarray':[0,x,2],'goodarray':[0,1,2]}'',\r\n                new JsonSerializerSettings\r\n                {\r\n                    MetadataPropertyHandling = MetadataPropertyHandling.Default,\r\n                    Error = (sender, arg) =>\r\n                    {\r\n                        errors.Add(arg.ErrorContext.Error.Message);\r\n                        arg.ErrorContext.Handled = true;\r\n                    }\r\n                })", span="548-558"];
m1_214 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.InfiniteLoopArrayHandlingInObject()", file="EnumUtils.cs", label="Assert.AreEqual(4, errors.Count)", span="562-562"];
m1_215 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.InfiniteLoopArrayHandlingInObject()", file="EnumUtils.cs", label="Assert.AreEqual(''Unexpected character encountered while parsing value: x. Path 'badarray[0]', line 1, position 15.'', errors[0])", span="563-563"];
m1_216 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.InfiniteLoopArrayHandlingInObject()", file="EnumUtils.cs", label="Assert.AreEqual(''Unexpected character encountered while parsing value: x. Path 'badarray[0]', line 1, position 15.'', errors[1])", span="564-564"];
m1_217 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.InfiniteLoopArrayHandlingInObject()", file="EnumUtils.cs", label="Assert.AreEqual(''Infinite loop detected from error handling. Path 'badarray[0]', line 1, position 15.'', errors[2])", span="565-565"];
m1_218 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.InfiniteLoopArrayHandlingInObject()", file="EnumUtils.cs", label="Assert.AreEqual(''Unexpected character encountered while parsing value: x. Path 'badarray[0]', line 1, position 15.'', errors[3])", span="566-566"];
m1_213 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.InfiniteLoopArrayHandlingInObject()", file="EnumUtils.cs", label="Assert.IsNull(o)", span="560-560"];
m1_219 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.InfiniteLoopArrayHandlingInObject()", file="EnumUtils.cs", label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.InfiniteLoopArrayHandlingInObject()", span="544-544"];
m1_70 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="EnumUtils.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m1_29 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetFlagsValues<T>(T)", file="EnumUtils.cs", label="Type underlyingType = Enum.GetUnderlyingType(value.GetType())", span="79-79"];
m1_76 [cluster="lambda expression", file="EnumUtils.cs", label="args.ErrorContext.Handled = true", span="281-281"];
m1_121 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.MultipleRequiredPropertyErrors()", file="EnumUtils.cs", label="string json = ''{}''", span="416-416"];
m1_40 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializingErrorInChildObject()", file="EnumUtils.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="232-232"];
m1_291 [cluster="System.Collections.Generic.IEnumerable<TSource>.GroupBy<TSource, TKey>(System.Func<TSource, TKey>)", file="EnumUtils.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.GroupBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m1_402 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SomethingElse.SomethingElse()", file="EnumUtils.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SomethingElse.SomethingElse()", span="803-803"];
m1_21 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorInChildObject()", file="EnumUtils.cs", label="Assert.AreEqual(''Value3'', c[2].Member)", span="111-111"];
m1_18 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorInChildObject()", file="EnumUtils.cs", label="Assert.AreEqual(3, c.Count)", span="108-108"];
m1_282 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.WriteEndOnPropertyState()", file="EnumUtils.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.WriteEndOnPropertyState()", span="670-670"];
m1_283 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.WriteEndOnPropertyState()", file="EnumUtils.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings()", span="672-672"];
m1_284 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.WriteEndOnPropertyState()", file="EnumUtils.cs", label="settings.Error += (obj, args) => { args.ErrorContext.Handled = true; }", span="673-673"];
m1_287 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.WriteEndOnPropertyState()", file="EnumUtils.cs", label="string output = JsonConvert.SerializeObject(dictionary, Formatting.None, settings)", span="683-683"];
m1_285 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.WriteEndOnPropertyState()", file="EnumUtils.cs", label="var data = new List<ErrorPerson2>()\r\n            {\r\n                new ErrorPerson2 { FirstName = ''Scott'', LastName = ''Hanselman'' },\r\n                new ErrorPerson2 { FirstName = ''Scott'', LastName = ''Hunter'' },\r\n                new ErrorPerson2 { FirstName = ''Scott'', LastName = ''Guthrie'' },\r\n            }", span="675-680"];
m1_286 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.WriteEndOnPropertyState()", file="EnumUtils.cs", label="Dictionary<string, IEnumerable<IErrorPerson2>> dictionary = data.GroupBy(person => person.FirstName).ToDictionary(group => @group.Key, group => @group.Cast<IErrorPerson2>())", span="682-682"];
m1_288 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.WriteEndOnPropertyState()", file="EnumUtils.cs", label="Assert.AreEqual(@''{''''Scott'''':[]}'', output)", span="684-684"];
m1_289 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.WriteEndOnPropertyState()", file="EnumUtils.cs", label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.WriteEndOnPropertyState()", span="670-670"];
m1_46 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorInDateTimeCollection()", file="EnumUtils.cs", label="DateTimeErrorObjectCollection c = JsonConvert.DeserializeObject<DateTimeErrorObjectCollection>(@''[\r\n  ''''2009-09-09T00:00:00Z'''',\r\n  ''''kjhkjhkjhkjh'''',\r\n  [\r\n    1\r\n  ],\r\n  ''''1977-02-20T00:00:00Z'''',\r\n  null,\r\n  ''''2000-12-01T00:00:00Z''''\r\n]'', new IsoDateTimeConverter())", span="254-263"];
m1_53 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", file="EnumUtils.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", span="787-787"];
m1_54 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="EnumUtils.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m1_14 [cluster="lambda expression", file="EnumUtils.cs", label="m == c.Messages[0]", span="79-79"];
m1_44 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="EnumUtils.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="525-525"];
m1_24 [cluster="lambda expression", file="EnumUtils.cs", label="Exit lambda expression", span="56-56"];
m1_25 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetFlagsValues<T>(T)", color=red, community=0, file="EnumUtils.cs", label="2: Entry Newtonsoft.Json.Utilities.EnumUtils.GetFlagsValues<T>(T)", span="72-72"];
m1_26 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetFlagsValues<T>(T)", file="EnumUtils.cs", label="Type enumType = typeof(T)", span="74-74"];
m1_27 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetFlagsValues<T>(T)", file="EnumUtils.cs", label="!enumType.IsDefined(typeof(FlagsAttribute), false)", span="76-76"];
m1_28 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetFlagsValues<T>(T)", file="EnumUtils.cs", label="throw new ArgumentException(''Enum type {0} is not a set of flags.''.FormatWith(CultureInfo.InvariantCulture, enumType));", span="77-77"];
m1_144 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.HandlingArrayErrors()", file="EnumUtils.cs", label="Assert.AreEqual(''[0] - 0 - Could not convert string to integer: a. Path '[0]', line 1, position 4.'', errors[0])", span="449-449"];
m1_45 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorInDateTimeCollection()", file="EnumUtils.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorInDateTimeCollection()", span="252-252"];
m1_190 [cluster="Newtonsoft.Json.Tests.Serialization.ThrowingReader.ThrowingReader()", file="EnumUtils.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ThrowingReader.ThrowingReader()", span="898-898"];
m1_423 [cluster="Newtonsoft.Json.Tests.Serialization.ThrowingReader.ThrowingReader()", file="EnumUtils.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ThrowingReader.ThrowingReader()", span="898-898"];
m1_443 [cluster="System.Array.Copy(System.Array, int, System.Array, int, int)", file="EnumUtils.cs", label="Entry System.Array.Copy(System.Array, int, System.Array, int, int)", span="0-0"];
m1_355 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something.SomethingConverter.CanConvert(System.Type)", file="EnumUtils.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something.SomethingConverter.CanConvert(System.Type)", span="751-751"];
m1_356 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something.SomethingConverter.CanConvert(System.Type)", file="EnumUtils.cs", label="return true;", span="753-753"];
m1_357 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something.SomethingConverter.CanConvert(System.Type)", file="EnumUtils.cs", label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something.SomethingConverter.CanConvert(System.Type)", span="751-751"];
m1_343 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.NoObjectWithAttribute()", file="EnumUtils.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.NoObjectWithAttribute()", span="722-722"];
m1_344 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.NoObjectWithAttribute()", file="EnumUtils.cs", label="string json = ''{\''}''", span="724-724"];
m1_345 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.NoObjectWithAttribute()", file="EnumUtils.cs", label="byte[] byteArray = Encoding.UTF8.GetBytes(json)", span="725-725"];
m1_346 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.NoObjectWithAttribute()", file="EnumUtils.cs", label="MemoryStream stream = new MemoryStream(byteArray)", span="726-726"];
m1_347 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.NoObjectWithAttribute()", file="EnumUtils.cs", label="JsonTextReader jReader = new JsonTextReader(new StreamReader(stream))", span="727-727"];
m1_348 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.NoObjectWithAttribute()", file="EnumUtils.cs", label="JsonSerializer s = new JsonSerializer()", span="728-728"];
m1_349 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.NoObjectWithAttribute()", file="EnumUtils.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { ErrorTestObject obj = s.Deserialize<ErrorTestObject>(jReader); }, @''Unterminated string. Expected delimiter: ''''. Path '', line 1, position 3.'')", span="730-730"];
m1_350 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.NoObjectWithAttribute()", file="EnumUtils.cs", label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.NoObjectWithAttribute()", span="722-722"];
m1_383 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SomethingElse.SomethingElseConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="EnumUtils.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SomethingElse.SomethingElseConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="817-817"];
m1_384 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SomethingElse.SomethingElseConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="EnumUtils.cs", label="throw new NotImplementedException();", span="819-819"];
m1_385 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SomethingElse.SomethingElseConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="EnumUtils.cs", label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SomethingElse.SomethingElseConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="817-817"];
m1_87 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorInDateTimeCollectionWithAttributeWithEventNotCalled()", file="EnumUtils.cs", label="Assert.AreEqual(new DateTime(1977, 2, 20, 0, 0, 0, DateTimeKind.Utc), c[1])", span="356-356"];
m1_71 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="EnumUtils.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="72-72"];
m1_131 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ToEnumName(System.Type, string, bool)", color=green, community=0, file="EnumUtils.cs", label="0: i < names.Length", span="208-208"];
m1_43 [cluster="object.GetType()", file="EnumUtils.cs", label="Entry object.GetType()", span="0-0"];
m1_20 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorInChildObject()", file="EnumUtils.cs", label="Assert.AreEqual(''Value2'', c[1].Member)", span="110-110"];
m1_358 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something.SomethingConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="EnumUtils.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something.SomethingConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="756-756"];
m1_359 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something.SomethingConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="EnumUtils.cs", label="var innerObject = serializer.Deserialize(reader, typeof(SomethingElse))", span="762-762"];
m1_360 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something.SomethingConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="EnumUtils.cs", label="return null;", span="764-764"];
m1_361 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something.SomethingConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="EnumUtils.cs", label=Exception, span="766-766"];
m1_362 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something.SomethingConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="EnumUtils.cs", label="throw new Exception(''An error occurred.'', ex);", span="769-769"];
m1_363 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something.SomethingConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="EnumUtils.cs", label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something.SomethingConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="756-756"];
m1_442 [cluster="System.Exception.Exception(string)", file="EnumUtils.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m1_444 [cluster="Newtonsoft.Json.Tests.Serialization.ErrorTestObject.OnError(System.Runtime.Serialization.StreamingContext, Newtonsoft.Json.Serialization.ErrorContext)", file="EnumUtils.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ErrorTestObject.OnError(System.Runtime.Serialization.StreamingContext, Newtonsoft.Json.Serialization.ErrorContext)", span="972-972"];
m1_445 [cluster="Newtonsoft.Json.Tests.Serialization.ErrorTestObject.OnError(System.Runtime.Serialization.StreamingContext, Newtonsoft.Json.Serialization.ErrorContext)", file="EnumUtils.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ErrorTestObject.OnError(System.Runtime.Serialization.StreamingContext, Newtonsoft.Json.Serialization.ErrorContext)", span="972-972"];
m1_30 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetFlagsValues<T>(T)", file="EnumUtils.cs", label="ulong num = Convert.ToUInt64(value, CultureInfo.InvariantCulture)", span="81-81"];
m1_327 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.NoObjectWithEvent()", file="EnumUtils.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.NoObjectWithEvent()", span="708-708"];
m1_328 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.NoObjectWithEvent()", file="EnumUtils.cs", label="string json = ''{\''}''", span="710-710"];
m1_329 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.NoObjectWithEvent()", file="EnumUtils.cs", label="byte[] byteArray = Encoding.UTF8.GetBytes(json)", span="711-711"];
m1_330 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.NoObjectWithEvent()", file="EnumUtils.cs", label="MemoryStream stream = new MemoryStream(byteArray)", span="712-712"];
m1_331 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.NoObjectWithEvent()", file="EnumUtils.cs", label="JsonTextReader jReader = new JsonTextReader(new StreamReader(stream))", span="713-713"];
m1_332 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.NoObjectWithEvent()", file="EnumUtils.cs", label="JsonSerializer s = new JsonSerializer()", span="714-714"];
m1_334 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.NoObjectWithEvent()", file="EnumUtils.cs", label="ErrorPerson2 obj = s.Deserialize<ErrorPerson2>(jReader)", span="716-716"];
m1_333 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.NoObjectWithEvent()", file="EnumUtils.cs", label="s.Error += (sender, args) => { args.ErrorContext.Handled = true; }", span="715-715"];
m1_335 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.NoObjectWithEvent()", file="EnumUtils.cs", label="Assert.IsNull(obj)", span="718-718"];
m1_336 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.NoObjectWithEvent()", file="EnumUtils.cs", label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.NoObjectWithEvent()", span="708-708"];
m1_416 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializeRootConverter()", file="EnumUtils.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializeRootConverter()", span="870-870"];
m1_417 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializeRootConverter()", file="EnumUtils.cs", label="string result = JsonConvert.SerializeObject(new SomethingElse(), new JsonSerializerSettings\r\n            {\r\n                Error = (o, e) => { e.ErrorContext.Handled = true; }\r\n            })", span="872-875"];
m1_418 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializeRootConverter()", file="EnumUtils.cs", label="Assert.AreEqual(string.Empty, result)", span="877-877"];
m1_419 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializeRootConverter()", file="EnumUtils.cs", label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializeRootConverter()", span="870-870"];
m1_100 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNames(System.Type)", file="EnumUtils.cs", label="Exit Newtonsoft.Json.Utilities.EnumUtils.GetNames(System.Type)", span="158-158"];
m1_0 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorDeserializingListHandled()", file="EnumUtils.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorDeserializingListHandled()", span="57-57"];
m1_1 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorDeserializingListHandled()", color=green, community=1, file="EnumUtils.cs", label="0: string json = @''[\r\n  {\r\n    ''''Name'''': ''''Jim'''',\r\n    ''''BirthDate'''': ''''\/Date(978048000000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(978048000000)\/''''\r\n  },\r\n  {\r\n    ''''Name'''': ''''Jim'''',\r\n    ''''BirthDate'''': ''''\/Date(978048000000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(978048000000)\/''''\r\n  }\r\n]''", span="59-70"];
m1_2 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorDeserializingListHandled()", color=green, community=0, file="EnumUtils.cs", label="0: var possibleMsgs = new [] {\r\n                ''[1] - Error message for member 1 = An item with the same key has already been added.'',\r\n                ''[1] - Error message for member 1 = An element with the same key already exists in the dictionary.'' // mono\r\n            }", span="72-75"];
m1_7 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorDeserializingListHandled()", color=green, community=0, file="EnumUtils.cs", label="1: Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorDeserializingListHandled()", span="57-57"];
m1_9 [cluster="Unk.AreEqual", color=green, community=0, file="EnumUtils.cs", label="2: Entry Unk.AreEqual", span=""];
m1_10 [cluster="Unk.Any", color=green, community=0, file="EnumUtils.cs", label="0: Entry Unk.Any", span=""];
m1_3 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorDeserializingListHandled()", color=green, community=0, file="EnumUtils.cs", label="0: VersionKeyedCollection c = JsonConvert.DeserializeObject<VersionKeyedCollection>(json)", span="76-76"];
m1_5 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorDeserializingListHandled()", color=green, community=1, file="EnumUtils.cs", label="0: Assert.AreEqual(1, c.Messages.Count)", span="78-78"];
m1_8 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", color=green, community=0, file="EnumUtils.cs", label="3: Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="739-739"];
m1_6 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorDeserializingListHandled()", color=green, community=0, file="EnumUtils.cs", label="0: Assert.IsTrue (possibleMsgs.Any (m => m == c.Messages[0]), ''Expected One of: '' + Environment.NewLine + string.Join (Environment.NewLine, possibleMsgs) + Environment.NewLine + ''Was: '' + Environment.NewLine + c.Messages[0])", span="79-79"];
m1_4 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorDeserializingListHandled()", color=green, community=0, file="EnumUtils.cs", label="2: Assert.AreEqual(1, c.Count)", span="77-77"];
m1_11 [cluster="string.Join(string, params string[])", file="EnumUtils.cs", label="Entry string.Join(string, params string[])", span="0-0"];
m1_424 [cluster="Newtonsoft.Json.Tests.Serialization.ThrowingReader.Read(char[], int, int)", file="EnumUtils.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ThrowingReader.Read(char[], int, int)", span="902-902"];
m1_425 [cluster="Newtonsoft.Json.Tests.Serialization.ThrowingReader.Read(char[], int, int)", file="EnumUtils.cs", label="char[] temp = new char[buffer.Length]", span="904-904"];
m1_428 [cluster="Newtonsoft.Json.Tests.Serialization.ThrowingReader.Read(char[], int, int)", file="EnumUtils.cs", label="charsRead = new StringReader(''['').Read(temp, index, count)", span="908-908"];
m1_431 [cluster="Newtonsoft.Json.Tests.Serialization.ThrowingReader.Read(char[], int, int)", file="EnumUtils.cs", label="charsRead = new StringReader('','').Read(temp, index, count)", span="915-915"];
m1_433 [cluster="Newtonsoft.Json.Tests.Serialization.ThrowingReader.Read(char[], int, int)", file="EnumUtils.cs", label="charsRead = new StringReader(element).Read(temp, index, count)", span="920-920"];
m1_438 [cluster="Newtonsoft.Json.Tests.Serialization.ThrowingReader.Read(char[], int, int)", file="EnumUtils.cs", label="Array.Copy(temp, index, buffer, index, charsRead)", span="930-930"];
m1_426 [cluster="Newtonsoft.Json.Tests.Serialization.ThrowingReader.Read(char[], int, int)", file="EnumUtils.cs", label="int charsRead = 0", span="905-905"];
m1_427 [cluster="Newtonsoft.Json.Tests.Serialization.ThrowingReader.Read(char[], int, int)", file="EnumUtils.cs", label=_firstRead, span="906-906"];
m1_430 [cluster="Newtonsoft.Json.Tests.Serialization.ThrowingReader.Read(char[], int, int)", file="EnumUtils.cs", label=_readComma, span="913-913"];
m1_429 [cluster="Newtonsoft.Json.Tests.Serialization.ThrowingReader.Read(char[], int, int)", file="EnumUtils.cs", label="_firstRead = false", span="909-909"];
m1_435 [cluster="Newtonsoft.Json.Tests.Serialization.ThrowingReader.Read(char[], int, int)", file="EnumUtils.cs", label="_position += charsRead", span="925-925"];
m1_439 [cluster="Newtonsoft.Json.Tests.Serialization.ThrowingReader.Read(char[], int, int)", file="EnumUtils.cs", label="return charsRead;", span="931-931"];
m1_432 [cluster="Newtonsoft.Json.Tests.Serialization.ThrowingReader.Read(char[], int, int)", file="EnumUtils.cs", label="_readComma = false", span="916-916"];
m1_434 [cluster="Newtonsoft.Json.Tests.Serialization.ThrowingReader.Read(char[], int, int)", file="EnumUtils.cs", label="_readComma = true", span="921-921"];
m1_436 [cluster="Newtonsoft.Json.Tests.Serialization.ThrowingReader.Read(char[], int, int)", file="EnumUtils.cs", label="_position > 65536", span="926-926"];
m1_437 [cluster="Newtonsoft.Json.Tests.Serialization.ThrowingReader.Read(char[], int, int)", file="EnumUtils.cs", label="throw new Exception(''too far'');", span="928-928"];
m1_440 [cluster="Newtonsoft.Json.Tests.Serialization.ThrowingReader.Read(char[], int, int)", file="EnumUtils.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ThrowingReader.Read(char[], int, int)", span="902-902"];
m1_205 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="EnumUtils.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", span="833-833"];
m1_379 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SomethingElse.SomethingElseConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="EnumUtils.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SomethingElse.SomethingElseConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="812-812"];
m1_380 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SomethingElse.SomethingElseConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="EnumUtils.cs", label="throw new NotImplementedException();", span="814-814"];
m1_381 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SomethingElse.SomethingElseConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="EnumUtils.cs", label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SomethingElse.SomethingElseConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="812-812"];
m1_395 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializeWrappingErrorsAndErrorHandling()", file="EnumUtils.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializeWrappingErrorsAndErrorHandling()", span="837-837"];
m1_396 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializeWrappingErrorsAndErrorHandling()", file="EnumUtils.cs", label="var serialiser = JsonSerializer.Create(new JsonSerializerSettings() { })", span="839-839"];
m1_397 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializeWrappingErrorsAndErrorHandling()", file="EnumUtils.cs", label="Something s = new Something\r\n            {\r\n                RootSomethingElse = new RootSomethingElse\r\n                {\r\n                    SomethingElse = new SomethingElse()\r\n                }\r\n            }", span="841-847"];
m1_400 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializeWrappingErrorsAndErrorHandling()", file="EnumUtils.cs", label="ExceptionAssert.Throws<Exception>(() => { serialiser.Serialize(writer, r); }, ''An error occurred.'')", span="855-855"];
m1_398 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializeWrappingErrorsAndErrorHandling()", file="EnumUtils.cs", label="RootThing r = new RootThing\r\n            {\r\n                Something = s\r\n            }", span="848-851"];
m1_399 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializeWrappingErrorsAndErrorHandling()", file="EnumUtils.cs", label="var writer = new System.IO.StringWriter()", span="853-853"];
m1_401 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializeWrappingErrorsAndErrorHandling()", file="EnumUtils.cs", label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializeWrappingErrorsAndErrorHandling()", span="837-837"];
m1_123 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.MultipleRequiredPropertyErrors()", file="EnumUtils.cs", label="JsonSerializer serializer = new JsonSerializer()", span="418-418"];
m1_120 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.MultipleRequiredPropertyErrors()", file="EnumUtils.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.MultipleRequiredPropertyErrors()", span="414-414"];
m1_224 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContent()", file="EnumUtils.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContent()", span="570-570"];
m1_225 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContent()", file="EnumUtils.cs", label="IList<string> errors = new List<string>()", span="572-572"];
m1_226 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContent()", file="EnumUtils.cs", label="string input = ''{\''events\'':[{\''code\'':64411},{\''code\'':64411,\''prio''", span="574-574"];
m1_230 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContent()", file="EnumUtils.cs", label="jsonSerializer.Error += (sender, e) =>\r\n                {\r\n                    errors.Add(e.ErrorContext.Error.Message);\r\n                    e.ErrorContext.Handled = true;\r\n                }", span="584-588"];
m1_235 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContent()", file="EnumUtils.cs", label="Assert.AreEqual(3, errors.Count)", span="597-597"];
m1_236 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContent()", file="EnumUtils.cs", label="Assert.AreEqual(@''Unterminated string. Expected delimiter: ''''. Path 'events[1].code', line 1, position 45.'', errors[0])", span="598-598"];
m1_237 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContent()", file="EnumUtils.cs", label="Assert.AreEqual(@''Unexpected end when deserializing array. Path 'events[1].code', line 1, position 45.'', errors[1])", span="599-599"];
m1_238 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContent()", file="EnumUtils.cs", label="Assert.AreEqual(@''Unexpected end when deserializing object. Path 'events[1].code', line 1, position 45.'', errors[2])", span="600-600"];
m1_227 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContent()", file="EnumUtils.cs", label="int maxDepth = 256", span="576-576"];
m1_228 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContent()", file="EnumUtils.cs", label="var jsonTextReader = new JsonTextReader(new StringReader(input)) { MaxDepth = maxDepth }", span="577-577"];
m1_229 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContent()", file="EnumUtils.cs", label="JsonSerializer jsonSerializer = JsonSerializer.Create(new JsonSerializerSettings\r\n                {\r\n                    MaxDepth = maxDepth,\r\n                    MetadataPropertyHandling = MetadataPropertyHandling.Default\r\n                })", span="579-583"];
m1_231 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContent()", file="EnumUtils.cs", label="LogMessage logMessage = jsonSerializer.Deserialize<LogMessage>(jsonTextReader)", span="590-590"];
m1_232 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContent()", file="EnumUtils.cs", label="Assert.IsNotNull(logMessage.Events)", span="592-592"];
m1_233 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContent()", file="EnumUtils.cs", label="Assert.AreEqual(1, logMessage.Events.Count)", span="593-593"];
m1_234 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContent()", file="EnumUtils.cs", label="Assert.AreEqual(''64411'', logMessage.Events[0].Code)", span="594-594"];
m1_239 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContent()", file="EnumUtils.cs", label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContent()", span="570-570"];
m1_73 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNames(System.Type)", file="EnumUtils.cs", label="Entry Newtonsoft.Json.Utilities.EnumUtils.GetNames(System.Type)", span="158-158"];
m1_165 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingAndAvoidingRecursiveDepthError()", file="EnumUtils.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingAndAvoidingRecursiveDepthError()", span="475-475"];
m1_166 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingAndAvoidingRecursiveDepthError()", file="EnumUtils.cs", label="string json = ''{'A':{'A':{'A':{'A':{'A':{}}}}}}''", span="477-477"];
m1_167 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingAndAvoidingRecursiveDepthError()", file="EnumUtils.cs", label="JsonSerializer serializer = new JsonSerializer() { }", span="478-478"];
m1_170 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingAndAvoidingRecursiveDepthError()", file="EnumUtils.cs", label="serializer.Deserialize<Nest>(new JsonTextReader(new StringReader(json)) { MaxDepth = 3 })", span="486-486"];
m1_168 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingAndAvoidingRecursiveDepthError()", file="EnumUtils.cs", label="IList<string> errors = new List<string>()", span="479-479"];
m1_169 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingAndAvoidingRecursiveDepthError()", file="EnumUtils.cs", label="serializer.Error += (sender, e) =>\r\n            {\r\n                e.ErrorContext.Handled = true;\r\n                errors.Add(e.ErrorContext.Path);\r\n            }", span="480-484"];
m1_171 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingAndAvoidingRecursiveDepthError()", file="EnumUtils.cs", label="Assert.AreEqual(1, errors.Count)", span="488-488"];
m1_172 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingAndAvoidingRecursiveDepthError()", file="EnumUtils.cs", label="Assert.AreEqual(''A.A.A'', errors[0])", span="489-489"];
m1_173 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingAndAvoidingRecursiveDepthError()", file="EnumUtils.cs", label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingAndAvoidingRecursiveDepthError()", span="475-475"];
m1_408 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", file="EnumUtils.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", span="831-831"];
m1_122 [cluster="string.Split(params char[])", file="EnumUtils.cs", label="Entry string.Split(params char[])", span="0-0"];
m1_126 [cluster="System.Enum.Parse(System.Type, string, bool)", file="EnumUtils.cs", label="Entry System.Enum.Parse(System.Type, string, bool)", span="0-0"];
m1_125 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.MultipleRequiredPropertyErrors()", file="EnumUtils.cs", label="serializer.Error += delegate(object sender, ErrorEventArgs args)\r\n            {\r\n                errors.Add(args.ErrorContext.Path + '' - '' + args.ErrorContext.Member + '' - '' + args.ErrorContext.Error.Message);\r\n                args.ErrorContext.Handled = true;\r\n            }", span="420-424"];
m1_127 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ToEnumName(System.Type, string, bool)", file="EnumUtils.cs", label="Entry Newtonsoft.Json.Utilities.EnumUtils.ToEnumName(System.Type, string, bool)", span="203-203"];
m1_128 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ToEnumName(System.Type, string, bool)", color=green, community=0, file="EnumUtils.cs", label="2: BidirectionalDictionary<string, string> map = EnumMemberNamesPerType.Get(enumType)", span="205-205"];
m1_129 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ToEnumName(System.Type, string, bool)", color=green, community=0, file="EnumUtils.cs", label="2: string[] names = enumText.Split(',')", span="207-207"];
m1_124 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ResolvedEnumName(Newtonsoft.Json.Utilities.BidirectionalDictionary<string, string>, string)", file="EnumUtils.cs", label="Entry Newtonsoft.Json.Utilities.EnumUtils.ResolvedEnumName(Newtonsoft.Json.Utilities.BidirectionalDictionary<string, string>, string)", span="227-227"];
m1_130 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ToEnumName(System.Type, string, bool)", color=green, community=0, file="EnumUtils.cs", label="0: int i = 0", span="208-208"];
m1_91 [cluster="lambda expression", color=green, community=0, file="EnumUtils.cs", label="0: f.IsLiteral", span="147-147"];
m1_132 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ToEnumName(System.Type, string, bool)", color=green, community=0, file="EnumUtils.cs", label="2: string name = names[i].Trim()", span="210-210"];
m1_376 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SomethingElse.SomethingElseConverter.CanConvert(System.Type)", file="EnumUtils.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SomethingElse.SomethingElseConverter.CanConvert(System.Type)", span="807-807"];
m1_377 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SomethingElse.SomethingElseConverter.CanConvert(System.Type)", file="EnumUtils.cs", label="return true;", span="809-809"];
m1_378 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SomethingElse.SomethingElseConverter.CanConvert(System.Type)", file="EnumUtils.cs", label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SomethingElse.SomethingElseConverter.CanConvert(System.Type)", span="807-807"];
m1_31 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetFlagsValues<T>(T)", file="EnumUtils.cs", label="IList<EnumValue<ulong>> enumNameValues = GetNamesAndValues<T>()", span="82-82"];
m1_42 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializingErrorInChildObject()", file="EnumUtils.cs", label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializingErrorInChildObject()", span="209-209"];
m1_16 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorInChildObject()", file="EnumUtils.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorInChildObject()", span="83-83"];
m1_293 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="EnumUtils.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="606-606"];
m1_13 [cluster="lambda expression", file="EnumUtils.cs", label="Entry lambda expression", span="79-79"];
m1_104 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeNestedUnhandled()", file="EnumUtils.cs", label="Exception e = null", span="389-389"];
m1_105 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeNestedUnhandled()", color=green, community=0, file="EnumUtils.cs", label="0: JsonSerializer serializer = new JsonSerializer()", span="392-392"];
m1_106 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeNestedUnhandled()", color=green, community=0, file="EnumUtils.cs", label="0: serializer.Error += delegate(object sender, ErrorEventArgs args)\r\n                {\r\n                    // only log an error once\r\n                    if (args.CurrentObject == args.ErrorContext.OriginalObject)\r\n                        errors.Add(args.ErrorContext.Path + '' - '' + args.ErrorContext.Member + '' - '' + args.ErrorContext.Error.Message);\r\n                }", span="393-398"];
m1_107 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeNestedUnhandled()", color=green, community=0, file="EnumUtils.cs", label="2: serializer.Deserialize(new StringReader(json), typeof(List<List<DateTime>>))", span="400-400"];
m1_108 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeNestedUnhandled()", color=green, community=0, file="EnumUtils.cs", label="0: Exception", span="402-402"];
m1_109 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeNestedUnhandled()", color=green, community=0, file="EnumUtils.cs", label="0: e = ex", span="404-404"];
m1_114 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", color=green, community=0, file="EnumUtils.cs", label="3: Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="445-445"];
m1_117 [cluster="lambda expression", color=green, community=0, file="EnumUtils.cs", label="0: args.CurrentObject == args.ErrorContext.OriginalObject", span="396-396"];
m1_110 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeNestedUnhandled()", color=green, community=0, file="EnumUtils.cs", label="2: Assert.AreEqual(@''Could not convert string to DateTime: kjhkjhkjhkjh. Path '[0][0]', line 1, position 16.'', e.Message)", span="407-407"];
m1_111 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeNestedUnhandled()", color=green, community=0, file="EnumUtils.cs", label="2: Assert.AreEqual(1, errors.Count)", span="409-409"];
m1_112 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeNestedUnhandled()", color=green, community=0, file="EnumUtils.cs", label="2: Assert.AreEqual(@''[0][0] - 0 - Could not convert string to DateTime: kjhkjhkjhkjh. Path '[0][0]', line 1, position 16.'', errors[0])", span="410-410"];
m1_113 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeNestedUnhandled()", color=green, community=0, file="EnumUtils.cs", label="0: Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeNestedUnhandled()", span="383-383"];
m1_116 [cluster="lambda expression", color=green, community=0, file="EnumUtils.cs", label="2: Entry lambda expression", span="393-398"];
m1_118 [cluster="lambda expression", color=green, community=0, file="EnumUtils.cs", label="0: errors.Add(args.ErrorContext.Path + '' - '' + args.ErrorContext.Member + '' - '' + args.ErrorContext.Error.Message)", span="397-397"];
m1_119 [cluster="lambda expression", file="EnumUtils.cs", label="Exit lambda expression", span="393-398"];
m1_371 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="EnumUtils.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="874-874"];
m1_47 [cluster="System.Collections.Generic.List<T>.List()", file="EnumUtils.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m1_48 [cluster="System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", file="EnumUtils.cs", label="Entry System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", span="0-0"];
m1_49 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="EnumUtils.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m1_50 [cluster="lambda expression", file="EnumUtils.cs", label="Entry lambda expression", span="91-91"];
m1_51 [cluster="lambda expression", file="EnumUtils.cs", label="v.Value == 0", span="91-91"];
m1_41 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializingErrorInChildObject()", file="EnumUtils.cs", label="StringAssert.AreEqual(@''[\r\n  {\r\n    ''''Member'''': ''''Value1'''',\r\n    ''''ThrowError'''': ''''Handle this!'''',\r\n    ''''Member2'''': ''''Member1''''\r\n  },\r\n  {\r\n    ''''Member'''': ''''Value2''''\r\n  },\r\n  {\r\n    ''''Member'''': ''''Value3'''',\r\n    ''''ThrowError'''': ''''Handle that!'''',\r\n    ''''Member2'''': ''''Member3''''\r\n  }\r\n]'', json)", span="234-248"];
m1_17 [cluster="Unk.SingleOrDefault", file="EnumUtils.cs", label="Entry Unk.SingleOrDefault", span=""];
m1_19 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="EnumUtils.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m1_22 [cluster="lambda expression", file="EnumUtils.cs", label="Entry lambda expression", span="56-56"];
m1_23 [cluster="lambda expression", color=green, community=0, file="EnumUtils.cs", label="0: a.Value", span="56-56"];
m1_89 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorInDateTimeCollectionWithAttributeWithEventNotCalled()", file="EnumUtils.cs", label="Assert.AreEqual(false, eventErrorHandlerCalled)", span="359-359"];
m1_78 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetValues(System.Type)", file="EnumUtils.cs", label="throw new ArgumentException(''Type ''' + enumType.Name + ''' is not an enum.'');", span="143-143"];
m1_82 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetValues(System.Type)", file="EnumUtils.cs", label="object value = field.GetValue(enumType)", span="151-151"];
m1_83 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetValues(System.Type)", file="EnumUtils.cs", label="values.Add(value)", span="152-152"];
m1_84 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetValues(System.Type)", file="EnumUtils.cs", label="return values;", span="155-155"];
m1_85 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetValues(System.Type)", file="EnumUtils.cs", label="Exit Newtonsoft.Json.Utilities.EnumUtils.GetValues(System.Type)", span="140-140"];
m1_86 [cluster="System.Type.IsEnum()", file="EnumUtils.cs", label="Entry System.Type.IsEnum()", span="161-161"];
m1_88 [cluster="System.Reflection.FieldInfo.GetValue(object)", file="EnumUtils.cs", label="Entry System.Reflection.FieldInfo.GetValue(object)", span="0-0"];
m1_90 [cluster="lambda expression", file="EnumUtils.cs", label="Entry lambda expression", span="147-147"];
m1_143 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.HandlingArrayErrors()", file="EnumUtils.cs", label="Assert.AreEqual(2, errors.Count)", span="448-448"];
m1_386 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeWrappingErrorsAndErrorHandling()", file="EnumUtils.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeWrappingErrorsAndErrorHandling()", span="826-826"];
m1_387 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeWrappingErrorsAndErrorHandling()", file="EnumUtils.cs", label="var serialiser = JsonSerializer.Create(new JsonSerializerSettings() { })", span="828-828"];
m1_388 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeWrappingErrorsAndErrorHandling()", file="EnumUtils.cs", label="string foo = ''{ something: { rootSomethingElse { somethingElse: 0 } } }''", span="830-830"];
m1_390 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeWrappingErrorsAndErrorHandling()", file="EnumUtils.cs", label="ExceptionAssert.Throws<Exception>(() => { serialiser.Deserialize(reader, typeof(Something)); }, ''An error occurred.'')", span="833-833"];
m1_389 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeWrappingErrorsAndErrorHandling()", file="EnumUtils.cs", label="var reader = new System.IO.StringReader(foo)", span="831-831"];
m1_391 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeWrappingErrorsAndErrorHandling()", file="EnumUtils.cs", label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeWrappingErrorsAndErrorHandling()", span="826-826"];
m1_101 [cluster="lambda expression", file="EnumUtils.cs", label="Entry lambda expression", span="165-165"];
m1_102 [cluster="lambda expression", color=green, community=0, file="EnumUtils.cs", label="2: f.IsLiteral", span="165-165"];
m1_103 [cluster="lambda expression", file="EnumUtils.cs", label="Exit lambda expression", span="165-165"];
m1_240 [cluster="Unk.IsNotNull", file="EnumUtils.cs", label="Entry Unk.IsNotNull", span=""];
m1_364 [cluster="System.Exception.Exception(string, System.Exception)", file="EnumUtils.cs", label="Entry System.Exception.Exception(string, System.Exception)", span="0-0"];
m1_178 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="EnumUtils.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m1_382 [cluster="System.NotImplementedException.NotImplementedException()", file="EnumUtils.cs", label="Entry System.NotImplementedException.NotImplementedException()", span="0-0"];
m1_55 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorHandlingUsingEvent()", file="EnumUtils.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorHandlingUsingEvent()", span="272-272"];
m1_63 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorHandlingUsingEvent()", file="EnumUtils.cs", label="Assert.AreEqual(3, errors.Count)", span="310-310"];
m1_59 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorHandlingUsingEvent()", file="EnumUtils.cs", label="Assert.AreEqual(3, c.Count)", span="305-305"];
m1_60 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorHandlingUsingEvent()", file="EnumUtils.cs", label="Assert.AreEqual(new DateTime(2009, 9, 9, 0, 0, 0, DateTimeKind.Utc), c[0])", span="306-306"];
m1_62 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorHandlingUsingEvent()", file="EnumUtils.cs", label="Assert.AreEqual(new DateTime(2000, 12, 1, 0, 0, 0, DateTimeKind.Utc), c[2])", span="308-308"];
m1_67 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorHandlingUsingEvent()", file="EnumUtils.cs", label="Assert.AreEqual(''[4] - 4 - Cannot convert null value to System.DateTime. Path '[4]', line 8, position 13.'', errors[2])", span="326-326"];
m1_64 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorHandlingUsingEvent()", file="EnumUtils.cs", label="var possibleErrs = new [] {\r\n#if !(NET20 || NET35)\r\n                ''[1] - 1 - The string was not recognized as a valid DateTime. There is an unknown word starting at index 0.'',\r\n                ''[1] - 1 - String was not recognized as a valid DateTime.''\r\n#else\r\n                // handle typo fix in later versions of .NET\r\n                ''[1] - 1 - The string was not recognized as a valid DateTime. There is an unknown word starting at index 0.'',\r\n                ''[1] - 1 - The string was not recognized as a valid DateTime. There is a unknown word starting at index 0.''\r\n#endif\r\n            }", span="311-320"];
m1_68 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorHandlingUsingEvent()", file="EnumUtils.cs", label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorHandlingUsingEvent()", span="272-272"];
m1_58 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorHandlingUsingEvent()", file="EnumUtils.cs", label="var c = serializer.Deserialize<List<DateTime>>(new JsonTextReader(new StringReader(@''[\r\n        ''''2009-09-09T00:00:00Z'''',\r\n        ''''I am not a date and will error!'''',\r\n        [\r\n          1\r\n        ],\r\n        ''''1977-02-20T00:00:00Z'''',\r\n        null,\r\n        ''''2000-12-01T00:00:00Z''''\r\n      ]'')))", span="285-294"];
m1_66 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorHandlingUsingEvent()", file="EnumUtils.cs", label="Assert.AreEqual(''[2] - 2 - Unexpected token parsing date. Expected String, got StartArray. Path '[2]', line 4, position 10.'', errors[1])", span="325-325"];
m1_56 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorHandlingUsingEvent()", file="EnumUtils.cs", label="List<string> errors = new List<string>()", span="274-274"];
m1_61 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorHandlingUsingEvent()", file="EnumUtils.cs", label="Assert.AreEqual(new DateTime(1977, 2, 20, 0, 0, 0, DateTimeKind.Utc), c[1])", span="307-307"];
m1_65 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorHandlingUsingEvent()", file="EnumUtils.cs", label="Assert.IsTrue(possibleErrs.Any (m => m == errors[0]), \r\n                ''Expected One of: '' + string.Join (Environment.NewLine, possibleErrs) + Environment.NewLine + ''But was: '' + errors[0])", span="322-323"];
m1_57 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorHandlingUsingEvent()", file="EnumUtils.cs", label="JsonSerializer serializer = JsonSerializer.Create(new JsonSerializerSettings\r\n            {\r\n                Error = delegate(object sender, ErrorEventArgs args)\r\n                {\r\n                    errors.Add(args.ErrorContext.Path + '' - '' + args.ErrorContext.Member + '' - '' + args.ErrorContext.Error.Message);\r\n                    args.ErrorContext.Handled = true;\r\n                },\r\n                Converters = { new IsoDateTimeConverter() }\r\n            })", span="276-284"];
m1_69 [cluster="System.Collections.Generic.List<T>.List()", file="EnumUtils.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m1_75 [cluster="lambda expression", file="EnumUtils.cs", label="errors.Add(args.ErrorContext.Path + '' - '' + args.ErrorContext.Member + '' - '' + args.ErrorContext.Error.Message)", span="280-280"];
m1_32 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetFlagsValues<T>(T)", file="EnumUtils.cs", label="IList<T> selectedFlagsValues = new List<T>()", span="83-83"];
m1_15 [cluster="lambda expression", file="EnumUtils.cs", label="Exit lambda expression", span="79-79"];
m1_34 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetFlagsValues<T>(T)", file="EnumUtils.cs", label="(num & enumNameValue.Value) == enumNameValue.Value && enumNameValue.Value != 0", span="87-87"];
m1_35 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetFlagsValues<T>(T)", file="EnumUtils.cs", label="selectedFlagsValues.Add((T)Convert.ChangeType(enumNameValue.Value, underlyingType, CultureInfo.CurrentCulture))", span="88-88"];
m1_33 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetFlagsValues<T>(T)", file="EnumUtils.cs", label=enumNameValues, span="85-85"];
m1_36 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetFlagsValues<T>(T)", file="EnumUtils.cs", label="selectedFlagsValues.Count == 0 && enumNameValues.SingleOrDefault(v => v.Value == 0) != null", span="91-91"];
m1_80 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetValues(System.Type)", color=green, community=0, file="EnumUtils.cs", label="2: var fields = enumType.GetFields().Where(f => f.IsLiteral)", span="147-147"];
m1_79 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetValues(System.Type)", file="EnumUtils.cs", label="List<object> values = new List<object>()", span="145-145"];
m1_77 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetValues(System.Type)", file="EnumUtils.cs", label="!enumType.IsEnum()", span="142-142"];
m1_81 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetValues(System.Type)", file="EnumUtils.cs", label=fields, span="149-149"];
m1_92 [cluster="lambda expression", file="EnumUtils.cs", label="Exit lambda expression", span="147-147"];
m1_93 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNames(System.Type)", file="EnumUtils.cs", label="!enumType.IsEnum()", span="160-160"];
m1_94 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetNames(System.Type)", file="EnumUtils.cs", label="throw new ArgumentException(''Type ''' + enumType.Name + ''' is not an enum.'');", span="161-161"];
m1_134 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ToEnumName(System.Type, string, bool)", color=green, community=0, file="EnumUtils.cs", label="0: map.TryGetByFirst(name, out resolvedEnumName)", span="213-213"];
m1_135 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ToEnumName(System.Type, string, bool)", color=green, community=0, file="EnumUtils.cs", label="2: resolvedEnumName = resolvedEnumName ?? name", span="214-214"];
m1_133 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ToEnumName(System.Type, string, bool)", color=green, community=0, file="EnumUtils.cs", label="2: string resolvedEnumName", span="212-212"];
m1_136 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ToEnumName(System.Type, string, bool)", color=green, community=0, file="EnumUtils.cs", label="2: camelCaseText", span="216-216"];
m1_148 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ResolvedEnumName(Newtonsoft.Json.Utilities.BidirectionalDictionary<string, string>, string)", color=green, community=0, file="EnumUtils.cs", label="2: return resolvedEnumName;", span="232-232"];
m1_149 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ResolvedEnumName(Newtonsoft.Json.Utilities.BidirectionalDictionary<string, string>, string)", file="EnumUtils.cs", label="Exit Newtonsoft.Json.Utilities.EnumUtils.ResolvedEnumName(Newtonsoft.Json.Utilities.BidirectionalDictionary<string, string>, string)", span="227-227"];
m1_147 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ResolvedEnumName(Newtonsoft.Json.Utilities.BidirectionalDictionary<string, string>, string)", color=green, community=0, file="EnumUtils.cs", label="4: resolvedEnumName = resolvedEnumName ?? enumText", span="231-231"];
m1_150 [cluster="lambda expression", file="EnumUtils.cs", label="Exit lambda expression", span="440-444"];
m1_162 [cluster="lambda expression", file="EnumUtils.cs", label="errors.Add(args.ErrorContext.Path + '' - '' + args.ErrorContext.Member + '' - '' + args.ErrorContext.Error.Message)", span="463-463"];
m1_163 [cluster="lambda expression", file="EnumUtils.cs", label="args.ErrorContext.Handled = true", span="464-464"];
m1_161 [cluster="lambda expression", file="EnumUtils.cs", label="Entry lambda expression", span="461-465"];
m1_164 [cluster="lambda expression", file="EnumUtils.cs", label="Exit lambda expression", span="461-465"];
m1_176 [cluster="lambda expression", file="EnumUtils.cs", label="errors.Add(e.ErrorContext.Path)", span="483-483"];
m1_175 [cluster="lambda expression", file="EnumUtils.cs", label="e.ErrorContext.Handled = true", span="482-482"];
m1_174 [cluster="lambda expression", file="EnumUtils.cs", label="Entry lambda expression", span="480-484"];
m1_177 [cluster="lambda expression", file="EnumUtils.cs", label="Exit lambda expression", span="480-484"];
m1_193 [cluster="lambda expression", file="EnumUtils.cs", label="errors.Add(e.ErrorContext.Error.Message)", span="505-505"];
m1_194 [cluster="lambda expression", file="EnumUtils.cs", label="e.ErrorContext.Handled = true", span="506-506"];
m1_192 [cluster="lambda expression", file="EnumUtils.cs", label="Entry lambda expression", span="503-507"];
m1_195 [cluster="lambda expression", file="EnumUtils.cs", label="Exit lambda expression", span="503-507"];
m1_207 [cluster="lambda expression", file="EnumUtils.cs", label="errors.Add(arg.ErrorContext.Error.Message)", span="530-530"];
m1_208 [cluster="lambda expression", file="EnumUtils.cs", label="arg.ErrorContext.Handled = true", span="531-531"];
m1_206 [cluster="lambda expression", file="EnumUtils.cs", label="Entry lambda expression", span="528-532"];
m1_209 [cluster="lambda expression", file="EnumUtils.cs", label="Exit lambda expression", span="528-532"];
m1_221 [cluster="lambda expression", file="EnumUtils.cs", label="errors.Add(arg.ErrorContext.Error.Message)", span="555-555"];
m1_222 [cluster="lambda expression", file="EnumUtils.cs", label="arg.ErrorContext.Handled = true", span="556-556"];
m1_220 [cluster="lambda expression", file="EnumUtils.cs", label="Entry lambda expression", span="553-557"];
m1_223 [cluster="lambda expression", file="EnumUtils.cs", label="Exit lambda expression", span="553-557"];
m1_242 [cluster="lambda expression", file="EnumUtils.cs", label="errors.Add(e.ErrorContext.Error.Message)", span="586-586"];
m1_243 [cluster="lambda expression", file="EnumUtils.cs", label="e.ErrorContext.Handled = true", span="587-587"];
m1_241 [cluster="lambda expression", file="EnumUtils.cs", label="Entry lambda expression", span="584-588"];
m1_244 [cluster="lambda expression", file="EnumUtils.cs", label="Exit lambda expression", span="584-588"];
m1_262 [cluster="lambda expression", file="EnumUtils.cs", label="errors.Add(e.ErrorContext.Error.Message)", span="616-616"];
m1_263 [cluster="lambda expression", file="EnumUtils.cs", label="e.ErrorContext.Handled = true", span="617-617"];
m1_261 [cluster="lambda expression", file="EnumUtils.cs", label="Entry lambda expression", span="614-618"];
m1_264 [cluster="lambda expression", file="EnumUtils.cs", label="Exit lambda expression", span="614-618"];
m1_279 [cluster="lambda expression", file="EnumUtils.cs", label="errors.Add(e.ErrorContext.Error.Message)", span="650-650"];
m1_280 [cluster="lambda expression", file="EnumUtils.cs", label="e.ErrorContext.Handled = true", span="651-651"];
m1_278 [cluster="lambda expression", file="EnumUtils.cs", label="Entry lambda expression", span="648-652"];
m1_281 [cluster="lambda expression", file="EnumUtils.cs", label="Exit lambda expression", span="648-652"];
m1_295 [cluster="lambda expression", file="EnumUtils.cs", label="args.ErrorContext.Handled = true", span="673-673"];
m1_297 [cluster="lambda expression", file="EnumUtils.cs", label="Entry lambda expression", span="682-682"];
m1_300 [cluster="lambda expression", file="EnumUtils.cs", label="Entry lambda expression", span="682-682"];
m1_303 [cluster="lambda expression", file="EnumUtils.cs", label="Entry lambda expression", span="682-682"];
m1_294 [cluster="lambda expression", file="EnumUtils.cs", label="Entry lambda expression", span="673-673"];
m1_296 [cluster="lambda expression", file="EnumUtils.cs", label="Exit lambda expression", span="673-673"];
m1_298 [cluster="lambda expression", file="EnumUtils.cs", label="person.FirstName", span="682-682"];
m1_299 [cluster="lambda expression", file="EnumUtils.cs", label="Exit lambda expression", span="682-682"];
m1_301 [cluster="lambda expression", file="EnumUtils.cs", label="@group.Key", span="682-682"];
m1_302 [cluster="lambda expression", file="EnumUtils.cs", label="Exit lambda expression", span="682-682"];
m1_304 [cluster="lambda expression", file="EnumUtils.cs", label="@group.Cast<IErrorPerson2>()", span="682-682"];
m1_305 [cluster="lambda expression", file="EnumUtils.cs", label="Exit lambda expression", span="682-682"];
m1_316 [cluster="lambda expression", file="EnumUtils.cs", label="args.ErrorContext.Handled = true", span="691-691"];
m1_318 [cluster="lambda expression", file="EnumUtils.cs", label="Entry lambda expression", span="701-701"];
m1_321 [cluster="lambda expression", file="EnumUtils.cs", label="Entry lambda expression", span="701-701"];
m1_324 [cluster="lambda expression", file="EnumUtils.cs", label="Entry lambda expression", span="701-701"];
m1_315 [cluster="lambda expression", file="EnumUtils.cs", label="Entry lambda expression", span="691-691"];
m1_317 [cluster="lambda expression", file="EnumUtils.cs", label="Exit lambda expression", span="691-691"];
m1_319 [cluster="lambda expression", file="EnumUtils.cs", label="person.FirstName", span="701-701"];
m1_320 [cluster="lambda expression", file="EnumUtils.cs", label="Exit lambda expression", span="701-701"];
m1_322 [cluster="lambda expression", file="EnumUtils.cs", label="@group.Key", span="701-701"];
m1_323 [cluster="lambda expression", file="EnumUtils.cs", label="Exit lambda expression", span="701-701"];
m1_325 [cluster="lambda expression", file="EnumUtils.cs", label="@group.Cast<IErrorPerson2>()", span="701-701"];
m1_326 [cluster="lambda expression", file="EnumUtils.cs", label="Exit lambda expression", span="701-701"];
m1_341 [cluster="lambda expression", file="EnumUtils.cs", label="args.ErrorContext.Handled = true", span="715-715"];
m1_340 [cluster="lambda expression", file="EnumUtils.cs", label="Entry lambda expression", span="715-715"];
m1_342 [cluster="lambda expression", file="EnumUtils.cs", label="Exit lambda expression", span="715-715"];
m1_353 [cluster="lambda expression", file="EnumUtils.cs", label="ErrorTestObject obj = s.Deserialize<ErrorTestObject>(jReader)", span="730-730"];
m1_352 [cluster="lambda expression", file="EnumUtils.cs", label="Entry lambda expression", span="730-730"];
m1_354 [cluster="lambda expression", file="EnumUtils.cs", label="Exit lambda expression", span="730-730"];
m1_393 [cluster="lambda expression", file="EnumUtils.cs", label="serialiser.Deserialize(reader, typeof(Something))", span="833-833"];
m1_392 [cluster="lambda expression", file="EnumUtils.cs", label="Entry lambda expression", span="833-833"];
m1_394 [cluster="lambda expression", file="EnumUtils.cs", label="Exit lambda expression", span="833-833"];
m1_406 [cluster="lambda expression", file="EnumUtils.cs", label="serialiser.Serialize(writer, r)", span="855-855"];
m1_405 [cluster="lambda expression", file="EnumUtils.cs", label="Entry lambda expression", span="855-855"];
m1_407 [cluster="lambda expression", file="EnumUtils.cs", label="Exit lambda expression", span="855-855"];
m1_414 [cluster="lambda expression", file="EnumUtils.cs", label="e.ErrorContext.Handled = true", span="863-863"];
m1_413 [cluster="lambda expression", file="EnumUtils.cs", label="Entry lambda expression", span="863-863"];
m1_415 [cluster="lambda expression", file="EnumUtils.cs", label="Exit lambda expression", span="863-863"];
m1_421 [cluster="lambda expression", file="EnumUtils.cs", label="e.ErrorContext.Handled = true", span="874-874"];
m1_420 [cluster="lambda expression", file="EnumUtils.cs", label="Entry lambda expression", span="874-874"];
m1_422 [cluster="lambda expression", file="EnumUtils.cs", label="Exit lambda expression", span="874-874"];
m1_37 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetFlagsValues<T>(T)", file="EnumUtils.cs", label="selectedFlagsValues.Add(default(T))", span="92-92"];
m1_441 [cluster="System.IO.StringReader.Read(char[], int, int)", file="EnumUtils.cs", label="Entry System.IO.StringReader.Read(char[], int, int)", span="0-0"];
m1_72 [cluster="System.IO.StringReader.StringReader(string)", file="EnumUtils.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m1_403 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.RootThing.RootThing()", file="EnumUtils.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.RootThing.RootThing()", span="733-733"];
m1_245 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDictionary()", file="EnumUtils.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDictionary()", span="604-604"];
m1_246 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDictionary()", file="EnumUtils.cs", label="IList<string> errors = new List<string>()", span="606-606"];
m1_247 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDictionary()", file="EnumUtils.cs", label="string input = ''{\''events\'':{\''code\'':64411},\''events2\'':{\''code\'':64412,''", span="608-608"];
m1_251 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDictionary()", file="EnumUtils.cs", label="jsonSerializer.Error += (sender, e) =>\r\n                {\r\n                    errors.Add(e.ErrorContext.Error.Message);\r\n                    e.ErrorContext.Handled = true;\r\n                }", span="614-618"];
m1_257 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDictionary()", file="EnumUtils.cs", label="Assert.AreEqual(2, errors.Count)", span="628-628"];
m1_258 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDictionary()", file="EnumUtils.cs", label="Assert.AreEqual(@''Unexpected end when deserializing object. Path 'events2.code', line 1, position 49.'', errors[0])", span="629-629"];
m1_259 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDictionary()", file="EnumUtils.cs", label="Assert.AreEqual(@''Unexpected end when deserializing object. Path 'events2.code', line 1, position 49.'', errors[1])", span="630-630"];
m1_248 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDictionary()", file="EnumUtils.cs", label="int maxDepth = 256", span="610-610"];
m1_249 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDictionary()", file="EnumUtils.cs", label="var jsonTextReader = new JsonTextReader(new StringReader(input)) { MaxDepth = maxDepth }", span="611-611"];
m1_250 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDictionary()", file="EnumUtils.cs", label="JsonSerializer jsonSerializer = JsonSerializer.Create(new JsonSerializerSettings { MaxDepth = maxDepth, MetadataPropertyHandling = MetadataPropertyHandling.Default })", span="613-613"];
m1_252 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDictionary()", file="EnumUtils.cs", label="IDictionary<string, LogEvent> logEvents = jsonSerializer.Deserialize<IDictionary<string, LogEvent>>(jsonTextReader)", span="620-620"];
m1_253 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDictionary()", file="EnumUtils.cs", label="Assert.IsNotNull(logEvents)", span="622-622"];
m1_254 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDictionary()", file="EnumUtils.cs", label="Assert.AreEqual(2, logEvents.Count)", span="623-623"];
m1_255 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDictionary()", file="EnumUtils.cs", label="Assert.AreEqual(''64411'', logEvents[''events''].Code)", span="624-624"];
m1_256 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDictionary()", file="EnumUtils.cs", label="Assert.AreEqual(''64412'', logEvents[''events2''].Code)", span="625-625"];
m1_260 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDictionary()", file="EnumUtils.cs", label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDictionary()", span="604-604"];
m1_38 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializingErrorInChildObject()", file="EnumUtils.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializingErrorInChildObject()", span="209-209"];
m1_39 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializingErrorInChildObject()", file="EnumUtils.cs", label="ListErrorObjectCollection c = new ListErrorObjectCollection\r\n            {\r\n                new ListErrorObject\r\n                {\r\n                    Member = ''Value1'',\r\n                    ThrowError = ''Handle this!'',\r\n                    Member2 = ''Member1''\r\n                },\r\n                new ListErrorObject\r\n                {\r\n                    Member = ''Value2'',\r\n                    Member2 = ''Member2''\r\n                },\r\n                new ListErrorObject\r\n                {\r\n                    Member = ''Value3'',\r\n                    ThrowError = ''Handle that!'',\r\n                    Member2 = ''Member3''\r\n                }\r\n            }", span="211-230"];
m1_179 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.InfiniteErrorHandlingLoopFromInputError()", file="EnumUtils.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.InfiniteErrorHandlingLoopFromInputError()", span="498-498"];
m1_180 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.InfiniteErrorHandlingLoopFromInputError()", file="EnumUtils.cs", label="IList<string> errors = new List<string>()", span="500-500"];
m1_181 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.InfiniteErrorHandlingLoopFromInputError()", file="EnumUtils.cs", label="JsonSerializer serializer = new JsonSerializer()", span="502-502"];
m1_182 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.InfiniteErrorHandlingLoopFromInputError()", file="EnumUtils.cs", label="serializer.Error += (sender, e) =>\r\n            {\r\n                errors.Add(e.ErrorContext.Error.Message);\r\n                e.ErrorContext.Handled = true;\r\n            }", span="503-507"];
m1_185 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.InfiniteErrorHandlingLoopFromInputError()", file="EnumUtils.cs", label="Assert.AreEqual(3, errors.Count)", span="512-512"];
m1_186 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.InfiniteErrorHandlingLoopFromInputError()", file="EnumUtils.cs", label="Assert.AreEqual(''too far'', errors[0])", span="513-513"];
m1_187 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.InfiniteErrorHandlingLoopFromInputError()", file="EnumUtils.cs", label="Assert.AreEqual(''too far'', errors[1])", span="514-514"];
m1_188 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.InfiniteErrorHandlingLoopFromInputError()", file="EnumUtils.cs", label="Assert.AreEqual(''Infinite loop detected from error handling. Path '[1023]', line 1, position 65536.'', errors[2])", span="515-515"];
m1_183 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.InfiniteErrorHandlingLoopFromInputError()", file="EnumUtils.cs", label="ErrorPerson[] result = serializer.Deserialize<ErrorPerson[]>(new JsonTextReader(new ThrowingReader()))", span="509-509"];
m1_184 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.InfiniteErrorHandlingLoopFromInputError()", file="EnumUtils.cs", label="Assert.IsNull(result)", span="511-511"];
m1_189 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.InfiniteErrorHandlingLoopFromInputError()", file="EnumUtils.cs", label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.InfiniteErrorHandlingLoopFromInputError()", span="498-498"];
m1_339 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="EnumUtils.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m1_375 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.RootSomethingElse.RootSomethingElse()", file="EnumUtils.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.RootSomethingElse.RootSomethingElse()", span="738-738"];
m1_404 [cluster="System.IO.StringWriter.StringWriter()", file="EnumUtils.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m1_290 [cluster="Newtonsoft.Json.Tests.Serialization.ErrorPerson2.ErrorPerson2()", file="EnumUtils.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ErrorPerson2.ErrorPerson2()", span="885-885"];
m1_138 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.HandlingArrayErrors()", color=green, community=0, file="EnumUtils.cs", label="2: string json = ''[\''a\'',\''b\'',\''45\'',34]''", span="435-435"];
m1_140 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.HandlingArrayErrors()", color=green, community=0, file="EnumUtils.cs", label="2: JsonSerializer serializer = new JsonSerializer()", span="439-439"];
m1_137 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.HandlingArrayErrors()", color=green, community=0, file="EnumUtils.cs", label="0: Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.HandlingArrayErrors()", span="433-433"];
m1_139 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.HandlingArrayErrors()", color=green, community=0, file="EnumUtils.cs", label="2: List<string> errors = new List<string>()", span="437-437"];
m1_141 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.HandlingArrayErrors()", color=green, community=0, file="EnumUtils.cs", label="2: serializer.Error += delegate(object sender, ErrorEventArgs args)\r\n            {\r\n                errors.Add(args.ErrorContext.Path + '' - '' + args.ErrorContext.Member + '' - '' + args.ErrorContext.Error.Message);\r\n                args.ErrorContext.Handled = true;\r\n            }", span="440-444"];
m1_142 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.HandlingArrayErrors()", file="EnumUtils.cs", label="serializer.Deserialize(new JsonTextReader(new StringReader(json)), typeof(int[]))", span="446-446"];
m1_145 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ResolvedEnumName(Newtonsoft.Json.Utilities.BidirectionalDictionary<string, string>, string)", color=green, community=0, file="EnumUtils.cs", label="1: string resolvedEnumName", span="229-229"];
m1_146 [cluster="Newtonsoft.Json.Utilities.EnumUtils.ResolvedEnumName(Newtonsoft.Json.Utilities.BidirectionalDictionary<string, string>, string)", color=green, community=0, file="EnumUtils.cs", label="0: map.TryGetBySecond(enumText, out resolvedEnumName)", span="230-230"];
m1_265 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDynamic()", file="EnumUtils.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDynamic()", span="635-635"];
m1_266 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDynamic()", file="EnumUtils.cs", label="IList<string> errors = new List<string>()", span="637-637"];
m1_267 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDynamic()", file="EnumUtils.cs", label="string json = @''{\r\n  ''''Explicit'''': true,\r\n  ''''Decimal'''': 99.9,\r\n  ''''Int'''': 1,\r\n  ''''ChildObject'''': {\r\n    ''''Integer'''': 123''", span="639-644"];
m1_268 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDynamic()", file="EnumUtils.cs", label="TestDynamicObject newDynamicObject = JsonConvert.DeserializeObject<TestDynamicObject>(json, new JsonSerializerSettings\r\n            {\r\n                Error = (sender, e) =>\r\n                {\r\n                    errors.Add(e.ErrorContext.Error.Message);\r\n                    e.ErrorContext.Handled = true;\r\n                },\r\n                MetadataPropertyHandling = MetadataPropertyHandling.Default\r\n            })", span="646-654"];
m1_274 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDynamic()", file="EnumUtils.cs", label="Assert.AreEqual(2, errors.Count)", span="663-663"];
m1_275 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDynamic()", file="EnumUtils.cs", label="Assert.AreEqual(@''Unexpected end when deserializing object. Path 'ChildObject.Integer', line 6, position 19.'', errors[0])", span="664-664"];
m1_276 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDynamic()", file="EnumUtils.cs", label="Assert.AreEqual(@''Unexpected end when deserializing object. Path 'ChildObject.Integer', line 6, position 19.'', errors[1])", span="665-665"];
m1_269 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDynamic()", file="EnumUtils.cs", label="Assert.AreEqual(true, newDynamicObject.Explicit)", span="655-655"];
m1_270 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDynamic()", file="EnumUtils.cs", label="dynamic d = newDynamicObject", span="657-657"];
m1_271 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDynamic()", file="EnumUtils.cs", label="Assert.AreEqual(99.9, d.Decimal)", span="659-659"];
m1_272 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDynamic()", file="EnumUtils.cs", label="Assert.AreEqual(1, d.Int)", span="660-660"];
m1_273 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDynamic()", file="EnumUtils.cs", label="Assert.AreEqual(123, d.ChildObject.Integer)", span="661-661"];
m1_277 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDynamic()", file="EnumUtils.cs", label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDynamic()", span="635-635"];
m1_307 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.WriteEndOnPropertyState2()", file="EnumUtils.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.WriteEndOnPropertyState2()", span="688-688"];
m1_308 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.WriteEndOnPropertyState2()", file="EnumUtils.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings()", span="690-690"];
m1_309 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.WriteEndOnPropertyState2()", file="EnumUtils.cs", label="settings.Error += (obj, args) => { args.ErrorContext.Handled = true; }", span="691-691"];
m1_312 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.WriteEndOnPropertyState2()", file="EnumUtils.cs", label="string output = JsonConvert.SerializeObject(dictionary, Formatting.None, settings)", span="702-702"];
m1_310 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.WriteEndOnPropertyState2()", file="EnumUtils.cs", label="var data = new List<ErrorPerson2>\r\n            {\r\n                new ErrorPerson2 { FirstName = ''Scott'', LastName = ''Hanselman'' },\r\n                new ErrorPerson2 { FirstName = ''Scott'', LastName = ''Hunter'' },\r\n                new ErrorPerson2 { FirstName = ''Scott'', LastName = ''Guthrie'' },\r\n                new ErrorPerson2 { FirstName = ''James'', LastName = ''Newton-King'' },\r\n            }", span="693-699"];
m1_311 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.WriteEndOnPropertyState2()", file="EnumUtils.cs", label="Dictionary<string, IEnumerable<IErrorPerson2>> dictionary = data.GroupBy(person => person.FirstName).ToDictionary(group => @group.Key, group => @group.Cast<IErrorPerson2>())", span="701-701"];
m1_313 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.WriteEndOnPropertyState2()", file="EnumUtils.cs", label="Assert.AreEqual(@''{''''Scott'''':[],''''James'''':[]}'', output)", span="704-704"];
m1_314 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.WriteEndOnPropertyState2()", file="EnumUtils.cs", label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.WriteEndOnPropertyState2()", span="688-688"];
m1_338 [cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="EnumUtils.cs", label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0"];
m1_409 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeRootConverter()", file="EnumUtils.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeRootConverter()", span="859-859"];
m1_410 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeRootConverter()", file="EnumUtils.cs", label="SomethingElse result = JsonConvert.DeserializeObject<SomethingElse>(''{}'', new JsonSerializerSettings\r\n            {\r\n                Error = (o, e) => { e.ErrorContext.Handled = true; }\r\n            })", span="861-864"];
m1_411 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeRootConverter()", file="EnumUtils.cs", label="Assert.IsNull(result)", span="866-866"];
m1_412 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeRootConverter()", file="EnumUtils.cs", label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeRootConverter()", span="859-859"];
m1_337 [cluster="System.Text.Encoding.GetBytes(string)", file="EnumUtils.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m1_365 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something.SomethingConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="EnumUtils.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something.SomethingConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="773-773"];
m1_366 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something.SomethingConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="EnumUtils.cs", label="Something s = (Something)value", span="777-777"];
m1_367 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something.SomethingConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="EnumUtils.cs", label="serializer.Serialize(writer, s.RootSomethingElse)", span="781-781"];
m1_368 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something.SomethingConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="EnumUtils.cs", label=Exception, span="783-783"];
m1_369 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something.SomethingConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="EnumUtils.cs", label="throw new Exception(''An error occurred.'', ex);", span="786-786"];
m1_370 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something.SomethingConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="EnumUtils.cs", label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something.SomethingConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="773-773"];
m1_351 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="EnumUtils.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="358-358"];
m1_196 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.InfiniteLoopArrayHandling()", file="EnumUtils.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.InfiniteLoopArrayHandling()", span="519-519"];
m1_197 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.InfiniteLoopArrayHandling()", file="EnumUtils.cs", label="IList<string> errors = new List<string>()", span="521-521"];
m1_198 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.InfiniteLoopArrayHandling()", file="EnumUtils.cs", label="object o = JsonConvert.DeserializeObject(\r\n                ''[0,x]'',\r\n                typeof(int[]),\r\n                new JsonSerializerSettings\r\n                {\r\n                    Error = (sender, arg) =>\r\n                    {\r\n                        errors.Add(arg.ErrorContext.Error.Message);\r\n                        arg.ErrorContext.Handled = true;\r\n                    }\r\n                })", span="523-533"];
m1_200 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.InfiniteLoopArrayHandling()", file="EnumUtils.cs", label="Assert.AreEqual(3, errors.Count)", span="537-537"];
m1_201 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.InfiniteLoopArrayHandling()", file="EnumUtils.cs", label="Assert.AreEqual(''Unexpected character encountered while parsing value: x. Path '[0]', line 1, position 3.'', errors[0])", span="538-538"];
m1_202 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.InfiniteLoopArrayHandling()", file="EnumUtils.cs", label="Assert.AreEqual(''Unexpected character encountered while parsing value: x. Path '[0]', line 1, position 3.'', errors[1])", span="539-539"];
m1_203 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.InfiniteLoopArrayHandling()", file="EnumUtils.cs", label="Assert.AreEqual(''Infinite loop detected from error handling. Path '[0]', line 1, position 3.'', errors[2])", span="540-540"];
m1_199 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.InfiniteLoopArrayHandling()", file="EnumUtils.cs", label="Assert.IsNull(o)", span="535-535"];
m1_204 [cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.InfiniteLoopArrayHandling()", file="EnumUtils.cs", label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.InfiniteLoopArrayHandling()", span="519-519"];
m1_446 [file="EnumUtils.cs", label=c, span=""];
m1_447 [file="EnumUtils.cs", label=errors, span=""];
m1_448 [file="EnumUtils.cs", label=errors, span=""];
m1_449 [file="EnumUtils.cs", label=errors, span=""];
m1_450 [file="EnumUtils.cs", label=errors, span=""];
m1_451 [file="EnumUtils.cs", label=errors, span=""];
m1_452 [file="EnumUtils.cs", label=errors, span=""];
m1_453 [file="EnumUtils.cs", label=errors, span=""];
m1_454 [file="EnumUtils.cs", label=errors, span=""];
m1_455 [file="EnumUtils.cs", label=errors, span=""];
m1_456 [file="EnumUtils.cs", label=errors, span=""];
m1_457 [file="EnumUtils.cs", label=errors, span=""];
m1_458 [file="EnumUtils.cs", label=errors, span=""];
m1_459 [file="EnumUtils.cs", label=jReader, span=""];
m1_460 [file="EnumUtils.cs", label=s, span=""];
m1_461 [file="EnumUtils.cs", label="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something", span=""];
m1_462 [file="EnumUtils.cs", label=serialiser, span=""];
m1_463 [file="EnumUtils.cs", label=reader, span=""];
m1_464 [file="EnumUtils.cs", label=serialiser, span=""];
m1_465 [file="EnumUtils.cs", label=r, span=""];
m1_466 [file="EnumUtils.cs", label=writer, span=""];
m1_467 [file="EnumUtils.cs", label="Newtonsoft.Json.Tests.Serialization.ThrowingReader", span=""];
m2_64 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToUInt16(object)", file="JsonFormatterConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonFormatterConverter.ToUInt16(object)", span="134-134"];
m2_65 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToUInt16(object)", file="JsonFormatterConverter.cs", label="return GetTokenValue<ushort>(value);", span="136-136"];
m2_66 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToUInt16(object)", file="JsonFormatterConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonFormatterConverter.ToUInt16(object)", span="134-134"];
m2_67 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToUInt32(object)", file="JsonFormatterConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonFormatterConverter.ToUInt32(object)", span="139-139"];
m2_68 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToUInt32(object)", file="JsonFormatterConverter.cs", label="return GetTokenValue<uint>(value);", span="141-141"];
m2_69 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToUInt32(object)", file="JsonFormatterConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonFormatterConverter.ToUInt32(object)", span="139-139"];
m2_10 [cluster="System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", file="JsonFormatterConverter.cs", label="Entry System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", span="0-0"];
m2_49 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToInt32(object)", file="JsonFormatterConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonFormatterConverter.ToInt32(object)", span="109-109"];
m2_50 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToInt32(object)", file="JsonFormatterConverter.cs", label="return GetTokenValue<int>(value);", span="111-111"];
m2_51 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToInt32(object)", file="JsonFormatterConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonFormatterConverter.ToInt32(object)", span="109-109"];
m2_37 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToDateTime(object)", file="JsonFormatterConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonFormatterConverter.ToDateTime(object)", span="89-89"];
m2_38 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToDateTime(object)", file="JsonFormatterConverter.cs", label="return GetTokenValue<DateTime>(value);", span="91-91"];
m2_39 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToDateTime(object)", file="JsonFormatterConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonFormatterConverter.ToDateTime(object)", span="89-89"];
m2_19 [cluster="Newtonsoft.Json.Linq.JToken.CreateReader()", file="JsonFormatterConverter.cs", label="Entry Newtonsoft.Json.Linq.JToken.CreateReader()", span="1637-1637"];
m2_43 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToDouble(object)", file="JsonFormatterConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonFormatterConverter.ToDouble(object)", span="99-99"];
m2_44 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToDouble(object)", file="JsonFormatterConverter.cs", label="return GetTokenValue<double>(value);", span="101-101"];
m2_45 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToDouble(object)", file="JsonFormatterConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonFormatterConverter.ToDouble(object)", span="99-99"];
m2_5 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.GetTokenValue<T>(object)", file="JsonFormatterConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonFormatterConverter.GetTokenValue<T>(object)", span="45-45"];
m2_6 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.GetTokenValue<T>(object)", file="JsonFormatterConverter.cs", label="ValidationUtils.ArgumentNotNull(value, ''value'')", span="47-47"];
m2_7 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.GetTokenValue<T>(object)", file="JsonFormatterConverter.cs", label="JValue v = (JValue)value", span="49-49"];
m2_8 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.GetTokenValue<T>(object)", file="JsonFormatterConverter.cs", label="return (T)System.Convert.ChangeType(v.Value, typeof(T), CultureInfo.InvariantCulture);", span="50-50"];
m2_9 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.GetTokenValue<T>(object)", file="JsonFormatterConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonFormatterConverter.GetTokenValue<T>(object)", span="45-45"];
m2_58 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToSingle(object)", file="JsonFormatterConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonFormatterConverter.ToSingle(object)", span="124-124"];
m2_59 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToSingle(object)", file="JsonFormatterConverter.cs", label="return GetTokenValue<float>(value);", span="126-126"];
m2_60 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToSingle(object)", file="JsonFormatterConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonFormatterConverter.ToSingle(object)", span="124-124"];
m2_52 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToInt64(object)", file="JsonFormatterConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonFormatterConverter.ToInt64(object)", span="114-114"];
m2_53 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToInt64(object)", file="JsonFormatterConverter.cs", label="return GetTokenValue<long>(value);", span="116-116"];
m2_54 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToInt64(object)", file="JsonFormatterConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonFormatterConverter.ToInt64(object)", span="114-114"];
m2_61 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToString(object)", file="JsonFormatterConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonFormatterConverter.ToString(object)", span="129-129"];
m2_62 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToString(object)", file="JsonFormatterConverter.cs", label="return GetTokenValue<string>(value);", span="131-131"];
m2_63 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToString(object)", file="JsonFormatterConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonFormatterConverter.ToString(object)", span="129-129"];
m2_46 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToInt16(object)", file="JsonFormatterConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonFormatterConverter.ToInt16(object)", span="104-104"];
m2_47 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToInt16(object)", file="JsonFormatterConverter.cs", label="return GetTokenValue<short>(value);", span="106-106"];
m2_48 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToInt16(object)", file="JsonFormatterConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonFormatterConverter.ToInt16(object)", span="104-104"];
m2_27 [cluster="System.Convert.ChangeType(object, System.TypeCode, System.IFormatProvider)", file="JsonFormatterConverter.cs", label="Entry System.Convert.ChangeType(object, System.TypeCode, System.IFormatProvider)", span="0-0"];
m2_18 [cluster="System.ArgumentException.ArgumentException(string, string)", file="JsonFormatterConverter.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m2_34 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToChar(object)", file="JsonFormatterConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonFormatterConverter.ToChar(object)", span="84-84"];
m2_35 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToChar(object)", file="JsonFormatterConverter.cs", label="return GetTokenValue<char>(value);", span="86-86"];
m2_36 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToChar(object)", file="JsonFormatterConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonFormatterConverter.ToChar(object)", span="84-84"];
m2_0 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.JsonFormatterConverter(Newtonsoft.Json.JsonSerializer)", file="JsonFormatterConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonFormatterConverter.JsonFormatterConverter(Newtonsoft.Json.JsonSerializer)", span="38-38"];
m2_1 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.JsonFormatterConverter(Newtonsoft.Json.JsonSerializer)", color=red, community=0, file="JsonFormatterConverter.cs", label="0: ValidationUtils.ArgumentNotNull(serializer, ''serializer'')", span="40-40"];
m2_2 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.JsonFormatterConverter(Newtonsoft.Json.JsonSerializer)", color=red, community=0, file="JsonFormatterConverter.cs", label="3: _serializer = serializer", span="42-42"];
m2_3 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.JsonFormatterConverter(Newtonsoft.Json.JsonSerializer)", file="JsonFormatterConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonFormatterConverter.JsonFormatterConverter(Newtonsoft.Json.JsonSerializer)", span="38-38"];
m2_31 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToByte(object)", file="JsonFormatterConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonFormatterConverter.ToByte(object)", span="79-79"];
m2_32 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToByte(object)", file="JsonFormatterConverter.cs", label="return GetTokenValue<byte>(value);", span="81-81"];
m2_33 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToByte(object)", file="JsonFormatterConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonFormatterConverter.ToByte(object)", span="79-79"];
m2_40 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToDecimal(object)", file="JsonFormatterConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonFormatterConverter.ToDecimal(object)", span="94-94"];
m2_41 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToDecimal(object)", file="JsonFormatterConverter.cs", label="return GetTokenValue<decimal>(value);", span="96-96"];
m2_42 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToDecimal(object)", file="JsonFormatterConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonFormatterConverter.ToDecimal(object)", span="94-94"];
m2_4 [cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="JsonFormatterConverter.cs", label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="52-52"];
m2_11 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.Convert(object, System.Type)", file="JsonFormatterConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonFormatterConverter.Convert(object, System.Type)", span="53-53"];
m2_12 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.Convert(object, System.Type)", file="JsonFormatterConverter.cs", label="ValidationUtils.ArgumentNotNull(value, ''value'')", span="55-55"];
m2_13 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.Convert(object, System.Type)", file="JsonFormatterConverter.cs", label="JToken token = value as JToken", span="57-57"];
m2_16 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.Convert(object, System.Type)", color=red, community=0, file="JsonFormatterConverter.cs", label="2: return _serializer.Deserialize(token.CreateReader(), type);", span="61-61"];
m2_14 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.Convert(object, System.Type)", file="JsonFormatterConverter.cs", label="token == null", span="58-58"];
m2_15 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.Convert(object, System.Type)", file="JsonFormatterConverter.cs", label="throw new ArgumentException(''Value is not a JToken.'', ''value'');", span="59-59"];
m2_17 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.Convert(object, System.Type)", file="JsonFormatterConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonFormatterConverter.Convert(object, System.Type)", span="53-53"];
m2_55 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToSByte(object)", file="JsonFormatterConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonFormatterConverter.ToSByte(object)", span="119-119"];
m2_56 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToSByte(object)", file="JsonFormatterConverter.cs", label="return GetTokenValue<sbyte>(value);", span="121-121"];
m2_57 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToSByte(object)", file="JsonFormatterConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonFormatterConverter.ToSByte(object)", span="119-119"];
m2_28 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToBoolean(object)", file="JsonFormatterConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonFormatterConverter.ToBoolean(object)", span="74-74"];
m2_29 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToBoolean(object)", file="JsonFormatterConverter.cs", label="return GetTokenValue<bool>(value);", span="76-76"];
m2_30 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToBoolean(object)", file="JsonFormatterConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonFormatterConverter.ToBoolean(object)", span="74-74"];
m2_20 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="JsonFormatterConverter.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", span="686-686"];
m2_21 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.Convert(object, System.TypeCode)", file="JsonFormatterConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonFormatterConverter.Convert(object, System.TypeCode)", span="64-64"];
m2_22 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.Convert(object, System.TypeCode)", file="JsonFormatterConverter.cs", label="ValidationUtils.ArgumentNotNull(value, ''value'')", span="66-66"];
m2_23 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.Convert(object, System.TypeCode)", file="JsonFormatterConverter.cs", label="value is JValue", span="68-68"];
m2_24 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.Convert(object, System.TypeCode)", file="JsonFormatterConverter.cs", label="value = ((JValue)value).Value", span="69-69"];
m2_25 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.Convert(object, System.TypeCode)", file="JsonFormatterConverter.cs", label="return System.Convert.ChangeType(value, typeCode, CultureInfo.InvariantCulture);", span="71-71"];
m2_26 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.Convert(object, System.TypeCode)", file="JsonFormatterConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonFormatterConverter.Convert(object, System.TypeCode)", span="64-64"];
m2_70 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToUInt64(object)", file="JsonFormatterConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonFormatterConverter.ToUInt64(object)", span="144-144"];
m2_71 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToUInt64(object)", file="JsonFormatterConverter.cs", label="return GetTokenValue<ulong>(value);", span="146-146"];
m2_72 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToUInt64(object)", file="JsonFormatterConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonFormatterConverter.ToUInt64(object)", span="144-144"];
m2_73 [file="JsonFormatterConverter.cs", label="Newtonsoft.Json.Serialization.JsonFormatterConverter", span=""];
m3_0 [cluster="Newtonsoft.Json.Serialization.JsonISerializableContract.JsonISerializableContract(System.Type)", file="JsonISerializableContract.cs", label="Entry Newtonsoft.Json.Serialization.JsonISerializableContract.JsonISerializableContract(System.Type)", span="45-45"];
m3_1 [cluster="Newtonsoft.Json.Serialization.JsonISerializableContract.JsonISerializableContract(System.Type)", file="JsonISerializableContract.cs", label="ContractType = JsonContractType.Serializable", span="48-48"];
m3_2 [cluster="Newtonsoft.Json.Serialization.JsonISerializableContract.JsonISerializableContract(System.Type)", file="JsonISerializableContract.cs", label="Exit Newtonsoft.Json.Serialization.JsonISerializableContract.JsonISerializableContract(System.Type)", span="45-45"];
m3_3 [file="JsonISerializableContract.cs", label="Newtonsoft.Json.Serialization.JsonISerializableContract", span=""];
m4_236 [cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.StringListAppenderConverter()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.StringListAppenderConverter()", span="1637-1637"];
m4_690 [cluster="Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.CanConvert(System.Type)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.CanConvert(System.Type)", span="1683-1683"];
m4_691 [cluster="Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.CanConvert(System.Type)", file="JsonSerializerCollectionsTests.cs", label="return (objectType == typeof(string));", span="1685-1685"];
m4_692 [cluster="Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.CanConvert(System.Type)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.CanConvert(System.Type)", span="1683-1683"];
m4_144 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.GetEnumerator()", span="338-338"];
m4_145 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="return _dictionary.GetEnumerator();", span="340-340"];
m4_146 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.GetEnumerator()", span="338-338"];
m4_594 [cluster="Newtonsoft.Json.Tests.Serialization.GenericItem<T>.GenericItem()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.GenericItem<T>.GenericItem()", span="1595-1595"];
m4_661 [cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.System.Collections.IEnumerable.GetEnumerator()", span="1627-1627"];
m4_662 [cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="return GetEnumerator();", span="1629-1629"];
m4_663 [cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.System.Collections.IEnumerable.GetEnumerator()", span="1627-1627"];
m4_275 [cluster="Newtonsoft.Json.Tests.TestObjects.GameObject.GameObject()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.GameObject.GameObject()", span="42-42"];
m4_84 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNonIsoDateDictionaryKey()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNonIsoDateDictionaryKey()", span="219-219"];
m4_85 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNonIsoDateDictionaryKey()", file="JsonSerializerCollectionsTests.cs", label="Dictionary<DateTime, string> d = JsonConvert.DeserializeObject<Dictionary<DateTime, string>>(@''{''''04/28/2013 00:00:00'''':''''test''''}'')", span="221-221"];
m4_86 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNonIsoDateDictionaryKey()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, d.Count)", span="223-223"];
m4_88 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNonIsoDateDictionaryKey()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''test'', d[key])", span="226-226"];
m4_87 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNonIsoDateDictionaryKey()", file="JsonSerializerCollectionsTests.cs", label="DateTime key = DateTime.Parse(''04/28/2013 00:00:00'', CultureInfo.InvariantCulture)", span="225-225"];
m4_89 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNonIsoDateDictionaryKey()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNonIsoDateDictionaryKey()", span="219-219"];
m4_19 [cluster="Unk.IsTrue", file="JsonSerializerCollectionsTests.cs", label="Entry Unk.IsTrue", span=""];
m4_119 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionaryInterface()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionaryInterface()", span="276-276"];
m4_120 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionaryInterface()", file="JsonSerializerCollectionsTests.cs", label="IReadOnlyDictionary<string, int> dic = JsonConvert.DeserializeObject<IReadOnlyDictionary<string, int>>(''{'one':1,'two':2}'')", span="278-278"];
m4_121 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionaryInterface()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, dic.Count)", span="280-280"];
m4_122 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionaryInterface()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, dic[''one''])", span="282-282"];
m4_123 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionaryInterface()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, dic[''two''])", span="283-283"];
m4_124 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionaryInterface()", file="JsonSerializerCollectionsTests.cs", label="CustomAssert.IsInstanceOfType(typeof(ReadOnlyDictionary<string, int>), dic)", span="285-285"];
m4_125 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionaryInterface()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionaryInterface()", span="276-276"];
m4_16 [cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="359-359"];
m4_59 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrivateDefaultCtorList<T>.PrivateDefaultCtorList()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrivateDefaultCtorList<T>.PrivateDefaultCtorList()", span="176-176"];
m4_60 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrivateDefaultCtorList<T>.PrivateDefaultCtorList()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrivateDefaultCtorList<T>.PrivateDefaultCtorList()", span="176-176"];
m4_45 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.GetEnumerator()", span="151-151"];
m4_46 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="return _values.GetEnumerator();", span="153-153"];
m4_47 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.GetEnumerator()", span="151-151"];
m4_73 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrivateDefaultCtorWithIEnumerableCtorList<T>.PrivateDefaultCtorWithIEnumerableCtorList(System.Collections.Generic.IEnumerable<T>)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrivateDefaultCtorWithIEnumerableCtorList<T>.PrivateDefaultCtorWithIEnumerableCtorList(System.Collections.Generic.IEnumerable<T>)", span="200-200"];
m4_74 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrivateDefaultCtorWithIEnumerableCtorList<T>.PrivateDefaultCtorWithIEnumerableCtorList(System.Collections.Generic.IEnumerable<T>)", file="JsonSerializerCollectionsTests.cs", label="Add(default(T))", span="203-203"];
m4_75 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrivateDefaultCtorWithIEnumerableCtorList<T>.PrivateDefaultCtorWithIEnumerableCtorList(System.Collections.Generic.IEnumerable<T>)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrivateDefaultCtorWithIEnumerableCtorList<T>.PrivateDefaultCtorWithIEnumerableCtorList(System.Collections.Generic.IEnumerable<T>)", span="200-200"];
m4_24 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>.GetEnumerator()", span="114-114"];
m4_25 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="return _values.GetEnumerator();", span="116-116"];
m4_26 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>.GetEnumerator()", span="114-114"];
m4_48 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.System.Collections.IEnumerable.GetEnumerator()", span="156-156"];
m4_49 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="return GetEnumerator();", span="158-158"];
m4_50 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.System.Collections.IEnumerable.GetEnumerator()", span="156-156"];
m4_189 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeExistingGenericList()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeExistingGenericList()", span="439-439"];
m4_190 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeExistingGenericList()", file="JsonSerializerCollectionsTests.cs", label="GenericListTestClass c = new GenericListTestClass()", span="441-441"];
m4_191 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeExistingGenericList()", file="JsonSerializerCollectionsTests.cs", label="c.GenericList.Add(''1'')", span="442-442"];
m4_192 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeExistingGenericList()", file="JsonSerializerCollectionsTests.cs", label="c.GenericList.Add(''2'')", span="443-443"];
m4_193 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeExistingGenericList()", file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="445-445"];
m4_194 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeExistingGenericList()", file="JsonSerializerCollectionsTests.cs", label="GenericListTestClass newValue = JsonConvert.DeserializeObject<GenericListTestClass>(json)", span="447-447"];
m4_195 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeExistingGenericList()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, newValue.GenericList.Count)", span="448-448"];
m4_196 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeExistingGenericList()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(typeof(List<string>), newValue.GenericList.GetType())", span="449-449"];
m4_197 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeExistingGenericList()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeExistingGenericList()", span="439-439"];
m4_226 [cluster="Newtonsoft.Json.Tests.TestObjects.WagePerson.WagePerson()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.WagePerson.WagePerson()", span="27-27"];
m4_569 [cluster="Newtonsoft.Json.Tests.TestObjects.Product.Product()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Product.Product()", span="29-29"];
m4_158 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.CustomReadOnlyCollection(System.Collections.Generic.IList<T>)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.CustomReadOnlyCollection(System.Collections.Generic.IList<T>)", span="371-371"];
m4_159 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.CustomReadOnlyCollection(System.Collections.Generic.IList<T>)", file="JsonSerializerCollectionsTests.cs", label="_values = values", span="373-373"];
m4_160 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.CustomReadOnlyCollection(System.Collections.Generic.IList<T>)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.CustomReadOnlyCollection(System.Collections.Generic.IList<T>)", span="371-371"];
m4_636 [cluster="System.Console.WriteLine(int)", file="JsonSerializerCollectionsTests.cs", label="Entry System.Console.WriteLine(int)", span="0-0"];
m4_459 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIncomplete3DArray()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIncomplete3DArray()", span="1071-1071"];
m4_460 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIncomplete3DArray()", file="JsonSerializerCollectionsTests.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[/*hi*/[/*hi*/[1/*hi*/,/*hi*/1/*hi*/,1]/*hi*/,/*hi*/[1,1''", span="1073-1073"];
m4_461 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIncomplete3DArray()", file="JsonSerializerCollectionsTests.cs", label="ExceptionAssert.Throws<JsonException>(() => JsonConvert.DeserializeObject<Array3D>(json))", span="1075-1075"];
m4_462 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIncomplete3DArray()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIncomplete3DArray()", span="1071-1071"];
m4_679 [cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.CanConvert(System.Type)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.CanConvert(System.Type)", span="1662-1662"];
m4_680 [cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.CanConvert(System.Type)", file="JsonSerializerCollectionsTests.cs", label="return (objectType == typeof(List<string>));", span="1664-1664"];
m4_681 [cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.CanConvert(System.Type)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.CanConvert(System.Type)", span="1662-1662"];
m4_290 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", span="645-645"];
m4_291 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="string json = @''[ { ''''Value'''': [ ''''1'''', ''''2'''' ], ''''Key'''': ''''aaa'''', ''''BadContent'''': [ 0 ] }, null, { ''''Value'''': [ ''''3'''', ''''4'''' ], ''''Key'''': ''''bbb'''' } ]''", span="647-647"];
m4_292 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="IList<KeyValuePair<string, IList<string>>?> values = JsonConvert.DeserializeObject<IList<KeyValuePair<string, IList<string>>?>>(json)", span="649-649"];
m4_293 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, values.Count)", span="651-651"];
m4_294 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''aaa'', values[0].Value.Key)", span="652-652"];
m4_295 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, values[0].Value.Value.Count)", span="653-653"];
m4_296 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''1'', values[0].Value.Value[0])", span="654-654"];
m4_297 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''2'', values[0].Value.Value[1])", span="655-655"];
m4_298 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(null, values[1])", span="656-656"];
m4_299 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''bbb'', values[2].Value.Key)", span="657-657"];
m4_300 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, values[2].Value.Value.Count)", span="658-658"];
m4_301 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''3'', values[2].Value.Value[0])", span="659-659"];
m4_302 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''4'', values[2].Value.Value[1])", span="660-660"];
m4_303 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", span="645-645"];
m4_91 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNonGenericList()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNonGenericList()", span="230-230"];
m4_92 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNonGenericList()", file="JsonSerializerCollectionsTests.cs", label="IList l = JsonConvert.DeserializeObject<IList>(''['string!']'')", span="232-232"];
m4_93 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNonGenericList()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(typeof(List<object>), l.GetType())", span="234-234"];
m4_94 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNonGenericList()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, l.Count)", span="235-235"];
m4_95 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNonGenericList()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''string!'', l[0])", span="236-236"];
m4_96 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNonGenericList()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNonGenericList()", span="230-230"];
m4_349 [cluster="Newtonsoft.Json.Tests.Serialization.Array2D.Array2D()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Array2D.Array2D()", span="1571-1571"];
m4_325 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReadOnlyCollections()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReadOnlyCollections()", span="709-709"];
m4_326 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReadOnlyCollections()", file="JsonSerializerCollectionsTests.cs", label="PopulateReadOnlyTestClass c1 = new PopulateReadOnlyTestClass()", span="711-711"];
m4_327 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReadOnlyCollections()", file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="713-713"];
m4_328 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReadOnlyCollections()", file="JsonSerializerCollectionsTests.cs", label="StringAssert.AreEqual(@''{\r\n  ''''NonReadOnlyList'''': [\r\n    1\r\n  ],\r\n  ''''NonReadOnlyDictionary'''': {\r\n    ''''first'''': 2\r\n  },\r\n  ''''Array'''': [\r\n    3\r\n  ],\r\n  ''''List'''': [\r\n    4\r\n  ],\r\n  ''''Dictionary'''': {\r\n    ''''first'''': 5\r\n  },\r\n  ''''IReadOnlyCollection'''': [\r\n    6\r\n  ],\r\n  ''''ReadOnlyCollection'''': [\r\n    7\r\n  ],\r\n  ''''IReadOnlyList'''': [\r\n    8\r\n  ],\r\n  ''''IReadOnlyDictionary'''': {\r\n    ''''first'''': 9\r\n  },\r\n  ''''ReadOnlyDictionary'''': {\r\n    ''''first'''': 10\r\n  }\r\n}'', json)", span="715-746"];
m4_329 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReadOnlyCollections()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReadOnlyCollections()", span="709-709"];
m4_359 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3DWithConverter()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3DWithConverter()", span="826-826"];
m4_360 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3DWithConverter()", file="JsonSerializerCollectionsTests.cs", label="Array3DWithConverter aa = new Array3DWithConverter()", span="828-828"];
m4_361 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3DWithConverter()", file="JsonSerializerCollectionsTests.cs", label="aa.Before = ''Before!''", span="829-829"];
m4_362 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3DWithConverter()", file="JsonSerializerCollectionsTests.cs", label="aa.After = ''After!''", span="830-830"];
m4_363 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3DWithConverter()", file="JsonSerializerCollectionsTests.cs", label="aa.Coordinates = new[, ,] { { { 1, 1, 1 }, { 1, 1, 2 } }, { { 1, 2, 1 }, { 1, 2, 2 } }, { { 2, 1, 1 }, { 2, 1, 2 } }, { { 2, 2, 1 }, { 2, 2, 2 } } }", span="831-831"];
m4_364 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3DWithConverter()", file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(aa, Formatting.Indented)", span="833-833"];
m4_365 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3DWithConverter()", file="JsonSerializerCollectionsTests.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Before'''': ''''Before!'''',\r\n  ''''Coordinates'''': [\r\n    [\r\n      [\r\n        1.0,\r\n        1.0,\r\n        1.0\r\n      ],\r\n      [\r\n        1.0,\r\n        1.0,\r\n        2.0\r\n      ]\r\n    ],\r\n    [\r\n      [\r\n        1.0,\r\n        2.0,\r\n        1.0\r\n      ],\r\n      [\r\n        1.0,\r\n        2.0,\r\n        2.0\r\n      ]\r\n    ],\r\n    [\r\n      [\r\n        2.0,\r\n        1.0,\r\n        1.0\r\n      ],\r\n      [\r\n        2.0,\r\n        1.0,\r\n        2.0\r\n      ]\r\n    ],\r\n    [\r\n      [\r\n        2.0,\r\n        2.0,\r\n        1.0\r\n      ],\r\n      [\r\n        2.0,\r\n        2.0,\r\n        2.0\r\n      ]\r\n    ]\r\n  ],\r\n  ''''After'''': ''''After!''''\r\n}'', json)", span="835-888"];
m4_366 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3DWithConverter()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3DWithConverter()", span="826-826"];
m4_493 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReferenceTracked3DArray()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReferenceTracked3DArray()", span="1121-1121"];
m4_494 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReferenceTracked3DArray()", file="JsonSerializerCollectionsTests.cs", label="Event1 e1 = new Event1\r\n            {\r\n                EventName = ''EventName!''\r\n            }", span="1123-1126"];
m4_495 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReferenceTracked3DArray()", file="JsonSerializerCollectionsTests.cs", label="Event1[,] array1 = new[,] { { e1, e1 }, { e1, e1 } }", span="1127-1127"];
m4_496 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReferenceTracked3DArray()", file="JsonSerializerCollectionsTests.cs", label="IList<Event1[,]> values1 = new List<Event1[,]>\r\n            {\r\n                array1,\r\n                array1\r\n            }", span="1128-1132"];
m4_497 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReferenceTracked3DArray()", file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(values1, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.All,\r\n                Formatting = Formatting.Indented\r\n            })", span="1134-1138"];
m4_498 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReferenceTracked3DArray()", file="JsonSerializerCollectionsTests.cs", label="StringAssert.AreEqual(@''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$values'''': [\r\n    {\r\n      ''''$id'''': ''''2'''',\r\n      ''''$values'''': [\r\n        [\r\n          {\r\n            ''''$id'''': ''''3'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          },\r\n          {\r\n            ''''$ref'''': ''''3''''\r\n          }\r\n        ],\r\n        [\r\n          {\r\n            ''''$ref'''': ''''3''''\r\n          },\r\n          {\r\n            ''''$ref'''': ''''3''''\r\n          }\r\n        ]\r\n      ]\r\n    },\r\n    {\r\n      ''''$ref'''': ''''2''''\r\n    }\r\n  ]\r\n}'', json)", span="1140-1171"];
m4_499 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReferenceTracked3DArray()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReferenceTracked3DArray()", span="1121-1121"];
m4_71 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrivateDefaultCtorWithIEnumerableCtorList<T>.PrivateDefaultCtorWithIEnumerableCtorList()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrivateDefaultCtorWithIEnumerableCtorList<T>.PrivateDefaultCtorWithIEnumerableCtorList()", span="196-196"];
m4_72 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrivateDefaultCtorWithIEnumerableCtorList<T>.PrivateDefaultCtorWithIEnumerableCtorList()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrivateDefaultCtorWithIEnumerableCtorList<T>.PrivateDefaultCtorWithIEnumerableCtorList()", span="196-196"];
m4_143 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m4_23 [cluster="System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)", file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m4_98 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyListInterface()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyListInterface()", span="241-241"];
m4_99 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyListInterface()", file="JsonSerializerCollectionsTests.cs", label="IReadOnlyList<int> list = JsonConvert.DeserializeObject<IReadOnlyList<int>>(''[1,2,3]'')", span="243-243"];
m4_100 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyListInterface()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, list.Count)", span="245-245"];
m4_101 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyListInterface()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, list[0])", span="246-246"];
m4_102 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyListInterface()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, list[1])", span="247-247"];
m4_103 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyListInterface()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, list[2])", span="248-248"];
m4_104 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyListInterface()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyListInterface()", span="241-241"];
m4_577 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", span="686-686"];
m4_685 [cluster="Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="1675-1675"];
m4_686 [cluster="Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerCollectionsTests.cs", label="string existingString = (string)existingValue", span="1677-1677"];
m4_687 [cluster="Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerCollectionsTests.cs", label="string newString = existingString + (string)reader.Value", span="1678-1678"];
m4_688 [cluster="Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerCollectionsTests.cs", label="return newString;", span="1680-1680"];
m4_689 [cluster="Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="1675-1675"];
m4_542 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", span="1321-1321"];
m4_543 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", file="JsonSerializerCollectionsTests.cs", label="Name name = new Name(''The Idiot in Next To Me'')", span="1323-1323"];
m4_544 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", file="JsonSerializerCollectionsTests.cs", label="PhoneNumber p1 = new PhoneNumber(''555-1212'')", span="1325-1325"];
m4_546 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", file="JsonSerializerCollectionsTests.cs", label="name.pNumbers.Add(p1)", span="1328-1328"];
m4_547 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", file="JsonSerializerCollectionsTests.cs", label="name.pNumbers.Add(p2)", span="1329-1329"];
m4_548 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(name, Formatting.Indented)", span="1331-1331"];
m4_545 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", file="JsonSerializerCollectionsTests.cs", label="PhoneNumber p2 = new PhoneNumber(''444-1212'')", span="1326-1326"];
m4_549 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", file="JsonSerializerCollectionsTests.cs", label="StringAssert.AreEqual(@''{\r\n  ''''personsName'''': ''''The Idiot in Next To Me'''',\r\n  ''''pNumbers'''': [\r\n    {\r\n      ''''phoneNumber'''': ''''555-1212''''\r\n    },\r\n    {\r\n      ''''phoneNumber'''': ''''444-1212''''\r\n    }\r\n  ]\r\n}'', json)", span="1333-1343"];
m4_550 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", file="JsonSerializerCollectionsTests.cs", label="Name newName = JsonConvert.DeserializeObject<Name>(json)", span="1345-1345"];
m4_551 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''The Idiot in Next To Me'', newName.personsName)", span="1347-1347"];
m4_552 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, newName.pNumbers.Count)", span="1350-1350"];
m4_553 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''555-1212'', newName.pNumbers[0].phoneNumber)", span="1351-1351"];
m4_554 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''444-1212'', newName.pNumbers[1].phoneNumber)", span="1352-1352"];
m4_555 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", span="1321-1321"];
m4_324 [cluster="System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.ReadOnlyDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.ReadOnlyDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m4_482 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()", span="1103-1103"];
m4_483 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[]],''''After'''':''''After!''''}''", span="1105-1105"];
m4_484 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="Array3D aa = JsonConvert.DeserializeObject<Array3D>(json)", span="1107-1107"];
m4_491 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(json, after)", span="1117-1117"];
m4_485 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''Before!'', aa.Before)", span="1109-1109"];
m4_486 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''After!'', aa.After)", span="1110-1110"];
m4_487 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, aa.Coordinates.GetLength(0))", span="1111-1111"];
m4_488 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(0, aa.Coordinates.GetLength(1))", span="1112-1112"];
m4_489 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(0, aa.Coordinates.GetLength(2))", span="1113-1113"];
m4_490 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="string after = JsonConvert.SerializeObject(aa)", span="1115-1115"];
m4_492 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()", span="1103-1103"];
m4_66 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="359-359"];
m4_535 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArrayAsArrayList()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArrayAsArrayList()", span="1309-1309"];
m4_536 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArrayAsArrayList()", file="JsonSerializerCollectionsTests.cs", label="string jsonText = @''[3, ''''somestring'''',[1,2,3],{}]''", span="1311-1311"];
m4_537 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArrayAsArrayList()", file="JsonSerializerCollectionsTests.cs", label="ArrayList o = JsonConvert.DeserializeObject<ArrayList>(jsonText)", span="1312-1312"];
m4_538 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArrayAsArrayList()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(4, o.Count)", span="1314-1314"];
m4_539 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArrayAsArrayList()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, ((JArray)o[2]).Count)", span="1315-1315"];
m4_540 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArrayAsArrayList()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(0, ((JObject)o[3]).Count)", span="1316-1316"];
m4_541 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArrayAsArrayList()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArrayAsArrayList()", span="1309-1309"];
m4_173 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()", span="413-413"];
m4_174 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()", file="JsonSerializerCollectionsTests.cs", label="string s = @''host\user''", span="415-415"];
m4_175 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()", file="JsonSerializerCollectionsTests.cs", label="string serialized = JsonConvert.SerializeObject(s)", span="416-416"];
m4_178 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()", file="JsonSerializerCollectionsTests.cs", label="d1.Add(5, s)", span="420-420"];
m4_181 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()", file="JsonSerializerCollectionsTests.cs", label="d2.Add(s, 5)", span="424-424"];
m4_176 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(@''''''host\\user'''''', serialized)", span="417-417"];
m4_177 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()", file="JsonSerializerCollectionsTests.cs", label="Dictionary<int, object> d1 = new Dictionary<int, object>()", span="419-419"];
m4_179 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(@''{''''5'''':''''host\\user''''}'', JsonConvert.SerializeObject(d1))", span="421-421"];
m4_180 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()", file="JsonSerializerCollectionsTests.cs", label="Dictionary<string, object> d2 = new Dictionary<string, object>()", span="423-423"];
m4_182 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(@''{''''host\\user'''':5}'', JsonConvert.SerializeObject(d2))", span="425-425"];
m4_183 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()", span="413-413"];
m4_406 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", span="996-996"];
m4_407 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", file="JsonSerializerCollectionsTests.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[[1,1,1],[1,1,2]],[[1,2,1],[1,2,2]],[[2,1,1],[2,1,2]],[[2,2,1],[2,2,2]]],''''After'''':''''After!''''}''", span="998-998"];
m4_408 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", file="JsonSerializerCollectionsTests.cs", label="Array3D aa = JsonConvert.DeserializeObject<Array3D>(json)", span="1000-1000"];
m4_417 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(json, after)", span="1012-1012"];
m4_409 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''Before!'', aa.Before)", span="1002-1002"];
m4_410 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''After!'', aa.After)", span="1003-1003"];
m4_411 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(4, aa.Coordinates.GetLength(0))", span="1004-1004"];
m4_412 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, aa.Coordinates.GetLength(1))", span="1005-1005"];
m4_413 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, aa.Coordinates.GetLength(2))", span="1006-1006"];
m4_414 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, aa.Coordinates[0, 0, 0])", span="1007-1007"];
m4_415 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, aa.Coordinates[1, 1, 1])", span="1008-1008"];
m4_416 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", file="JsonSerializerCollectionsTests.cs", label="string after = JsonConvert.SerializeObject(aa)", span="1010-1010"];
m4_418 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", span="996-996"];
m4_39 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m4_568 [cluster="Newtonsoft.Json.Tests.TestObjects.ProductCollection.ProductCollection()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ProductCollection.ProductCollection()", span="29-29"];
m4_198 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()", span="453-453"];
m4_199 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()", file="JsonSerializerCollectionsTests.cs", label="List<KeyValuePair<string, string>> list = new List<KeyValuePair<string, string>>()", span="455-455"];
m4_200 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()", file="JsonSerializerCollectionsTests.cs", label="list.Add(new KeyValuePair<string, string>(''key1'', ''value1''))", span="456-456"];
m4_201 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()", file="JsonSerializerCollectionsTests.cs", label="list.Add(new KeyValuePair<string, string>(''key2'', ''value2''))", span="457-457"];
m4_202 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()", file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(list)", span="459-459"];
m4_203 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(@''[{''''Key'''':''''key1'''',''''Value'''':''''value1''''},{''''Key'''':''''key2'''',''''Value'''':''''value2''''}]'', json)", span="461-461"];
m4_204 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()", file="JsonSerializerCollectionsTests.cs", label="List<KeyValuePair<string, string>> result = JsonConvert.DeserializeObject<List<KeyValuePair<string, string>>>(json)", span="463-463"];
m4_205 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, result.Count)", span="464-464"];
m4_206 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''key1'', result[0].Key)", span="465-465"];
m4_207 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''value1'', result[0].Value)", span="466-466"];
m4_208 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''key2'', result[1].Key)", span="467-467"];
m4_209 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''value2'', result[1].Value)", span="468-468"];
m4_210 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()", span="453-453"];
m4_598 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", span="1405-1405"];
m4_599 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", file="JsonSerializerCollectionsTests.cs", label="Article a1 = new Article(''a1'')", span="1407-1407"];
m4_600 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", file="JsonSerializerCollectionsTests.cs", label="Article a2 = new Article(''a2'')", span="1408-1408"];
m4_602 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", file="JsonSerializerCollectionsTests.cs", label="articles1.Add(a1)", span="1411-1411"];
m4_601 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", file="JsonSerializerCollectionsTests.cs", label="ArticleCollection articles1 = new ArticleCollection()", span="1410-1410"];
m4_603 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", file="JsonSerializerCollectionsTests.cs", label="articles1.Add(a2)", span="1412-1412"];
m4_604 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", file="JsonSerializerCollectionsTests.cs", label="string jsonText = JsonConvert.SerializeObject(articles1)", span="1414-1414"];
m4_606 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(articles1.Count, articles2.Count)", span="1418-1418"];
m4_607 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(articles1[0].Name, articles2[0].Name)", span="1419-1419"];
m4_605 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", file="JsonSerializerCollectionsTests.cs", label="ArticleCollection articles2 = JsonConvert.DeserializeObject<ArticleCollection>(jsonText)", span="1416-1416"];
m4_608 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", span="1405-1405"];
m4_609 [cluster="Newtonsoft.Json.Tests.TestObjects.Article.Article(string)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Article.Article(string)", span="35-35"];
m4_254 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()", span="569-569"];
m4_255 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()", file="JsonSerializerCollectionsTests.cs", label="IDictionary<string, int?> v1 = new Dictionary<string, int?>\r\n            {\r\n                { ''First'', 1 },\r\n                { ''Second'', null },\r\n                { ''Third'', 3 }\r\n            }", span="571-576"];
m4_256 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()", file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(v1, Formatting.Indented)", span="578-578"];
m4_257 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()", file="JsonSerializerCollectionsTests.cs", label="StringAssert.AreEqual(@''{\r\n  ''''First'''': 1,\r\n  ''''Second'''': null,\r\n  ''''Third'''': 3\r\n}'', json)", span="580-584"];
m4_258 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()", file="JsonSerializerCollectionsTests.cs", label="IDictionary<string, int?> v2 = JsonConvert.DeserializeObject<IDictionary<string, int?>>(json)", span="586-586"];
m4_259 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, v2.Count)", span="587-587"];
m4_260 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, v2[''First''])", span="588-588"];
m4_261 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(null, v2[''Second''])", span="589-589"];
m4_262 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, v2[''Third''])", span="590-590"];
m4_263 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()", span="569-569"];
m4_237 [cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.JsonConvert.PopulateObject(string, object, Newtonsoft.Json.JsonSerializerSettings)", span="938-938"];
m4_426 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithBadItems()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithBadItems()", span="1024-1024"];
m4_427 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithBadItems()", file="JsonSerializerCollectionsTests.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[[1,1,1],[1,1,2]],[[1,2,1],[1,2,2]],[[2,1,1],[2,1,2]],[[2,2,1],{}]],''''After'''':''''After!''''}''", span="1026-1026"];
m4_428 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithBadItems()", file="JsonSerializerCollectionsTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<Array3D>(json), ''Unexpected token when deserializing multidimensional array: StartObject. Path 'Coordinates[3][1]', line 1, position 99.'')", span="1028-1028"];
m4_429 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithBadItems()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithBadItems()", span="1024-1024"];
m4_618 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()", span="1437-1437"];
m4_619 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()", file="JsonSerializerCollectionsTests.cs", label="Product p1 = new Product\r\n            {\r\n                Name = ''Product 1'',\r\n                Price = 99.95m,\r\n                ExpiryDate = new DateTime(2000, 12, 29, 0, 0, 0, DateTimeKind.Utc),\r\n            }", span="1439-1444"];
m4_620 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()", file="JsonSerializerCollectionsTests.cs", label="Product p2 = new Product\r\n            {\r\n                Name = ''Product 2'',\r\n                Price = 12.50m,\r\n                ExpiryDate = new DateTime(2009, 7, 31, 0, 0, 0, DateTimeKind.Utc),\r\n            }", span="1445-1450"];
m4_622 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()", file="JsonSerializerCollectionsTests.cs", label="products.Add(p1)", span="1453-1453"];
m4_621 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()", file="JsonSerializerCollectionsTests.cs", label="List<Product> products = new List<Product>()", span="1452-1452"];
m4_623 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()", file="JsonSerializerCollectionsTests.cs", label="products.Add(p2)", span="1454-1454"];
m4_624 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()", file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(products, Formatting.Indented)", span="1456-1456"];
m4_625 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()", file="JsonSerializerCollectionsTests.cs", label="StringAssert.AreEqual(@''[\r\n  {\r\n    ''''Name'''': ''''Product 1'''',\r\n    ''''ExpiryDate'''': ''''2000-12-29T00:00:00Z'''',\r\n    ''''Price'''': 99.95,\r\n    ''''Sizes'''': null\r\n  },\r\n  {\r\n    ''''Name'''': ''''Product 2'''',\r\n    ''''ExpiryDate'''': ''''2009-07-31T00:00:00Z'''',\r\n    ''''Price'''': 12.50,\r\n    ''''Sizes'''': null\r\n  }\r\n]'', json)", span="1472-1485"];
m4_626 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()", span="1437-1437"];
m4_512 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", span="717-717"];
m4_596 [cluster="Newtonsoft.Json.Tests.Serialization.NonGenericItem.NonGenericItem()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.NonGenericItem.NonGenericItem()", span="1600-1600"];
m4_185 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m4_28 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>.System.Collections.IEnumerable.GetEnumerator()", span="119-119"];
m4_29 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="return GetEnumerator();", span="121-121"];
m4_30 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>.System.Collections.IEnumerable.GetEnumerator()", span="119-119"];
m4_433 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooFewItems()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooFewItems()", span="1032-1032"];
m4_434 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooFewItems()", file="JsonSerializerCollectionsTests.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[[1,1,1],[1,1]],[[1,2,1],[1,2,2]],[[2,1,1],[2,1,2]],[[2,2,1],[2,2,2]]],''''After'''':''''After!''''}''", span="1034-1034"];
m4_435 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooFewItems()", file="JsonSerializerCollectionsTests.cs", label="ExceptionAssert.Throws<Exception>(() => JsonConvert.DeserializeObject<Array3D>(json), ''Cannot deserialize non-cubical array as multidimensional array.'')", span="1036-1036"];
m4_436 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooFewItems()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooFewItems()", span="1032-1032"];
m4_250 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIList()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIList()", span="562-562"];
m4_251 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIList()", file="JsonSerializerCollectionsTests.cs", label="IList list = JsonConvert.DeserializeObject<IList>(''['1', 'two', 'III']'')", span="564-564"];
m4_252 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIList()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, list.Count)", span="565-565"];
m4_253 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIList()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIList()", span="562-562"];
m4_61 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializePrivateListCtor()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializePrivateListCtor()", span="182-182"];
m4_62 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializePrivateListCtor()", file="JsonSerializerCollectionsTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<PrivateDefaultCtorList<int>>(''[1,2]''), ''Unable to find a constructor to use for type Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests+PrivateDefaultCtorList`1[System.Int32]. Path '', line 1, position 1.'')", span="184-184"];
m4_63 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializePrivateListCtor()", file="JsonSerializerCollectionsTests.cs", label="var list = JsonConvert.DeserializeObject<PrivateDefaultCtorList<int>>(''[1,2]'', new JsonSerializerSettings\r\n            {\r\n                ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor\r\n            })", span="186-189"];
m4_64 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializePrivateListCtor()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, list.Count)", span="191-191"];
m4_65 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializePrivateListCtor()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializePrivateListCtor()", span="182-182"];
m4_51 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor_Failure()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor_Failure()", span="163-163"];
m4_52 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor_Failure()", file="JsonSerializerCollectionsTests.cs", label="string json = @''[\r\n  ''''One'''',\r\n  ''''II'''',\r\n  ''''3''''\r\n]''", span="165-169"];
m4_53 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor_Failure()", file="JsonSerializerCollectionsTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<EnumerableClassFailure<string>>(json), ''Cannot create and populate list type Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests+EnumerableClassFailure`1[System.String]. Path '', line 1, position 1.'')", span="171-171"];
m4_54 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor_Failure()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor_Failure()", span="163-163"];
m4_341 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray2D()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray2D()", span="800-800"];
m4_342 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray2D()", file="JsonSerializerCollectionsTests.cs", label="Array2D aa = new Array2D()", span="802-802"];
m4_343 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray2D()", file="JsonSerializerCollectionsTests.cs", label="aa.Before = ''Before!''", span="803-803"];
m4_344 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray2D()", file="JsonSerializerCollectionsTests.cs", label="aa.After = ''After!''", span="804-804"];
m4_345 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray2D()", file="JsonSerializerCollectionsTests.cs", label="aa.Coordinates = new[,] { { 1, 1 }, { 1, 2 }, { 2, 1 }, { 2, 2 } }", span="805-805"];
m4_346 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray2D()", file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(aa)", span="807-807"];
m4_347 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray2D()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(@''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2],[2,1],[2,2]],''''After'''':''''After!''''}'', json)", span="809-809"];
m4_348 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray2D()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray2D()", span="800-800"];
m4_136 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)", span="308-308"];
m4_137 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)", file="JsonSerializerCollectionsTests.cs", label="return _dictionary.ContainsKey(key);", span="310-310"];
m4_138 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)", span="308-308"];
m4_150 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyDictionary()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyDictionary()", span="350-350"];
m4_151 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyDictionary()", file="JsonSerializerCollectionsTests.cs", label="IDictionary<string, int> d = new Dictionary<string, int>\r\n            {\r\n                { ''one'', 1 },\r\n                { ''two'', 2 }\r\n            }", span="352-356"];
m4_152 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyDictionary()", file="JsonSerializerCollectionsTests.cs", label="CustomReadOnlyDictionary<string, int> dic = new CustomReadOnlyDictionary<string, int>(d)", span="358-358"];
m4_153 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyDictionary()", file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(dic, Formatting.Indented)", span="360-360"];
m4_154 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyDictionary()", file="JsonSerializerCollectionsTests.cs", label="StringAssert.AreEqual(@''{\r\n  ''''one'''': 1,\r\n  ''''two'''': 2\r\n}'', json)", span="361-364"];
m4_155 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyDictionary()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyDictionary()", span="350-350"];
m4_350 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3D()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3D()", span="813-813"];
m4_351 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3D()", file="JsonSerializerCollectionsTests.cs", label="Array3D aa = new Array3D()", span="815-815"];
m4_352 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3D()", file="JsonSerializerCollectionsTests.cs", label="aa.Before = ''Before!''", span="816-816"];
m4_353 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3D()", file="JsonSerializerCollectionsTests.cs", label="aa.After = ''After!''", span="817-817"];
m4_354 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3D()", file="JsonSerializerCollectionsTests.cs", label="aa.Coordinates = new[, ,] { { { 1, 1, 1 }, { 1, 1, 2 } }, { { 1, 2, 1 }, { 1, 2, 2 } }, { { 2, 1, 1 }, { 2, 1, 2 } }, { { 2, 2, 1 }, { 2, 2, 2 } } }", span="818-818"];
m4_355 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3D()", file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(aa)", span="820-820"];
m4_356 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3D()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(@''{''''Before'''':''''Before!'''',''''Coordinates'''':[[[1,1,1],[1,1,2]],[[1,2,1],[1,2,2]],[[2,1,1],[2,1,2]],[[2,2,1],[2,2,2]]],''''After'''':''''After!''''}'', json)", span="822-822"];
m4_357 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3D()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3D()", span="813-813"];
m4_664 [cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="1639-1639"];
m4_665 [cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerCollectionsTests.cs", label="writer.WriteValue(value)", span="1641-1641"];
m4_666 [cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="1639-1639"];
m4_40 [cluster="System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", span="0-0"];
m4_112 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollection()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollection()", span="264-264"];
m4_113 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollection()", file="JsonSerializerCollectionsTests.cs", label="ReadOnlyCollection<int> list = JsonConvert.DeserializeObject<ReadOnlyCollection<int>>(''[1,2,3]'')", span="266-266"];
m4_114 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollection()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, list.Count)", span="268-268"];
m4_115 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollection()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, list[0])", span="270-270"];
m4_116 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollection()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, list[1])", span="271-271"];
m4_117 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollection()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, list[2])", span="272-272"];
m4_118 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollection()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollection()", span="264-264"];
m4_161 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.GetEnumerator()", span="381-381"];
m4_162 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="return _values.GetEnumerator();", span="383-383"];
m4_163 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.GetEnumerator()", span="381-381"];
m4_20 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>.EnumerableClass(System.Collections.Generic.IEnumerable<T>)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>.EnumerableClass(System.Collections.Generic.IEnumerable<T>)", span="109-109"];
m4_21 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>.EnumerableClass(System.Collections.Generic.IEnumerable<T>)", file="JsonSerializerCollectionsTests.cs", label="_values = new List<T>(values)", span="111-111"];
m4_22 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>.EnumerableClass(System.Collections.Generic.IEnumerable<T>)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>.EnumerableClass(System.Collections.Generic.IEnumerable<T>)", span="109-109"];
m4_572 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", span="817-817"];
m4_90 [cluster="System.DateTime.Parse(string, System.IFormatProvider)", file="JsonSerializerCollectionsTests.cs", label="Entry System.DateTime.Parse(string, System.IFormatProvider)", span="0-0"];
m4_245 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIDictionary()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIDictionary()", span="554-554"];
m4_246 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIDictionary()", file="JsonSerializerCollectionsTests.cs", label="IDictionary dictionary = JsonConvert.DeserializeObject<IDictionary>(''{'name':'value!'}'')", span="556-556"];
m4_247 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIDictionary()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, dictionary.Count)", span="557-557"];
m4_248 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIDictionary()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''value!'', dictionary[''name''])", span="558-558"];
m4_249 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIDictionary()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIDictionary()", span="554-554"];
m4_575 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="72-72"];
m4_67 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="802-802"];
m4_578 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", span="1381-1381"];
m4_579 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonSerializerCollectionsTests.cs", label="string json", span="1383-1383"];
m4_580 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonSerializerCollectionsTests.cs", label="GenericClass<GenericItem<string>, string> foo1 = new GenericClass<GenericItem<string>, string>()", span="1385-1385"];
m4_581 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonSerializerCollectionsTests.cs", label="foo1.Items.Add(new GenericItem<string> { Value = ''Hello'' })", span="1386-1386"];
m4_582 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonSerializerCollectionsTests.cs", label="json = JsonConvert.SerializeObject(new { selectList = foo1 })", span="1388-1388"];
m4_583 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(@''{''''selectList'''':[{''''Value'''':''''Hello''''}]}'', json)", span="1389-1389"];
m4_584 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonSerializerCollectionsTests.cs", label="GenericClass<NonGenericItem, string> foo2 = new GenericClass<NonGenericItem, string>()", span="1391-1391"];
m4_585 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonSerializerCollectionsTests.cs", label="foo2.Items.Add(new NonGenericItem { Value = ''Hello'' })", span="1392-1392"];
m4_586 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonSerializerCollectionsTests.cs", label="json = JsonConvert.SerializeObject(new { selectList = foo2 })", span="1394-1394"];
m4_587 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(@''{''''selectList'''':[{''''Value'''':''''Hello''''}]}'', json)", span="1395-1395"];
m4_588 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonSerializerCollectionsTests.cs", label="NonGenericClass foo3 = new NonGenericClass()", span="1397-1397"];
m4_589 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonSerializerCollectionsTests.cs", label="foo3.Items.Add(new NonGenericItem { Value = ''Hello'' })", span="1398-1398"];
m4_590 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonSerializerCollectionsTests.cs", label="json = JsonConvert.SerializeObject(new { selectList = foo3 })", span="1400-1400"];
m4_591 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(@''{''''selectList'''':[{''''Value'''':''''Hello''''}]}'', json)", span="1401-1401"];
m4_592 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", span="1381-1381"];
m4_522 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", span="1290-1290"];
m4_523 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", file="JsonSerializerCollectionsTests.cs", label="string json = @''{''''action'''':''''Router'''',''''method'''':''''Navigate'''',''''data'''':[''''dashboard'''',[''''id'''', 1, ''''teststring'''', ''''test''''],{''''one'''':1}],''''type'''':''''rpc'''',''''tid'''':2}''", span="1292-1292"];
m4_524 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", file="JsonSerializerCollectionsTests.cs", label="ObjectArrayPropertyTest o = JsonConvert.DeserializeObject<ObjectArrayPropertyTest>(json)", span="1294-1294"];
m4_525 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''Router'', o.Action)", span="1296-1296"];
m4_526 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''Navigate'', o.Method)", span="1297-1297"];
m4_527 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, o.Data.Length)", span="1298-1298"];
m4_528 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''dashboard'', o.Data[0])", span="1299-1299"];
m4_529 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", file="JsonSerializerCollectionsTests.cs", label="CustomAssert.IsInstanceOfType(typeof(JArray), o.Data[1])", span="1300-1300"];
m4_530 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(4, ((JArray)o.Data[1]).Count)", span="1301-1301"];
m4_531 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", file="JsonSerializerCollectionsTests.cs", label="CustomAssert.IsInstanceOfType(typeof(JObject), o.Data[2])", span="1302-1302"];
m4_532 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, ((JObject)o.Data[2]).Count)", span="1303-1303"];
m4_533 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, (int)((JObject)o.Data[2])[''one''])", span="1304-1304"];
m4_534 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", span="1290-1290"];
m4_500 [cluster="Newtonsoft.Json.Tests.TestObjects.Event1.Event1()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Event1.Event1()", span="31-31"];
m4_235 [cluster="Newtonsoft.Json.Tests.TestObjects.Movie.Movie()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Movie.Movie()", span="30-30"];
m4_501 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", span="570-570"];
m4_31 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor()", span="126-126"];
m4_32 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor()", file="JsonSerializerCollectionsTests.cs", label="string json = @''[\r\n  1,\r\n  2,\r\n  null\r\n]''", span="128-132"];
m4_33 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor()", file="JsonSerializerCollectionsTests.cs", label="var result = JsonConvert.DeserializeObject<EnumerableClass<int?>>(json)", span="134-134"];
m4_34 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, result.Count())", span="136-136"];
m4_35 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, result.ElementAt(0))", span="137-137"];
m4_36 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, result.ElementAt(1))", span="138-138"];
m4_37 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(null, result.ElementAt(2))", span="139-139"];
m4_38 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor()", span="126-126"];
m4_380 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()", span="961-961"];
m4_381 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()", file="JsonSerializerCollectionsTests.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2],[2,1],[2,2]],''''After'''':''''After!''''}''", span="963-963"];
m4_382 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()", file="JsonSerializerCollectionsTests.cs", label="Array2D aa = JsonConvert.DeserializeObject<Array2D>(json)", span="965-965"];
m4_390 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(json, after)", span="976-976"];
m4_383 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''Before!'', aa.Before)", span="967-967"];
m4_384 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''After!'', aa.After)", span="968-968"];
m4_385 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(4, aa.Coordinates.GetLength(0))", span="969-969"];
m4_386 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, aa.Coordinates.GetLength(1))", span="970-970"];
m4_387 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, aa.Coordinates[0, 0])", span="971-971"];
m4_388 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, aa.Coordinates[1, 1])", span="972-972"];
m4_389 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()", file="JsonSerializerCollectionsTests.cs", label="string after = JsonConvert.SerializeObject(aa)", span="974-974"];
m4_391 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()", span="961-961"];
m4_593 [cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GenericClass()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GenericClass()", span="1609-1609"];
m4_653 [cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GenericClass()", file="JsonSerializerCollectionsTests.cs", label="Items = new List<T>()", span="1611-1611"];
m4_654 [cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GenericClass()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GenericClass()", span="1609-1609"];
m4_164 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.System.Collections.IEnumerable.GetEnumerator()", span="386-386"];
m4_165 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="return _values.GetEnumerator();", span="388-388"];
m4_166 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.System.Collections.IEnumerable.GetEnumerator()", span="386-386"];
m4_105 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollectionInterface()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollectionInterface()", span="252-252"];
m4_106 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollectionInterface()", file="JsonSerializerCollectionsTests.cs", label="IReadOnlyCollection<int> list = JsonConvert.DeserializeObject<IReadOnlyCollection<int>>(''[1,2,3]'')", span="254-254"];
m4_107 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollectionInterface()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, list.Count)", span="256-256"];
m4_108 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollectionInterface()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, list.ElementAt(0))", span="258-258"];
m4_109 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollectionInterface()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, list.ElementAt(1))", span="259-259"];
m4_110 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollectionInterface()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, list.ElementAt(2))", span="260-260"];
m4_111 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollectionInterface()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollectionInterface()", span="252-252"];
m4_678 [cluster="Newtonsoft.Json.JsonReader.Read()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.JsonReader.Read()", span="365-365"];
m4_649 [cluster="System.Collections.Generic.List<T>.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Generic.List<T>.GetEnumerator()", span="0-0"];
m4_227 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringListAppenderConverterTest()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringListAppenderConverterTest()", span="524-524"];
m4_228 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringListAppenderConverterTest()", file="JsonSerializerCollectionsTests.cs", label="Movie p = new Movie()", span="526-526"];
m4_229 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringListAppenderConverterTest()", file="JsonSerializerCollectionsTests.cs", label="p.ReleaseCountries = new List<string> { ''Existing'' }", span="527-527"];
m4_230 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringListAppenderConverterTest()", file="JsonSerializerCollectionsTests.cs", label="JsonConvert.PopulateObject(''{'ReleaseCountries':['Appended']}'', p, new JsonSerializerSettings\r\n            {\r\n                Converters = new List<JsonConverter> { new StringListAppenderConverter() }\r\n            })", span="529-532"];
m4_231 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringListAppenderConverterTest()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, p.ReleaseCountries.Count)", span="534-534"];
m4_232 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringListAppenderConverterTest()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''Existing'', p.ReleaseCountries[0])", span="535-535"];
m4_233 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringListAppenderConverterTest()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''Appended'', p.ReleaseCountries[1])", span="536-536"];
m4_234 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringListAppenderConverterTest()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringListAppenderConverterTest()", span="524-524"];
m4_238 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringAppenderConverterTest()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringAppenderConverterTest()", span="540-540"];
m4_239 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringAppenderConverterTest()", file="JsonSerializerCollectionsTests.cs", label="Movie p = new Movie()", span="542-542"];
m4_240 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringAppenderConverterTest()", file="JsonSerializerCollectionsTests.cs", label="p.Name = ''Existing,''", span="543-543"];
m4_241 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringAppenderConverterTest()", file="JsonSerializerCollectionsTests.cs", label="JsonConvert.PopulateObject(''{'Name':'Appended'}'', p, new JsonSerializerSettings\r\n            {\r\n                Converters = new List<JsonConverter> { new StringAppenderConverter() }\r\n            })", span="545-548"];
m4_242 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringAppenderConverterTest()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''Existing,Appended'', p.Name)", span="550-550"];
m4_243 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringAppenderConverterTest()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringAppenderConverterTest()", span="540-540"];
m4_502 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeTypeName3DArray()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeTypeName3DArray()", span="1175-1175"];
m4_503 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeTypeName3DArray()", file="JsonSerializerCollectionsTests.cs", label="Event1 e1 = new Event1\r\n            {\r\n                EventName = ''EventName!''\r\n            }", span="1177-1180"];
m4_504 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeTypeName3DArray()", file="JsonSerializerCollectionsTests.cs", label="Event1[,] array1 = new[,] { { e1, e1 }, { e1, e1 } }", span="1181-1181"];
m4_505 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeTypeName3DArray()", file="JsonSerializerCollectionsTests.cs", label="IList<Event1[,]> values1 = new List<Event1[,]>\r\n            {\r\n                array1,\r\n                array1\r\n            }", span="1182-1186"];
m4_506 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeTypeName3DArray()", file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(values1, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.All,\r\n                Formatting = Formatting.Indented\r\n            })", span="1188-1192"];
m4_507 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeTypeName3DArray()", file="JsonSerializerCollectionsTests.cs", label="StringAssert.AreEqual(@''{\r\n  ''''$type'''': ''''System.Collections.Generic.List`1[[Newtonsoft.Json.Tests.TestObjects.Event1[,], Newtonsoft.Json.Tests]], mscorlib'''',\r\n  ''''$values'''': [\r\n    {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Event1[,], Newtonsoft.Json.Tests'''',\r\n      ''''$values'''': [\r\n        [\r\n          {\r\n            ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Event1, Newtonsoft.Json.Tests'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          },\r\n          {\r\n            ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Event1, Newtonsoft.Json.Tests'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          }\r\n        ],\r\n        [\r\n          {\r\n            ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Event1, Newtonsoft.Json.Tests'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          },\r\n          {\r\n            ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Event1, Newtonsoft.Json.Tests'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          }\r\n        ]\r\n      ]\r\n    },\r\n    {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Event1[,], Newtonsoft.Json.Tests'''',\r\n      ''''$values'''': [\r\n        [\r\n          {\r\n            ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Event1, Newtonsoft.Json.Tests'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          },\r\n          {\r\n            ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Event1, Newtonsoft.Json.Tests'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          }\r\n        ],\r\n        [\r\n          {\r\n            ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Event1, Newtonsoft.Json.Tests'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          },\r\n          {\r\n            ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Event1, Newtonsoft.Json.Tests'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          }\r\n        ]\r\n      ]\r\n    }\r\n  ]\r\n}'', json)", span="1194-1264"];
m4_508 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeTypeName3DArray()", file="JsonSerializerCollectionsTests.cs", label="IList<Event1[,]> values2 = (IList<Event1[,]>)JsonConvert.DeserializeObject(json, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.All\r\n            })", span="1266-1269"];
m4_509 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeTypeName3DArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, values2.Count)", span="1271-1271"];
m4_510 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeTypeName3DArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''EventName!'', values2[0][0, 0].EventName)", span="1272-1272"];
m4_511 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeTypeName3DArray()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeTypeName3DArray()", span="1175-1175"];
m4_573 [cluster="System.IO.StringWriter.GetStringBuilder()", file="JsonSerializerCollectionsTests.cs", label="Entry System.IO.StringWriter.GetStringBuilder()", span="0-0"];
m4_570 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="433-433"];
m4_558 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomCollectionSerialization()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomCollectionSerialization()", span="1356-1356"];
m4_559 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomCollectionSerialization()", file="JsonSerializerCollectionsTests.cs", label="ProductCollection collection = new ProductCollection()\r\n            {\r\n                new Product() { Name = ''Test1'' },\r\n                new Product() { Name = ''Test2'' },\r\n                new Product() { Name = ''Test3'' }\r\n            }", span="1358-1363"];
m4_560 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomCollectionSerialization()", file="JsonSerializerCollectionsTests.cs", label="JsonSerializer jsonSerializer = new JsonSerializer()", span="1365-1365"];
m4_563 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomCollectionSerialization()", file="JsonSerializerCollectionsTests.cs", label="jsonSerializer.Serialize(sw, collection)", span="1370-1370"];
m4_566 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomCollectionSerialization()", file="JsonSerializerCollectionsTests.cs", label="CollectionAssert.AreEqual(collection, collectionNew)", span="1377-1377"];
m4_561 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomCollectionSerialization()", file="JsonSerializerCollectionsTests.cs", label="jsonSerializer.ReferenceLoopHandling = ReferenceLoopHandling.Ignore", span="1366-1366"];
m4_565 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomCollectionSerialization()", file="JsonSerializerCollectionsTests.cs", label="ProductCollection collectionNew = (ProductCollection)jsonSerializer.Deserialize(new JsonTextReader(new StringReader(sw.GetStringBuilder().ToString())), typeof(ProductCollection))", span="1375-1375"];
m4_562 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomCollectionSerialization()", file="JsonSerializerCollectionsTests.cs", label="StringWriter sw = new StringWriter()", span="1368-1368"];
m4_564 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomCollectionSerialization()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(@''[{''''Name'''':''''Test1'''',''''ExpiryDate'''':''''2000-01-01T00:00:00Z'''',''''Price'''':0.0,''''Sizes'''':null},{''''Name'''':''''Test2'''',''''ExpiryDate'''':''''2000-01-01T00:00:00Z'''',''''Price'''':0.0,''''Sizes'''':null},{''''Name'''':''''Test3'''',''''ExpiryDate'''':''''2000-01-01T00:00:00Z'''',''''Price'''':0.0,''''Sizes'''':null}]'',\r\n                sw.GetStringBuilder().ToString())", span="1372-1373"];
m4_567 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomCollectionSerialization()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomCollectionSerialization()", span="1356-1356"];
m4_147 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator()", span="343-343"];
m4_148 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="return _dictionary.GetEnumerator();", span="345-345"];
m4_149 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator()", span="343-343"];
m4_440 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeEmpty3DArray()", span="1040-1040"];
m4_441 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="Array3D aa = new Array3D()", span="1042-1042"];
m4_442 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="aa.Before = ''Before!''", span="1043-1043"];
m4_443 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="aa.After = ''After!''", span="1044-1044"];
m4_444 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="aa.Coordinates = new int[0, 0, 0]", span="1045-1045"];
m4_445 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(aa)", span="1047-1047"];
m4_446 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(@''{''''Before'''':''''Before!'''',''''Coordinates'''':[],''''After'''':''''After!''''}'', json)", span="1049-1049"];
m4_447 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeEmpty3DArray()", span="1040-1040"];
m4_76 [cluster="System.Collections.Generic.List<T>.Add(T)", file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m4_244 [cluster="Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.StringAppenderConverter()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.StringAppenderConverter()", span="1668-1668"];
m4_368 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()", span="892-892"];
m4_369 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()", file="JsonSerializerCollectionsTests.cs", label="string json = @''{\r\n  ''''Before'''': ''''Before!'''',\r\n  ''''Coordinates'''': [\r\n    [\r\n      [\r\n        1.0,\r\n        1.0,\r\n        1.0\r\n      ],\r\n      [\r\n        1.0,\r\n        1.0,\r\n        2.0\r\n      ]\r\n    ],\r\n    [\r\n      [\r\n        1.0,\r\n        2.0,\r\n        1.0\r\n      ],\r\n      [\r\n        1.0,\r\n        2.0,\r\n        2.0\r\n      ]\r\n    ],\r\n    [\r\n      [\r\n        2.0,\r\n        1.0,\r\n        1.0\r\n      ],\r\n      [\r\n        2.0,\r\n        1.0,\r\n        2.0\r\n      ]\r\n    ],\r\n    [\r\n      [\r\n        2.0,\r\n        2.0,\r\n        1.0\r\n      ],\r\n      [\r\n        2.0,\r\n        2.0,\r\n        2.0\r\n      ]\r\n    ]\r\n  ],\r\n  ''''After'''': ''''After!''''\r\n}''", span="894-947"];
m4_370 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()", file="JsonSerializerCollectionsTests.cs", label="Array3DWithConverter aa = JsonConvert.DeserializeObject<Array3DWithConverter>(json)", span="949-949"];
m4_371 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''Before!'', aa.Before)", span="951-951"];
m4_372 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''After!'', aa.After)", span="952-952"];
m4_373 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(4, aa.Coordinates.GetLength(0))", span="953-953"];
m4_374 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, aa.Coordinates.GetLength(1))", span="954-954"];
m4_375 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, aa.Coordinates.GetLength(2))", span="955-955"];
m4_376 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, aa.Coordinates[0, 0, 0])", span="956-956"];
m4_377 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, aa.Coordinates[1, 1, 1])", span="957-957"];
m4_378 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()", span="892-892"];
m4_637 [cluster="System.Console.WriteLine(string)", file="JsonSerializerCollectionsTests.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m4_156 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m4_15 [cluster="Unk.AreEqual", file="JsonSerializerCollectionsTests.cs", label="Entry Unk.AreEqual", span=""];
m4_264 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()", span="595-595"];
m4_265 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()", file="JsonSerializerCollectionsTests.cs", label="IDictionary<string, TestObjects.Component> components = new Dictionary<string, TestObjects.Component>\r\n            {\r\n                { ''Key!'', new TestObjects.Component() }\r\n            }", span="597-600"];
m4_266 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()", file="JsonSerializerCollectionsTests.cs", label="GameObject go = new GameObject\r\n            {\r\n                Components = new ConcurrentDictionary<string, TestObjects.Component>(components),\r\n                Id = ''Id!'',\r\n                Name = ''Name!''\r\n            }", span="601-606"];
m4_267 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()", file="JsonSerializerCollectionsTests.cs", label="string originalJson = JsonConvert.SerializeObject(go, Formatting.Indented)", span="608-608"];
m4_268 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()", file="JsonSerializerCollectionsTests.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Components'''': {\r\n    ''''Key!'''': {}\r\n  },\r\n  ''''Id'''': ''''Id!'''',\r\n  ''''Name'''': ''''Name!''''\r\n}'', originalJson)", span="610-616"];
m4_269 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()", file="JsonSerializerCollectionsTests.cs", label="GameObject newObject = JsonConvert.DeserializeObject<GameObject>(originalJson)", span="618-618"];
m4_270 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, newObject.Components.Count)", span="620-620"];
m4_271 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''Id!'', newObject.Id)", span="621-621"];
m4_272 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''Name!'', newObject.Name)", span="622-622"];
m4_273 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()", span="595-595"];
m4_274 [cluster="Newtonsoft.Json.Tests.TestObjects.Component.Component()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Component.Component()", span="34-34"];
m4_133 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.CustomReadOnlyDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.CustomReadOnlyDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="303-303"];
m4_134 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.CustomReadOnlyDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="JsonSerializerCollectionsTests.cs", label="_dictionary = dictionary", span="305-305"];
m4_135 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.CustomReadOnlyDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.CustomReadOnlyDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="303-303"];
m4_311 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", span="689-689"];
m4_312 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonSerializerCollectionsTests.cs", label="NonReadOnlyList = new List<int> { 1 }", span="691-691"];
m4_313 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonSerializerCollectionsTests.cs", label="NonReadOnlyDictionary = new Dictionary<string, int> { { ''first'', 2 } }", span="692-692"];
m4_314 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonSerializerCollectionsTests.cs", label="Array = new[] { 3 }", span="694-694"];
m4_315 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonSerializerCollectionsTests.cs", label="List = new ReadOnlyCollection<int>(new[] { 4 })", span="696-696"];
m4_316 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonSerializerCollectionsTests.cs", label="Dictionary = new ReadOnlyDictionary<string, int>(new Dictionary<string, int> { { ''first'', 5 } })", span="697-697"];
m4_317 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonSerializerCollectionsTests.cs", label="IReadOnlyCollection = new ReadOnlyCollection<int>(new[] { 6 })", span="699-699"];
m4_318 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonSerializerCollectionsTests.cs", label="ReadOnlyCollection = new ReadOnlyCollection<int>(new[] { 7 })", span="700-700"];
m4_319 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonSerializerCollectionsTests.cs", label="IReadOnlyList = new ReadOnlyCollection<int>(new[] { 8 })", span="701-701"];
m4_320 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonSerializerCollectionsTests.cs", label="IReadOnlyDictionary = new ReadOnlyDictionary<string, int>(new Dictionary<string, int> { { ''first'', 9 } })", span="703-703"];
m4_321 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonSerializerCollectionsTests.cs", label="ReadOnlyDictionary = new ReadOnlyDictionary<string, int>(new Dictionary<string, int> { { ''first'', 10 } })", span="704-704"];
m4_322 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", span="689-689"];
m4_399 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D_WithTooFewItems()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D_WithTooFewItems()", span="988-988"];
m4_400 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D_WithTooFewItems()", file="JsonSerializerCollectionsTests.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1],[2,1],[2,2]],''''After'''':''''After!''''}''", span="990-990"];
m4_401 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D_WithTooFewItems()", file="JsonSerializerCollectionsTests.cs", label="ExceptionAssert.Throws<Exception>(() => JsonConvert.DeserializeObject<Array2D>(json), ''Cannot deserialize non-cubical array as multidimensional array.'')", span="992-992"];
m4_402 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D_WithTooFewItems()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D_WithTooFewItems()", span="988-988"];
m4_610 [cluster="Newtonsoft.Json.Tests.TestObjects.ArticleCollection.ArticleCollection()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ArticleCollection.ArticleCollection()", span="29-29"];
m4_211 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", span="472-472"];
m4_212 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", file="JsonSerializerCollectionsTests.cs", label="DateTime dateTime = new DateTime(2000, 12, 1, 23, 1, 1, DateTimeKind.Utc)", span="474-474"];
m4_213 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", file="JsonSerializerCollectionsTests.cs", label="List<KeyValuePair<string, WagePerson>> list = new List<KeyValuePair<string, WagePerson>>()", span="476-476"];
m4_214 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", file="JsonSerializerCollectionsTests.cs", label="list.Add(new KeyValuePair<string, WagePerson>(''key1'', new WagePerson\r\n            {\r\n                BirthDate = dateTime,\r\n                Department = ''Department1'',\r\n                LastModified = dateTime,\r\n                HourlyWage = 1\r\n            }))", span="477-483"];
m4_215 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", file="JsonSerializerCollectionsTests.cs", label="list.Add(new KeyValuePair<string, WagePerson>(''key2'', new WagePerson\r\n            {\r\n                BirthDate = dateTime,\r\n                Department = ''Department2'',\r\n                LastModified = dateTime,\r\n                HourlyWage = 2\r\n            }))", span="484-490"];
m4_216 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(list, Formatting.Indented)", span="492-492"];
m4_217 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", file="JsonSerializerCollectionsTests.cs", label="StringAssert.AreEqual(@''[\r\n  {\r\n    ''''Key'''': ''''key1'''',\r\n    ''''Value'''': {\r\n      ''''HourlyWage'''': 1.0,\r\n      ''''Name'''': null,\r\n      ''''BirthDate'''': ''''2000-12-01T23:01:01Z'''',\r\n      ''''LastModified'''': ''''2000-12-01T23:01:01Z''''\r\n    }\r\n  },\r\n  {\r\n    ''''Key'''': ''''key2'''',\r\n    ''''Value'''': {\r\n      ''''HourlyWage'''': 2.0,\r\n      ''''Name'''': null,\r\n      ''''BirthDate'''': ''''2000-12-01T23:01:01Z'''',\r\n      ''''LastModified'''': ''''2000-12-01T23:01:01Z''''\r\n    }\r\n  }\r\n]'', json)", span="494-513"];
m4_218 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", file="JsonSerializerCollectionsTests.cs", label="List<KeyValuePair<string, WagePerson>> result = JsonConvert.DeserializeObject<List<KeyValuePair<string, WagePerson>>>(json)", span="515-515"];
m4_219 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, result.Count)", span="516-516"];
m4_220 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''key1'', result[0].Key)", span="517-517"];
m4_221 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, result[0].Value.HourlyWage)", span="518-518"];
m4_222 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''key2'', result[1].Key)", span="519-519"];
m4_223 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, result[1].Value.HourlyWage)", span="520-520"];
m4_224 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", span="472-472"];
m4_77 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializePrivateListConstructor()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializePrivateListConstructor()", span="208-208"];
m4_78 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializePrivateListConstructor()", file="JsonSerializerCollectionsTests.cs", label="var list = JsonConvert.DeserializeObject<PrivateDefaultCtorWithIEnumerableCtorList<int>>(''[1,2]'')", span="210-210"];
m4_79 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializePrivateListConstructor()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, list.Count)", span="212-212"];
m4_80 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializePrivateListConstructor()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, list[0])", span="213-213"];
m4_81 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializePrivateListConstructor()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, list[1])", span="214-214"];
m4_82 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializePrivateListConstructor()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(0, list[2])", span="215-215"];
m4_83 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializePrivateListConstructor()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializePrivateListConstructor()", span="208-208"];
m4_627 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeGenericList()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeGenericList()", span="1489-1489"];
m4_628 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeGenericList()", file="JsonSerializerCollectionsTests.cs", label="string json = @''[\r\n        {\r\n          ''''Name'''': ''''Product 1'''',\r\n          ''''ExpiryDate'''': ''''\/Date(978048000000)\/'''',\r\n          ''''Price'''': 99.95,\r\n          ''''Sizes'''': null\r\n        },\r\n        {\r\n          ''''Name'''': ''''Product 2'''',\r\n          ''''ExpiryDate'''': ''''\/Date(1248998400000)\/'''',\r\n          ''''Price'''': 12.50,\r\n          ''''Sizes'''': null\r\n        }\r\n      ]''", span="1491-1504"];
m4_629 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeGenericList()", file="JsonSerializerCollectionsTests.cs", label="List<Product> products = JsonConvert.DeserializeObject<List<Product>>(json)", span="1506-1506"];
m4_630 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeGenericList()", file="JsonSerializerCollectionsTests.cs", label="Console.WriteLine(products.Count)", span="1508-1508"];
m4_631 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeGenericList()", file="JsonSerializerCollectionsTests.cs", label="Product p1 = products[0]", span="1511-1511"];
m4_633 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeGenericList()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, products.Count)", span="1516-1516"];
m4_634 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeGenericList()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''Product 1'', products[0].Name)", span="1517-1517"];
m4_632 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeGenericList()", file="JsonSerializerCollectionsTests.cs", label="Console.WriteLine(p1.Name)", span="1513-1513"];
m4_635 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeGenericList()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeGenericList()", span="1489-1489"];
m4_139 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m4_595 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m4_638 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyIntegerList()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyIntegerList()", span="1522-1522"];
m4_639 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyIntegerList()", file="JsonSerializerCollectionsTests.cs", label="ReadOnlyIntegerList l = new ReadOnlyIntegerList(new List<int>\r\n            {\r\n                1,\r\n                2,\r\n                3,\r\n                int.MaxValue\r\n            })", span="1524-1530"];
m4_640 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyIntegerList()", file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(l, Formatting.Indented)", span="1532-1532"];
m4_641 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyIntegerList()", file="JsonSerializerCollectionsTests.cs", label="StringAssert.AreEqual(@''[\r\n  1,\r\n  2,\r\n  3,\r\n  2147483647\r\n]'', json)", span="1534-1539"];
m4_642 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyIntegerList()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyIntegerList()", span="1522-1522"];
m4_448 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()", span="1053-1053"];
m4_449 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[],''''After'''':''''After!''''}''", span="1055-1055"];
m4_450 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="Array3D aa = JsonConvert.DeserializeObject<Array3D>(json)", span="1057-1057"];
m4_457 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(json, after)", span="1067-1067"];
m4_451 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''Before!'', aa.Before)", span="1059-1059"];
m4_452 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''After!'', aa.After)", span="1060-1060"];
m4_453 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(0, aa.Coordinates.GetLength(0))", span="1061-1061"];
m4_454 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(0, aa.Coordinates.GetLength(1))", span="1062-1062"];
m4_455 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(0, aa.Coordinates.GetLength(2))", span="1063-1063"];
m4_456 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="string after = JsonConvert.SerializeObject(aa)", span="1065-1065"];
m4_458 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()", span="1053-1053"];
m4_140 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="318-318"];
m4_141 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="JsonSerializerCollectionsTests.cs", label="return _dictionary.TryGetValue(key, out value);", span="320-320"];
m4_142 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="318-318"];
m4_276 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>)", file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>)", span="0-0"];
m4_419 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooManyItems()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooManyItems()", span="1016-1016"];
m4_420 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooManyItems()", file="JsonSerializerCollectionsTests.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[[1,1,1],[1,1,2,1]],[[1,2,1],[1,2,2]],[[2,1,1],[2,1,2]],[[2,2,1],[2,2,2]]],''''After'''':''''After!''''}''", span="1018-1018"];
m4_421 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooManyItems()", file="JsonSerializerCollectionsTests.cs", label="ExceptionAssert.Throws<Exception>(() => JsonConvert.DeserializeObject<Array3D>(json), ''Cannot deserialize non-cubical array as multidimensional array.'')", span="1020-1020"];
m4_422 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooManyItems()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooManyItems()", span="1016-1016"];
m4_167 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyCollection()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyCollection()", span="393-393"];
m4_168 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyCollection()", file="JsonSerializerCollectionsTests.cs", label="IList<int> l = new List<int>\r\n            {\r\n                1,\r\n                2,\r\n                3\r\n            }", span="395-400"];
m4_169 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyCollection()", file="JsonSerializerCollectionsTests.cs", label="CustomReadOnlyCollection<int> list = new CustomReadOnlyCollection<int>(l)", span="402-402"];
m4_170 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyCollection()", file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(list, Formatting.Indented)", span="404-404"];
m4_171 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyCollection()", file="JsonSerializerCollectionsTests.cs", label="StringAssert.AreEqual(@''[\r\n  1,\r\n  2,\r\n  3\r\n]'', json)", span="405-409"];
m4_172 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyCollection()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyCollection()", span="393-393"];
m4_157 [cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="324-324"];
m4_470 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Entry lambda expression", span="1083-1083"];
m4_57 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="JsonConvert.DeserializeObject<EnumerableClassFailure<string>>(json)", span="171-171"];
m4_56 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Entry lambda expression", span="171-171"];
m4_58 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Exit lambda expression", span="171-171"];
m4_68 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Entry lambda expression", span="184-184"];
m4_69 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="JsonConvert.DeserializeObject<PrivateDefaultCtorList<int>>(''[1,2]'')", span="184-184"];
m4_70 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Exit lambda expression", span="184-184"];
m4_309 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="JsonConvert.DeserializeObject<IList<KeyValuePair<string, IList<string>>>>(json)", span="668-668"];
m4_308 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Entry lambda expression", span="668-668"];
m4_310 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Exit lambda expression", span="668-668"];
m4_397 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="JsonConvert.DeserializeObject<Array2D>(json)", span="984-984"];
m4_396 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Entry lambda expression", span="984-984"];
m4_398 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Exit lambda expression", span="984-984"];
m4_404 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="JsonConvert.DeserializeObject<Array2D>(json)", span="992-992"];
m4_403 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Entry lambda expression", span="992-992"];
m4_405 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Exit lambda expression", span="992-992"];
m4_424 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="JsonConvert.DeserializeObject<Array3D>(json)", span="1020-1020"];
m4_423 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Entry lambda expression", span="1020-1020"];
m4_425 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Exit lambda expression", span="1020-1020"];
m4_431 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="JsonConvert.DeserializeObject<Array3D>(json)", span="1028-1028"];
m4_430 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Entry lambda expression", span="1028-1028"];
m4_432 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Exit lambda expression", span="1028-1028"];
m4_438 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="JsonConvert.DeserializeObject<Array3D>(json)", span="1036-1036"];
m4_437 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Entry lambda expression", span="1036-1036"];
m4_439 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Exit lambda expression", span="1036-1036"];
m4_464 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="JsonConvert.DeserializeObject<Array3D>(json)", span="1075-1075"];
m4_463 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Entry lambda expression", span="1075-1075"];
m4_465 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Exit lambda expression", span="1075-1075"];
m4_471 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="JsonConvert.DeserializeObject<Array3D>(json)", span="1083-1083"];
m4_472 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Exit lambda expression", span="1083-1083"];
m4_97 [cluster="object.GetType()", file="JsonSerializerCollectionsTests.cs", label="Entry object.GetType()", span="0-0"];
m4_330 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()", span="750-750"];
m4_331 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()", file="JsonSerializerCollectionsTests.cs", label="string json = @''{\r\n  ''''NonReadOnlyList'''': [\r\n    11\r\n  ],\r\n  ''''NonReadOnlyDictionary'''': {\r\n    ''''first'''': 12\r\n  },\r\n  ''''Array'''': [\r\n    13\r\n  ],\r\n  ''''List'''': [\r\n    14\r\n  ],\r\n  ''''Dictionary'''': {\r\n    ''''first'''': 15\r\n  },\r\n  ''''IReadOnlyCollection'''': [\r\n    16\r\n  ],\r\n  ''''ReadOnlyCollection'''': [\r\n    17\r\n  ],\r\n  ''''IReadOnlyList'''': [\r\n    18\r\n  ],\r\n  ''''IReadOnlyDictionary'''': {\r\n    ''''first'''': 19\r\n  },\r\n  ''''ReadOnlyDictionary'''': {\r\n    ''''first'''': 20\r\n  }\r\n}''", span="752-783"];
m4_332 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()", file="JsonSerializerCollectionsTests.cs", label="var c2 = JsonConvert.DeserializeObject<PopulateReadOnlyTestClass>(json)", span="785-785"];
m4_333 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, c2.NonReadOnlyDictionary.Count)", span="787-787"];
m4_334 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(12, c2.NonReadOnlyDictionary[''first''])", span="788-788"];
m4_335 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, c2.NonReadOnlyList.Count)", span="790-790"];
m4_336 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, c2.NonReadOnlyList[0])", span="791-791"];
m4_337 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(11, c2.NonReadOnlyList[1])", span="792-792"];
m4_338 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, c2.Array.Count)", span="794-794"];
m4_339 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(13, c2.Array[0])", span="795-795"];
m4_340 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()", span="750-750"];
m4_643 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.ReadOnlyIntegerList(System.Collections.Generic.List<int>)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.ReadOnlyIntegerList(System.Collections.Generic.List<int>)", span="1549-1549"];
m4_644 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.ReadOnlyIntegerList(System.Collections.Generic.List<int>)", file="JsonSerializerCollectionsTests.cs", label="_list = l", span="1551-1551"];
m4_645 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.ReadOnlyIntegerList(System.Collections.Generic.List<int>)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.ReadOnlyIntegerList(System.Collections.Generic.List<int>)", span="1549-1549"];
m4_682 [cluster="Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="1670-1670"];
m4_683 [cluster="Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerCollectionsTests.cs", label="writer.WriteValue(value)", span="1672-1672"];
m4_684 [cluster="Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="1670-1670"];
m4_392 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D_WithTooManyItems()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D_WithTooManyItems()", span="980-980"];
m4_393 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D_WithTooManyItems()", file="JsonSerializerCollectionsTests.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2,3],[2,1],[2,2]],''''After'''':''''After!''''}''", span="982-982"];
m4_394 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D_WithTooManyItems()", file="JsonSerializerCollectionsTests.cs", label="ExceptionAssert.Throws<Exception>(() => JsonConvert.DeserializeObject<Array2D>(json), ''Cannot deserialize non-cubical array as multidimensional array.'')", span="984-984"];
m4_395 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D_WithTooManyItems()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D_WithTooManyItems()", span="980-980"];
m4_367 [cluster="Newtonsoft.Json.Tests.Serialization.Array3DWithConverter.Array3DWithConverter()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Array3DWithConverter.Array3DWithConverter()", span="1585-1585"];
m4_27 [cluster="System.Collections.Generic.IEnumerable<T>.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Generic.IEnumerable<T>.GetEnumerator()", span="0-0"];
m4_126 [cluster="Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", span="294-294"];
m4_576 [cluster="System.IO.StringReader.StringReader(string)", file="JsonSerializerCollectionsTests.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m4_127 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionary()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionary()", span="289-289"];
m4_128 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionary()", file="JsonSerializerCollectionsTests.cs", label="ReadOnlyDictionary<string, int> dic = JsonConvert.DeserializeObject<ReadOnlyDictionary<string, int>>(''{'one':1,'two':2}'')", span="291-291"];
m4_129 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionary()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, dic.Count)", span="293-293"];
m4_130 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionary()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, dic[''one''])", span="295-295"];
m4_131 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionary()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, dic[''two''])", span="296-296"];
m4_132 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionary()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionary()", span="289-289"];
m4_379 [cluster="System.Array.GetLength(int)", file="JsonSerializerCollectionsTests.cs", label="Entry System.Array.GetLength(int)", span="0-0"];
m4_557 [cluster="Newtonsoft.Json.Tests.TestObjects.PhoneNumber.PhoneNumber(string)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.PhoneNumber.PhoneNumber(string)", span="31-31"];
m4_44 [cluster="System.Collections.Generic.List<T>.List()", file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m4_186 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericListTestClass.GenericListTestClass()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericListTestClass.GenericListTestClass()", span="432-432"];
m4_187 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericListTestClass.GenericListTestClass()", file="JsonSerializerCollectionsTests.cs", label="GenericList = new List<string>()", span="434-434"];
m4_188 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericListTestClass.GenericListTestClass()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericListTestClass.GenericListTestClass()", span="432-432"];
m4_277 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", span="627-627"];
m4_278 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="string json = @''[ { ''''Value'''': [ ''''1'''', ''''2'''' ], ''''Key'''': ''''aaa'''', ''''BadContent'''': [ 0 ] }, { ''''Value'''': [ ''''3'''', ''''4'''' ], ''''Key'''': ''''bbb'''' } ]''", span="629-629"];
m4_279 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="IList<KeyValuePair<string, IList<string>>> values = JsonConvert.DeserializeObject<IList<KeyValuePair<string, IList<string>>>>(json)", span="631-631"];
m4_280 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, values.Count)", span="633-633"];
m4_281 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''aaa'', values[0].Key)", span="634-634"];
m4_282 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, values[0].Value.Count)", span="635-635"];
m4_283 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''1'', values[0].Value[0])", span="636-636"];
m4_284 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''2'', values[0].Value[1])", span="637-637"];
m4_285 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''bbb'', values[1].Key)", span="638-638"];
m4_286 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, values[1].Value.Count)", span="639-639"];
m4_287 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''3'', values[1].Value[0])", span="640-640"];
m4_288 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''4'', values[1].Value[1])", span="641-641"];
m4_289 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", span="627-627"];
m4_571 [cluster="System.IO.StringWriter.StringWriter()", file="JsonSerializerCollectionsTests.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m4_597 [cluster="Newtonsoft.Json.Tests.Serialization.NonGenericClass.NonGenericClass()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.NonGenericClass.NonGenericClass()", span="1633-1633"];
m4_0 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", span="60-60"];
m4_1 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="JsonSerializerCollectionsTests.cs", label="object[,] myOtherArray =\r\n            {\r\n                { new KeyValuePair<string, double>(''my value'', 0.8), ''foobar'' },\r\n                { true, 0.4d },\r\n                { 0.05f, 6 }\r\n            }", span="62-67"];
m4_2 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="JsonSerializerCollectionsTests.cs", label="string myOtherArrayAsString = JsonConvert.SerializeObject(myOtherArray, Formatting.Indented)", span="69-69"];
m4_3 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", color=green, community=0, file="JsonSerializerCollectionsTests.cs", label="2: StringAssert.AreEqual(@''[\r\n  [\r\n    {\r\n      ''''Key'''': ''''my value'''',\r\n      ''''Value'''': 0.8\r\n    },\r\n    ''''foobar''''\r\n  ],\r\n  [\r\n    true,\r\n    0.4\r\n  ],\r\n  [\r\n    0.05,\r\n    6\r\n  ]\r\n]'', myOtherArrayAsString)", span="71-87"];
m4_5 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="JsonSerializerCollectionsTests.cs", label="object[,] myOtherResult = JsonConvert.DeserializeObject<object[,]>(myOtherArrayAsString)", span="94-94"];
m4_4 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="JsonSerializerCollectionsTests.cs", label="JObject o = JObject.Parse(@''{\r\n              ''''Key'''': ''''my value'''',\r\n              ''''Value'''': 0.8\r\n            }'')", span="89-92"];
m4_6 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.IsTrue(JToken.DeepEquals(o, (JToken)myOtherResult[0, 0]))", span="95-95"];
m4_7 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''foobar'', myOtherResult[0, 1])", span="96-96"];
m4_8 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(true, myOtherResult[1, 0])", span="98-98"];
m4_9 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(0.4, myOtherResult[1, 1])", span="99-99"];
m4_10 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(0.05, myOtherResult[2, 0])", span="101-101"];
m4_11 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(6, myOtherResult[2, 1])", span="102-102"];
m4_12 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", span="60-60"];
m4_323 [cluster="System.Collections.ObjectModel.ReadOnlyCollection<T>.ReadOnlyCollection(System.Collections.Generic.IList<T>)", file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.ObjectModel.ReadOnlyCollection<T>.ReadOnlyCollection(System.Collections.Generic.IList<T>)", span="0-0"];
m4_304 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullToNonNullableKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullToNonNullableKeyValuePairArray()", span="664-664"];
m4_305 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullToNonNullableKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="string json = @''[ null ]''", span="666-666"];
m4_306 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullToNonNullableKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<IList<KeyValuePair<string, IList<string>>>>(json); }, ''Cannot convert null value to KeyValuePair. Path '[0]', line 1, position 6.'')", span="668-668"];
m4_307 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullToNonNullableKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullToNonNullableKeyValuePairArray()", span="664-664"];
m4_13 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m4_513 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()", span="1276-1276"];
m4_514 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()", file="JsonSerializerCollectionsTests.cs", label="string json = @''{''''action'''':''''Router'''',''''method'''':''''Navigate'''',''''data'''':[''''dashboard'''',null],''''type'''':''''rpc'''',''''tid'''':2}''", span="1278-1278"];
m4_515 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()", file="JsonSerializerCollectionsTests.cs", label="ObjectArrayPropertyTest o = JsonConvert.DeserializeObject<ObjectArrayPropertyTest>(json)", span="1280-1280"];
m4_516 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''Router'', o.Action)", span="1282-1282"];
m4_517 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''Navigate'', o.Method)", span="1283-1283"];
m4_518 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, o.Data.Length)", span="1284-1284"];
m4_519 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''dashboard'', o.Data[0])", span="1285-1285"];
m4_520 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(null, o.Data[1])", span="1286-1286"];
m4_521 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()", span="1276-1276"];
m4_14 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="525-525"];
m4_184 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="512-512"];
m4_17 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="739-739"];
m4_473 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNull3DArray()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNull3DArray()", span="1087-1087"];
m4_474 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNull3DArray()", file="JsonSerializerCollectionsTests.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':null,''''After'''':''''After!''''}''", span="1089-1089"];
m4_475 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNull3DArray()", file="JsonSerializerCollectionsTests.cs", label="Array3D aa = JsonConvert.DeserializeObject<Array3D>(json)", span="1091-1091"];
m4_480 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNull3DArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(json, after)", span="1099-1099"];
m4_476 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNull3DArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''Before!'', aa.Before)", span="1093-1093"];
m4_477 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNull3DArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''After!'', aa.After)", span="1094-1094"];
m4_478 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNull3DArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(null, aa.Coordinates)", span="1095-1095"];
m4_479 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNull3DArray()", file="JsonSerializerCollectionsTests.cs", label="string after = JsonConvert.SerializeObject(aa)", span="1097-1097"];
m4_481 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNull3DArray()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNull3DArray()", span="1087-1087"];
m4_667 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(object)", span="1216-1216"];
m4_668 [cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="1644-1644"];
m4_669 [cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerCollectionsTests.cs", label="List<string> existingStrings = (List<string>)existingValue", span="1646-1646"];
m4_671 [cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerCollectionsTests.cs", label="reader.Read()", span="1649-1649"];
m4_672 [cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerCollectionsTests.cs", label="reader.TokenType != JsonToken.EndArray", span="1651-1651"];
m4_673 [cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerCollectionsTests.cs", label="string s = (string)reader.Value", span="1653-1653"];
m4_675 [cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerCollectionsTests.cs", label="reader.Read()", span="1656-1656"];
m4_670 [cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerCollectionsTests.cs", label="List<string> newStrings = new List<string>(existingStrings)", span="1647-1647"];
m4_674 [cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerCollectionsTests.cs", label="newStrings.Add(s)", span="1654-1654"];
m4_676 [cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerCollectionsTests.cs", label="return newStrings;", span="1659-1659"];
m4_677 [cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="1644-1644"];
m4_225 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JsonSerializerCollectionsTests.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m4_358 [cluster="Newtonsoft.Json.Tests.Serialization.Array3D.Array3D()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Array3D.Array3D()", span="1578-1578"];
m4_466 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIncompleteNotTopLevel3DArray()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIncompleteNotTopLevel3DArray()", span="1079-1079"];
m4_467 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIncompleteNotTopLevel3DArray()", file="JsonSerializerCollectionsTests.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[/*hi*/[/*hi*/''", span="1081-1081"];
m4_468 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIncompleteNotTopLevel3DArray()", file="JsonSerializerCollectionsTests.cs", label="ExceptionAssert.Throws<JsonException>(() => JsonConvert.DeserializeObject<Array3D>(json))", span="1083-1083"];
m4_469 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIncompleteNotTopLevel3DArray()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIncompleteNotTopLevel3DArray()", span="1079-1079"];
m4_655 [cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GetEnumerator()", span="1614-1614"];
m4_656 [cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Items != null", span="1616-1616"];
m4_658 [cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="yield return item;", span="1620-1620"];
m4_659 [cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="yield break;", span="1624-1624"];
m4_657 [cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label=Items, span="1618-1618"];
m4_660 [cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GetEnumerator()", span="1614-1614"];
m4_574 [cluster="System.Text.StringBuilder.ToString()", file="JsonSerializerCollectionsTests.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m4_556 [cluster="Newtonsoft.Json.Tests.TestObjects.Name.Name(string)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Name.Name(string)", span="35-35"];
m4_650 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.System.Collections.IEnumerable.GetEnumerator()", span="1564-1564"];
m4_651 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="return GetEnumerator();", span="1566-1566"];
m4_652 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.System.Collections.IEnumerable.GetEnumerator()", span="1564-1564"];
m4_55 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="351-351"];
m4_41 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.EnumerableClassFailure()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.EnumerableClassFailure()", span="146-146"];
m4_42 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.EnumerableClassFailure()", file="JsonSerializerCollectionsTests.cs", label="_values = new List<T>()", span="148-148"];
m4_43 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.EnumerableClassFailure()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.EnumerableClassFailure()", span="146-146"];
m4_611 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyCollectionSerialize()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyCollectionSerialize()", span="1423-1423"];
m4_612 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyCollectionSerialize()", file="JsonSerializerCollectionsTests.cs", label="ReadOnlyCollection<int> r1 = new ReadOnlyCollection<int>(new int[] { 0, 1, 2, 3, 4 })", span="1425-1425"];
m4_613 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyCollectionSerialize()", file="JsonSerializerCollectionsTests.cs", label="string jsonText = JsonConvert.SerializeObject(r1)", span="1427-1427"];
m4_616 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyCollectionSerialize()", file="JsonSerializerCollectionsTests.cs", label="CollectionAssert.AreEqual(r1, r2)", span="1433-1433"];
m4_614 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyCollectionSerialize()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''[0,1,2,3,4]'', jsonText)", span="1429-1429"];
m4_615 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyCollectionSerialize()", file="JsonSerializerCollectionsTests.cs", label="ReadOnlyCollection<int> r2 = JsonConvert.DeserializeObject<ReadOnlyCollection<int>>(jsonText)", span="1431-1431"];
m4_617 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyCollectionSerialize()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyCollectionSerialize()", span="1423-1423"];
m4_646 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.GetEnumerator()", span="1559-1559"];
m4_647 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="return _list.GetEnumerator();", span="1561-1561"];
m4_648 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.GetEnumerator()", span="1559-1559"];
m4_18 [cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="152-152"];
m4_693 [file="JsonSerializerCollectionsTests.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>", span=""];
m4_694 [file="JsonSerializerCollectionsTests.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>", span=""];
m4_695 [file="JsonSerializerCollectionsTests.cs", label=json, span=""];
m4_696 [file="JsonSerializerCollectionsTests.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrivateDefaultCtorWithIEnumerableCtorList<T>", span=""];
m4_697 [file="JsonSerializerCollectionsTests.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>", span=""];
m4_698 [file="JsonSerializerCollectionsTests.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>", span=""];
m4_699 [file="JsonSerializerCollectionsTests.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericListTestClass", span=""];
m4_700 [file="JsonSerializerCollectionsTests.cs", label=json, span=""];
m4_701 [file="JsonSerializerCollectionsTests.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass", span=""];
m4_702 [file="JsonSerializerCollectionsTests.cs", label=json, span=""];
m4_703 [file="JsonSerializerCollectionsTests.cs", label=json, span=""];
m4_704 [file="JsonSerializerCollectionsTests.cs", label=json, span=""];
m4_705 [file="JsonSerializerCollectionsTests.cs", label=json, span=""];
m4_706 [file="JsonSerializerCollectionsTests.cs", label=json, span=""];
m4_707 [file="JsonSerializerCollectionsTests.cs", label=json, span=""];
m4_708 [file="JsonSerializerCollectionsTests.cs", label=json, span=""];
m4_709 [file="JsonSerializerCollectionsTests.cs", label="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList", span=""];
m4_710 [file="JsonSerializerCollectionsTests.cs", label="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>", span=""];
m5_29 [cluster="Unk.Contains", file="JsonSerializerInternalReader.cs", label="Entry Unk.Contains", span=""];
m5_22 [cluster="Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", span="96-96"];
m5_23 [cluster="Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", file="JsonSerializerInternalReader.cs", label="Assert.IsInstanceOfType(t, instance)", span="99-99"];
m5_24 [cluster="Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", span="96-96"];
m5_10 [cluster="System.IO.TextWriter.Flush()", file="JsonSerializerInternalReader.cs", label="Entry System.IO.TextWriter.Flush()", span="0-0"];
m5_7 [cluster="System.DateTime.SpecifyKind(System.DateTime, System.DateTimeKind)", file="JsonSerializerInternalReader.cs", label="Entry System.DateTime.SpecifyKind(System.DateTime, System.DateTimeKind)", span="0-0"];
m5_30 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", span="119-119"];
m5_31 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", file="JsonSerializerInternalReader.cs", label="action()", span="124-124"];
m5_34 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", file="JsonSerializerInternalReader.cs", label="message != null", span="130-130"];
m5_35 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(message, ex.Message, ''Unexpected exception message.'' + Environment.NewLine + ''Expected: '' + message + Environment.NewLine + ''Got: '' + ex.Message + Environment.NewLine + Environment.NewLine + ex)", span="131-131"];
m5_32 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", file="JsonSerializerInternalReader.cs", label="Assert.Fail(''Exception of type {0} expected; got none exception'', typeof(TException).Name)", span="126-126"];
m5_33 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", file="JsonSerializerInternalReader.cs", label=TException, span="128-128"];
m5_36 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", file="JsonSerializerInternalReader.cs", label=Exception, span="133-133"];
m5_37 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", file="JsonSerializerInternalReader.cs", label="throw new Exception(string.Format(''Exception of type {0} expected; got exception of type {1}.'', typeof(TException).Name, ex.GetType().Name), ex);", span="135-135"];
m5_38 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", span="119-119"];
m5_14 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.WriteEscapedJson(string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.TestFixtureBase.WriteEscapedJson(string)", span="73-73"];
m5_15 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.WriteEscapedJson(string)", file="JsonSerializerInternalReader.cs", label="Console.WriteLine(EscapeJson(json))", span="75-75"];
m5_16 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.WriteEscapedJson(string)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.TestFixtureBase.WriteEscapedJson(string)", span="73-73"];
m5_8 [cluster="System.DateTime.GetUtcOffset()", file="JsonSerializerInternalReader.cs", label="Entry System.DateTime.GetUtcOffset()", span="40-40"];
m5_43 [cluster="System.Exception.GetType()", file="JsonSerializerInternalReader.cs", label="Entry System.Exception.GetType()", span="0-0"];
m5_6 [cluster="System.IO.StringWriter.StringWriter()", file="JsonSerializerInternalReader.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m5_44 [cluster="string.Format(string, object, object)", file="JsonSerializerInternalReader.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m5_18 [cluster="System.Console.WriteLine(string)", file="JsonSerializerInternalReader.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m5_39 [cluster="System.Action.Invoke()", file="JsonSerializerInternalReader.cs", label="Entry System.Action.Invoke()", span="0-0"];
m5_17 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.EscapeJson(string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.TestFixtureBase.EscapeJson(string)", span="78-78"];
m5_19 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.EscapeJson(string)", file="JsonSerializerInternalReader.cs", label="return @''@'''''' + json.Replace(@'''''''', @'''''''''''') + @'''''''';", span="80-80"];
m5_20 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.EscapeJson(string)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.TestFixtureBase.EscapeJson(string)", span="78-78"];
m5_41 [cluster="Unk.AreEqual", file="JsonSerializerInternalReader.cs", label="Entry Unk.AreEqual", span=""];
m5_42 [cluster="System.Exception.Exception(string, System.Exception)", file="JsonSerializerInternalReader.cs", label="Entry System.Exception.Exception(string, System.Exception)", span="0-0"];
m5_12 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.TestSetup()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.TestFixtureBase.TestSetup()", span="66-66"];
m5_13 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.TestSetup()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.TestFixtureBase.TestSetup()", span="66-66"];
m5_11 [cluster="System.IO.StringWriter.ToString()", file="JsonSerializerInternalReader.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m5_40 [cluster="Unk.Fail", file="JsonSerializerInternalReader.cs", label="Entry Unk.Fail", span=""];
m5_21 [cluster="string.Replace(string, string)", file="JsonSerializerInternalReader.cs", label="Entry string.Replace(string, string)", span="0-0"];
m5_9 [cluster="Newtonsoft.Json.JsonConvert.WriteDateTimeOffset(System.IO.TextWriter, System.TimeSpan, Newtonsoft.Json.DateFormatHandling)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonConvert.WriteDateTimeOffset(System.IO.TextWriter, System.TimeSpan, Newtonsoft.Json.DateFormatHandling)", span="220-220"];
m5_0 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.GetOffset(System.DateTime, Newtonsoft.Json.DateFormatHandling)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.TestFixtureBase.GetOffset(System.DateTime, Newtonsoft.Json.DateFormatHandling)", span="55-55"];
m5_1 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.GetOffset(System.DateTime, Newtonsoft.Json.DateFormatHandling)", file="JsonSerializerInternalReader.cs", label="StringWriter sw = new StringWriter()", span="57-57"];
m5_2 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.GetOffset(System.DateTime, Newtonsoft.Json.DateFormatHandling)", file="JsonSerializerInternalReader.cs", label="JsonConvert.WriteDateTimeOffset(sw, DateTime.SpecifyKind(d, DateTimeKind.Local).GetUtcOffset(), dateFormatHandling)", span="58-58"];
m5_3 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.GetOffset(System.DateTime, Newtonsoft.Json.DateFormatHandling)", file="JsonSerializerInternalReader.cs", label="sw.Flush()", span="59-59"];
m5_4 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.GetOffset(System.DateTime, Newtonsoft.Json.DateFormatHandling)", color=red, community=0, file="JsonSerializerInternalReader.cs", label="0: return sw.ToString();", span="61-61"];
m5_5 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.GetOffset(System.DateTime, Newtonsoft.Json.DateFormatHandling)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.TestFixtureBase.GetOffset(System.DateTime, Newtonsoft.Json.DateFormatHandling)", span="55-55"];
m5_26 [cluster="Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object)", span="106-106"];
m5_27 [cluster="Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object)", file="JsonSerializerInternalReader.cs", label="Assert.Contains(value, collection)", span="109-109"];
m5_28 [cluster="Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object)", span="106-106"];
m5_25 [cluster="Unk.IsInstanceOfType", file="JsonSerializerInternalReader.cs", label="Entry Unk.IsInstanceOfType", span=""];
m5_45 [file="JsonSerializerInternalReader.cs", label="Newtonsoft.Json.Tests.TestFixtureBase", span=""];
m7_25 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="428-428"];
m7_62 [cluster="System.IO.MemoryStream.ToArray()", file="JsonSerializerTest.cs", label="Entry System.IO.MemoryStream.ToArray()", span="0-0"];
m7_116 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", span="751-751"];
m7_75 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", span="126-126"];
m7_91 [cluster="System.Text.RegularExpressions.Regex.Regex(string)", file="JsonSerializerTest.cs", label="Entry System.Text.RegularExpressions.Regex.Regex(string)", span="0-0"];
m7_28 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="618-618"];
m7_45 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.SerializeToBson()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.RegexConverterTests.SerializeToBson()", span="130-130"];
m7_46 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.SerializeToBson()", file="JsonSerializerTest.cs", label="Regex regex = new Regex(''abc'', RegexOptions.IgnoreCase | RegexOptions.CultureInvariant)", span="132-132"];
m7_47 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.SerializeToBson()", file="JsonSerializerTest.cs", label="MemoryStream ms = new MemoryStream()", span="134-134"];
m7_51 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.SerializeToBson()", file="JsonSerializerTest.cs", label="serializer.Serialize(writer, new RegexTestClass { Regex = regex })", span="139-139"];
m7_48 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.SerializeToBson()", file="JsonSerializerTest.cs", label="BsonWriter writer = new BsonWriter(ms)", span="135-135"];
m7_53 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.SerializeToBson()", file="JsonSerializerTest.cs", label="string bson = BytesToHex(ms.ToArray())", span="142-142"];
m7_49 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.SerializeToBson()", file="JsonSerializerTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="136-136"];
m7_50 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.SerializeToBson()", file="JsonSerializerTest.cs", label="serializer.Converters.Add(new RegexConverter())", span="137-137"];
m7_52 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.SerializeToBson()", file="JsonSerializerTest.cs", label="string expected = ''13-00-00-00-0B-52-65-67-65-78-00-61-62-63-00-69-75-00-00''", span="141-141"];
m7_54 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.SerializeToBson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(expected, bson)", span="144-144"];
m7_55 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.SerializeToBson()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.RegexConverterTests.SerializeToBson()", span="130-130"];
m7_36 [cluster="System.Text.RegularExpressions.Regex.ToString()", file="JsonSerializerTest.cs", label="Entry System.Text.RegularExpressions.Regex.ToString()", span="0-0"];
m7_60 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.RegexTestClass.RegexTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.RegexConverterTests.RegexTestClass.RegexTestClass()", span="47-47"];
m7_61 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="1047-1047"];
m7_74 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", span="245-245"];
m7_93 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertRegexWithAllOptionsBson()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertRegexWithAllOptionsBson()", span="184-184"];
m7_94 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertRegexWithAllOptionsBson()", file="JsonSerializerTest.cs", label="Regex regex = new Regex(\r\n                ''/'',\r\n                RegexOptions.IgnoreCase | RegexOptions.Singleline | RegexOptions.Multiline | RegexOptions.ExplicitCapture)", span="186-188"];
m7_95 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertRegexWithAllOptionsBson()", file="JsonSerializerTest.cs", label="MemoryStream ms = new MemoryStream()", span="190-190"];
m7_99 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertRegexWithAllOptionsBson()", file="JsonSerializerTest.cs", label="serializer.Serialize(writer, new RegexTestClass { Regex = regex })", span="195-195"];
m7_96 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertRegexWithAllOptionsBson()", file="JsonSerializerTest.cs", label="BsonWriter writer = new BsonWriter(ms)", span="191-191"];
m7_101 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertRegexWithAllOptionsBson()", file="JsonSerializerTest.cs", label="string bson = BytesToHex(ms.ToArray())", span="198-198"];
m7_103 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertRegexWithAllOptionsBson()", file="JsonSerializerTest.cs", label="ms.Seek(0, SeekOrigin.Begin)", span="202-202"];
m7_104 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertRegexWithAllOptionsBson()", file="JsonSerializerTest.cs", label="BsonReader reader = new BsonReader(ms)", span="203-203"];
m7_97 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertRegexWithAllOptionsBson()", file="JsonSerializerTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="192-192"];
m7_98 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertRegexWithAllOptionsBson()", file="JsonSerializerTest.cs", label="serializer.Converters.Add(new RegexConverter())", span="193-193"];
m7_105 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertRegexWithAllOptionsBson()", file="JsonSerializerTest.cs", label="serializer.Converters.Add(new RegexConverter())", span="204-204"];
m7_106 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertRegexWithAllOptionsBson()", file="JsonSerializerTest.cs", label="RegexTestClass c = serializer.Deserialize<RegexTestClass>(reader)", span="206-206"];
m7_100 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertRegexWithAllOptionsBson()", file="JsonSerializerTest.cs", label="string expected = ''14-00-00-00-0B-52-65-67-65-78-00-2F-00-69-6D-73-75-78-00-00''", span="197-197"];
m7_102 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertRegexWithAllOptionsBson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(expected, bson)", span="200-200"];
m7_107 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertRegexWithAllOptionsBson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''/'', c.Regex.ToString())", span="208-208"];
m7_108 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertRegexWithAllOptionsBson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(RegexOptions.IgnoreCase | RegexOptions.Singleline | RegexOptions.Multiline | RegexOptions.ExplicitCapture, c.Regex.Options)", span="209-209"];
m7_109 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertRegexWithAllOptionsBson()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertRegexWithAllOptionsBson()", span="184-184"];
m7_0 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.WriteJsonNull()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.RegexConverterTests.WriteJsonNull()", span="53-53"];
m7_1 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.WriteJsonNull()", file="JsonSerializerTest.cs", label="StringWriter sw = new StringWriter()", span="55-55"];
m7_2 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.WriteJsonNull()", file="JsonSerializerTest.cs", label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="56-56"];
m7_5 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.WriteJsonNull()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''null'', sw.ToString())", span="61-61"];
m7_3 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.WriteJsonNull()", file="JsonSerializerTest.cs", label="RegexConverter converter = new RegexConverter()", span="58-58"];
m7_4 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.WriteJsonNull()", file="JsonSerializerTest.cs", label="converter.WriteJson(jsonWriter, null, null)", span="59-59"];
m7_6 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.WriteJsonNull()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.RegexConverterTests.WriteJsonNull()", span="53-53"];
m7_58 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="535-535"];
m7_19 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", span="564-564"];
m7_7 [cluster="System.IO.StringWriter.StringWriter()", file="JsonSerializerTest.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m7_27 [cluster="Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver.CamelCasePropertyNamesContractResolver()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver.CamelCasePropertyNamesContractResolver()", span="76-76"];
m7_10 [cluster="Newtonsoft.Json.Converters.RegexConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Converters.RegexConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="48-48"];
m7_38 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeISerializeRegexJson()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeISerializeRegexJson()", span="112-112"];
m7_39 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeISerializeRegexJson()", file="JsonSerializerTest.cs", label="string json = @''{\r\n                        ''''Regex'''': {\r\n                          ''''pattern'''': ''''(hi)'''',\r\n                          ''''options'''': 5,\r\n                          ''''matchTimeout'''': -10000\r\n                        }\r\n                      }''", span="114-120"];
m7_40 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeISerializeRegexJson()", file="JsonSerializerTest.cs", label="RegexTestClass r = JsonConvert.DeserializeObject<RegexTestClass>(json)", span="122-122"];
m7_41 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeISerializeRegexJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''(hi)'', r.Regex.ToString())", span="124-124"];
m7_42 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeISerializeRegexJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(RegexOptions.IgnoreCase | RegexOptions.ExplicitCapture, r.Regex.Options)", span="125-125"];
m7_43 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeISerializeRegexJson()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeISerializeRegexJson()", span="112-112"];
m7_59 [cluster="System.Collections.ObjectModel.Collection<T>.Add(T)", file="JsonSerializerTest.cs", label="Entry System.Collections.ObjectModel.Collection<T>.Add(T)", span="0-0"];
m7_37 [cluster="Unk.AreEqual", file="JsonSerializerTest.cs", label="Entry Unk.AreEqual", span=""];
m7_56 [cluster="System.IO.MemoryStream.MemoryStream()", file="JsonSerializerTest.cs", label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0"];
m7_117 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertEmptyRegexJson()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertEmptyRegexJson()", span="227-227"];
m7_118 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertEmptyRegexJson()", file="JsonSerializerTest.cs", label="Regex regex = new Regex('''')", span="229-229"];
m7_119 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertEmptyRegexJson()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new RegexTestClass { Regex = regex }, Formatting.Indented, new RegexConverter())", span="231-231"];
m7_120 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertEmptyRegexJson()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Regex'''': {\r\n    ''''Pattern'''': '''''''',\r\n    ''''Options'''': 0\r\n  }\r\n}'', json)", span="233-238"];
m7_121 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertEmptyRegexJson()", file="JsonSerializerTest.cs", label="RegexTestClass newRegex = JsonConvert.DeserializeObject<RegexTestClass>(json, new RegexConverter())", span="240-240"];
m7_122 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertEmptyRegexJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual('''', newRegex.Regex.ToString())", span="241-241"];
m7_123 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertEmptyRegexJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(RegexOptions.None, newRegex.Regex.Options)", span="242-242"];
m7_124 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertEmptyRegexJson()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertEmptyRegexJson()", span="227-227"];
m7_132 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="524-524"];
m7_44 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="703-703"];
m7_64 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeFromBson()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeFromBson()", span="148-148"];
m7_65 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeFromBson()", file="JsonSerializerTest.cs", label="MemoryStream ms = new MemoryStream(HexToBytes(''13-00-00-00-0B-52-65-67-65-78-00-61-62-63-00-69-75-00-00''))", span="150-150"];
m7_66 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeFromBson()", file="JsonSerializerTest.cs", label="BsonReader reader = new BsonReader(ms)", span="151-151"];
m7_67 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeFromBson()", file="JsonSerializerTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="152-152"];
m7_69 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeFromBson()", file="JsonSerializerTest.cs", label="RegexTestClass c = serializer.Deserialize<RegexTestClass>(reader)", span="155-155"];
m7_68 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeFromBson()", file="JsonSerializerTest.cs", label="serializer.Converters.Add(new RegexConverter())", span="153-153"];
m7_70 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeFromBson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''abc'', c.Regex.ToString())", span="157-157"];
m7_71 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeFromBson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(RegexOptions.IgnoreCase, c.Regex.Options)", span="158-158"];
m7_72 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeFromBson()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeFromBson()", span="148-148"];
m7_110 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeFromText()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeFromText()", span="214-214"];
m7_111 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeFromText()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''Pattern'''': ''''abc'''',\r\n  ''''Options'''': 513\r\n}''", span="216-219"];
m7_112 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeFromText()", file="JsonSerializerTest.cs", label="Regex newRegex = JsonConvert.DeserializeObject<Regex>(json, new RegexConverter())", span="221-221"];
m7_113 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeFromText()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''abc'', newRegex.ToString())", span="222-222"];
m7_114 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeFromText()", file="JsonSerializerTest.cs", label="Assert.AreEqual(RegexOptions.IgnoreCase | RegexOptions.CultureInvariant, newRegex.Options)", span="223-223"];
m7_115 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeFromText()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeFromText()", span="214-214"];
m7_76 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", span="843-843"];
m7_57 [cluster="Newtonsoft.Json.Bson.BsonWriter.BsonWriter(System.IO.Stream)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.BsonWriter(System.IO.Stream)", span="66-66"];
m7_125 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeNullRegex()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeNullRegex()", span="251-251"];
m7_126 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeNullRegex()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new SimpleClassWithRegex { RegProp = null })", span="253-253"];
m7_127 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeNullRegex()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''RegProp'''':null}'', json)", span="254-254"];
m7_128 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeNullRegex()", file="JsonSerializerTest.cs", label="SimpleClassWithRegex obj = JsonConvert.DeserializeObject<SimpleClassWithRegex>(json)", span="256-256"];
m7_129 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeNullRegex()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, obj.RegProp)", span="257-257"];
m7_130 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeNullRegex()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeNullRegex()", span="251-251"];
m7_11 [cluster="System.IO.StringWriter.ToString()", file="JsonSerializerTest.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m7_20 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.SerializeCamelCaseAndStringEnums()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.RegexConverterTests.SerializeCamelCaseAndStringEnums()", span="78-78"];
m7_21 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.SerializeCamelCaseAndStringEnums()", file="JsonSerializerTest.cs", label="Regex regex = new Regex(''abc'', RegexOptions.IgnoreCase)", span="80-80"];
m7_22 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.SerializeCamelCaseAndStringEnums()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(regex, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                Converters = { new RegexConverter(), new StringEnumConverter() { CamelCaseText = true } },\r\n                ContractResolver = new CamelCasePropertyNamesContractResolver()\r\n            })", span="82-86"];
m7_23 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.SerializeCamelCaseAndStringEnums()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''pattern'''': ''''abc'''',\r\n  ''''options'''': ''''ignoreCase''''\r\n}'', json)", span="88-91"];
m7_24 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.SerializeCamelCaseAndStringEnums()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.RegexConverterTests.SerializeCamelCaseAndStringEnums()", span="78-78"];
m7_92 [cluster="System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", file="JsonSerializerTest.cs", label="Entry System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", span="0-0"];
m7_8 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="149-149"];
m7_9 [cluster="Newtonsoft.Json.Converters.RegexConverter.RegexConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Converters.RegexConverter.RegexConverter()", span="37-37"];
m7_35 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="766-766"];
m7_12 [cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="338-338"];
m7_77 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertEmptyRegexBson()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertEmptyRegexBson()", span="162-162"];
m7_78 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertEmptyRegexBson()", file="JsonSerializerTest.cs", label="Regex regex = new Regex(string.Empty)", span="164-164"];
m7_79 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertEmptyRegexBson()", file="JsonSerializerTest.cs", label="MemoryStream ms = new MemoryStream()", span="166-166"];
m7_83 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertEmptyRegexBson()", file="JsonSerializerTest.cs", label="serializer.Serialize(writer, new RegexTestClass { Regex = regex })", span="171-171"];
m7_80 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertEmptyRegexBson()", file="JsonSerializerTest.cs", label="BsonWriter writer = new BsonWriter(ms)", span="167-167"];
m7_84 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertEmptyRegexBson()", file="JsonSerializerTest.cs", label="ms.Seek(0, SeekOrigin.Begin)", span="173-173"];
m7_85 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertEmptyRegexBson()", file="JsonSerializerTest.cs", label="BsonReader reader = new BsonReader(ms)", span="174-174"];
m7_81 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertEmptyRegexBson()", file="JsonSerializerTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="168-168"];
m7_82 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertEmptyRegexBson()", file="JsonSerializerTest.cs", label="serializer.Converters.Add(new RegexConverter())", span="169-169"];
m7_86 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertEmptyRegexBson()", file="JsonSerializerTest.cs", label="serializer.Converters.Add(new RegexConverter())", span="175-175"];
m7_87 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertEmptyRegexBson()", file="JsonSerializerTest.cs", label="RegexTestClass c = serializer.Deserialize<RegexTestClass>(reader)", span="177-177"];
m7_88 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertEmptyRegexBson()", file="JsonSerializerTest.cs", label="Assert.AreEqual('''', c.Regex.ToString())", span="179-179"];
m7_89 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertEmptyRegexBson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(RegexOptions.None, c.Regex.Options)", span="180-180"];
m7_90 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertEmptyRegexBson()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.RegexConverterTests.ConvertEmptyRegexBson()", span="162-162"];
m7_18 [cluster="System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)", file="JsonSerializerTest.cs", label="Entry System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)", span="0-0"];
m7_73 [cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="JsonSerializerTest.cs", label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0"];
m7_131 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.SimpleClassWithRegex.SimpleClassWithRegex()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.RegexConverterTests.SimpleClassWithRegex.SimpleClassWithRegex()", span="245-245"];
m7_63 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.BytesToHex(byte[])", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestFixtureBase.BytesToHex(byte[])", span="229-229"];
m7_29 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeCamelCaseAndStringEnums()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeCamelCaseAndStringEnums()", span="95-95"];
m7_30 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeCamelCaseAndStringEnums()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''pattern'''': ''''abc'''',\r\n  ''''options'''': ''''ignoreCase''''\r\n}''", span="97-100"];
m7_31 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeCamelCaseAndStringEnums()", file="JsonSerializerTest.cs", label="Regex regex = JsonConvert.DeserializeObject<Regex>(json, new JsonSerializerSettings\r\n            {\r\n                Converters = { new RegexConverter() }\r\n            })", span="102-105"];
m7_32 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeCamelCaseAndStringEnums()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''abc'', regex.ToString())", span="107-107"];
m7_33 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeCamelCaseAndStringEnums()", file="JsonSerializerTest.cs", label="Assert.AreEqual(RegexOptions.IgnoreCase, regex.Options)", span="108-108"];
m7_34 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeCamelCaseAndStringEnums()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.RegexConverterTests.DeserializeCamelCaseAndStringEnums()", span="95-95"];
m7_26 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter()", span="62-62"];
m7_13 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.SerializeToText()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.RegexConverterTests.SerializeToText()", span="65-65"];
m7_14 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.SerializeToText()", file="JsonSerializerTest.cs", label="Regex regex = new Regex(''abc'', RegexOptions.IgnoreCase | RegexOptions.CultureInvariant)", span="67-67"];
m7_15 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.SerializeToText()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(regex, Formatting.Indented, new RegexConverter())", span="69-69"];
m7_16 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.SerializeToText()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Pattern'''': ''''abc'''',\r\n  ''''Options'''': 513\r\n}'', json)", span="71-74"];
m7_17 [cluster="Newtonsoft.Json.Tests.Converters.RegexConverterTests.SerializeToText()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.RegexConverterTests.SerializeToText()", span="65-65"];
m7_133 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Converters.RegexConverterTests", span=""];
m8_29 [cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="JValueTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="329-329"];
m8_24 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="JValueTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="376-376"];
m8_22 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JValueTests.cs", label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="110-110"];
m8_30 [cluster="System.Text.StringBuilder.ToString()", file="JValueTests.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m8_20 [cluster="System.Text.StringBuilder.StringBuilder()", file="JValueTests.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m8_28 [cluster="Newtonsoft.Json.JsonWriter.WriteEnd()", file="JValueTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEnd()", span="390-390"];
m8_21 [cluster="System.IO.StringWriter.StringWriter(System.Text.StringBuilder)", file="JValueTests.cs", label="Entry System.IO.StringWriter.StringWriter(System.Text.StringBuilder)", span="0-0"];
m8_27 [cluster="Newtonsoft.Json.JsonWriter.WriteComment(string)", file="JValueTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteComment(string)", span="1288-1288"];
m8_0 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Json.WriteJsonWithJsonTextWriter.Example()", file="JValueTests.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Examples.Json.WriteJsonWithJsonTextWriter.Example()", span="10-10"];
m8_14 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Json.WriteJsonWithJsonTextWriter.Example()", color=green, community=0, file="JValueTests.cs", label="2: writer.WriteValue(''500 gigabyte hard drive'')", span="28-28"];
m8_3 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Json.WriteJsonWithJsonTextWriter.Example()", file="JValueTests.cs", label="JsonWriter writer = new JsonTextWriter(sw)", span="15-15"];
m8_13 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Json.WriteJsonWithJsonTextWriter.Example()", file="JValueTests.cs", label="writer.WriteComment(''(broken)'')", span="27-27"];
m8_15 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Json.WriteJsonWithJsonTextWriter.Example()", file="JValueTests.cs", label="writer.WriteValue(''200 gigabype hard drive'')", span="29-29"];
m8_2 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Json.WriteJsonWithJsonTextWriter.Example()", file="JValueTests.cs", label="StringWriter sw = new StringWriter(sb)", span="13-13"];
m8_4 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Json.WriteJsonWithJsonTextWriter.Example()", file="JValueTests.cs", label="writer.Formatting = Formatting.Indented", span="17-17"];
m8_5 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Json.WriteJsonWithJsonTextWriter.Example()", file="JValueTests.cs", label="writer.WriteStartObject()", span="19-19"];
m8_6 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Json.WriteJsonWithJsonTextWriter.Example()", file="JValueTests.cs", label="writer.WritePropertyName(''CPU'')", span="20-20"];
m8_7 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Json.WriteJsonWithJsonTextWriter.Example()", file="JValueTests.cs", label="writer.WriteValue(''Intel'')", span="21-21"];
m8_8 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Json.WriteJsonWithJsonTextWriter.Example()", file="JValueTests.cs", label="writer.WritePropertyName(''PSU'')", span="22-22"];
m8_9 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Json.WriteJsonWithJsonTextWriter.Example()", file="JValueTests.cs", label="writer.WriteValue(''500W'')", span="23-23"];
m8_10 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Json.WriteJsonWithJsonTextWriter.Example()", file="JValueTests.cs", label="writer.WritePropertyName(''Drives'')", span="24-24"];
m8_11 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Json.WriteJsonWithJsonTextWriter.Example()", file="JValueTests.cs", label="writer.WriteStartArray()", span="25-25"];
m8_12 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Json.WriteJsonWithJsonTextWriter.Example()", file="JValueTests.cs", label="writer.WriteValue(''DVD read/writer'')", span="26-26"];
m8_16 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Json.WriteJsonWithJsonTextWriter.Example()", file="JValueTests.cs", label="writer.WriteEnd()", span="30-30"];
m8_17 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Json.WriteJsonWithJsonTextWriter.Example()", file="JValueTests.cs", label="writer.WriteEndObject()", span="31-31"];
m8_1 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Json.WriteJsonWithJsonTextWriter.Example()", file="JValueTests.cs", label="StringBuilder sb = new StringBuilder()", span="12-12"];
m8_18 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Json.WriteJsonWithJsonTextWriter.Example()", file="JValueTests.cs", label="Console.WriteLine(sb.ToString())", span="34-34"];
m8_19 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Json.WriteJsonWithJsonTextWriter.Example()", file="JValueTests.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Examples.Json.WriteJsonWithJsonTextWriter.Example()", span="10-10"];
m8_31 [cluster="System.Console.WriteLine(string)", file="JValueTests.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m8_25 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="JValueTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="778-778"];
m8_23 [cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="JValueTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="314-314"];
m8_26 [cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="JValueTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="337-337"];
m11_11 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeNameEnumTest()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeNameEnumTest()", span="122-122"];
m11_12 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeNameEnumTest()", file="StringEnumConverterTests.cs", label="EnumContainer<NamedEnum> c = new EnumContainer<NamedEnum>\r\n            {\r\n                Enum = NamedEnum.First\r\n            }", span="124-127"];
m11_13 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeNameEnumTest()", file="StringEnumConverterTests.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented, new StringEnumConverter())", span="129-129"];
m11_14 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeNameEnumTest()", file="StringEnumConverterTests.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Enum'''': ''''@first''''\r\n}'', json)", span="130-132"];
m11_15 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeNameEnumTest()", file="StringEnumConverterTests.cs", label="c = new EnumContainer<NamedEnum>\r\n            {\r\n                Enum = NamedEnum.Third\r\n            }", span="134-137"];
m11_16 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeNameEnumTest()", file="StringEnumConverterTests.cs", label="json = JsonConvert.SerializeObject(c, Formatting.Indented, new StringEnumConverter())", span="139-139"];
m11_17 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeNameEnumTest()", file="StringEnumConverterTests.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Enum'''': ''''Third''''\r\n}'', json)", span="140-142"];
m11_18 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeNameEnumTest()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeNameEnumTest()", span="122-122"];
m11_126 [cluster="System.IO.StringReader.StringReader(string)", file="StringEnumConverterTests.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m11_28 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", span="787-787"];
m11_128 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeIntegerButNotAllowed()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeIntegerButNotAllowed()", span="372-372"];
m11_129 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeIntegerButNotAllowed()", file="StringEnumConverterTests.cs", label="string json = ''{ \''Value\'' : 123 }''", span="374-374"];
m11_130 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeIntegerButNotAllowed()", file="StringEnumConverterTests.cs", label="var serializer = new JsonSerializer()", span="378-378"];
m11_132 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeIntegerButNotAllowed()", file="StringEnumConverterTests.cs", label="serializer.Deserialize<Bucket>(new JsonTextReader(new StringReader(json)))", span="380-380"];
m11_131 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeIntegerButNotAllowed()", file="StringEnumConverterTests.cs", label="serializer.Converters.Add(new StringEnumConverter { AllowIntegerValues = false })", span="379-379"];
m11_133 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeIntegerButNotAllowed()", file="StringEnumConverterTests.cs", label=JsonSerializationException, span="382-382"];
m11_137 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeIntegerButNotAllowed()", file="StringEnumConverterTests.cs", label="Assert.Fail()", span="390-390"];
m11_134 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeIntegerButNotAllowed()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(''Error converting value 123 to type 'Newtonsoft.Json.Tests.Converters.StringEnumConverterTests+MyEnum'. Path 'Value', line 1, position 15.'', ex.Message)", span="384-384"];
m11_135 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeIntegerButNotAllowed()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(@''Integer value 123 is not allowed. Path 'Value', line 1, position 15.'', ex.InnerException.Message)", span="385-385"];
m11_136 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeIntegerButNotAllowed()", file="StringEnumConverterTests.cs", label="return;", span="387-387"];
m11_138 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeIntegerButNotAllowed()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeIntegerButNotAllowed()", span="372-372"];
m11_63 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeNegativeEnum()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeNegativeEnum()", span="233-233"];
m11_64 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeNegativeEnum()", file="StringEnumConverterTests.cs", label="NegativeEnumClass negativeEnumClass = new NegativeEnumClass()", span="235-235"];
m11_65 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeNegativeEnum()", file="StringEnumConverterTests.cs", label="negativeEnumClass.Value1 = NegativeEnum.Negative", span="236-236"];
m11_66 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeNegativeEnum()", file="StringEnumConverterTests.cs", label="negativeEnumClass.Value2 = (NegativeEnum)int.MinValue", span="237-237"];
m11_67 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeNegativeEnum()", file="StringEnumConverterTests.cs", label="string json = JsonConvert.SerializeObject(negativeEnumClass, Formatting.Indented, new StringEnumConverter())", span="239-239"];
m11_68 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeNegativeEnum()", file="StringEnumConverterTests.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Value1'''': ''''Negative'''',\r\n  ''''Value2'''': -2147483648\r\n}'', json)", span="241-244"];
m11_69 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeNegativeEnum()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeNegativeEnum()", span="233-233"];
m11_103 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.CamelCaseTextFlagEnumDeserialization()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.CamelCaseTextFlagEnumDeserialization()", span="324-324"];
m11_104 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.CamelCaseTextFlagEnumDeserialization()", file="StringEnumConverterTests.cs", label="string json = @''{\r\n  ''''Enum'''': ''''first, second''''\r\n}''", span="326-328"];
m11_105 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.CamelCaseTextFlagEnumDeserialization()", file="StringEnumConverterTests.cs", label="EnumContainer<FlagsTestEnum> c = JsonConvert.DeserializeObject<EnumContainer<FlagsTestEnum>>(json, new StringEnumConverter { CamelCaseText = true })", span="330-330"];
m11_106 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.CamelCaseTextFlagEnumDeserialization()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(FlagsTestEnum.First | FlagsTestEnum.Second, c.Enum)", span="331-331"];
m11_107 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.CamelCaseTextFlagEnumDeserialization()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.CamelCaseTextFlagEnumDeserialization()", span="324-324"];
m11_113 [cluster="Unk.IsNull", file="StringEnumConverterTests.cs", label="Entry Unk.IsNull", span=""];
m11_30 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClass()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClass()", span="165-165"];
m11_31 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClass()", file="StringEnumConverterTests.cs", label="EnumClass enumClass = new EnumClass()", span="167-167"];
m11_32 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClass()", file="StringEnumConverterTests.cs", label="enumClass.StoreColor = StoreColor.Red", span="168-168"];
m11_33 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClass()", file="StringEnumConverterTests.cs", label="enumClass.NullableStoreColor1 = StoreColor.White", span="169-169"];
m11_34 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClass()", file="StringEnumConverterTests.cs", label="enumClass.NullableStoreColor2 = null", span="170-170"];
m11_35 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClass()", file="StringEnumConverterTests.cs", label="string json = JsonConvert.SerializeObject(enumClass, Formatting.Indented, new StringEnumConverter())", span="172-172"];
m11_36 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClass()", file="StringEnumConverterTests.cs", label="StringAssert.AreEqual(@''{\r\n  ''''StoreColor'''': ''''Red'''',\r\n  ''''NullableStoreColor1'''': ''''White'''',\r\n  ''''NullableStoreColor2'''': null\r\n}'', json)", span="174-178"];
m11_37 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClass()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClass()", span="165-165"];
m11_8 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumContainer<T>.EnumContainer()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumContainer<T>.EnumContainer()", span="58-58"];
m11_161 [cluster="System.Collections.Generic.List<T>.List()", file="StringEnumConverterTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m11_71 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeNegativeEnum()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeNegativeEnum()", span="248-248"];
m11_72 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeNegativeEnum()", file="StringEnumConverterTests.cs", label="string json = @''{\r\n  ''''Value1'''': ''''Negative'''',\r\n  ''''Value2'''': -2147483648\r\n}''", span="250-253"];
m11_73 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeNegativeEnum()", file="StringEnumConverterTests.cs", label="NegativeEnumClass negativeEnumClass = JsonConvert.DeserializeObject<NegativeEnumClass>(json, new StringEnumConverter())", span="255-255"];
m11_74 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeNegativeEnum()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(NegativeEnum.Negative, negativeEnumClass.Value1)", span="257-257"];
m11_75 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeNegativeEnum()", file="StringEnumConverterTests.cs", label="Assert.AreEqual((NegativeEnum)int.MinValue, negativeEnumClass.Value2)", span="258-258"];
m11_76 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeNegativeEnum()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeNegativeEnum()", span="248-248"];
m11_84 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEnumClass()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEnumClass()", span="278-278"];
m11_85 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEnumClass()", file="StringEnumConverterTests.cs", label="string json = @''{\r\n  ''''StoreColor'''': ''''Red'''',\r\n  ''''NullableStoreColor1'''': ''''White'''',\r\n  ''''NullableStoreColor2'''': null\r\n}''", span="280-284"];
m11_86 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEnumClass()", file="StringEnumConverterTests.cs", label="EnumClass enumClass = JsonConvert.DeserializeObject<EnumClass>(json, new StringEnumConverter())", span="286-286"];
m11_87 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEnumClass()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(StoreColor.Red, enumClass.StoreColor)", span="288-288"];
m11_88 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEnumClass()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(StoreColor.White, enumClass.NullableStoreColor1)", span="289-289"];
m11_89 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEnumClass()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(null, enumClass.NullableStoreColor2)", span="290-290"];
m11_90 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEnumClass()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEnumClass()", span="278-278"];
m11_123 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="433-433"];
m11_108 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEmptyStringIntoNullable()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEmptyStringIntoNullable()", span="335-335"];
m11_109 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEmptyStringIntoNullable()", file="StringEnumConverterTests.cs", label="string json = @''{\r\n  ''''StoreColor'''': ''''Red'''',\r\n  ''''NullableStoreColor1'''': ''''White'''',\r\n  ''''NullableStoreColor2'''': ''''''''\r\n}''", span="337-341"];
m11_110 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEmptyStringIntoNullable()", file="StringEnumConverterTests.cs", label="EnumClass c = JsonConvert.DeserializeObject<EnumClass>(json, new StringEnumConverter())", span="343-343"];
m11_111 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEmptyStringIntoNullable()", file="StringEnumConverterTests.cs", label="Assert.IsNull(c.NullableStoreColor2)", span="344-344"];
m11_112 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEmptyStringIntoNullable()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEmptyStringIntoNullable()", span="335-335"];
m11_10 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", span="552-552"];
m11_124 [cluster="System.Collections.ObjectModel.Collection<T>.Add(T)", file="StringEnumConverterTests.cs", label="Entry System.Collections.ObjectModel.Collection<T>.Add(T)", span="0-0"];
m11_47 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClassUndefined()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClassUndefined()", span="199-199"];
m11_48 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClassUndefined()", file="StringEnumConverterTests.cs", label="EnumClass enumClass = new EnumClass()", span="201-201"];
m11_49 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClassUndefined()", file="StringEnumConverterTests.cs", label="enumClass.StoreColor = (StoreColor)1000", span="202-202"];
m11_50 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClassUndefined()", file="StringEnumConverterTests.cs", label="enumClass.NullableStoreColor1 = (StoreColor)1000", span="203-203"];
m11_51 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClassUndefined()", file="StringEnumConverterTests.cs", label="enumClass.NullableStoreColor2 = null", span="204-204"];
m11_52 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClassUndefined()", file="StringEnumConverterTests.cs", label="string json = JsonConvert.SerializeObject(enumClass, Formatting.Indented, new StringEnumConverter())", span="206-206"];
m11_53 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClassUndefined()", file="StringEnumConverterTests.cs", label="StringAssert.AreEqual(@''{\r\n  ''''StoreColor'''': 1000,\r\n  ''''NullableStoreColor1'''': 1000,\r\n  ''''NullableStoreColor2'''': null\r\n}'', json)", span="208-212"];
m11_54 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClassUndefined()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClassUndefined()", span="199-199"];
m11_0 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.NamedEnumDuplicateTest()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.NamedEnumDuplicateTest()", span="108-108"];
m11_1 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.NamedEnumDuplicateTest()", file="StringEnumConverterTests.cs", label="ExceptionAssert.Throws<Exception>(() =>\r\n            {\r\n                EnumContainer<NamedEnumDuplicate> c = new EnumContainer<NamedEnumDuplicate>\r\n                {\r\n                    Enum = NamedEnumDuplicate.First\r\n                };\r\n\r\n                JsonConvert.SerializeObject(c, Formatting.Indented, new StringEnumConverter());\r\n            }, ''Enum name 'Third' already exists on enum 'NamedEnumDuplicate'.'')", span="110-118"];
m11_2 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.NamedEnumDuplicateTest()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.NamedEnumDuplicateTest()", span="108-108"];
m11_29 [cluster="Unk.AreEqual", file="StringEnumConverterTests.cs", label="Entry Unk.AreEqual", span=""];
m11_39 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClassWithCamelCase()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClassWithCamelCase()", span="182-182"];
m11_40 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClassWithCamelCase()", file="StringEnumConverterTests.cs", label="EnumClass enumClass = new EnumClass()", span="184-184"];
m11_41 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClassWithCamelCase()", file="StringEnumConverterTests.cs", label="enumClass.StoreColor = StoreColor.Red", span="185-185"];
m11_42 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClassWithCamelCase()", file="StringEnumConverterTests.cs", label="enumClass.NullableStoreColor1 = StoreColor.DarkGoldenrod", span="186-186"];
m11_43 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClassWithCamelCase()", file="StringEnumConverterTests.cs", label="enumClass.NullableStoreColor2 = null", span="187-187"];
m11_44 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClassWithCamelCase()", file="StringEnumConverterTests.cs", label="string json = JsonConvert.SerializeObject(enumClass, Formatting.Indented, new StringEnumConverter { CamelCaseText = true })", span="189-189"];
m11_45 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClassWithCamelCase()", file="StringEnumConverterTests.cs", label="StringAssert.AreEqual(@''{\r\n  ''''StoreColor'''': ''''red'''',\r\n  ''''NullableStoreColor1'''': ''''darkGoldenrod'''',\r\n  ''''NullableStoreColor2'''': null\r\n}'', json)", span="191-195"];
m11_46 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClassWithCamelCase()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeEnumClassWithCamelCase()", span="182-182"];
m11_55 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeFlagEnum()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeFlagEnum()", span="216-216"];
m11_56 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeFlagEnum()", file="StringEnumConverterTests.cs", label="EnumClass enumClass = new EnumClass()", span="218-218"];
m11_57 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeFlagEnum()", file="StringEnumConverterTests.cs", label="enumClass.StoreColor = StoreColor.Red | StoreColor.White", span="219-219"];
m11_58 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeFlagEnum()", file="StringEnumConverterTests.cs", label="enumClass.NullableStoreColor1 = StoreColor.White & StoreColor.Yellow", span="220-220"];
m11_59 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeFlagEnum()", file="StringEnumConverterTests.cs", label="enumClass.NullableStoreColor2 = StoreColor.Red | StoreColor.White | StoreColor.Black", span="221-221"];
m11_60 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeFlagEnum()", file="StringEnumConverterTests.cs", label="string json = JsonConvert.SerializeObject(enumClass, Formatting.Indented, new StringEnumConverter())", span="223-223"];
m11_61 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeFlagEnum()", file="StringEnumConverterTests.cs", label="StringAssert.AreEqual(@''{\r\n  ''''StoreColor'''': ''''Red, White'''',\r\n  ''''NullableStoreColor1'''': 0,\r\n  ''''NullableStoreColor2'''': ''''Black, Red, White''''\r\n}'', json)", span="225-229"];
m11_62 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeFlagEnum()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.SerializeFlagEnum()", span="216-216"];
m11_162 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="739-739"];
m11_91 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEnumClassUndefined()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEnumClassUndefined()", span="294-294"];
m11_92 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEnumClassUndefined()", file="StringEnumConverterTests.cs", label="string json = @''{\r\n  ''''StoreColor'''': 1000,\r\n  ''''NullableStoreColor1'''': 1000,\r\n  ''''NullableStoreColor2'''': null\r\n}''", span="296-300"];
m11_93 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEnumClassUndefined()", file="StringEnumConverterTests.cs", label="EnumClass enumClass = JsonConvert.DeserializeObject<EnumClass>(json, new StringEnumConverter())", span="302-302"];
m11_94 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEnumClassUndefined()", file="StringEnumConverterTests.cs", label="Assert.AreEqual((StoreColor)1000, enumClass.StoreColor)", span="304-304"];
m11_95 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEnumClassUndefined()", file="StringEnumConverterTests.cs", label="Assert.AreEqual((StoreColor)1000, enumClass.NullableStoreColor1)", span="305-305"];
m11_96 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEnumClassUndefined()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(null, enumClass.NullableStoreColor2)", span="306-306"];
m11_97 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEnumClassUndefined()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeEnumClassUndefined()", span="294-294"];
m11_140 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumMemberPlusFlags()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumMemberPlusFlags()", span="395-395"];
m11_141 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumMemberPlusFlags()", file="StringEnumConverterTests.cs", label="List<Foo> lfoo =\r\n                new List<Foo>\r\n                {\r\n                    Foo.Bat | Foo.SerializeAsBaz,\r\n                    Foo.FooBar,\r\n                    Foo.Bat,\r\n                    Foo.SerializeAsBaz,\r\n                    Foo.FooBar | Foo.SerializeAsBaz,\r\n                    (Foo)int.MaxValue\r\n                }", span="397-406"];
m11_142 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumMemberPlusFlags()", file="StringEnumConverterTests.cs", label="string json1 = JsonConvert.SerializeObject(lfoo, Formatting.Indented, new StringEnumConverter { CamelCaseText = true })", span="408-408"];
m11_143 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumMemberPlusFlags()", file="StringEnumConverterTests.cs", label="StringAssert.AreEqual(@''[\r\n  ''''Bat, baz'''',\r\n  ''''foo_bar'''',\r\n  ''''Bat'''',\r\n  ''''baz'''',\r\n  ''''foo_bar, baz'''',\r\n  2147483647\r\n]'', json1)", span="410-417"];
m11_144 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumMemberPlusFlags()", file="StringEnumConverterTests.cs", label="IList<Foo> foos = JsonConvert.DeserializeObject<List<Foo>>(json1)", span="419-419"];
m11_145 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumMemberPlusFlags()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(6, foos.Count)", span="421-421"];
m11_146 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumMemberPlusFlags()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(Foo.Bat | Foo.SerializeAsBaz, foos[0])", span="422-422"];
m11_147 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumMemberPlusFlags()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(Foo.FooBar, foos[1])", span="423-423"];
m11_148 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumMemberPlusFlags()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(Foo.Bat, foos[2])", span="424-424"];
m11_149 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumMemberPlusFlags()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(Foo.SerializeAsBaz, foos[3])", span="425-425"];
m11_150 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumMemberPlusFlags()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(Foo.FooBar | Foo.SerializeAsBaz, foos[4])", span="426-426"];
m11_151 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumMemberPlusFlags()", file="StringEnumConverterTests.cs", label="Assert.AreEqual((Foo)int.MaxValue, foos[5])", span="427-427"];
m11_152 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumMemberPlusFlags()", file="StringEnumConverterTests.cs", label="List<Bar> lbar = new List<Bar>() { Bar.FooBar, Bar.Bat, Bar.SerializeAsBaz }", span="429-429"];
m11_153 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumMemberPlusFlags()", file="StringEnumConverterTests.cs", label="string json2 = JsonConvert.SerializeObject(lbar, Formatting.Indented, new StringEnumConverter { CamelCaseText = true })", span="431-431"];
m11_154 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumMemberPlusFlags()", file="StringEnumConverterTests.cs", label="StringAssert.AreEqual(@''[\r\n  ''''foo_bar'''',\r\n  ''''Bat'''',\r\n  ''''baz''''\r\n]'', json2)", span="433-437"];
m11_155 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumMemberPlusFlags()", file="StringEnumConverterTests.cs", label="IList<Bar> bars = JsonConvert.DeserializeObject<List<Bar>>(json2)", span="439-439"];
m11_156 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumMemberPlusFlags()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(3, bars.Count)", span="441-441"];
m11_157 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumMemberPlusFlags()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(Bar.FooBar, bars[0])", span="442-442"];
m11_158 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumMemberPlusFlags()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(Bar.Bat, bars[1])", span="443-443"];
m11_159 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumMemberPlusFlags()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(Bar.SerializeAsBaz, bars[2])", span="444-444"];
m11_160 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumMemberPlusFlags()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumMemberPlusFlags()", span="395-395"];
m11_77 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeFlagEnum()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeFlagEnum()", span="262-262"];
m11_78 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeFlagEnum()", file="StringEnumConverterTests.cs", label="string json = @''{\r\n  ''''StoreColor'''': ''''Red, White'''',\r\n  ''''NullableStoreColor1'''': 0,\r\n  ''''NullableStoreColor2'''': ''''black, Red, White''''\r\n}''", span="264-268"];
m11_79 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeFlagEnum()", file="StringEnumConverterTests.cs", label="EnumClass enumClass = JsonConvert.DeserializeObject<EnumClass>(json, new StringEnumConverter())", span="270-270"];
m11_80 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeFlagEnum()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(StoreColor.Red | StoreColor.White, enumClass.StoreColor)", span="272-272"];
m11_81 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeFlagEnum()", file="StringEnumConverterTests.cs", label="Assert.AreEqual((StoreColor)0, enumClass.NullableStoreColor1)", span="273-273"];
m11_82 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeFlagEnum()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(StoreColor.Red | StoreColor.White | StoreColor.Black, enumClass.NullableStoreColor2)", span="274-274"];
m11_83 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeFlagEnum()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeFlagEnum()", span="262-262"];
m11_127 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", span="674-674"];
m11_38 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumClass.EnumClass()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.EnumClass.EnumClass()", span="51-51"];
m11_20 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeNameEnumTest()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeNameEnumTest()", span="146-146"];
m11_21 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeNameEnumTest()", file="StringEnumConverterTests.cs", label="string json = @''{\r\n  ''''Enum'''': ''''@first''''\r\n}''", span="148-150"];
m11_22 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeNameEnumTest()", file="StringEnumConverterTests.cs", label="EnumContainer<NamedEnum> c = JsonConvert.DeserializeObject<EnumContainer<NamedEnum>>(json, new StringEnumConverter())", span="152-152"];
m11_23 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeNameEnumTest()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(NamedEnum.First, c.Enum)", span="153-153"];
m11_24 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeNameEnumTest()", file="StringEnumConverterTests.cs", label="json = @''{\r\n  ''''Enum'''': ''''Third''''\r\n}''", span="155-157"];
m11_25 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeNameEnumTest()", file="StringEnumConverterTests.cs", label="c = JsonConvert.DeserializeObject<EnumContainer<NamedEnum>>(json, new StringEnumConverter())", span="159-159"];
m11_26 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeNameEnumTest()", file="StringEnumConverterTests.cs", label="Assert.AreEqual(NamedEnum.Third, c.Enum)", span="160-160"];
m11_27 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeNameEnumTest()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeNameEnumTest()", span="146-146"];
m11_139 [cluster="Unk.Fail", file="StringEnumConverterTests.cs", label="Entry Unk.Fail", span=""];
m11_98 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.CamelCaseTextFlagEnumSerialization()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.CamelCaseTextFlagEnumSerialization()", span="310-310"];
m11_99 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.CamelCaseTextFlagEnumSerialization()", file="StringEnumConverterTests.cs", label="EnumContainer<FlagsTestEnum> c = new EnumContainer<FlagsTestEnum>\r\n            {\r\n                Enum = FlagsTestEnum.First | FlagsTestEnum.Second\r\n            }", span="312-315"];
m11_100 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.CamelCaseTextFlagEnumSerialization()", file="StringEnumConverterTests.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented, new StringEnumConverter { CamelCaseText = true })", span="317-317"];
m11_101 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.CamelCaseTextFlagEnumSerialization()", file="StringEnumConverterTests.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Enum'''': ''''first, second''''\r\n}'', json)", span="318-320"];
m11_102 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.CamelCaseTextFlagEnumSerialization()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.CamelCaseTextFlagEnumSerialization()", span="310-310"];
m11_125 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="72-72"];
m11_19 [cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="324-324"];
m11_118 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Entry lambda expression", span="352-357"];
m11_4 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Entry lambda expression", span="110-118"];
m11_5 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="EnumContainer<NamedEnumDuplicate> c = new EnumContainer<NamedEnumDuplicate>\r\n                {\r\n                    Enum = NamedEnumDuplicate.First\r\n                }", span="112-115"];
m11_6 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="JsonConvert.SerializeObject(c, Formatting.Indented, new StringEnumConverter())", span="117-117"];
m11_7 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Exit lambda expression", span="110-118"];
m11_121 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="serializer.Deserialize<Bucket>(new JsonTextReader(new StringReader(json)))", span="356-356"];
m11_119 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="var serializer = new JsonSerializer()", span="354-354"];
m11_120 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="serializer.Converters.Add(new StringEnumConverter())", span="355-355"];
m11_122 [cluster="lambda expression", file="StringEnumConverterTests.cs", label="Exit lambda expression", span="352-357"];
m11_114 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeInvalidString()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeInvalidString()", span="348-348"];
m11_115 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeInvalidString()", file="StringEnumConverterTests.cs", label="string json = ''{ \''Value\'' : \''Three\'' }''", span="350-350"];
m11_116 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeInvalidString()", file="StringEnumConverterTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                var serializer = new JsonSerializer();\r\n                serializer.Converters.Add(new StringEnumConverter());\r\n                serializer.Deserialize<Bucket>(new JsonTextReader(new StringReader(json)));\r\n            }, @''Error converting value ''''Three'''' to type 'Newtonsoft.Json.Tests.Converters.StringEnumConverterTests+MyEnum'. Path 'Value', line 1, position 19.'')", span="352-357"];
m11_117 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeInvalidString()", file="StringEnumConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.DeserializeInvalidString()", span="348-348"];
m11_3 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="351-351"];
m11_9 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter()", span="62-62"];
m11_70 [cluster="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.NegativeEnumClass.NegativeEnumClass()", file="StringEnumConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.StringEnumConverterTests.NegativeEnumClass.NegativeEnumClass()", span="100-100"];
m11_163 [file="StringEnumConverterTests.cs", label=json, span=""];
m0_0 -> m0_1  [key=0, style=solid];
m0_0 -> m0_2  [color=darkseagreen4, key=1, label=T, style=dashed];
m0_1 -> m0_2  [key=0, style=solid];
m0_2 -> m0_3  [key=0, style=solid];
m0_3 -> m0_0  [color=blue, key=0, style=bold];
m0_4 -> m0_1  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.EnumValue<T>", style=dashed];
m0_4 -> m0_2  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.EnumValue<T>", style=dashed];
m1_372 -> m1_373  [key=0, style=solid];
m1_373 -> m1_374  [key=0, style=solid];
m1_373 -> m1_375  [key=2, style=dotted];
m1_374 -> m1_372  [color=blue, key=0, style=bold];
m1_74 -> m1_75  [key=0, style=solid];
m1_74 -> m1_76  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m1_52 -> m1_50  [color=blue, key=0, style=bold];
m1_95 -> m1_96  [color=green, key=0, style=solid];
m1_95 -> m1_47  [key=2, style=dotted];
m1_95 -> m1_98  [color=darkseagreen4, key=1, label=values, style=dashed];
m1_95 -> m1_99  [color=darkseagreen4, key=1, label=values, style=dashed];
m1_96 -> m1_97  [color=green, key=0, style=solid];
m1_96 -> m1_100  [key=2, style=dotted];
m1_96 -> m1_13  [color=green, key=2, style=dotted];
m1_96 -> m1_87  [color=green, key=2, style=dotted];
m1_96 -> m1_101  [color=green, key=1, label="lambda expression", style=dashed];
m1_97 -> m1_98  [key=0, style=solid];
m1_97 -> m1_44  [key=2, style=dotted];
m1_97 -> m1_99  [key=0, style=solid];
m1_98 -> m1_99  [key=0, style=solid];
m1_98 -> m1_32  [key=2, style=dotted];
m1_98 -> m1_97  [key=0, style=solid];
m1_98 -> m1_89  [key=2, style=dotted];
m1_99 -> m1_95  [color=blue, key=0, style=bold];
m1_99 -> m1_100  [key=0, style=solid];
m1_115 -> m1_112  [color=green, key=0, style=solid];
m1_115 -> m1_115  [color=green, key=1, label=i, style=dashed];
m1_151 -> m1_152  [key=0, style=solid];
m1_152 -> m1_153  [key=0, style=solid];
m1_152 -> m1_156  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_153 -> m1_154  [key=0, style=solid];
m1_153 -> m1_69  [key=2, style=dotted];
m1_153 -> m1_155  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_153 -> m1_162  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_153 -> m1_157  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_153 -> m1_158  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_153 -> m1_159  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_156 -> m1_157  [key=0, style=solid];
m1_156 -> m1_71  [key=2, style=dotted];
m1_156 -> m1_72  [key=2, style=dotted];
m1_156 -> m1_131  [key=2, style=dotted];
m1_154 -> m1_155  [key=0, style=solid];
m1_154 -> m1_114  [key=2, style=dotted];
m1_154 -> m1_156  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_155 -> m1_156  [key=0, style=solid];
m1_155 -> m1_162  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m1_155 -> m1_163  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m1_157 -> m1_158  [key=0, style=solid];
m1_157 -> m1_9  [key=2, style=dotted];
m1_158 -> m1_159  [key=0, style=solid];
m1_158 -> m1_9  [key=2, style=dotted];
m1_159 -> m1_160  [key=0, style=solid];
m1_159 -> m1_9  [key=2, style=dotted];
m1_160 -> m1_151  [color=blue, key=0, style=bold];
m1_210 -> m1_211  [key=0, style=solid];
m1_211 -> m1_212  [key=0, style=solid];
m1_211 -> m1_69  [key=2, style=dotted];
m1_211 -> m1_221  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_211 -> m1_214  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_211 -> m1_215  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_211 -> m1_216  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_211 -> m1_217  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_211 -> m1_218  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_212 -> m1_213  [key=0, style=solid];
m1_212 -> m1_30  [key=2, style=dotted];
m1_212 -> m1_91  [key=2, style=dotted];
m1_212 -> m1_221  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m1_212 -> m1_222  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m1_214 -> m1_215  [key=0, style=solid];
m1_214 -> m1_9  [key=2, style=dotted];
m1_215 -> m1_216  [key=0, style=solid];
m1_215 -> m1_9  [key=2, style=dotted];
m1_216 -> m1_217  [key=0, style=solid];
m1_216 -> m1_9  [key=2, style=dotted];
m1_217 -> m1_218  [key=0, style=solid];
m1_217 -> m1_9  [key=2, style=dotted];
m1_218 -> m1_219  [key=0, style=solid];
m1_218 -> m1_9  [key=2, style=dotted];
m1_213 -> m1_214  [key=0, style=solid];
m1_213 -> m1_191  [key=2, style=dotted];
m1_219 -> m1_210  [color=blue, key=0, style=bold];
m1_29 -> m1_30  [key=0, style=solid];
m1_29 -> m1_35  [color=darkseagreen4, key=1, label=underlyingType, style=dashed];
m1_29 -> m1_44  [key=2, style=dotted];
m1_29 -> m1_43  [key=2, style=dotted];
m1_76 -> m1_77  [key=0, style=solid];
m1_121 -> m1_122  [key=0, style=solid];
m1_121 -> m1_126  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_40 -> m1_41  [key=0, style=solid];
m1_40 -> m1_44  [key=2, style=dotted];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_9  [key=2, style=dotted];
m1_18 -> m1_19  [key=0, style=solid];
m1_18 -> m1_9  [key=2, style=dotted];
m1_282 -> m1_283  [key=0, style=solid];
m1_283 -> m1_284  [key=0, style=solid];
m1_283 -> m1_30  [key=2, style=dotted];
m1_283 -> m1_287  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_284 -> m1_285  [key=0, style=solid];
m1_284 -> m1_295  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m1_287 -> m1_288  [key=0, style=solid];
m1_287 -> m1_293  [key=2, style=dotted];
m1_285 -> m1_286  [key=0, style=solid];
m1_285 -> m1_69  [key=2, style=dotted];
m1_285 -> m1_290  [key=2, style=dotted];
m1_286 -> m1_287  [key=0, style=solid];
m1_286 -> m1_291  [key=2, style=dotted];
m1_286 -> m1_292  [key=2, style=dotted];
m1_286 -> m1_297  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_286 -> m1_300  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_286 -> m1_303  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_288 -> m1_289  [key=0, style=solid];
m1_288 -> m1_9  [key=2, style=dotted];
m1_289 -> m1_282  [color=blue, key=0, style=bold];
m1_46 -> m1_55  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IList<Newtonsoft.Json.Utilities.EnumValue<ulong>> GetNamesAndValues", style=bold];
m1_46 -> m1_53  [key=0, style=solid];
m1_46 -> m1_47  [key=0, style=solid];
m1_46 -> m1_52  [key=2, style=dotted];
m1_46 -> m1_48  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_46 -> m1_49  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_46 -> m1_50  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_53 -> m1_55  [key=2, style=dotted];
m1_53 -> m1_54  [key=0, style=solid];
m1_54 -> m1_46  [color=blue, key=0, style=bold];
m1_14 -> m1_15  [key=0, style=solid];
m1_24 -> m1_25  [color=red, key=0, style=solid];
m1_24 -> m1_22  [color=blue, key=0, style=bold];
m1_25 -> m1_26  [color=red, key=0, style=solid];
m1_25 -> m1_29  [color=red, key=2, style=dotted];
m1_25 -> m1_32  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IList<T> GetFlagsValues", style=bold];
m1_25 -> m1_30  [color=darkseagreen4, key=1, label=T, style=dashed];
m1_26 -> m1_27  [key=0, style=solid];
m1_26 -> m1_30  [key=2, style=dotted];
m1_26 -> m1_31  [key=2, style=dotted];
m1_26 -> m1_34  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m1_26 -> m1_35  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m1_26 -> m1_28  [color=darkseagreen4, key=1, label=enumType, style=dashed];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_32  [key=2, style=dotted];
m1_27 -> m1_29  [key=0, style=solid];
m1_27 -> m1_40  [key=2, style=dotted];
m1_28 -> m1_24  [color=blue, key=0, style=bold];
m1_28 -> m1_41  [key=2, style=dotted];
m1_28 -> m1_39  [key=0, style=solid];
m1_28 -> m1_42  [key=2, style=dotted];
m1_144 -> m1_145  [key=0, style=solid];
m1_144 -> m1_9  [key=2, style=dotted];
m1_45 -> m1_46  [key=0, style=solid];
m1_190 -> m1_423  [key=0, style=solid];
m1_423 -> m1_190  [color=blue, key=0, style=bold];
m1_355 -> m1_356  [key=0, style=solid];
m1_356 -> m1_357  [key=0, style=solid];
m1_357 -> m1_355  [color=blue, key=0, style=bold];
m1_343 -> m1_344  [key=0, style=solid];
m1_344 -> m1_345  [key=0, style=solid];
m1_345 -> m1_346  [key=0, style=solid];
m1_345 -> m1_337  [key=2, style=dotted];
m1_346 -> m1_347  [key=0, style=solid];
m1_346 -> m1_338  [key=2, style=dotted];
m1_347 -> m1_348  [key=0, style=solid];
m1_347 -> m1_71  [key=2, style=dotted];
m1_347 -> m1_339  [key=2, style=dotted];
m1_347 -> m1_349  [color=darkseagreen4, key=1, label=jReader, style=dashed];
m1_347 -> m1_353  [color=darkseagreen4, key=1, label=jReader, style=dashed];
m1_348 -> m1_349  [key=0, style=solid];
m1_348 -> m1_114  [key=2, style=dotted];
m1_348 -> m1_353  [color=darkseagreen4, key=1, label=s, style=dashed];
m1_349 -> m1_350  [key=0, style=solid];
m1_349 -> m1_351  [key=2, style=dotted];
m1_349 -> m1_352  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_350 -> m1_343  [color=blue, key=0, style=bold];
m1_383 -> m1_384  [key=0, style=solid];
m1_384 -> m1_385  [key=0, style=solid];
m1_384 -> m1_382  [key=2, style=dotted];
m1_385 -> m1_383  [color=blue, key=0, style=bold];
m1_87 -> m1_88  [key=0, style=solid];
m1_87 -> m1_54  [key=2, style=dotted];
m1_87 -> m1_9  [key=2, style=dotted];
m1_131 -> m1_132  [color=green, key=0, style=solid];
m1_131 -> m1_140  [color=green, key=0, style=solid];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_9  [key=2, style=dotted];
m1_358 -> m1_359  [key=0, style=solid];
m1_359 -> m1_360  [key=0, style=solid];
m1_359 -> m1_131  [key=2, style=dotted];
m1_360 -> m1_363  [key=0, style=solid];
m1_361 -> m1_362  [key=0, style=solid];
m1_362 -> m1_363  [key=0, style=solid];
m1_362 -> m1_364  [key=2, style=dotted];
m1_363 -> m1_358  [color=blue, key=0, style=bold];
m1_444 -> m1_445  [key=0, style=solid];
m1_445 -> m1_444  [color=blue, key=0, style=bold];
m1_30 -> m1_31  [key=0, style=solid];
m1_30 -> m1_45  [key=2, style=dotted];
m1_30 -> m1_34  [color=darkseagreen4, key=1, label=num, style=dashed];
m1_327 -> m1_328  [key=0, style=solid];
m1_328 -> m1_329  [key=0, style=solid];
m1_329 -> m1_330  [key=0, style=solid];
m1_329 -> m1_337  [key=2, style=dotted];
m1_330 -> m1_331  [key=0, style=solid];
m1_330 -> m1_338  [key=2, style=dotted];
m1_331 -> m1_332  [key=0, style=solid];
m1_331 -> m1_71  [key=2, style=dotted];
m1_331 -> m1_339  [key=2, style=dotted];
m1_331 -> m1_334  [color=darkseagreen4, key=1, label=jReader, style=dashed];
m1_332 -> m1_333  [key=0, style=solid];
m1_332 -> m1_114  [key=2, style=dotted];
m1_332 -> m1_334  [color=darkseagreen4, key=1, label=s, style=dashed];
m1_334 -> m1_335  [key=0, style=solid];
m1_334 -> m1_73  [key=2, style=dotted];
m1_333 -> m1_334  [key=0, style=solid];
m1_333 -> m1_341  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m1_335 -> m1_336  [key=0, style=solid];
m1_335 -> m1_191  [key=2, style=dotted];
m1_336 -> m1_327  [color=blue, key=0, style=bold];
m1_416 -> m1_417  [key=0, style=solid];
m1_417 -> m1_418  [key=0, style=solid];
m1_417 -> m1_402  [key=2, style=dotted];
m1_417 -> m1_30  [key=2, style=dotted];
m1_417 -> m1_31  [key=2, style=dotted];
m1_417 -> m1_421  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m1_418 -> m1_419  [key=0, style=solid];
m1_418 -> m1_9  [key=2, style=dotted];
m1_419 -> m1_416  [color=blue, key=0, style=bold];
m1_100 -> m1_73  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [color=green, key=0, style=solid];
m1_0 -> m1_2  [color=green, key=1, label="System.Type", style=dashed];
m1_0 -> m1_8  [color=green, key=1, label="System.Type", style=dashed];
m1_1 -> m1_2  [color=green, key=0, style=solid];
m1_1 -> m1_12  [color=green, key=2, style=dotted];
m1_1 -> m1_7  [color=green, key=1, label=map, style=dashed];
m1_1 -> m1_9  [color=green, key=1, label=map, style=dashed];
m1_1 -> m1_10  [color=green, key=1, label=map, style=dashed];
m1_1 -> m1_3  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_2 -> m1_3  [color=green, key=0, style=solid];
m1_2 -> m1_10  [color=green, key=0, style=solid];
m1_2 -> m1_13  [color=green, key=2, style=dotted];
m1_2 -> m1_5  [color=green, key=1, label=f, style=dashed];
m1_2 -> m1_6  [color=darkseagreen4, key=1, label=possibleMsgs, style=dashed];
m1_7 -> m1_8  [color=green, key=0, style=solid];
m1_7 -> m1_9  [color=green, key=0, style=solid];
m1_7 -> m1_18  [color=green, key=2, style=dotted];
m1_7 -> m1_0  [color=blue, key=0, style=bold];
m1_9 -> m1_2  [color=green, key=0, style=solid];
m1_9 -> m1_21  [color=green, key=2, style=dotted];
m1_10 -> m1_11  [color=green, key=0, style=solid];
m1_3 -> m1_9  [color=green, key=1, label=n1, style=dashed];
m1_3 -> m1_4  [color=green, key=0, style=solid];
m1_3 -> m1_8  [key=2, style=dotted];
m1_3 -> m1_5  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_3 -> m1_6  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_3 -> m1_14  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_5 -> m1_8  [color=green, key=1, label=n2, style=dashed];
m1_5 -> m1_7  [color=green, key=1, label=n2, style=dashed];
m1_5 -> m1_9  [color=green, key=1, label=n2, style=dashed];
m1_5 -> m1_6  [color=green, key=0, style=solid];
m1_5 -> m1_14  [color=green, key=2, style=dotted];
m1_5 -> m1_306  [color=green, key=2, style=dotted];
m1_5 -> m1_16  [color=green, key=2, style=dotted];
m1_5 -> m1_17  [color=green, key=2, style=dotted];
m1_5 -> m1_22  [color=green, key=1, label="lambda expression", style=dashed];
m1_8 -> m1_11  [color=green, key=0, style=solid];
m1_8 -> m1_19  [color=green, key=2, style=dotted];
m1_8 -> m1_20  [color=green, key=2, style=dotted];
m1_6 -> m1_7  [color=green, key=0, style=solid];
m1_6 -> m1_10  [key=2, style=dotted];
m1_6 -> m1_11  [key=2, style=dotted];
m1_6 -> m1_12  [key=2, style=dotted];
m1_6 -> m1_13  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_4 -> m1_5  [color=green, key=0, style=solid];
m1_4 -> m1_9  [key=2, style=dotted];
m1_11 -> m1_0  [color=blue, key=0, style=bold];
m1_424 -> m1_425  [key=0, style=solid];
m1_424 -> m1_428  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_424 -> m1_431  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_424 -> m1_433  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_424 -> m1_438  [color=darkseagreen4, key=1, label="char[]", style=dashed];
m1_425 -> m1_426  [key=0, style=solid];
m1_425 -> m1_428  [color=darkseagreen4, key=1, label=temp, style=dashed];
m1_425 -> m1_431  [color=darkseagreen4, key=1, label=temp, style=dashed];
m1_425 -> m1_433  [color=darkseagreen4, key=1, label=temp, style=dashed];
m1_425 -> m1_438  [color=darkseagreen4, key=1, label=temp, style=dashed];
m1_428 -> m1_429  [key=0, style=solid];
m1_428 -> m1_72  [key=2, style=dotted];
m1_428 -> m1_441  [key=2, style=dotted];
m1_428 -> m1_435  [color=darkseagreen4, key=1, label=charsRead, style=dashed];
m1_428 -> m1_438  [color=darkseagreen4, key=1, label=charsRead, style=dashed];
m1_428 -> m1_439  [color=darkseagreen4, key=1, label=charsRead, style=dashed];
m1_431 -> m1_432  [key=0, style=solid];
m1_431 -> m1_72  [key=2, style=dotted];
m1_431 -> m1_441  [key=2, style=dotted];
m1_431 -> m1_435  [color=darkseagreen4, key=1, label=charsRead, style=dashed];
m1_431 -> m1_438  [color=darkseagreen4, key=1, label=charsRead, style=dashed];
m1_431 -> m1_439  [color=darkseagreen4, key=1, label=charsRead, style=dashed];
m1_433 -> m1_434  [key=0, style=solid];
m1_433 -> m1_72  [key=2, style=dotted];
m1_433 -> m1_441  [key=2, style=dotted];
m1_433 -> m1_435  [color=darkseagreen4, key=1, label=charsRead, style=dashed];
m1_433 -> m1_438  [color=darkseagreen4, key=1, label=charsRead, style=dashed];
m1_433 -> m1_439  [color=darkseagreen4, key=1, label=charsRead, style=dashed];
m1_438 -> m1_439  [key=0, style=solid];
m1_438 -> m1_443  [key=2, style=dotted];
m1_426 -> m1_427  [key=0, style=solid];
m1_427 -> m1_428  [key=0, style=solid];
m1_427 -> m1_430  [key=0, style=solid];
m1_430 -> m1_431  [key=0, style=solid];
m1_430 -> m1_433  [key=0, style=solid];
m1_429 -> m1_435  [key=0, style=solid];
m1_435 -> m1_436  [key=0, style=solid];
m1_439 -> m1_440  [key=0, style=solid];
m1_432 -> m1_435  [key=0, style=solid];
m1_434 -> m1_435  [key=0, style=solid];
m1_436 -> m1_437  [key=0, style=solid];
m1_436 -> m1_438  [key=0, style=solid];
m1_437 -> m1_440  [key=0, style=solid];
m1_437 -> m1_442  [key=2, style=dotted];
m1_440 -> m1_424  [color=blue, key=0, style=bold];
m1_379 -> m1_380  [key=0, style=solid];
m1_380 -> m1_381  [key=0, style=solid];
m1_380 -> m1_382  [key=2, style=dotted];
m1_381 -> m1_379  [color=blue, key=0, style=bold];
m1_395 -> m1_396  [key=0, style=solid];
m1_396 -> m1_397  [key=0, style=solid];
m1_396 -> m1_30  [key=2, style=dotted];
m1_396 -> m1_70  [key=2, style=dotted];
m1_396 -> m1_400  [color=darkseagreen4, key=1, label=serialiser, style=dashed];
m1_396 -> m1_406  [color=darkseagreen4, key=1, label=serialiser, style=dashed];
m1_397 -> m1_398  [key=0, style=solid];
m1_397 -> m1_372  [key=2, style=dotted];
m1_397 -> m1_375  [key=2, style=dotted];
m1_397 -> m1_402  [key=2, style=dotted];
m1_400 -> m1_401  [key=0, style=solid];
m1_400 -> m1_351  [key=2, style=dotted];
m1_400 -> m1_405  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_398 -> m1_399  [key=0, style=solid];
m1_398 -> m1_403  [key=2, style=dotted];
m1_398 -> m1_400  [color=darkseagreen4, key=1, label=r, style=dashed];
m1_398 -> m1_406  [color=darkseagreen4, key=1, label=r, style=dashed];
m1_399 -> m1_400  [key=0, style=solid];
m1_399 -> m1_404  [key=2, style=dotted];
m1_399 -> m1_406  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_401 -> m1_395  [color=blue, key=0, style=bold];
m1_123 -> m1_124  [key=0, style=solid];
m1_123 -> m1_114  [key=2, style=dotted];
m1_123 -> m1_125  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_123 -> m1_126  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_120 -> m1_121  [key=0, style=solid];
m1_224 -> m1_225  [key=0, style=solid];
m1_225 -> m1_226  [key=0, style=solid];
m1_225 -> m1_69  [key=2, style=dotted];
m1_225 -> m1_230  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_225 -> m1_242  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_225 -> m1_235  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_225 -> m1_236  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_225 -> m1_237  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_225 -> m1_238  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_226 -> m1_227  [key=0, style=solid];
m1_226 -> m1_228  [color=darkseagreen4, key=1, label=input, style=dashed];
m1_230 -> m1_231  [key=0, style=solid];
m1_230 -> m1_242  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m1_230 -> m1_243  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m1_235 -> m1_236  [key=0, style=solid];
m1_235 -> m1_9  [key=2, style=dotted];
m1_236 -> m1_237  [key=0, style=solid];
m1_236 -> m1_9  [key=2, style=dotted];
m1_237 -> m1_238  [key=0, style=solid];
m1_237 -> m1_9  [key=2, style=dotted];
m1_238 -> m1_239  [key=0, style=solid];
m1_238 -> m1_9  [key=2, style=dotted];
m1_227 -> m1_228  [key=0, style=solid];
m1_227 -> m1_229  [color=darkseagreen4, key=1, label=maxDepth, style=dashed];
m1_228 -> m1_229  [key=0, style=solid];
m1_228 -> m1_71  [key=2, style=dotted];
m1_228 -> m1_72  [key=2, style=dotted];
m1_228 -> m1_231  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m1_229 -> m1_230  [key=0, style=solid];
m1_229 -> m1_30  [key=2, style=dotted];
m1_229 -> m1_70  [key=2, style=dotted];
m1_229 -> m1_231  [color=darkseagreen4, key=1, label=jsonSerializer, style=dashed];
m1_231 -> m1_232  [key=0, style=solid];
m1_231 -> m1_73  [key=2, style=dotted];
m1_231 -> m1_233  [color=darkseagreen4, key=1, label=logMessage, style=dashed];
m1_231 -> m1_234  [color=darkseagreen4, key=1, label=logMessage, style=dashed];
m1_232 -> m1_233  [key=0, style=solid];
m1_232 -> m1_240  [key=2, style=dotted];
m1_233 -> m1_234  [key=0, style=solid];
m1_233 -> m1_9  [key=2, style=dotted];
m1_234 -> m1_235  [key=0, style=solid];
m1_234 -> m1_9  [key=2, style=dotted];
m1_239 -> m1_224  [color=blue, key=0, style=bold];
m1_73 -> m1_96  [color=green, key=1, label="System.Type", style=dashed];
m1_73 -> m1_93  [key=0, style=solid];
m1_73 -> m1_94  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_73 -> m1_55  [color=darkorchid, key=3, label="Parameter variable System.Type enumType", style=bold];
m1_73 -> m1_95  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IList<string> GetNames", style=bold];
m1_165 -> m1_166  [key=0, style=solid];
m1_166 -> m1_167  [key=0, style=solid];
m1_166 -> m1_170  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_167 -> m1_168  [key=0, style=solid];
m1_167 -> m1_114  [key=2, style=dotted];
m1_167 -> m1_169  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_167 -> m1_170  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_170 -> m1_171  [key=0, style=solid];
m1_170 -> m1_71  [key=2, style=dotted];
m1_170 -> m1_72  [key=2, style=dotted];
m1_170 -> m1_73  [key=2, style=dotted];
m1_168 -> m1_169  [key=0, style=solid];
m1_168 -> m1_69  [key=2, style=dotted];
m1_168 -> m1_176  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_168 -> m1_171  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_168 -> m1_172  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_169 -> m1_170  [key=0, style=solid];
m1_169 -> m1_175  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m1_169 -> m1_176  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m1_171 -> m1_172  [key=0, style=solid];
m1_171 -> m1_9  [key=2, style=dotted];
m1_172 -> m1_173  [key=0, style=solid];
m1_172 -> m1_9  [key=2, style=dotted];
m1_173 -> m1_165  [color=blue, key=0, style=bold];
m1_122 -> m1_123  [key=0, style=solid];
m1_122 -> m1_69  [key=2, style=dotted];
m1_122 -> m1_125  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_122 -> m1_134  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_122 -> m1_127  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_122 -> m1_128  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_122 -> m1_129  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_126 -> m1_127  [key=0, style=solid];
m1_126 -> m1_71  [key=2, style=dotted];
m1_126 -> m1_72  [key=2, style=dotted];
m1_126 -> m1_131  [key=2, style=dotted];
m1_125 -> m1_126  [key=0, style=solid];
m1_125 -> m1_134  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m1_125 -> m1_135  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m1_127 -> m1_128  [color=green, key=0, style=solid];
m1_127 -> m1_9  [key=2, style=dotted];
m1_127 -> m1_129  [color=green, key=1, label=string, style=dashed];
m1_127 -> m1_136  [color=green, key=1, label=bool, style=dashed];
m1_127 -> m1_140  [color=green, key=3, label="method methodReturn string ToEnumName", style=bold];
m1_128 -> m1_129  [color=green, key=0, style=solid];
m1_128 -> m1_132  [key=2, style=dotted];
m1_128 -> m1_12  [key=2, style=dotted];
m1_128 -> m1_120  [color=green, key=2, style=dotted];
m1_128 -> m1_134  [color=green, key=1, label=map, style=dashed];
m1_129 -> m1_130  [color=green, key=0, style=solid];
m1_129 -> m1_132  [key=2, style=dotted];
m1_129 -> m1_12  [key=2, style=dotted];
m1_129 -> m1_122  [color=green, key=2, style=dotted];
m1_129 -> m1_131  [color=green, key=1, label=names, style=dashed];
m1_129 -> m1_138  [color=green, key=1, label=names, style=dashed];
m1_129 -> m1_140  [color=green, key=1, label=names, style=dashed];
m1_124 -> m1_125  [key=0, style=solid];
m1_124 -> m1_108  [color=green, key=3, label="Parameter variable Newtonsoft.Json.Utilities.BidirectionalDictionary<string, string> map", style=bold];
m1_124 -> m1_113  [color=green, key=3, label="Parameter variable string enumText", style=bold];
m1_124 -> m1_145  [color=green, key=0, style=solid];
m1_124 -> m1_146  [color=green, key=1, label="Newtonsoft.Json.Utilities.BidirectionalDictionary<string, string>", style=dashed];
m1_124 -> m1_147  [color=green, key=1, label=string, style=dashed];
m1_124 -> m1_104  [color=darkorchid, key=3, label="Parameter variable string enumText", style=bold];
m1_130 -> m1_120  [color=blue, key=0, style=bold];
m1_130 -> m1_131  [color=green, key=0, style=solid];
m1_130 -> m1_132  [color=green, key=1, label=i, style=dashed];
m1_130 -> m1_138  [color=green, key=1, label=i, style=dashed];
m1_130 -> m1_139  [color=green, key=1, label=i, style=dashed];
m1_130 -> m1_63  [color=green, key=3, label="Local variable int i", style=bold];
m1_91 -> m1_92  [color=green, key=0, style=solid];
m1_132 -> m1_134  [color=green, key=1, label=name, style=dashed];
m1_132 -> m1_133  [color=green, key=0, style=solid];
m1_132 -> m1_123  [color=green, key=2, style=dotted];
m1_132 -> m1_135  [color=green, key=1, label=name, style=dashed];
m1_376 -> m1_377  [key=0, style=solid];
m1_377 -> m1_378  [key=0, style=solid];
m1_378 -> m1_376  [color=blue, key=0, style=bold];
m1_31 -> m1_36  [color=darkseagreen4, key=1, label=enumNameValues, style=dashed];
m1_31 -> m1_32  [key=0, style=solid];
m1_31 -> m1_46  [key=2, style=dotted];
m1_31 -> m1_33  [color=darkseagreen4, key=1, label=enumNameValues, style=dashed];
m1_42 -> m1_38  [color=blue, key=0, style=bold];
m1_16 -> m1_17  [key=0, style=solid];
m1_13 -> m1_14  [key=0, style=solid];
m1_104 -> m1_105  [color=green, key=0, style=solid];
m1_104 -> m1_108  [color=green, key=1, label="System.Type", style=dashed];
m1_104 -> m1_109  [color=green, key=1, label=string, style=dashed];
m1_104 -> m1_110  [color=green, key=1, label=string, style=dashed];
m1_104 -> m1_117  [color=green, key=1, label=string, style=dashed];
m1_104 -> m1_118  [color=green, key=1, label="System.Type", style=dashed];
m1_104 -> m1_106  [color=green, key=3, label="method methodReturn object ParseEnumName", style=bold];
m1_105 -> m1_106  [color=green, key=0, style=solid];
m1_105 -> m1_107  [color=green, key=0, style=solid];
m1_105 -> m1_114  [key=2, style=dotted];
m1_106 -> m1_119  [color=green, key=0, style=solid];
m1_106 -> m1_107  [key=0, style=solid];
m1_106 -> m1_117  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m1_106 -> m1_118  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m1_107 -> m1_108  [color=green, key=0, style=solid];
m1_107 -> m1_124  [color=green, key=3, label="Local variable string finalEnumText", style=bold];
m1_107 -> m1_110  [key=0, style=solid];
m1_107 -> m1_72  [key=2, style=dotted];
m1_107 -> m1_115  [key=2, style=dotted];
m1_108 -> m1_109  [color=green, key=0, style=solid];
m1_108 -> m1_120  [color=green, key=2, style=dotted];
m1_108 -> m1_114  [color=green, key=1, label=map, style=dashed];
m1_108 -> m1_117  [color=green, key=1, label=map, style=dashed];
m1_109 -> m1_110  [color=green, key=0, style=solid];
m1_109 -> m1_117  [color=green, key=0, style=solid];
m1_109 -> m1_121  [color=green, key=2, style=dotted];
m1_114 -> m1_115  [color=green, key=0, style=solid];
m1_114 -> m1_124  [color=green, key=2, style=dotted];
m1_117 -> m1_118  [color=green, key=0, style=solid];
m1_117 -> m1_124  [color=green, key=2, style=dotted];
m1_117 -> m1_119  [key=0, style=solid];
m1_110 -> m1_111  [color=green, key=0, style=solid];
m1_110 -> m1_122  [color=green, key=2, style=dotted];
m1_110 -> m1_112  [color=green, key=1, label=names, style=dashed];
m1_110 -> m1_113  [color=green, key=1, label=names, style=dashed];
m1_110 -> m1_114  [color=green, key=1, label=names, style=dashed];
m1_110 -> m1_116  [color=green, key=1, label=names, style=dashed];
m1_110 -> m1_9  [key=2, style=dotted];
m1_111 -> m1_114  [color=green, key=1, label=i, style=dashed];
m1_111 -> m1_112  [color=green, key=0, style=solid];
m1_111 -> m1_113  [color=green, key=1, label=i, style=dashed];
m1_111 -> m1_115  [color=green, key=1, label=i, style=dashed];
m1_111 -> m1_63  [color=green, key=3, label="Local variable int i", style=bold];
m1_111 -> m1_9  [key=2, style=dotted];
m1_112 -> m1_113  [color=green, key=0, style=solid];
m1_112 -> m1_116  [color=green, key=0, style=solid];
m1_112 -> m1_9  [key=2, style=dotted];
m1_113 -> m1_114  [color=green, key=0, style=solid];
m1_113 -> m1_123  [color=green, key=2, style=dotted];
m1_113 -> m1_101  [color=blue, key=0, style=bold];
m1_116 -> m1_118  [color=green, key=0, style=solid];
m1_116 -> m1_11  [color=green, key=2, style=dotted];
m1_116 -> m1_117  [key=0, style=solid];
m1_118 -> m1_119  [color=green, key=0, style=solid];
m1_118 -> m1_126  [color=green, key=2, style=dotted];
m1_118 -> m1_78  [key=2, style=dotted];
m1_119 -> m1_104  [color=blue, key=0, style=bold];
m1_119 -> m1_116  [color=blue, key=0, style=bold];
m1_47 -> m1_48  [key=0, style=solid];
m1_47 -> m1_9  [key=2, style=dotted];
m1_48 -> m1_49  [key=0, style=solid];
m1_48 -> m1_54  [key=2, style=dotted];
m1_48 -> m1_9  [key=2, style=dotted];
m1_49 -> m1_50  [key=0, style=solid];
m1_49 -> m1_54  [key=2, style=dotted];
m1_49 -> m1_9  [key=2, style=dotted];
m1_50 -> m1_51  [key=0, style=solid];
m1_50 -> m1_54  [key=2, style=dotted];
m1_50 -> m1_9  [key=2, style=dotted];
m1_51 -> m1_45  [color=blue, key=0, style=bold];
m1_51 -> m1_52  [key=0, style=solid];
m1_41 -> m1_42  [key=0, style=solid];
m1_41 -> m1_32  [key=2, style=dotted];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_8  [key=2, style=dotted];
m1_17 -> m1_19  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_17 -> m1_20  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_17 -> m1_21  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_17 -> m1_22  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_9  [key=2, style=dotted];
m1_22 -> m1_23  [color=green, key=0, style=solid];
m1_22 -> m1_9  [key=2, style=dotted];
m1_23 -> m1_16  [color=blue, key=0, style=bold];
m1_23 -> m1_24  [color=green, key=0, style=solid];
m1_89 -> m1_90  [key=0, style=solid];
m1_89 -> m1_9  [key=2, style=dotted];
m1_78 -> m1_85  [key=0, style=solid];
m1_78 -> m1_41  [key=2, style=dotted];
m1_82 -> m1_83  [key=0, style=solid];
m1_82 -> m1_88  [key=2, style=dotted];
m1_83 -> m1_84  [key=0, style=solid];
m1_83 -> m1_81  [key=0, style=solid];
m1_83 -> m1_89  [key=2, style=dotted];
m1_84 -> m1_85  [key=0, style=solid];
m1_84 -> m1_30  [key=2, style=dotted];
m1_84 -> m1_52  [key=2, style=dotted];
m1_84 -> m1_91  [key=2, style=dotted];
m1_84 -> m1_86  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_84 -> m1_87  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_84 -> m1_88  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_85 -> m1_86  [key=0, style=solid];
m1_85 -> m1_9  [key=2, style=dotted];
m1_85 -> m1_72  [color=blue, key=0, style=bold];
m1_86 -> m1_87  [key=0, style=solid];
m1_86 -> m1_54  [key=2, style=dotted];
m1_86 -> m1_9  [key=2, style=dotted];
m1_88 -> m1_89  [key=0, style=solid];
m1_88 -> m1_54  [key=2, style=dotted];
m1_88 -> m1_9  [key=2, style=dotted];
m1_90 -> m1_82  [color=blue, key=0, style=bold];
m1_90 -> m1_91  [color=green, key=0, style=solid];
m1_143 -> m1_144  [key=0, style=solid];
m1_143 -> m1_9  [key=2, style=dotted];
m1_386 -> m1_387  [key=0, style=solid];
m1_387 -> m1_388  [key=0, style=solid];
m1_387 -> m1_30  [key=2, style=dotted];
m1_387 -> m1_70  [key=2, style=dotted];
m1_387 -> m1_390  [color=darkseagreen4, key=1, label=serialiser, style=dashed];
m1_387 -> m1_393  [color=darkseagreen4, key=1, label=serialiser, style=dashed];
m1_388 -> m1_389  [key=0, style=solid];
m1_390 -> m1_391  [key=0, style=solid];
m1_390 -> m1_351  [key=2, style=dotted];
m1_390 -> m1_392  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_389 -> m1_390  [key=0, style=solid];
m1_389 -> m1_72  [key=2, style=dotted];
m1_389 -> m1_393  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_391 -> m1_386  [color=blue, key=0, style=bold];
m1_101 -> m1_102  [color=green, key=0, style=solid];
m1_102 -> m1_103  [color=green, key=0, style=solid];
m1_102 -> m1_69  [key=2, style=dotted];
m1_102 -> m1_106  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_102 -> m1_118  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_102 -> m1_111  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_102 -> m1_112  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_103 -> m1_104  [key=0, style=solid];
m1_103 -> m1_107  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_103 -> m1_101  [color=blue, key=0, style=bold];
m1_55 -> m1_59  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_55 -> m1_56  [key=0, style=solid];
m1_55 -> m1_58  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_55 -> m1_60  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_55 -> m1_66  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_55 -> m1_61  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IList<Newtonsoft.Json.Utilities.EnumValue<TUnderlyingType>> GetNamesAndValues", style=bold];
m1_63 -> m1_63  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m1_63 -> m1_64  [key=0, style=solid];
m1_63 -> m1_68  [key=0, style=solid];
m1_63 -> m1_9  [key=2, style=dotted];
m1_59 -> m1_72  [key=2, style=dotted];
m1_59 -> m1_63  [color=darkseagreen4, key=1, label=enumValues, style=dashed];
m1_59 -> m1_60  [key=0, style=solid];
m1_59 -> m1_64  [color=darkseagreen4, key=1, label=enumValues, style=dashed];
m1_59 -> m1_66  [color=darkseagreen4, key=1, label=enumValues, style=dashed];
m1_59 -> m1_9  [key=2, style=dotted];
m1_60 -> m1_73  [key=2, style=dotted];
m1_60 -> m1_61  [key=0, style=solid];
m1_60 -> m1_64  [color=darkseagreen4, key=1, label=enumNames, style=dashed];
m1_60 -> m1_54  [key=2, style=dotted];
m1_60 -> m1_9  [key=2, style=dotted];
m1_62 -> m1_63  [key=0, style=solid];
m1_62 -> m1_64  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_62 -> m1_66  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_62 -> m1_67  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_62 -> m1_54  [key=2, style=dotted];
m1_62 -> m1_9  [key=2, style=dotted];
m1_67 -> m1_63  [key=0, style=solid];
m1_67 -> m1_67  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_67 -> m1_68  [key=0, style=solid];
m1_67 -> m1_9  [key=2, style=dotted];
m1_64 -> m1_67  [key=0, style=solid];
m1_64 -> m1_65  [key=0, style=solid];
m1_64 -> m1_74  [key=2, style=dotted];
m1_64 -> m1_48  [key=2, style=dotted];
m1_64 -> m1_49  [key=2, style=dotted];
m1_68 -> m1_69  [key=0, style=solid];
m1_68 -> m1_55  [color=blue, key=0, style=bold];
m1_58 -> m1_59  [key=0, style=solid];
m1_58 -> m1_71  [key=2, style=dotted];
m1_58 -> m1_72  [key=2, style=dotted];
m1_58 -> m1_73  [key=2, style=dotted];
m1_58 -> m1_60  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_58 -> m1_61  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_58 -> m1_62  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_66 -> m1_69  [key=0, style=solid];
m1_66 -> m1_75  [key=2, style=dotted];
m1_66 -> m1_44  [key=2, style=dotted];
m1_66 -> m1_45  [key=2, style=dotted];
m1_66 -> m1_76  [key=2, style=dotted];
m1_66 -> m1_67  [key=0, style=solid];
m1_66 -> m1_9  [key=2, style=dotted];
m1_56 -> m1_58  [key=0, style=solid];
m1_56 -> m1_57  [key=0, style=solid];
m1_56 -> m1_69  [key=2, style=dotted];
m1_56 -> m1_75  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_56 -> m1_63  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_56 -> m1_65  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_56 -> m1_80  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_56 -> m1_66  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_56 -> m1_67  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_61 -> m1_47  [key=2, style=dotted];
m1_61 -> m1_62  [key=0, style=solid];
m1_61 -> m1_64  [color=darkseagreen4, key=1, label=nameValues, style=dashed];
m1_61 -> m1_68  [color=darkseagreen4, key=1, label=nameValues, style=dashed];
m1_61 -> m1_54  [key=2, style=dotted];
m1_61 -> m1_9  [key=2, style=dotted];
m1_65 -> m1_66  [key=0, style=solid];
m1_65 -> m1_10  [key=2, style=dotted];
m1_65 -> m1_11  [key=2, style=dotted];
m1_65 -> m1_12  [key=2, style=dotted];
m1_65 -> m1_79  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_57 -> m1_69  [key=0, style=solid];
m1_57 -> m1_70  [key=2, style=dotted];
m1_57 -> m1_58  [key=0, style=solid];
m1_57 -> m1_30  [key=2, style=dotted];
m1_57 -> m1_52  [key=2, style=dotted];
m1_57 -> m1_75  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m1_57 -> m1_76  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m1_69 -> m1_55  [color=blue, key=0, style=bold];
m1_75 -> m1_76  [key=0, style=solid];
m1_75 -> m1_78  [key=2, style=dotted];
m1_32 -> m1_36  [color=darkseagreen4, key=1, label=selectedFlagsValues, style=dashed];
m1_32 -> m1_47  [key=2, style=dotted];
m1_32 -> m1_33  [key=0, style=solid];
m1_32 -> m1_35  [color=darkseagreen4, key=1, label=selectedFlagsValues, style=dashed];
m1_32 -> m1_37  [color=darkseagreen4, key=1, label=selectedFlagsValues, style=dashed];
m1_32 -> m1_38  [color=darkseagreen4, key=1, label=selectedFlagsValues, style=dashed];
m1_15 -> m1_13  [color=blue, key=0, style=bold];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_36  [key=0, style=solid];
m1_34 -> m1_37  [key=2, style=dotted];
m1_34 -> m1_33  [key=0, style=solid];
m1_35 -> m1_36  [key=0, style=solid];
m1_35 -> m1_33  [key=0, style=solid];
m1_35 -> m1_48  [key=2, style=dotted];
m1_35 -> m1_49  [key=2, style=dotted];
m1_33 -> m1_34  [key=0, style=solid];
m1_33 -> m1_35  [color=darkseagreen4, key=1, label=enumNameValue, style=dashed];
m1_33 -> m1_36  [key=0, style=solid];
m1_36 -> m1_33  [color=blue, key=0, style=bold];
m1_36 -> m1_17  [key=2, style=dotted];
m1_36 -> m1_37  [key=0, style=solid];
m1_36 -> m1_38  [key=0, style=solid];
m1_36 -> m1_50  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_80 -> m1_81  [color=green, key=0, style=solid];
m1_80 -> m1_13  [color=green, key=2, style=dotted];
m1_80 -> m1_87  [color=green, key=2, style=dotted];
m1_80 -> m1_90  [color=green, key=1, label="lambda expression", style=dashed];
m1_79 -> m1_80  [color=green, key=0, style=solid];
m1_79 -> m1_47  [key=2, style=dotted];
m1_79 -> m1_83  [color=darkseagreen4, key=1, label=values, style=dashed];
m1_79 -> m1_84  [color=darkseagreen4, key=1, label=values, style=dashed];
m1_77 -> m1_74  [color=blue, key=0, style=bold];
m1_77 -> m1_79  [key=0, style=solid];
m1_77 -> m1_78  [key=0, style=solid];
m1_77 -> m1_86  [key=2, style=dotted];
m1_81 -> m1_79  [color=blue, key=0, style=bold];
m1_81 -> m1_82  [key=0, style=solid];
m1_81 -> m1_84  [key=0, style=solid];
m1_92 -> m1_93  [key=0, style=solid];
m1_92 -> m1_90  [color=blue, key=0, style=bold];
m1_93 -> m1_94  [key=0, style=solid];
m1_93 -> m1_89  [color=darkseagreen4, key=1, label=eventErrorHandlerCalled, style=dashed];
m1_93 -> m1_95  [key=0, style=solid];
m1_93 -> m1_86  [key=2, style=dotted];
m1_94 -> m1_92  [color=blue, key=0, style=bold];
m1_94 -> m1_100  [key=0, style=solid];
m1_94 -> m1_41  [key=2, style=dotted];
m1_134 -> m1_135  [color=green, key=0, style=solid];
m1_134 -> m1_78  [key=2, style=dotted];
m1_134 -> m1_143  [color=green, key=2, style=dotted];
m1_135 -> m1_136  [color=green, key=0, style=solid];
m1_135 -> m1_138  [color=green, key=1, label=resolvedEnumName, style=dashed];
m1_135 -> m1_135  [color=green, key=1, label=resolvedEnumName, style=dashed];
m1_135 -> m1_137  [color=green, key=1, label=resolvedEnumName, style=dashed];
m1_133 -> m1_134  [color=green, key=0, style=solid];
m1_133 -> m1_135  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m1_136 -> m1_133  [color=blue, key=0, style=bold];
m1_136 -> m1_137  [color=green, key=0, style=solid];
m1_136 -> m1_138  [color=green, key=0, style=solid];
m1_148 -> m1_149  [color=green, key=0, style=solid];
m1_148 -> m1_78  [key=2, style=dotted];
m1_149 -> m1_150  [key=0, style=solid];
m1_149 -> m1_124  [color=blue, key=0, style=bold];
m1_147 -> m1_148  [color=green, key=0, style=solid];
m1_147 -> m1_149  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m1_147 -> m1_147  [color=green, key=1, label=resolvedEnumName, style=dashed];
m1_150 -> m1_147  [color=blue, key=0, style=bold];
m1_162 -> m1_163  [key=0, style=solid];
m1_162 -> m1_78  [key=2, style=dotted];
m1_163 -> m1_164  [key=0, style=solid];
m1_161 -> m1_162  [key=0, style=solid];
m1_161 -> m1_163  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m1_164 -> m1_161  [color=blue, key=0, style=bold];
m1_176 -> m1_177  [key=0, style=solid];
m1_176 -> m1_178  [key=2, style=dotted];
m1_175 -> m1_176  [key=0, style=solid];
m1_174 -> m1_175  [key=0, style=solid];
m1_174 -> m1_176  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m1_177 -> m1_174  [color=blue, key=0, style=bold];
m1_193 -> m1_194  [key=0, style=solid];
m1_193 -> m1_178  [key=2, style=dotted];
m1_194 -> m1_195  [key=0, style=solid];
m1_192 -> m1_193  [key=0, style=solid];
m1_192 -> m1_194  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m1_195 -> m1_192  [color=blue, key=0, style=bold];
m1_207 -> m1_208  [key=0, style=solid];
m1_207 -> m1_178  [key=2, style=dotted];
m1_208 -> m1_209  [key=0, style=solid];
m1_206 -> m1_207  [key=0, style=solid];
m1_206 -> m1_208  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m1_209 -> m1_206  [color=blue, key=0, style=bold];
m1_221 -> m1_222  [key=0, style=solid];
m1_221 -> m1_178  [key=2, style=dotted];
m1_222 -> m1_223  [key=0, style=solid];
m1_220 -> m1_221  [key=0, style=solid];
m1_220 -> m1_222  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m1_223 -> m1_220  [color=blue, key=0, style=bold];
m1_242 -> m1_243  [key=0, style=solid];
m1_242 -> m1_178  [key=2, style=dotted];
m1_243 -> m1_244  [key=0, style=solid];
m1_241 -> m1_242  [key=0, style=solid];
m1_241 -> m1_243  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m1_244 -> m1_241  [color=blue, key=0, style=bold];
m1_262 -> m1_263  [key=0, style=solid];
m1_262 -> m1_178  [key=2, style=dotted];
m1_263 -> m1_264  [key=0, style=solid];
m1_261 -> m1_262  [key=0, style=solid];
m1_261 -> m1_263  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m1_264 -> m1_261  [color=blue, key=0, style=bold];
m1_279 -> m1_280  [key=0, style=solid];
m1_279 -> m1_178  [key=2, style=dotted];
m1_280 -> m1_281  [key=0, style=solid];
m1_278 -> m1_279  [key=0, style=solid];
m1_278 -> m1_280  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m1_281 -> m1_278  [color=blue, key=0, style=bold];
m1_295 -> m1_296  [key=0, style=solid];
m1_297 -> m1_298  [key=0, style=solid];
m1_300 -> m1_301  [key=0, style=solid];
m1_303 -> m1_304  [key=0, style=solid];
m1_294 -> m1_295  [key=0, style=solid];
m1_296 -> m1_294  [color=blue, key=0, style=bold];
m1_298 -> m1_299  [key=0, style=solid];
m1_299 -> m1_297  [color=blue, key=0, style=bold];
m1_301 -> m1_302  [key=0, style=solid];
m1_302 -> m1_300  [color=blue, key=0, style=bold];
m1_304 -> m1_305  [key=0, style=solid];
m1_304 -> m1_306  [key=2, style=dotted];
m1_305 -> m1_303  [color=blue, key=0, style=bold];
m1_316 -> m1_317  [key=0, style=solid];
m1_318 -> m1_319  [key=0, style=solid];
m1_321 -> m1_322  [key=0, style=solid];
m1_324 -> m1_325  [key=0, style=solid];
m1_315 -> m1_316  [key=0, style=solid];
m1_317 -> m1_315  [color=blue, key=0, style=bold];
m1_319 -> m1_320  [key=0, style=solid];
m1_320 -> m1_318  [color=blue, key=0, style=bold];
m1_322 -> m1_323  [key=0, style=solid];
m1_323 -> m1_321  [color=blue, key=0, style=bold];
m1_325 -> m1_326  [key=0, style=solid];
m1_325 -> m1_306  [key=2, style=dotted];
m1_326 -> m1_324  [color=blue, key=0, style=bold];
m1_341 -> m1_342  [key=0, style=solid];
m1_340 -> m1_341  [key=0, style=solid];
m1_342 -> m1_340  [color=blue, key=0, style=bold];
m1_353 -> m1_354  [key=0, style=solid];
m1_353 -> m1_73  [key=2, style=dotted];
m1_352 -> m1_353  [key=0, style=solid];
m1_354 -> m1_352  [color=blue, key=0, style=bold];
m1_393 -> m1_394  [key=0, style=solid];
m1_393 -> m1_115  [key=2, style=dotted];
m1_392 -> m1_393  [key=0, style=solid];
m1_394 -> m1_392  [color=blue, key=0, style=bold];
m1_406 -> m1_407  [key=0, style=solid];
m1_406 -> m1_408  [key=2, style=dotted];
m1_405 -> m1_406  [key=0, style=solid];
m1_407 -> m1_405  [color=blue, key=0, style=bold];
m1_414 -> m1_415  [key=0, style=solid];
m1_413 -> m1_414  [key=0, style=solid];
m1_415 -> m1_413  [color=blue, key=0, style=bold];
m1_421 -> m1_422  [key=0, style=solid];
m1_420 -> m1_421  [key=0, style=solid];
m1_422 -> m1_420  [color=blue, key=0, style=bold];
m1_37 -> m1_38  [key=0, style=solid];
m1_37 -> m1_49  [key=2, style=dotted];
m1_72 -> m1_80  [color=green, key=1, label="System.Type", style=dashed];
m1_72 -> m1_77  [key=0, style=solid];
m1_72 -> m1_78  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_72 -> m1_82  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_72 -> m1_55  [color=darkorchid, key=3, label="Parameter variable System.Type enumType", style=bold];
m1_72 -> m1_79  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IList<object> GetValues", style=bold];
m1_245 -> m1_246  [key=0, style=solid];
m1_246 -> m1_247  [key=0, style=solid];
m1_246 -> m1_69  [key=2, style=dotted];
m1_246 -> m1_251  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_246 -> m1_262  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_246 -> m1_257  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_246 -> m1_258  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_246 -> m1_259  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_247 -> m1_248  [key=0, style=solid];
m1_247 -> m1_249  [color=darkseagreen4, key=1, label=input, style=dashed];
m1_251 -> m1_252  [key=0, style=solid];
m1_251 -> m1_262  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m1_251 -> m1_263  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m1_257 -> m1_258  [key=0, style=solid];
m1_257 -> m1_9  [key=2, style=dotted];
m1_258 -> m1_259  [key=0, style=solid];
m1_258 -> m1_9  [key=2, style=dotted];
m1_259 -> m1_260  [key=0, style=solid];
m1_259 -> m1_9  [key=2, style=dotted];
m1_248 -> m1_249  [key=0, style=solid];
m1_248 -> m1_250  [color=darkseagreen4, key=1, label=maxDepth, style=dashed];
m1_249 -> m1_250  [key=0, style=solid];
m1_249 -> m1_71  [key=2, style=dotted];
m1_249 -> m1_72  [key=2, style=dotted];
m1_249 -> m1_252  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m1_250 -> m1_251  [key=0, style=solid];
m1_250 -> m1_30  [key=2, style=dotted];
m1_250 -> m1_70  [key=2, style=dotted];
m1_250 -> m1_252  [color=darkseagreen4, key=1, label=jsonSerializer, style=dashed];
m1_252 -> m1_253  [key=0, style=solid];
m1_252 -> m1_73  [key=2, style=dotted];
m1_252 -> m1_254  [color=darkseagreen4, key=1, label=logEvents, style=dashed];
m1_252 -> m1_255  [color=darkseagreen4, key=1, label=logEvents, style=dashed];
m1_252 -> m1_256  [color=darkseagreen4, key=1, label=logEvents, style=dashed];
m1_253 -> m1_254  [key=0, style=solid];
m1_253 -> m1_240  [key=2, style=dotted];
m1_254 -> m1_255  [key=0, style=solid];
m1_254 -> m1_9  [key=2, style=dotted];
m1_255 -> m1_256  [key=0, style=solid];
m1_255 -> m1_9  [key=2, style=dotted];
m1_256 -> m1_257  [key=0, style=solid];
m1_256 -> m1_9  [key=2, style=dotted];
m1_260 -> m1_245  [color=blue, key=0, style=bold];
m1_38 -> m1_39  [key=0, style=solid];
m1_39 -> m1_25  [color=blue, key=0, style=bold];
m1_39 -> m1_40  [key=0, style=solid];
m1_39 -> m1_43  [key=2, style=dotted];
m1_39 -> m1_29  [key=2, style=dotted];
m1_179 -> m1_180  [key=0, style=solid];
m1_180 -> m1_181  [key=0, style=solid];
m1_180 -> m1_69  [key=2, style=dotted];
m1_180 -> m1_182  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_180 -> m1_193  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_180 -> m1_185  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_180 -> m1_186  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_180 -> m1_187  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_180 -> m1_188  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_181 -> m1_182  [key=0, style=solid];
m1_181 -> m1_114  [key=2, style=dotted];
m1_181 -> m1_183  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_182 -> m1_183  [key=0, style=solid];
m1_182 -> m1_193  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m1_182 -> m1_194  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m1_185 -> m1_186  [key=0, style=solid];
m1_185 -> m1_9  [key=2, style=dotted];
m1_186 -> m1_187  [key=0, style=solid];
m1_186 -> m1_9  [key=2, style=dotted];
m1_187 -> m1_188  [key=0, style=solid];
m1_187 -> m1_9  [key=2, style=dotted];
m1_188 -> m1_189  [key=0, style=solid];
m1_188 -> m1_9  [key=2, style=dotted];
m1_183 -> m1_184  [key=0, style=solid];
m1_183 -> m1_71  [key=2, style=dotted];
m1_183 -> m1_190  [key=2, style=dotted];
m1_183 -> m1_73  [key=2, style=dotted];
m1_184 -> m1_185  [key=0, style=solid];
m1_184 -> m1_191  [key=2, style=dotted];
m1_189 -> m1_179  [color=blue, key=0, style=bold];
m1_138 -> m1_139  [color=green, key=0, style=solid];
m1_138 -> m1_142  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_140 -> m1_141  [color=green, key=0, style=solid];
m1_140 -> m1_11  [color=green, key=2, style=dotted];
m1_140 -> m1_114  [key=2, style=dotted];
m1_140 -> m1_142  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_137 -> m1_138  [color=green, key=0, style=solid];
m1_137 -> m1_137  [color=green, key=1, label=resolvedEnumName, style=dashed];
m1_137 -> m1_144  [color=green, key=2, style=dotted];
m1_139 -> m1_131  [color=green, key=0, style=solid];
m1_139 -> m1_139  [color=green, key=1, label=i, style=dashed];
m1_139 -> m1_140  [key=0, style=solid];
m1_139 -> m1_69  [key=2, style=dotted];
m1_139 -> m1_141  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_139 -> m1_148  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_139 -> m1_143  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_139 -> m1_144  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_139 -> m1_145  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_141 -> m1_142  [color=green, key=0, style=solid];
m1_141 -> m1_148  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m1_141 -> m1_149  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m1_142 -> m1_127  [color=blue, key=0, style=bold];
m1_142 -> m1_143  [key=0, style=solid];
m1_142 -> m1_71  [key=2, style=dotted];
m1_142 -> m1_72  [key=2, style=dotted];
m1_142 -> m1_131  [key=2, style=dotted];
m1_145 -> m1_146  [color=green, key=0, style=solid];
m1_145 -> m1_9  [key=2, style=dotted];
m1_146 -> m1_137  [color=blue, key=0, style=bold];
m1_146 -> m1_147  [color=green, key=0, style=solid];
m1_146 -> m1_18  [color=green, key=2, style=dotted];
m1_265 -> m1_266  [key=0, style=solid];
m1_266 -> m1_267  [key=0, style=solid];
m1_266 -> m1_69  [key=2, style=dotted];
m1_266 -> m1_268  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_266 -> m1_279  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_266 -> m1_274  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_266 -> m1_275  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_266 -> m1_276  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_267 -> m1_268  [key=0, style=solid];
m1_268 -> m1_269  [key=0, style=solid];
m1_268 -> m1_30  [key=2, style=dotted];
m1_268 -> m1_91  [key=2, style=dotted];
m1_268 -> m1_279  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m1_268 -> m1_280  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m1_268 -> m1_270  [color=darkseagreen4, key=1, label=newDynamicObject, style=dashed];
m1_274 -> m1_275  [key=0, style=solid];
m1_274 -> m1_9  [key=2, style=dotted];
m1_275 -> m1_276  [key=0, style=solid];
m1_275 -> m1_9  [key=2, style=dotted];
m1_276 -> m1_277  [key=0, style=solid];
m1_276 -> m1_9  [key=2, style=dotted];
m1_269 -> m1_270  [key=0, style=solid];
m1_269 -> m1_9  [key=2, style=dotted];
m1_270 -> m1_271  [key=0, style=solid];
m1_270 -> m1_272  [color=darkseagreen4, key=1, label=d, style=dashed];
m1_270 -> m1_273  [color=darkseagreen4, key=1, label=d, style=dashed];
m1_271 -> m1_272  [key=0, style=solid];
m1_271 -> m1_9  [key=2, style=dotted];
m1_272 -> m1_273  [key=0, style=solid];
m1_272 -> m1_9  [key=2, style=dotted];
m1_273 -> m1_274  [key=0, style=solid];
m1_273 -> m1_9  [key=2, style=dotted];
m1_277 -> m1_265  [color=blue, key=0, style=bold];
m1_307 -> m1_308  [key=0, style=solid];
m1_308 -> m1_309  [key=0, style=solid];
m1_308 -> m1_30  [key=2, style=dotted];
m1_308 -> m1_312  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_309 -> m1_310  [key=0, style=solid];
m1_309 -> m1_316  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m1_312 -> m1_313  [key=0, style=solid];
m1_312 -> m1_293  [key=2, style=dotted];
m1_310 -> m1_311  [key=0, style=solid];
m1_310 -> m1_69  [key=2, style=dotted];
m1_310 -> m1_290  [key=2, style=dotted];
m1_311 -> m1_312  [key=0, style=solid];
m1_311 -> m1_291  [key=2, style=dotted];
m1_311 -> m1_292  [key=2, style=dotted];
m1_311 -> m1_318  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_311 -> m1_321  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_311 -> m1_324  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_313 -> m1_314  [key=0, style=solid];
m1_313 -> m1_9  [key=2, style=dotted];
m1_314 -> m1_307  [color=blue, key=0, style=bold];
m1_409 -> m1_410  [key=0, style=solid];
m1_410 -> m1_411  [key=0, style=solid];
m1_410 -> m1_30  [key=2, style=dotted];
m1_410 -> m1_91  [key=2, style=dotted];
m1_410 -> m1_414  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m1_411 -> m1_412  [key=0, style=solid];
m1_411 -> m1_191  [key=2, style=dotted];
m1_412 -> m1_409  [color=blue, key=0, style=bold];
m1_365 -> m1_366  [key=0, style=solid];
m1_365 -> m1_367  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_366 -> m1_367  [key=0, style=solid];
m1_367 -> m1_368  [key=0, style=solid];
m1_367 -> m1_370  [key=0, style=solid];
m1_367 -> m1_371  [key=2, style=dotted];
m1_368 -> m1_369  [key=0, style=solid];
m1_369 -> m1_370  [key=0, style=solid];
m1_369 -> m1_364  [key=2, style=dotted];
m1_370 -> m1_365  [color=blue, key=0, style=bold];
m1_196 -> m1_197  [key=0, style=solid];
m1_197 -> m1_198  [key=0, style=solid];
m1_197 -> m1_69  [key=2, style=dotted];
m1_197 -> m1_207  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_197 -> m1_200  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_197 -> m1_201  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_197 -> m1_202  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_197 -> m1_203  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_198 -> m1_199  [key=0, style=solid];
m1_198 -> m1_30  [key=2, style=dotted];
m1_198 -> m1_205  [key=2, style=dotted];
m1_198 -> m1_207  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m1_198 -> m1_208  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m1_200 -> m1_201  [key=0, style=solid];
m1_200 -> m1_9  [key=2, style=dotted];
m1_201 -> m1_202  [key=0, style=solid];
m1_201 -> m1_9  [key=2, style=dotted];
m1_202 -> m1_203  [key=0, style=solid];
m1_202 -> m1_9  [key=2, style=dotted];
m1_203 -> m1_204  [key=0, style=solid];
m1_203 -> m1_9  [key=2, style=dotted];
m1_199 -> m1_200  [key=0, style=solid];
m1_199 -> m1_191  [key=2, style=dotted];
m1_204 -> m1_196  [color=blue, key=0, style=bold];
m1_446 -> m1_14  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_447 -> m1_75  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_447 -> m1_80  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_448 -> m1_118  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_449 -> m1_134  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_450 -> m1_148  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_451 -> m1_162  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_452 -> m1_176  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_453 -> m1_193  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_454 -> m1_207  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_455 -> m1_221  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_456 -> m1_242  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_457 -> m1_262  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_458 -> m1_279  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_459 -> m1_353  [color=darkseagreen4, key=1, label=jReader, style=dashed];
m1_460 -> m1_353  [color=darkseagreen4, key=1, label=s, style=dashed];
m1_461 -> m1_373  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something", style=dashed];
m1_462 -> m1_393  [color=darkseagreen4, key=1, label=serialiser, style=dashed];
m1_463 -> m1_393  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_464 -> m1_406  [color=darkseagreen4, key=1, label=serialiser, style=dashed];
m1_465 -> m1_406  [color=darkseagreen4, key=1, label=r, style=dashed];
m1_466 -> m1_406  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_467 -> m1_427  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.ThrowingReader", style=dashed];
m1_467 -> m1_429  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.ThrowingReader", style=dashed];
m1_467 -> m1_430  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.ThrowingReader", style=dashed];
m1_467 -> m1_432  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.ThrowingReader", style=dashed];
m1_467 -> m1_434  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.ThrowingReader", style=dashed];
m1_467 -> m1_435  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.ThrowingReader", style=dashed];
m1_467 -> m1_436  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.ThrowingReader", style=dashed];
m2_64 -> m2_65  [key=0, style=solid];
m2_64 -> m2_5  [color=darkorchid, key=3, label="method methodReturn ushort ToUInt16", style=bold];
m2_65 -> m2_66  [key=0, style=solid];
m2_65 -> m2_5  [key=2, style=dotted];
m2_66 -> m2_64  [color=blue, key=0, style=bold];
m2_67 -> m2_68  [key=0, style=solid];
m2_67 -> m2_5  [color=darkorchid, key=3, label="method methodReturn uint ToUInt32", style=bold];
m2_68 -> m2_69  [key=0, style=solid];
m2_68 -> m2_5  [key=2, style=dotted];
m2_69 -> m2_67  [color=blue, key=0, style=bold];
m2_49 -> m2_50  [key=0, style=solid];
m2_49 -> m2_5  [color=darkorchid, key=3, label="method methodReturn int ToInt32", style=bold];
m2_50 -> m2_51  [key=0, style=solid];
m2_50 -> m2_5  [key=2, style=dotted];
m2_51 -> m2_49  [color=blue, key=0, style=bold];
m2_37 -> m2_38  [key=0, style=solid];
m2_37 -> m2_5  [color=darkorchid, key=3, label="method methodReturn System.DateTime ToDateTime", style=bold];
m2_38 -> m2_39  [key=0, style=solid];
m2_38 -> m2_5  [key=2, style=dotted];
m2_39 -> m2_37  [color=blue, key=0, style=bold];
m2_43 -> m2_44  [key=0, style=solid];
m2_43 -> m2_5  [color=darkorchid, key=3, label="method methodReturn double ToDouble", style=bold];
m2_44 -> m2_45  [key=0, style=solid];
m2_44 -> m2_5  [key=2, style=dotted];
m2_45 -> m2_43  [color=blue, key=0, style=bold];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_7  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_5 -> m2_28  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m2_5 -> m2_31  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m2_5 -> m2_34  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m2_5 -> m2_37  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m2_5 -> m2_40  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m2_5 -> m2_43  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m2_5 -> m2_46  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m2_5 -> m2_49  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m2_5 -> m2_52  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m2_5 -> m2_55  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m2_5 -> m2_58  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m2_5 -> m2_61  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m2_5 -> m2_64  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m2_5 -> m2_67  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m2_5 -> m2_70  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m2_6 -> m2_7  [key=0, style=solid];
m2_6 -> m2_4  [key=2, style=dotted];
m2_7 -> m2_8  [key=0, style=solid];
m2_8 -> m2_9  [key=0, style=solid];
m2_8 -> m2_10  [key=2, style=dotted];
m2_9 -> m2_5  [color=blue, key=0, style=bold];
m2_58 -> m2_59  [key=0, style=solid];
m2_58 -> m2_5  [color=darkorchid, key=3, label="method methodReturn float ToSingle", style=bold];
m2_59 -> m2_60  [key=0, style=solid];
m2_59 -> m2_5  [key=2, style=dotted];
m2_60 -> m2_58  [color=blue, key=0, style=bold];
m2_52 -> m2_53  [key=0, style=solid];
m2_52 -> m2_5  [color=darkorchid, key=3, label="method methodReturn long ToInt64", style=bold];
m2_53 -> m2_54  [key=0, style=solid];
m2_53 -> m2_5  [key=2, style=dotted];
m2_54 -> m2_52  [color=blue, key=0, style=bold];
m2_61 -> m2_62  [key=0, style=solid];
m2_61 -> m2_5  [color=darkorchid, key=3, label="method methodReturn string ToString", style=bold];
m2_62 -> m2_63  [key=0, style=solid];
m2_62 -> m2_5  [key=2, style=dotted];
m2_63 -> m2_61  [color=blue, key=0, style=bold];
m2_46 -> m2_47  [key=0, style=solid];
m2_46 -> m2_5  [color=darkorchid, key=3, label="method methodReturn short ToInt16", style=bold];
m2_47 -> m2_48  [key=0, style=solid];
m2_47 -> m2_5  [key=2, style=dotted];
m2_48 -> m2_46  [color=blue, key=0, style=bold];
m2_34 -> m2_35  [key=0, style=solid];
m2_34 -> m2_5  [color=darkorchid, key=3, label="method methodReturn char ToChar", style=bold];
m2_35 -> m2_36  [key=0, style=solid];
m2_35 -> m2_5  [key=2, style=dotted];
m2_36 -> m2_34  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [color=red, key=0, style=solid];
m2_0 -> m2_2  [color=red, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m2_1 -> m2_2  [color=red, key=0, style=solid];
m2_1 -> m2_4  [color=red, key=2, style=dotted];
m2_2 -> m2_3  [color=red, key=0, style=solid];
m2_3 -> m2_0  [color=blue, key=0, style=bold];
m2_31 -> m2_32  [key=0, style=solid];
m2_31 -> m2_5  [color=darkorchid, key=3, label="method methodReturn byte ToByte", style=bold];
m2_32 -> m2_33  [key=0, style=solid];
m2_32 -> m2_5  [key=2, style=dotted];
m2_33 -> m2_31  [color=blue, key=0, style=bold];
m2_40 -> m2_41  [key=0, style=solid];
m2_40 -> m2_5  [color=darkorchid, key=3, label="method methodReturn decimal ToDecimal", style=bold];
m2_41 -> m2_42  [key=0, style=solid];
m2_41 -> m2_5  [key=2, style=dotted];
m2_42 -> m2_40  [color=blue, key=0, style=bold];
m2_11 -> m2_12  [key=0, style=solid];
m2_11 -> m2_13  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_11 -> m2_16  [color=red, key=1, label="System.Type", style=dashed];
m2_12 -> m2_13  [key=0, style=solid];
m2_12 -> m2_4  [key=2, style=dotted];
m2_13 -> m2_14  [key=0, style=solid];
m2_13 -> m2_16  [color=red, key=1, label=token, style=dashed];
m2_16 -> m2_17  [color=red, key=0, style=solid];
m2_16 -> m2_19  [color=red, key=2, style=dotted];
m2_16 -> m2_20  [color=red, key=2, style=dotted];
m2_14 -> m2_15  [key=0, style=solid];
m2_14 -> m2_16  [color=red, key=0, style=solid];
m2_15 -> m2_17  [key=0, style=solid];
m2_15 -> m2_18  [key=2, style=dotted];
m2_17 -> m2_11  [color=blue, key=0, style=bold];
m2_55 -> m2_56  [key=0, style=solid];
m2_55 -> m2_5  [color=darkorchid, key=3, label="method methodReturn sbyte ToSByte", style=bold];
m2_56 -> m2_57  [key=0, style=solid];
m2_56 -> m2_5  [key=2, style=dotted];
m2_57 -> m2_55  [color=blue, key=0, style=bold];
m2_28 -> m2_29  [key=0, style=solid];
m2_28 -> m2_5  [color=darkorchid, key=3, label="method methodReturn bool ToBoolean", style=bold];
m2_29 -> m2_30  [key=0, style=solid];
m2_29 -> m2_5  [key=2, style=dotted];
m2_30 -> m2_28  [color=blue, key=0, style=bold];
m2_21 -> m2_22  [key=0, style=solid];
m2_21 -> m2_23  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_21 -> m2_24  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_21 -> m2_25  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_22 -> m2_23  [key=0, style=solid];
m2_22 -> m2_4  [key=2, style=dotted];
m2_23 -> m2_24  [key=0, style=solid];
m2_23 -> m2_25  [key=0, style=solid];
m2_24 -> m2_25  [key=0, style=solid];
m2_24 -> m2_24  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_25 -> m2_26  [key=0, style=solid];
m2_25 -> m2_27  [key=2, style=dotted];
m2_26 -> m2_21  [color=blue, key=0, style=bold];
m2_70 -> m2_71  [key=0, style=solid];
m2_70 -> m2_5  [color=darkorchid, key=3, label="method methodReturn ulong ToUInt64", style=bold];
m2_71 -> m2_72  [key=0, style=solid];
m2_71 -> m2_5  [key=2, style=dotted];
m2_72 -> m2_70  [color=blue, key=0, style=bold];
m2_73 -> m2_2  [color=red, key=1, label="Newtonsoft.Json.Serialization.JsonFormatterConverter", style=dashed];
m2_73 -> m2_16  [color=red, key=1, label="Newtonsoft.Json.Serialization.JsonFormatterConverter", style=dashed];
m2_73 -> m2_29  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonFormatterConverter", style=dashed];
m2_73 -> m2_32  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonFormatterConverter", style=dashed];
m2_73 -> m2_35  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonFormatterConverter", style=dashed];
m2_73 -> m2_38  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonFormatterConverter", style=dashed];
m2_73 -> m2_41  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonFormatterConverter", style=dashed];
m2_73 -> m2_44  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonFormatterConverter", style=dashed];
m2_73 -> m2_47  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonFormatterConverter", style=dashed];
m2_73 -> m2_50  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonFormatterConverter", style=dashed];
m2_73 -> m2_53  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonFormatterConverter", style=dashed];
m2_73 -> m2_56  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonFormatterConverter", style=dashed];
m2_73 -> m2_59  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonFormatterConverter", style=dashed];
m2_73 -> m2_62  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonFormatterConverter", style=dashed];
m2_73 -> m2_65  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonFormatterConverter", style=dashed];
m2_73 -> m2_68  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonFormatterConverter", style=dashed];
m2_73 -> m2_71  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonFormatterConverter", style=dashed];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid];
m3_2 -> m3_0  [color=blue, key=0, style=bold];
m3_3 -> m3_1  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonISerializableContract", style=dashed];
m4_690 -> m4_691  [key=0, style=solid];
m4_691 -> m4_692  [key=0, style=solid];
m4_692 -> m4_690  [color=blue, key=0, style=bold];
m4_144 -> m4_145  [key=0, style=solid];
m4_145 -> m4_146  [key=0, style=solid];
m4_145 -> m4_27  [key=2, style=dotted];
m4_146 -> m4_144  [color=blue, key=0, style=bold];
m4_661 -> m4_662  [key=0, style=solid];
m4_661 -> m4_655  [color=darkorchid, key=3, label="method methodReturn System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator", style=bold];
m4_662 -> m4_663  [key=0, style=solid];
m4_662 -> m4_655  [key=2, style=dotted];
m4_663 -> m4_661  [color=blue, key=0, style=bold];
m4_84 -> m4_85  [key=0, style=solid];
m4_85 -> m4_86  [key=0, style=solid];
m4_85 -> m4_17  [key=2, style=dotted];
m4_85 -> m4_88  [color=darkseagreen4, key=1, label=d, style=dashed];
m4_86 -> m4_87  [key=0, style=solid];
m4_86 -> m4_15  [key=2, style=dotted];
m4_88 -> m4_89  [key=0, style=solid];
m4_88 -> m4_15  [key=2, style=dotted];
m4_87 -> m4_88  [key=0, style=solid];
m4_87 -> m4_90  [key=2, style=dotted];
m4_89 -> m4_84  [color=blue, key=0, style=bold];
m4_119 -> m4_120  [key=0, style=solid];
m4_120 -> m4_121  [key=0, style=solid];
m4_120 -> m4_17  [key=2, style=dotted];
m4_120 -> m4_122  [color=darkseagreen4, key=1, label=dic, style=dashed];
m4_120 -> m4_123  [color=darkseagreen4, key=1, label=dic, style=dashed];
m4_120 -> m4_124  [color=darkseagreen4, key=1, label=dic, style=dashed];
m4_121 -> m4_122  [key=0, style=solid];
m4_121 -> m4_15  [key=2, style=dotted];
m4_122 -> m4_123  [key=0, style=solid];
m4_122 -> m4_15  [key=2, style=dotted];
m4_123 -> m4_124  [key=0, style=solid];
m4_123 -> m4_15  [key=2, style=dotted];
m4_124 -> m4_125  [key=0, style=solid];
m4_124 -> m4_126  [key=2, style=dotted];
m4_125 -> m4_119  [color=blue, key=0, style=bold];
m4_59 -> m4_60  [key=0, style=solid];
m4_60 -> m4_59  [color=blue, key=0, style=bold];
m4_45 -> m4_46  [key=0, style=solid];
m4_46 -> m4_47  [key=0, style=solid];
m4_46 -> m4_27  [key=2, style=dotted];
m4_47 -> m4_45  [color=blue, key=0, style=bold];
m4_73 -> m4_74  [key=0, style=solid];
m4_74 -> m4_75  [key=0, style=solid];
m4_74 -> m4_76  [key=2, style=dotted];
m4_75 -> m4_73  [color=blue, key=0, style=bold];
m4_24 -> m4_25  [key=0, style=solid];
m4_25 -> m4_26  [key=0, style=solid];
m4_25 -> m4_27  [key=2, style=dotted];
m4_26 -> m4_24  [color=blue, key=0, style=bold];
m4_48 -> m4_49  [key=0, style=solid];
m4_48 -> m4_45  [color=darkorchid, key=3, label="method methodReturn System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator", style=bold];
m4_49 -> m4_50  [key=0, style=solid];
m4_49 -> m4_45  [key=2, style=dotted];
m4_50 -> m4_48  [color=blue, key=0, style=bold];
m4_189 -> m4_190  [key=0, style=solid];
m4_190 -> m4_191  [key=0, style=solid];
m4_190 -> m4_186  [key=2, style=dotted];
m4_190 -> m4_192  [color=darkseagreen4, key=1, label=c, style=dashed];
m4_190 -> m4_193  [color=darkseagreen4, key=1, label=c, style=dashed];
m4_191 -> m4_192  [key=0, style=solid];
m4_191 -> m4_76  [key=2, style=dotted];
m4_192 -> m4_193  [key=0, style=solid];
m4_192 -> m4_76  [key=2, style=dotted];
m4_193 -> m4_194  [key=0, style=solid];
m4_193 -> m4_14  [key=2, style=dotted];
m4_194 -> m4_195  [key=0, style=solid];
m4_194 -> m4_17  [key=2, style=dotted];
m4_194 -> m4_196  [color=darkseagreen4, key=1, label=newValue, style=dashed];
m4_195 -> m4_196  [key=0, style=solid];
m4_195 -> m4_15  [key=2, style=dotted];
m4_196 -> m4_197  [key=0, style=solid];
m4_196 -> m4_97  [key=2, style=dotted];
m4_196 -> m4_15  [key=2, style=dotted];
m4_197 -> m4_189  [color=blue, key=0, style=bold];
m4_158 -> m4_159  [key=0, style=solid];
m4_159 -> m4_160  [key=0, style=solid];
m4_160 -> m4_158  [color=blue, key=0, style=bold];
m4_459 -> m4_460  [key=0, style=solid];
m4_460 -> m4_461  [key=0, style=solid];
m4_460 -> m4_464  [color=darkseagreen4, key=1, label=json, style=dashed];
m4_460 -> m4_460  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m4_461 -> m4_462  [key=0, style=solid];
m4_461 -> m4_55  [key=2, style=dotted];
m4_461 -> m4_463  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_462 -> m4_459  [color=blue, key=0, style=bold];
m4_679 -> m4_680  [key=0, style=solid];
m4_680 -> m4_681  [key=0, style=solid];
m4_681 -> m4_679  [color=blue, key=0, style=bold];
m4_290 -> m4_291  [key=0, style=solid];
m4_291 -> m4_292  [key=0, style=solid];
m4_291 -> m4_291  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m4_292 -> m4_293  [key=0, style=solid];
m4_292 -> m4_17  [key=2, style=dotted];
m4_292 -> m4_294  [color=darkseagreen4, key=1, label=values, style=dashed];
m4_292 -> m4_295  [color=darkseagreen4, key=1, label=values, style=dashed];
m4_292 -> m4_296  [color=darkseagreen4, key=1, label=values, style=dashed];
m4_292 -> m4_297  [color=darkseagreen4, key=1, label=values, style=dashed];
m4_292 -> m4_298  [color=darkseagreen4, key=1, label=values, style=dashed];
m4_292 -> m4_299  [color=darkseagreen4, key=1, label=values, style=dashed];
m4_292 -> m4_300  [color=darkseagreen4, key=1, label=values, style=dashed];
m4_292 -> m4_301  [color=darkseagreen4, key=1, label=values, style=dashed];
m4_292 -> m4_302  [color=darkseagreen4, key=1, label=values, style=dashed];
m4_293 -> m4_294  [key=0, style=solid];
m4_293 -> m4_15  [key=2, style=dotted];
m4_294 -> m4_295  [key=0, style=solid];
m4_294 -> m4_15  [key=2, style=dotted];
m4_295 -> m4_296  [key=0, style=solid];
m4_295 -> m4_15  [key=2, style=dotted];
m4_296 -> m4_297  [key=0, style=solid];
m4_296 -> m4_15  [key=2, style=dotted];
m4_297 -> m4_298  [key=0, style=solid];
m4_297 -> m4_15  [key=2, style=dotted];
m4_298 -> m4_299  [key=0, style=solid];
m4_298 -> m4_15  [key=2, style=dotted];
m4_299 -> m4_300  [key=0, style=solid];
m4_299 -> m4_15  [key=2, style=dotted];
m4_300 -> m4_301  [key=0, style=solid];
m4_300 -> m4_15  [key=2, style=dotted];
m4_301 -> m4_302  [key=0, style=solid];
m4_301 -> m4_15  [key=2, style=dotted];
m4_302 -> m4_303  [key=0, style=solid];
m4_302 -> m4_15  [key=2, style=dotted];
m4_303 -> m4_290  [color=blue, key=0, style=bold];
m4_91 -> m4_92  [key=0, style=solid];
m4_92 -> m4_93  [key=0, style=solid];
m4_92 -> m4_17  [key=2, style=dotted];
m4_92 -> m4_94  [color=darkseagreen4, key=1, label=l, style=dashed];
m4_92 -> m4_95  [color=darkseagreen4, key=1, label=l, style=dashed];
m4_93 -> m4_94  [key=0, style=solid];
m4_93 -> m4_97  [key=2, style=dotted];
m4_93 -> m4_15  [key=2, style=dotted];
m4_94 -> m4_95  [key=0, style=solid];
m4_94 -> m4_15  [key=2, style=dotted];
m4_95 -> m4_96  [key=0, style=solid];
m4_95 -> m4_15  [key=2, style=dotted];
m4_96 -> m4_91  [color=blue, key=0, style=bold];
m4_325 -> m4_326  [key=0, style=solid];
m4_326 -> m4_327  [key=0, style=solid];
m4_326 -> m4_311  [key=2, style=dotted];
m4_327 -> m4_328  [key=0, style=solid];
m4_327 -> m4_14  [key=2, style=dotted];
m4_328 -> m4_329  [key=0, style=solid];
m4_328 -> m4_157  [key=2, style=dotted];
m4_329 -> m4_325  [color=blue, key=0, style=bold];
m4_359 -> m4_360  [key=0, style=solid];
m4_360 -> m4_361  [key=0, style=solid];
m4_360 -> m4_367  [key=2, style=dotted];
m4_360 -> m4_362  [color=darkseagreen4, key=1, label=aa, style=dashed];
m4_360 -> m4_363  [color=darkseagreen4, key=1, label=aa, style=dashed];
m4_360 -> m4_364  [color=darkseagreen4, key=1, label=aa, style=dashed];
m4_361 -> m4_362  [key=0, style=solid];
m4_362 -> m4_363  [key=0, style=solid];
m4_363 -> m4_364  [key=0, style=solid];
m4_364 -> m4_365  [key=0, style=solid];
m4_364 -> m4_14  [key=2, style=dotted];
m4_365 -> m4_366  [key=0, style=solid];
m4_365 -> m4_157  [key=2, style=dotted];
m4_366 -> m4_359  [color=blue, key=0, style=bold];
m4_493 -> m4_494  [key=0, style=solid];
m4_494 -> m4_495  [key=0, style=solid];
m4_494 -> m4_500  [key=2, style=dotted];
m4_495 -> m4_496  [key=0, style=solid];
m4_496 -> m4_497  [key=0, style=solid];
m4_496 -> m4_44  [key=2, style=dotted];
m4_497 -> m4_498  [key=0, style=solid];
m4_497 -> m4_66  [key=2, style=dotted];
m4_497 -> m4_501  [key=2, style=dotted];
m4_498 -> m4_499  [key=0, style=solid];
m4_498 -> m4_157  [key=2, style=dotted];
m4_499 -> m4_493  [color=blue, key=0, style=bold];
m4_71 -> m4_72  [key=0, style=solid];
m4_72 -> m4_71  [color=blue, key=0, style=bold];
m4_98 -> m4_99  [key=0, style=solid];
m4_99 -> m4_100  [key=0, style=solid];
m4_99 -> m4_17  [key=2, style=dotted];
m4_99 -> m4_101  [color=darkseagreen4, key=1, label=list, style=dashed];
m4_99 -> m4_102  [color=darkseagreen4, key=1, label=list, style=dashed];
m4_99 -> m4_103  [color=darkseagreen4, key=1, label=list, style=dashed];
m4_100 -> m4_101  [key=0, style=solid];
m4_100 -> m4_15  [key=2, style=dotted];
m4_101 -> m4_102  [key=0, style=solid];
m4_101 -> m4_15  [key=2, style=dotted];
m4_102 -> m4_103  [key=0, style=solid];
m4_102 -> m4_15  [key=2, style=dotted];
m4_103 -> m4_104  [key=0, style=solid];
m4_103 -> m4_15  [key=2, style=dotted];
m4_104 -> m4_98  [color=blue, key=0, style=bold];
m4_685 -> m4_686  [key=0, style=solid];
m4_685 -> m4_687  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_686 -> m4_687  [key=0, style=solid];
m4_687 -> m4_688  [key=0, style=solid];
m4_688 -> m4_689  [key=0, style=solid];
m4_689 -> m4_685  [color=blue, key=0, style=bold];
m4_542 -> m4_543  [key=0, style=solid];
m4_543 -> m4_544  [key=0, style=solid];
m4_543 -> m4_556  [key=2, style=dotted];
m4_543 -> m4_546  [color=darkseagreen4, key=1, label=name, style=dashed];
m4_543 -> m4_547  [color=darkseagreen4, key=1, label=name, style=dashed];
m4_543 -> m4_548  [color=darkseagreen4, key=1, label=name, style=dashed];
m4_544 -> m4_545  [key=0, style=solid];
m4_544 -> m4_557  [key=2, style=dotted];
m4_544 -> m4_546  [color=darkseagreen4, key=1, label=p1, style=dashed];
m4_546 -> m4_547  [key=0, style=solid];
m4_546 -> m4_76  [key=2, style=dotted];
m4_547 -> m4_548  [key=0, style=solid];
m4_547 -> m4_76  [key=2, style=dotted];
m4_548 -> m4_549  [key=0, style=solid];
m4_548 -> m4_14  [key=2, style=dotted];
m4_548 -> m4_550  [color=darkseagreen4, key=1, label=json, style=dashed];
m4_545 -> m4_546  [key=0, style=solid];
m4_545 -> m4_557  [key=2, style=dotted];
m4_545 -> m4_547  [color=darkseagreen4, key=1, label=p2, style=dashed];
m4_549 -> m4_550  [key=0, style=solid];
m4_549 -> m4_157  [key=2, style=dotted];
m4_550 -> m4_551  [key=0, style=solid];
m4_550 -> m4_17  [key=2, style=dotted];
m4_550 -> m4_552  [color=darkseagreen4, key=1, label=newName, style=dashed];
m4_550 -> m4_553  [color=darkseagreen4, key=1, label=newName, style=dashed];
m4_550 -> m4_554  [color=darkseagreen4, key=1, label=newName, style=dashed];
m4_551 -> m4_552  [key=0, style=solid];
m4_551 -> m4_15  [key=2, style=dotted];
m4_552 -> m4_553  [key=0, style=solid];
m4_552 -> m4_15  [key=2, style=dotted];
m4_553 -> m4_554  [key=0, style=solid];
m4_553 -> m4_15  [key=2, style=dotted];
m4_554 -> m4_555  [key=0, style=solid];
m4_554 -> m4_15  [key=2, style=dotted];
m4_555 -> m4_542  [color=blue, key=0, style=bold];
m4_482 -> m4_483  [key=0, style=solid];
m4_483 -> m4_484  [key=0, style=solid];
m4_483 -> m4_491  [color=darkseagreen4, key=1, label=json, style=dashed];
m4_483 -> m4_483  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m4_484 -> m4_485  [key=0, style=solid];
m4_484 -> m4_17  [key=2, style=dotted];
m4_484 -> m4_486  [color=darkseagreen4, key=1, label=aa, style=dashed];
m4_484 -> m4_487  [color=darkseagreen4, key=1, label=aa, style=dashed];
m4_484 -> m4_488  [color=darkseagreen4, key=1, label=aa, style=dashed];
m4_484 -> m4_489  [color=darkseagreen4, key=1, label=aa, style=dashed];
m4_484 -> m4_490  [color=darkseagreen4, key=1, label=aa, style=dashed];
m4_491 -> m4_492  [key=0, style=solid];
m4_491 -> m4_15  [key=2, style=dotted];
m4_485 -> m4_486  [key=0, style=solid];
m4_485 -> m4_15  [key=2, style=dotted];
m4_486 -> m4_487  [key=0, style=solid];
m4_486 -> m4_15  [key=2, style=dotted];
m4_487 -> m4_488  [key=0, style=solid];
m4_487 -> m4_379  [key=2, style=dotted];
m4_487 -> m4_15  [key=2, style=dotted];
m4_488 -> m4_489  [key=0, style=solid];
m4_488 -> m4_379  [key=2, style=dotted];
m4_488 -> m4_15  [key=2, style=dotted];
m4_489 -> m4_490  [key=0, style=solid];
m4_489 -> m4_379  [key=2, style=dotted];
m4_489 -> m4_15  [key=2, style=dotted];
m4_490 -> m4_491  [key=0, style=solid];
m4_490 -> m4_184  [key=2, style=dotted];
m4_492 -> m4_482  [color=blue, key=0, style=bold];
m4_535 -> m4_536  [key=0, style=solid];
m4_536 -> m4_537  [key=0, style=solid];
m4_536 -> m4_536  [color=darkorchid, key=3, label="Local variable string jsonText", style=bold];
m4_537 -> m4_538  [key=0, style=solid];
m4_537 -> m4_17  [key=2, style=dotted];
m4_537 -> m4_539  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_537 -> m4_540  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_538 -> m4_539  [key=0, style=solid];
m4_538 -> m4_15  [key=2, style=dotted];
m4_539 -> m4_540  [key=0, style=solid];
m4_539 -> m4_15  [key=2, style=dotted];
m4_540 -> m4_541  [key=0, style=solid];
m4_540 -> m4_15  [key=2, style=dotted];
m4_541 -> m4_535  [color=blue, key=0, style=bold];
m4_173 -> m4_174  [key=0, style=solid];
m4_174 -> m4_175  [key=0, style=solid];
m4_174 -> m4_178  [color=darkseagreen4, key=1, label=s, style=dashed];
m4_174 -> m4_181  [color=darkseagreen4, key=1, label=s, style=dashed];
m4_174 -> m4_174  [color=darkorchid, key=3, label="Local variable string s", style=bold];
m4_175 -> m4_176  [key=0, style=solid];
m4_175 -> m4_184  [key=2, style=dotted];
m4_178 -> m4_179  [key=0, style=solid];
m4_178 -> m4_185  [key=2, style=dotted];
m4_181 -> m4_182  [key=0, style=solid];
m4_181 -> m4_185  [key=2, style=dotted];
m4_176 -> m4_177  [key=0, style=solid];
m4_176 -> m4_15  [key=2, style=dotted];
m4_177 -> m4_178  [key=0, style=solid];
m4_177 -> m4_156  [key=2, style=dotted];
m4_177 -> m4_179  [color=darkseagreen4, key=1, label=d1, style=dashed];
m4_179 -> m4_180  [key=0, style=solid];
m4_179 -> m4_184  [key=2, style=dotted];
m4_179 -> m4_15  [key=2, style=dotted];
m4_180 -> m4_181  [key=0, style=solid];
m4_180 -> m4_156  [key=2, style=dotted];
m4_180 -> m4_182  [color=darkseagreen4, key=1, label=d2, style=dashed];
m4_182 -> m4_183  [key=0, style=solid];
m4_182 -> m4_184  [key=2, style=dotted];
m4_182 -> m4_15  [key=2, style=dotted];
m4_183 -> m4_173  [color=blue, key=0, style=bold];
m4_406 -> m4_407  [key=0, style=solid];
m4_407 -> m4_408  [key=0, style=solid];
m4_407 -> m4_417  [color=darkseagreen4, key=1, label=json, style=dashed];
m4_407 -> m4_407  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m4_408 -> m4_409  [key=0, style=solid];
m4_408 -> m4_17  [key=2, style=dotted];
m4_408 -> m4_410  [color=darkseagreen4, key=1, label=aa, style=dashed];
m4_408 -> m4_411  [color=darkseagreen4, key=1, label=aa, style=dashed];
m4_408 -> m4_412  [color=darkseagreen4, key=1, label=aa, style=dashed];
m4_408 -> m4_413  [color=darkseagreen4, key=1, label=aa, style=dashed];
m4_408 -> m4_414  [color=darkseagreen4, key=1, label=aa, style=dashed];
m4_408 -> m4_415  [color=darkseagreen4, key=1, label=aa, style=dashed];
m4_408 -> m4_416  [color=darkseagreen4, key=1, label=aa, style=dashed];
m4_417 -> m4_418  [key=0, style=solid];
m4_417 -> m4_15  [key=2, style=dotted];
m4_409 -> m4_410  [key=0, style=solid];
m4_409 -> m4_15  [key=2, style=dotted];
m4_410 -> m4_411  [key=0, style=solid];
m4_410 -> m4_15  [key=2, style=dotted];
m4_411 -> m4_412  [key=0, style=solid];
m4_411 -> m4_379  [key=2, style=dotted];
m4_411 -> m4_15  [key=2, style=dotted];
m4_412 -> m4_413  [key=0, style=solid];
m4_412 -> m4_379  [key=2, style=dotted];
m4_412 -> m4_15  [key=2, style=dotted];
m4_413 -> m4_414  [key=0, style=solid];
m4_413 -> m4_379  [key=2, style=dotted];
m4_413 -> m4_15  [key=2, style=dotted];
m4_414 -> m4_415  [key=0, style=solid];
m4_414 -> m4_15  [key=2, style=dotted];
m4_415 -> m4_416  [key=0, style=solid];
m4_415 -> m4_15  [key=2, style=dotted];
m4_416 -> m4_417  [key=0, style=solid];
m4_416 -> m4_184  [key=2, style=dotted];
m4_418 -> m4_406  [color=blue, key=0, style=bold];
m4_198 -> m4_199  [key=0, style=solid];
m4_199 -> m4_200  [key=0, style=solid];
m4_199 -> m4_44  [key=2, style=dotted];
m4_199 -> m4_201  [color=darkseagreen4, key=1, label=list, style=dashed];
m4_199 -> m4_202  [color=darkseagreen4, key=1, label=list, style=dashed];
m4_200 -> m4_201  [key=0, style=solid];
m4_200 -> m4_13  [key=2, style=dotted];
m4_200 -> m4_76  [key=2, style=dotted];
m4_201 -> m4_202  [key=0, style=solid];
m4_201 -> m4_13  [key=2, style=dotted];
m4_201 -> m4_76  [key=2, style=dotted];
m4_202 -> m4_203  [key=0, style=solid];
m4_202 -> m4_184  [key=2, style=dotted];
m4_202 -> m4_204  [color=darkseagreen4, key=1, label=json, style=dashed];
m4_203 -> m4_204  [key=0, style=solid];
m4_203 -> m4_15  [key=2, style=dotted];
m4_204 -> m4_205  [key=0, style=solid];
m4_204 -> m4_17  [key=2, style=dotted];
m4_204 -> m4_206  [color=darkseagreen4, key=1, label=result, style=dashed];
m4_204 -> m4_207  [color=darkseagreen4, key=1, label=result, style=dashed];
m4_204 -> m4_208  [color=darkseagreen4, key=1, label=result, style=dashed];
m4_204 -> m4_209  [color=darkseagreen4, key=1, label=result, style=dashed];
m4_205 -> m4_206  [key=0, style=solid];
m4_205 -> m4_15  [key=2, style=dotted];
m4_206 -> m4_207  [key=0, style=solid];
m4_206 -> m4_15  [key=2, style=dotted];
m4_207 -> m4_208  [key=0, style=solid];
m4_207 -> m4_15  [key=2, style=dotted];
m4_208 -> m4_209  [key=0, style=solid];
m4_208 -> m4_15  [key=2, style=dotted];
m4_209 -> m4_210  [key=0, style=solid];
m4_209 -> m4_15  [key=2, style=dotted];
m4_210 -> m4_198  [color=blue, key=0, style=bold];
m4_598 -> m4_599  [key=0, style=solid];
m4_599 -> m4_600  [key=0, style=solid];
m4_599 -> m4_609  [key=2, style=dotted];
m4_599 -> m4_602  [color=darkseagreen4, key=1, label=a1, style=dashed];
m4_600 -> m4_601  [key=0, style=solid];
m4_600 -> m4_609  [key=2, style=dotted];
m4_600 -> m4_603  [color=darkseagreen4, key=1, label=a2, style=dashed];
m4_602 -> m4_603  [key=0, style=solid];
m4_602 -> m4_76  [key=2, style=dotted];
m4_601 -> m4_602  [key=0, style=solid];
m4_601 -> m4_610  [key=2, style=dotted];
m4_601 -> m4_603  [color=darkseagreen4, key=1, label=articles1, style=dashed];
m4_601 -> m4_604  [color=darkseagreen4, key=1, label=articles1, style=dashed];
m4_601 -> m4_606  [color=darkseagreen4, key=1, label=articles1, style=dashed];
m4_601 -> m4_607  [color=darkseagreen4, key=1, label=articles1, style=dashed];
m4_603 -> m4_604  [key=0, style=solid];
m4_603 -> m4_76  [key=2, style=dotted];
m4_604 -> m4_605  [key=0, style=solid];
m4_604 -> m4_184  [key=2, style=dotted];
m4_606 -> m4_607  [key=0, style=solid];
m4_606 -> m4_15  [key=2, style=dotted];
m4_607 -> m4_608  [key=0, style=solid];
m4_607 -> m4_15  [key=2, style=dotted];
m4_605 -> m4_606  [key=0, style=solid];
m4_605 -> m4_17  [key=2, style=dotted];
m4_605 -> m4_607  [color=darkseagreen4, key=1, label=articles2, style=dashed];
m4_608 -> m4_598  [color=blue, key=0, style=bold];
m4_254 -> m4_255  [key=0, style=solid];
m4_255 -> m4_256  [key=0, style=solid];
m4_255 -> m4_156  [key=2, style=dotted];
m4_256 -> m4_257  [key=0, style=solid];
m4_256 -> m4_14  [key=2, style=dotted];
m4_256 -> m4_258  [color=darkseagreen4, key=1, label=json, style=dashed];
m4_257 -> m4_258  [key=0, style=solid];
m4_257 -> m4_157  [key=2, style=dotted];
m4_258 -> m4_259  [key=0, style=solid];
m4_258 -> m4_17  [key=2, style=dotted];
m4_258 -> m4_260  [color=darkseagreen4, key=1, label=v2, style=dashed];
m4_258 -> m4_261  [color=darkseagreen4, key=1, label=v2, style=dashed];
m4_258 -> m4_262  [color=darkseagreen4, key=1, label=v2, style=dashed];
m4_259 -> m4_260  [key=0, style=solid];
m4_259 -> m4_15  [key=2, style=dotted];
m4_260 -> m4_261  [key=0, style=solid];
m4_260 -> m4_15  [key=2, style=dotted];
m4_261 -> m4_262  [key=0, style=solid];
m4_261 -> m4_15  [key=2, style=dotted];
m4_262 -> m4_263  [key=0, style=solid];
m4_262 -> m4_15  [key=2, style=dotted];
m4_263 -> m4_254  [color=blue, key=0, style=bold];
m4_426 -> m4_427  [key=0, style=solid];
m4_427 -> m4_428  [key=0, style=solid];
m4_427 -> m4_431  [color=darkseagreen4, key=1, label=json, style=dashed];
m4_427 -> m4_427  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m4_428 -> m4_429  [key=0, style=solid];
m4_428 -> m4_55  [key=2, style=dotted];
m4_428 -> m4_430  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_429 -> m4_426  [color=blue, key=0, style=bold];
m4_618 -> m4_619  [key=0, style=solid];
m4_619 -> m4_620  [key=0, style=solid];
m4_619 -> m4_569  [key=2, style=dotted];
m4_619 -> m4_225  [key=2, style=dotted];
m4_619 -> m4_622  [color=darkseagreen4, key=1, label=p1, style=dashed];
m4_620 -> m4_621  [key=0, style=solid];
m4_620 -> m4_569  [key=2, style=dotted];
m4_620 -> m4_225  [key=2, style=dotted];
m4_620 -> m4_623  [color=darkseagreen4, key=1, label=p2, style=dashed];
m4_622 -> m4_623  [key=0, style=solid];
m4_622 -> m4_76  [key=2, style=dotted];
m4_621 -> m4_622  [key=0, style=solid];
m4_621 -> m4_44  [key=2, style=dotted];
m4_621 -> m4_623  [color=darkseagreen4, key=1, label=products, style=dashed];
m4_621 -> m4_624  [color=darkseagreen4, key=1, label=products, style=dashed];
m4_623 -> m4_624  [key=0, style=solid];
m4_623 -> m4_76  [key=2, style=dotted];
m4_624 -> m4_625  [key=0, style=solid];
m4_624 -> m4_14  [key=2, style=dotted];
m4_625 -> m4_626  [key=0, style=solid];
m4_625 -> m4_157  [key=2, style=dotted];
m4_626 -> m4_618  [color=blue, key=0, style=bold];
m4_28 -> m4_29  [key=0, style=solid];
m4_28 -> m4_24  [color=darkorchid, key=3, label="method methodReturn System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator", style=bold];
m4_29 -> m4_30  [key=0, style=solid];
m4_29 -> m4_24  [key=2, style=dotted];
m4_30 -> m4_28  [color=blue, key=0, style=bold];
m4_433 -> m4_434  [key=0, style=solid];
m4_434 -> m4_435  [key=0, style=solid];
m4_434 -> m4_438  [color=darkseagreen4, key=1, label=json, style=dashed];
m4_434 -> m4_434  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m4_435 -> m4_436  [key=0, style=solid];
m4_435 -> m4_55  [key=2, style=dotted];
m4_435 -> m4_437  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_436 -> m4_433  [color=blue, key=0, style=bold];
m4_250 -> m4_251  [key=0, style=solid];
m4_251 -> m4_252  [key=0, style=solid];
m4_251 -> m4_17  [key=2, style=dotted];
m4_252 -> m4_253  [key=0, style=solid];
m4_252 -> m4_15  [key=2, style=dotted];
m4_253 -> m4_250  [color=blue, key=0, style=bold];
m4_61 -> m4_62  [key=0, style=solid];
m4_62 -> m4_63  [key=0, style=solid];
m4_62 -> m4_55  [key=2, style=dotted];
m4_62 -> m4_68  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_63 -> m4_64  [key=0, style=solid];
m4_63 -> m4_66  [key=2, style=dotted];
m4_63 -> m4_67  [key=2, style=dotted];
m4_64 -> m4_65  [key=0, style=solid];
m4_64 -> m4_15  [key=2, style=dotted];
m4_65 -> m4_61  [color=blue, key=0, style=bold];
m4_51 -> m4_52  [key=0, style=solid];
m4_52 -> m4_53  [key=0, style=solid];
m4_52 -> m4_57  [color=darkseagreen4, key=1, label=json, style=dashed];
m4_52 -> m4_52  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m4_53 -> m4_54  [key=0, style=solid];
m4_53 -> m4_55  [key=2, style=dotted];
m4_53 -> m4_56  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_54 -> m4_51  [color=blue, key=0, style=bold];
m4_341 -> m4_342  [key=0, style=solid];
m4_342 -> m4_343  [key=0, style=solid];
m4_342 -> m4_349  [key=2, style=dotted];
m4_342 -> m4_344  [color=darkseagreen4, key=1, label=aa, style=dashed];
m4_342 -> m4_345  [color=darkseagreen4, key=1, label=aa, style=dashed];
m4_342 -> m4_346  [color=darkseagreen4, key=1, label=aa, style=dashed];
m4_343 -> m4_344  [key=0, style=solid];
m4_344 -> m4_345  [key=0, style=solid];
m4_345 -> m4_346  [key=0, style=solid];
m4_346 -> m4_347  [key=0, style=solid];
m4_346 -> m4_184  [key=2, style=dotted];
m4_347 -> m4_348  [key=0, style=solid];
m4_347 -> m4_15  [key=2, style=dotted];
m4_348 -> m4_341  [color=blue, key=0, style=bold];
m4_136 -> m4_137  [key=0, style=solid];
m4_137 -> m4_138  [key=0, style=solid];
m4_137 -> m4_139  [key=2, style=dotted];
m4_138 -> m4_136  [color=blue, key=0, style=bold];
m4_150 -> m4_151  [key=0, style=solid];
m4_151 -> m4_152  [key=0, style=solid];
m4_151 -> m4_156  [key=2, style=dotted];
m4_152 -> m4_153  [key=0, style=solid];
m4_152 -> m4_133  [key=2, style=dotted];
m4_153 -> m4_154  [key=0, style=solid];
m4_153 -> m4_14  [key=2, style=dotted];
m4_154 -> m4_155  [key=0, style=solid];
m4_154 -> m4_157  [key=2, style=dotted];
m4_155 -> m4_150  [color=blue, key=0, style=bold];
m4_350 -> m4_351  [key=0, style=solid];
m4_351 -> m4_352  [key=0, style=solid];
m4_351 -> m4_358  [key=2, style=dotted];
m4_351 -> m4_353  [color=darkseagreen4, key=1, label=aa, style=dashed];
m4_351 -> m4_354  [color=darkseagreen4, key=1, label=aa, style=dashed];
m4_351 -> m4_355  [color=darkseagreen4, key=1, label=aa, style=dashed];
m4_352 -> m4_353  [key=0, style=solid];
m4_353 -> m4_354  [key=0, style=solid];
m4_354 -> m4_355  [key=0, style=solid];
m4_355 -> m4_356  [key=0, style=solid];
m4_355 -> m4_184  [key=2, style=dotted];
m4_356 -> m4_357  [key=0, style=solid];
m4_356 -> m4_15  [key=2, style=dotted];
m4_357 -> m4_350  [color=blue, key=0, style=bold];
m4_664 -> m4_665  [key=0, style=solid];
m4_665 -> m4_666  [key=0, style=solid];
m4_665 -> m4_667  [key=2, style=dotted];
m4_666 -> m4_664  [color=blue, key=0, style=bold];
m4_112 -> m4_113  [key=0, style=solid];
m4_113 -> m4_114  [key=0, style=solid];
m4_113 -> m4_17  [key=2, style=dotted];
m4_113 -> m4_115  [color=darkseagreen4, key=1, label=list, style=dashed];
m4_113 -> m4_116  [color=darkseagreen4, key=1, label=list, style=dashed];
m4_113 -> m4_117  [color=darkseagreen4, key=1, label=list, style=dashed];
m4_114 -> m4_115  [key=0, style=solid];
m4_114 -> m4_15  [key=2, style=dotted];
m4_115 -> m4_116  [key=0, style=solid];
m4_115 -> m4_15  [key=2, style=dotted];
m4_116 -> m4_117  [key=0, style=solid];
m4_116 -> m4_15  [key=2, style=dotted];
m4_117 -> m4_118  [key=0, style=solid];
m4_117 -> m4_15  [key=2, style=dotted];
m4_118 -> m4_112  [color=blue, key=0, style=bold];
m4_161 -> m4_162  [key=0, style=solid];
m4_162 -> m4_163  [key=0, style=solid];
m4_162 -> m4_27  [key=2, style=dotted];
m4_163 -> m4_161  [color=blue, key=0, style=bold];
m4_20 -> m4_21  [key=0, style=solid];
m4_21 -> m4_22  [key=0, style=solid];
m4_21 -> m4_23  [key=2, style=dotted];
m4_22 -> m4_20  [color=blue, key=0, style=bold];
m4_245 -> m4_246  [key=0, style=solid];
m4_246 -> m4_247  [key=0, style=solid];
m4_246 -> m4_17  [key=2, style=dotted];
m4_246 -> m4_248  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m4_247 -> m4_248  [key=0, style=solid];
m4_247 -> m4_15  [key=2, style=dotted];
m4_248 -> m4_249  [key=0, style=solid];
m4_248 -> m4_15  [key=2, style=dotted];
m4_249 -> m4_245  [color=blue, key=0, style=bold];
m4_578 -> m4_579  [key=0, style=solid];
m4_579 -> m4_580  [key=0, style=solid];
m4_580 -> m4_581  [key=0, style=solid];
m4_580 -> m4_593  [key=2, style=dotted];
m4_580 -> m4_582  [color=darkseagreen4, key=1, label=foo1, style=dashed];
m4_581 -> m4_582  [key=0, style=solid];
m4_581 -> m4_594  [key=2, style=dotted];
m4_581 -> m4_595  [key=2, style=dotted];
m4_582 -> m4_583  [key=0, style=solid];
m4_582 -> m4_184  [key=2, style=dotted];
m4_583 -> m4_584  [key=0, style=solid];
m4_583 -> m4_15  [key=2, style=dotted];
m4_584 -> m4_585  [key=0, style=solid];
m4_584 -> m4_593  [key=2, style=dotted];
m4_584 -> m4_586  [color=darkseagreen4, key=1, label=foo2, style=dashed];
m4_585 -> m4_586  [key=0, style=solid];
m4_585 -> m4_596  [key=2, style=dotted];
m4_585 -> m4_595  [key=2, style=dotted];
m4_586 -> m4_587  [key=0, style=solid];
m4_586 -> m4_184  [key=2, style=dotted];
m4_587 -> m4_588  [key=0, style=solid];
m4_587 -> m4_15  [key=2, style=dotted];
m4_588 -> m4_589  [key=0, style=solid];
m4_588 -> m4_597  [key=2, style=dotted];
m4_588 -> m4_590  [color=darkseagreen4, key=1, label=foo3, style=dashed];
m4_589 -> m4_590  [key=0, style=solid];
m4_589 -> m4_596  [key=2, style=dotted];
m4_589 -> m4_595  [key=2, style=dotted];
m4_590 -> m4_591  [key=0, style=solid];
m4_590 -> m4_184  [key=2, style=dotted];
m4_591 -> m4_592  [key=0, style=solid];
m4_591 -> m4_15  [key=2, style=dotted];
m4_592 -> m4_578  [color=blue, key=0, style=bold];
m4_522 -> m4_523  [key=0, style=solid];
m4_523 -> m4_524  [key=0, style=solid];
m4_523 -> m4_523  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m4_524 -> m4_525  [key=0, style=solid];
m4_524 -> m4_17  [key=2, style=dotted];
m4_524 -> m4_526  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_524 -> m4_527  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_524 -> m4_528  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_524 -> m4_529  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_524 -> m4_530  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_524 -> m4_531  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_524 -> m4_532  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_524 -> m4_533  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_525 -> m4_526  [key=0, style=solid];
m4_525 -> m4_15  [key=2, style=dotted];
m4_526 -> m4_527  [key=0, style=solid];
m4_526 -> m4_15  [key=2, style=dotted];
m4_527 -> m4_528  [key=0, style=solid];
m4_527 -> m4_15  [key=2, style=dotted];
m4_528 -> m4_529  [key=0, style=solid];
m4_528 -> m4_15  [key=2, style=dotted];
m4_529 -> m4_530  [key=0, style=solid];
m4_529 -> m4_126  [key=2, style=dotted];
m4_530 -> m4_531  [key=0, style=solid];
m4_530 -> m4_15  [key=2, style=dotted];
m4_531 -> m4_532  [key=0, style=solid];
m4_531 -> m4_126  [key=2, style=dotted];
m4_532 -> m4_533  [key=0, style=solid];
m4_532 -> m4_15  [key=2, style=dotted];
m4_533 -> m4_534  [key=0, style=solid];
m4_533 -> m4_15  [key=2, style=dotted];
m4_534 -> m4_522  [color=blue, key=0, style=bold];
m4_31 -> m4_32  [key=0, style=solid];
m4_32 -> m4_33  [key=0, style=solid];
m4_32 -> m4_32  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m4_33 -> m4_34  [key=0, style=solid];
m4_33 -> m4_17  [key=2, style=dotted];
m4_33 -> m4_35  [color=darkseagreen4, key=1, label=result, style=dashed];
m4_33 -> m4_36  [color=darkseagreen4, key=1, label=result, style=dashed];
m4_33 -> m4_37  [color=darkseagreen4, key=1, label=result, style=dashed];
m4_34 -> m4_35  [key=0, style=solid];
m4_34 -> m4_39  [key=2, style=dotted];
m4_34 -> m4_15  [key=2, style=dotted];
m4_35 -> m4_36  [key=0, style=solid];
m4_35 -> m4_40  [key=2, style=dotted];
m4_35 -> m4_15  [key=2, style=dotted];
m4_36 -> m4_37  [key=0, style=solid];
m4_36 -> m4_40  [key=2, style=dotted];
m4_36 -> m4_15  [key=2, style=dotted];
m4_37 -> m4_38  [key=0, style=solid];
m4_37 -> m4_40  [key=2, style=dotted];
m4_37 -> m4_15  [key=2, style=dotted];
m4_38 -> m4_31  [color=blue, key=0, style=bold];
m4_380 -> m4_381  [key=0, style=solid];
m4_381 -> m4_382  [key=0, style=solid];
m4_381 -> m4_390  [color=darkseagreen4, key=1, label=json, style=dashed];
m4_381 -> m4_381  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m4_382 -> m4_383  [key=0, style=solid];
m4_382 -> m4_17  [key=2, style=dotted];
m4_382 -> m4_384  [color=darkseagreen4, key=1, label=aa, style=dashed];
m4_382 -> m4_385  [color=darkseagreen4, key=1, label=aa, style=dashed];
m4_382 -> m4_386  [color=darkseagreen4, key=1, label=aa, style=dashed];
m4_382 -> m4_387  [color=darkseagreen4, key=1, label=aa, style=dashed];
m4_382 -> m4_388  [color=darkseagreen4, key=1, label=aa, style=dashed];
m4_382 -> m4_389  [color=darkseagreen4, key=1, label=aa, style=dashed];
m4_390 -> m4_391  [key=0, style=solid];
m4_390 -> m4_15  [key=2, style=dotted];
m4_383 -> m4_384  [key=0, style=solid];
m4_383 -> m4_15  [key=2, style=dotted];
m4_384 -> m4_385  [key=0, style=solid];
m4_384 -> m4_15  [key=2, style=dotted];
m4_385 -> m4_386  [key=0, style=solid];
m4_385 -> m4_379  [key=2, style=dotted];
m4_385 -> m4_15  [key=2, style=dotted];
m4_386 -> m4_387  [key=0, style=solid];
m4_386 -> m4_379  [key=2, style=dotted];
m4_386 -> m4_15  [key=2, style=dotted];
m4_387 -> m4_388  [key=0, style=solid];
m4_387 -> m4_15  [key=2, style=dotted];
m4_388 -> m4_389  [key=0, style=solid];
m4_388 -> m4_15  [key=2, style=dotted];
m4_389 -> m4_390  [key=0, style=solid];
m4_389 -> m4_184  [key=2, style=dotted];
m4_391 -> m4_380  [color=blue, key=0, style=bold];
m4_593 -> m4_653  [key=0, style=solid];
m4_653 -> m4_654  [key=0, style=solid];
m4_653 -> m4_44  [key=2, style=dotted];
m4_654 -> m4_593  [color=blue, key=0, style=bold];
m4_164 -> m4_165  [key=0, style=solid];
m4_165 -> m4_166  [key=0, style=solid];
m4_165 -> m4_27  [key=2, style=dotted];
m4_166 -> m4_164  [color=blue, key=0, style=bold];
m4_105 -> m4_106  [key=0, style=solid];
m4_106 -> m4_107  [key=0, style=solid];
m4_106 -> m4_17  [key=2, style=dotted];
m4_106 -> m4_108  [color=darkseagreen4, key=1, label=list, style=dashed];
m4_106 -> m4_109  [color=darkseagreen4, key=1, label=list, style=dashed];
m4_106 -> m4_110  [color=darkseagreen4, key=1, label=list, style=dashed];
m4_107 -> m4_108  [key=0, style=solid];
m4_107 -> m4_15  [key=2, style=dotted];
m4_108 -> m4_109  [key=0, style=solid];
m4_108 -> m4_40  [key=2, style=dotted];
m4_108 -> m4_15  [key=2, style=dotted];
m4_109 -> m4_110  [key=0, style=solid];
m4_109 -> m4_40  [key=2, style=dotted];
m4_109 -> m4_15  [key=2, style=dotted];
m4_110 -> m4_111  [key=0, style=solid];
m4_110 -> m4_40  [key=2, style=dotted];
m4_110 -> m4_15  [key=2, style=dotted];
m4_111 -> m4_105  [color=blue, key=0, style=bold];
m4_227 -> m4_228  [key=0, style=solid];
m4_228 -> m4_229  [key=0, style=solid];
m4_228 -> m4_235  [key=2, style=dotted];
m4_228 -> m4_230  [color=darkseagreen4, key=1, label=p, style=dashed];
m4_228 -> m4_231  [color=darkseagreen4, key=1, label=p, style=dashed];
m4_228 -> m4_232  [color=darkseagreen4, key=1, label=p, style=dashed];
m4_228 -> m4_233  [color=darkseagreen4, key=1, label=p, style=dashed];
m4_229 -> m4_230  [key=0, style=solid];
m4_229 -> m4_44  [key=2, style=dotted];
m4_230 -> m4_231  [key=0, style=solid];
m4_230 -> m4_66  [key=2, style=dotted];
m4_230 -> m4_44  [key=2, style=dotted];
m4_230 -> m4_236  [key=2, style=dotted];
m4_230 -> m4_237  [key=2, style=dotted];
m4_231 -> m4_232  [key=0, style=solid];
m4_231 -> m4_15  [key=2, style=dotted];
m4_232 -> m4_233  [key=0, style=solid];
m4_232 -> m4_15  [key=2, style=dotted];
m4_233 -> m4_234  [key=0, style=solid];
m4_233 -> m4_15  [key=2, style=dotted];
m4_234 -> m4_227  [color=blue, key=0, style=bold];
m4_238 -> m4_239  [key=0, style=solid];
m4_239 -> m4_240  [key=0, style=solid];
m4_239 -> m4_235  [key=2, style=dotted];
m4_239 -> m4_241  [color=darkseagreen4, key=1, label=p, style=dashed];
m4_239 -> m4_242  [color=darkseagreen4, key=1, label=p, style=dashed];
m4_240 -> m4_241  [key=0, style=solid];
m4_241 -> m4_242  [key=0, style=solid];
m4_241 -> m4_66  [key=2, style=dotted];
m4_241 -> m4_44  [key=2, style=dotted];
m4_241 -> m4_244  [key=2, style=dotted];
m4_241 -> m4_237  [key=2, style=dotted];
m4_242 -> m4_243  [key=0, style=solid];
m4_242 -> m4_15  [key=2, style=dotted];
m4_243 -> m4_238  [color=blue, key=0, style=bold];
m4_502 -> m4_503  [key=0, style=solid];
m4_503 -> m4_504  [key=0, style=solid];
m4_503 -> m4_500  [key=2, style=dotted];
m4_504 -> m4_505  [key=0, style=solid];
m4_505 -> m4_506  [key=0, style=solid];
m4_505 -> m4_44  [key=2, style=dotted];
m4_506 -> m4_507  [key=0, style=solid];
m4_506 -> m4_66  [key=2, style=dotted];
m4_506 -> m4_501  [key=2, style=dotted];
m4_506 -> m4_508  [color=darkseagreen4, key=1, label=json, style=dashed];
m4_507 -> m4_508  [key=0, style=solid];
m4_507 -> m4_157  [key=2, style=dotted];
m4_508 -> m4_509  [key=0, style=solid];
m4_508 -> m4_66  [key=2, style=dotted];
m4_508 -> m4_512  [key=2, style=dotted];
m4_508 -> m4_510  [color=darkseagreen4, key=1, label=values2, style=dashed];
m4_509 -> m4_510  [key=0, style=solid];
m4_509 -> m4_15  [key=2, style=dotted];
m4_510 -> m4_511  [key=0, style=solid];
m4_510 -> m4_15  [key=2, style=dotted];
m4_511 -> m4_502  [color=blue, key=0, style=bold];
m4_558 -> m4_559  [key=0, style=solid];
m4_559 -> m4_560  [key=0, style=solid];
m4_559 -> m4_568  [key=2, style=dotted];
m4_559 -> m4_569  [key=2, style=dotted];
m4_559 -> m4_563  [color=darkseagreen4, key=1, label=collection, style=dashed];
m4_559 -> m4_566  [color=darkseagreen4, key=1, label=collection, style=dashed];
m4_560 -> m4_561  [key=0, style=solid];
m4_560 -> m4_570  [key=2, style=dotted];
m4_560 -> m4_563  [color=darkseagreen4, key=1, label=jsonSerializer, style=dashed];
m4_560 -> m4_565  [color=darkseagreen4, key=1, label=jsonSerializer, style=dashed];
m4_563 -> m4_564  [key=0, style=solid];
m4_563 -> m4_572  [key=2, style=dotted];
m4_566 -> m4_567  [key=0, style=solid];
m4_566 -> m4_15  [key=2, style=dotted];
m4_561 -> m4_562  [key=0, style=solid];
m4_565 -> m4_566  [key=0, style=solid];
m4_565 -> m4_575  [key=2, style=dotted];
m4_565 -> m4_576  [key=2, style=dotted];
m4_565 -> m4_573  [key=2, style=dotted];
m4_565 -> m4_574  [key=2, style=dotted];
m4_565 -> m4_577  [key=2, style=dotted];
m4_562 -> m4_563  [key=0, style=solid];
m4_562 -> m4_571  [key=2, style=dotted];
m4_562 -> m4_564  [color=darkseagreen4, key=1, label=sw, style=dashed];
m4_562 -> m4_565  [color=darkseagreen4, key=1, label=sw, style=dashed];
m4_564 -> m4_565  [key=0, style=solid];
m4_564 -> m4_573  [key=2, style=dotted];
m4_564 -> m4_574  [key=2, style=dotted];
m4_564 -> m4_15  [key=2, style=dotted];
m4_567 -> m4_558  [color=blue, key=0, style=bold];
m4_147 -> m4_148  [key=0, style=solid];
m4_148 -> m4_149  [key=0, style=solid];
m4_148 -> m4_27  [key=2, style=dotted];
m4_149 -> m4_147  [color=blue, key=0, style=bold];
m4_440 -> m4_441  [key=0, style=solid];
m4_441 -> m4_442  [key=0, style=solid];
m4_441 -> m4_358  [key=2, style=dotted];
m4_441 -> m4_443  [color=darkseagreen4, key=1, label=aa, style=dashed];
m4_441 -> m4_444  [color=darkseagreen4, key=1, label=aa, style=dashed];
m4_441 -> m4_445  [color=darkseagreen4, key=1, label=aa, style=dashed];
m4_442 -> m4_443  [key=0, style=solid];
m4_443 -> m4_444  [key=0, style=solid];
m4_444 -> m4_445  [key=0, style=solid];
m4_445 -> m4_446  [key=0, style=solid];
m4_445 -> m4_184  [key=2, style=dotted];
m4_446 -> m4_447  [key=0, style=solid];
m4_446 -> m4_15  [key=2, style=dotted];
m4_447 -> m4_440  [color=blue, key=0, style=bold];
m4_368 -> m4_369  [key=0, style=solid];
m4_369 -> m4_370  [key=0, style=solid];
m4_369 -> m4_365  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m4_370 -> m4_371  [key=0, style=solid];
m4_370 -> m4_17  [key=2, style=dotted];
m4_370 -> m4_372  [color=darkseagreen4, key=1, label=aa, style=dashed];
m4_370 -> m4_373  [color=darkseagreen4, key=1, label=aa, style=dashed];
m4_370 -> m4_374  [color=darkseagreen4, key=1, label=aa, style=dashed];
m4_370 -> m4_375  [color=darkseagreen4, key=1, label=aa, style=dashed];
m4_370 -> m4_376  [color=darkseagreen4, key=1, label=aa, style=dashed];
m4_370 -> m4_377  [color=darkseagreen4, key=1, label=aa, style=dashed];
m4_371 -> m4_372  [key=0, style=solid];
m4_371 -> m4_15  [key=2, style=dotted];
m4_372 -> m4_373  [key=0, style=solid];
m4_372 -> m4_15  [key=2, style=dotted];
m4_373 -> m4_374  [key=0, style=solid];
m4_373 -> m4_379  [key=2, style=dotted];
m4_373 -> m4_15  [key=2, style=dotted];
m4_374 -> m4_375  [key=0, style=solid];
m4_374 -> m4_379  [key=2, style=dotted];
m4_374 -> m4_15  [key=2, style=dotted];
m4_375 -> m4_376  [key=0, style=solid];
m4_375 -> m4_379  [key=2, style=dotted];
m4_375 -> m4_15  [key=2, style=dotted];
m4_376 -> m4_377  [key=0, style=solid];
m4_376 -> m4_15  [key=2, style=dotted];
m4_377 -> m4_378  [key=0, style=solid];
m4_377 -> m4_15  [key=2, style=dotted];
m4_378 -> m4_368  [color=blue, key=0, style=bold];
m4_264 -> m4_265  [key=0, style=solid];
m4_265 -> m4_266  [key=0, style=solid];
m4_265 -> m4_156  [key=2, style=dotted];
m4_265 -> m4_274  [key=2, style=dotted];
m4_266 -> m4_267  [key=0, style=solid];
m4_266 -> m4_275  [key=2, style=dotted];
m4_266 -> m4_276  [key=2, style=dotted];
m4_267 -> m4_268  [key=0, style=solid];
m4_267 -> m4_14  [key=2, style=dotted];
m4_267 -> m4_269  [color=darkseagreen4, key=1, label=originalJson, style=dashed];
m4_268 -> m4_269  [key=0, style=solid];
m4_268 -> m4_157  [key=2, style=dotted];
m4_269 -> m4_270  [key=0, style=solid];
m4_269 -> m4_17  [key=2, style=dotted];
m4_269 -> m4_271  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m4_269 -> m4_272  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m4_270 -> m4_271  [key=0, style=solid];
m4_270 -> m4_15  [key=2, style=dotted];
m4_271 -> m4_272  [key=0, style=solid];
m4_271 -> m4_15  [key=2, style=dotted];
m4_272 -> m4_273  [key=0, style=solid];
m4_272 -> m4_15  [key=2, style=dotted];
m4_273 -> m4_264  [color=blue, key=0, style=bold];
m4_133 -> m4_134  [key=0, style=solid];
m4_134 -> m4_135  [key=0, style=solid];
m4_135 -> m4_133  [color=blue, key=0, style=bold];
m4_311 -> m4_312  [key=0, style=solid];
m4_312 -> m4_313  [key=0, style=solid];
m4_312 -> m4_44  [key=2, style=dotted];
m4_313 -> m4_314  [key=0, style=solid];
m4_313 -> m4_156  [key=2, style=dotted];
m4_314 -> m4_315  [key=0, style=solid];
m4_315 -> m4_316  [key=0, style=solid];
m4_315 -> m4_323  [key=2, style=dotted];
m4_316 -> m4_317  [key=0, style=solid];
m4_316 -> m4_324  [key=2, style=dotted];
m4_316 -> m4_156  [key=2, style=dotted];
m4_317 -> m4_318  [key=0, style=solid];
m4_317 -> m4_323  [key=2, style=dotted];
m4_318 -> m4_319  [key=0, style=solid];
m4_318 -> m4_323  [key=2, style=dotted];
m4_319 -> m4_320  [key=0, style=solid];
m4_319 -> m4_323  [key=2, style=dotted];
m4_320 -> m4_321  [key=0, style=solid];
m4_320 -> m4_324  [key=2, style=dotted];
m4_320 -> m4_156  [key=2, style=dotted];
m4_321 -> m4_322  [key=0, style=solid];
m4_321 -> m4_324  [key=2, style=dotted];
m4_321 -> m4_156  [key=2, style=dotted];
m4_322 -> m4_311  [color=blue, key=0, style=bold];
m4_399 -> m4_400  [key=0, style=solid];
m4_400 -> m4_401  [key=0, style=solid];
m4_400 -> m4_404  [color=darkseagreen4, key=1, label=json, style=dashed];
m4_400 -> m4_400  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m4_401 -> m4_402  [key=0, style=solid];
m4_401 -> m4_55  [key=2, style=dotted];
m4_401 -> m4_403  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_402 -> m4_399  [color=blue, key=0, style=bold];
m4_211 -> m4_212  [key=0, style=solid];
m4_212 -> m4_213  [key=0, style=solid];
m4_212 -> m4_225  [key=2, style=dotted];
m4_212 -> m4_214  [color=darkseagreen4, key=1, label=dateTime, style=dashed];
m4_212 -> m4_215  [color=darkseagreen4, key=1, label=dateTime, style=dashed];
m4_213 -> m4_214  [key=0, style=solid];
m4_213 -> m4_44  [key=2, style=dotted];
m4_213 -> m4_215  [color=darkseagreen4, key=1, label=list, style=dashed];
m4_213 -> m4_216  [color=darkseagreen4, key=1, label=list, style=dashed];
m4_214 -> m4_215  [key=0, style=solid];
m4_214 -> m4_13  [key=2, style=dotted];
m4_214 -> m4_226  [key=2, style=dotted];
m4_214 -> m4_76  [key=2, style=dotted];
m4_215 -> m4_216  [key=0, style=solid];
m4_215 -> m4_13  [key=2, style=dotted];
m4_215 -> m4_226  [key=2, style=dotted];
m4_215 -> m4_76  [key=2, style=dotted];
m4_216 -> m4_217  [key=0, style=solid];
m4_216 -> m4_14  [key=2, style=dotted];
m4_216 -> m4_218  [color=darkseagreen4, key=1, label=json, style=dashed];
m4_217 -> m4_218  [key=0, style=solid];
m4_217 -> m4_157  [key=2, style=dotted];
m4_218 -> m4_219  [key=0, style=solid];
m4_218 -> m4_17  [key=2, style=dotted];
m4_218 -> m4_220  [color=darkseagreen4, key=1, label=result, style=dashed];
m4_218 -> m4_221  [color=darkseagreen4, key=1, label=result, style=dashed];
m4_218 -> m4_222  [color=darkseagreen4, key=1, label=result, style=dashed];
m4_218 -> m4_223  [color=darkseagreen4, key=1, label=result, style=dashed];
m4_219 -> m4_220  [key=0, style=solid];
m4_219 -> m4_15  [key=2, style=dotted];
m4_220 -> m4_221  [key=0, style=solid];
m4_220 -> m4_15  [key=2, style=dotted];
m4_221 -> m4_222  [key=0, style=solid];
m4_221 -> m4_15  [key=2, style=dotted];
m4_222 -> m4_223  [key=0, style=solid];
m4_222 -> m4_15  [key=2, style=dotted];
m4_223 -> m4_224  [key=0, style=solid];
m4_223 -> m4_15  [key=2, style=dotted];
m4_224 -> m4_211  [color=blue, key=0, style=bold];
m4_77 -> m4_78  [key=0, style=solid];
m4_78 -> m4_79  [key=0, style=solid];
m4_78 -> m4_17  [key=2, style=dotted];
m4_78 -> m4_80  [color=darkseagreen4, key=1, label=list, style=dashed];
m4_78 -> m4_81  [color=darkseagreen4, key=1, label=list, style=dashed];
m4_78 -> m4_82  [color=darkseagreen4, key=1, label=list, style=dashed];
m4_79 -> m4_80  [key=0, style=solid];
m4_79 -> m4_15  [key=2, style=dotted];
m4_80 -> m4_81  [key=0, style=solid];
m4_80 -> m4_15  [key=2, style=dotted];
m4_81 -> m4_82  [key=0, style=solid];
m4_81 -> m4_15  [key=2, style=dotted];
m4_82 -> m4_83  [key=0, style=solid];
m4_82 -> m4_15  [key=2, style=dotted];
m4_83 -> m4_77  [color=blue, key=0, style=bold];
m4_627 -> m4_628  [key=0, style=solid];
m4_628 -> m4_629  [key=0, style=solid];
m4_628 -> m4_628  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m4_629 -> m4_630  [key=0, style=solid];
m4_629 -> m4_17  [key=2, style=dotted];
m4_629 -> m4_631  [color=darkseagreen4, key=1, label=products, style=dashed];
m4_629 -> m4_633  [color=darkseagreen4, key=1, label=products, style=dashed];
m4_629 -> m4_634  [color=darkseagreen4, key=1, label=products, style=dashed];
m4_630 -> m4_631  [key=0, style=solid];
m4_630 -> m4_636  [key=2, style=dotted];
m4_631 -> m4_632  [key=0, style=solid];
m4_633 -> m4_634  [key=0, style=solid];
m4_633 -> m4_15  [key=2, style=dotted];
m4_634 -> m4_635  [key=0, style=solid];
m4_634 -> m4_15  [key=2, style=dotted];
m4_632 -> m4_633  [key=0, style=solid];
m4_632 -> m4_637  [key=2, style=dotted];
m4_635 -> m4_627  [color=blue, key=0, style=bold];
m4_638 -> m4_639  [key=0, style=solid];
m4_639 -> m4_640  [key=0, style=solid];
m4_639 -> m4_643  [key=2, style=dotted];
m4_639 -> m4_44  [key=2, style=dotted];
m4_640 -> m4_641  [key=0, style=solid];
m4_640 -> m4_14  [key=2, style=dotted];
m4_641 -> m4_642  [key=0, style=solid];
m4_641 -> m4_157  [key=2, style=dotted];
m4_642 -> m4_638  [color=blue, key=0, style=bold];
m4_448 -> m4_449  [key=0, style=solid];
m4_449 -> m4_450  [key=0, style=solid];
m4_449 -> m4_457  [color=darkseagreen4, key=1, label=json, style=dashed];
m4_449 -> m4_449  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m4_450 -> m4_451  [key=0, style=solid];
m4_450 -> m4_17  [key=2, style=dotted];
m4_450 -> m4_452  [color=darkseagreen4, key=1, label=aa, style=dashed];
m4_450 -> m4_453  [color=darkseagreen4, key=1, label=aa, style=dashed];
m4_450 -> m4_454  [color=darkseagreen4, key=1, label=aa, style=dashed];
m4_450 -> m4_455  [color=darkseagreen4, key=1, label=aa, style=dashed];
m4_450 -> m4_456  [color=darkseagreen4, key=1, label=aa, style=dashed];
m4_457 -> m4_458  [key=0, style=solid];
m4_457 -> m4_15  [key=2, style=dotted];
m4_451 -> m4_452  [key=0, style=solid];
m4_451 -> m4_15  [key=2, style=dotted];
m4_452 -> m4_453  [key=0, style=solid];
m4_452 -> m4_15  [key=2, style=dotted];
m4_453 -> m4_454  [key=0, style=solid];
m4_453 -> m4_379  [key=2, style=dotted];
m4_453 -> m4_15  [key=2, style=dotted];
m4_454 -> m4_455  [key=0, style=solid];
m4_454 -> m4_379  [key=2, style=dotted];
m4_454 -> m4_15  [key=2, style=dotted];
m4_455 -> m4_456  [key=0, style=solid];
m4_455 -> m4_379  [key=2, style=dotted];
m4_455 -> m4_15  [key=2, style=dotted];
m4_456 -> m4_457  [key=0, style=solid];
m4_456 -> m4_184  [key=2, style=dotted];
m4_458 -> m4_448  [color=blue, key=0, style=bold];
m4_140 -> m4_141  [key=0, style=solid];
m4_141 -> m4_142  [key=0, style=solid];
m4_141 -> m4_143  [key=2, style=dotted];
m4_142 -> m4_140  [color=blue, key=0, style=bold];
m4_419 -> m4_420  [key=0, style=solid];
m4_420 -> m4_421  [key=0, style=solid];
m4_420 -> m4_424  [color=darkseagreen4, key=1, label=json, style=dashed];
m4_420 -> m4_420  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m4_421 -> m4_422  [key=0, style=solid];
m4_421 -> m4_55  [key=2, style=dotted];
m4_421 -> m4_423  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_422 -> m4_419  [color=blue, key=0, style=bold];
m4_167 -> m4_168  [key=0, style=solid];
m4_168 -> m4_169  [key=0, style=solid];
m4_168 -> m4_44  [key=2, style=dotted];
m4_169 -> m4_170  [key=0, style=solid];
m4_169 -> m4_158  [key=2, style=dotted];
m4_170 -> m4_171  [key=0, style=solid];
m4_170 -> m4_14  [key=2, style=dotted];
m4_171 -> m4_172  [key=0, style=solid];
m4_171 -> m4_157  [key=2, style=dotted];
m4_172 -> m4_167  [color=blue, key=0, style=bold];
m4_470 -> m4_471  [key=0, style=solid];
m4_57 -> m4_58  [key=0, style=solid];
m4_57 -> m4_17  [key=2, style=dotted];
m4_56 -> m4_57  [key=0, style=solid];
m4_58 -> m4_56  [color=blue, key=0, style=bold];
m4_68 -> m4_69  [key=0, style=solid];
m4_69 -> m4_70  [key=0, style=solid];
m4_69 -> m4_17  [key=2, style=dotted];
m4_70 -> m4_68  [color=blue, key=0, style=bold];
m4_309 -> m4_310  [key=0, style=solid];
m4_309 -> m4_17  [key=2, style=dotted];
m4_308 -> m4_309  [key=0, style=solid];
m4_310 -> m4_308  [color=blue, key=0, style=bold];
m4_397 -> m4_398  [key=0, style=solid];
m4_397 -> m4_17  [key=2, style=dotted];
m4_396 -> m4_397  [key=0, style=solid];
m4_398 -> m4_396  [color=blue, key=0, style=bold];
m4_404 -> m4_405  [key=0, style=solid];
m4_404 -> m4_17  [key=2, style=dotted];
m4_403 -> m4_404  [key=0, style=solid];
m4_405 -> m4_403  [color=blue, key=0, style=bold];
m4_424 -> m4_425  [key=0, style=solid];
m4_424 -> m4_17  [key=2, style=dotted];
m4_423 -> m4_424  [key=0, style=solid];
m4_425 -> m4_423  [color=blue, key=0, style=bold];
m4_431 -> m4_432  [key=0, style=solid];
m4_431 -> m4_17  [key=2, style=dotted];
m4_430 -> m4_431  [key=0, style=solid];
m4_432 -> m4_430  [color=blue, key=0, style=bold];
m4_438 -> m4_439  [key=0, style=solid];
m4_438 -> m4_17  [key=2, style=dotted];
m4_437 -> m4_438  [key=0, style=solid];
m4_439 -> m4_437  [color=blue, key=0, style=bold];
m4_464 -> m4_465  [key=0, style=solid];
m4_464 -> m4_17  [key=2, style=dotted];
m4_463 -> m4_464  [key=0, style=solid];
m4_465 -> m4_463  [color=blue, key=0, style=bold];
m4_471 -> m4_472  [key=0, style=solid];
m4_471 -> m4_17  [key=2, style=dotted];
m4_472 -> m4_470  [color=blue, key=0, style=bold];
m4_330 -> m4_331  [key=0, style=solid];
m4_331 -> m4_332  [key=0, style=solid];
m4_331 -> m4_331  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m4_332 -> m4_333  [key=0, style=solid];
m4_332 -> m4_17  [key=2, style=dotted];
m4_332 -> m4_334  [color=darkseagreen4, key=1, label=c2, style=dashed];
m4_332 -> m4_335  [color=darkseagreen4, key=1, label=c2, style=dashed];
m4_332 -> m4_336  [color=darkseagreen4, key=1, label=c2, style=dashed];
m4_332 -> m4_337  [color=darkseagreen4, key=1, label=c2, style=dashed];
m4_332 -> m4_338  [color=darkseagreen4, key=1, label=c2, style=dashed];
m4_332 -> m4_339  [color=darkseagreen4, key=1, label=c2, style=dashed];
m4_333 -> m4_334  [key=0, style=solid];
m4_333 -> m4_15  [key=2, style=dotted];
m4_334 -> m4_335  [key=0, style=solid];
m4_334 -> m4_15  [key=2, style=dotted];
m4_335 -> m4_336  [key=0, style=solid];
m4_335 -> m4_15  [key=2, style=dotted];
m4_336 -> m4_337  [key=0, style=solid];
m4_336 -> m4_15  [key=2, style=dotted];
m4_337 -> m4_338  [key=0, style=solid];
m4_337 -> m4_15  [key=2, style=dotted];
m4_338 -> m4_339  [key=0, style=solid];
m4_338 -> m4_15  [key=2, style=dotted];
m4_339 -> m4_340  [key=0, style=solid];
m4_339 -> m4_15  [key=2, style=dotted];
m4_340 -> m4_330  [color=blue, key=0, style=bold];
m4_643 -> m4_644  [key=0, style=solid];
m4_644 -> m4_645  [key=0, style=solid];
m4_645 -> m4_643  [color=blue, key=0, style=bold];
m4_682 -> m4_683  [key=0, style=solid];
m4_683 -> m4_684  [key=0, style=solid];
m4_683 -> m4_667  [key=2, style=dotted];
m4_684 -> m4_682  [color=blue, key=0, style=bold];
m4_392 -> m4_393  [key=0, style=solid];
m4_393 -> m4_394  [key=0, style=solid];
m4_393 -> m4_397  [color=darkseagreen4, key=1, label=json, style=dashed];
m4_393 -> m4_393  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m4_394 -> m4_395  [key=0, style=solid];
m4_394 -> m4_55  [key=2, style=dotted];
m4_394 -> m4_396  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_395 -> m4_392  [color=blue, key=0, style=bold];
m4_127 -> m4_128  [key=0, style=solid];
m4_128 -> m4_129  [key=0, style=solid];
m4_128 -> m4_17  [key=2, style=dotted];
m4_128 -> m4_130  [color=darkseagreen4, key=1, label=dic, style=dashed];
m4_128 -> m4_131  [color=darkseagreen4, key=1, label=dic, style=dashed];
m4_129 -> m4_130  [key=0, style=solid];
m4_129 -> m4_15  [key=2, style=dotted];
m4_130 -> m4_131  [key=0, style=solid];
m4_130 -> m4_15  [key=2, style=dotted];
m4_131 -> m4_132  [key=0, style=solid];
m4_131 -> m4_15  [key=2, style=dotted];
m4_132 -> m4_127  [color=blue, key=0, style=bold];
m4_186 -> m4_187  [key=0, style=solid];
m4_187 -> m4_188  [key=0, style=solid];
m4_187 -> m4_44  [key=2, style=dotted];
m4_188 -> m4_186  [color=blue, key=0, style=bold];
m4_277 -> m4_278  [key=0, style=solid];
m4_278 -> m4_279  [key=0, style=solid];
m4_278 -> m4_278  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m4_279 -> m4_280  [key=0, style=solid];
m4_279 -> m4_17  [key=2, style=dotted];
m4_279 -> m4_281  [color=darkseagreen4, key=1, label=values, style=dashed];
m4_279 -> m4_282  [color=darkseagreen4, key=1, label=values, style=dashed];
m4_279 -> m4_283  [color=darkseagreen4, key=1, label=values, style=dashed];
m4_279 -> m4_284  [color=darkseagreen4, key=1, label=values, style=dashed];
m4_279 -> m4_285  [color=darkseagreen4, key=1, label=values, style=dashed];
m4_279 -> m4_286  [color=darkseagreen4, key=1, label=values, style=dashed];
m4_279 -> m4_287  [color=darkseagreen4, key=1, label=values, style=dashed];
m4_279 -> m4_288  [color=darkseagreen4, key=1, label=values, style=dashed];
m4_280 -> m4_281  [key=0, style=solid];
m4_280 -> m4_15  [key=2, style=dotted];
m4_281 -> m4_282  [key=0, style=solid];
m4_281 -> m4_15  [key=2, style=dotted];
m4_282 -> m4_283  [key=0, style=solid];
m4_282 -> m4_15  [key=2, style=dotted];
m4_283 -> m4_284  [key=0, style=solid];
m4_283 -> m4_15  [key=2, style=dotted];
m4_284 -> m4_285  [key=0, style=solid];
m4_284 -> m4_15  [key=2, style=dotted];
m4_285 -> m4_286  [key=0, style=solid];
m4_285 -> m4_15  [key=2, style=dotted];
m4_286 -> m4_287  [key=0, style=solid];
m4_286 -> m4_15  [key=2, style=dotted];
m4_287 -> m4_288  [key=0, style=solid];
m4_287 -> m4_15  [key=2, style=dotted];
m4_288 -> m4_289  [key=0, style=solid];
m4_288 -> m4_15  [key=2, style=dotted];
m4_289 -> m4_277  [color=blue, key=0, style=bold];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_13  [key=2, style=dotted];
m4_2 -> m4_3  [color=green, key=0, style=solid];
m4_2 -> m4_14  [key=2, style=dotted];
m4_2 -> m4_5  [color=darkseagreen4, key=1, label=myOtherArrayAsString, style=dashed];
m4_3 -> m4_4  [color=green, key=0, style=solid];
m4_3 -> m4_15  [color=red, key=2, style=dotted];
m4_3 -> m4_157  [color=green, key=2, style=dotted];
m4_5 -> m4_6  [key=0, style=solid];
m4_5 -> m4_17  [key=2, style=dotted];
m4_5 -> m4_7  [color=darkseagreen4, key=1, label=myOtherResult, style=dashed];
m4_5 -> m4_8  [color=darkseagreen4, key=1, label=myOtherResult, style=dashed];
m4_5 -> m4_9  [color=darkseagreen4, key=1, label=myOtherResult, style=dashed];
m4_5 -> m4_10  [color=darkseagreen4, key=1, label=myOtherResult, style=dashed];
m4_5 -> m4_11  [color=darkseagreen4, key=1, label=myOtherResult, style=dashed];
m4_4 -> m4_5  [key=0, style=solid];
m4_4 -> m4_16  [key=2, style=dotted];
m4_4 -> m4_6  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_6 -> m4_7  [key=0, style=solid];
m4_6 -> m4_18  [key=2, style=dotted];
m4_6 -> m4_19  [key=2, style=dotted];
m4_7 -> m4_8  [key=0, style=solid];
m4_7 -> m4_15  [key=2, style=dotted];
m4_8 -> m4_9  [key=0, style=solid];
m4_8 -> m4_15  [key=2, style=dotted];
m4_9 -> m4_10  [key=0, style=solid];
m4_9 -> m4_15  [key=2, style=dotted];
m4_10 -> m4_11  [key=0, style=solid];
m4_10 -> m4_15  [key=2, style=dotted];
m4_11 -> m4_12  [key=0, style=solid];
m4_11 -> m4_15  [key=2, style=dotted];
m4_12 -> m4_0  [color=blue, key=0, style=bold];
m4_304 -> m4_305  [key=0, style=solid];
m4_305 -> m4_306  [key=0, style=solid];
m4_305 -> m4_309  [color=darkseagreen4, key=1, label=json, style=dashed];
m4_305 -> m4_305  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m4_306 -> m4_307  [key=0, style=solid];
m4_306 -> m4_55  [key=2, style=dotted];
m4_306 -> m4_308  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_307 -> m4_304  [color=blue, key=0, style=bold];
m4_513 -> m4_514  [key=0, style=solid];
m4_514 -> m4_515  [key=0, style=solid];
m4_514 -> m4_514  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m4_515 -> m4_516  [key=0, style=solid];
m4_515 -> m4_17  [key=2, style=dotted];
m4_515 -> m4_517  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_515 -> m4_518  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_515 -> m4_519  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_515 -> m4_520  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_516 -> m4_517  [key=0, style=solid];
m4_516 -> m4_15  [key=2, style=dotted];
m4_517 -> m4_518  [key=0, style=solid];
m4_517 -> m4_15  [key=2, style=dotted];
m4_518 -> m4_519  [key=0, style=solid];
m4_518 -> m4_15  [key=2, style=dotted];
m4_519 -> m4_520  [key=0, style=solid];
m4_519 -> m4_15  [key=2, style=dotted];
m4_520 -> m4_521  [key=0, style=solid];
m4_520 -> m4_15  [key=2, style=dotted];
m4_521 -> m4_513  [color=blue, key=0, style=bold];
m4_473 -> m4_474  [key=0, style=solid];
m4_474 -> m4_475  [key=0, style=solid];
m4_474 -> m4_480  [color=darkseagreen4, key=1, label=json, style=dashed];
m4_474 -> m4_474  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m4_475 -> m4_476  [key=0, style=solid];
m4_475 -> m4_17  [key=2, style=dotted];
m4_475 -> m4_477  [color=darkseagreen4, key=1, label=aa, style=dashed];
m4_475 -> m4_478  [color=darkseagreen4, key=1, label=aa, style=dashed];
m4_475 -> m4_479  [color=darkseagreen4, key=1, label=aa, style=dashed];
m4_480 -> m4_481  [key=0, style=solid];
m4_480 -> m4_15  [key=2, style=dotted];
m4_476 -> m4_477  [key=0, style=solid];
m4_476 -> m4_15  [key=2, style=dotted];
m4_477 -> m4_478  [key=0, style=solid];
m4_477 -> m4_15  [key=2, style=dotted];
m4_478 -> m4_479  [key=0, style=solid];
m4_478 -> m4_15  [key=2, style=dotted];
m4_479 -> m4_480  [key=0, style=solid];
m4_479 -> m4_184  [key=2, style=dotted];
m4_481 -> m4_473  [color=blue, key=0, style=bold];
m4_668 -> m4_669  [key=0, style=solid];
m4_668 -> m4_671  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_668 -> m4_672  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_668 -> m4_673  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_668 -> m4_675  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m4_668 -> m4_670  [color=darkorchid, key=3, label="method methodReturn object ReadJson", style=bold];
m4_669 -> m4_670  [key=0, style=solid];
m4_671 -> m4_672  [key=0, style=solid];
m4_671 -> m4_678  [key=2, style=dotted];
m4_672 -> m4_673  [key=0, style=solid];
m4_672 -> m4_676  [key=0, style=solid];
m4_673 -> m4_674  [key=0, style=solid];
m4_675 -> m4_672  [key=0, style=solid];
m4_675 -> m4_678  [key=2, style=dotted];
m4_670 -> m4_671  [key=0, style=solid];
m4_670 -> m4_23  [key=2, style=dotted];
m4_670 -> m4_674  [color=darkseagreen4, key=1, label=newStrings, style=dashed];
m4_670 -> m4_676  [color=darkseagreen4, key=1, label=newStrings, style=dashed];
m4_674 -> m4_675  [key=0, style=solid];
m4_674 -> m4_76  [key=2, style=dotted];
m4_676 -> m4_677  [key=0, style=solid];
m4_677 -> m4_668  [color=blue, key=0, style=bold];
m4_466 -> m4_467  [key=0, style=solid];
m4_467 -> m4_468  [key=0, style=solid];
m4_467 -> m4_471  [color=darkseagreen4, key=1, label=json, style=dashed];
m4_467 -> m4_467  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m4_468 -> m4_469  [key=0, style=solid];
m4_468 -> m4_55  [key=2, style=dotted];
m4_468 -> m4_470  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_469 -> m4_466  [color=blue, key=0, style=bold];
m4_655 -> m4_656  [key=0, style=solid];
m4_655 -> m4_658  [color=crimson, key=0, style=bold];
m4_655 -> m4_659  [color=crimson, key=0, style=bold];
m4_656 -> m4_657  [key=0, style=solid];
m4_656 -> m4_659  [key=0, style=solid];
m4_658 -> m4_657  [key=0, style=solid];
m4_659 -> m4_660  [key=0, style=solid];
m4_657 -> m4_658  [key=0, style=solid];
m4_657 -> m4_660  [key=0, style=solid];
m4_660 -> m4_655  [color=blue, key=0, style=bold];
m4_650 -> m4_651  [key=0, style=solid];
m4_650 -> m4_646  [color=darkorchid, key=3, label="method methodReturn System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator", style=bold];
m4_651 -> m4_652  [key=0, style=solid];
m4_651 -> m4_646  [key=2, style=dotted];
m4_652 -> m4_650  [color=blue, key=0, style=bold];
m4_41 -> m4_42  [key=0, style=solid];
m4_42 -> m4_43  [key=0, style=solid];
m4_42 -> m4_44  [key=2, style=dotted];
m4_43 -> m4_41  [color=blue, key=0, style=bold];
m4_611 -> m4_612  [key=0, style=solid];
m4_612 -> m4_613  [key=0, style=solid];
m4_612 -> m4_323  [key=2, style=dotted];
m4_612 -> m4_616  [color=darkseagreen4, key=1, label=r1, style=dashed];
m4_613 -> m4_614  [key=0, style=solid];
m4_613 -> m4_184  [key=2, style=dotted];
m4_613 -> m4_615  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m4_616 -> m4_617  [key=0, style=solid];
m4_616 -> m4_15  [key=2, style=dotted];
m4_614 -> m4_615  [key=0, style=solid];
m4_614 -> m4_15  [key=2, style=dotted];
m4_615 -> m4_616  [key=0, style=solid];
m4_615 -> m4_17  [key=2, style=dotted];
m4_617 -> m4_611  [color=blue, key=0, style=bold];
m4_646 -> m4_647  [key=0, style=solid];
m4_647 -> m4_648  [key=0, style=solid];
m4_647 -> m4_649  [key=2, style=dotted];
m4_648 -> m4_646  [color=blue, key=0, style=bold];
m4_693 -> m4_21  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>", style=dashed];
m4_693 -> m4_25  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>", style=dashed];
m4_693 -> m4_29  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>", style=dashed];
m4_694 -> m4_42  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>", style=dashed];
m4_694 -> m4_46  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>", style=dashed];
m4_694 -> m4_49  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>", style=dashed];
m4_695 -> m4_57  [color=darkseagreen4, key=1, label=json, style=dashed];
m4_696 -> m4_74  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrivateDefaultCtorWithIEnumerableCtorList<T>", style=dashed];
m4_697 -> m4_134  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>", style=dashed];
m4_697 -> m4_137  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>", style=dashed];
m4_697 -> m4_141  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>", style=dashed];
m4_697 -> m4_145  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>", style=dashed];
m4_697 -> m4_148  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>", style=dashed];
m4_698 -> m4_159  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>", style=dashed];
m4_698 -> m4_162  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>", style=dashed];
m4_698 -> m4_165  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>", style=dashed];
m4_699 -> m4_187  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericListTestClass", style=dashed];
m4_700 -> m4_309  [color=darkseagreen4, key=1, label=json, style=dashed];
m4_701 -> m4_312  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass", style=dashed];
m4_701 -> m4_313  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass", style=dashed];
m4_701 -> m4_314  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass", style=dashed];
m4_701 -> m4_315  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass", style=dashed];
m4_701 -> m4_316  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass", style=dashed];
m4_701 -> m4_317  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass", style=dashed];
m4_701 -> m4_318  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass", style=dashed];
m4_701 -> m4_319  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass", style=dashed];
m4_701 -> m4_320  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass", style=dashed];
m4_701 -> m4_321  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass", style=dashed];
m4_702 -> m4_397  [color=darkseagreen4, key=1, label=json, style=dashed];
m4_703 -> m4_404  [color=darkseagreen4, key=1, label=json, style=dashed];
m4_704 -> m4_424  [color=darkseagreen4, key=1, label=json, style=dashed];
m4_705 -> m4_431  [color=darkseagreen4, key=1, label=json, style=dashed];
m4_706 -> m4_438  [color=darkseagreen4, key=1, label=json, style=dashed];
m4_707 -> m4_464  [color=darkseagreen4, key=1, label=json, style=dashed];
m4_708 -> m4_471  [color=darkseagreen4, key=1, label=json, style=dashed];
m4_709 -> m4_644  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList", style=dashed];
m4_709 -> m4_647  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList", style=dashed];
m4_709 -> m4_651  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList", style=dashed];
m4_710 -> m4_653  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>", style=dashed];
m4_710 -> m4_656  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>", style=dashed];
m4_710 -> m4_657  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>", style=dashed];
m4_710 -> m4_662  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>", style=dashed];
m5_22 -> m5_23  [key=0, style=solid];
m5_23 -> m5_24  [key=0, style=solid];
m5_23 -> m5_25  [key=2, style=dotted];
m5_24 -> m5_22  [color=blue, key=0, style=bold];
m5_30 -> m5_31  [key=0, style=solid];
m5_30 -> m5_34  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_30 -> m5_35  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_31 -> m5_32  [key=0, style=solid];
m5_31 -> m5_39  [key=2, style=dotted];
m5_34 -> m5_35  [key=0, style=solid];
m5_34 -> m5_38  [key=0, style=solid];
m5_35 -> m5_38  [key=0, style=solid];
m5_35 -> m5_41  [key=2, style=dotted];
m5_32 -> m5_33  [key=0, style=solid];
m5_32 -> m5_36  [key=0, style=solid];
m5_32 -> m5_38  [key=0, style=solid];
m5_32 -> m5_40  [key=2, style=dotted];
m5_33 -> m5_34  [key=0, style=solid];
m5_36 -> m5_37  [key=0, style=solid];
m5_37 -> m5_38  [key=0, style=solid];
m5_37 -> m5_42  [key=2, style=dotted];
m5_37 -> m5_43  [key=2, style=dotted];
m5_37 -> m5_44  [key=2, style=dotted];
m5_38 -> m5_30  [color=blue, key=0, style=bold];
m5_14 -> m5_15  [key=0, style=solid];
m5_15 -> m5_16  [key=0, style=solid];
m5_15 -> m5_17  [key=2, style=dotted];
m5_15 -> m5_18  [key=2, style=dotted];
m5_16 -> m5_14  [color=blue, key=0, style=bold];
m5_17 -> m5_19  [key=0, style=solid];
m5_19 -> m5_20  [key=0, style=solid];
m5_19 -> m5_21  [key=2, style=dotted];
m5_20 -> m5_17  [color=blue, key=0, style=bold];
m5_12 -> m5_13  [key=0, style=solid];
m5_13 -> m5_12  [color=blue, key=0, style=bold];
m5_0 -> m5_1  [key=0, style=solid];
m5_0 -> m5_2  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_6  [key=2, style=dotted];
m5_1 -> m5_3  [color=darkseagreen4, key=1, label=sw, style=dashed];
m5_1 -> m5_4  [color=red, key=1, label=sw, style=dashed];
m5_2 -> m5_3  [key=0, style=solid];
m5_2 -> m5_7  [key=2, style=dotted];
m5_2 -> m5_8  [key=2, style=dotted];
m5_2 -> m5_9  [key=2, style=dotted];
m5_3 -> m5_4  [color=red, key=0, style=solid];
m5_3 -> m5_10  [key=2, style=dotted];
m5_4 -> m5_5  [color=red, key=0, style=solid];
m5_4 -> m5_11  [color=red, key=2, style=dotted];
m5_5 -> m5_0  [color=blue, key=0, style=bold];
m5_26 -> m5_27  [key=0, style=solid];
m5_27 -> m5_28  [key=0, style=solid];
m5_27 -> m5_29  [key=2, style=dotted];
m5_28 -> m5_26  [color=blue, key=0, style=bold];
m5_45 -> m5_15  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestFixtureBase", style=dashed];
m7_45 -> m7_46  [key=0, style=solid];
m7_46 -> m7_47  [key=0, style=solid];
m7_46 -> m7_18  [key=2, style=dotted];
m7_46 -> m7_51  [color=darkseagreen4, key=1, label=regex, style=dashed];
m7_47 -> m7_48  [key=0, style=solid];
m7_47 -> m7_56  [key=2, style=dotted];
m7_47 -> m7_53  [color=darkseagreen4, key=1, label=ms, style=dashed];
m7_51 -> m7_52  [key=0, style=solid];
m7_51 -> m7_60  [key=2, style=dotted];
m7_51 -> m7_61  [key=2, style=dotted];
m7_48 -> m7_49  [key=0, style=solid];
m7_48 -> m7_57  [key=2, style=dotted];
m7_48 -> m7_51  [color=darkseagreen4, key=1, label=writer, style=dashed];
m7_53 -> m7_54  [key=0, style=solid];
m7_53 -> m7_62  [key=2, style=dotted];
m7_53 -> m7_63  [key=2, style=dotted];
m7_49 -> m7_50  [key=0, style=solid];
m7_49 -> m7_58  [key=2, style=dotted];
m7_49 -> m7_51  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m7_50 -> m7_51  [key=0, style=solid];
m7_50 -> m7_9  [key=2, style=dotted];
m7_50 -> m7_59  [key=2, style=dotted];
m7_52 -> m7_53  [key=0, style=solid];
m7_52 -> m7_54  [color=darkseagreen4, key=1, label=expected, style=dashed];
m7_52 -> m7_52  [color=darkorchid, key=3, label="Local variable string expected", style=bold];
m7_54 -> m7_55  [key=0, style=solid];
m7_54 -> m7_37  [key=2, style=dotted];
m7_55 -> m7_45  [color=blue, key=0, style=bold];
m7_93 -> m7_94  [key=0, style=solid];
m7_94 -> m7_95  [key=0, style=solid];
m7_94 -> m7_18  [key=2, style=dotted];
m7_94 -> m7_99  [color=darkseagreen4, key=1, label=regex, style=dashed];
m7_95 -> m7_96  [key=0, style=solid];
m7_95 -> m7_56  [key=2, style=dotted];
m7_95 -> m7_101  [color=darkseagreen4, key=1, label=ms, style=dashed];
m7_95 -> m7_103  [color=darkseagreen4, key=1, label=ms, style=dashed];
m7_95 -> m7_104  [color=darkseagreen4, key=1, label=ms, style=dashed];
m7_99 -> m7_100  [key=0, style=solid];
m7_99 -> m7_60  [key=2, style=dotted];
m7_99 -> m7_61  [key=2, style=dotted];
m7_96 -> m7_97  [key=0, style=solid];
m7_96 -> m7_57  [key=2, style=dotted];
m7_96 -> m7_99  [color=darkseagreen4, key=1, label=writer, style=dashed];
m7_101 -> m7_102  [key=0, style=solid];
m7_101 -> m7_62  [key=2, style=dotted];
m7_101 -> m7_63  [key=2, style=dotted];
m7_103 -> m7_104  [key=0, style=solid];
m7_103 -> m7_92  [key=2, style=dotted];
m7_104 -> m7_105  [key=0, style=solid];
m7_104 -> m7_75  [key=2, style=dotted];
m7_104 -> m7_106  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_97 -> m7_98  [key=0, style=solid];
m7_97 -> m7_58  [key=2, style=dotted];
m7_97 -> m7_99  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m7_97 -> m7_105  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m7_97 -> m7_106  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m7_98 -> m7_99  [key=0, style=solid];
m7_98 -> m7_9  [key=2, style=dotted];
m7_98 -> m7_59  [key=2, style=dotted];
m7_105 -> m7_106  [key=0, style=solid];
m7_105 -> m7_9  [key=2, style=dotted];
m7_105 -> m7_59  [key=2, style=dotted];
m7_106 -> m7_107  [key=0, style=solid];
m7_106 -> m7_76  [key=2, style=dotted];
m7_106 -> m7_108  [color=darkseagreen4, key=1, label=c, style=dashed];
m7_100 -> m7_101  [key=0, style=solid];
m7_100 -> m7_102  [color=darkseagreen4, key=1, label=expected, style=dashed];
m7_100 -> m7_100  [color=darkorchid, key=3, label="Local variable string expected", style=bold];
m7_102 -> m7_103  [key=0, style=solid];
m7_102 -> m7_37  [key=2, style=dotted];
m7_107 -> m7_108  [key=0, style=solid];
m7_107 -> m7_36  [key=2, style=dotted];
m7_107 -> m7_37  [key=2, style=dotted];
m7_108 -> m7_109  [key=0, style=solid];
m7_108 -> m7_37  [key=2, style=dotted];
m7_109 -> m7_93  [color=blue, key=0, style=bold];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_2  [key=0, style=solid];
m7_1 -> m7_7  [key=2, style=dotted];
m7_1 -> m7_5  [color=darkseagreen4, key=1, label=sw, style=dashed];
m7_2 -> m7_3  [key=0, style=solid];
m7_2 -> m7_8  [key=2, style=dotted];
m7_2 -> m7_4  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_5 -> m7_6  [key=0, style=solid];
m7_5 -> m7_11  [key=2, style=dotted];
m7_5 -> m7_12  [key=2, style=dotted];
m7_3 -> m7_4  [key=0, style=solid];
m7_3 -> m7_9  [key=2, style=dotted];
m7_4 -> m7_5  [key=0, style=solid];
m7_4 -> m7_10  [key=2, style=dotted];
m7_6 -> m7_0  [color=blue, key=0, style=bold];
m7_38 -> m7_39  [key=0, style=solid];
m7_39 -> m7_40  [key=0, style=solid];
m7_39 -> m7_39  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_40 -> m7_41  [key=0, style=solid];
m7_40 -> m7_44  [key=2, style=dotted];
m7_40 -> m7_42  [color=darkseagreen4, key=1, label=r, style=dashed];
m7_41 -> m7_42  [key=0, style=solid];
m7_41 -> m7_36  [key=2, style=dotted];
m7_41 -> m7_37  [key=2, style=dotted];
m7_42 -> m7_43  [key=0, style=solid];
m7_42 -> m7_37  [key=2, style=dotted];
m7_43 -> m7_38  [color=blue, key=0, style=bold];
m7_117 -> m7_118  [key=0, style=solid];
m7_118 -> m7_119  [key=0, style=solid];
m7_118 -> m7_91  [key=2, style=dotted];
m7_119 -> m7_120  [key=0, style=solid];
m7_119 -> m7_60  [key=2, style=dotted];
m7_119 -> m7_9  [key=2, style=dotted];
m7_119 -> m7_19  [key=2, style=dotted];
m7_119 -> m7_121  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_120 -> m7_121  [key=0, style=solid];
m7_120 -> m7_12  [key=2, style=dotted];
m7_121 -> m7_122  [key=0, style=solid];
m7_121 -> m7_9  [key=2, style=dotted];
m7_121 -> m7_116  [key=2, style=dotted];
m7_121 -> m7_123  [color=darkseagreen4, key=1, label=newRegex, style=dashed];
m7_122 -> m7_123  [key=0, style=solid];
m7_122 -> m7_36  [key=2, style=dotted];
m7_122 -> m7_37  [key=2, style=dotted];
m7_123 -> m7_124  [key=0, style=solid];
m7_123 -> m7_37  [key=2, style=dotted];
m7_124 -> m7_117  [color=blue, key=0, style=bold];
m7_64 -> m7_65  [key=0, style=solid];
m7_65 -> m7_66  [key=0, style=solid];
m7_65 -> m7_73  [key=2, style=dotted];
m7_65 -> m7_74  [key=2, style=dotted];
m7_66 -> m7_67  [key=0, style=solid];
m7_66 -> m7_75  [key=2, style=dotted];
m7_66 -> m7_69  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_67 -> m7_68  [key=0, style=solid];
m7_67 -> m7_58  [key=2, style=dotted];
m7_67 -> m7_69  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m7_69 -> m7_70  [key=0, style=solid];
m7_69 -> m7_76  [key=2, style=dotted];
m7_69 -> m7_71  [color=darkseagreen4, key=1, label=c, style=dashed];
m7_68 -> m7_69  [key=0, style=solid];
m7_68 -> m7_9  [key=2, style=dotted];
m7_68 -> m7_59  [key=2, style=dotted];
m7_70 -> m7_71  [key=0, style=solid];
m7_70 -> m7_36  [key=2, style=dotted];
m7_70 -> m7_37  [key=2, style=dotted];
m7_71 -> m7_72  [key=0, style=solid];
m7_71 -> m7_37  [key=2, style=dotted];
m7_72 -> m7_64  [color=blue, key=0, style=bold];
m7_110 -> m7_111  [key=0, style=solid];
m7_111 -> m7_112  [key=0, style=solid];
m7_111 -> m7_16  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_112 -> m7_113  [key=0, style=solid];
m7_112 -> m7_9  [key=2, style=dotted];
m7_112 -> m7_116  [key=2, style=dotted];
m7_112 -> m7_114  [color=darkseagreen4, key=1, label=newRegex, style=dashed];
m7_113 -> m7_114  [key=0, style=solid];
m7_113 -> m7_36  [key=2, style=dotted];
m7_113 -> m7_37  [key=2, style=dotted];
m7_114 -> m7_115  [key=0, style=solid];
m7_114 -> m7_37  [key=2, style=dotted];
m7_115 -> m7_110  [color=blue, key=0, style=bold];
m7_125 -> m7_126  [key=0, style=solid];
m7_126 -> m7_127  [key=0, style=solid];
m7_126 -> m7_131  [key=2, style=dotted];
m7_126 -> m7_132  [key=2, style=dotted];
m7_126 -> m7_128  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_127 -> m7_128  [key=0, style=solid];
m7_127 -> m7_37  [key=2, style=dotted];
m7_128 -> m7_129  [key=0, style=solid];
m7_128 -> m7_44  [key=2, style=dotted];
m7_129 -> m7_130  [key=0, style=solid];
m7_129 -> m7_37  [key=2, style=dotted];
m7_130 -> m7_125  [color=blue, key=0, style=bold];
m7_20 -> m7_21  [key=0, style=solid];
m7_21 -> m7_22  [key=0, style=solid];
m7_21 -> m7_18  [key=2, style=dotted];
m7_22 -> m7_23  [key=0, style=solid];
m7_22 -> m7_25  [key=2, style=dotted];
m7_22 -> m7_9  [key=2, style=dotted];
m7_22 -> m7_26  [key=2, style=dotted];
m7_22 -> m7_27  [key=2, style=dotted];
m7_22 -> m7_28  [key=2, style=dotted];
m7_23 -> m7_24  [key=0, style=solid];
m7_23 -> m7_12  [key=2, style=dotted];
m7_24 -> m7_20  [color=blue, key=0, style=bold];
m7_77 -> m7_78  [key=0, style=solid];
m7_78 -> m7_79  [key=0, style=solid];
m7_78 -> m7_91  [key=2, style=dotted];
m7_78 -> m7_83  [color=darkseagreen4, key=1, label=regex, style=dashed];
m7_79 -> m7_80  [key=0, style=solid];
m7_79 -> m7_56  [key=2, style=dotted];
m7_79 -> m7_84  [color=darkseagreen4, key=1, label=ms, style=dashed];
m7_79 -> m7_85  [color=darkseagreen4, key=1, label=ms, style=dashed];
m7_83 -> m7_84  [key=0, style=solid];
m7_83 -> m7_60  [key=2, style=dotted];
m7_83 -> m7_61  [key=2, style=dotted];
m7_80 -> m7_81  [key=0, style=solid];
m7_80 -> m7_57  [key=2, style=dotted];
m7_80 -> m7_83  [color=darkseagreen4, key=1, label=writer, style=dashed];
m7_84 -> m7_85  [key=0, style=solid];
m7_84 -> m7_92  [key=2, style=dotted];
m7_85 -> m7_86  [key=0, style=solid];
m7_85 -> m7_75  [key=2, style=dotted];
m7_85 -> m7_87  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_81 -> m7_82  [key=0, style=solid];
m7_81 -> m7_58  [key=2, style=dotted];
m7_81 -> m7_83  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m7_81 -> m7_86  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m7_81 -> m7_87  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m7_82 -> m7_83  [key=0, style=solid];
m7_82 -> m7_9  [key=2, style=dotted];
m7_82 -> m7_59  [key=2, style=dotted];
m7_86 -> m7_87  [key=0, style=solid];
m7_86 -> m7_9  [key=2, style=dotted];
m7_86 -> m7_59  [key=2, style=dotted];
m7_87 -> m7_88  [key=0, style=solid];
m7_87 -> m7_76  [key=2, style=dotted];
m7_87 -> m7_89  [color=darkseagreen4, key=1, label=c, style=dashed];
m7_88 -> m7_89  [key=0, style=solid];
m7_88 -> m7_36  [key=2, style=dotted];
m7_88 -> m7_37  [key=2, style=dotted];
m7_89 -> m7_90  [key=0, style=solid];
m7_89 -> m7_37  [key=2, style=dotted];
m7_90 -> m7_77  [color=blue, key=0, style=bold];
m7_29 -> m7_30  [key=0, style=solid];
m7_30 -> m7_31  [key=0, style=solid];
m7_30 -> m7_23  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_31 -> m7_32  [key=0, style=solid];
m7_31 -> m7_25  [key=2, style=dotted];
m7_31 -> m7_9  [key=2, style=dotted];
m7_31 -> m7_35  [key=2, style=dotted];
m7_31 -> m7_33  [color=darkseagreen4, key=1, label=regex, style=dashed];
m7_32 -> m7_33  [key=0, style=solid];
m7_32 -> m7_36  [key=2, style=dotted];
m7_32 -> m7_37  [key=2, style=dotted];
m7_33 -> m7_34  [key=0, style=solid];
m7_33 -> m7_37  [key=2, style=dotted];
m7_34 -> m7_29  [color=blue, key=0, style=bold];
m7_13 -> m7_14  [key=0, style=solid];
m7_14 -> m7_15  [key=0, style=solid];
m7_14 -> m7_18  [key=2, style=dotted];
m7_15 -> m7_16  [key=0, style=solid];
m7_15 -> m7_9  [key=2, style=dotted];
m7_15 -> m7_19  [key=2, style=dotted];
m7_16 -> m7_17  [key=0, style=solid];
m7_16 -> m7_12  [key=2, style=dotted];
m7_17 -> m7_13  [color=blue, key=0, style=bold];
m7_133 -> m7_53  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.RegexConverterTests", style=dashed];
m7_133 -> m7_101  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.RegexConverterTests", style=dashed];
m8_0 -> m8_1  [key=0, style=solid];
m8_14 -> m8_15  [color=green, key=0, style=solid];
m8_14 -> m8_25  [color=green, key=2, style=dotted];
m8_3 -> m8_14  [color=green, key=1, label=writer, style=dashed];
m8_3 -> m8_4  [key=0, style=solid];
m8_3 -> m8_22  [key=2, style=dotted];
m8_3 -> m8_5  [color=darkseagreen4, key=1, label=writer, style=dashed];
m8_3 -> m8_6  [color=darkseagreen4, key=1, label=writer, style=dashed];
m8_3 -> m8_7  [color=darkseagreen4, key=1, label=writer, style=dashed];
m8_3 -> m8_8  [color=darkseagreen4, key=1, label=writer, style=dashed];
m8_3 -> m8_9  [color=darkseagreen4, key=1, label=writer, style=dashed];
m8_3 -> m8_10  [color=darkseagreen4, key=1, label=writer, style=dashed];
m8_3 -> m8_11  [color=darkseagreen4, key=1, label=writer, style=dashed];
m8_3 -> m8_12  [color=darkseagreen4, key=1, label=writer, style=dashed];
m8_3 -> m8_13  [color=darkseagreen4, key=1, label=writer, style=dashed];
m8_3 -> m8_15  [color=darkseagreen4, key=1, label=writer, style=dashed];
m8_3 -> m8_16  [color=darkseagreen4, key=1, label=writer, style=dashed];
m8_3 -> m8_17  [color=darkseagreen4, key=1, label=writer, style=dashed];
m8_13 -> m8_14  [color=green, key=0, style=solid];
m8_13 -> m8_27  [key=2, style=dotted];
m8_15 -> m8_16  [key=0, style=solid];
m8_15 -> m8_25  [key=2, style=dotted];
m8_2 -> m8_3  [key=0, style=solid];
m8_2 -> m8_21  [key=2, style=dotted];
m8_4 -> m8_5  [key=0, style=solid];
m8_5 -> m8_6  [key=0, style=solid];
m8_5 -> m8_23  [key=2, style=dotted];
m8_6 -> m8_7  [key=0, style=solid];
m8_6 -> m8_24  [key=2, style=dotted];
m8_7 -> m8_25  [key=2, style=dotted];
m8_7 -> m8_8  [key=0, style=solid];
m8_8 -> m8_9  [key=0, style=solid];
m8_8 -> m8_24  [key=2, style=dotted];
m8_9 -> m8_25  [key=2, style=dotted];
m8_9 -> m8_10  [key=0, style=solid];
m8_10 -> m8_11  [key=0, style=solid];
m8_10 -> m8_24  [key=2, style=dotted];
m8_11 -> m8_12  [key=0, style=solid];
m8_11 -> m8_26  [key=2, style=dotted];
m8_12 -> m8_13  [key=0, style=solid];
m8_12 -> m8_25  [key=2, style=dotted];
m8_16 -> m8_17  [key=0, style=solid];
m8_16 -> m8_28  [key=2, style=dotted];
m8_17 -> m8_18  [key=0, style=solid];
m8_17 -> m8_29  [key=2, style=dotted];
m8_1 -> m8_2  [key=0, style=solid];
m8_1 -> m8_20  [key=2, style=dotted];
m8_1 -> m8_18  [color=darkseagreen4, key=1, label=sb, style=dashed];
m8_18 -> m8_19  [key=0, style=solid];
m8_18 -> m8_30  [key=2, style=dotted];
m8_18 -> m8_31  [key=2, style=dotted];
m8_19 -> m8_0  [color=blue, key=0, style=bold];
m11_11 -> m11_12  [key=0, style=solid];
m11_12 -> m11_13  [key=0, style=solid];
m11_12 -> m11_8  [key=2, style=dotted];
m11_13 -> m11_14  [key=0, style=solid];
m11_13 -> m11_9  [key=2, style=dotted];
m11_13 -> m11_10  [key=2, style=dotted];
m11_14 -> m11_15  [key=0, style=solid];
m11_14 -> m11_19  [key=2, style=dotted];
m11_15 -> m11_16  [key=0, style=solid];
m11_15 -> m11_8  [key=2, style=dotted];
m11_16 -> m11_17  [key=0, style=solid];
m11_16 -> m11_9  [key=2, style=dotted];
m11_16 -> m11_10  [key=2, style=dotted];
m11_17 -> m11_18  [key=0, style=solid];
m11_17 -> m11_19  [key=2, style=dotted];
m11_18 -> m11_11  [color=blue, key=0, style=bold];
m11_128 -> m11_129  [key=0, style=solid];
m11_129 -> m11_130  [key=0, style=solid];
m11_129 -> m11_132  [color=darkseagreen4, key=1, label=json, style=dashed];
m11_129 -> m11_129  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_130 -> m11_131  [key=0, style=solid];
m11_130 -> m11_123  [key=2, style=dotted];
m11_130 -> m11_132  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m11_132 -> m11_133  [key=0, style=solid];
m11_132 -> m11_137  [key=0, style=solid];
m11_132 -> m11_125  [key=2, style=dotted];
m11_132 -> m11_126  [key=2, style=dotted];
m11_132 -> m11_127  [key=2, style=dotted];
m11_131 -> m11_132  [key=0, style=solid];
m11_131 -> m11_9  [key=2, style=dotted];
m11_131 -> m11_124  [key=2, style=dotted];
m11_133 -> m11_134  [key=0, style=solid];
m11_137 -> m11_138  [key=0, style=solid];
m11_137 -> m11_139  [key=2, style=dotted];
m11_134 -> m11_135  [key=0, style=solid];
m11_134 -> m11_29  [key=2, style=dotted];
m11_135 -> m11_136  [key=0, style=solid];
m11_135 -> m11_29  [key=2, style=dotted];
m11_136 -> m11_138  [key=0, style=solid];
m11_138 -> m11_128  [color=blue, key=0, style=bold];
m11_63 -> m11_64  [key=0, style=solid];
m11_64 -> m11_65  [key=0, style=solid];
m11_64 -> m11_70  [key=2, style=dotted];
m11_64 -> m11_66  [color=darkseagreen4, key=1, label=negativeEnumClass, style=dashed];
m11_64 -> m11_67  [color=darkseagreen4, key=1, label=negativeEnumClass, style=dashed];
m11_65 -> m11_66  [key=0, style=solid];
m11_66 -> m11_67  [key=0, style=solid];
m11_67 -> m11_68  [key=0, style=solid];
m11_67 -> m11_9  [key=2, style=dotted];
m11_67 -> m11_10  [key=2, style=dotted];
m11_68 -> m11_69  [key=0, style=solid];
m11_68 -> m11_19  [key=2, style=dotted];
m11_69 -> m11_63  [color=blue, key=0, style=bold];
m11_103 -> m11_104  [key=0, style=solid];
m11_104 -> m11_105  [key=0, style=solid];
m11_104 -> m11_101  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_105 -> m11_106  [key=0, style=solid];
m11_105 -> m11_9  [key=2, style=dotted];
m11_105 -> m11_28  [key=2, style=dotted];
m11_106 -> m11_107  [key=0, style=solid];
m11_106 -> m11_29  [key=2, style=dotted];
m11_107 -> m11_103  [color=blue, key=0, style=bold];
m11_30 -> m11_31  [key=0, style=solid];
m11_31 -> m11_32  [key=0, style=solid];
m11_31 -> m11_38  [key=2, style=dotted];
m11_31 -> m11_33  [color=darkseagreen4, key=1, label=enumClass, style=dashed];
m11_31 -> m11_34  [color=darkseagreen4, key=1, label=enumClass, style=dashed];
m11_31 -> m11_35  [color=darkseagreen4, key=1, label=enumClass, style=dashed];
m11_32 -> m11_33  [key=0, style=solid];
m11_33 -> m11_34  [key=0, style=solid];
m11_34 -> m11_35  [key=0, style=solid];
m11_35 -> m11_36  [key=0, style=solid];
m11_35 -> m11_9  [key=2, style=dotted];
m11_35 -> m11_10  [key=2, style=dotted];
m11_36 -> m11_37  [key=0, style=solid];
m11_36 -> m11_19  [key=2, style=dotted];
m11_37 -> m11_30  [color=blue, key=0, style=bold];
m11_71 -> m11_72  [key=0, style=solid];
m11_72 -> m11_73  [key=0, style=solid];
m11_72 -> m11_68  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_73 -> m11_74  [key=0, style=solid];
m11_73 -> m11_9  [key=2, style=dotted];
m11_73 -> m11_28  [key=2, style=dotted];
m11_73 -> m11_75  [color=darkseagreen4, key=1, label=negativeEnumClass, style=dashed];
m11_74 -> m11_75  [key=0, style=solid];
m11_74 -> m11_29  [key=2, style=dotted];
m11_75 -> m11_76  [key=0, style=solid];
m11_75 -> m11_29  [key=2, style=dotted];
m11_76 -> m11_71  [color=blue, key=0, style=bold];
m11_84 -> m11_85  [key=0, style=solid];
m11_85 -> m11_86  [key=0, style=solid];
m11_85 -> m11_36  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_86 -> m11_87  [key=0, style=solid];
m11_86 -> m11_9  [key=2, style=dotted];
m11_86 -> m11_28  [key=2, style=dotted];
m11_86 -> m11_88  [color=darkseagreen4, key=1, label=enumClass, style=dashed];
m11_86 -> m11_89  [color=darkseagreen4, key=1, label=enumClass, style=dashed];
m11_87 -> m11_88  [key=0, style=solid];
m11_87 -> m11_29  [key=2, style=dotted];
m11_88 -> m11_89  [key=0, style=solid];
m11_88 -> m11_29  [key=2, style=dotted];
m11_89 -> m11_90  [key=0, style=solid];
m11_89 -> m11_29  [key=2, style=dotted];
m11_90 -> m11_84  [color=blue, key=0, style=bold];
m11_108 -> m11_109  [key=0, style=solid];
m11_109 -> m11_110  [key=0, style=solid];
m11_109 -> m11_109  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_110 -> m11_111  [key=0, style=solid];
m11_110 -> m11_9  [key=2, style=dotted];
m11_110 -> m11_28  [key=2, style=dotted];
m11_111 -> m11_112  [key=0, style=solid];
m11_111 -> m11_113  [key=2, style=dotted];
m11_112 -> m11_108  [color=blue, key=0, style=bold];
m11_47 -> m11_48  [key=0, style=solid];
m11_48 -> m11_49  [key=0, style=solid];
m11_48 -> m11_38  [key=2, style=dotted];
m11_48 -> m11_50  [color=darkseagreen4, key=1, label=enumClass, style=dashed];
m11_48 -> m11_51  [color=darkseagreen4, key=1, label=enumClass, style=dashed];
m11_48 -> m11_52  [color=darkseagreen4, key=1, label=enumClass, style=dashed];
m11_49 -> m11_50  [key=0, style=solid];
m11_50 -> m11_51  [key=0, style=solid];
m11_51 -> m11_52  [key=0, style=solid];
m11_52 -> m11_53  [key=0, style=solid];
m11_52 -> m11_9  [key=2, style=dotted];
m11_52 -> m11_10  [key=2, style=dotted];
m11_53 -> m11_54  [key=0, style=solid];
m11_53 -> m11_19  [key=2, style=dotted];
m11_54 -> m11_47  [color=blue, key=0, style=bold];
m11_0 -> m11_1  [key=0, style=solid];
m11_1 -> m11_2  [key=0, style=solid];
m11_1 -> m11_3  [key=2, style=dotted];
m11_1 -> m11_4  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_2 -> m11_0  [color=blue, key=0, style=bold];
m11_39 -> m11_40  [key=0, style=solid];
m11_40 -> m11_41  [key=0, style=solid];
m11_40 -> m11_38  [key=2, style=dotted];
m11_40 -> m11_42  [color=darkseagreen4, key=1, label=enumClass, style=dashed];
m11_40 -> m11_43  [color=darkseagreen4, key=1, label=enumClass, style=dashed];
m11_40 -> m11_44  [color=darkseagreen4, key=1, label=enumClass, style=dashed];
m11_41 -> m11_42  [key=0, style=solid];
m11_42 -> m11_43  [key=0, style=solid];
m11_43 -> m11_44  [key=0, style=solid];
m11_44 -> m11_45  [key=0, style=solid];
m11_44 -> m11_9  [key=2, style=dotted];
m11_44 -> m11_10  [key=2, style=dotted];
m11_45 -> m11_46  [key=0, style=solid];
m11_45 -> m11_19  [key=2, style=dotted];
m11_46 -> m11_39  [color=blue, key=0, style=bold];
m11_55 -> m11_56  [key=0, style=solid];
m11_56 -> m11_57  [key=0, style=solid];
m11_56 -> m11_38  [key=2, style=dotted];
m11_56 -> m11_58  [color=darkseagreen4, key=1, label=enumClass, style=dashed];
m11_56 -> m11_59  [color=darkseagreen4, key=1, label=enumClass, style=dashed];
m11_56 -> m11_60  [color=darkseagreen4, key=1, label=enumClass, style=dashed];
m11_57 -> m11_58  [key=0, style=solid];
m11_58 -> m11_59  [key=0, style=solid];
m11_59 -> m11_60  [key=0, style=solid];
m11_60 -> m11_61  [key=0, style=solid];
m11_60 -> m11_9  [key=2, style=dotted];
m11_60 -> m11_10  [key=2, style=dotted];
m11_61 -> m11_62  [key=0, style=solid];
m11_61 -> m11_19  [key=2, style=dotted];
m11_62 -> m11_55  [color=blue, key=0, style=bold];
m11_91 -> m11_92  [key=0, style=solid];
m11_92 -> m11_93  [key=0, style=solid];
m11_92 -> m11_53  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_93 -> m11_94  [key=0, style=solid];
m11_93 -> m11_9  [key=2, style=dotted];
m11_93 -> m11_28  [key=2, style=dotted];
m11_93 -> m11_95  [color=darkseagreen4, key=1, label=enumClass, style=dashed];
m11_93 -> m11_96  [color=darkseagreen4, key=1, label=enumClass, style=dashed];
m11_94 -> m11_95  [key=0, style=solid];
m11_94 -> m11_29  [key=2, style=dotted];
m11_95 -> m11_96  [key=0, style=solid];
m11_95 -> m11_29  [key=2, style=dotted];
m11_96 -> m11_97  [key=0, style=solid];
m11_96 -> m11_29  [key=2, style=dotted];
m11_97 -> m11_91  [color=blue, key=0, style=bold];
m11_140 -> m11_141  [key=0, style=solid];
m11_141 -> m11_142  [key=0, style=solid];
m11_141 -> m11_161  [key=2, style=dotted];
m11_142 -> m11_143  [key=0, style=solid];
m11_142 -> m11_9  [key=2, style=dotted];
m11_142 -> m11_10  [key=2, style=dotted];
m11_142 -> m11_144  [color=darkseagreen4, key=1, label=json1, style=dashed];
m11_143 -> m11_144  [key=0, style=solid];
m11_143 -> m11_19  [key=2, style=dotted];
m11_144 -> m11_145  [key=0, style=solid];
m11_144 -> m11_162  [key=2, style=dotted];
m11_144 -> m11_146  [color=darkseagreen4, key=1, label=foos, style=dashed];
m11_144 -> m11_147  [color=darkseagreen4, key=1, label=foos, style=dashed];
m11_144 -> m11_148  [color=darkseagreen4, key=1, label=foos, style=dashed];
m11_144 -> m11_149  [color=darkseagreen4, key=1, label=foos, style=dashed];
m11_144 -> m11_150  [color=darkseagreen4, key=1, label=foos, style=dashed];
m11_144 -> m11_151  [color=darkseagreen4, key=1, label=foos, style=dashed];
m11_145 -> m11_146  [key=0, style=solid];
m11_145 -> m11_29  [key=2, style=dotted];
m11_146 -> m11_147  [key=0, style=solid];
m11_146 -> m11_29  [key=2, style=dotted];
m11_147 -> m11_148  [key=0, style=solid];
m11_147 -> m11_29  [key=2, style=dotted];
m11_148 -> m11_149  [key=0, style=solid];
m11_148 -> m11_29  [key=2, style=dotted];
m11_149 -> m11_150  [key=0, style=solid];
m11_149 -> m11_29  [key=2, style=dotted];
m11_150 -> m11_151  [key=0, style=solid];
m11_150 -> m11_29  [key=2, style=dotted];
m11_151 -> m11_152  [key=0, style=solid];
m11_151 -> m11_29  [key=2, style=dotted];
m11_152 -> m11_153  [key=0, style=solid];
m11_152 -> m11_161  [key=2, style=dotted];
m11_153 -> m11_154  [key=0, style=solid];
m11_153 -> m11_9  [key=2, style=dotted];
m11_153 -> m11_10  [key=2, style=dotted];
m11_153 -> m11_155  [color=darkseagreen4, key=1, label=json2, style=dashed];
m11_154 -> m11_155  [key=0, style=solid];
m11_154 -> m11_19  [key=2, style=dotted];
m11_155 -> m11_156  [key=0, style=solid];
m11_155 -> m11_162  [key=2, style=dotted];
m11_155 -> m11_157  [color=darkseagreen4, key=1, label=bars, style=dashed];
m11_155 -> m11_158  [color=darkseagreen4, key=1, label=bars, style=dashed];
m11_155 -> m11_159  [color=darkseagreen4, key=1, label=bars, style=dashed];
m11_156 -> m11_157  [key=0, style=solid];
m11_156 -> m11_29  [key=2, style=dotted];
m11_157 -> m11_158  [key=0, style=solid];
m11_157 -> m11_29  [key=2, style=dotted];
m11_158 -> m11_159  [key=0, style=solid];
m11_158 -> m11_29  [key=2, style=dotted];
m11_159 -> m11_160  [key=0, style=solid];
m11_159 -> m11_29  [key=2, style=dotted];
m11_160 -> m11_140  [color=blue, key=0, style=bold];
m11_77 -> m11_78  [key=0, style=solid];
m11_78 -> m11_79  [key=0, style=solid];
m11_78 -> m11_78  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_79 -> m11_80  [key=0, style=solid];
m11_79 -> m11_9  [key=2, style=dotted];
m11_79 -> m11_28  [key=2, style=dotted];
m11_79 -> m11_81  [color=darkseagreen4, key=1, label=enumClass, style=dashed];
m11_79 -> m11_82  [color=darkseagreen4, key=1, label=enumClass, style=dashed];
m11_80 -> m11_81  [key=0, style=solid];
m11_80 -> m11_29  [key=2, style=dotted];
m11_81 -> m11_82  [key=0, style=solid];
m11_81 -> m11_29  [key=2, style=dotted];
m11_82 -> m11_83  [key=0, style=solid];
m11_82 -> m11_29  [key=2, style=dotted];
m11_83 -> m11_77  [color=blue, key=0, style=bold];
m11_20 -> m11_21  [key=0, style=solid];
m11_21 -> m11_22  [key=0, style=solid];
m11_21 -> m11_14  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_22 -> m11_23  [key=0, style=solid];
m11_22 -> m11_9  [key=2, style=dotted];
m11_22 -> m11_28  [key=2, style=dotted];
m11_23 -> m11_24  [key=0, style=solid];
m11_23 -> m11_29  [key=2, style=dotted];
m11_24 -> m11_25  [key=0, style=solid];
m11_25 -> m11_26  [key=0, style=solid];
m11_25 -> m11_9  [key=2, style=dotted];
m11_25 -> m11_28  [key=2, style=dotted];
m11_26 -> m11_27  [key=0, style=solid];
m11_26 -> m11_29  [key=2, style=dotted];
m11_27 -> m11_20  [color=blue, key=0, style=bold];
m11_98 -> m11_99  [key=0, style=solid];
m11_99 -> m11_100  [key=0, style=solid];
m11_99 -> m11_8  [key=2, style=dotted];
m11_100 -> m11_101  [key=0, style=solid];
m11_100 -> m11_9  [key=2, style=dotted];
m11_100 -> m11_10  [key=2, style=dotted];
m11_101 -> m11_102  [key=0, style=solid];
m11_101 -> m11_19  [key=2, style=dotted];
m11_102 -> m11_98  [color=blue, key=0, style=bold];
m11_118 -> m11_119  [key=0, style=solid];
m11_4 -> m11_5  [key=0, style=solid];
m11_5 -> m11_6  [key=0, style=solid];
m11_5 -> m11_8  [key=2, style=dotted];
m11_6 -> m11_7  [key=0, style=solid];
m11_6 -> m11_9  [key=2, style=dotted];
m11_6 -> m11_10  [key=2, style=dotted];
m11_7 -> m11_4  [color=blue, key=0, style=bold];
m11_121 -> m11_122  [key=0, style=solid];
m11_121 -> m11_125  [key=2, style=dotted];
m11_121 -> m11_126  [key=2, style=dotted];
m11_121 -> m11_127  [key=2, style=dotted];
m11_119 -> m11_120  [key=0, style=solid];
m11_119 -> m11_123  [key=2, style=dotted];
m11_119 -> m11_121  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m11_120 -> m11_121  [key=0, style=solid];
m11_120 -> m11_9  [key=2, style=dotted];
m11_120 -> m11_124  [key=2, style=dotted];
m11_122 -> m11_118  [color=blue, key=0, style=bold];
m11_114 -> m11_115  [key=0, style=solid];
m11_115 -> m11_116  [key=0, style=solid];
m11_115 -> m11_121  [color=darkseagreen4, key=1, label=json, style=dashed];
m11_115 -> m11_115  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_116 -> m11_117  [key=0, style=solid];
m11_116 -> m11_3  [key=2, style=dotted];
m11_116 -> m11_118  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_117 -> m11_114  [color=blue, key=0, style=bold];
m11_163 -> m11_121  [color=darkseagreen4, key=1, label=json, style=dashed];
}
