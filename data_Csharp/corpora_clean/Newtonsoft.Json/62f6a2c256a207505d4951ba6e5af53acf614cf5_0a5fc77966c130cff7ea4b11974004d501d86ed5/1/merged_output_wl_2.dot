digraph  {
m0_108 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(double)", file="CamelCasePropertyNamesContractResolverTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(double)", span="653-653"];
m0_154 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTimeOffset)", file="CamelCasePropertyNamesContractResolverTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.DateTimeOffset)", span="734-734"];
m0_83 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(int)", file="CamelCasePropertyNamesContractResolverTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(int)", span="608-608"];
m0_32 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteStartArray()", file="CamelCasePropertyNamesContractResolverTests.cs", label="Entry Newtonsoft.Json.Linq.JsonTokenWriter.WriteStartArray()", span="90-90"];
m0_33 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteStartArray()", file="CamelCasePropertyNamesContractResolverTests.cs", label="base.WriteStartArray()", span="92-92"];
m0_34 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteStartArray()", file="CamelCasePropertyNamesContractResolverTests.cs", label="AddParent(new JArray())", span="94-94"];
m0_35 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteStartArray()", file="CamelCasePropertyNamesContractResolverTests.cs", label="Exit Newtonsoft.Json.Linq.JsonTokenWriter.WriteStartArray()", span="90-90"];
m0_13 [cluster="Newtonsoft.Json.JsonWriter.Close()", file="CamelCasePropertyNamesContractResolverTests.cs", label="Entry Newtonsoft.Json.JsonWriter.Close()", span="229-229"];
m0_98 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(ulong)", file="CamelCasePropertyNamesContractResolverTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(ulong)", span="635-635"];
m0_118 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(short)", file="CamelCasePropertyNamesContractResolverTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(short)", span="671-671"];
m0_64 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteUndefined()", file="CamelCasePropertyNamesContractResolverTests.cs", label="Entry Newtonsoft.Json.Linq.JsonTokenWriter.WriteUndefined()", span="149-149"];
m0_65 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteUndefined()", file="CamelCasePropertyNamesContractResolverTests.cs", label="base.WriteUndefined()", span="151-151"];
m0_66 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteUndefined()", file="CamelCasePropertyNamesContractResolverTests.cs", label="AddValue(null, JsonToken.Undefined)", span="152-152"];
m0_67 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteUndefined()", file="CamelCasePropertyNamesContractResolverTests.cs", label="Exit Newtonsoft.Json.Linq.JsonTokenWriter.WriteUndefined()", span="149-149"];
m0_20 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.AddParent(Newtonsoft.Json.Linq.JContainer)", file="CamelCasePropertyNamesContractResolverTests.cs", label="Entry Newtonsoft.Json.Linq.JsonTokenWriter.AddParent(Newtonsoft.Json.Linq.JContainer)", span="69-69"];
m0_21 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.AddParent(Newtonsoft.Json.Linq.JContainer)", file="CamelCasePropertyNamesContractResolverTests.cs", label="_parent == null", span="71-71"];
m0_22 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.AddParent(Newtonsoft.Json.Linq.JContainer)", file="CamelCasePropertyNamesContractResolverTests.cs", label="_token = container", span="72-72"];
m0_23 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.AddParent(Newtonsoft.Json.Linq.JContainer)", file="CamelCasePropertyNamesContractResolverTests.cs", label="_parent.Add(container)", span="74-74"];
m0_24 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.AddParent(Newtonsoft.Json.Linq.JContainer)", file="CamelCasePropertyNamesContractResolverTests.cs", label="_parent = container", span="76-76"];
m0_25 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.AddParent(Newtonsoft.Json.Linq.JContainer)", file="CamelCasePropertyNamesContractResolverTests.cs", label="Exit Newtonsoft.Json.Linq.JsonTokenWriter.AddParent(Newtonsoft.Json.Linq.JContainer)", span="69-69"];
m0_68 [cluster="Newtonsoft.Json.JsonWriter.WriteUndefined()", file="CamelCasePropertyNamesContractResolverTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteUndefined()", span="580-580"];
m0_53 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.AddValue(object, Newtonsoft.Json.JsonToken)", file="CamelCasePropertyNamesContractResolverTests.cs", label="Entry Newtonsoft.Json.Linq.JsonTokenWriter.AddValue(object, Newtonsoft.Json.JsonToken)", span="128-128"];
m0_54 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.AddValue(object, Newtonsoft.Json.JsonToken)", file="CamelCasePropertyNamesContractResolverTests.cs", label="_parent.Add(new JValue(value))", span="130-130"];
m0_55 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.AddValue(object, Newtonsoft.Json.JsonToken)", file="CamelCasePropertyNamesContractResolverTests.cs", label="_parent.Type == JsonTokenType.Property", span="132-132"];
m0_56 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.AddValue(object, Newtonsoft.Json.JsonToken)", file="CamelCasePropertyNamesContractResolverTests.cs", label="_parent = _parent.Parent", span="133-133"];
m0_57 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.AddValue(object, Newtonsoft.Json.JsonToken)", file="CamelCasePropertyNamesContractResolverTests.cs", label="Exit Newtonsoft.Json.Linq.JsonTokenWriter.AddValue(object, Newtonsoft.Json.JsonToken)", span="128-128"];
m0_140 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(decimal)", file="CamelCasePropertyNamesContractResolverTests.cs", label="Entry Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(decimal)", span="300-300"];
m0_141 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(decimal)", file="CamelCasePropertyNamesContractResolverTests.cs", label="base.WriteValue(value)", span="302-302"];
m0_142 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(decimal)", file="CamelCasePropertyNamesContractResolverTests.cs", label="AddValue(value, JsonToken.Float)", span="303-303"];
m0_143 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(decimal)", file="CamelCasePropertyNamesContractResolverTests.cs", label="Exit Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(decimal)", span="300-300"];
m0_6 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.JsonTokenWriter()", file="CamelCasePropertyNamesContractResolverTests.cs", label="Entry Newtonsoft.Json.Linq.JsonTokenWriter.JsonTokenWriter()", span="40-40"];
m0_7 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.JsonTokenWriter()", file="CamelCasePropertyNamesContractResolverTests.cs", label="Exit Newtonsoft.Json.Linq.JsonTokenWriter.JsonTokenWriter()", span="40-40"];
m0_63 [cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="CamelCasePropertyNamesContractResolverTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="572-572"];
m0_149 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime)", file="CamelCasePropertyNamesContractResolverTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime)", span="725-725"];
m0_0 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.JsonTokenWriter(Newtonsoft.Json.Linq.JContainer)", file="CamelCasePropertyNamesContractResolverTests.cs", label="Entry Newtonsoft.Json.Linq.JsonTokenWriter.JsonTokenWriter(Newtonsoft.Json.Linq.JContainer)", span="29-29"];
m0_1 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.JsonTokenWriter(Newtonsoft.Json.Linq.JContainer)", file="CamelCasePropertyNamesContractResolverTests.cs", label="ValidationUtils.ArgumentNotNull(container, ''container'')", span="31-31"];
m0_2 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.JsonTokenWriter(Newtonsoft.Json.Linq.JContainer)", file="CamelCasePropertyNamesContractResolverTests.cs", label="_token = container", span="33-33"];
m0_3 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.JsonTokenWriter(Newtonsoft.Json.Linq.JContainer)", file="CamelCasePropertyNamesContractResolverTests.cs", label="_parent = container", span="34-34"];
m0_4 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.JsonTokenWriter(Newtonsoft.Json.Linq.JContainer)", file="CamelCasePropertyNamesContractResolverTests.cs", label="Exit Newtonsoft.Json.Linq.JsonTokenWriter.JsonTokenWriter(Newtonsoft.Json.Linq.JContainer)", span="29-29"];
m0_51 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="CamelCasePropertyNamesContractResolverTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="290-290"];
m0_5 [cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="CamelCasePropertyNamesContractResolverTests.cs", label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="94-94"];
m0_93 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(long)", file="CamelCasePropertyNamesContractResolverTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(long)", span="626-626"];
m0_88 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(uint)", file="CamelCasePropertyNamesContractResolverTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(uint)", span="617-617"];
m0_129 [cluster="char.ToString()", file="CamelCasePropertyNamesContractResolverTests.cs", label="Entry char.ToString()", span="0-0"];
m0_10 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.Close()", file="CamelCasePropertyNamesContractResolverTests.cs", label="Entry Newtonsoft.Json.Linq.JsonTokenWriter.Close()", span="54-54"];
m0_11 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.Close()", file="CamelCasePropertyNamesContractResolverTests.cs", label="base.Close()", span="56-56"];
m0_12 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.Close()", file="CamelCasePropertyNamesContractResolverTests.cs", label="Exit Newtonsoft.Json.Linq.JsonTokenWriter.Close()", span="54-54"];
m0_150 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(System.DateTimeOffset)", file="CamelCasePropertyNamesContractResolverTests.cs", label="Entry Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(System.DateTimeOffset)", span="320-320"];
m0_151 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(System.DateTimeOffset)", file="CamelCasePropertyNamesContractResolverTests.cs", label="base.WriteValue(value)", span="322-322"];
m0_152 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(System.DateTimeOffset)", file="CamelCasePropertyNamesContractResolverTests.cs", label="AddValue(value, JsonToken.Date)", span="323-323"];
m0_153 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(System.DateTimeOffset)", file="CamelCasePropertyNamesContractResolverTests.cs", label="Exit Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(System.DateTimeOffset)", span="320-320"];
m0_99 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(float)", file="CamelCasePropertyNamesContractResolverTests.cs", label="Entry Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(float)", span="220-220"];
m0_100 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(float)", file="CamelCasePropertyNamesContractResolverTests.cs", label="base.WriteValue(value)", span="222-222"];
m0_101 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(float)", file="CamelCasePropertyNamesContractResolverTests.cs", label="AddValue(value, JsonToken.Float)", span="223-223"];
m0_102 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(float)", file="CamelCasePropertyNamesContractResolverTests.cs", label="Exit Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(float)", span="220-220"];
m0_139 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(sbyte)", file="CamelCasePropertyNamesContractResolverTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(sbyte)", span="707-707"];
m0_27 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.RemoveParent()", file="CamelCasePropertyNamesContractResolverTests.cs", label="Entry Newtonsoft.Json.Linq.JsonTokenWriter.RemoveParent()", span="79-79"];
m0_28 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.RemoveParent()", file="CamelCasePropertyNamesContractResolverTests.cs", label="_parent = _parent.Parent", span="81-81"];
m0_29 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.RemoveParent()", file="CamelCasePropertyNamesContractResolverTests.cs", label="_parent != null && _parent.Type == JsonTokenType.Property", span="83-83"];
m0_30 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.RemoveParent()", file="CamelCasePropertyNamesContractResolverTests.cs", label="_parent = _parent.Parent", span="84-84"];
m0_31 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.RemoveParent()", file="CamelCasePropertyNamesContractResolverTests.cs", label="Exit Newtonsoft.Json.Linq.JsonTokenWriter.RemoveParent()", span="79-79"];
m0_19 [cluster="Newtonsoft.Json.Linq.JObject.JObject()", file="CamelCasePropertyNamesContractResolverTests.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject()", span="43-43"];
m0_42 [cluster="Newtonsoft.Json.JsonWriter.WriteStartConstructor(string)", file="CamelCasePropertyNamesContractResolverTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartConstructor(string)", span="272-272"];
m0_130 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(byte)", file="CamelCasePropertyNamesContractResolverTests.cs", label="Entry Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(byte)", span="280-280"];
m0_131 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(byte)", file="CamelCasePropertyNamesContractResolverTests.cs", label="base.WriteValue(value)", span="282-282"];
m0_132 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(byte)", file="CamelCasePropertyNamesContractResolverTests.cs", label="AddValue(value, JsonToken.Integer)", span="283-283"];
m0_133 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(byte)", file="CamelCasePropertyNamesContractResolverTests.cs", label="Exit Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(byte)", span="280-280"];
m0_69 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteRaw(string)", file="CamelCasePropertyNamesContractResolverTests.cs", label="Entry Newtonsoft.Json.Linq.JsonTokenWriter.WriteRaw(string)", span="159-159"];
m0_70 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteRaw(string)", file="CamelCasePropertyNamesContractResolverTests.cs", label="base.WriteRaw(javaScript)", span="161-161"];
m0_71 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteRaw(string)", file="CamelCasePropertyNamesContractResolverTests.cs", label="AddValue(javaScript, JsonToken.Undefined)", span="163-163"];
m0_72 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteRaw(string)", file="CamelCasePropertyNamesContractResolverTests.cs", label="Exit Newtonsoft.Json.Linq.JsonTokenWriter.WriteRaw(string)", span="159-159"];
m0_135 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(sbyte)", file="CamelCasePropertyNamesContractResolverTests.cs", label="Entry Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(sbyte)", span="290-290"];
m0_136 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(sbyte)", file="CamelCasePropertyNamesContractResolverTests.cs", label="base.WriteValue(value)", span="292-292"];
m0_137 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(sbyte)", file="CamelCasePropertyNamesContractResolverTests.cs", label="AddValue(value, JsonToken.Integer)", span="293-293"];
m0_138 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(sbyte)", file="CamelCasePropertyNamesContractResolverTests.cs", label="Exit Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(sbyte)", span="290-290"];
m0_104 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(double)", file="CamelCasePropertyNamesContractResolverTests.cs", label="Entry Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(double)", span="230-230"];
m0_105 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(double)", file="CamelCasePropertyNamesContractResolverTests.cs", label="base.WriteValue(value)", span="232-232"];
m0_106 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(double)", file="CamelCasePropertyNamesContractResolverTests.cs", label="AddValue(value, JsonToken.Float)", span="233-233"];
m0_107 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(double)", file="CamelCasePropertyNamesContractResolverTests.cs", label="Exit Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(double)", span="230-230"];
m0_47 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WritePropertyName(string)", file="CamelCasePropertyNamesContractResolverTests.cs", label="Entry Newtonsoft.Json.Linq.JsonTokenWriter.WritePropertyName(string)", span="121-121"];
m0_48 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WritePropertyName(string)", file="CamelCasePropertyNamesContractResolverTests.cs", label="base.WritePropertyName(name)", span="123-123"];
m0_49 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WritePropertyName(string)", file="CamelCasePropertyNamesContractResolverTests.cs", label="AddParent(new JProperty(name))", span="125-125"];
m0_50 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WritePropertyName(string)", file="CamelCasePropertyNamesContractResolverTests.cs", label="Exit Newtonsoft.Json.Linq.JsonTokenWriter.WritePropertyName(string)", span="121-121"];
m0_89 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(long)", file="CamelCasePropertyNamesContractResolverTests.cs", label="Entry Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(long)", span="200-200"];
m0_90 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(long)", file="CamelCasePropertyNamesContractResolverTests.cs", label="base.WriteValue(value)", span="202-202"];
m0_91 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(long)", file="CamelCasePropertyNamesContractResolverTests.cs", label="AddValue(value, JsonToken.Integer)", span="203-203"];
m0_92 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(long)", file="CamelCasePropertyNamesContractResolverTests.cs", label="Exit Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(long)", span="200-200"];
m0_84 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(uint)", file="CamelCasePropertyNamesContractResolverTests.cs", label="Entry Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(uint)", span="190-190"];
m0_85 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(uint)", file="CamelCasePropertyNamesContractResolverTests.cs", label="base.WriteValue(value)", span="192-192"];
m0_86 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(uint)", file="CamelCasePropertyNamesContractResolverTests.cs", label="AddValue(value, JsonToken.Integer)", span="193-193"];
m0_87 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(uint)", file="CamelCasePropertyNamesContractResolverTests.cs", label="Exit Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(uint)", span="190-190"];
m0_8 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.Flush()", file="CamelCasePropertyNamesContractResolverTests.cs", label="Entry Newtonsoft.Json.Linq.JsonTokenWriter.Flush()", span="47-47"];
m0_9 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.Flush()", file="CamelCasePropertyNamesContractResolverTests.cs", label="Exit Newtonsoft.Json.Linq.JsonTokenWriter.Flush()", span="47-47"];
m0_144 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(decimal)", file="CamelCasePropertyNamesContractResolverTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(decimal)", span="716-716"];
m0_124 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(char)", file="CamelCasePropertyNamesContractResolverTests.cs", label="Entry Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(char)", span="270-270"];
m0_125 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(char)", file="CamelCasePropertyNamesContractResolverTests.cs", label="base.WriteValue(value)", span="272-272"];
m0_126 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(char)", file="CamelCasePropertyNamesContractResolverTests.cs", label="AddValue(value.ToString(), JsonToken.String)", span="273-273"];
m0_127 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(char)", file="CamelCasePropertyNamesContractResolverTests.cs", label="Exit Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(char)", span="270-270"];
m0_44 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="CamelCasePropertyNamesContractResolverTests.cs", label="Entry Newtonsoft.Json.Linq.JsonTokenWriter.WriteEnd(Newtonsoft.Json.JsonToken)", span="112-112"];
m0_45 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="CamelCasePropertyNamesContractResolverTests.cs", label="RemoveParent()", span="114-114"];
m0_46 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="CamelCasePropertyNamesContractResolverTests.cs", label="Exit Newtonsoft.Json.Linq.JsonTokenWriter.WriteEnd(Newtonsoft.Json.JsonToken)", span="112-112"];
m0_145 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(System.DateTime)", file="CamelCasePropertyNamesContractResolverTests.cs", label="Entry Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(System.DateTime)", span="310-310"];
m0_146 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(System.DateTime)", file="CamelCasePropertyNamesContractResolverTests.cs", label="base.WriteValue(value)", span="312-312"];
m0_147 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(System.DateTime)", file="CamelCasePropertyNamesContractResolverTests.cs", label="AddValue(value, JsonToken.Date)", span="313-313"];
m0_148 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(System.DateTime)", file="CamelCasePropertyNamesContractResolverTests.cs", label="Exit Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(System.DateTime)", span="310-310"];
m0_134 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(byte)", file="CamelCasePropertyNamesContractResolverTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(byte)", span="698-698"];
m0_36 [cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="CamelCasePropertyNamesContractResolverTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="254-254"];
m0_26 [cluster="Newtonsoft.Json.Linq.JContainer.Add(object)", file="CamelCasePropertyNamesContractResolverTests.cs", label="Entry Newtonsoft.Json.Linq.JContainer.Add(object)", span="280-280"];
m0_119 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(ushort)", file="CamelCasePropertyNamesContractResolverTests.cs", label="Entry Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(ushort)", span="260-260"];
m0_120 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(ushort)", file="CamelCasePropertyNamesContractResolverTests.cs", label="base.WriteValue(value)", span="262-262"];
m0_121 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(ushort)", file="CamelCasePropertyNamesContractResolverTests.cs", label="AddValue(value, JsonToken.Integer)", span="263-263"];
m0_122 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(ushort)", file="CamelCasePropertyNamesContractResolverTests.cs", label="Exit Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(ushort)", span="260-260"];
m0_128 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(char)", file="CamelCasePropertyNamesContractResolverTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(char)", span="689-689"];
m0_109 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(bool)", file="CamelCasePropertyNamesContractResolverTests.cs", label="Entry Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(bool)", span="240-240"];
m0_110 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(bool)", file="CamelCasePropertyNamesContractResolverTests.cs", label="base.WriteValue(value)", span="242-242"];
m0_111 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(bool)", file="CamelCasePropertyNamesContractResolverTests.cs", label="AddValue(value, JsonToken.Boolean)", span="243-243"];
m0_112 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(bool)", file="CamelCasePropertyNamesContractResolverTests.cs", label="Exit Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(bool)", span="240-240"];
m0_58 [cluster="Newtonsoft.Json.Linq.JValue.JValue(object)", file="CamelCasePropertyNamesContractResolverTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(object)", span="115-115"];
m0_59 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteNull()", file="CamelCasePropertyNamesContractResolverTests.cs", label="Entry Newtonsoft.Json.Linq.JsonTokenWriter.WriteNull()", span="140-140"];
m0_60 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteNull()", file="CamelCasePropertyNamesContractResolverTests.cs", label="base.WriteNull()", span="142-142"];
m0_61 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteNull()", file="CamelCasePropertyNamesContractResolverTests.cs", label="AddValue(null, JsonToken.Null)", span="143-143"];
m0_62 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteNull()", file="CamelCasePropertyNamesContractResolverTests.cs", label="Exit Newtonsoft.Json.Linq.JsonTokenWriter.WriteNull()", span="140-140"];
m0_78 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="CamelCasePropertyNamesContractResolverTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="599-599"];
m0_79 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(int)", file="CamelCasePropertyNamesContractResolverTests.cs", label="Entry Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(int)", span="180-180"];
m0_80 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(int)", file="CamelCasePropertyNamesContractResolverTests.cs", label="base.WriteValue(value)", span="182-182"];
m0_81 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(int)", file="CamelCasePropertyNamesContractResolverTests.cs", label="AddValue(value, JsonToken.Integer)", span="183-183"];
m0_82 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(int)", file="CamelCasePropertyNamesContractResolverTests.cs", label="Exit Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(int)", span="180-180"];
m0_114 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(short)", file="CamelCasePropertyNamesContractResolverTests.cs", label="Entry Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(short)", span="250-250"];
m0_115 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(short)", file="CamelCasePropertyNamesContractResolverTests.cs", label="base.WriteValue(value)", span="252-252"];
m0_116 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(short)", file="CamelCasePropertyNamesContractResolverTests.cs", label="AddValue(value, JsonToken.Integer)", span="253-253"];
m0_117 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(short)", file="CamelCasePropertyNamesContractResolverTests.cs", label="Exit Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(short)", span="250-250"];
m0_43 [cluster="Newtonsoft.Json.Linq.JConstructor.JConstructor(string)", file="CamelCasePropertyNamesContractResolverTests.cs", label="Entry Newtonsoft.Json.Linq.JConstructor.JConstructor(string)", span="95-95"];
m0_123 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(ushort)", file="CamelCasePropertyNamesContractResolverTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(ushort)", span="680-680"];
m0_74 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(string)", file="CamelCasePropertyNamesContractResolverTests.cs", label="Entry Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(string)", span="170-170"];
m0_75 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(string)", file="CamelCasePropertyNamesContractResolverTests.cs", label="base.WriteValue(value)", span="172-172"];
m0_76 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(string)", file="CamelCasePropertyNamesContractResolverTests.cs", label="AddValue(value ?? string.Empty, JsonToken.String)", span="173-173"];
m0_77 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(string)", file="CamelCasePropertyNamesContractResolverTests.cs", label="Exit Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(string)", span="170-170"];
m0_94 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(ulong)", file="CamelCasePropertyNamesContractResolverTests.cs", label="Entry Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(ulong)", span="210-210"];
m0_95 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(ulong)", file="CamelCasePropertyNamesContractResolverTests.cs", label="base.WriteValue(value)", span="212-212"];
m0_96 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(ulong)", file="CamelCasePropertyNamesContractResolverTests.cs", label="AddValue(value, JsonToken.Integer)", span="213-213"];
m0_97 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(ulong)", file="CamelCasePropertyNamesContractResolverTests.cs", label="Exit Newtonsoft.Json.Linq.JsonTokenWriter.WriteValue(ulong)", span="210-210"];
m0_14 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteStartObject()", file="CamelCasePropertyNamesContractResolverTests.cs", label="Entry Newtonsoft.Json.Linq.JsonTokenWriter.WriteStartObject()", span="62-62"];
m0_15 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteStartObject()", file="CamelCasePropertyNamesContractResolverTests.cs", label="base.WriteStartObject()", span="64-64"];
m0_16 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteStartObject()", file="CamelCasePropertyNamesContractResolverTests.cs", label="AddParent(new JObject())", span="66-66"];
m0_17 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteStartObject()", file="CamelCasePropertyNamesContractResolverTests.cs", label="Exit Newtonsoft.Json.Linq.JsonTokenWriter.WriteStartObject()", span="62-62"];
m0_18 [cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="CamelCasePropertyNamesContractResolverTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="237-237"];
m0_113 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool)", file="CamelCasePropertyNamesContractResolverTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(bool)", span="662-662"];
m0_73 [cluster="Newtonsoft.Json.JsonWriter.WriteRaw(string)", file="CamelCasePropertyNamesContractResolverTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteRaw(string)", span="589-589"];
m0_103 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(float)", file="CamelCasePropertyNamesContractResolverTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(float)", span="644-644"];
m0_52 [cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string)", file="CamelCasePropertyNamesContractResolverTests.cs", label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string)", span="98-98"];
m0_37 [cluster="Newtonsoft.Json.Linq.JArray.JArray()", file="CamelCasePropertyNamesContractResolverTests.cs", label="Entry Newtonsoft.Json.Linq.JArray.JArray()", span="52-52"];
m0_38 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteStartConstructor(string)", file="CamelCasePropertyNamesContractResolverTests.cs", label="Entry Newtonsoft.Json.Linq.JsonTokenWriter.WriteStartConstructor(string)", span="101-101"];
m0_39 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteStartConstructor(string)", file="CamelCasePropertyNamesContractResolverTests.cs", label="base.WriteStartConstructor(name)", span="103-103"];
m0_40 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteStartConstructor(string)", file="CamelCasePropertyNamesContractResolverTests.cs", label="AddParent(new JConstructor(name))", span="105-105"];
m0_41 [cluster="Newtonsoft.Json.Linq.JsonTokenWriter.WriteStartConstructor(string)", file="CamelCasePropertyNamesContractResolverTests.cs", label="Exit Newtonsoft.Json.Linq.JsonTokenWriter.WriteStartConstructor(string)", span="101-101"];
m0_155 [file="CamelCasePropertyNamesContractResolverTests.cs", label="Newtonsoft.Json.Linq.JsonTokenWriter", span=""];
m1_6 [cluster="Newtonsoft.Json.JsonConverterAttribute.CreateJsonConverterInstance()", file="ContractResolverTests.cs", label="Entry Newtonsoft.Json.JsonConverterAttribute.CreateJsonConverterInstance()", span="27-27"];
m1_7 [cluster="Newtonsoft.Json.JsonConverterAttribute.CreateJsonConverterInstance()", file="ContractResolverTests.cs", label="return (JsonConverter)Activator.CreateInstance(_converterType);", span="31-31"];
m1_8 [cluster="Newtonsoft.Json.JsonConverterAttribute.CreateJsonConverterInstance()", file="ContractResolverTests.cs", label=Exception, span="33-33"];
m1_9 [cluster="Newtonsoft.Json.JsonConverterAttribute.CreateJsonConverterInstance()", file="ContractResolverTests.cs", label="throw new Exception(''Error creating {0}''.FormatWith(CultureInfo.InvariantCulture, _converterType), ex);", span="35-35"];
m1_10 [cluster="Newtonsoft.Json.JsonConverterAttribute.CreateJsonConverterInstance()", file="ContractResolverTests.cs", label="Exit Newtonsoft.Json.JsonConverterAttribute.CreateJsonConverterInstance()", span="27-27"];
m1_12 [cluster="System.Exception.Exception(string, System.Exception)", file="ContractResolverTests.cs", label="Entry System.Exception.Exception(string, System.Exception)", span="0-0"];
m1_0 [cluster="Newtonsoft.Json.JsonConverterAttribute.JsonConverterAttribute(System.Type)", file="ContractResolverTests.cs", label="Entry Newtonsoft.Json.JsonConverterAttribute.JsonConverterAttribute(System.Type)", span="19-19"];
m1_1 [cluster="Newtonsoft.Json.JsonConverterAttribute.JsonConverterAttribute(System.Type)", file="ContractResolverTests.cs", label="converterType == null", span="21-21"];
m1_3 [cluster="Newtonsoft.Json.JsonConverterAttribute.JsonConverterAttribute(System.Type)", file="ContractResolverTests.cs", label="_converterType = converterType", span="24-24"];
m1_2 [cluster="Newtonsoft.Json.JsonConverterAttribute.JsonConverterAttribute(System.Type)", file="ContractResolverTests.cs", label="throw new ArgumentNullException(''converterType'');", span="22-22"];
m1_4 [cluster="Newtonsoft.Json.JsonConverterAttribute.JsonConverterAttribute(System.Type)", file="ContractResolverTests.cs", label="Exit Newtonsoft.Json.JsonConverterAttribute.JsonConverterAttribute(System.Type)", span="19-19"];
m1_5 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ContractResolverTests.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m1_13 [cluster="string.FormatWith(System.IFormatProvider, params object[])", file="ContractResolverTests.cs", label="Entry string.FormatWith(System.IFormatProvider, params object[])", span="48-48"];
m1_11 [cluster="System.Activator.CreateInstance(System.Type)", file="ContractResolverTests.cs", label="Entry System.Activator.CreateInstance(System.Type)", span="0-0"];
m1_14 [file="ContractResolverTests.cs", label="Newtonsoft.Json.JsonConverterAttribute", span=""];
m2_8 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddSchema(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddSchema(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", span="49-49"];
m2_17 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddSchema(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="DefaultContractResolver.cs", label="_nodes.Contains(newId)", span="64-64"];
m2_18 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddSchema(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="DefaultContractResolver.cs", label="return _nodes[newId];", span="65-65"];
m2_20 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddSchema(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="DefaultContractResolver.cs", label="_nodes.Add(currentNode)", span="71-71"];
m2_21 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddSchema(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="DefaultContractResolver.cs", label="AddProperties(schema.Properties, currentNode.Properties)", span="73-73"];
m2_22 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddSchema(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="DefaultContractResolver.cs", label="AddProperties(schema.PatternProperties, currentNode.PatternProperties)", span="75-75"];
m2_26 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddSchema(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="DefaultContractResolver.cs", label="AddItem(currentNode, i, schema.Items[i])", span="81-81"];
m2_29 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddSchema(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="DefaultContractResolver.cs", label="AddAdditionalProperties(currentNode, schema.AdditionalProperties)", span="86-86"];
m2_31 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddSchema(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="DefaultContractResolver.cs", label="currentNode = AddSchema(currentNode, schema.Extends)", span="89-89"];
m2_15 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddSchema(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="DefaultContractResolver.cs", label="newId = JsonSchemaNode.GetId(existingNode.Schemas.Union(new[] { schema }))", span="57-57"];
m2_16 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddSchema(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="DefaultContractResolver.cs", label="newId = JsonSchemaNode.GetId(new[] { schema })", span="61-61"];
m2_19 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddSchema(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="DefaultContractResolver.cs", label="JsonSchemaNode currentNode = (existingNode != null)\r\n        ? existingNode.Combine(schema)\r\n        : new JsonSchemaNode(schema)", span="67-69"];
m2_25 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddSchema(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="DefaultContractResolver.cs", label="i < schema.Items.Count", span="79-79"];
m2_23 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddSchema(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="DefaultContractResolver.cs", label="schema.Items != null", span="77-77"];
m2_24 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddSchema(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="DefaultContractResolver.cs", label="int i = 0", span="79-79"];
m2_27 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddSchema(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="DefaultContractResolver.cs", label="i++", span="79-79"];
m2_28 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddSchema(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="DefaultContractResolver.cs", label="schema.AdditionalProperties != null", span="85-85"];
m2_30 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddSchema(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="DefaultContractResolver.cs", label="schema.Extends != null", span="88-88"];
m2_32 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddSchema(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="DefaultContractResolver.cs", label="return currentNode;", span="91-91"];
m2_11 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddSchema(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="DefaultContractResolver.cs", label="string newId", span="51-51"];
m2_12 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddSchema(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="DefaultContractResolver.cs", label="existingNode != null", span="52-52"];
m2_13 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddSchema(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="DefaultContractResolver.cs", label="existingNode.Schemas.Contains(schema)", span="54-54"];
m2_14 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddSchema(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="DefaultContractResolver.cs", label="return existingNode;", span="55-55"];
m2_33 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddSchema(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddSchema(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", span="49-49"];
m2_87 [cluster="Newtonsoft.Json.Schema.JsonSchemaModel.Create(System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchema>)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaModel.Create(System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchema>)", span="62-62"];
m2_0 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.Build(Newtonsoft.Json.Schema.JsonSchema)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaModelBuilder.Build(Newtonsoft.Json.Schema.JsonSchema)", span="38-38"];
m2_4 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.Build(Newtonsoft.Json.Schema.JsonSchema)", file="DefaultContractResolver.cs", label="JsonSchemaModel model = BuildNodeModel(_node)", span="44-44"];
m2_3 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.Build(Newtonsoft.Json.Schema.JsonSchema)", file="DefaultContractResolver.cs", label="_nodeModels = new Dictionary<JsonSchemaNode, JsonSchemaModel>()", span="43-43"];
m2_5 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.Build(Newtonsoft.Json.Schema.JsonSchema)", file="DefaultContractResolver.cs", label="return model;", span="46-46"];
m2_1 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.Build(Newtonsoft.Json.Schema.JsonSchema)", file="DefaultContractResolver.cs", label="_nodes = new JsonSchemaNodeCollection()", span="40-40"];
m2_2 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.Build(Newtonsoft.Json.Schema.JsonSchema)", file="DefaultContractResolver.cs", label="_node = AddSchema(null, schema)", span="41-41"];
m2_6 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.Build(Newtonsoft.Json.Schema.JsonSchema)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Schema.JsonSchemaModelBuilder.Build(Newtonsoft.Json.Schema.JsonSchema)", span="38-38"];
m2_35 [cluster="System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="DefaultContractResolver.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m2_53 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="DefaultContractResolver.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m2_48 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddProperty(System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Schema.JsonSchemaNode>, string, Newtonsoft.Json.Schema.JsonSchema)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddProperty(System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Schema.JsonSchemaNode>, string, Newtonsoft.Json.Schema.JsonSchema)", span="105-105"];
m2_51 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddProperty(System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Schema.JsonSchemaNode>, string, Newtonsoft.Json.Schema.JsonSchema)", file="DefaultContractResolver.cs", label="target[propertyName] = AddSchema(propertyNode, schema)", span="110-110"];
m2_50 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddProperty(System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Schema.JsonSchemaNode>, string, Newtonsoft.Json.Schema.JsonSchema)", file="DefaultContractResolver.cs", label="target.TryGetValue(propertyName, out propertyNode)", span="108-108"];
m2_49 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddProperty(System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Schema.JsonSchemaNode>, string, Newtonsoft.Json.Schema.JsonSchema)", file="DefaultContractResolver.cs", label="JsonSchemaNode propertyNode", span="107-107"];
m2_52 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddProperty(System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Schema.JsonSchemaNode>, string, Newtonsoft.Json.Schema.JsonSchema)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddProperty(System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Schema.JsonSchemaNode>, string, Newtonsoft.Json.Schema.JsonSchema)", span="105-105"];
m2_36 [cluster="Newtonsoft.Json.Schema.JsonSchemaNode.GetId(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Schema.JsonSchema>)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaNode.GetId(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Schema.JsonSchema>)", span="67-67"];
m2_34 [cluster="System.Collections.ObjectModel.ReadOnlyCollection<T>.Contains(T)", file="DefaultContractResolver.cs", label="Entry System.Collections.ObjectModel.ReadOnlyCollection<T>.Contains(T)", span="0-0"];
m2_42 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddItem(Newtonsoft.Json.Schema.JsonSchemaNode, int, Newtonsoft.Json.Schema.JsonSchema)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddItem(Newtonsoft.Json.Schema.JsonSchemaNode, int, Newtonsoft.Json.Schema.JsonSchema)", span="113-113"];
m2_55 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddItem(Newtonsoft.Json.Schema.JsonSchemaNode, int, Newtonsoft.Json.Schema.JsonSchema)", file="DefaultContractResolver.cs", label="JsonSchemaNode newItemNode = AddSchema(existingItemNode, schema)", span="119-119"];
m2_54 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddItem(Newtonsoft.Json.Schema.JsonSchemaNode, int, Newtonsoft.Json.Schema.JsonSchema)", file="DefaultContractResolver.cs", label="JsonSchemaNode existingItemNode = (parentNode.Items.Count > index)\r\n                                  ? parentNode.Items[index]\r\n                                  : null", span="115-117"];
m2_56 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddItem(Newtonsoft.Json.Schema.JsonSchemaNode, int, Newtonsoft.Json.Schema.JsonSchema)", file="DefaultContractResolver.cs", label="!(parentNode.Items.Count > index)", span="121-121"];
m2_57 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddItem(Newtonsoft.Json.Schema.JsonSchemaNode, int, Newtonsoft.Json.Schema.JsonSchema)", file="DefaultContractResolver.cs", label="parentNode.Items.Add(newItemNode)", span="123-123"];
m2_58 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddItem(Newtonsoft.Json.Schema.JsonSchemaNode, int, Newtonsoft.Json.Schema.JsonSchema)", file="DefaultContractResolver.cs", label="parentNode.Items[index] = newItemNode", span="127-127"];
m2_59 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddItem(Newtonsoft.Json.Schema.JsonSchemaNode, int, Newtonsoft.Json.Schema.JsonSchema)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddItem(Newtonsoft.Json.Schema.JsonSchemaNode, int, Newtonsoft.Json.Schema.JsonSchema)", span="113-113"];
m2_37 [cluster="System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.Contains(TKey)", file="DefaultContractResolver.cs", label="Entry System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.Contains(TKey)", span="0-0"];
m2_88 [cluster="System.Collections.Generic.List<T>.List()", file="DefaultContractResolver.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m2_10 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.BuildNodeModel(Newtonsoft.Json.Schema.JsonSchemaNode)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaModelBuilder.BuildNodeModel(Newtonsoft.Json.Schema.JsonSchemaNode)", span="136-136"];
m2_68 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.BuildNodeModel(Newtonsoft.Json.Schema.JsonSchemaNode)", color=green, community=0, file="DefaultContractResolver.cs", label="1: node.Properties", span="145-145"];
m2_67 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.BuildNodeModel(Newtonsoft.Json.Schema.JsonSchemaNode)", file="DefaultContractResolver.cs", label="_nodeModels[node] = model", span="143-143"];
m2_71 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.BuildNodeModel(Newtonsoft.Json.Schema.JsonSchemaNode)", file="DefaultContractResolver.cs", label="model.Properties[property.Key] = BuildNodeModel(property.Value)", span="150-150"];
m2_69 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.BuildNodeModel(Newtonsoft.Json.Schema.JsonSchemaNode)", file="DefaultContractResolver.cs", label="model.Properties == null", span="147-147"];
m2_72 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.BuildNodeModel(Newtonsoft.Json.Schema.JsonSchemaNode)", file="DefaultContractResolver.cs", label="node.PatternProperties", span="152-152"];
m2_70 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.BuildNodeModel(Newtonsoft.Json.Schema.JsonSchemaNode)", color=green, community=0, file="DefaultContractResolver.cs", label="0: model.Properties = new Dictionary<string, JsonSchemaModel>()", span="148-148"];
m2_66 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.BuildNodeModel(Newtonsoft.Json.Schema.JsonSchemaNode)", file="DefaultContractResolver.cs", label="model = JsonSchemaModel.Create(node.Schemas)", span="142-142"];
m2_80 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.BuildNodeModel(Newtonsoft.Json.Schema.JsonSchemaNode)", file="DefaultContractResolver.cs", label="model.Items.Add(BuildNodeModel(node.Items[i]))", span="164-164"];
m2_83 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.BuildNodeModel(Newtonsoft.Json.Schema.JsonSchemaNode)", file="DefaultContractResolver.cs", label="model.AdditionalProperties = BuildNodeModel(node.AdditionalProperties)", span="167-167"];
m2_75 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.BuildNodeModel(Newtonsoft.Json.Schema.JsonSchemaNode)", file="DefaultContractResolver.cs", label="model.PatternProperties[property.Key] = BuildNodeModel(property.Value)", span="157-157"];
m2_63 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.BuildNodeModel(Newtonsoft.Json.Schema.JsonSchemaNode)", file="DefaultContractResolver.cs", label="JsonSchemaModel model", span="138-138"];
m2_64 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.BuildNodeModel(Newtonsoft.Json.Schema.JsonSchemaNode)", file="DefaultContractResolver.cs", label="_nodeModels.TryGetValue(node, out model)", span="139-139"];
m2_77 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.BuildNodeModel(Newtonsoft.Json.Schema.JsonSchemaNode)", file="DefaultContractResolver.cs", label="i < node.Items.Count", span="159-159"];
m2_82 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.BuildNodeModel(Newtonsoft.Json.Schema.JsonSchemaNode)", file="DefaultContractResolver.cs", label="node.AdditionalProperties != null", span="166-166"];
m2_73 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.BuildNodeModel(Newtonsoft.Json.Schema.JsonSchemaNode)", file="DefaultContractResolver.cs", label="model.PatternProperties == null", span="154-154"];
m2_76 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.BuildNodeModel(Newtonsoft.Json.Schema.JsonSchemaNode)", file="DefaultContractResolver.cs", label="int i = 0", span="159-159"];
m2_74 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.BuildNodeModel(Newtonsoft.Json.Schema.JsonSchemaNode)", file="DefaultContractResolver.cs", label="model.PatternProperties = new Dictionary<string, JsonSchemaModel>()", span="155-155"];
m2_78 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.BuildNodeModel(Newtonsoft.Json.Schema.JsonSchemaNode)", file="DefaultContractResolver.cs", label="model.Items == null", span="161-161"];
m2_79 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.BuildNodeModel(Newtonsoft.Json.Schema.JsonSchemaNode)", file="DefaultContractResolver.cs", label="model.Items = new List<JsonSchemaModel>()", span="162-162"];
m2_84 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.BuildNodeModel(Newtonsoft.Json.Schema.JsonSchemaNode)", file="DefaultContractResolver.cs", label="return model;", span="169-169"];
m2_81 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.BuildNodeModel(Newtonsoft.Json.Schema.JsonSchemaNode)", file="DefaultContractResolver.cs", label="i++", span="159-159"];
m2_65 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.BuildNodeModel(Newtonsoft.Json.Schema.JsonSchemaNode)", file="DefaultContractResolver.cs", label="return model;", span="140-140"];
m2_85 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.BuildNodeModel(Newtonsoft.Json.Schema.JsonSchemaNode)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Schema.JsonSchemaModelBuilder.BuildNodeModel(Newtonsoft.Json.Schema.JsonSchemaNode)", span="136-136"];
m2_39 [cluster="Newtonsoft.Json.Schema.JsonSchemaNode.JsonSchemaNode(Newtonsoft.Json.Schema.JsonSchema)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaNode.JsonSchemaNode(Newtonsoft.Json.Schema.JsonSchema)", span="41-41"];
m2_89 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="DefaultContractResolver.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m2_40 [cluster="System.Collections.ObjectModel.Collection<T>.Add(T)", file="DefaultContractResolver.cs", label="Entry System.Collections.ObjectModel.Collection<T>.Add(T)", span="0-0"];
m2_86 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="DefaultContractResolver.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m2_7 [cluster="Newtonsoft.Json.Schema.JsonSchemaNodeCollection.JsonSchemaNodeCollection()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaNodeCollection.JsonSchemaNodeCollection()", span="29-29"];
m2_38 [cluster="Newtonsoft.Json.Schema.JsonSchemaNode.Combine(Newtonsoft.Json.Schema.JsonSchema)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaNode.Combine(Newtonsoft.Json.Schema.JsonSchema)", span="62-62"];
m2_60 [cluster="System.Collections.Generic.List<T>.Add(T)", file="DefaultContractResolver.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m2_9 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="DefaultContractResolver.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m2_41 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddProperties(System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Schema.JsonSchema>, System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Schema.JsonSchemaNode>)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddProperties(System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Schema.JsonSchema>, System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Schema.JsonSchemaNode>)", span="94-94"];
m2_46 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddProperties(System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Schema.JsonSchema>, System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Schema.JsonSchemaNode>)", file="DefaultContractResolver.cs", label="AddProperty(target, property.Key, property.Value)", span="100-100"];
m2_45 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddProperties(System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Schema.JsonSchema>, System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Schema.JsonSchemaNode>)", file="DefaultContractResolver.cs", label=source, span="98-98"];
m2_44 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddProperties(System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Schema.JsonSchema>, System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Schema.JsonSchemaNode>)", file="DefaultContractResolver.cs", label="source != null", span="96-96"];
m2_47 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddProperties(System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Schema.JsonSchema>, System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Schema.JsonSchemaNode>)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddProperties(System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Schema.JsonSchema>, System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Schema.JsonSchemaNode>)", span="94-94"];
m2_43 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddAdditionalProperties(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddAdditionalProperties(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", span="131-131"];
m2_61 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddAdditionalProperties(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="DefaultContractResolver.cs", label="parentNode.AdditionalProperties = AddSchema(parentNode.AdditionalProperties, schema)", span="133-133"];
m2_62 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddAdditionalProperties(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Schema.JsonSchemaModelBuilder.AddAdditionalProperties(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", span="131-131"];
m2_90 [file="DefaultContractResolver.cs", label="Newtonsoft.Json.Schema.JsonSchemaModelBuilder", span=""];
m4_0 [cluster="Newtonsoft.Json.Utilities.EnumValue<T>.EnumValue(string, T)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.Utilities.EnumValue<T>.EnumValue(string, T)", span="46-46"];
m4_1 [cluster="Newtonsoft.Json.Utilities.EnumValue<T>.EnumValue(string, T)", file="JsonConvert.cs", label="_name = name", span="48-48"];
m4_2 [cluster="Newtonsoft.Json.Utilities.EnumValue<T>.EnumValue(string, T)", file="JsonConvert.cs", label="_value = value", span="49-49"];
m4_3 [cluster="Newtonsoft.Json.Utilities.EnumValue<T>.EnumValue(string, T)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.Utilities.EnumValue<T>.EnumValue(string, T)", span="46-46"];
m4_4 [file="JsonConvert.cs", label="Newtonsoft.Json.Utilities.EnumValue<T>", span=""];
m6_553 [cluster="Newtonsoft.Json.JsonTextReader.ParseTrue()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseTrue()", span="1431-1431"];
m6_773 [cluster="Newtonsoft.Json.JsonTextReader.ParseTrue()", file="JsonTextReader.cs", label="MatchValueWithTrailingSeperator(JsonConvert.True)", span="1436-1436"];
m6_774 [cluster="Newtonsoft.Json.JsonTextReader.ParseTrue()", file="JsonTextReader.cs", label="SetToken(JsonToken.Boolean, true)", span="1438-1438"];
m6_775 [cluster="Newtonsoft.Json.JsonTextReader.ParseTrue()", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Error parsing boolean value.'');", span="1442-1442"];
m6_776 [cluster="Newtonsoft.Json.JsonTextReader.ParseTrue()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseTrue()", span="1431-1431"];
m6_697 [cluster="System.Convert.ToInt32(string, int)", file="JsonTextReader.cs", label="Entry System.Convert.ToInt32(string, int)", span="0-0"];
m6_314 [cluster="System.Convert.ToChar(int)", file="JsonTextReader.cs", label="Entry System.Convert.ToChar(int)", span="0-0"];
m6_402 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", span="874-874"];
m6_701 [cluster="decimal.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out decimal)", file="JsonTextReader.cs", label="Entry decimal.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out decimal)", span="0-0"];
m6_132 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", span="458-458"];
m6_145 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", span="353-353"];
m6_146 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", file="JsonTextReader.cs", label="return ReadAsDateTimeInternal();", span="355-355"];
m6_147 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", span="353-353"];
m6_816 [cluster="System.IO.TextReader.Close()", file="JsonTextReader.cs", label="Entry System.IO.TextReader.Close()", span="0-0"];
m6_296 [cluster="Newtonsoft.Json.Utilities.StringBuffer.Append(char[], int, int)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Utilities.StringBuffer.Append(char[], int, int)", span="65-65"];
m6_129 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsBytes()", span="317-317"];
m6_130 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label="return ReadAsBytesInternal();", span="319-319"];
m6_131 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadAsBytes()", span="317-317"];
m6_136 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", span="533-533"];
m6_453 [cluster="Newtonsoft.Json.JsonTextReader.ValidIdentifierChar(char)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ValidIdentifierChar(char)", span="858-858"];
m6_455 [cluster="Newtonsoft.Json.JsonTextReader.ValidIdentifierChar(char)", file="JsonTextReader.cs", label="return (char.IsLetterOrDigit(value) || value == '_' || value == '$');", span="860-860"];
m6_456 [cluster="Newtonsoft.Json.JsonTextReader.ValidIdentifierChar(char)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ValidIdentifierChar(char)", span="858-858"];
m6_15 [cluster="Newtonsoft.Json.JsonTextReader.OnNewLine(int)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.OnNewLine(int)", span="104-104"];
m6_16 [cluster="Newtonsoft.Json.JsonTextReader.OnNewLine(int)", file="JsonTextReader.cs", label="_lineNumber++", span="106-106"];
m6_17 [cluster="Newtonsoft.Json.JsonTextReader.OnNewLine(int)", file="JsonTextReader.cs", label="_lineStartPos = pos - 1", span="107-107"];
m6_18 [cluster="Newtonsoft.Json.JsonTextReader.OnNewLine(int)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.OnNewLine(int)", span="104-104"];
m6_559 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity()", span="1482-1482"];
m6_789 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity()", file="JsonTextReader.cs", label="MatchValueWithTrailingSeperator(JsonConvert.NegativeInfinity)", span="1484-1484"];
m6_790 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity()", file="JsonTextReader.cs", label="_floatParseHandling == FloatParseHandling.Decimal", span="1486-1486"];
m6_793 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity()", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Error parsing negative infinity value.'');", span="1493-1493"];
m6_791 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity()", file="JsonTextReader.cs", label="throw new JsonReaderException(''Cannot read -Infinity as a decimal.'');", span="1487-1487"];
m6_792 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity()", file="JsonTextReader.cs", label="SetToken(JsonToken.Float, double.NegativeInfinity)", span="1489-1489"];
m6_794 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity()", span="1482-1482"];
m6_187 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseComment()", span="1307-1307"];
m6_705 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs", label="_charPos++", span="1310-1310"];
m6_706 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs", label="!EnsureChars(1, false) || _chars[_charPos] != '*'", span="1312-1312"];
m6_707 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Error parsing comment. Expected: *, got {0}.''.FormatWith(CultureInfo.InvariantCulture, _chars[_charPos]));", span="1313-1313"];
m6_708 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs", label="_charPos++", span="1315-1315"];
m6_709 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs", label="int initialPosition = _charPos", span="1317-1317"];
m6_710 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs", label="bool commentFinished = false", span="1319-1319"];
m6_722 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs", label="_stringReference = new StringReference(_chars, initialPosition, _charPos - initialPosition - 1)", span="1343-1343"];
m6_711 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs", label="!commentFinished", span="1321-1321"];
m6_712 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs", label="_chars[_charPos]", span="1323-1323"];
m6_730 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs", label="SetToken(JsonToken.Comment, _stringReference.ToString())", span="1362-1362"];
m6_713 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs", label="'\0'", span="1325-1325"];
m6_718 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs", label="'*'", span="1336-1336"];
m6_725 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs", label="StringUtils.CarriageReturn", span="1350-1350"];
m6_727 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs", label="StringUtils.LineFeed", span="1353-1353"];
m6_729 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs", label="_charPos++", span="1357-1357"];
m6_714 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs", label="_charsUsed == _charPos", span="1326-1326"];
m6_715 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs", label="ReadData(true) == 0", span="1328-1328"];
m6_717 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs", label="_charPos++", span="1333-1333"];
m6_716 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Unexpected end while parsing comment.'');", span="1329-1329"];
m6_719 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs", label="_charPos++", span="1337-1337"];
m6_720 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs", label="EnsureChars(0, true)", span="1339-1339"];
m6_721 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs", label="_chars[_charPos] == '/'", span="1341-1341"];
m6_723 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs", label="_charPos++", span="1345-1345"];
m6_724 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs", label="commentFinished = true", span="1346-1346"];
m6_726 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs", label="ProcessCarriageReturn(true)", span="1351-1351"];
m6_728 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs", label="ProcessLineFeed()", span="1354-1354"];
m6_731 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs", label="ClearRecentString()", span="1364-1364"];
m6_732 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseComment()", span="1307-1307"];
m6_362 [cluster="Newtonsoft.Json.Utilities.StringReference.StringReference()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Utilities.StringReference.StringReference()", span="27-27"];
m6_128 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken)", span="790-790"];
m6_555 [cluster="Newtonsoft.Json.JsonTextReader.ParseNull()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseNull()", span="1446-1446"];
m6_777 [cluster="Newtonsoft.Json.JsonTextReader.ParseNull()", file="JsonTextReader.cs", label="MatchValueWithTrailingSeperator(JsonConvert.Null)", span="1448-1448"];
m6_778 [cluster="Newtonsoft.Json.JsonTextReader.ParseNull()", file="JsonTextReader.cs", label="SetToken(JsonToken.Null)", span="1450-1450"];
m6_779 [cluster="Newtonsoft.Json.JsonTextReader.ParseNull()", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Error parsing null value.'');", span="1454-1454"];
m6_780 [cluster="Newtonsoft.Json.JsonTextReader.ParseNull()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseNull()", span="1446-1446"];
m6_127 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadInternal()", span="369-369"];
m6_153 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs", label=true, span="371-371"];
m6_154 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs", label=_currentState, span="373-373"];
m6_155 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs", label="State.Start", span="375-375"];
m6_162 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs", label="State.Complete", span="382-382"];
m6_163 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs", label="State.Object", span="384-384"];
m6_166 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs", label="State.PostValue", span="387-387"];
m6_169 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs", label="State.Finished", span="393-393"];
m6_179 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs", label="State.Closed", span="412-412"];
m6_180 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs", label="State.Error", span="414-414"];
m6_181 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Unexpected state: {0}.''.FormatWith(CultureInfo.InvariantCulture, CurrentState));", span="417-417"];
m6_156 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs", label="State.Property", span="376-376"];
m6_157 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs", label="State.Array", span="377-377"];
m6_158 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs", label="State.ArrayStart", span="378-378"];
m6_159 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs", label="State.Constructor", span="379-379"];
m6_160 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs", label="State.ConstructorStart", span="380-380"];
m6_161 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs", label="return ParseValue();", span="381-381"];
m6_164 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs", label="State.ObjectStart", span="385-385"];
m6_165 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs", label="return ParseObject();", span="386-386"];
m6_167 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs", label="ParsePostValue()", span="390-390"];
m6_168 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs", label="return true;", span="391-391"];
m6_170 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs", label="EnsureChars(0, false)", span="394-394"];
m6_171 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs", label="EatWhitespace(false)", span="396-396"];
m6_178 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs", label="return false;", span="411-411"];
m6_172 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs", label=_isEndOfFile, span="397-397"];
m6_173 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs", label="return false;", span="399-399"];
m6_174 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs", label="_chars[_charPos] == '/'", span="401-401"];
m6_175 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs", label="ParseComment()", span="403-403"];
m6_177 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Additional text encountered after finished reading JSON content: {0}.''.FormatWith(CultureInfo.InvariantCulture, _chars[_charPos]));", span="408-408"];
m6_176 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs", label="return true;", span="404-404"];
m6_182 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadInternal()", span="369-369"];
m6_698 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", span="567-567"];
m6_107 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", span="265-265"];
m6_108 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs", label=_isEndOfFile, span="267-267"];
m6_110 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs", label="int charsRequired = _charPos + relativePosition - _charsUsed + 1", span="270-270"];
m6_112 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs", label="int charsRead = ReadData(append, charsRequired - totalCharsRead)", span="278-278"];
m6_109 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs", label="return false;", span="268-268"];
m6_111 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs", label="int totalCharsRead = 0", span="272-272"];
m6_115 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs", label="totalCharsRead < charsRequired", span="285-285"];
m6_116 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs", label="totalCharsRead < charsRequired", span="287-287"];
m6_114 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs", label="totalCharsRead += charsRead", span="284-284"];
m6_113 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs", label="charsRead == 0", span="281-281"];
m6_117 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs", label="return false;", span="288-288"];
m6_118 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs", label="return true;", span="289-289"];
m6_119 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", span="265-265"];
m6_152 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", span="400-400"];
m6_558 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity()", span="1497-1497"];
m6_796 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity()", file="JsonTextReader.cs", label="MatchValueWithTrailingSeperator(JsonConvert.PositiveInfinity)", span="1499-1499"];
m6_797 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity()", file="JsonTextReader.cs", label="_floatParseHandling == FloatParseHandling.Decimal", span="1501-1501"];
m6_800 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity()", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Error parsing positive infinity value.'');", span="1508-1508"];
m6_798 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity()", file="JsonTextReader.cs", label="throw new JsonReaderException(''Cannot read Infinity as a decimal.'');", span="1502-1502"];
m6_799 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity()", file="JsonTextReader.cs", label="SetToken(JsonToken.Float, double.PositiveInfinity)", span="1504-1504"];
m6_801 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity()", span="1497-1497"];
m6_50 [cluster="System.Convert.FromBase64CharArray(char[], int, int)", file="JsonTextReader.cs", label="Entry System.Convert.FromBase64CharArray(char[], int, int)", span="0-0"];
m6_457 [cluster="char.IsLetterOrDigit(char)", file="JsonTextReader.cs", label="Entry char.IsLetterOrDigit(char)", span="0-0"];
m6_312 [cluster="string.String(char[], int, int)", file="JsonTextReader.cs", label="Entry string.String(char[], int, int)", span="0-0"];
m6_808 [cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.Close()", span="1530-1530"];
m6_809 [cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonTextReader.cs", label="base.Close()", span="1532-1532"];
m6_810 [cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonTextReader.cs", label="CloseInput && _reader != null", span="1534-1534"];
m6_811 [cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonTextReader.cs", label="_reader.Close()", span="1536-1536"];
m6_812 [cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonTextReader.cs", label="_buffer != null", span="1541-1541"];
m6_813 [cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonTextReader.cs", label="_buffer.Clear()", span="1542-1542"];
m6_814 [cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.Close()", span="1530-1530"];
m6_149 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", span="363-363"];
m6_150 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="JsonTextReader.cs", label="return ReadAsDateTimeOffsetInternal();", span="365-365"];
m6_151 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", span="363-363"];
m6_184 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseObject()", span="767-767"];
m6_404 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label=true, span="769-769"];
m6_405 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="char currentChar = _chars[_charPos]", span="771-771"];
m6_406 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label=currentChar, span="773-773"];
m6_426 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="char.IsWhiteSpace(currentChar)", span="805-805"];
m6_407 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="'\0'", span="775-775"];
m6_412 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="'}'", span="786-786"];
m6_416 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="'/'", span="790-790"];
m6_419 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="StringUtils.CarriageReturn", span="793-793"];
m6_421 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="StringUtils.LineFeed", span="796-796"];
m6_423 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="' '", span="799-799"];
m6_408 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="_charsUsed == _charPos", span="776-776"];
m6_409 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="ReadData(false) == 0", span="778-778"];
m6_411 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="_charPos++", span="783-783"];
m6_410 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="return false;", span="779-779"];
m6_413 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="SetToken(JsonToken.EndObject)", span="787-787"];
m6_414 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="_charPos++", span="788-788"];
m6_415 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="return true;", span="789-789"];
m6_417 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="ParseComment()", span="791-791"];
m6_418 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="return true;", span="792-792"];
m6_420 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="ProcessCarriageReturn(false)", span="794-794"];
m6_422 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="ProcessLineFeed()", span="797-797"];
m6_424 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="StringUtils.Tab", span="800-800"];
m6_425 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="_charPos++", span="802-802"];
m6_427 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="_charPos++", span="808-808"];
m6_428 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="return ParseProperty();", span="812-812"];
m6_429 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseObject()", span="767-767"];
m6_295 [cluster="Newtonsoft.Json.Utilities.StringReference.StringReference(char[], int, int)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Utilities.StringReference.StringReference(char[], int, int)", span="48-48"];
m6_562 [cluster="char.IsNumber(char)", file="JsonTextReader.cs", label="Entry char.IsNumber(char)", span="0-0"];
m6_51 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", span="800-800"];
m6_0 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="73-73"];
m6_1 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonTextReader.cs", label="reader == null", span="75-75"];
m6_3 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonTextReader.cs", label="_reader = reader", span="78-78"];
m6_2 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonTextReader.cs", label="throw new ArgumentNullException(''reader'');", span="76-76"];
m6_4 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonTextReader.cs", label="_lineNumber = 1", span="79-79"];
m6_5 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonTextReader.cs", label="_chars = new char[1025]", span="80-80"];
m6_6 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="73-73"];
m6_188 [cluster="string.FormatWith(System.IFormatProvider, object)", file="JsonTextReader.cs", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
m6_189 [cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", span="108-108"];
m6_49 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", span="422-422"];
m6_190 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="int charPos = _charPos", span="424-424"];
m6_201 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Unterminated string. Expected delimiter: {0}.''.FormatWith(CultureInfo.InvariantCulture, quote));", span="441-441"];
m6_206 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Unterminated string. Expected delimiter: {0}.''.FormatWith(CultureInfo.InvariantCulture, quote));", span="450-450"];
m6_276 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="_chars[charPos - 1] == quote", span="577-577"];
m6_191 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="int initialPosition = _charPos", span="425-425"];
m6_195 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="_chars[charPos++]", span="431-431"];
m6_192 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="int lastWritePosition = _charPos", span="426-426"];
m6_278 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="initialPosition == lastWritePosition", span="581-581"];
m6_279 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="_stringReference = new StringReference(_chars, initialPosition, charPos - initialPosition)", span="583-583"];
m6_193 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="StringBuffer buffer = null", span="427-427"];
m6_254 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="WriteCharToBuffer(buffer, highSurrogate, lastWritePosition, escapeStartPos)", span="538-538"];
m6_264 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="WriteCharToBuffer(buffer, writeChar, lastWritePosition, escapeStartPos)", span="561-561"];
m6_194 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label=true, span="429-429"];
m6_252 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="buffer == null", span="535-535"];
m6_262 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="buffer == null", span="558-558"];
m6_280 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="buffer == null", span="587-587"];
m6_283 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="buffer.Append(_chars, lastWritePosition, charPos - lastWritePosition)", span="591-591"];
m6_284 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="_stringReference = new StringReference(buffer.GetInternalBuffer(), 0, buffer.Position)", span="593-593"];
m6_196 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="'\0'", span="433-433"];
m6_202 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="'\\'", span="445-445"];
m6_266 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="StringUtils.CarriageReturn", span="565-565"];
m6_270 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="StringUtils.LineFeed", span="570-570"];
m6_274 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="''''", span="575-575"];
m6_197 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="_charsUsed == charPos - 1", span="434-434"];
m6_198 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="charPos--", span="436-436"];
m6_203 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="_charPos = charPos", span="446-446"];
m6_205 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="_charPos = charPos", span="449-449"];
m6_207 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="int escapeStartPos = charPos - 1", span="454-454"];
m6_208 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="char currentChar = _chars[charPos]", span="456-456"];
m6_212 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="charPos++", span="463-463"];
m6_199 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="ReadData(true) == 0", span="438-438"];
m6_200 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="_charPos = charPos", span="440-440"];
m6_204 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="!EnsureChars(0, true)", span="447-447"];
m6_209 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="char writeChar", span="458-458"];
m6_210 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label=currentChar, span="460-460"];
m6_232 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="writeChar = currentChar", span="489-489"];
m6_261 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Bad JSON escape sequence: {0}.''.FormatWith(CultureInfo.InvariantCulture, @''\'' + currentChar));", span="555-555"];
m6_211 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="'b'", span="462-462"];
m6_214 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="'t'", span="466-466"];
m6_217 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="'n'", span="470-470"];
m6_220 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="'f'", span="474-474"];
m6_223 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="'r'", span="478-478"];
m6_226 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="'\\'", span="482-482"];
m6_229 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="''''", span="486-486"];
m6_234 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="'u'", span="492-492"];
m6_259 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="charPos++", span="553-553"];
m6_213 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="writeChar = '\b'", span="464-464"];
m6_215 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="charPos++", span="467-467"];
m6_216 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="writeChar = '\t'", span="468-468"];
m6_218 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="charPos++", span="471-471"];
m6_219 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="writeChar = '\n'", span="472-472"];
m6_221 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="charPos++", span="475-475"];
m6_222 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="writeChar = '\f'", span="476-476"];
m6_224 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="charPos++", span="479-479"];
m6_225 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="writeChar = '\r'", span="480-480"];
m6_227 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="charPos++", span="483-483"];
m6_228 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="writeChar = '\\'", span="484-484"];
m6_233 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="charPos++", span="490-490"];
m6_230 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="'\''", span="487-487"];
m6_231 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="'/'", span="488-488"];
m6_235 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="charPos++", span="493-493"];
m6_236 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="_charPos = charPos", span="494-494"];
m6_237 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="writeChar = ParseUnicode()", span="495-495"];
m6_238 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="StringUtils.IsLowSurrogate(writeChar)", span="497-497"];
m6_240 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="StringUtils.IsHighSurrogate(writeChar)", span="502-502"];
m6_244 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="char highSurrogate = writeChar", span="514-514"];
m6_239 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="writeChar = UnicodeReplacementChar", span="500-500"];
m6_241 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="bool anotherHighSurrogate", span="504-504"];
m6_258 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="charPos = _charPos", span="550-550"];
m6_242 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="anotherHighSurrogate = false", span="509-509"];
m6_243 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="EnsureChars(2, true) && _chars[_charPos] == '\\' && _chars[_charPos + 1] == 'u'", span="512-512"];
m6_257 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label=anotherHighSurrogate, span="547-547"];
m6_256 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="writeChar = UnicodeReplacementChar", span="545-545"];
m6_245 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="_charPos += 2", span="516-516"];
m6_246 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="writeChar = ParseUnicode()", span="517-517"];
m6_247 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="StringUtils.IsLowSurrogate(writeChar)", span="519-519"];
m6_248 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="StringUtils.IsHighSurrogate(writeChar)", span="523-523"];
m6_249 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="highSurrogate = UnicodeReplacementChar", span="526-526"];
m6_251 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="highSurrogate = UnicodeReplacementChar", span="532-532"];
m6_250 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="anotherHighSurrogate = true", span="527-527"];
m6_253 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="buffer = GetBuffer()", span="536-536"];
m6_255 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="lastWritePosition = _charPos", span="539-539"];
m6_260 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="_charPos = charPos", span="554-554"];
m6_265 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="lastWritePosition = charPos", span="563-563"];
m6_267 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="_charPos = charPos - 1", span="566-566"];
m6_263 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="buffer = GetBuffer()", span="559-559"];
m6_268 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="ProcessCarriageReturn(true)", span="567-567"];
m6_269 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="charPos = _charPos", span="568-568"];
m6_271 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="_charPos = charPos - 1", span="571-571"];
m6_272 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="ProcessLineFeed()", span="572-572"];
m6_273 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="charPos = _charPos", span="573-573"];
m6_275 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="'\''", span="576-576"];
m6_277 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="charPos--", span="579-579"];
m6_282 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="charPos > lastWritePosition", span="590-590"];
m6_285 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="charPos++", span="596-596"];
m6_281 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="buffer = GetBuffer()", span="588-588"];
m6_286 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="_charPos = charPos", span="597-597"];
m6_287 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="return;", span="598-598"];
m6_288 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", span="422-422"];
m6_133 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", span="326-326"];
m6_134 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="JsonTextReader.cs", label="return ReadAsDecimalInternal();", span="328-328"];
m6_135 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", span="326-326"];
m6_137 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsInt32()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsInt32()", span="335-335"];
m6_138 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsInt32()", file="JsonTextReader.cs", label="return ReadAsInt32Internal();", span="337-337"];
m6_139 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsInt32()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadAsInt32()", span="335-335"];
m6_817 [cluster="Newtonsoft.Json.Utilities.StringBuffer.Clear()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Utilities.StringBuffer.Clear()", span="75-75"];
m6_58 [cluster="System.Buffer.BlockCopy(System.Array, int, System.Array, int, int)", file="JsonTextReader.cs", label="Entry System.Buffer.BlockCopy(System.Array, int, System.Array, int, int)", span="0-0"];
m6_695 [cluster="char.IsDigit(char)", file="JsonTextReader.cs", label="Entry char.IsDigit(char)", span="0-0"];
m6_185 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParsePostValue()", span="698-698"];
m6_363 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label=true, span="700-700"];
m6_364 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="char currentChar = _chars[_charPos]", span="702-702"];
m6_365 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label=currentChar, span="704-704"];
m6_398 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="char.IsWhiteSpace(currentChar)", span="753-753"];
m6_400 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''After parsing a value an unexpected character was encountered: {0}.''.FormatWith(CultureInfo.InvariantCulture, currentChar));", span="760-760"];
m6_366 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="'\0'", span="706-706"];
m6_372 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="'}'", span="720-720"];
m6_376 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="']'", span="724-724"];
m6_380 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="')'", span="728-728"];
m6_384 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="'/'", span="732-732"];
m6_387 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="','", span="735-735"];
m6_391 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="' '", span="741-741"];
m6_394 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="StringUtils.CarriageReturn", span="746-746"];
m6_396 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="StringUtils.LineFeed", span="749-749"];
m6_367 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="_charsUsed == _charPos", span="707-707"];
m6_368 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="ReadData(false) == 0", span="709-709"];
m6_371 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="_charPos++", span="717-717"];
m6_369 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="_currentState = State.Finished", span="711-711"];
m6_370 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="return false;", span="712-712"];
m6_373 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="_charPos++", span="721-721"];
m6_374 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="SetToken(JsonToken.EndObject)", span="722-722"];
m6_375 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="return true;", span="723-723"];
m6_377 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="_charPos++", span="725-725"];
m6_378 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="SetToken(JsonToken.EndArray)", span="726-726"];
m6_379 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="return true;", span="727-727"];
m6_381 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="_charPos++", span="729-729"];
m6_382 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="SetToken(JsonToken.EndConstructor)", span="730-730"];
m6_383 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="return true;", span="731-731"];
m6_385 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="ParseComment()", span="733-733"];
m6_386 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="return true;", span="734-734"];
m6_388 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="_charPos++", span="736-736"];
m6_389 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="SetStateBasedOnCurrent()", span="739-739"];
m6_390 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="return false;", span="740-740"];
m6_392 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="StringUtils.Tab", span="742-742"];
m6_393 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="_charPos++", span="744-744"];
m6_395 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="ProcessCarriageReturn(false)", span="747-747"];
m6_397 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="ProcessLineFeed()", span="750-750"];
m6_399 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="_charPos++", span="756-756"];
m6_401 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParsePostValue()", span="698-698"];
m6_101 [cluster="System.IO.TextReader.Read(char[], int, int)", file="JsonTextReader.cs", label="Entry System.IO.TextReader.Read(char[], int, int)", span="0-0"];
m6_140 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", span="590-590"];
m6_700 [cluster="System.Convert.ToDecimal(long)", file="JsonTextReader.cs", label="Entry System.Convert.ToDecimal(long)", span="0-0"];
m6_696 [cluster="string.StartsWith(string, System.StringComparison)", file="JsonTextReader.cs", label="Entry string.StartsWith(string, System.StringComparison)", span="0-0"];
m6_704 [cluster="double.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out double)", file="JsonTextReader.cs", label="Entry double.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out double)", span="0-0"];
m6_54 [cluster="Newtonsoft.Json.JsonTextReader.BlockCopyChars(char[], int, char[], int, int)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.BlockCopyChars(char[], int, char[], int, int)", span="167-167"];
m6_55 [cluster="Newtonsoft.Json.JsonTextReader.BlockCopyChars(char[], int, char[], int, int)", file="JsonTextReader.cs", label="int charByteCount = 2", span="169-169"];
m6_56 [cluster="Newtonsoft.Json.JsonTextReader.BlockCopyChars(char[], int, char[], int, int)", file="JsonTextReader.cs", label="Buffer.BlockCopy(src, srcOffset * charByteCount, dst, dstOffset * charByteCount, count * charByteCount)", span="171-171"];
m6_57 [cluster="Newtonsoft.Json.JsonTextReader.BlockCopyChars(char[], int, char[], int, int)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.BlockCopyChars(char[], int, char[], int, int)", span="167-167"];
m6_627 [cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeperator(string)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeperator(string)", span="1385-1385"];
m6_744 [cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeperator(string)", file="JsonTextReader.cs", label="bool match = MatchValue(value)", span="1388-1388"];
m6_745 [cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeperator(string)", file="JsonTextReader.cs", label="!match", span="1390-1390"];
m6_746 [cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeperator(string)", file="JsonTextReader.cs", label="return false;", span="1391-1391"];
m6_747 [cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeperator(string)", file="JsonTextReader.cs", label="!EnsureChars(0, false)", span="1393-1393"];
m6_748 [cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeperator(string)", file="JsonTextReader.cs", label="return true;", span="1394-1394"];
m6_749 [cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeperator(string)", file="JsonTextReader.cs", label="return IsSeperator(_chars[_charPos]) || _chars[_charPos] == '\0';", span="1396-1396"];
m6_750 [cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeperator(string)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeperator(string)", span="1385-1385"];
m6_19 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseString(char)", span="110-110"];
m6_20 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs", label="_charPos++", span="112-112"];
m6_22 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs", label="ReadStringIntoBuffer(quote)", span="115-115"];
m6_32 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs", label="_quoteChar = quote", span="136-136"];
m6_46 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs", label="_quoteChar = quote", span="163-163"];
m6_21 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs", label="ShiftBufferIfNeeded()", span="114-114"];
m6_23 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs", label="_readType == ReadType.ReadAsBytes", span="117-117"];
m6_24 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs", label="byte[] data", span="119-119"];
m6_29 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs", label="_readType == ReadType.ReadAsString", span="131-131"];
m6_25 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs", label="_stringReference.Length == 0", span="120-120"];
m6_26 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs", label="data = new byte[0]", span="122-122"];
m6_27 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs", label="data = Convert.FromBase64CharArray(_stringReference.Chars, _stringReference.StartIndex, _stringReference.Length)", span="126-126"];
m6_28 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs", label="SetToken(JsonToken.Bytes, data)", span="129-129"];
m6_30 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs", label="string text = _stringReference.ToString()", span="133-133"];
m6_33 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs", label="string text = _stringReference.ToString()", span="140-140"];
m6_31 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs", label="SetToken(JsonToken.String, text)", span="135-135"];
m6_34 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs", label="_dateParseHandling != DateParseHandling.None", span="142-142"];
m6_42 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs", label="DateTimeUtils.TryParseDateTime(text, dateParseHandling, DateTimeZoneHandling, out dt)", span="155-155"];
m6_45 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs", label="SetToken(JsonToken.String, text)", span="162-162"];
m6_35 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs", label="DateParseHandling dateParseHandling", span="144-144"];
m6_36 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs", label="_readType == ReadType.ReadAsDateTime", span="145-145"];
m6_37 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs", label="dateParseHandling = DateParseHandling.DateTime", span="146-146"];
m6_38 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs", label="_readType == ReadType.ReadAsDateTimeOffset", span="148-148"];
m6_39 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs", label="dateParseHandling = DateParseHandling.DateTimeOffset", span="149-149"];
m6_40 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs", label="dateParseHandling = _dateParseHandling", span="152-152"];
m6_41 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs", label="object dt", span="154-154"];
m6_43 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs", label="SetToken(JsonToken.Date, dt)", span="157-157"];
m6_44 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs", label="return;", span="158-158"];
m6_47 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseString(char)", span="110-110"];
m6_100 [cluster="System.Math.Max(int, int)", file="JsonTextReader.cs", label="Entry System.Math.Max(int, int)", span="0-0"];
m6_815 [cluster="Newtonsoft.Json.JsonReader.Close()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonReader.Close()", span="972-972"];
m6_357 [cluster="Newtonsoft.Json.JsonTextReader.ClearRecentString()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ClearRecentString()", span="690-690"];
m6_358 [cluster="Newtonsoft.Json.JsonTextReader.ClearRecentString()", file="JsonTextReader.cs", label="_buffer != null", span="692-692"];
m6_359 [cluster="Newtonsoft.Json.JsonTextReader.ClearRecentString()", file="JsonTextReader.cs", label="_buffer.Position = 0", span="693-693"];
m6_360 [cluster="Newtonsoft.Json.JsonTextReader.ClearRecentString()", file="JsonTextReader.cs", label="_stringReference = new StringReference()", span="695-695"];
m6_361 [cluster="Newtonsoft.Json.JsonTextReader.ClearRecentString()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ClearRecentString()", span="690-690"];
m6_302 [cluster="Newtonsoft.Json.Utilities.StringBuffer.Append(char)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Utilities.StringBuffer.Append(char)", span="55-55"];
m6_144 [cluster="Newtonsoft.Json.JsonReader.ReadAsStringInternal()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsStringInternal()", span="647-647"];
m6_313 [cluster="int.Parse(string, System.Globalization.NumberStyles, System.IFormatProvider)", file="JsonTextReader.cs", label="Entry int.Parse(string, System.Globalization.NumberStyles, System.IFormatProvider)", span="0-0"];
m6_293 [cluster="Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", span="1024-1024"];
m6_566 [cluster="Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", file="JsonTextReader.cs", label="_charPos++", span="1026-1026"];
m6_567 [cluster="Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", file="JsonTextReader.cs", label="EnsureChars(1, append) && _chars[_charPos] == StringUtils.LineFeed", span="1028-1028"];
m6_568 [cluster="Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", file="JsonTextReader.cs", label="_charPos++", span="1029-1029"];
m6_569 [cluster="Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", file="JsonTextReader.cs", label="OnNewLine(_charPos)", span="1031-1031"];
m6_570 [cluster="Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", span="1024-1024"];
m6_186 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", span="1034-1034"];
m6_571 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs", label="bool finished = false", span="1036-1036"];
m6_589 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs", label="return (!oneOrMore || ateWhitespace);", span="1075-1075"];
m6_572 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs", label="bool ateWhitespace = false", span="1037-1037"];
m6_573 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs", label="!finished", span="1038-1038"];
m6_574 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs", label="char currentChar = _chars[_charPos]", span="1040-1040"];
m6_575 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs", label=currentChar, span="1042-1042"];
m6_585 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs", label="currentChar == ' ' || char.IsWhiteSpace(currentChar)", span="1062-1062"];
m6_576 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs", label="'\0'", span="1044-1044"];
m6_581 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs", label="StringUtils.CarriageReturn", span="1055-1055"];
m6_583 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs", label="StringUtils.LineFeed", span="1058-1058"];
m6_577 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs", label="_charsUsed == _charPos", span="1045-1045"];
m6_578 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs", label="ReadData(false) == 0", span="1047-1047"];
m6_580 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs", label="_charPos++", span="1052-1052"];
m6_579 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs", label="finished = true", span="1048-1048"];
m6_582 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs", label="ProcessCarriageReturn(false)", span="1056-1056"];
m6_584 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs", label="ProcessLineFeed()", span="1059-1059"];
m6_586 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs", label="ateWhitespace = true", span="1064-1064"];
m6_588 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs", label="finished = true", span="1069-1069"];
m6_587 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs", label="_charPos++", span="1065-1065"];
m6_590 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", span="1034-1034"];
m6_141 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsString()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsString()", span="344-344"];
m6_142 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsString()", file="JsonTextReader.cs", label="return ReadAsStringInternal();", span="346-346"];
m6_143 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsString()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadAsString()", span="344-344"];
m6_7 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JsonTextReader.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m6_556 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseConstructor()", span="1078-1078"];
m6_591 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="MatchValueWithTrailingSeperator(''new'')", span="1080-1080"];
m6_592 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="EatWhitespace(false)", span="1082-1082"];
m6_625 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Unexpected content while parsing JSON.'');", span="1153-1153"];
m6_593 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="int initialPosition = _charPos", span="1084-1084"];
m6_594 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="int endPosition", span="1085-1085"];
m6_617 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="_stringReference = new StringReference(_chars, initialPosition, endPosition - initialPosition)", span="1137-1137"];
m6_595 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label=true, span="1087-1087"];
m6_596 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="char currentChar = _chars[_charPos]", span="1089-1089"];
m6_597 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="currentChar == '\0'", span="1090-1090"];
m6_603 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="char.IsLetterOrDigit(currentChar)", span="1104-1104"];
m6_605 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="currentChar == StringUtils.CarriageReturn", span="1108-1108"];
m6_608 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="currentChar == StringUtils.LineFeed", span="1114-1114"];
m6_611 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="char.IsWhiteSpace(currentChar)", span="1120-1120"];
m6_614 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="currentChar == '('", span="1126-1126"];
m6_616 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Unexpected character while parsing constructor: {0}.''.FormatWith(CultureInfo.InvariantCulture, currentChar));", span="1133-1133"];
m6_598 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="_charsUsed == _charPos", span="1092-1092"];
m6_599 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="ReadData(true) == 0", span="1094-1094"];
m6_601 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="endPosition = _charPos", span="1099-1099"];
m6_600 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Unexpected end while parsing constructor.'');", span="1095-1095"];
m6_602 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="_charPos++", span="1100-1100"];
m6_604 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="_charPos++", span="1106-1106"];
m6_606 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="endPosition = _charPos", span="1110-1110"];
m6_607 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="ProcessCarriageReturn(true)", span="1111-1111"];
m6_609 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="endPosition = _charPos", span="1116-1116"];
m6_610 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="ProcessLineFeed()", span="1117-1117"];
m6_612 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="endPosition = _charPos", span="1122-1122"];
m6_613 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="_charPos++", span="1123-1123"];
m6_615 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="endPosition = _charPos", span="1128-1128"];
m6_618 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="string constructorName = _stringReference.ToString()", span="1138-1138"];
m6_619 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="EatWhitespace(false)", span="1140-1140"];
m6_624 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="SetToken(JsonToken.StartConstructor, constructorName)", span="1149-1149"];
m6_620 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="_chars[_charPos] != '('", span="1142-1142"];
m6_621 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Unexpected character while parsing constructor: {0}.''.FormatWith(CultureInfo.InvariantCulture, _chars[_charPos]));", span="1143-1143"];
m6_622 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="_charPos++", span="1145-1145"];
m6_623 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="ClearRecentString()", span="1147-1147"];
m6_626 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseConstructor()", span="1078-1078"];
m6_818 [cluster="Newtonsoft.Json.JsonTextReader.HasLineInfo()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.HasLineInfo()", span="1551-1551"];
m6_819 [cluster="Newtonsoft.Json.JsonTextReader.HasLineInfo()", file="JsonTextReader.cs", label="return true;", span="1553-1553"];
m6_820 [cluster="Newtonsoft.Json.JsonTextReader.HasLineInfo()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.HasLineInfo()", span="1551-1551"];
m6_292 [cluster="Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(Newtonsoft.Json.Utilities.StringBuffer, char, int, int)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(Newtonsoft.Json.Utilities.StringBuffer, char, int, int)", span="605-605"];
m6_298 [cluster="Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(Newtonsoft.Json.Utilities.StringBuffer, char, int, int)", file="JsonTextReader.cs", label="writeToPosition > lastWritePosition", span="607-607"];
m6_299 [cluster="Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(Newtonsoft.Json.Utilities.StringBuffer, char, int, int)", file="JsonTextReader.cs", label="buffer.Append(_chars, lastWritePosition, writeToPosition - lastWritePosition)", span="609-609"];
m6_300 [cluster="Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(Newtonsoft.Json.Utilities.StringBuffer, char, int, int)", file="JsonTextReader.cs", label="buffer.Append(writeChar)", span="612-612"];
m6_301 [cluster="Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(Newtonsoft.Json.Utilities.StringBuffer, char, int, int)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(Newtonsoft.Json.Utilities.StringBuffer, char, int, int)", span="605-605"];
m6_102 [cluster="Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", span="257-257"];
m6_103 [cluster="Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", file="JsonTextReader.cs", label="_charPos + relativePosition >= _charsUsed", span="259-259"];
m6_104 [cluster="Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", file="JsonTextReader.cs", label="return ReadChars(relativePosition, append);", span="260-260"];
m6_105 [cluster="Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", file="JsonTextReader.cs", label="return true;", span="262-262"];
m6_106 [cluster="Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", span="257-257"];
m6_297 [cluster="Newtonsoft.Json.Utilities.StringBuffer.GetInternalBuffer()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Utilities.StringBuffer.GetInternalBuffer()", span="101-101"];
m6_751 [cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.IsSeperator(char)", span="1399-1399"];
m6_752 [cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonTextReader.cs", label=c, span="1401-1401"];
m6_769 [cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonTextReader.cs", label="char.IsWhiteSpace(c)", span="1423-1423"];
m6_753 [cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonTextReader.cs", label="'}'", span="1403-1403"];
m6_757 [cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonTextReader.cs", label="'/'", span="1407-1407"];
m6_761 [cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonTextReader.cs", label="')'", span="1413-1413"];
m6_764 [cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonTextReader.cs", label="' '", span="1417-1417"];
m6_754 [cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonTextReader.cs", label="']'", span="1404-1404"];
m6_755 [cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonTextReader.cs", label="','", span="1405-1405"];
m6_756 [cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonTextReader.cs", label="return true;", span="1406-1406"];
m6_758 [cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonTextReader.cs", label="!EnsureChars(1, false)", span="1409-1409"];
m6_759 [cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonTextReader.cs", label="return false;", span="1410-1410"];
m6_760 [cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonTextReader.cs", label="return (_chars[_charPos + 1] == '*');", span="1412-1412"];
m6_762 [cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonTextReader.cs", label="CurrentState == State.Constructor || CurrentState == State.ConstructorStart", span="1414-1414"];
m6_763 [cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonTextReader.cs", label="return true;", span="1415-1415"];
m6_771 [cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonTextReader.cs", label="return false;", span="1428-1428"];
m6_765 [cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonTextReader.cs", label="StringUtils.Tab", span="1418-1418"];
m6_766 [cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonTextReader.cs", label="StringUtils.LineFeed", span="1419-1419"];
m6_767 [cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonTextReader.cs", label="StringUtils.CarriageReturn", span="1420-1420"];
m6_768 [cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonTextReader.cs", label="return true;", span="1421-1421"];
m6_770 [cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonTextReader.cs", label="return true;", span="1424-1424"];
m6_772 [cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.IsSeperator(char)", span="1399-1399"];
m6_14 [cluster="Newtonsoft.Json.Utilities.StringBuffer.StringBuffer(int)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Utilities.StringBuffer.StringBuffer(int)", span="50-50"];
m6_560 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseNumber()", span="1157-1157"];
m6_628 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="ShiftBufferIfNeeded()", span="1159-1159"];
m6_629 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="char firstChar = _chars[_charPos]", span="1161-1161"];
m6_630 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="int initialPosition = _charPos", span="1162-1162"];
m6_635 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="bool singleDigit = (char.IsDigit(firstChar) && _stringReference.Length == 1)", span="1171-1171"];
m6_636 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="bool nonBase10 = (firstChar == '0' && _stringReference.Length > 1\r\n                              && _stringReference.Chars[_stringReference.StartIndex + 1] != '.'\r\n                              && _stringReference.Chars[_stringReference.StartIndex + 1] != 'e'\r\n                              && _stringReference.Chars[_stringReference.StartIndex + 1] != 'E')", span="1172-1175"];
m6_639 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="numberValue = firstChar - 48", span="1182-1182"];
m6_654 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="numberValue = (decimal)firstChar - 48", span="1214-1214"];
m6_666 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="numberValue = (long)firstChar - 48", span="1245-1245"];
m6_631 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="ReadNumberIntoBuffer()", span="1164-1164"];
m6_632 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="_stringReference = new StringReference(_chars, initialPosition, _charPos - initialPosition)", span="1166-1166"];
m6_633 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="object numberValue", span="1168-1168"];
m6_634 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="JsonToken numberType", span="1169-1169"];
m6_693 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="SetToken(numberType, numberValue)", span="1304-1304"];
m6_638 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label=singleDigit, span="1179-1179"];
m6_653 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label=singleDigit, span="1211-1211"];
m6_665 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label=singleDigit, span="1242-1242"];
m6_637 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="_readType == ReadType.ReadAsInt32", span="1177-1177"];
m6_640 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label=nonBase10, span="1184-1184"];
m6_655 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label=nonBase10, span="1216-1216"];
m6_668 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label=nonBase10, span="1248-1248"];
m6_652 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="_readType == ReadType.ReadAsDecimal", span="1209-1209"];
m6_641 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="string number = _stringReference.ToString()", span="1186-1186"];
m6_644 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="int value", span="1197-1197"];
m6_642 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="int integer = number.StartsWith(''0x'', StringComparison.OrdinalIgnoreCase)\r\n                        ? Convert.ToInt32(number, 16)\r\n                        : Convert.ToInt32(number, 8)", span="1189-1191"];
m6_643 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="numberValue = integer", span="1193-1193"];
m6_645 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="ParseResult parseResult = ConvertUtils.Int32TryParse(_stringReference.Chars, _stringReference.StartIndex, _stringReference.Length, out value)", span="1198-1198"];
m6_646 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="parseResult == ParseResult.Success", span="1199-1199"];
m6_647 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="numberValue = value", span="1200-1200"];
m6_648 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="parseResult == ParseResult.Overflow", span="1201-1201"];
m6_649 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''JSON integer {0} is too large or small for an Int32.''.FormatWith(CultureInfo.InvariantCulture, _stringReference.ToString()));", span="1202-1202"];
m6_650 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Input string '{0}' is not a valid integer.''.FormatWith(CultureInfo.InvariantCulture, _stringReference.ToString()));", span="1204-1204"];
m6_651 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="numberType = JsonToken.Integer", span="1207-1207"];
m6_656 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="string number = _stringReference.ToString()", span="1218-1218"];
m6_659 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="string number = _stringReference.ToString()", span="1229-1229"];
m6_657 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="long integer = number.StartsWith(''0x'', StringComparison.OrdinalIgnoreCase)\r\n                        ? Convert.ToInt64(number, 16)\r\n                        : Convert.ToInt64(number, 8)", span="1221-1223"];
m6_658 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="numberValue = Convert.ToDecimal(integer)", span="1225-1225"];
m6_660 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="decimal value", span="1231-1231"];
m6_661 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="decimal.TryParse(number, NumberStyles.Number | NumberStyles.AllowExponent, CultureInfo.InvariantCulture, out value)", span="1232-1232"];
m6_662 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="numberValue = value", span="1233-1233"];
m6_663 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Input string '{0}' is not a valid decimal.''.FormatWith(CultureInfo.InvariantCulture, _stringReference.ToString()));", span="1235-1235"];
m6_664 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="numberType = JsonToken.Float", span="1238-1238"];
m6_667 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="numberType = JsonToken.Integer", span="1246-1246"];
m6_669 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="string number = _stringReference.ToString()", span="1250-1250"];
m6_672 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="long value", span="1259-1259"];
m6_670 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="numberValue = number.StartsWith(''0x'', StringComparison.OrdinalIgnoreCase)\r\n                        ? Convert.ToInt64(number, 16)\r\n                        : Convert.ToInt64(number, 8)", span="1252-1254"];
m6_671 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="numberType = JsonToken.Integer", span="1255-1255"];
m6_673 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="ParseResult parseResult = ConvertUtils.Int64TryParse(_stringReference.Chars, _stringReference.StartIndex, _stringReference.Length, out value)", span="1260-1260"];
m6_674 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="parseResult == ParseResult.Success", span="1261-1261"];
m6_675 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="numberValue = value", span="1263-1263"];
m6_677 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="parseResult == ParseResult.Overflow", span="1266-1266"];
m6_676 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="numberType = JsonToken.Integer", span="1264-1264"];
m6_678 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="string number = _stringReference.ToString()", span="1269-1269"];
m6_681 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="string number = _stringReference.ToString()", span="1278-1278"];
m6_679 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="numberValue = BigInteger.Parse(number, CultureInfo.InvariantCulture)", span="1270-1270"];
m6_680 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="numberType = JsonToken.Integer", span="1271-1271"];
m6_682 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="_floatParseHandling == FloatParseHandling.Decimal", span="1280-1280"];
m6_684 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="decimal.TryParse(number, NumberStyles.Number | NumberStyles.AllowExponent, CultureInfo.InvariantCulture, out d)", span="1283-1283"];
m6_686 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Input string '{0}' is not a valid decimal.''.FormatWith(CultureInfo.InvariantCulture, number));", span="1286-1286"];
m6_688 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", color=red, community=0, file="JsonTextReader.cs", label="0: double.TryParse(number, NumberStyles.Float | NumberStyles.AllowThousands, NumberFormatInfo.CurrentInfo, out d)", span="1291-1291"];
m6_690 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Input string '{0}' is not a valid number.''.FormatWith(CultureInfo.InvariantCulture, number));", span="1294-1294"];
m6_683 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="decimal d", span="1282-1282"];
m6_687 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="double d", span="1290-1290"];
m6_685 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="numberValue = d", span="1284-1284"];
m6_689 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="numberValue = d", span="1292-1292"];
m6_691 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="numberType = JsonToken.Float", span="1297-1297"];
m6_692 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="ClearRecentString()", span="1302-1302"];
m6_694 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseNumber()", span="1157-1157"];
m6_795 [cluster="Newtonsoft.Json.JsonReaderException.JsonReaderException(string)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonReaderException.JsonReaderException(string)", span="70-70"];
m6_8 [cluster="Newtonsoft.Json.JsonTextReader.GetBuffer()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.GetBuffer()", span="90-90"];
m6_9 [cluster="Newtonsoft.Json.JsonTextReader.GetBuffer()", file="JsonTextReader.cs", label="_buffer == null", span="92-92"];
m6_10 [cluster="Newtonsoft.Json.JsonTextReader.GetBuffer()", file="JsonTextReader.cs", label="_buffer = new StringBuffer(1025)", span="94-94"];
m6_11 [cluster="Newtonsoft.Json.JsonTextReader.GetBuffer()", file="JsonTextReader.cs", label="_buffer.Position = 0", span="98-98"];
m6_12 [cluster="Newtonsoft.Json.JsonTextReader.GetBuffer()", file="JsonTextReader.cs", label="return _buffer;", span="101-101"];
m6_13 [cluster="Newtonsoft.Json.JsonTextReader.GetBuffer()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.GetBuffer()", span="90-90"];
m6_702 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", span="632-632"];
m6_454 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", span="863-863"];
m6_458 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs", label="int initialPosition = _charPos", span="865-865"];
m6_459 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs", label=true, span="868-868"];
m6_465 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs", label="_stringReference = new StringReference(_chars, initialPosition, _charPos - initialPosition)", span="881-881"];
m6_471 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs", label="_stringReference = new StringReference(_chars, initialPosition, _charPos - initialPosition)", span="893-893"];
m6_460 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs", label="_chars[_charPos]", span="870-870"];
m6_461 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs", label="'\0'", span="872-872"];
m6_467 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs", label="char currentChar = _chars[_charPos]", span="884-884"];
m6_462 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs", label="_charsUsed == _charPos", span="873-873"];
m6_463 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs", label="ReadData(true) == 0", span="875-875"];
m6_464 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Unexpected end while parsing unquoted property name.'');", span="876-876"];
m6_466 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs", label="return;", span="882-882"];
m6_468 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs", label="ValidIdentifierChar(currentChar)", span="886-886"];
m6_470 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs", label="char.IsWhiteSpace(currentChar) || currentChar == ':'", span="891-891"];
m6_473 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Invalid JavaScript property identifier character: {0}.''.FormatWith(CultureInfo.InvariantCulture, currentChar));", span="897-897"];
m6_469 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs", label="_charPos++", span="888-888"];
m6_472 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs", label="return;", span="894-894"];
m6_474 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", span="863-863"];
m6_699 [cluster="System.Convert.ToInt64(string, int)", file="JsonTextReader.cs", label="Entry System.Convert.ToInt64(string, int)", span="0-0"];
m6_290 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsLowSurrogate(char)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.IsLowSurrogate(char)", span="191-191"];
m6_69 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadData(bool)", span="192-192"];
m6_70 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool)", file="JsonTextReader.cs", label="return ReadData(append, 0);", span="194-194"];
m6_71 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadData(bool)", span="192-192"];
m6_72 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", span="197-197"];
m6_73 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs", label=_isEndOfFile, span="199-199"];
m6_75 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs", label="_charsUsed + charsRequired >= _chars.Length - 1", span="203-203"];
m6_76 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs", label=append, span="205-205"];
m6_77 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs", label="int newArrayLength = Math.Max(_chars.Length * 2, _charsUsed + charsRequired + 1)", span="208-208"];
m6_82 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs", label="remainingCharCount + charsRequired + 1 >= _chars.Length", span="221-221"];
m6_83 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs", label="char[] dst = new char[remainingCharCount + charsRequired + 1]", span="224-224"];
m6_74 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs", label="return 0;", span="200-200"];
m6_92 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs", label="int attemptCharReadCount = _chars.Length - _charsUsed - 1", span="244-244"];
m6_81 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs", label="int remainingCharCount = _charsUsed - _charPos", span="219-219"];
m6_78 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs", label="char[] dst = new char[newArrayLength]", span="211-211"];
m6_79 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs", label="BlockCopyChars(_chars, 0, dst, 0, _chars.Length)", span="213-213"];
m6_80 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs", label="_chars = dst", span="215-215"];
m6_84 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs", label="remainingCharCount > 0", span="226-226"];
m6_85 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs", label="BlockCopyChars(_chars, _charPos, dst, 0, remainingCharCount)", span="227-227"];
m6_87 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs", label="remainingCharCount > 0", span="234-234"];
m6_88 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs", label="BlockCopyChars(_chars, _charPos, _chars, 0, remainingCharCount)", span="235-235"];
m6_91 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs", label="_charsUsed = remainingCharCount", span="240-240"];
m6_86 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs", label="_chars = dst", span="229-229"];
m6_89 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs", label="_lineStartPos -= _charPos", span="238-238"];
m6_90 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs", label="_charPos = 0", span="239-239"];
m6_93 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs", label="int charsRead = _reader.Read(_chars, _charsUsed, attemptCharReadCount)", span="246-246"];
m6_94 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs", label="_charsUsed += charsRead", span="248-248"];
m6_95 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs", label="charsRead == 0", span="250-250"];
m6_98 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs", label="return charsRead;", span="254-254"];
m6_96 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs", label="_isEndOfFile = true", span="251-251"];
m6_97 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs", label="_chars[_charsUsed] = '\0'", span="253-253"];
m6_99 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", span="197-197"];
m6_561 [cluster="Newtonsoft.Json.JsonTextReader.ParseUndefined()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseUndefined()", span="1458-1458"];
m6_781 [cluster="Newtonsoft.Json.JsonTextReader.ParseUndefined()", file="JsonTextReader.cs", label="MatchValueWithTrailingSeperator(JsonConvert.Undefined)", span="1460-1460"];
m6_782 [cluster="Newtonsoft.Json.JsonTextReader.ParseUndefined()", file="JsonTextReader.cs", label="SetToken(JsonToken.Undefined)", span="1462-1462"];
m6_783 [cluster="Newtonsoft.Json.JsonTextReader.ParseUndefined()", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Error parsing undefined value.'');", span="1466-1466"];
m6_784 [cluster="Newtonsoft.Json.JsonTextReader.ParseUndefined()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseUndefined()", span="1458-1458"];
m6_289 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseUnicode()", span="615-615"];
m6_303 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonTextReader.cs", label="char writeChar", span="617-617"];
m6_304 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonTextReader.cs", label="EnsureChars(4, true)", span="618-618"];
m6_310 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonTextReader.cs", label="return writeChar;", span="630-630"];
m6_305 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonTextReader.cs", label="string hexValues = new string(_chars, _charPos, 4)", span="620-620"];
m6_309 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Unexpected end while parsing unicode character.'');", span="628-628"];
m6_306 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonTextReader.cs", label="char hexChar = Convert.ToChar(int.Parse(hexValues, NumberStyles.HexNumber, NumberFormatInfo.InvariantInfo))", span="621-621"];
m6_307 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonTextReader.cs", label="writeChar = hexChar", span="622-622"];
m6_308 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonTextReader.cs", label="_charPos += 4", span="624-624"];
m6_311 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseUnicode()", span="615-615"];
m6_120 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.Read()", span="299-299"];
m6_121 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs", label="_readType = ReadType.Read", span="301-301"];
m6_122 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs", label="!ReadInternal()", span="302-302"];
m6_123 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs", label="SetToken(JsonToken.None)", span="304-304"];
m6_125 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs", label="return true;", span="308-308"];
m6_124 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs", label="return false;", span="305-305"];
m6_126 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.Read()", span="299-299"];
m6_403 [cluster="char.IsWhiteSpace(char)", file="JsonTextReader.cs", label="Entry char.IsWhiteSpace(char)", span="0-0"];
m6_554 [cluster="Newtonsoft.Json.JsonTextReader.ParseFalse()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseFalse()", span="1470-1470"];
m6_785 [cluster="Newtonsoft.Json.JsonTextReader.ParseFalse()", file="JsonTextReader.cs", label="MatchValueWithTrailingSeperator(JsonConvert.False)", span="1472-1472"];
m6_786 [cluster="Newtonsoft.Json.JsonTextReader.ParseFalse()", file="JsonTextReader.cs", label="SetToken(JsonToken.Boolean, false)", span="1474-1474"];
m6_787 [cluster="Newtonsoft.Json.JsonTextReader.ParseFalse()", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Error parsing boolean value.'');", span="1478-1478"];
m6_788 [cluster="Newtonsoft.Json.JsonTextReader.ParseFalse()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseFalse()", span="1470-1470"];
m6_48 [cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", span="174-174"];
m6_59 [cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonTextReader.cs", label="int length = _chars.Length", span="178-178"];
m6_60 [cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonTextReader.cs", label="length - _charPos <= length * 0.1", span="179-179"];
m6_61 [cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonTextReader.cs", label="int count = _charsUsed - _charPos", span="181-181"];
m6_62 [cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonTextReader.cs", label="count > 0", span="182-182"];
m6_63 [cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonTextReader.cs", label="BlockCopyChars(_chars, _charPos, _chars, 0, count)", span="183-183"];
m6_66 [cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonTextReader.cs", label="_charsUsed = count", span="187-187"];
m6_64 [cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonTextReader.cs", label="_lineStartPos -= _charPos", span="185-185"];
m6_65 [cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonTextReader.cs", label="_charPos = 0", span="186-186"];
m6_67 [cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonTextReader.cs", label="_chars[_charsUsed] = '\0'", span="188-188"];
m6_68 [cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", span="174-174"];
m6_53 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(string, Newtonsoft.Json.DateParseHandling, Newtonsoft.Json.DateTimeZoneHandling, out object)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(string, Newtonsoft.Json.DateParseHandling, Newtonsoft.Json.DateTimeZoneHandling, out object)", span="286-286"];
m6_557 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseNumberNaN()", span="1512-1512"];
m6_802 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN()", file="JsonTextReader.cs", label="MatchValueWithTrailingSeperator(JsonConvert.NaN)", span="1514-1514"];
m6_803 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN()", file="JsonTextReader.cs", label="_floatParseHandling == FloatParseHandling.Decimal", span="1516-1516"];
m6_806 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN()", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Error parsing NaN value.'');", span="1523-1523"];
m6_804 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN()", file="JsonTextReader.cs", label="throw new JsonReaderException(''Cannot read NaN as a decimal.'');", span="1517-1517"];
m6_805 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN()", file="JsonTextReader.cs", label="SetToken(JsonToken.Float, double.NaN)", span="1519-1519"];
m6_807 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseNumberNaN()", span="1512-1512"];
m6_733 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.MatchValue(string)", span="1367-1367"];
m6_734 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonTextReader.cs", label="!EnsureChars(value.Length - 1, true)", span="1369-1369"];
m6_737 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonTextReader.cs", label="i < value.Length", span="1372-1372"];
m6_738 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonTextReader.cs", label="_chars[_charPos + i] != value[i]", span="1374-1374"];
m6_741 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonTextReader.cs", label="_charPos += value.Length", span="1380-1380"];
m6_735 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonTextReader.cs", label="return false;", span="1370-1370"];
m6_736 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonTextReader.cs", label="int i = 0", span="1372-1372"];
m6_740 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonTextReader.cs", label="i++", span="1372-1372"];
m6_739 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonTextReader.cs", label="return false;", span="1376-1376"];
m6_742 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonTextReader.cs", label="return true;", span="1382-1382"];
m6_743 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.MatchValue(string)", span="1367-1367"];
m6_183 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseValue()", span="902-902"];
m6_475 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label=true, span="904-904"];
m6_476 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="char currentChar = _chars[_charPos]", span="906-906"];
m6_477 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label=currentChar, span="908-908"];
m6_485 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="ParseString(currentChar)", span="923-923"];
m6_546 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="char.IsWhiteSpace(currentChar)", span="999-999"];
m6_548 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="char.IsNumber(currentChar) || currentChar == '-' || currentChar == '.'", span="1005-1005"];
m6_551 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Unexpected character encountered while parsing value: {0}.''.FormatWith(CultureInfo.InvariantCulture, currentChar));", span="1012-1012"];
m6_478 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="'\0'", span="910-910"];
m6_483 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="''''", span="921-921"];
m6_487 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="'t'", span="925-925"];
m6_490 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="'f'", span="928-928"];
m6_493 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="'n'", span="931-931"];
m6_503 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="'N'", span="948-948"];
m6_506 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="'I'", span="951-951"];
m6_509 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="'-'", span="954-954"];
m6_514 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="'/'", span="960-960"];
m6_517 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="'u'", span="963-963"];
m6_520 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="'{'", span="966-966"];
m6_524 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="'['", span="970-970"];
m6_528 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="']'", span="974-974"];
m6_532 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="','", span="978-978"];
m6_535 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="')'", span="983-983"];
m6_539 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="StringUtils.CarriageReturn", span="987-987"];
m6_541 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="StringUtils.LineFeed", span="990-990"];
m6_543 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="' '", span="993-993"];
m6_479 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="_charsUsed == _charPos", span="911-911"];
m6_480 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="ReadData(false) == 0", span="913-913"];
m6_482 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="_charPos++", span="918-918"];
m6_481 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="return false;", span="914-914"];
m6_484 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="'\''", span="922-922"];
m6_486 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="return true;", span="924-924"];
m6_488 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="ParseTrue()", span="926-926"];
m6_489 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="return true;", span="927-927"];
m6_491 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="ParseFalse()", span="929-929"];
m6_492 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="return true;", span="930-930"];
m6_494 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="EnsureChars(1, true)", span="932-932"];
m6_495 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="char next = _chars[_charPos + 1]", span="934-934"];
m6_501 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Unexpected end.'');", span="945-945"];
m6_496 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="next == 'u'", span="936-936"];
m6_498 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="next == 'e'", span="938-938"];
m6_497 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="ParseNull()", span="937-937"];
m6_499 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="ParseConstructor()", span="939-939"];
m6_500 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Unexpected character encountered while parsing value: {0}.''.FormatWith(CultureInfo.InvariantCulture, _chars[_charPos]));", span="941-941"];
m6_502 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="return true;", span="947-947"];
m6_504 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="ParseNumberNaN()", span="949-949"];
m6_505 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="return true;", span="950-950"];
m6_507 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="ParseNumberPositiveInfinity()", span="952-952"];
m6_508 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="return true;", span="953-953"];
m6_510 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="EnsureChars(1, true) && _chars[_charPos + 1] == 'I'", span="955-955"];
m6_511 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="ParseNumberNegativeInfinity()", span="956-956"];
m6_512 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="ParseNumber()", span="958-958"];
m6_513 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="return true;", span="959-959"];
m6_515 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="ParseComment()", span="961-961"];
m6_516 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="return true;", span="962-962"];
m6_518 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="ParseUndefined()", span="964-964"];
m6_519 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="return true;", span="965-965"];
m6_521 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="_charPos++", span="967-967"];
m6_522 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="SetToken(JsonToken.StartObject)", span="968-968"];
m6_523 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="return true;", span="969-969"];
m6_525 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="_charPos++", span="971-971"];
m6_526 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="SetToken(JsonToken.StartArray)", span="972-972"];
m6_527 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="return true;", span="973-973"];
m6_529 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="_charPos++", span="975-975"];
m6_530 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="SetToken(JsonToken.EndArray)", span="976-976"];
m6_531 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="return true;", span="977-977"];
m6_533 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="SetToken(JsonToken.Undefined)", span="981-981"];
m6_534 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="return true;", span="982-982"];
m6_536 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="_charPos++", span="984-984"];
m6_537 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="SetToken(JsonToken.EndConstructor)", span="985-985"];
m6_538 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="return true;", span="986-986"];
m6_540 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="ProcessCarriageReturn(false)", span="988-988"];
m6_542 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="ProcessLineFeed()", span="991-991"];
m6_544 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="StringUtils.Tab", span="994-994"];
m6_545 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="_charPos++", span="996-996"];
m6_547 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="_charPos++", span="1002-1002"];
m6_549 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="ParseNumber()", span="1007-1007"];
m6_550 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="return true;", span="1008-1008"];
m6_552 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseValue()", span="902-902"];
m6_148 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", span="693-693"];
m6_703 [cluster="Unk.Parse", file="JsonTextReader.cs", label="Entry Unk.Parse", span=""];
m6_430 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseProperty()", span="819-819"];
m6_431 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs", label="char firstChar = _chars[_charPos]", span="821-821"];
m6_432 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs", label="char quoteChar", span="822-822"];
m6_433 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs", label="firstChar == '''' || firstChar == '\''", span="824-824"];
m6_435 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs", label="quoteChar = firstChar", span="827-827"];
m6_438 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs", label="ValidIdentifierChar(firstChar)", span="831-831"];
m6_449 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs", label="_quoteChar = quoteChar", span="852-852"];
m6_434 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs", label="_charPos++", span="826-826"];
m6_436 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs", label="ShiftBufferIfNeeded()", span="828-828"];
m6_437 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs", label="ReadStringIntoBuffer(quoteChar)", span="829-829"];
m6_439 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs", label="quoteChar = '\0'", span="833-833"];
m6_442 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Invalid property identifier character: {0}.''.FormatWith(CultureInfo.InvariantCulture, _chars[_charPos]));", span="839-839"];
m6_440 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs", label="ShiftBufferIfNeeded()", span="834-834"];
m6_441 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs", label="ParseUnquotedProperty()", span="835-835"];
m6_443 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs", label="string propertyName = _stringReference.ToString()", span="842-842"];
m6_444 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs", label="EatWhitespace(false)", span="844-844"];
m6_448 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs", label="SetToken(JsonToken.PropertyName, propertyName)", span="851-851"];
m6_445 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs", label="_chars[_charPos] != ':'", span="846-846"];
m6_446 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Invalid character after parsing property name. Expected ':' but got: {0}.''.FormatWith(CultureInfo.InvariantCulture, _chars[_charPos]));", span="847-847"];
m6_447 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs", label="_charPos++", span="849-849"];
m6_450 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs", label="ClearRecentString()", span="853-853"];
m6_451 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs", label="return true;", span="855-855"];
m6_452 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseProperty()", span="819-819"];
m6_291 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsHighSurrogate(char)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.IsHighSurrogate(char)", span="182-182"];
m6_315 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", span="633-633"];
m6_316 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="int charPos = _charPos", span="635-635"];
m6_317 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label=true, span="637-637"];
m6_318 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="_chars[charPos++]", span="639-639"];
m6_319 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="'\0'", span="641-641"];
m6_327 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="'-'", span="655-655"];
m6_354 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="_charPos = charPos - 1", span="684-684"];
m6_320 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="_charsUsed == charPos - 1", span="642-642"];
m6_321 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="charPos--", span="644-644"];
m6_325 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="_charPos = charPos - 1", span="651-651"];
m6_322 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="_charPos = charPos", span="645-645"];
m6_323 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="ReadData(true) == 0", span="646-646"];
m6_324 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="return;", span="647-647"];
m6_326 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="return;", span="652-652"];
m6_328 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="'+'", span="656-656"];
m6_329 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="'a'", span="657-657"];
m6_330 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="'A'", span="658-658"];
m6_331 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="'b'", span="659-659"];
m6_332 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="'B'", span="660-660"];
m6_333 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="'c'", span="661-661"];
m6_334 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="'C'", span="662-662"];
m6_335 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="'d'", span="663-663"];
m6_336 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="'D'", span="664-664"];
m6_337 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="'e'", span="665-665"];
m6_338 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="'E'", span="666-666"];
m6_339 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="'f'", span="667-667"];
m6_340 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="'F'", span="668-668"];
m6_341 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="'x'", span="669-669"];
m6_342 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="'X'", span="670-670"];
m6_343 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="'.'", span="671-671"];
m6_344 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="'0'", span="672-672"];
m6_345 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="'1'", span="673-673"];
m6_346 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="'2'", span="674-674"];
m6_347 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="'3'", span="675-675"];
m6_348 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="'4'", span="676-676"];
m6_349 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="'5'", span="677-677"];
m6_350 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="'6'", span="678-678"];
m6_351 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="'7'", span="679-679"];
m6_352 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="'8'", span="680-680"];
m6_353 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="'9'", span="681-681"];
m6_355 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="return;", span="685-685"];
m6_356 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", span="633-633"];
m6_52 [cluster="Newtonsoft.Json.Utilities.StringReference.ToString()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Utilities.StringReference.ToString()", span="55-55"];
m6_294 [cluster="Newtonsoft.Json.JsonTextReader.ProcessLineFeed()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ProcessLineFeed()", span="1018-1018"];
m6_563 [cluster="Newtonsoft.Json.JsonTextReader.ProcessLineFeed()", file="JsonTextReader.cs", label="_charPos++", span="1020-1020"];
m6_564 [cluster="Newtonsoft.Json.JsonTextReader.ProcessLineFeed()", file="JsonTextReader.cs", label="OnNewLine(_charPos)", span="1021-1021"];
m6_565 [cluster="Newtonsoft.Json.JsonTextReader.ProcessLineFeed()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ProcessLineFeed()", span="1018-1018"];
m6_821 [file="JsonTextReader.cs", label="Newtonsoft.Json.JsonTextReader", span=""];
m7_393 [cluster="System.IO.StringWriter.ToString()", file="JsonTextReaderTest.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m7_1460 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", span="2352-2352"];
m7_1461 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonTextReaderTest.cs", label="string json = ''{hi:1, ''", span="2354-2354"];
m7_1462 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2355-2355"];
m7_1463 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2357-2357"];
m7_1464 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2358-2358"];
m7_1465 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2359-2359"];
m7_1466 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(reader.Read())", span="2360-2360"];
m7_1467 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", span="2352-2352"];
m7_129 [cluster="System.IO.MemoryStream.MemoryStream()", file="JsonTextReaderTest.cs", label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0"];
m7_1211 [cluster="System.TimeSpan.Add(System.TimeSpan)", file="JsonTextReaderTest.cs", label="Entry System.TimeSpan.Add(System.TimeSpan)", span="0-0"];
m7_967 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", span="1578-1578"];
m7_968 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonTextReaderTest.cs", label="StringReader s = new StringReader(@''''''SGVsbG8gd29ybGQu'''''')", span="1580-1580"];
m7_969 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(s)", span="1581-1581"];
m7_970 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonTextReaderTest.cs", label="byte[] data = reader.ReadAsBytes()", span="1583-1583"];
m7_971 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonTextReaderTest.cs", label="Assert.IsNotNull(data)", span="1584-1584"];
m7_972 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonTextReaderTest.cs", label="string text = Encoding.UTF8.GetString(data, 0, data.Length)", span="1586-1586"];
m7_973 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''Hello world.'', text)", span="1587-1587"];
m7_974 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", span="1578-1578"];
m7_198 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", span="444-444"];
m7_199 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="string input = @''{\r\n  CPU: 'Intel',\r\n  Drives: [\r\n    'DVD read/writer',\r\n    ''''500 gigabyte hard drive''''\r\n  ]\r\n}''", span="446-452"];
m7_200 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="StringReader sr = new StringReader(input)", span="454-454"];
m7_201 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="JsonTextReader jsonReader = new JsonTextReader(sr)", span="456-456"];
m7_202 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.None)", span="462-462"];
m7_203 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0, jsonReader.LineNumber)", span="463-463"];
m7_204 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0, jsonReader.LinePosition)", span="464-464"];
m7_205 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="466-466"];
m7_206 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.StartObject)", span="467-467"];
m7_207 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, jsonReader.LineNumber)", span="468-468"];
m7_208 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, jsonReader.LinePosition)", span="469-469"];
m7_209 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="471-471"];
m7_210 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.PropertyName)", span="472-472"];
m7_211 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.Value, ''CPU'')", span="473-473"];
m7_212 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, jsonReader.LineNumber)", span="474-474"];
m7_213 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(7, jsonReader.LinePosition)", span="475-475"];
m7_214 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="477-477"];
m7_215 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.String, jsonReader.TokenType)", span="478-478"];
m7_216 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''Intel'', jsonReader.Value)", span="479-479"];
m7_217 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, jsonReader.LineNumber)", span="480-480"];
m7_218 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(15, jsonReader.LinePosition)", span="481-481"];
m7_219 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="483-483"];
m7_220 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.PropertyName)", span="484-484"];
m7_221 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.Value, ''Drives'')", span="485-485"];
m7_222 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(3, jsonReader.LineNumber)", span="486-486"];
m7_223 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(10, jsonReader.LinePosition)", span="487-487"];
m7_224 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="489-489"];
m7_225 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.StartArray)", span="490-490"];
m7_226 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(3, jsonReader.LineNumber)", span="491-491"];
m7_227 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(12, jsonReader.LinePosition)", span="492-492"];
m7_228 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="494-494"];
m7_229 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.String)", span="495-495"];
m7_230 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.Value, ''DVD read/writer'')", span="496-496"];
m7_231 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.QuoteChar, '\'')", span="497-497"];
m7_232 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(4, jsonReader.LineNumber)", span="498-498"];
m7_233 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(22, jsonReader.LinePosition)", span="499-499"];
m7_234 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="501-501"];
m7_235 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.String)", span="502-502"];
m7_236 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.Value, ''500 gigabyte hard drive'')", span="503-503"];
m7_237 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.QuoteChar, '''')", span="504-504"];
m7_238 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(5, jsonReader.LineNumber)", span="505-505"];
m7_239 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(30, jsonReader.LinePosition)", span="506-506"];
m7_240 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="508-508"];
m7_241 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.EndArray)", span="509-509"];
m7_242 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(6, jsonReader.LineNumber)", span="510-510"];
m7_243 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(4, jsonReader.LinePosition)", span="511-511"];
m7_244 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="513-513"];
m7_245 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.EndObject)", span="514-514"];
m7_246 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(7, jsonReader.LineNumber)", span="515-515"];
m7_247 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, jsonReader.LinePosition)", span="516-516"];
m7_248 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(jsonReader.Read())", span="518-518"];
m7_249 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", span="444-444"];
m7_1243 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="JsonTextReaderTest.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m7_551 [cluster="Unk.IsNull", file="JsonTextReaderTest.cs", label="Entry Unk.IsNull", span=""];
m7_829 [cluster="System.Text.StringBuilder.StringBuilder()", file="JsonTextReaderTest.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m7_1655 [cluster="double.ToString(string)", file="JsonTextReaderTest.cs", label="Entry double.ToString(string)", span="0-0"];
m7_604 [cluster="System.IO.StringReader.ReadLine()", file="JsonTextReaderTest.cs", label="Entry System.IO.StringReader.ReadLine()", span="0-0"];
m7_839 [cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="772-772"];
m7_1097 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", span="1772-1772"];
m7_1098 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[1''))", span="1774-1774"];
m7_1099 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unexpected end when reading bytes. Path '[0]', line 1, position 2.'',\r\n                () => { reader.ReadAsBytes(); })", span="1776-1778"];
m7_1100 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", span="1772-1772"];
m7_1476 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", span="2377-2377"];
m7_1477 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonTextReaderTest.cs", label="string json = ''{}''", span="2379-2379"];
m7_1478 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2380-2380"];
m7_1479 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2382-2382"];
m7_1480 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2383-2383"];
m7_1481 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2385-2385"];
m7_1482 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2386-2386"];
m7_1483 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", span="2377-2377"];
m7_116 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="JsonTextReaderTest.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m7_843 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="769-769"];
m7_1796 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", span="353-353"];
m7_996 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", span="1618-1618"];
m7_997 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs", label="StringReader s = new StringReader(@''[0372, 0xFA, 0XFA]'')", span="1620-1620"];
m7_998 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs", label="JsonTextReader jsonReader = new JsonTextReader(s)", span="1621-1621"];
m7_999 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonReader.Read())", span="1623-1623"];
m7_1000 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="1624-1624"];
m7_1001 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1626-1626"];
m7_1002 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1627-1627"];
m7_1003 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(long), jsonReader.ValueType)", span="1628-1628"];
m7_1004 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs", label="Assert.AreEqual((long)250, (long)jsonReader.Value)", span="1629-1629"];
m7_1005 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1631-1631"];
m7_1006 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1632-1632"];
m7_1007 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(long), jsonReader.ValueType)", span="1633-1633"];
m7_1008 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs", label="Assert.AreEqual((long)250, (long)jsonReader.Value)", span="1634-1634"];
m7_1009 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1636-1636"];
m7_1010 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1637-1637"];
m7_1011 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(long), jsonReader.ValueType)", span="1638-1638"];
m7_1012 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs", label="Assert.AreEqual((long)250, (long)jsonReader.Value)", span="1639-1639"];
m7_1013 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonReader.Read())", span="1641-1641"];
m7_1014 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="1642-1642"];
m7_1015 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(jsonReader.Read())", span="1644-1644"];
m7_1016 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", span="1618-1618"];
m7_552 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", span="972-972"];
m7_553 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="JsonTextReaderTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''{aww''))", span="974-974"];
m7_554 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="975-975"];
m7_555 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unexpected end while parsing unquoted property name. Path '', line 1, position 4.'',\r\n                () => { reader.Read(); })", span="977-979"];
m7_556 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", span="972-972"];
m7_1886 [cluster="Newtonsoft.Json.Tests.SlowStream.SetLength(long)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.SlowStream.SetLength(long)", span="3019-3019"];
m7_1887 [cluster="Newtonsoft.Json.Tests.SlowStream.SetLength(long)", file="JsonTextReaderTest.cs", label="throw new NotSupportedException();", span="3021-3021"];
m7_1888 [cluster="Newtonsoft.Json.Tests.SlowStream.SetLength(long)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.SlowStream.SetLength(long)", span="3019-3019"];
m7_1889 [cluster="Newtonsoft.Json.Tests.SlowStream.Write(byte[], int, int)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.SlowStream.Write(byte[], int, int)", span="3024-3024"];
m7_1890 [cluster="Newtonsoft.Json.Tests.SlowStream.Write(byte[], int, int)", file="JsonTextReaderTest.cs", label="throw new NotSupportedException();", span="3026-3026"];
m7_1891 [cluster="Newtonsoft.Json.Tests.SlowStream.Write(byte[], int, int)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.SlowStream.Write(byte[], int, int)", span="3024-3024"];
m7_1499 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", span="2413-2413"];
m7_1500 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="JsonTextReaderTest.cs", label="string json = ''new Date,()''", span="2415-2415"];
m7_1501 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2416-2416"];
m7_1502 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unexpected character while parsing constructor: ,. Path '', line 1, position 8.'',\r\n                () => { Assert.IsTrue(reader.Read()); })", span="2418-2420"];
m7_1503 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", span="2413-2413"];
m7_1139 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", span="1841-1841"];
m7_1140 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs", label="string json = ''{\''Offset\'':\''\\/Date(946663200000+0600)\\/\''}''", span="1843-1843"];
m7_1141 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1845-1845"];
m7_1142 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1847-1847"];
m7_1143 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1848-1848"];
m7_1144 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1850-1850"];
m7_1145 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1851-1851"];
m7_1146 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs", label="reader.ReadAsDateTimeOffset()", span="1853-1853"];
m7_1147 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="1854-1854"];
m7_1148 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="1855-1855"];
m7_1149 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), reader.Value)", span="1856-1856"];
m7_1150 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1858-1858"];
m7_1151 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1859-1859"];
m7_1152 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", span="1841-1841"];
m7_837 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(decimal)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(decimal)", span="931-931"];
m7_975 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsBytes()", span="317-317"];
m7_435 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", span="790-790"];
m7_436 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonTextReaderTest.cs", label="long i = int.MaxValue", span="792-792"];
m7_437 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(i.ToString(CultureInfo.InvariantCulture)))", span="794-794"];
m7_442 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonTextReaderTest.cs", label="long total = j + i", span="800-800"];
m7_438 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonTextReaderTest.cs", label="reader.Read()", span="795-795"];
m7_439 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(long), reader.ValueType)", span="796-796"];
m7_443 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                    ''JSON integer '' + total + '' is too large or small for an Int32. Path '', line 1, position 10.'',\r\n                    () =>\r\n                    {\r\n                        reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)));\r\n                        reader.ReadAsInt32();\r\n                    })", span="801-807"];
m7_440 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonTextReaderTest.cs", label="int j = 1", span="798-798"];
m7_441 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonTextReaderTest.cs", label="j < 1000", span="798-798"];
m7_444 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonTextReaderTest.cs", label="j++", span="798-798"];
m7_445 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", span="790-790"];
m7_391 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(int)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(int)", span="379-379"];
m7_1600 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", span="2575-2575"];
m7_1601 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JsonTextReaderTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''{}}''))", span="2577-2577"];
m7_1602 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2578-2578"];
m7_1603 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2579-2579"];
m7_1604 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Additional text encountered after finished reading JSON content: }. Path '', line 1, position 2.'',\r\n                () => { reader.Read(); })", span="2581-2583"];
m7_1605 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", span="2575-2575"];
m7_534 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsBytes()", span="372-372"];
m7_1017 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", span="1648-1648"];
m7_1018 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs", label="StringReader s = new StringReader(@''[0372, 0xFA, 0XFA]'')", span="1650-1650"];
m7_1019 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs", label="JsonTextReader jsonReader = new JsonTextReader(s)", span="1651-1651"];
m7_1020 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonReader.Read())", span="1653-1653"];
m7_1021 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="1654-1654"];
m7_1022 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs", label="jsonReader.ReadAsInt32()", span="1656-1656"];
m7_1023 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1657-1657"];
m7_1024 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(int), jsonReader.ValueType)", span="1658-1658"];
m7_1025 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(250, jsonReader.Value)", span="1659-1659"];
m7_1026 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs", label="jsonReader.ReadAsInt32()", span="1661-1661"];
m7_1027 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1662-1662"];
m7_1028 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(int), jsonReader.ValueType)", span="1663-1663"];
m7_1029 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(250, jsonReader.Value)", span="1664-1664"];
m7_1030 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs", label="jsonReader.ReadAsInt32()", span="1666-1666"];
m7_1031 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1667-1667"];
m7_1032 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(int), jsonReader.ValueType)", span="1668-1668"];
m7_1033 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(250, jsonReader.Value)", span="1669-1669"];
m7_1034 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonReader.Read())", span="1671-1671"];
m7_1035 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="1672-1672"];
m7_1036 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(jsonReader.Read())", span="1674-1674"];
m7_1037 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", span="1648-1648"];
m7_1227 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", span="1969-1969"];
m7_1228 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs", label="string json = @''{''''Offset'''':''''1/30/2011''''}''", span="1971-1971"];
m7_1229 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1973-1973"];
m7_1230 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs", label="reader.Culture = new CultureInfo(''en-US'')", span="1974-1974"];
m7_1231 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1976-1976"];
m7_1232 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1977-1977"];
m7_1233 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1979-1979"];
m7_1234 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1980-1980"];
m7_1235 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs", label="reader.ReadAsDateTimeOffset()", span="1982-1982"];
m7_1236 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="1983-1983"];
m7_1237 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="1984-1984"];
m7_1238 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs", label="DateTimeOffset dt = (DateTimeOffset)reader.Value", span="1986-1986"];
m7_1240 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1989-1989"];
m7_1241 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1990-1990"];
m7_1239 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(new DateTime(2011, 1, 30, 0, 0, 0, DateTimeKind.Unspecified), dt.DateTime)", span="1987-1987"];
m7_1242 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", span="1969-1969"];
m7_1741 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", span="2784-2784"];
m7_1742 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="string json = @''[''''1970-01-01T00:00:00Z'''',''''\/Date(0)\/'''']''", span="2786-2786"];
m7_1743 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2788-2788"];
m7_1753 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(json))", span="2801-2801"];
m7_1763 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(json))", span="2814-2814"];
m7_1773 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(json))", span="2827-2827"];
m7_1783 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(json))", span="2840-2840"];
m7_1744 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="reader.DateParseHandling = Json.DateParseHandling.DateTime", span="2789-2789"];
m7_1745 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2791-2791"];
m7_1746 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2792-2792"];
m7_1747 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc), reader.Value)", span="2793-2793"];
m7_1748 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(DateTime), reader.ValueType)", span="2794-2794"];
m7_1749 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2795-2795"];
m7_1750 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc), reader.Value)", span="2796-2796"];
m7_1751 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(DateTime), reader.ValueType)", span="2797-2797"];
m7_1752 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2798-2798"];
m7_1754 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="reader.DateParseHandling = Json.DateParseHandling.DateTimeOffset", span="2802-2802"];
m7_1755 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2804-2804"];
m7_1756 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2805-2805"];
m7_1757 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero), reader.Value)", span="2806-2806"];
m7_1758 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2807-2807"];
m7_1759 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2808-2808"];
m7_1760 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero), reader.Value)", span="2809-2809"];
m7_1761 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2810-2810"];
m7_1762 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2811-2811"];
m7_1764 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="reader.DateParseHandling = Json.DateParseHandling.None", span="2815-2815"];
m7_1765 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2817-2817"];
m7_1766 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2818-2818"];
m7_1767 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(@''1970-01-01T00:00:00Z'', reader.Value)", span="2819-2819"];
m7_1768 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(string), reader.ValueType)", span="2820-2820"];
m7_1769 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2821-2821"];
m7_1770 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(@''/Date(0)/'', reader.Value)", span="2822-2822"];
m7_1771 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(string), reader.ValueType)", span="2823-2823"];
m7_1772 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2824-2824"];
m7_1774 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="reader.DateParseHandling = Json.DateParseHandling.DateTime", span="2828-2828"];
m7_1775 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2830-2830"];
m7_1776 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="reader.ReadAsDateTimeOffset()", span="2831-2831"];
m7_1777 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero), reader.Value)", span="2832-2832"];
m7_1778 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2833-2833"];
m7_1779 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="reader.ReadAsDateTimeOffset()", span="2834-2834"];
m7_1780 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero), reader.Value)", span="2835-2835"];
m7_1781 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2836-2836"];
m7_1782 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2837-2837"];
m7_1784 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="reader.DateParseHandling = Json.DateParseHandling.DateTimeOffset", span="2841-2841"];
m7_1785 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2843-2843"];
m7_1786 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="reader.ReadAsDateTime()", span="2844-2844"];
m7_1787 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc), reader.Value)", span="2845-2845"];
m7_1788 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(DateTime), reader.ValueType)", span="2846-2846"];
m7_1789 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="reader.ReadAsDateTime()", span="2847-2847"];
m7_1790 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc), reader.Value)", span="2848-2848"];
m7_1791 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(DateTime), reader.ValueType)", span="2849-2849"];
m7_1792 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2850-2850"];
m7_1793 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", span="2784-2784"];
m7_1882 [cluster="Newtonsoft.Json.Tests.SlowStream.Seek(long, System.IO.SeekOrigin)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.SlowStream.Seek(long, System.IO.SeekOrigin)", span="3014-3014"];
m7_1883 [cluster="Newtonsoft.Json.Tests.SlowStream.Seek(long, System.IO.SeekOrigin)", file="JsonTextReaderTest.cs", label="throw new NotSupportedException();", span="3016-3016"];
m7_1884 [cluster="Newtonsoft.Json.Tests.SlowStream.Seek(long, System.IO.SeekOrigin)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.SlowStream.Seek(long, System.IO.SeekOrigin)", span="3014-3014"];
m7_1051 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", span="1699-1699"];
m7_1052 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''''))", span="1701-1701"];
m7_1053 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="JsonTextReaderTest.cs", label="Assert.IsNull(reader.ReadAsBytes())", span="1703-1703"];
m7_1054 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1704-1704"];
m7_1055 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", span="1699-1699"];
m7_1609 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", span="2587-2587"];
m7_1610 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="double d", span="2589-2589"];
m7_1611 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="d = Convert.ToDouble(''6.0221418e23'', CultureInfo.InvariantCulture)", span="2591-2591"];
m7_1612 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="Console.WriteLine(d.ToString(new CultureInfo(''fr-FR'')))", span="2592-2592"];
m7_1613 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="Console.WriteLine(d.ToString(''0.#############################################################################''))", span="2593-2593"];
m7_1614 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="string json = @''[0e-10,0E-10,0.25e-5,0.3e10,6.0221418e23]''", span="2598-2598"];
m7_1615 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2600-2600"];
m7_1633 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(json))", span="2627-2627"];
m7_1616 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="reader.Read()", span="2602-2602"];
m7_1617 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="reader.Read()", span="2604-2604"];
m7_1618 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2605-2605"];
m7_1619 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0d, reader.Value)", span="2606-2606"];
m7_1620 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="reader.Read()", span="2608-2608"];
m7_1621 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2609-2609"];
m7_1622 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0d, reader.Value)", span="2610-2610"];
m7_1623 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="reader.Read()", span="2612-2612"];
m7_1624 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2613-2613"];
m7_1625 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0.0000025d, reader.Value)", span="2614-2614"];
m7_1626 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="reader.Read()", span="2616-2616"];
m7_1627 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2617-2617"];
m7_1628 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(3000000000d, reader.Value)", span="2618-2618"];
m7_1629 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="reader.Read()", span="2620-2620"];
m7_1630 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2621-2621"];
m7_1631 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(602214180000000000000000d, reader.Value)", span="2622-2622"];
m7_1632 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="reader.Read()", span="2624-2624"];
m7_1634 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="reader.Read()", span="2629-2629"];
m7_1635 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="reader.ReadAsDecimal()", span="2631-2631"];
m7_1636 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2632-2632"];
m7_1637 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0m, reader.Value)", span="2633-2633"];
m7_1638 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="reader.ReadAsDecimal()", span="2635-2635"];
m7_1639 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2636-2636"];
m7_1640 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0m, reader.Value)", span="2637-2637"];
m7_1641 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="reader.ReadAsDecimal()", span="2639-2639"];
m7_1642 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2640-2640"];
m7_1643 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0.0000025m, reader.Value)", span="2641-2641"];
m7_1644 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="reader.ReadAsDecimal()", span="2643-2643"];
m7_1645 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2644-2644"];
m7_1646 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(3000000000m, reader.Value)", span="2645-2645"];
m7_1647 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="reader.ReadAsDecimal()", span="2647-2647"];
m7_1648 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2648-2648"];
m7_1649 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(602214180000000000000000m, reader.Value)", span="2649-2649"];
m7_1650 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="reader.Read()", span="2651-2651"];
m7_1651 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", span="2587-2587"];
m7_1182 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", span="1903-1903"];
m7_1183 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs", label="string json = ''{\''Offset\'':\''\\/Date(946663200000+06)\\/\''}''", span="1905-1905"];
m7_1184 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1907-1907"];
m7_1185 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1909-1909"];
m7_1186 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1910-1910"];
m7_1187 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1912-1912"];
m7_1188 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1913-1913"];
m7_1189 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs", label="reader.ReadAsDateTimeOffset()", span="1915-1915"];
m7_1190 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="1916-1916"];
m7_1191 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="1917-1917"];
m7_1192 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), reader.Value)", span="1918-1918"];
m7_1193 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1920-1920"];
m7_1194 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1921-1921"];
m7_1195 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", span="1903-1903"];
m7_91 [cluster="object.ToString()", file="JsonTextReaderTest.cs", label="Entry object.ToString()", span="0-0"];
m7_545 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", span="962-962"];
m7_546 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JsonTextReaderTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''[  ''))", span="964-964"];
m7_547 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="965-965"];
m7_548 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JsonTextReaderTest.cs", label="Assert.IsNull(reader.ReadAsBytes())", span="967-967"];
m7_549 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="968-968"];
m7_550 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", span="962-962"];
m7_446 [cluster="long.ToString(System.IFormatProvider)", file="JsonTextReaderTest.cs", label="Entry long.ToString(System.IFormatProvider)", span="0-0"];
m7_1584 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", span="2549-2549"];
m7_1585 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs", label="string json = @''[0,1,2 , 3]''", span="2551-2551"];
m7_1586 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2553-2553"];
m7_1587 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs", label="reader.Read()", span="2555-2555"];
m7_1588 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2556-2556"];
m7_1589 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs", label="reader.Read()", span="2558-2558"];
m7_1590 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2559-2559"];
m7_1591 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs", label="reader.Read()", span="2561-2561"];
m7_1592 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2562-2562"];
m7_1593 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs", label="reader.Read()", span="2564-2564"];
m7_1594 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2565-2565"];
m7_1595 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs", label="reader.Read()", span="2567-2567"];
m7_1596 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2568-2568"];
m7_1597 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs", label="reader.Read()", span="2570-2570"];
m7_1598 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2571-2571"];
m7_1599 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", span="2549-2549"];
m7_833 [cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="357-357"];
m7_1226 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JsonTextReaderTest.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m7_1577 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", span="2537-2537"];
m7_1578 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonTextReaderTest.cs", label="string json = @''0x20''", span="2539-2539"];
m7_1579 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2541-2541"];
m7_1580 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonTextReaderTest.cs", label="reader.ReadAsDecimal()", span="2543-2543"];
m7_1581 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2544-2544"];
m7_1582 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(32m, reader.Value)", span="2545-2545"];
m7_1583 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", span="2537-2537"];
m7_1298 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeperator()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeperator()", span="2077-2077"];
m7_1299 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeperator()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''nullz''))", span="2079-2079"];
m7_1300 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeperator()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Error parsing null value. Path '', line 1, position 4.'',\r\n                () => { reader.Read(); })", span="2081-2083"];
m7_1301 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeperator()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeperator()", span="2077-2077"];
m7_1795 [cluster="System.DateTimeOffset.DateTimeOffset(long, System.TimeSpan)", file="JsonTextReaderTest.cs", label="Entry System.DateTimeOffset.DateTimeOffset(long, System.TimeSpan)", span="0-0"];
m7_725 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", span="1251-1251"];
m7_726 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = null", span="1253-1253"];
m7_727 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(''1.1''))", span="1255-1255"];
m7_728 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1.1m, reader.ReadAsDecimal())", span="1256-1256"];
m7_729 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(''-1.1''))", span="1258-1258"];
m7_730 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(-1.1m, reader.ReadAsDecimal())", span="1259-1259"];
m7_731 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(''0.0''))", span="1261-1261"];
m7_732 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0.0m, reader.ReadAsDecimal())", span="1262-1262"];
m7_733 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(''-0.0''))", span="1264-1264"];
m7_734 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0, reader.ReadAsDecimal())", span="1265-1265"];
m7_735 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(''9999999999999999999999999999999999999999999999999999999999999999999999999999asdasdasd''))", span="1267-1267"];
m7_736 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(''Input string '9999999999999999999999999999999999999999999999999999999999999999999999999999a' is not a valid decimal. Path '', line 1, position 77.'', () => reader.ReadAsDecimal())", span="1268-1268"];
m7_737 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(''9999999999999999999999999999999999999999999999999999999999999999999999999999asdasdasd''))", span="1270-1270"];
m7_738 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs", label="reader.FloatParseHandling = Json.FloatParseHandling.Decimal", span="1271-1271"];
m7_739 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(''Input string '9999999999999999999999999999999999999999999999999999999999999999999999999999a' is not a valid decimal. Path '', line 1, position 77.'', () => reader.Read())", span="1272-1272"];
m7_740 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(''1E-06''))", span="1274-1274"];
m7_741 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0.000001m, reader.ReadAsDecimal())", span="1275-1275"];
m7_742 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(''''))", span="1277-1277"];
m7_743 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(null, reader.ReadAsDecimal())", span="1278-1278"];
m7_744 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(''-''))", span="1280-1280"];
m7_745 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(''Input string '-' is not a valid decimal. Path '', line 1, position 1.'', () => reader.ReadAsDecimal())", span="1281-1281"];
m7_746 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", span="1251-1251"];
m7_1260 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", span="2020-2020"];
m7_1261 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonTextReaderTest.cs", label="string json = @''{''''Name'''':1}''", span="2022-2022"];
m7_1262 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2024-2024"];
m7_1263 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2026-2026"];
m7_1264 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2027-2027"];
m7_1265 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2029-2029"];
m7_1266 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2030-2030"];
m7_1267 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonTextReaderTest.cs", label="reader.ReadAsDecimal()", span="2032-2032"];
m7_1268 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2033-2033"];
m7_1269 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="2034-2034"];
m7_1270 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1m, reader.Value)", span="2035-2035"];
m7_1271 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", span="2020-2020"];
m7_22 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", span="73-73"];
m7_23 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs", label="string json = ''[1.0,1,9.9,1E-06]''", span="75-75"];
m7_24 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="77-77"];
m7_25 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs", label="reader.FloatParseHandling = Json.FloatParseHandling.Decimal", span="78-78"];
m7_26 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="80-80"];
m7_27 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="81-81"];
m7_28 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="83-83"];
m7_29 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1.0m, reader.Value)", span="84-84"];
m7_30 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="85-85"];
m7_31 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="86-86"];
m7_32 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="88-88"];
m7_33 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1L, reader.Value)", span="89-89"];
m7_34 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(long), reader.ValueType)", span="90-90"];
m7_35 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="91-91"];
m7_36 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="93-93"];
m7_37 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(9.9m, reader.Value)", span="94-94"];
m7_38 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="95-95"];
m7_39 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="96-96"];
m7_40 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="98-98"];
m7_41 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(Convert.ToDecimal(1E-06), reader.Value)", span="99-99"];
m7_42 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="100-100"];
m7_43 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="101-101"];
m7_44 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="103-103"];
m7_45 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="104-104"];
m7_46 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", span="73-73"];
m7_618 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", span="1091-1091"];
m7_619 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs", label="string helloWorld = ''Hello world!''", span="1093-1093"];
m7_620 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs", label="byte[] helloWorldData = Encoding.UTF8.GetBytes(helloWorld)", span="1094-1094"];
m7_621 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''[1,''' + Convert.ToBase64String(helloWorldData) + @''']''))", span="1096-1096"];
m7_627 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs", label="CollectionAssert.AreEquivalent(helloWorldData, data)", span="1102-1102"];
m7_622 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1097-1097"];
m7_623 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="1098-1098"];
m7_624 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1099-1099"];
m7_625 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1100-1100"];
m7_626 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs", label="byte[] data = reader.ReadAsBytes()", span="1101-1101"];
m7_628 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Bytes, reader.TokenType)", span="1103-1103"];
m7_629 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1104-1104"];
m7_630 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="1105-1105"];
m7_631 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(reader.Read())", span="1107-1107"];
m7_632 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", span="1091-1091"];
m7_47 [cluster="System.Convert.ToDecimal(double)", file="JsonTextReaderTest.cs", label="Entry System.Convert.ToDecimal(double)", span="0-0"];
m7_1056 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", span="1708-1708"];
m7_1057 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''{''))", span="1710-1710"];
m7_1058 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unexpected end when reading bytes. Path '', line 1, position 1.'',\r\n                () => { reader.ReadAsBytes(); })", span="1712-1714"];
m7_1059 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", span="1708-1708"];
m7_1491 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", span="2400-2400"];
m7_1492 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonTextReaderTest.cs", label="string json = ''new Date()''", span="2402-2402"];
m7_1493 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2403-2403"];
m7_1494 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2405-2405"];
m7_1495 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2406-2406"];
m7_1496 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2408-2408"];
m7_1497 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2409-2409"];
m7_1498 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", span="2400-2400"];
m7_1654 [cluster="System.Console.WriteLine(string)", file="JsonTextReaderTest.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m7_1244 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", span="1994-1994"];
m7_1245 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs", label="string json = @''{''''Offset'''':''''30/1/2011''''}''", span="1996-1996"];
m7_1246 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1998-1998"];
m7_1247 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs", label="reader.Culture = new CultureInfo(''en-NZ'')", span="1999-1999"];
m7_1248 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2001-2001"];
m7_1249 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2002-2002"];
m7_1250 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2004-2004"];
m7_1251 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2005-2005"];
m7_1252 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs", label="reader.ReadAsDateTimeOffset()", span="2007-2007"];
m7_1253 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2008-2008"];
m7_1254 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2009-2009"];
m7_1255 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs", label="DateTimeOffset dt = (DateTimeOffset)reader.Value", span="2011-2011"];
m7_1257 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2014-2014"];
m7_1258 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2015-2015"];
m7_1256 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(new DateTime(2011, 1, 30, 0, 0, 0, DateTimeKind.Unspecified), dt.DateTime)", span="2012-2012"];
m7_1259 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", span="1994-1994"];
m7_130 [cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.Close()", span="1530-1530"];
m7_1068 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", span="363-363"];
m7_138 [cluster="Newtonsoft.Json.JsonReader.Read()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonReader.Read()", span="354-354"];
m7_388 [cluster="System.IO.StringWriter.StringWriter()", file="JsonTextReaderTest.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m7_452 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", span="812-812"];
m7_453 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonTextReaderTest.cs", label="long i = int.MinValue", span="814-814"];
m7_454 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(i.ToString(CultureInfo.InvariantCulture)))", span="816-816"];
m7_457 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(i, reader.Value)", span="819-819"];
m7_460 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonTextReaderTest.cs", label="long total = -j + i", span="823-823"];
m7_455 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonTextReaderTest.cs", label="reader.Read()", span="817-817"];
m7_456 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(long), reader.ValueType)", span="818-818"];
m7_461 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                    ''JSON integer '' + total + '' is too large or small for an Int32. Path '', line 1, position 11.'',\r\n                    () =>\r\n                    {\r\n                        reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)));\r\n                        reader.ReadAsInt32();\r\n                    })", span="824-830"];
m7_458 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonTextReaderTest.cs", label="int j = 1", span="821-821"];
m7_459 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonTextReaderTest.cs", label="j < 1000", span="821-821"];
m7_462 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonTextReaderTest.cs", label="j++", span="821-821"];
m7_463 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", span="812-812"];
m7_1652 [cluster="System.Convert.ToDouble(string, System.IFormatProvider)", file="JsonTextReaderTest.cs", label="Entry System.Convert.ToDouble(string, System.IFormatProvider)", span="0-0"];
m7_1111 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", span="1792-1792"];
m7_1112 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs", label="string json = @''{''''Message'''':''''Hi,I\u0092ve send you smth''''}''", span="1794-1794"];
m7_1113 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1796-1796"];
m7_1114 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1801-1801"];
m7_1115 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1802-1802"];
m7_1116 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1804-1804"];
m7_1117 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1805-1805"];
m7_1118 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''Message'', reader.Value)", span="1806-1806"];
m7_1119 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1808-1808"];
m7_1120 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1809-1809"];
m7_1121 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(@''Hi,I'' + '\u0092' + ''ve send you smth'', reader.Value)", span="1810-1810"];
m7_1122 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1812-1812"];
m7_1123 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1813-1813"];
m7_1124 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(reader.Read())", span="1815-1815"];
m7_1125 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", span="1792-1792"];
m7_1069 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", span="1729-1729"];
m7_1070 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''new Date()''))", span="1731-1731"];
m7_1071 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Error reading decimal. Unexpected token: StartConstructor. Path '', line 1, position 9.'',\r\n                () => { reader.ReadAsDecimal(); })", span="1733-1735"];
m7_1072 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", span="1729-1729"];
m7_13 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="73-73"];
m7_976 [cluster="Unk.IsNotNull", file="JsonTextReaderTest.cs", label="Entry Unk.IsNotNull", span=""];
m7_535 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", span="949-949"];
m7_536 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JsonTextReaderTest.cs", label="string helloWorld = ''Hello world!''", span="951-951"];
m7_537 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JsonTextReaderTest.cs", label="byte[] helloWorldData = Encoding.UTF8.GetBytes(helloWorld)", span="952-952"];
m7_538 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JsonTextReaderTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''''' + Convert.ToBase64String(helloWorldData)))", span="954-954"];
m7_539 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unterminated string. Expected delimiter: '. Path '', line 1, position 17.'',\r\n                () => { reader.ReadAsBytes(); })", span="956-958"];
m7_540 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", span="949-949"];
m7_1126 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", span="1819-1819"];
m7_1127 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs", label="string json = @''{''''text'''':0xabcdef12345}''", span="1821-1821"];
m7_1128 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1823-1823"];
m7_1129 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1825-1825"];
m7_1130 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1826-1826"];
m7_1131 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1828-1828"];
m7_1132 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1829-1829"];
m7_1133 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1831-1831"];
m7_1134 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1832-1832"];
m7_1135 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(11806310474565, reader.Value)", span="1833-1833"];
m7_1136 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1835-1835"];
m7_1137 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1836-1836"];
m7_1138 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", span="1819-1819"];
m7_1388 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", span="2243-2243"];
m7_1389 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs", label="string json = ''[,,, \n\r\n \0   \r  , ,    ]''", span="2245-2245"];
m7_1390 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2246-2246"];
m7_1391 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2248-2248"];
m7_1392 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2249-2249"];
m7_1393 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2251-2251"];
m7_1394 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2252-2252"];
m7_1395 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2254-2254"];
m7_1396 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2255-2255"];
m7_1397 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2257-2257"];
m7_1398 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2258-2258"];
m7_1399 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2260-2260"];
m7_1400 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2261-2261"];
m7_1401 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2263-2263"];
m7_1402 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2264-2264"];
m7_1403 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2266-2266"];
m7_1404 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2267-2267"];
m7_1405 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", span="2243-2243"];
m7_1104 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", span="1782-1782"];
m7_1105 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[1.0]''))", span="1784-1784"];
m7_1106 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unexpected token when reading bytes: Float. Path '[0]', line 1, position 4.'',\r\n                () => { reader.ReadAsBytes(); })", span="1786-1788"];
m7_1107 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", span="1782-1782"];
m7_747 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", span="326-326"];
m7_1076 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", span="1739-1739"];
m7_1077 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''new Date()''))", span="1741-1741"];
m7_1078 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Error reading bytes. Unexpected token: StartConstructor. Path '', line 1, position 9.'',\r\n                () => { reader.ReadAsBytes(); })", span="1743-1745"];
m7_1079 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", span="1739-1739"];
m7_482 [cluster="StringReader.cstr", file="JsonTextReaderTest.cs", label="Entry StringReader.cstr", span=""];
m7_1508 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", span="2424-2424"];
m7_1509 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs", label="string json = ''\x00a0{\x00a0'h\x00a0i\x00a0'\x00a0:\x00a0[\x00a0true\x00a0,\x00a0new\x00a0Date\x00a0(\x00a0)\x00a0]\x00a0/*\x00a0comment\x00a0*/\x00a0}\x00a0''", span="2426-2426"];
m7_1510 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2427-2427"];
m7_1511 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2429-2429"];
m7_1512 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2430-2430"];
m7_1513 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2432-2432"];
m7_1514 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2433-2433"];
m7_1515 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2435-2435"];
m7_1516 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2436-2436"];
m7_1517 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2438-2438"];
m7_1518 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="2439-2439"];
m7_1519 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2441-2441"];
m7_1520 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2442-2442"];
m7_1521 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2444-2444"];
m7_1522 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2445-2445"];
m7_1523 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2447-2447"];
m7_1524 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2448-2448"];
m7_1525 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2450-2450"];
m7_1526 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2451-2451"];
m7_1527 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2453-2453"];
m7_1528 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2454-2454"];
m7_1529 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(reader.Read())", span="2456-2456"];
m7_1530 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", span="2424-2424"];
m7_1370 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", span="2212-2212"];
m7_1371 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonTextReaderTest.cs", label="string json = ''new Date\0()''", span="2214-2214"];
m7_1372 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2215-2215"];
m7_1373 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2220-2220"];
m7_1374 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="2221-2221"];
m7_1375 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2222-2222"];
m7_1376 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2224-2224"];
m7_1377 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2225-2225"];
m7_1378 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", span="2212-2212"];
m7_367 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", span="681-681"];
m7_368 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs", label="int valueCount = 10000", span="683-683"];
m7_369 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs", label="StringWriter sw = new StringWriter()", span="684-684"];
m7_373 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs", label="i < valueCount", span="687-687"];
m7_381 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs", label="i < valueCount", span="697-697"];
m7_370 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs", label="JsonTextWriter writer = new JsonTextWriter(sw)", span="685-685"];
m7_377 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs", label="string json = sw.ToString()", span="693-693"];
m7_371 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs", label="writer.WriteStartArray()", span="686-686"];
m7_374 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs", label="writer.WriteValue(i)", span="689-689"];
m7_376 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs", label="writer.WriteEndArray()", span="691-691"];
m7_372 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs", label="int i = 0", span="687-687"];
m7_375 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs", label="i++", span="687-687"];
m7_378 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="695-695"];
m7_379 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="696-696"];
m7_382 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="699-699"];
m7_383 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs", label="Assert.AreEqual((long)i, reader.Value)", span="700-700"];
m7_385 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="702-702"];
m7_386 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(reader.Read())", span="703-703"];
m7_380 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs", label="int i = 0", span="697-697"];
m7_384 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs", label="i++", span="697-697"];
m7_387 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", span="681-681"];
m7_48 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", span="108-108"];
m7_49 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JsonTextReaderTest.cs", label="string json = ''[NaN]''", span="110-110"];
m7_50 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="112-112"];
m7_51 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JsonTextReaderTest.cs", label="reader.FloatParseHandling = Json.FloatParseHandling.Decimal", span="113-113"];
m7_52 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="115-115"];
m7_53 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="116-116"];
m7_54 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Cannot read NaN as a decimal.'',\r\n                () => reader.Read())", span="118-120"];
m7_55 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", span="108-108"];
m7_451 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsInt32()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsInt32()", span="335-335"];
m7_114 [cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="JsonTextReaderTest.cs", label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0"];
m7_889 [cluster="System.Convert.ToChar(string)", file="JsonTextReaderTest.cs", label="Entry System.Convert.ToChar(string)", span="0-0"];
m7_139 [cluster="System.Console.WriteLine(object)", file="JsonTextReaderTest.cs", label="Entry System.Console.WriteLine(object)", span="0-0"];
m7_831 [cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="373-373"];
m7_681 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", span="1209-1209"];
m7_682 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = null", span="1211-1211"];
m7_683 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(''1''))", span="1213-1213"];
m7_684 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, reader.ReadAsInt32())", span="1214-1214"];
m7_685 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(''-1''))", span="1216-1216"];
m7_686 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(-1, reader.ReadAsInt32())", span="1217-1217"];
m7_687 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(''0''))", span="1219-1219"];
m7_688 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0, reader.ReadAsInt32())", span="1220-1220"];
m7_689 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(''-0''))", span="1222-1222"];
m7_690 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0, reader.ReadAsInt32())", span="1223-1223"];
m7_691 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(int.MaxValue.ToString()))", span="1225-1225"];
m7_692 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(int.MaxValue, reader.ReadAsInt32())", span="1226-1226"];
m7_693 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(int.MinValue.ToString()))", span="1228-1228"];
m7_694 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(int.MinValue, reader.ReadAsInt32())", span="1229-1229"];
m7_695 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(long.MaxValue.ToString()))", span="1231-1231"];
m7_696 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(''JSON integer 9223372036854775807 is too large or small for an Int32. Path '', line 1, position 19.'', () => reader.ReadAsInt32())", span="1232-1232"];
m7_697 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(''9999999999999999999999999999999999999999999999999999999999999999999999999999asdasdasd''))", span="1234-1234"];
m7_698 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(''Input string '9999999999999999999999999999999999999999999999999999999999999999999999999999a' is not a valid integer. Path '', line 1, position 77.'', () => reader.ReadAsInt32())", span="1235-1235"];
m7_699 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(''1E-06''))", span="1237-1237"];
m7_700 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(''Input string '1E-06' is not a valid integer. Path '', line 1, position 5.'', () => reader.ReadAsInt32())", span="1238-1238"];
m7_701 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(''1.1''))", span="1240-1240"];
m7_702 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(''Input string '1.1' is not a valid integer. Path '', line 1, position 3.'', () => reader.ReadAsInt32())", span="1241-1241"];
m7_703 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(''''))", span="1243-1243"];
m7_704 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(null, reader.ReadAsInt32())", span="1244-1244"];
m7_705 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(''-''))", span="1246-1246"];
m7_706 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(''Input string '-' is not a valid integer. Path '', line 1, position 1.'', () => reader.ReadAsInt32())", span="1247-1247"];
m7_707 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", span="1209-1209"];
m7_1863 [cluster="System.IO.TextReader.Read(char[], int, int)", file="JsonTextReaderTest.cs", label="Entry System.IO.TextReader.Read(char[], int, int)", span="0-0"];
m7_347 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", span="652-652"];
m7_348 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<ArgumentNullException>(\r\n                @''Value cannot be null.\r\nParameter name: reader'',\r\n                () => { new JsonTextReader(null); })", span="654-657"];
m7_349 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", span="652-652"];
m7_484 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", span="856-856"];
m7_485 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonTextReaderTest.cs", label="BigInteger i = new BigInteger(long.MinValue)", span="858-858"];
m7_486 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(i.ToString(CultureInfo.InvariantCulture)))", span="860-860"];
m7_491 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonTextReaderTest.cs", label="BigInteger total = i + -j", span="866-866"];
m7_487 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonTextReaderTest.cs", label="reader.Read()", span="861-861"];
m7_488 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(long), reader.ValueType)", span="862-862"];
m7_489 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonTextReaderTest.cs", label="int j = 1", span="864-864"];
m7_490 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonTextReaderTest.cs", label="j < 1000", span="864-864"];
m7_495 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonTextReaderTest.cs", label="j++", span="864-864"];
m7_492 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="868-868"];
m7_493 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonTextReaderTest.cs", label="reader.Read()", span="869-869"];
m7_494 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(BigInteger), reader.ValueType)", span="871-871"];
m7_496 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", span="856-856"];
m7_92 [cluster="System.Globalization.StringInfo.StringInfo(string)", file="JsonTextReaderTest.cs", label="Entry System.Globalization.StringInfo.StringInfo(string)", span="0-0"];
m7_1881 [cluster="System.Array.Copy(System.Array, int, System.Array, int, int)", file="JsonTextReaderTest.cs", label="Entry System.Array.Copy(System.Array, int, System.Array, int, int)", span="0-0"];
m7_117 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", span="278-278"];
m7_118 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReaderTest.cs", label="MemoryStream ms = new MemoryStream()", span="280-280"];
m7_119 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(ms))", span="281-281"];
m7_120 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(ms.CanRead)", span="283-283"];
m7_122 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(ms.CanRead)", span="285-285"];
m7_121 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReaderTest.cs", label="reader.Close()", span="284-284"];
m7_123 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReaderTest.cs", label="ms = new MemoryStream()", span="287-287"];
m7_124 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StreamReader(ms)) { CloseInput = false }", span="288-288"];
m7_125 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(ms.CanRead)", span="290-290"];
m7_127 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(ms.CanRead)", span="292-292"];
m7_126 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReaderTest.cs", label="reader.Close()", span="291-291"];
m7_128 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", span="278-278"];
m7_1653 [cluster="double.ToString(System.IFormatProvider)", file="JsonTextReaderTest.cs", label="Entry double.ToString(System.IFormatProvider)", span="0-0"];
m7_425 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", span="754-754"];
m7_426 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonTextReaderTest.cs", label="string json = @''[\r\n  {\r\n    ''''$id'''': ''''1'''',\r\n    ''''Name'''': ''''e1'''',\r\n    ''''Manager'''': null\r\n  },\r\n  {\r\n    ''''$id'''': ''''2'''',\r\n    ''''Name'''': ''''e2'''',\r\n    ''''Manager'''': null\r\n  },\r\n  {\r\n    ''''$ref'''': ''''1''''\r\n  },\r\n  {\r\n    ''''$ref'''': ''''2''''\r\n  }\r\n]''", span="756-773"];
m7_427 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="775-775"];
m7_428 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonTextReaderTest.cs", label="int i = 0", span="780-780"];
m7_430 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonTextReaderTest.cs", label="reader.Read()", span="782-782"];
m7_432 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonTextReaderTest.cs", label="reader.Read()", span="785-785"];
m7_433 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="786-786"];
m7_429 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonTextReaderTest.cs", label="i < 15", span="780-780"];
m7_431 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonTextReaderTest.cs", label="i++", span="780-780"];
m7_434 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", span="754-754"];
m7_1700 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", span="2725-2725"];
m7_1701 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="string json = ''[false, true, true, false, 'test!', 1.11, 0e-10, 0E-10, 0.25e-5, 0.3e10, 6.0221418e23, 'Purple\\r \\n monkey\\'s:\\tdishwasher']''", span="2727-2727"];
m7_1702 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2729-2729"];
m7_1703 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2731-2731"];
m7_1704 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2733-2733"];
m7_1705 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(false, reader.Value)", span="2734-2734"];
m7_1706 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2736-2736"];
m7_1707 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="2737-2737"];
m7_1708 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(true, reader.Value)", span="2738-2738"];
m7_1709 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2740-2740"];
m7_1710 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="2741-2741"];
m7_1711 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(true, reader.Value)", span="2742-2742"];
m7_1712 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2744-2744"];
m7_1713 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="2745-2745"];
m7_1714 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(false, reader.Value)", span="2746-2746"];
m7_1715 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2748-2748"];
m7_1716 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="2749-2749"];
m7_1717 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''test!'', reader.Value)", span="2750-2750"];
m7_1718 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2752-2752"];
m7_1719 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2753-2753"];
m7_1720 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1.11d, reader.Value)", span="2754-2754"];
m7_1721 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2756-2756"];
m7_1722 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2757-2757"];
m7_1723 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0d, reader.Value)", span="2758-2758"];
m7_1724 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2760-2760"];
m7_1725 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2761-2761"];
m7_1726 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0d, reader.Value)", span="2762-2762"];
m7_1727 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2764-2764"];
m7_1728 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2765-2765"];
m7_1729 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0.0000025d, reader.Value)", span="2766-2766"];
m7_1730 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2768-2768"];
m7_1731 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2769-2769"];
m7_1732 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(3000000000d, reader.Value)", span="2770-2770"];
m7_1733 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2772-2772"];
m7_1734 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2773-2773"];
m7_1735 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(602214180000000000000000d, reader.Value)", span="2774-2774"];
m7_1736 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2776-2776"];
m7_1737 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="2777-2777"];
m7_1738 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(reader.Value, ''Purple\r \n monkey's:\tdishwasher'')", span="2778-2778"];
m7_1739 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2780-2780"];
m7_1740 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", span="2725-2725"];
m7_1857 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", span="2944-2944"];
m7_1858 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="JsonTextReaderTest.cs", label=Error, span="2946-2946"];
m7_1860 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="JsonTextReaderTest.cs", label="return _inner.Read(buffer, index, 1);", span="2949-2949"];
m7_1859 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="JsonTextReaderTest.cs", label="throw new Exception(''Read error'');", span="2947-2947"];
m7_1861 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", span="2944-2944"];
m7_1212 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", span="1947-1947"];
m7_1213 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReaderTest.cs", label="string json = @''{''''Offset'''':''''2011-08-01T21:25Z''''}''", span="1949-1949"];
m7_1214 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1951-1951"];
m7_1215 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1953-1953"];
m7_1216 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1954-1954"];
m7_1217 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1956-1956"];
m7_1218 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1957-1957"];
m7_1219 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReaderTest.cs", label="reader.ReadAsDateTimeOffset()", span="1959-1959"];
m7_1220 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="1960-1960"];
m7_1221 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="1961-1961"];
m7_1222 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2011, 8, 1, 21, 25, 0, DateTimeKind.Utc), TimeSpan.Zero), reader.Value)", span="1962-1962"];
m7_1223 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1964-1964"];
m7_1224 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1965-1965"];
m7_1225 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", span="1947-1947"];
m7_832 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(bool)", span="875-875"];
m7_1154 [cluster="System.DateTime.DateTime(int, int, int)", file="JsonTextReaderTest.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m7_18 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", span="175-175"];
m7_1794 [cluster="System.DateTime.DateTime(long, System.DateTimeKind)", file="JsonTextReaderTest.cs", label="Entry System.DateTime.DateTime(long, System.DateTimeKind)", span="0-0"];
m7_1484 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeperator()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeperator()", span="2390-2390"];
m7_1485 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeperator()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''true/''))", span="2392-2392"];
m7_1486 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeperator()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Error parsing boolean value. Path '', line 1, position 4.'',\r\n                () => { reader.Read(); })", span="2394-2396"];
m7_1487 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeperator()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeperator()", span="2390-2390"];
m7_1305 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", span="2087-2087"];
m7_1306 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''/* sdf''))", span="2089-2089"];
m7_1307 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unexpected end while parsing comment. Path '', line 1, position 6.'',\r\n                () => { reader.Read(); })", span="2091-2093"];
m7_1308 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", span="2087-2087"];
m7_1291 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", span="2067-2067"];
m7_1292 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''nulz''))", span="2069-2069"];
m7_1293 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Error parsing null value. Path '', line 0, position 0.'',\r\n                () => { reader.Read(); })", span="2071-2073"];
m7_1294 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", span="2067-2067"];
m7_59 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", span="124-124"];
m7_60 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs", label="string json = @''{''''recipe_id'''':''''12'''',''''recipe_name'''':''''Apocalypse Leather Armors'''',''''recipe_text'''':''''#C16------------------------------\r\n#C12Ingredients #C20\r\n#C16------------------------------\r\n\r\na piece of Leather Armor\r\n( ie #L \''''Enhanced Leather Armor Boots\'''' \''''85644\'''' )\r\n<img src=rdb:\/\/13264>\r\n\r\n#L \''''Hacker Tool\'''' \''''87814\''''\r\n<img src=rdb:\/\/99282>\r\n\r\n#L \''''Clanalizer\'''' \''''208313\''''\r\n<img src=rdb:\/\/156479>\r\n\r\n#C16------------------------------\r\n#C12Recipe #C16\r\n#C16------------------------------#C20\r\n\r\nHacker Tool\r\n#C15+#C20\r\na piece of Leather Armor\r\n#C15=#C20\r\n<img src=rdb:\/\/13264>\r\na piece of Hacked Leather Armor\r\n( ie : #L \''''Hacked Leather Armor Boots\'''' \''''245979\'''' )\r\n#C16Skills: |  BE  |#C20\r\n\r\n#C14------------------------------#C20\r\n\r\nClanalizer\r\n#C15+#C20\r\na piece of Hacked Leather Armor\r\n#C15=#C20\r\n<img src=rdb:\/\/13264>\r\na piece of Apocalypse Leather Armor\r\n( ie : #L \''''Apocalypse Leather Armor Boots\'''' \''''245966\'''' )\r\n#C16Skills: |  ??  |#C20\r\n\r\n#C16------------------------------\r\n#C12Details#C16\r\n#C16------------------------------#C20\r\n\r\n#L \''''Apocalypse Leather Armor Boots\'''' \''''245967\''''\r\n#L \''''Apocalypse Leather Armor Gloves\'''' \''''245969\''''\r\n#L \''''Apocalypse Leather Armor Helmet\'''' \''''245975\''''\r\n#L \''''Apocalypse Leather Armor Pants\'''' \''''245971\''''\r\n#L \''''Apocalypse Leather Armor Sleeves\'''' \''''245973\''''\r\n#L \''''Apocalypse Leather Body Armor\'''' \''''245965\''''\r\n\r\n#C16------------------------------\r\n#C12Comments#C16\r\n#C16------------------------------#C20\r\n\r\nNice froob armor.. but ugleh!\r\n\r\n'''',''''recipe_author'''':null}''", span="126-126"];
m7_61 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="128-128"];
m7_62 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="130-130"];
m7_63 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="131-131"];
m7_64 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="133-133"];
m7_65 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="134-134"];
m7_66 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="136-136"];
m7_67 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="137-137"];
m7_68 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="139-139"];
m7_69 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="140-140"];
m7_70 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="142-142"];
m7_71 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="143-143"];
m7_72 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="145-145"];
m7_73 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="146-146"];
m7_74 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''recipe_text'', reader.Value)", span="147-147"];
m7_75 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="149-149"];
m7_76 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="150-150"];
m7_77 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(@''#C16------------------------------\r\n#C12Ingredients #C20\r\n#C16------------------------------\r\n\r\na piece of Leather Armor\r\n( ie #L ''''Enhanced Leather Armor Boots'''' ''''85644'''' )\r\n<img src=rdb://13264>\r\n\r\n#L ''''Hacker Tool'''' ''''87814''''\r\n<img src=rdb://99282>\r\n\r\n#L ''''Clanalizer'''' ''''208313''''\r\n<img src=rdb://156479>\r\n\r\n#C16------------------------------\r\n#C12Recipe #C16\r\n#C16------------------------------#C20\r\n\r\nHacker Tool\r\n#C15+#C20\r\na piece of Leather Armor\r\n#C15=#C20\r\n<img src=rdb://13264>\r\na piece of Hacked Leather Armor\r\n( ie : #L ''''Hacked Leather Armor Boots'''' ''''245979'''' )\r\n#C16Skills: |  BE  |#C20\r\n\r\n#C14------------------------------#C20\r\n\r\nClanalizer\r\n#C15+#C20\r\na piece of Hacked Leather Armor\r\n#C15=#C20\r\n<img src=rdb://13264>\r\na piece of Apocalypse Leather Armor\r\n( ie : #L ''''Apocalypse Leather Armor Boots'''' ''''245966'''' )\r\n#C16Skills: |  ??  |#C20\r\n\r\n#C16------------------------------\r\n#C12Details#C16\r\n#C16------------------------------#C20\r\n\r\n#L ''''Apocalypse Leather Armor Boots'''' ''''245967''''\r\n#L ''''Apocalypse Leather Armor Gloves'''' ''''245969''''\r\n#L ''''Apocalypse Leather Armor Helmet'''' ''''245975''''\r\n#L ''''Apocalypse Leather Armor Pants'''' ''''245971''''\r\n#L ''''Apocalypse Leather Armor Sleeves'''' ''''245973''''\r\n#L ''''Apocalypse Leather Body Armor'''' ''''245965''''\r\n\r\n#C16------------------------------\r\n#C12Comments#C16\r\n#C16------------------------------#C20\r\n\r\nNice froob armor.. but ugleh!\r\n\r\n'', reader.Value)", span="152-207"];
m7_78 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", span="124-124"];
m7_79 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", span="211-211"];
m7_80 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonTextReaderTest.cs", label="string json = @''{ ''''MATHEMATICAL ITALIC CAPITAL ALPHA'''': ''''\uD835\uDEE2'''' }''", span="213-213"];
m7_81 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="215-215"];
m7_82 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="217-217"];
m7_83 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="218-218"];
m7_84 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="220-220"];
m7_85 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="221-221"];
m7_86 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonTextReaderTest.cs", label="string s = reader.Value.ToString()", span="223-223"];
m7_87 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, s.Length)", span="224-224"];
m7_88 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonTextReaderTest.cs", label="StringInfo stringInfo = new StringInfo(s)", span="226-226"];
m7_89 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, stringInfo.LengthInTextElements)", span="227-227"];
m7_90 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", span="211-211"];
m7_541 [cluster="System.Convert.ToBase64String(byte[])", file="JsonTextReaderTest.cs", label="Entry System.Convert.ToBase64String(byte[])", span="0-0"];
m7_167 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", span="376-376"];
m7_168 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonTextReaderTest.cs", label="string json = @''[\r\n''''Small'''',\r\n''''Medium'''',\r\n''''Large''''\r\n]content''", span="378-382"];
m7_169 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="384-384"];
m7_170 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonTextReaderTest.cs", label="reader.Read()", span="389-389"];
m7_171 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, reader.LineNumber)", span="390-390"];
m7_172 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonTextReaderTest.cs", label="reader.Read()", span="392-392"];
m7_173 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, reader.LineNumber)", span="393-393"];
m7_174 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonTextReaderTest.cs", label="reader.Read()", span="395-395"];
m7_175 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(3, reader.LineNumber)", span="396-396"];
m7_176 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonTextReaderTest.cs", label="reader.Read()", span="398-398"];
m7_177 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(4, reader.LineNumber)", span="399-399"];
m7_178 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonTextReaderTest.cs", label="reader.Read()", span="401-401"];
m7_179 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(5, reader.LineNumber)", span="402-402"];
m7_180 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Additional text encountered after finished reading JSON content: c. Path '', line 5, position 2.'',\r\n                () => { reader.Read(); })", span="404-406"];
m7_181 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", span="376-376"];
m7_483 [cluster="Unk.ToString", file="JsonTextReaderTest.cs", label="Entry Unk.ToString", span=""];
m7_1155 [cluster="System.TimeSpan.FromHours(double)", file="JsonTextReaderTest.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m7_1312 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", span="2097-2097"];
m7_1313 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''/sdf''))", span="2099-2099"];
m7_1314 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Error parsing comment. Expected: *, got s. Path '', line 1, position 1.'',\r\n                () => { reader.Read(); })", span="2101-2103"];
m7_1315 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", span="2097-2097"];
m7_1452 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", span="2341-2341"];
m7_1453 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="JsonTextReaderTest.cs", label="string json = ''new Date !''", span="2343-2343"];
m7_1454 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2344-2344"];
m7_1455 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unexpected character while parsing constructor: !. Path '', line 1, position 9.'',\r\n                () => { reader.Read(); })", span="2346-2348"];
m7_1456 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", span="2341-2341"];
m7_497 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", span="877-877"];
m7_498 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonTextReaderTest.cs", label="string json = @''\r\n{\r\n  ''''description'''': ''''A person'''',\r\n  ''''type'''': ''''object'''',\r\n  ''''properties'''':\r\n  {\r\n    ''''name'''': {''''type'''':''''string''''},\r\n    ''''hobbies'''': {\r\n      ''''type'''': ''''array'''',\r\n      ''''items'''': {''''type'''':''''string''''}\r\n    }\r\n  }\r\n}\r\n''", span="879-892"];
m7_499 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="894-894"];
m7_500 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonTextReaderTest.cs", label="int i = 0", span="899-899"];
m7_502 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="901-901"];
m7_504 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="904-904"];
m7_505 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="905-905"];
m7_506 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''type'', reader.Value)", span="906-906"];
m7_501 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonTextReaderTest.cs", label="i < 14", span="899-899"];
m7_503 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonTextReaderTest.cs", label="i++", span="899-899"];
m7_507 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", span="877-877"];
m7_1272 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", span="2039-2039"];
m7_1273 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonTextReaderTest.cs", label="string json = @''{''''Name'''': 1.1}''", span="2041-2041"];
m7_1274 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2043-2043"];
m7_1275 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2045-2045"];
m7_1276 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2046-2046"];
m7_1277 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2048-2048"];
m7_1278 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2049-2049"];
m7_1279 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Input string '1.1' is not a valid integer. Path 'Name', line 1, position 12.'',\r\n                () => { reader.ReadAsInt32(); })", span="2051-2053"];
m7_1280 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", span="2039-2039"];
m7_508 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", span="910-910"];
m7_509 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="JsonTextReaderTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader('''h\0i'''))", span="912-912"];
m7_510 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="913-913"];
m7_511 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''h\0i'', reader.Value)", span="915-915"];
m7_512 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", span="910-910"];
m7_709 [cluster="long.ToString()", file="JsonTextReaderTest.cs", label="Entry long.ToString()", span="0-0"];
m7_757 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", span="1285-1285"];
m7_758 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = null", span="1287-1287"];
m7_759 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(''1.1''))", span="1289-1289"];
m7_760 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1290-1290"];
m7_761 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1291-1291"];
m7_762 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1.1d, reader.Value)", span="1292-1292"];
m7_763 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(''-1.1''))", span="1294-1294"];
m7_764 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1295-1295"];
m7_765 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1296-1296"];
m7_766 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(-1.1d, reader.Value)", span="1297-1297"];
m7_767 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(''0.0''))", span="1299-1299"];
m7_768 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1300-1300"];
m7_769 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1301-1301"];
m7_770 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0.0d, reader.Value)", span="1302-1302"];
m7_771 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(''-0.0''))", span="1304-1304"];
m7_772 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1305-1305"];
m7_773 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1306-1306"];
m7_774 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", color=red, community=0, file="JsonTextReaderTest.cs", label="0: Assert.AreEqual(-0.0m, reader.Value)", span="1307-1307"];
m7_775 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(''9999999999999999999999999999999999999999999999999999999999999999999999999999asdasdasd''))", span="1309-1309"];
m7_776 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(''Input string '9999999999999999999999999999999999999999999999999999999999999999999999999999a' is not a valid number. Path '', line 1, position 77.'', () => reader.Read())", span="1310-1310"];
m7_777 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(''1E-06''))", span="1312-1312"];
m7_778 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1313-1313"];
m7_779 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1314-1314"];
m7_780 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", color=red, community=0, file="JsonTextReaderTest.cs", label="0: Assert.AreEqual(0.000001m, reader.Value)", span="1315-1315"];
m7_781 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(''''))", span="1317-1317"];
m7_782 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(reader.Read())", span="1318-1318"];
m7_783 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(''-''))", span="1320-1320"];
m7_784 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(''Input string '-' is not a valid number. Path '', line 1, position 1.'', () => reader.Read())", span="1321-1321"];
m7_785 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", span="1285-1285"];
m7_834 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="407-407"];
m7_1284 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", span="2057-2057"];
m7_1285 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''nul''))", span="2059-2059"];
m7_1286 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Error parsing null value. Path '', line 0, position 0.'',\r\n                () => { reader.Read(); })", span="2061-2063"];
m7_1287 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", span="2057-2057"];
m7_1319 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", span="2107-2107"];
m7_1320 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReaderTest.cs", label="string json = @''{''''decimal'''':-7.92281625142643E+28}''", span="2109-2109"];
m7_1321 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2111-2111"];
m7_1322 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2113-2113"];
m7_1323 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2114-2114"];
m7_1324 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2116-2116"];
m7_1325 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2117-2117"];
m7_1326 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReaderTest.cs", label="decimal? d = reader.ReadAsDecimal()", span="2119-2119"];
m7_1327 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2120-2120"];
m7_1328 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="2121-2121"];
m7_1330 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2124-2124"];
m7_1331 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2125-2125"];
m7_1329 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(-79228162514264300000000000000m, d)", span="2122-2122"];
m7_1332 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", span="2107-2107"];
m7_651 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", span="1133-1133"];
m7_652 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs", label="string input = ''{value:'Purple\\r \\n monkey\\'s:\\tdishwasher'}''", span="1135-1135"];
m7_653 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs", label="StringReader sr = new StringReader(input)", span="1137-1137"];
m7_654 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs", label="JsonReader jsonReader = new JsonTextReader(sr)", span="1139-1139"];
m7_655 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0, jsonReader.Depth)", span="1141-1141"];
m7_656 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1143-1143"];
m7_657 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, jsonReader.TokenType)", span="1144-1144"];
m7_658 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0, jsonReader.Depth)", span="1145-1145"];
m7_659 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1147-1147"];
m7_660 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonReader.TokenType)", span="1148-1148"];
m7_661 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, jsonReader.Depth)", span="1149-1149"];
m7_662 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1151-1151"];
m7_663 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.String)", span="1152-1152"];
m7_664 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''Purple\r \n monkey's:\tdishwasher'', jsonReader.Value)", span="1153-1153"];
m7_665 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs", label="Assert.AreEqual('\'', jsonReader.QuoteChar)", span="1154-1154"];
m7_666 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, jsonReader.Depth)", span="1155-1155"];
m7_667 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1157-1157"];
m7_668 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, jsonReader.TokenType)", span="1158-1158"];
m7_669 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0, jsonReader.Depth)", span="1159-1159"];
m7_670 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", span="1133-1133"];
m7_633 [cluster="Unk.AreEquivalent", file="JsonTextReaderTest.cs", label="Entry Unk.AreEquivalent", span=""];
m7_978 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", span="1591-1591"];
m7_979 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs", label="StringReader s = new StringReader(@''[0372, 0xFA, 0XFA]'')", span="1593-1593"];
m7_980 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs", label="JsonTextReader jsonReader = new JsonTextReader(s)", span="1594-1594"];
m7_981 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonReader.Read())", span="1596-1596"];
m7_982 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="1597-1597"];
m7_983 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonReader.Read())", span="1599-1599"];
m7_984 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1600-1600"];
m7_985 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(250L, jsonReader.Value)", span="1601-1601"];
m7_986 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonReader.Read())", span="1603-1603"];
m7_987 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1604-1604"];
m7_988 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(250L, jsonReader.Value)", span="1605-1605"];
m7_989 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonReader.Read())", span="1607-1607"];
m7_990 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1608-1608"];
m7_991 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(250L, jsonReader.Value)", span="1609-1609"];
m7_992 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonReader.Read())", span="1611-1611"];
m7_993 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="1612-1612"];
m7_994 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(jsonReader.Read())", span="1614-1614"];
m7_995 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", span="1591-1591"];
m7_14 [cluster="System.IO.StringReader.StringReader(string)", file="JsonTextReaderTest.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m7_1880 [cluster="System.Math.Min(int, int)", file="JsonTextReaderTest.cs", label="Entry System.Math.Min(int, int)", span="0-0"];
m7_1834 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="2897-2897"];
m7_20 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.Read()", span="69-69"];
m7_19 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="69-69"];
m7_21 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="69-69"];
m7_57 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.Read()", span="120-120"];
m7_56 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="120-120"];
m7_58 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="120-120"];
m7_165 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.Read()", span="369-369"];
m7_164 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="367-372"];
m7_166 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="367-372"];
m7_183 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.Read()", span="406-406"];
m7_182 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="406-406"];
m7_184 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="406-406"];
m7_196 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.Read()", span="437-437"];
m7_195 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="435-440"];
m7_197 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="435-440"];
m7_350 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="657-657"];
m7_351 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="new JsonTextReader(null)", span="657-657"];
m7_352 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="657-657"];
m7_358 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.Read()", span="667-667"];
m7_357 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="667-667"];
m7_359 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="667-667"];
m7_448 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="805-805"];
m7_447 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="803-807"];
m7_449 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsInt32()", span="806-806"];
m7_450 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="803-807"];
m7_465 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="828-828"];
m7_464 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="826-830"];
m7_466 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsInt32()", span="829-829"];
m7_467 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="826-830"];
m7_518 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.Read()", span="925-925"];
m7_517 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="925-925"];
m7_519 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="925-925"];
m7_525 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.Read()", span="935-935"];
m7_524 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="935-935"];
m7_526 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="935-935"];
m7_532 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsBytes()", span="945-945"];
m7_531 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="945-945"];
m7_533 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="945-945"];
m7_543 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsBytes()", span="958-958"];
m7_542 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="958-958"];
m7_544 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="958-958"];
m7_558 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.Read()", span="979-979"];
m7_557 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="979-979"];
m7_559 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="979-979"];
m7_711 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsInt32()", span="1232-1232"];
m7_710 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="1232-1232"];
m7_714 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsInt32()", span="1235-1235"];
m7_713 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="1235-1235"];
m7_717 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsInt32()", span="1238-1238"];
m7_716 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="1238-1238"];
m7_720 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsInt32()", span="1241-1241"];
m7_719 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="1241-1241"];
m7_723 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsInt32()", span="1247-1247"];
m7_722 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="1247-1247"];
m7_712 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="1232-1232"];
m7_715 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="1235-1235"];
m7_718 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="1238-1238"];
m7_721 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="1241-1241"];
m7_724 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="1247-1247"];
m7_749 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsDecimal()", span="1268-1268"];
m7_748 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="1268-1268"];
m7_752 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.Read()", span="1272-1272"];
m7_751 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="1272-1272"];
m7_755 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsDecimal()", span="1281-1281"];
m7_754 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="1281-1281"];
m7_750 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="1268-1268"];
m7_753 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="1272-1272"];
m7_756 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="1281-1281"];
m7_787 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.Read()", span="1310-1310"];
m7_786 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="1310-1310"];
m7_790 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.Read()", span="1321-1321"];
m7_789 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="1321-1321"];
m7_788 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="1310-1310"];
m7_791 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="1321-1321"];
m7_965 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.Read()", span="1574-1574"];
m7_964 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="1574-1574"];
m7_966 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="1574-1574"];
m7_1044 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.Read()", span="1686-1686"];
m7_1043 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="1686-1686"];
m7_1045 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="1686-1686"];
m7_1061 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsBytes()", span="1714-1714"];
m7_1060 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="1714-1714"];
m7_1062 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="1714-1714"];
m7_1074 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsDecimal()", span="1735-1735"];
m7_1073 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="1735-1735"];
m7_1075 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="1735-1735"];
m7_1081 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsBytes()", span="1745-1745"];
m7_1080 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="1745-1745"];
m7_1082 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="1745-1745"];
m7_1088 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsDateTimeOffset()", span="1756-1756"];
m7_1087 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="1756-1756"];
m7_1089 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="1756-1756"];
m7_1102 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsBytes()", span="1778-1778"];
m7_1101 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="1778-1778"];
m7_1103 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="1778-1778"];
m7_1109 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsBytes()", span="1788-1788"];
m7_1108 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="1788-1788"];
m7_1110 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="1788-1788"];
m7_1180 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsDateTimeOffset()", span="1899-1899"];
m7_1179 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="1899-1899"];
m7_1181 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="1899-1899"];
m7_1282 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsInt32()", span="2053-2053"];
m7_1281 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="2053-2053"];
m7_1283 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="2053-2053"];
m7_1289 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.Read()", span="2063-2063"];
m7_1288 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="2063-2063"];
m7_1290 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="2063-2063"];
m7_1296 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.Read()", span="2073-2073"];
m7_1295 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="2073-2073"];
m7_1297 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="2073-2073"];
m7_1303 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.Read()", span="2083-2083"];
m7_1302 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="2083-2083"];
m7_1304 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="2083-2083"];
m7_1310 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.Read()", span="2093-2093"];
m7_1309 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="2093-2093"];
m7_1311 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="2093-2093"];
m7_1317 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.Read()", span="2103-2103"];
m7_1316 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="2103-2103"];
m7_1318 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="2103-2103"];
m7_1450 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.Read()", span="2337-2337"];
m7_1449 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="2337-2337"];
m7_1451 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="2337-2337"];
m7_1458 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.Read()", span="2348-2348"];
m7_1457 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="2348-2348"];
m7_1459 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="2348-2348"];
m7_1489 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.Read()", span="2396-2396"];
m7_1488 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="2396-2396"];
m7_1490 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="2396-2396"];
m7_1506 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2420-2420"];
m7_1505 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="2420-2420"];
m7_1507 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="2420-2420"];
m7_1607 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.Read()", span="2583-2583"];
m7_1606 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="2583-2583"];
m7_1608 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="2583-2583"];
m7_1663 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2668-2668"];
m7_1662 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="2668-2668"];
m7_1664 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="2668-2668"];
m7_1695 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2686-2686"];
m7_1698 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2706-2706"];
m7_1694 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="2686-2686"];
m7_1697 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="2706-2706"];
m7_1696 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="2686-2686"];
m7_1699 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="2706-2706"];
m7_1820 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="jsonTextReader.Read()", span="2866-2866"];
m7_1823 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="jsonTextReader.Read()", span="2869-2869"];
m7_1826 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="jsonTextReader.Read()", span="2880-2880"];
m7_1829 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="jsonTextReader.Read()", span="2891-2891"];
m7_1832 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="jsonTextReader.Read()", span="2894-2894"];
m7_1835 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="jsonTextReader.Read()", span="2897-2897"];
m7_1819 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="2866-2866"];
m7_1822 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="2869-2869"];
m7_1825 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="2880-2880"];
m7_1828 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="2891-2891"];
m7_1831 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="2894-2894"];
m7_1821 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="2866-2866"];
m7_1824 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="2869-2869"];
m7_1827 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="2880-2880"];
m7_1830 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="2891-2891"];
m7_1833 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="2894-2894"];
m7_1836 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="2897-2897"];
m7_1038 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", span="1678-1678"];
m7_1039 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[}''))", span="1680-1680"];
m7_1040 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="JsonTextReaderTest.cs", label="reader.Read()", span="1682-1682"];
m7_1041 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unexpected character encountered while parsing value: }. Path '', line 1, position 1.'',\r\n                () => { reader.Read(); })", span="1684-1686"];
m7_1042 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", span="1678-1678"];
m7_890 [cluster="System.Convert.ToInt32(char)", file="JsonTextReaderTest.cs", label="Entry System.Convert.ToInt32(char)", span="0-0"];
m7_891 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", span="1467-1467"];
m7_892 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="string json =\r\n                @''[0.0,0.0,0.1,1.0,1.000001,1E-06,4.94065645841247E-324,Infinity,-Infinity,NaN,1.7976931348623157E+308,-1.7976931348623157E+308,Infinity,-Infinity,NaN,0e-10,0.25e-5,0.3e10]''", span="1469-1470"];
m7_893 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="JsonReader jsonReader = new JsonTextReader(new StringReader(json))", span="1472-1472"];
m7_894 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1474-1474"];
m7_895 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="1475-1475"];
m7_896 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1477-1477"];
m7_897 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1478-1478"];
m7_898 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0.0, jsonReader.Value)", span="1479-1479"];
m7_899 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1481-1481"];
m7_900 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1482-1482"];
m7_901 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0.0, jsonReader.Value)", span="1483-1483"];
m7_902 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1485-1485"];
m7_903 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1486-1486"];
m7_904 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0.1, jsonReader.Value)", span="1487-1487"];
m7_905 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1489-1489"];
m7_906 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1490-1490"];
m7_907 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1.0, jsonReader.Value)", span="1491-1491"];
m7_908 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1493-1493"];
m7_909 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1494-1494"];
m7_910 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1.000001, jsonReader.Value)", span="1495-1495"];
m7_911 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1497-1497"];
m7_912 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1498-1498"];
m7_913 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1E-06, jsonReader.Value)", span="1499-1499"];
m7_914 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1501-1501"];
m7_915 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1502-1502"];
m7_916 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(4.94065645841247E-324, jsonReader.Value)", span="1503-1503"];
m7_917 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1505-1505"];
m7_918 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1506-1506"];
m7_919 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(double.PositiveInfinity, jsonReader.Value)", span="1507-1507"];
m7_920 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1509-1509"];
m7_921 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1510-1510"];
m7_922 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(double.NegativeInfinity, jsonReader.Value)", span="1511-1511"];
m7_923 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1513-1513"];
m7_924 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1514-1514"];
m7_925 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(double.NaN, jsonReader.Value)", span="1515-1515"];
m7_926 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1517-1517"];
m7_927 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1518-1518"];
m7_928 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(double.MaxValue, jsonReader.Value)", span="1519-1519"];
m7_929 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1521-1521"];
m7_930 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1522-1522"];
m7_931 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(double.MinValue, jsonReader.Value)", span="1523-1523"];
m7_932 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1525-1525"];
m7_933 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1526-1526"];
m7_934 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(double.PositiveInfinity, jsonReader.Value)", span="1527-1527"];
m7_935 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1529-1529"];
m7_936 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1530-1530"];
m7_937 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(double.NegativeInfinity, jsonReader.Value)", span="1531-1531"];
m7_938 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1533-1533"];
m7_939 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1534-1534"];
m7_940 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(double.NaN, jsonReader.Value)", span="1535-1535"];
m7_941 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1537-1537"];
m7_942 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1538-1538"];
m7_943 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0d, jsonReader.Value)", span="1539-1539"];
m7_944 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1541-1541"];
m7_945 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1542-1542"];
m7_946 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0.0000025d, jsonReader.Value)", span="1543-1543"];
m7_947 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1545-1545"];
m7_948 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1546-1546"];
m7_949 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(3000000000d, jsonReader.Value)", span="1547-1547"];
m7_950 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1549-1549"];
m7_951 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="1550-1550"];
m7_952 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", span="1467-1467"];
m7_394 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", span="707-707"];
m7_395 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="string json = ''\0{\0'\0h\0i\0'\0:\0[\01\0,\0'\0'\0\0,\0null\0]\0,\0do\0:true\0}\0\0/*\0sd\0f\0*/\0/*\0sd\0f\0*/ \0''", span="709-709"];
m7_396 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="710-710"];
m7_397 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="712-712"];
m7_398 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="713-713"];
m7_399 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="715-715"];
m7_400 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="716-716"];
m7_401 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="718-718"];
m7_402 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="719-719"];
m7_403 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="721-721"];
m7_404 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="722-722"];
m7_405 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="724-724"];
m7_406 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="725-725"];
m7_407 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="727-727"];
m7_408 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="728-728"];
m7_409 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="730-730"];
m7_410 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="731-731"];
m7_411 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="733-733"];
m7_412 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="734-734"];
m7_413 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="736-736"];
m7_414 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="737-737"];
m7_415 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="739-739"];
m7_416 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="740-740"];
m7_417 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="742-742"];
m7_418 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="743-743"];
m7_419 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''\0sd\0f\0'', reader.Value)", span="744-744"];
m7_420 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="746-746"];
m7_421 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="747-747"];
m7_422 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''\0sd\0f\0'', reader.Value)", span="748-748"];
m7_423 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(reader.Read())", span="750-750"];
m7_424 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", span="707-707"];
m7_390 [cluster="Newtonsoft.Json.JsonTextWriter.WriteStartArray()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteStartArray()", span="166-166"];
m7_513 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", span="919-919"];
m7_514 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="JsonTextReaderTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@'''h\u123''))", span="921-921"];
m7_515 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unexpected end while parsing unicode character. Path '', line 1, position 4.'',\r\n                () => { reader.Read(); })", span="923-925"];
m7_516 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", span="919-919"];
m7_1885 [cluster="System.NotSupportedException.NotSupportedException()", file="JsonTextReaderTest.cs", label="Entry System.NotSupportedException.NotSupportedException()", span="0-0"];
m7_676 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", span="1178-1178"];
m7_677 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="JsonTextReaderTest.cs", label="string json = @''[\r\n  true,\r\n  {\r\n    ''''integer'''': 99,\r\n    ''''string'''': ''''how now brown cow?'''',\r\n    ''''array'''': [\r\n      0,\r\n      1,\r\n      2,\r\n      3,\r\n      4,\r\n      {\r\n        ''''decimal'''': 990.00990099\r\n      },\r\n      5\r\n    ]\r\n  },\r\n  ''''This is a string.'''',\r\n  null,\r\n  null\r\n]''", span="1180-1200"];
m7_678 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1202-1202"];
m7_679 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="JsonTextReaderTest.cs", label="reader.Read()", span="1203-1203"];
m7_680 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", span="1178-1178"];
m7_131 [cluster="Unk.IsFalse", file="JsonTextReaderTest.cs", label="Entry Unk.IsFalse", span=""];
m7_1359 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", span="2182-2182"];
m7_1360 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonTextReaderTest.cs", label="string json = @''/*comment*/ { /*comment*/\r\n        ''''Name'''': /*comment*/ ''''Apple'''' /*comment*/, /*comment*/\r\n        ''''ExpiryDate'''': ''''\/Date(1230422400000)\/'''',\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''': /*comment*/ [ /*comment*/\r\n          ''''Small'''', /*comment*/\r\n          ''''Medium'''' /*comment*/,\r\n          /*comment*/ ''''Large''''\r\n        /*comment*/ ] /*comment*/\r\n      } /*comment*/''", span="2184-2193"];
m7_1361 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2195-2195"];
m7_1362 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonTextReaderTest.cs", label="int i = 0", span="2200-2200"];
m7_1364 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2202-2202"];
m7_1366 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2205-2205"];
m7_1367 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2206-2206"];
m7_1368 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(reader.Read())", span="2208-2208"];
m7_1363 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonTextReaderTest.cs", label="i < 26", span="2200-2200"];
m7_1365 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonTextReaderTest.cs", label="i++", span="2200-2200"];
m7_1369 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", span="2182-2182"];
m7_140 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", span="329-329"];
m7_141 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs", label="string json = @''{''''DefaultConverter'''':new Date(0, ''''hi''''),''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}''", span="331-331"];
m7_142 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs", label="JsonReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="333-333"];
m7_143 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="335-335"];
m7_144 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="336-336"];
m7_145 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="337-337"];
m7_146 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="338-338"];
m7_147 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="339-339"];
m7_148 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="341-341"];
m7_149 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0L, reader.Value)", span="342-342"];
m7_150 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="344-344"];
m7_151 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''hi'', reader.Value)", span="345-345"];
m7_152 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="347-347"];
m7_153 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="348-348"];
m7_154 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="350-350"];
m7_155 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''MemberConverter'', reader.Value)", span="351-351"];
m7_156 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", span="329-329"];
m7_1210 [cluster="System.TimeSpan.FromMinutes(double)", file="JsonTextReaderTest.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m7_1656 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", span="2655-2655"];
m7_1657 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JsonTextReaderTest.cs", label="string json = ''[[]]''", span="2657-2657"];
m7_1658 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                MaxDepth = 1\r\n            }", span="2659-2662"];
m7_1659 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2664-2664"];
m7_1660 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''The reader's MaxDepth of 1 has been exceeded. Path '[0]', line 1, position 2.'',\r\n                () => { Assert.IsTrue(reader.Read()); })", span="2666-2668"];
m7_1661 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", span="2655-2655"];
m7_838 [cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="365-365"];
m7_1504 [cluster="Unk.>", file="JsonTextReaderTest.cs", label="Entry Unk.>", span=""];
m7_1797 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", span="2855-2855"];
m7_1798 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs", label="ToggleReaderError toggleReaderError = new ToggleReaderError(new StringReader(''{'first':1,'second':2,'third':3}''))", span="2857-2857"];
m7_1799 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(toggleReaderError)", span="2858-2858"];
m7_1801 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs", label="toggleReaderError.Error = true", span="2862-2862"];
m7_1804 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs", label="toggleReaderError.Error = false", span="2871-2871"];
m7_1807 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs", label="toggleReaderError.Error = true", span="2876-2876"];
m7_1809 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs", label="toggleReaderError.Error = false", span="2882-2882"];
m7_1812 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs", label="toggleReaderError.Error = true", span="2887-2887"];
m7_1816 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs", label="toggleReaderError.Error = false", span="2899-2899"];
m7_1800 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="2860-2860"];
m7_1802 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<Exception>(\r\n                ''Read error'',\r\n                () => jsonTextReader.Read())", span="2864-2866"];
m7_1803 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<Exception>(\r\n                ''Read error'',\r\n                () => jsonTextReader.Read())", span="2867-2869"];
m7_1805 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="2873-2873"];
m7_1806 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''first'', jsonTextReader.Value)", span="2874-2874"];
m7_1808 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<Exception>(\r\n                ''Read error'',\r\n                () => jsonTextReader.Read())", span="2878-2880"];
m7_1810 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="2884-2884"];
m7_1811 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1L, jsonTextReader.Value)", span="2885-2885"];
m7_1813 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<Exception>(\r\n                ''Read error'',\r\n                () => jsonTextReader.Read())", span="2889-2891"];
m7_1814 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<Exception>(\r\n                ''Read error'',\r\n                () => jsonTextReader.Read())", span="2892-2894"];
m7_1815 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<Exception>(\r\n                ''Read error'',\r\n                () => jsonTextReader.Read())", span="2895-2897"];
m7_1817 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", span="2855-2855"];
m7_158 [cluster="System.Text.UTF8Encoding.UTF8Encoding(bool)", file="JsonTextReaderTest.cs", label="Entry System.Text.UTF8Encoding.UTF8Encoding(bool)", span="0-0"];
m7_840 [cluster="System.Text.StringBuilder.ToString()", file="JsonTextReaderTest.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m7_16 [cluster="Unk.IsTrue", file="JsonTextReaderTest.cs", label="Entry Unk.IsTrue", span=""];
m7_520 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", span="929-929"];
m7_521 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", file="JsonTextReaderTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@'''h\''))", span="931-931"];
m7_522 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unterminated string. Expected delimiter: '. Path '', line 1, position 3.'',\r\n                () => { reader.Read(); })", span="933-935"];
m7_523 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", span="929-929"];
m7_353 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", span="661-661"];
m7_354 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", file="JsonTextReaderTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader('''hi''))", span="663-663"];
m7_355 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unterminated string. Expected delimiter: '. Path '', line 1, position 3.'',\r\n                () => { reader.Read(); })", span="665-667"];
m7_356 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", span="661-661"];
m7_1333 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", span="2129-2129"];
m7_1334 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs", label="string json = @''{''''decimal'''':''''9,99''''}''", span="2131-2131"];
m7_1335 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2133-2133"];
m7_1336 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs", label="reader.Culture = new CultureInfo(''fr-FR'')", span="2134-2134"];
m7_1337 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2136-2136"];
m7_1338 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2137-2137"];
m7_1339 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2139-2139"];
m7_1340 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2140-2140"];
m7_1341 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs", label="decimal? d = reader.ReadAsDecimal()", span="2142-2142"];
m7_1342 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2143-2143"];
m7_1343 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="2144-2144"];
m7_1345 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2147-2147"];
m7_1346 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2148-2148"];
m7_1344 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(9.99m, d)", span="2145-2145"];
m7_1347 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", span="2129-2129"];
m7_115 [cluster="System.Text.Encoding.GetBytes(string)", file="JsonTextReaderTest.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m7_675 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string)", span="687-687"];
m7_708 [cluster="int.ToString()", file="JsonTextReaderTest.cs", label="Entry int.ToString()", span="0-0"];
m7_835 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(int)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(int)", span="819-819"];
m7_250 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", span="523-523"];
m7_251 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="string input = @''{\r\n  value:'Purple',\r\n  array:[1,2,new Date(1)],\r\n  subobject:{prop:1,proparray:[1]}\r\n}''", span="525-529"];
m7_252 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="StringReader sr = new StringReader(input)", span="531-531"];
m7_253 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="JsonReader reader = new JsonTextReader(sr)", span="533-533"];
m7_254 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0, reader.Depth)", span="535-535"];
m7_255 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="reader.Read()", span="537-537"];
m7_256 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.StartObject)", span="538-538"];
m7_257 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0, reader.Depth)", span="539-539"];
m7_258 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual('''', reader.Path)", span="540-540"];
m7_259 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="reader.Read()", span="542-542"];
m7_260 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="543-543"];
m7_261 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, reader.Depth)", span="544-544"];
m7_262 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''value'', reader.Path)", span="545-545"];
m7_263 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="reader.Read()", span="547-547"];
m7_264 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.String)", span="548-548"];
m7_265 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(reader.Value, @''Purple'')", span="549-549"];
m7_266 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(reader.QuoteChar, '\'')", span="550-550"];
m7_267 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, reader.Depth)", span="551-551"];
m7_268 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''value'', reader.Path)", span="552-552"];
m7_269 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="reader.Read()", span="554-554"];
m7_270 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="555-555"];
m7_271 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, reader.Depth)", span="556-556"];
m7_272 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''array'', reader.Path)", span="557-557"];
m7_273 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="reader.Read()", span="559-559"];
m7_274 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.StartArray)", span="560-560"];
m7_275 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, reader.Depth)", span="561-561"];
m7_276 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''array'', reader.Path)", span="562-562"];
m7_277 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="reader.Read()", span="564-564"];
m7_278 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="565-565"];
m7_279 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1L, reader.Value)", span="566-566"];
m7_280 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, reader.Depth)", span="567-567"];
m7_281 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''array[0]'', reader.Path)", span="568-568"];
m7_282 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="reader.Read()", span="570-570"];
m7_283 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="571-571"];
m7_284 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2L, reader.Value)", span="572-572"];
m7_285 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, reader.Depth)", span="573-573"];
m7_286 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''array[1]'', reader.Path)", span="574-574"];
m7_287 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="reader.Read()", span="576-576"];
m7_288 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.StartConstructor)", span="577-577"];
m7_289 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="578-578"];
m7_290 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, reader.Depth)", span="579-579"];
m7_291 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''array[2]'', reader.Path)", span="580-580"];
m7_292 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="reader.Read()", span="582-582"];
m7_293 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="583-583"];
m7_294 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1L, reader.Value)", span="584-584"];
m7_295 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(3, reader.Depth)", span="585-585"];
m7_296 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''array[2][0]'', reader.Path)", span="586-586"];
m7_297 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="reader.Read()", span="588-588"];
m7_298 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.EndConstructor)", span="589-589"];
m7_299 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(null, reader.Value)", span="590-590"];
m7_300 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, reader.Depth)", span="591-591"];
m7_301 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''array[2]'', reader.Path)", span="592-592"];
m7_302 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="reader.Read()", span="594-594"];
m7_303 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.EndArray)", span="595-595"];
m7_304 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, reader.Depth)", span="596-596"];
m7_305 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''array'', reader.Path)", span="597-597"];
m7_306 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="reader.Read()", span="599-599"];
m7_307 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="600-600"];
m7_308 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, reader.Depth)", span="601-601"];
m7_309 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''subobject'', reader.Path)", span="602-602"];
m7_310 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="reader.Read()", span="604-604"];
m7_311 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.StartObject)", span="605-605"];
m7_312 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, reader.Depth)", span="606-606"];
m7_313 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''subobject'', reader.Path)", span="607-607"];
m7_314 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="reader.Read()", span="609-609"];
m7_315 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="610-610"];
m7_316 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, reader.Depth)", span="611-611"];
m7_317 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''subobject.prop'', reader.Path)", span="612-612"];
m7_318 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="reader.Read()", span="614-614"];
m7_319 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="615-615"];
m7_320 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, reader.Depth)", span="616-616"];
m7_321 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''subobject.prop'', reader.Path)", span="617-617"];
m7_322 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="reader.Read()", span="619-619"];
m7_323 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="620-620"];
m7_324 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, reader.Depth)", span="621-621"];
m7_325 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''subobject.proparray'', reader.Path)", span="622-622"];
m7_326 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="reader.Read()", span="624-624"];
m7_327 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.StartArray)", span="625-625"];
m7_328 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, reader.Depth)", span="626-626"];
m7_329 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''subobject.proparray'', reader.Path)", span="627-627"];
m7_330 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="reader.Read()", span="629-629"];
m7_331 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="630-630"];
m7_332 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(3, reader.Depth)", span="631-631"];
m7_333 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''subobject.proparray[0]'', reader.Path)", span="632-632"];
m7_334 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="reader.Read()", span="634-634"];
m7_335 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.EndArray)", span="635-635"];
m7_336 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, reader.Depth)", span="636-636"];
m7_337 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''subobject.proparray'', reader.Path)", span="637-637"];
m7_338 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="reader.Read()", span="639-639"];
m7_339 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.EndObject)", span="640-640"];
m7_340 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, reader.Depth)", span="641-641"];
m7_341 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''subobject'', reader.Path)", span="642-642"];
m7_342 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="reader.Read()", span="644-644"];
m7_343 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.EndObject)", span="645-645"];
m7_344 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0, reader.Depth)", span="646-646"];
m7_345 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual('''', reader.Path)", span="647-647"];
m7_346 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", span="523-523"];
m7_1379 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", span="2229-2229"];
m7_1380 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonTextReaderTest.cs", label="string json = ''new Date\n()''", span="2231-2231"];
m7_1381 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2232-2232"];
m7_1382 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2234-2234"];
m7_1383 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="2235-2235"];
m7_1384 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2236-2236"];
m7_1385 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2238-2238"];
m7_1386 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2239-2239"];
m7_1387 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", span="2229-2229"];
m7_1570 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", span="2525-2525"];
m7_1571 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonTextReaderTest.cs", label="string json = @''010''", span="2527-2527"];
m7_1572 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2529-2529"];
m7_1573 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonTextReaderTest.cs", label="reader.ReadAsDecimal()", span="2531-2531"];
m7_1574 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2532-2532"];
m7_1575 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(8m, reader.Value)", span="2533-2533"];
m7_1576 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", span="2525-2525"];
m7_1837 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", span="2906-2906"];
m7_1838 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs", label="StringWriter sw = new StringWriter()", span="2908-2908"];
m7_1839 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs", label="JsonTextWriter writer = new JsonTextWriter(sw)", span="2909-2909"];
m7_1844 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs", label="string json = sw.ToString()", span="2916-2916"];
m7_1840 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs", label="writer.WriteStartArray()", span="2911-2911"];
m7_1841 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs", label="writer.WriteValue(decimal.MaxValue)", span="2912-2912"];
m7_1842 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs", label="writer.WriteValue(decimal.MinValue)", span="2913-2913"];
m7_1843 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs", label="writer.WriteEndArray()", span="2914-2914"];
m7_1845 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs", label="StringReader sr = new StringReader(json)", span="2918-2918"];
m7_1846 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(sr)", span="2919-2919"];
m7_1847 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2921-2921"];
m7_1848 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs", label="decimal? max = reader.ReadAsDecimal()", span="2923-2923"];
m7_1850 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs", label="decimal? min = reader.ReadAsDecimal()", span="2926-2926"];
m7_1852 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2929-2929"];
m7_1849 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(decimal.MaxValue, max)", span="2924-2924"];
m7_1851 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(decimal.MinValue, min)", span="2927-2927"];
m7_1853 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", span="2906-2906"];
m7_1872 [cluster="Newtonsoft.Json.Tests.SlowStream.Read(byte[], int, int)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.SlowStream.Read(byte[], int, int)", span="3001-3001"];
m7_1873 [cluster="Newtonsoft.Json.Tests.SlowStream.Read(byte[], int, int)", file="JsonTextReaderTest.cs", label="int toReturn = Math.Min(count, bytesPerRead)", span="3003-3003"];
m7_1876 [cluster="Newtonsoft.Json.Tests.SlowStream.Read(byte[], int, int)", file="JsonTextReaderTest.cs", label="Array.Copy(bytes, totalBytesRead, buffer, offset, toReturn)", span="3007-3007"];
m7_1874 [cluster="Newtonsoft.Json.Tests.SlowStream.Read(byte[], int, int)", file="JsonTextReaderTest.cs", label="toReturn = Math.Min(toReturn, bytes.Length - totalBytesRead)", span="3004-3004"];
m7_1875 [cluster="Newtonsoft.Json.Tests.SlowStream.Read(byte[], int, int)", file="JsonTextReaderTest.cs", label="toReturn > 0", span="3005-3005"];
m7_1877 [cluster="Newtonsoft.Json.Tests.SlowStream.Read(byte[], int, int)", file="JsonTextReaderTest.cs", label="totalBytesRead += toReturn", span="3010-3010"];
m7_1878 [cluster="Newtonsoft.Json.Tests.SlowStream.Read(byte[], int, int)", file="JsonTextReaderTest.cs", label="return toReturn;", span="3011-3011"];
m7_1879 [cluster="Newtonsoft.Json.Tests.SlowStream.Read(byte[], int, int)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.SlowStream.Read(byte[], int, int)", span="3001-3001"];
m7_527 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", span="939-939"];
m7_528 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", file="JsonTextReaderTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''true''))", span="941-941"];
m7_529 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Error reading bytes. Unexpected token: Boolean. Path '', line 1, position 4.'',\r\n                () => { reader.ReadAsBytes(); })", span="943-945"];
m7_530 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", span="939-939"];
m7_15 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.Read()", span="299-299"];
m7_0 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", span="50-50"];
m7_1 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonTextReaderTest.cs", label="string json = @''{ ''''ItemName'''': ''''value'''', ''''u'''':netanelsalinger,''''r'''':9 }''", span="52-52"];
m7_2 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="54-54"];
m7_3 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="56-56"];
m7_4 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="57-57"];
m7_5 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="59-59"];
m7_6 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="60-60"];
m7_7 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="62-62"];
m7_8 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="63-63"];
m7_9 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="65-65"];
m7_10 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="66-66"];
m7_11 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(''Unexpected content while parsing JSON. Path 'u', line 1, position 27.'',\r\n                () => { reader.Read(); })", span="68-69"];
m7_12 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", span="50-50"];
m7_605 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", span="1074-1074"];
m7_606 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''{'hi\r\nbye':1}''))", span="1076-1076"];
m7_607 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1077-1077"];
m7_608 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1078-1078"];
m7_609 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1079-1079"];
m7_610 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(@''hi\r\nbye'', reader.Value)", span="1080-1081"];
m7_611 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1082-1082"];
m7_612 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1083-1083"];
m7_613 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1L, reader.Value)", span="1084-1084"];
m7_614 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1085-1085"];
m7_615 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1086-1086"];
m7_616 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(reader.Read())", span="1087-1087"];
m7_617 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", span="1074-1074"];
m7_1864 [cluster="Newtonsoft.Json.Tests.SlowStream.SlowStream(byte[], int)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.SlowStream.SlowStream(byte[], int)", span="2959-2959"];
m7_1865 [cluster="Newtonsoft.Json.Tests.SlowStream.SlowStream(byte[], int)", file="JsonTextReaderTest.cs", label="bytes = content", span="2961-2961"];
m7_1867 [cluster="Newtonsoft.Json.Tests.SlowStream.SlowStream(byte[], int)", file="JsonTextReaderTest.cs", label="this.bytesPerRead = bytesPerRead", span="2963-2963"];
m7_1866 [cluster="Newtonsoft.Json.Tests.SlowStream.SlowStream(byte[], int)", file="JsonTextReaderTest.cs", label="totalBytesRead = 0", span="2962-2962"];
m7_1868 [cluster="Newtonsoft.Json.Tests.SlowStream.SlowStream(byte[], int)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.SlowStream.SlowStream(byte[], int)", span="2959-2959"];
m7_1531 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", span="2460-2460"];
m7_1532 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="string json = @''/*comment*/{/*comment*/Name:/*comment*/true/*comment*/,/*comment*/\r\n        ''''ExpiryDate'''':/*comment*/new\r\n'' + StringUtils.LineFeed +\r\n                          @''Date\r\n(/*comment*/null/*comment*/),\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''':/*comment*/[/*comment*/\r\n          ''''Small''''/*comment*/]/*comment*/}/*comment*/''", span="2462-2469"];
m7_1533 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2471-2471"];
m7_1534 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2473-2473"];
m7_1535 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2474-2474"];
m7_1536 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2476-2476"];
m7_1537 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2477-2477"];
m7_1538 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2479-2479"];
m7_1539 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2480-2480"];
m7_1540 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2482-2482"];
m7_1541 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2483-2483"];
m7_1542 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''Name'', reader.Value)", span="2484-2484"];
m7_1543 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2486-2486"];
m7_1544 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2487-2487"];
m7_1545 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2489-2489"];
m7_1546 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="2490-2490"];
m7_1547 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(true, reader.Value)", span="2491-2491"];
m7_1548 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2493-2493"];
m7_1549 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2494-2494"];
m7_1550 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2496-2496"];
m7_1551 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2497-2497"];
m7_1552 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2499-2499"];
m7_1553 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2500-2500"];
m7_1554 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''ExpiryDate'', reader.Value)", span="2501-2501"];
m7_1555 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2503-2503"];
m7_1556 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2504-2504"];
m7_1557 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2506-2506"];
m7_1558 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2507-2507"];
m7_1559 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(5, reader.LineNumber)", span="2508-2508"];
m7_1560 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="2509-2509"];
m7_1561 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2511-2511"];
m7_1562 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2512-2512"];
m7_1563 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2514-2514"];
m7_1564 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="2515-2515"];
m7_1565 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2517-2517"];
m7_1566 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2518-2518"];
m7_1567 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2520-2520"];
m7_1568 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2521-2521"];
m7_1569 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", span="2460-2460"];
m7_842 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", span="614-614"];
m7_1818 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", span="2939-2939"];
m7_1855 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", file="JsonTextReaderTest.cs", label="_inner = inner", span="2941-2941"];
m7_1856 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", span="2939-2939"];
m7_107 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", span="265-265"];
m7_108 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="JsonTextReaderTest.cs", label="MemoryStream ms = new MemoryStream(Encoding.UTF8.GetBytes(@'''''''' + input + @''''''''))", span="267-267"];
m7_109 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(ms))", span="269-269"];
m7_110 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="JsonTextReaderTest.cs", label="reader.Read()", span="270-270"];
m7_111 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="JsonTextReaderTest.cs", label="string s = (string)reader.Value", span="272-272"];
m7_112 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="JsonTextReaderTest.cs", label="return s;", span="274-274"];
m7_113 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", span="265-265"];
m7_953 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", span="1555-1555"];
m7_954 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReaderTest.cs", label="string json = @''{\r\n    ''''A'''' : true,\r\n    ''''B'''' ''''''", span="1557-1559"];
m7_955 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1561-1561"];
m7_956 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReaderTest.cs", label="reader.Read()", span="1563-1563"];
m7_957 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1564-1564"];
m7_958 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReaderTest.cs", label="reader.Read()", span="1566-1566"];
m7_959 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1567-1567"];
m7_960 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReaderTest.cs", label="reader.Read()", span="1569-1569"];
m7_961 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="1570-1570"];
m7_962 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                @''Invalid character after parsing property name. Expected ':' but got: ''''. Path 'A', line 3, position 9.'',\r\n                () => { reader.Read(); })", span="1572-1574"];
m7_963 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", span="1555-1555"];
m7_1444 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", span="2330-2330"];
m7_1445 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="JsonTextReaderTest.cs", label="string json = ''new Dat''", span="2332-2332"];
m7_1446 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2333-2333"];
m7_1447 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unexpected end while parsing constructor. Path '', line 1, position 7.'',\r\n                () => { reader.Read(); })", span="2335-2337"];
m7_1448 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", span="2330-2330"];
m7_830 [cluster="System.IO.StringWriter.StringWriter(System.Text.StringBuilder)", file="JsonTextReaderTest.cs", label="Entry System.IO.StringWriter.StringWriter(System.Text.StringBuilder)", span="0-0"];
m7_977 [cluster="System.Text.Encoding.GetString(byte[], int, int)", file="JsonTextReaderTest.cs", label="Entry System.Text.Encoding.GetString(byte[], int, int)", span="0-0"];
m7_862 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", span="1421-1421"];
m7_863 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs", label="int length = 20000", span="1423-1423"];
m7_864 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs", label="string json = @''['''''' + new string(' ', length) + @'''''']''", span="1424-1424"];
m7_865 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1426-1426"];
m7_866 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs", label="reader.Read()", span="1428-1428"];
m7_867 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="1429-1429"];
m7_868 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs", label="reader.Read()", span="1431-1431"];
m7_869 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1432-1432"];
m7_870 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(string), reader.ValueType)", span="1433-1433"];
m7_871 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(20000, reader.Value.ToString().Length)", span="1434-1434"];
m7_872 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1436-1436"];
m7_873 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="1437-1437"];
m7_874 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(reader.Read())", span="1439-1439"];
m7_875 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1440-1440"];
m7_876 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", span="1421-1421"];
m7_132 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", span="296-296"];
m7_133 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="JsonTextReaderTest.cs", label="string input = @''{\r\n''''matches'''' : [\r\n{''''t'''':''''C'''', ''''n'''':''''Citigroup Inc.'''', ''''e'''':''''NYSE'''', ''''id'''':''''662713''''}\r\n,{''''t'''':''''CHL'''', ''''n'''':''''China Mobile Ltd. (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''660998''''}\r\n,{''''t'''':''''PTR'''', ''''n'''':''''PetroChina Company Limited (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''664536''''}\r\n,{''''t'''':''''RIO'''', ''''n'''':''''Companhia Vale do Rio Doce (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''671472''''}\r\n,{''''t'''':''''RIOPR'''', ''''n'''':''''Companhia Vale do Rio Doce (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''3512643''''}\r\n,{''''t'''':''''CSCO'''', ''''n'''':''''Cisco Systems, Inc.'''', ''''e'''':''''NASDAQ'''', ''''id'''':''''99624''''}\r\n,{''''t'''':''''CVX'''', ''''n'''':''''Chevron Corporation'''', ''''e'''':''''NYSE'''', ''''id'''':''''667226''''}\r\n,{''''t'''':''''TM'''', ''''n'''':''''Toyota Motor Corporation (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''655880''''}\r\n,{''''t'''':''''JPM'''', ''''n'''':''''JPMorgan Chase \\x26 Co.'''', ''''e'''':''''NYSE'''', ''''id'''':''''665639''''}\r\n,{''''t'''':''''COP'''', ''''n'''':''''ConocoPhillips'''', ''''e'''':''''NYSE'''', ''''id'''':''''1691168''''}\r\n,{''''t'''':''''LFC'''', ''''n'''':''''China Life Insurance Company Ltd. (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''688679''''}\r\n,{''''t'''':''''NOK'''', ''''n'''':''''Nokia Corporation (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''657729''''}\r\n,{''''t'''':''''KO'''', ''''n'''':''''The Coca-Cola Company'''', ''''e'''':''''NYSE'''', ''''id'''':''''6550''''}\r\n,{''''t'''':''''VZ'''', ''''n'''':''''Verizon Communications Inc.'''', ''''e'''':''''NYSE'''', ''''id'''':''''664887''''}\r\n,{''''t'''':''''AMX'''', ''''n'''':''''America Movil S.A.B de C.V. (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''665834''''}],\r\n''''all'''' : false\r\n}\r\n''", span="298-317"];
m7_134 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="JsonTextReaderTest.cs", label="JsonReader jsonReader = new JsonTextReader(new StringReader(input))", span="319-319"];
m7_135 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="321-321"];
m7_136 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="JsonTextReaderTest.cs", label="Console.WriteLine(jsonReader.Value)", span="323-323"];
m7_137 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", span="296-296"];
m7_17 [cluster="Unk.AreEqual", file="JsonTextReaderTest.cs", label="Entry Unk.AreEqual", span=""];
m7_185 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", span="410-410"];
m7_186 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", file="JsonTextReaderTest.cs", label="string json = @''[\r\n''''Small'''',\r\n''''Medium'''',\r\n''''Large''''\r\n]   \r\n\r\n''", span="412-418"];
m7_187 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="420-420"];
m7_188 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", file="JsonTextReaderTest.cs", label="reader.Read()", span="421-421"];
m7_189 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", span="410-410"];
m7_481 [cluster="BigInteger.cstr", file="JsonTextReaderTest.cs", label="Entry BigInteger.cstr", span=""];
m7_360 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", span="671-671"];
m7_361 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="JsonTextReaderTest.cs", label="string s = new string('a', 10000)", span="673-673"];
m7_362 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="JsonTextReaderTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader(''''' + s + '''''))", span="674-674"];
m7_364 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(s, reader.Value)", span="677-677"];
m7_363 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="JsonTextReaderTest.cs", label="reader.Read()", span="675-675"];
m7_365 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", span="671-671"];
m7_389 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="116-116"];
m7_157 [cluster="Newtonsoft.Json.Tests.SlowStream.SlowStream(string, System.Text.Encoding, int)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.SlowStream.SlowStream(string, System.Text.Encoding, int)", span="2966-2966"];
m7_1869 [cluster="Newtonsoft.Json.Tests.SlowStream.SlowStream(string, System.Text.Encoding, int)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.SlowStream.SlowStream(string, System.Text.Encoding, int)", span="2966-2966"];
m7_1468 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", span="2364-2364"];
m7_1469 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonTextReaderTest.cs", label="string json = ''[]''", span="2366-2366"];
m7_1470 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2367-2367"];
m7_1471 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2369-2369"];
m7_1472 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2370-2370"];
m7_1473 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2372-2372"];
m7_1474 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2373-2373"];
m7_1475 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", span="2364-2364"];
m7_634 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", span="1111-1111"];
m7_635 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs", label="string helloWorld = ''Hello world!''", span="1113-1113"];
m7_636 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs", label="byte[] helloWorldData = Encoding.UTF8.GetBytes(helloWorld)", span="1114-1114"];
m7_637 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''{num:1,data:''' + Convert.ToBase64String(helloWorldData) + @'''}''))", span="1116-1116"];
m7_645 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs", label="CollectionAssert.AreEquivalent(helloWorldData, data)", span="1124-1124"];
m7_638 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1117-1117"];
m7_639 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1118-1118"];
m7_640 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1119-1119"];
m7_641 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1120-1120"];
m7_642 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1121-1121"];
m7_643 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1122-1122"];
m7_644 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs", label="byte[] data = reader.ReadAsBytes()", span="1123-1123"];
m7_646 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Bytes, reader.TokenType)", span="1125-1125"];
m7_647 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1126-1126"];
m7_648 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1127-1127"];
m7_649 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(reader.Read())", span="1129-1129"];
m7_650 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", span="1111-1111"];
m7_792 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", span="1325-1325"];
m7_793 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="StringBuilder sb = new StringBuilder()", span="1327-1327"];
m7_794 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="StringWriter sw = new StringWriter(sb)", span="1328-1328"];
m7_820 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="string json = sb.ToString()", span="1367-1367"];
m7_795 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)\r\n            {\r\n                Formatting = Formatting.Indented\r\n            }", span="1330-1333"];
m7_796 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WriteStartArray()", span="1335-1335"];
m7_797 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WriteValue(true)", span="1336-1336"];
m7_798 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WriteStartObject()", span="1338-1338"];
m7_799 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WritePropertyName(''integer'')", span="1339-1339"];
m7_800 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WriteValue(99)", span="1340-1340"];
m7_801 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WritePropertyName(''string'')", span="1341-1341"];
m7_802 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WriteValue(''how now brown cow?'')", span="1342-1342"];
m7_803 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WritePropertyName(''array'')", span="1343-1343"];
m7_804 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WriteStartArray()", span="1345-1345"];
m7_807 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WriteValue(i)", span="1348-1348"];
m7_809 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WriteStartObject()", span="1351-1351"];
m7_810 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WritePropertyName(''decimal'')", span="1352-1352"];
m7_811 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WriteValue(990.00990099m)", span="1353-1353"];
m7_812 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WriteEndObject()", span="1354-1354"];
m7_813 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WriteValue(5)", span="1356-1356"];
m7_814 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WriteEndArray()", span="1357-1357"];
m7_815 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WriteEndObject()", span="1359-1359"];
m7_816 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WriteValue(''This is a string.'')", span="1361-1361"];
m7_817 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WriteNull()", span="1362-1362"];
m7_818 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WriteNull()", span="1363-1363"];
m7_819 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WriteEndArray()", span="1364-1364"];
m7_805 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="int i = 0", span="1346-1346"];
m7_806 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="i < 5", span="1346-1346"];
m7_808 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="i++", span="1346-1346"];
m7_821 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="1369-1369"];
m7_822 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="object jsonObject = serializer.Deserialize(new JsonTextReader(new StringReader(json)))", span="1371-1371"];
m7_827 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(json, sb.ToString())", span="1384-1384"];
m7_826 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="serializer.Serialize(jsonWriter, jsonObject)", span="1381-1381"];
m7_823 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="sb = new StringBuilder()", span="1373-1373"];
m7_824 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="sw = new StringWriter(sb)", span="1374-1374"];
m7_825 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)\r\n            {\r\n                Formatting = Formatting.Indented\r\n            }", span="1376-1379"];
m7_828 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", span="1325-1325"];
m7_93 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", span="231-231"];
m7_94 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''ABC \ud800\udc00 DEF'', ReadString(''ABC \\ud800\\udc00 DEF''))", span="234-234"];
m7_95 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''ABC \ufffd\ufffd DEF'', ReadString(''ABC \\ud800\\ud800 DEF''))", span="237-237"];
m7_96 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''ABC \ufffd\ufffd\u1234 DEF'', ReadString(''ABC \\ud800\\ud800\\u1234 DEF''))", span="240-240"];
m7_97 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''ABC \ufffd\ufffd\ufffd DEF'', ReadString(''ABC \\ud800\\ud800\\ud800 DEF''))", span="243-243"];
m7_98 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''ABC \ufffd\ud800\udc00 DEF'', ReadString(''ABC \\ud800\\ud800\\udc00 DEF''))", span="246-246"];
m7_99 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''ABC \ufffd'', ReadString(''ABC \\ud800''))", span="249-249"];
m7_100 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''ABC \ufffd DEF'', ReadString(''ABC \\ud800 DEF''))", span="252-252"];
m7_101 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''ABC \ufffd\ufffd DEF'', ReadString(''ABC \\udc00\\ud800 DEF''))", span="255-255"];
m7_102 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''\ufffd\ufffd\ufffd'', ReadString(''\udc00\ud800\ud800''))", span="258-258"];
m7_103 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''ABC \ufffd\b'', ReadString(''ABC \\ud800\\b''))", span="260-260"];
m7_104 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''ABC \ufffd '', ReadString(''ABC \\ud800 ''))", span="261-261"];
m7_105 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''ABC \b\ufffd'', ReadString(''ABC \\b\\ud800''))", span="262-262"];
m7_106 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", span="231-231"];
m7_392 [cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="381-381"];
m7_1348 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", span="2152-2152"];
m7_1349 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonTextReaderTest.cs", label="string json = @''[\r\n  {\r\n    ''''Name'''': ''''Jim'''',\r\n    ''''BirthDate'''': ''''\/Date(978048000000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(978048000000)\/''''\r\n  },\r\n  {\r\n    ''''Name'''': ''''Jim'''',\r\n    ''''BirthDate'''': ''''\/Date(978048000000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(978048000000)\/''''\r\n  }\r\n]''", span="2154-2165"];
m7_1350 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2167-2167"];
m7_1351 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonTextReaderTest.cs", label="int i = 0", span="2172-2172"];
m7_1353 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonTextReaderTest.cs", label="reader.Read()", span="2174-2174"];
m7_1355 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2177-2177"];
m7_1356 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(new DateTime(631136448000000000), reader.Value)", span="2178-2178"];
m7_1352 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonTextReaderTest.cs", label="i < 13", span="2172-2172"];
m7_1354 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonTextReaderTest.cs", label="i++", span="2172-2172"];
m7_1357 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", span="2152-2152"];
m7_1358 [cluster="System.DateTime.DateTime(long)", file="JsonTextReaderTest.cs", label="Entry System.DateTime.DateTime(long)", span="0-0"];
m7_468 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", span="836-836"];
m7_469 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonTextReaderTest.cs", label="BigInteger i = new BigInteger(long.MaxValue)", span="838-838"];
m7_470 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(i.ToString(CultureInfo.InvariantCulture)))", span="840-840"];
m7_475 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonTextReaderTest.cs", label="BigInteger total = i + j", span="846-846"];
m7_471 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonTextReaderTest.cs", label="reader.Read()", span="841-841"];
m7_472 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(long), reader.ValueType)", span="842-842"];
m7_473 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonTextReaderTest.cs", label="int j = 1", span="844-844"];
m7_474 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonTextReaderTest.cs", label="j < 1000", span="844-844"];
m7_479 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonTextReaderTest.cs", label="j++", span="844-844"];
m7_476 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="848-848"];
m7_477 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonTextReaderTest.cs", label="reader.Read()", span="849-849"];
m7_478 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(BigInteger), reader.ValueType)", span="851-851"];
m7_480 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", span="836-836"];
m7_1046 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", span="1690-1690"];
m7_1047 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''''))", span="1692-1692"];
m7_1048 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="JsonTextReaderTest.cs", label="Assert.IsNull(reader.ReadAsDecimal())", span="1694-1694"];
m7_1049 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1695-1695"];
m7_1050 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", span="1690-1690"];
m7_877 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", span="1444-1444"];
m7_878 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReaderTest.cs", label="string json = @''[''''\u003c'''',''''\u5f20'''']''", span="1446-1446"];
m7_879 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1448-1448"];
m7_880 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReaderTest.cs", label="reader.Read()", span="1453-1453"];
m7_881 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="1454-1454"];
m7_882 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReaderTest.cs", label="reader.Read()", span="1456-1456"];
m7_883 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''<'', reader.Value)", span="1457-1457"];
m7_884 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReaderTest.cs", label="reader.Read()", span="1459-1459"];
m7_885 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(24352, Convert.ToInt32(Convert.ToChar((string)reader.Value)))", span="1460-1460"];
m7_886 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReaderTest.cs", label="reader.Read()", span="1462-1462"];
m7_887 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="1463-1463"];
m7_888 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", span="1444-1444"];
m7_1153 [cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", file="JsonTextReaderTest.cs", label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", span="0-0"];
m7_1170 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", span="1885-1885"];
m7_1171 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonTextReaderTest.cs", label="string json = @''{''''Offset'''':''''blablahbla''''}''", span="1887-1887"];
m7_1172 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1889-1889"];
m7_1173 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1891-1891"];
m7_1174 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1892-1892"];
m7_1175 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1894-1894"];
m7_1176 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1895-1895"];
m7_1177 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Could not convert string to DateTimeOffset: blablahbla. Path 'Offset', line 1, position 22.'',\r\n                () => { reader.ReadAsDateTimeOffset(); })", span="1897-1899"];
m7_1178 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", span="1885-1885"];
m7_671 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewlineLastCharacter()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewlineLastCharacter()", span="1164-1164"];
m7_672 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewlineLastCharacter()", file="JsonTextReaderTest.cs", label="string input = @''{\r\n  CPU: 'Intel',\r\n  Drives: [ /* Com*ment */\r\n    'DVD read/writer',\r\n    ''''500 gigabyte hard drive''''\r\n  ]\r\n}'' + '\n'", span="1166-1172"];
m7_673 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewlineLastCharacter()", file="JsonTextReaderTest.cs", label="object o = JsonConvert.DeserializeObject(input)", span="1174-1174"];
m7_674 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewlineLastCharacter()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewlineLastCharacter()", span="1164-1164"];
m7_1090 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", span="1761-1761"];
m7_1091 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[/*hi*/1/*hi*/,2/*hi*/]''))", span="1763-1763"];
m7_1092 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonTextReaderTest.cs", label="byte[] data = reader.ReadAsBytes()", span="1765-1765"];
m7_1093 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, data.Length)", span="1766-1766"];
m7_1094 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, data[0])", span="1767-1767"];
m7_1095 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, data[1])", span="1768-1768"];
m7_1096 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", span="1761-1761"];
m7_1854 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", span="537-537"];
m7_1083 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", span="1750-1750"];
m7_1084 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''new Date()''))", span="1752-1752"];
m7_1085 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Error reading date. Unexpected token: StartConstructor. Path '', line 1, position 9.'',\r\n                () => { reader.ReadAsDateTimeOffset(); })", span="1754-1756"];
m7_1086 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", span="1750-1750"];
m7_560 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", span="983-983"];
m7_561 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="string newLinesText = StringUtils.CarriageReturn + StringUtils.CarriageReturnLineFeed + StringUtils.LineFeed + StringUtils.CarriageReturnLineFeed + '' '' + StringUtils.CarriageReturn + StringUtils.CarriageReturnLineFeed", span="985-985"];
m7_562 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="string json =\r\n                newLinesText\r\n                + ''{'' + newLinesText\r\n                + ''''' + newLinesText\r\n                + ''name1'' + newLinesText\r\n                + ''''' + newLinesText\r\n                + '':'' + newLinesText\r\n                + ''['' + newLinesText\r\n                + ''new'' + newLinesText\r\n                + ''Date'' + newLinesText\r\n                + ''('' + newLinesText\r\n                + ''1'' + newLinesText\r\n                + '','' + newLinesText\r\n                + ''null'' + newLinesText\r\n                + ''/*'' + newLinesText\r\n                + ''blah comment'' + newLinesText\r\n                + ''*/'' + newLinesText\r\n                + '')'' + newLinesText\r\n                + '','' + newLinesText\r\n                + ''1.1111'' + newLinesText\r\n                + '']'' + newLinesText\r\n                + '','' + newLinesText\r\n                + ''name2'' + newLinesText\r\n                + '':'' + newLinesText\r\n                + ''{'' + newLinesText\r\n                + ''}'' + newLinesText\r\n                + ''}'' + newLinesText", span="987-1013"];
m7_564 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="StringReader sr = new StringReader(newLinesText)", span="1016-1016"];
m7_572 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(newLinesText + ''name1'' + newLinesText, reader.Value)", span="1028-1028"];
m7_587 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(newLinesText + ''blah comment'' + newLinesText, reader.Value)", span="1048-1048"];
m7_563 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="int count = 0", span="1015-1015"];
m7_567 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="1022-1022"];
m7_566 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="count++", span="1019-1019"];
m7_565 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="sr.ReadLine() != null", span="1017-1017"];
m7_568 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1023-1023"];
m7_569 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(7, reader.LineNumber)", span="1024-1024"];
m7_570 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1026-1026"];
m7_571 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(31, reader.LineNumber)", span="1027-1027"];
m7_573 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1030-1030"];
m7_574 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(37, reader.LineNumber)", span="1031-1031"];
m7_575 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1033-1033"];
m7_576 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(55, reader.LineNumber)", span="1034-1034"];
m7_577 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="1035-1035"];
m7_578 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="1036-1036"];
m7_579 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1038-1038"];
m7_580 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(61, reader.LineNumber)", span="1039-1039"];
m7_581 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1L, reader.Value)", span="1040-1040"];
m7_582 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1042-1042"];
m7_583 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(73, reader.LineNumber)", span="1043-1043"];
m7_584 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(null, reader.Value)", span="1044-1044"];
m7_585 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1046-1046"];
m7_586 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(91, reader.LineNumber)", span="1047-1047"];
m7_588 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1050-1050"];
m7_589 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(97, reader.LineNumber)", span="1051-1051"];
m7_590 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1053-1053"];
m7_591 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(109, reader.LineNumber)", span="1054-1054"];
m7_592 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1056-1056"];
m7_593 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(115, reader.LineNumber)", span="1057-1057"];
m7_594 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1059-1059"];
m7_595 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(133, reader.LineNumber)", span="1060-1060"];
m7_596 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''name2'', reader.Value)", span="1061-1061"];
m7_597 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1063-1063"];
m7_598 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(139, reader.LineNumber)", span="1064-1064"];
m7_599 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1066-1066"];
m7_600 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(145, reader.LineNumber)", span="1067-1067"];
m7_601 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1069-1069"];
m7_602 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(151, reader.LineNumber)", span="1070-1070"];
m7_603 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", span="983-983"];
m7_844 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", span="1388-1388"];
m7_845 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs", label="string input = @''[\r\n  NaN,\r\n  Infinity,\r\n  -Infinity\r\n]''", span="1390-1394"];
m7_846 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs", label="StringReader sr = new StringReader(input)", span="1396-1396"];
m7_847 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs", label="JsonReader jsonReader = new JsonTextReader(sr)", span="1398-1398"];
m7_848 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1400-1400"];
m7_849 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.StartArray)", span="1401-1401"];
m7_850 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1403-1403"];
m7_851 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.Float)", span="1404-1404"];
m7_852 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.Value, double.NaN)", span="1405-1405"];
m7_853 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1407-1407"];
m7_854 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.Float)", span="1408-1408"];
m7_855 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.Value, double.PositiveInfinity)", span="1409-1409"];
m7_856 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1411-1411"];
m7_857 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.Float)", span="1412-1412"];
m7_858 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.Value, double.NegativeInfinity)", span="1413-1413"];
m7_859 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1415-1415"];
m7_860 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.EndArray)", span="1416-1416"];
m7_861 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", span="1388-1388"];
m7_836 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="810-810"];
m7_1196 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", span="1925-1925"];
m7_1197 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs", label="string json = @''{''''Offset'''':''''\/Date(946708260000-0631)\/''''}''", span="1927-1927"];
m7_1198 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1929-1929"];
m7_1199 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1931-1931"];
m7_1200 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1932-1932"];
m7_1201 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1934-1934"];
m7_1202 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1935-1935"];
m7_1203 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs", label="reader.ReadAsDateTimeOffset()", span="1937-1937"];
m7_1204 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="1938-1938"];
m7_1205 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="1939-1939"];
m7_1206 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(-6).Add(TimeSpan.FromMinutes(-31))), reader.Value)", span="1940-1940"];
m7_1207 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1942-1942"];
m7_1208 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1943-1943"];
m7_1209 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", span="1925-1925"];
m7_1406 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", span="2271-2271"];
m7_1407 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''1 2 ''''name'''' [][]null {}{} 1.1''))", span="2273-2273"];
m7_1408 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="reader.SupportMultipleContent = true", span="2274-2274"];
m7_1409 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2276-2276"];
m7_1410 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2277-2277"];
m7_1411 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2279-2279"];
m7_1412 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2280-2280"];
m7_1413 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2282-2282"];
m7_1414 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="2283-2283"];
m7_1415 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2285-2285"];
m7_1416 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2286-2286"];
m7_1417 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2288-2288"];
m7_1418 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2289-2289"];
m7_1419 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2291-2291"];
m7_1420 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2292-2292"];
m7_1421 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2294-2294"];
m7_1422 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2295-2295"];
m7_1423 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2297-2297"];
m7_1424 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="2298-2298"];
m7_1425 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2300-2300"];
m7_1426 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2301-2301"];
m7_1427 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2303-2303"];
m7_1428 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2304-2304"];
m7_1429 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2306-2306"];
m7_1430 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2307-2307"];
m7_1431 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2309-2309"];
m7_1432 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2310-2310"];
m7_1433 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2312-2312"];
m7_1434 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2313-2313"];
m7_1435 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(reader.Read())", span="2315-2315"];
m7_1436 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", span="2271-2271"];
m7_1063 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", span="1719-1719"];
m7_1064 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''''))", span="1721-1721"];
m7_1065 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="JsonTextReaderTest.cs", label="Assert.IsNull(reader.ReadAsDateTimeOffset())", span="1723-1723"];
m7_1066 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1724-1724"];
m7_1067 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", span="1719-1719"];
m7_1437 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", span="2319-2319"];
m7_1438 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonTextReaderTest.cs", label="string json = ''[true ''", span="2321-2321"];
m7_1439 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2322-2322"];
m7_1440 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2324-2324"];
m7_1441 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2325-2325"];
m7_1442 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(reader.Read())", span="2326-2326"];
m7_1443 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", span="2319-2319"];
m7_1862 [cluster="System.Exception.Exception(string)", file="JsonTextReaderTest.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m7_1665 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", span="2672-2672"];
m7_1666 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="string json = ''[[[[]]],[[]]]''", span="2674-2674"];
m7_1667 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                MaxDepth = 1\r\n            }", span="2676-2679"];
m7_1668 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2681-2681"];
m7_1669 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0, reader.Depth)", span="2682-2682"];
m7_1670 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''The reader's MaxDepth of 1 has been exceeded. Path '[0]', line 1, position 2.'',\r\n                () => { Assert.IsTrue(reader.Read()); })", span="2684-2686"];
m7_1671 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, reader.Depth)", span="2687-2687"];
m7_1672 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2689-2689"];
m7_1673 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, reader.Depth)", span="2690-2690"];
m7_1674 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2692-2692"];
m7_1675 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(3, reader.Depth)", span="2693-2693"];
m7_1676 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2695-2695"];
m7_1677 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(3, reader.Depth)", span="2696-2696"];
m7_1678 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2698-2698"];
m7_1679 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, reader.Depth)", span="2699-2699"];
m7_1680 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2701-2701"];
m7_1681 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, reader.Depth)", span="2702-2702"];
m7_1682 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''The reader's MaxDepth of 1 has been exceeded. Path '[1]', line 1, position 9.'',\r\n                () => { Assert.IsTrue(reader.Read()); })", span="2704-2706"];
m7_1683 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, reader.Depth)", span="2707-2707"];
m7_1684 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2709-2709"];
m7_1685 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, reader.Depth)", span="2710-2710"];
m7_1686 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2712-2712"];
m7_1687 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, reader.Depth)", span="2713-2713"];
m7_1688 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2715-2715"];
m7_1689 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, reader.Depth)", span="2716-2716"];
m7_1690 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2718-2718"];
m7_1691 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0, reader.Depth)", span="2719-2719"];
m7_1692 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(reader.Read())", span="2721-2721"];
m7_1693 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", span="2672-2672"];
m7_190 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", span="427-427"];
m7_191 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="JsonTextReaderTest.cs", label="string json = @'''hi' a''", span="429-429"];
m7_192 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="431-431"];
m7_193 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Additional text encountered after finished reading JSON content: a. Path '', line 1, position 5.'',\r\n                () =>\r\n                {\r\n                    while (reader.Read())\r\n                    {\r\n                    }\r\n                })", span="433-440"];
m7_194 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", span="427-427"];
m7_1870 [cluster="Newtonsoft.Json.Tests.SlowStream.Flush()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.SlowStream.Flush()", span="2986-2986"];
m7_1871 [cluster="Newtonsoft.Json.Tests.SlowStream.Flush()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.SlowStream.Flush()", span="2986-2986"];
m7_159 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", span="355-355"];
m7_160 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="JsonTextReaderTest.cs", label="string json = @''[\r\n''''Small'''',\r\n''''Medium'''',\r\n''''Large''''\r\n],''", span="357-361"];
m7_161 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="363-363"];
m7_162 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Additional text encountered after finished reading JSON content: ,. Path '', line 5, position 2.'',\r\n                () =>\r\n                {\r\n                    while (reader.Read())\r\n                    {\r\n                    }\r\n                })", span="365-372"];
m7_163 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", span="355-355"];
m7_841 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="418-418"];
m7_1156 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", span="1863-1863"];
m7_1157 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs", label="string json = @''{''''Offset'''':''''\/Date(946706400000-0600)\/''''}''", span="1865-1865"];
m7_1158 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1867-1867"];
m7_1159 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1869-1869"];
m7_1160 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1870-1870"];
m7_1161 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1872-1872"];
m7_1162 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1873-1873"];
m7_1163 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs", label="reader.ReadAsDateTimeOffset()", span="1875-1875"];
m7_1164 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="1876-1876"];
m7_1165 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="1877-1877"];
m7_1166 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(-6)), reader.Value)", span="1878-1878"];
m7_1167 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1880-1880"];
m7_1168 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1881-1881"];
m7_1169 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", span="1863-1863"];
m7_366 [cluster="string.String(char, int)", file="JsonTextReaderTest.cs", label="Entry string.String(char, int)", span="0-0"];
m7_1892 [file="JsonTextReaderTest.cs", label=reader, span=""];
m7_1893 [file="JsonTextReaderTest.cs", label=reader, span=""];
m7_1894 [file="JsonTextReaderTest.cs", label="Newtonsoft.Json.Tests.JsonTextReaderTest", span=""];
m7_1895 [file="JsonTextReaderTest.cs", label=reader, span=""];
m7_1896 [file="JsonTextReaderTest.cs", label=reader, span=""];
m7_1897 [file="JsonTextReaderTest.cs", label=reader, span=""];
m7_1898 [file="JsonTextReaderTest.cs", label=reader, span=""];
m7_1899 [file="JsonTextReaderTest.cs", label=total, span=""];
m7_1900 [file="JsonTextReaderTest.cs", label=total, span=""];
m7_1901 [file="JsonTextReaderTest.cs", label=reader, span=""];
m7_1902 [file="JsonTextReaderTest.cs", label=reader, span=""];
m7_1903 [file="JsonTextReaderTest.cs", label=reader, span=""];
m7_1904 [file="JsonTextReaderTest.cs", label=reader, span=""];
m7_1905 [file="JsonTextReaderTest.cs", label=reader, span=""];
m7_1906 [file="JsonTextReaderTest.cs", label=reader, span=""];
m7_1907 [file="JsonTextReaderTest.cs", label=reader, span=""];
m7_1908 [file="JsonTextReaderTest.cs", label=reader, span=""];
m7_1909 [file="JsonTextReaderTest.cs", label=reader, span=""];
m7_1910 [file="JsonTextReaderTest.cs", label=reader, span=""];
m7_1911 [file="JsonTextReaderTest.cs", label=reader, span=""];
m7_1912 [file="JsonTextReaderTest.cs", label=reader, span=""];
m7_1913 [file="JsonTextReaderTest.cs", label=reader, span=""];
m7_1914 [file="JsonTextReaderTest.cs", label=reader, span=""];
m7_1915 [file="JsonTextReaderTest.cs", label=reader, span=""];
m7_1916 [file="JsonTextReaderTest.cs", label=reader, span=""];
m7_1917 [file="JsonTextReaderTest.cs", label=reader, span=""];
m7_1918 [file="JsonTextReaderTest.cs", label=reader, span=""];
m7_1919 [file="JsonTextReaderTest.cs", label=reader, span=""];
m7_1920 [file="JsonTextReaderTest.cs", label=reader, span=""];
m7_1921 [file="JsonTextReaderTest.cs", label=reader, span=""];
m7_1922 [file="JsonTextReaderTest.cs", label=reader, span=""];
m7_1923 [file="JsonTextReaderTest.cs", label=reader, span=""];
m7_1924 [file="JsonTextReaderTest.cs", label=reader, span=""];
m7_1925 [file="JsonTextReaderTest.cs", label=reader, span=""];
m7_1926 [file="JsonTextReaderTest.cs", label=reader, span=""];
m7_1927 [file="JsonTextReaderTest.cs", label=reader, span=""];
m7_1928 [file="JsonTextReaderTest.cs", label=reader, span=""];
m7_1929 [file="JsonTextReaderTest.cs", label=reader, span=""];
m7_1930 [file="JsonTextReaderTest.cs", label=reader, span=""];
m7_1931 [file="JsonTextReaderTest.cs", label=jsonTextReader, span=""];
m7_1932 [file="JsonTextReaderTest.cs", label="Newtonsoft.Json.Tests.ToggleReaderError", span=""];
m7_1933 [file="JsonTextReaderTest.cs", label="Newtonsoft.Json.Tests.SlowStream", span=""];
m8_372 [cluster="Newtonsoft.Json.JsonSerializer.CreateDefault()", file="JValue.cs", label="Entry Newtonsoft.Json.JsonSerializer.CreateDefault()", span="475-475"];
m8_57 [cluster="System.Math.Truncate(double)", file="JValue.cs", label="Entry System.Math.Truncate(double)", span="0-0"];
m8_438 [cluster="Newtonsoft.Json.Utilities.DynamicProxyMetaObject<T>.DynamicProxyMetaObject(System.Linq.Expressions.Expression, T, Newtonsoft.Json.Utilities.DynamicProxy<T>, bool)", file="JValue.cs", label="Entry Newtonsoft.Json.Utilities.DynamicProxyMetaObject<T>.DynamicProxyMetaObject(System.Linq.Expressions.Expression, T, Newtonsoft.Json.Utilities.DynamicProxy<T>, bool)", span="40-40"];
m8_527 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt32(System.IFormatProvider)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt32(System.IFormatProvider)", span="970-970"];
m8_528 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt32(System.IFormatProvider)", file="JValue.cs", label="return (int)this;", span="972-972"];
m8_529 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt32(System.IFormatProvider)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt32(System.IFormatProvider)", span="970-970"];
m8_153 [cluster="System.Uri.ToString()", file="JValue.cs", label="Entry System.Uri.ToString()", span="0-0"];
m8_4 [cluster="Newtonsoft.Json.Linq.JValue.JValue(Newtonsoft.Json.Linq.JValue)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(Newtonsoft.Json.Linq.JValue)", span="61-61"];
m8_5 [cluster="Newtonsoft.Json.Linq.JValue.JValue(Newtonsoft.Json.Linq.JValue)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValue(Newtonsoft.Json.Linq.JValue)", span="61-61"];
m8_317 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="613-613"];
m8_318 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="converters != null && converters.Length > 0 && _value != null", span="615-615"];
m8_319 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="JsonConverter matchingConverter = JsonSerializer.GetMatchingConverter(converters, _value.GetType())", span="617-617"];
m8_321 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="matchingConverter.WriteJson(writer, _value, JsonSerializer.CreateDefault())", span="620-620"];
m8_325 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="writer.WriteComment((_value != null) ? _value.ToString() : null)", span="628-628"];
m8_328 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="writer.WriteRawValue((_value != null) ? _value.ToString() : null)", span="631-631"];
m8_331 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="writer.WriteNull()", span="634-634"];
m8_334 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="writer.WriteUndefined()", span="637-637"];
m8_338 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="writer.WriteValue((BigInteger)_value)", span="642-642"];
m8_339 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="writer.WriteValue(Convert.ToInt64(_value, CultureInfo.InvariantCulture))", span="645-645"];
m8_343 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="writer.WriteValue((decimal)_value)", span="649-649"];
m8_345 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="writer.WriteValue((double)_value)", span="651-651"];
m8_347 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="writer.WriteValue((float)_value)", span="653-653"];
m8_348 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="writer.WriteValue(Convert.ToDouble(_value, CultureInfo.InvariantCulture))", span="655-655"];
m8_351 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="writer.WriteValue((_value != null) ? _value.ToString() : null)", span="658-658"];
m8_354 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="writer.WriteValue(Convert.ToBoolean(_value, CultureInfo.InvariantCulture))", span="661-661"];
m8_358 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="writer.WriteValue((DateTimeOffset)_value)", span="666-666"];
m8_359 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="writer.WriteValue(Convert.ToDateTime(_value, CultureInfo.InvariantCulture))", span="669-669"];
m8_362 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="writer.WriteValue((byte[])_value)", span="672-672"];
m8_367 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="writer.WriteValue((_value != null) ? _value.ToString() : null)", span="677-677"];
m8_323 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label=_valueType, span="625-625"];
m8_320 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="matchingConverter != null && matchingConverter.CanWrite", span="618-618"];
m8_322 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="return;", span="621-621"];
m8_324 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="JTokenType.Comment", span="627-627"];
m8_327 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="JTokenType.Raw", span="630-630"];
m8_330 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="JTokenType.Null", span="633-633"];
m8_333 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="JTokenType.Undefined", span="636-636"];
m8_336 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="JTokenType.Integer", span="639-639"];
m8_341 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="JTokenType.Float", span="647-647"];
m8_350 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="JTokenType.String", span="657-657"];
m8_353 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="JTokenType.Boolean", span="660-660"];
m8_356 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="JTokenType.Date", span="663-663"];
m8_361 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="JTokenType.Bytes", span="671-671"];
m8_364 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="JTokenType.Guid", span="674-674"];
m8_326 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="return;", span="629-629"];
m8_329 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="return;", span="632-632"];
m8_332 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="return;", span="635-635"];
m8_335 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="return;", span="638-638"];
m8_337 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="_value is BigInteger", span="641-641"];
m8_340 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="return;", span="646-646"];
m8_342 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="_value is decimal", span="648-648"];
m8_344 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="_value is double", span="650-650"];
m8_346 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="_value is float", span="652-652"];
m8_349 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="return;", span="656-656"];
m8_352 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="return;", span="659-659"];
m8_355 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="return;", span="662-662"];
m8_357 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="_value is DateTimeOffset", span="665-665"];
m8_360 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="return;", span="670-670"];
m8_363 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="return;", span="673-673"];
m8_365 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="JTokenType.Uri", span="675-675"];
m8_366 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="JTokenType.TimeSpan", span="676-676"];
m8_368 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="return;", span="678-678"];
m8_370 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="throw MiscellaneousUtils.CreateArgumentOutOfRangeException(''TokenType'', _valueType, ''Unexpected token type.'');", span="681-681"];
m8_369 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="613-613"];
m8_410 [cluster="Newtonsoft.Json.Linq.JValue.GetHashCode()", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.GetHashCode()", span="739-739"];
m8_411 [cluster="Newtonsoft.Json.Linq.JValue.GetHashCode()", file="JValue.cs", label="_value == null", span="741-741"];
m8_412 [cluster="Newtonsoft.Json.Linq.JValue.GetHashCode()", file="JValue.cs", label="return 0;", span="742-742"];
m8_413 [cluster="Newtonsoft.Json.Linq.JValue.GetHashCode()", file="JValue.cs", label="return _value.GetHashCode();", span="744-744"];
m8_414 [cluster="Newtonsoft.Json.Linq.JValue.GetHashCode()", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.GetHashCode()", span="739-739"];
m8_140 [cluster="System.Convert.ToInt64(object, System.IFormatProvider)", file="JValue.cs", label="Entry System.Convert.ToInt64(object, System.IFormatProvider)", span="0-0"];
m8_377 [cluster="Newtonsoft.Json.JsonWriter.WriteUndefined()", file="JValue.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteUndefined()", span="780-780"];
m8_376 [cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="JValue.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="772-772"];
m8_545 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDecimal(System.IFormatProvider)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDecimal(System.IFormatProvider)", span="1000-1000"];
m8_546 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDecimal(System.IFormatProvider)", file="JValue.cs", label="return (decimal)this;", span="1002-1002"];
m8_547 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDecimal(System.IFormatProvider)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDecimal(System.IFormatProvider)", span="1000-1000"];
m8_16 [cluster="Newtonsoft.Json.Linq.JValue.JValue(System.DateTime)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.DateTime)", span="116-116"];
m8_17 [cluster="Newtonsoft.Json.Linq.JValue.JValue(System.DateTime)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValue(System.DateTime)", span="116-116"];
m8_26 [cluster="Newtonsoft.Json.Linq.JValue.JValue(System.TimeSpan)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.TimeSpan)", span="161-161"];
m8_27 [cluster="Newtonsoft.Json.Linq.JValue.JValue(System.TimeSpan)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValue(System.TimeSpan)", span="161-161"];
m8_165 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", span="351-351"];
m8_166 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="objA is string || objB is string", span="353-353"];
m8_167 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="operation == ExpressionType.Add || operation == ExpressionType.AddAssign", span="355-355"];
m8_168 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="result = ((objA != null) ? objA.ToString() : null) + ((objB != null) ? objB.ToString() : null)", span="357-357"];
m8_170 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="objA is BigInteger || objB is BigInteger", span="363-363"];
m8_171 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="objA == null || objB == null", span="365-365"];
m8_174 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="BigInteger i1 = ConvertUtils.ToBigInteger(objA)", span="373-373"];
m8_175 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="BigInteger i2 = ConvertUtils.ToBigInteger(objB)", span="374-374"];
m8_176 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label=operation, span="376-376"];
m8_193 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="objA is ulong || objB is ulong || objA is decimal || objB is decimal", span="398-398"];
m8_194 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="objA == null || objB == null", span="400-400"];
m8_197 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="decimal d1 = Convert.ToDecimal(objA, CultureInfo.InvariantCulture)", span="406-406"];
m8_198 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="decimal d2 = Convert.ToDecimal(objB, CultureInfo.InvariantCulture)", span="407-407"];
m8_199 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label=operation, span="409-409"];
m8_216 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="objA is float || objB is float || objA is double || objB is double", span="429-429"];
m8_217 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="objA == null || objB == null", span="431-431"];
m8_220 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="double d1 = Convert.ToDouble(objA, CultureInfo.InvariantCulture)", span="437-437"];
m8_221 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="double d2 = Convert.ToDouble(objB, CultureInfo.InvariantCulture)", span="438-438"];
m8_222 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label=operation, span="440-440"];
m8_239 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="objA is int || objA is uint || objA is long || objA is short || objA is ushort || objA is sbyte || objA is byte ||\r\n                         objB is int || objB is uint || objB is long || objB is short || objB is ushort || objB is sbyte || objB is byte", span="460-461"];
m8_240 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="objA == null || objB == null", span="463-463"];
m8_243 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="long l1 = Convert.ToInt64(objA, CultureInfo.InvariantCulture)", span="469-469"];
m8_244 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="long l2 = Convert.ToInt64(objB, CultureInfo.InvariantCulture)", span="470-470"];
m8_245 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label=operation, span="472-472"];
m8_169 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="return true;", span="358-358"];
m8_172 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="result = null", span="367-367"];
m8_173 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="return true;", span="368-368"];
m8_179 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="result = i1 + i2", span="380-380"];
m8_183 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="result = i1 - i2", span="384-384"];
m8_187 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="result = i1 * i2", span="388-388"];
m8_191 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="result = i1 / i2", span="392-392"];
m8_177 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.Add", span="378-378"];
m8_181 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.Subtract", span="382-382"];
m8_185 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.Multiply", span="386-386"];
m8_189 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.Divide", span="390-390"];
m8_178 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.AddAssign", span="379-379"];
m8_180 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="return true;", span="381-381"];
m8_182 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.SubtractAssign", span="383-383"];
m8_184 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="return true;", span="385-385"];
m8_186 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.MultiplyAssign", span="387-387"];
m8_188 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="return true;", span="389-389"];
m8_190 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.DivideAssign", span="391-391"];
m8_192 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="return true;", span="393-393"];
m8_195 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="result = null", span="402-402"];
m8_196 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="return true;", span="403-403"];
m8_202 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="result = d1 + d2", span="413-413"];
m8_206 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="result = d1 - d2", span="417-417"];
m8_210 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="result = d1 * d2", span="421-421"];
m8_214 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="result = d1 / d2", span="425-425"];
m8_200 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.Add", span="411-411"];
m8_204 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.Subtract", span="415-415"];
m8_208 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.Multiply", span="419-419"];
m8_212 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.Divide", span="423-423"];
m8_201 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.AddAssign", span="412-412"];
m8_203 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="return true;", span="414-414"];
m8_205 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.SubtractAssign", span="416-416"];
m8_207 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="return true;", span="418-418"];
m8_209 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.MultiplyAssign", span="420-420"];
m8_211 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="return true;", span="422-422"];
m8_213 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.DivideAssign", span="424-424"];
m8_215 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="return true;", span="426-426"];
m8_218 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="result = null", span="433-433"];
m8_219 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="return true;", span="434-434"];
m8_225 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="result = d1 + d2", span="444-444"];
m8_229 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="result = d1 - d2", span="448-448"];
m8_233 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="result = d1 * d2", span="452-452"];
m8_237 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="result = d1 / d2", span="456-456"];
m8_223 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.Add", span="442-442"];
m8_227 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.Subtract", span="446-446"];
m8_231 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.Multiply", span="450-450"];
m8_235 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.Divide", span="454-454"];
m8_224 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.AddAssign", span="443-443"];
m8_226 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="return true;", span="445-445"];
m8_228 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.SubtractAssign", span="447-447"];
m8_230 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="return true;", span="449-449"];
m8_232 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.MultiplyAssign", span="451-451"];
m8_234 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="return true;", span="453-453"];
m8_236 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.DivideAssign", span="455-455"];
m8_238 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="return true;", span="457-457"];
m8_262 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="result = null", span="493-493"];
m8_241 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="result = null", span="465-465"];
m8_242 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="return true;", span="466-466"];
m8_248 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="result = l1 + l2", span="476-476"];
m8_252 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="result = l1 - l2", span="480-480"];
m8_256 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="result = l1 * l2", span="484-484"];
m8_260 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="result = l1 / l2", span="488-488"];
m8_246 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.Add", span="474-474"];
m8_250 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.Subtract", span="478-478"];
m8_254 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.Multiply", span="482-482"];
m8_258 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.Divide", span="486-486"];
m8_247 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.AddAssign", span="475-475"];
m8_249 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="return true;", span="477-477"];
m8_251 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.SubtractAssign", span="479-479"];
m8_253 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="return true;", span="481-481"];
m8_255 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.MultiplyAssign", span="483-483"];
m8_257 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="return true;", span="485-485"];
m8_259 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.DivideAssign", span="487-487"];
m8_261 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="return true;", span="489-489"];
m8_263 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="return false;", span="494-494"];
m8_264 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", span="351-351"];
m8_374 [cluster="Newtonsoft.Json.JsonWriter.WriteComment(string)", file="JValue.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteComment(string)", span="1237-1237"];
m8_149 [cluster="System.DateTimeOffset.CompareTo(System.DateTimeOffset)", file="JValue.cs", label="Entry System.DateTimeOffset.CompareTo(System.DateTimeOffset)", span="0-0"];
m8_52 [cluster="Unk.CompareTo", file="JValue.cs", label="Entry Unk.CompareTo", span=""];
m8_145 [cluster="bool.CompareTo(bool)", file="JValue.cs", label="Entry bool.CompareTo(bool)", span="0-0"];
m8_393 [cluster="System.Enum.GetHashCode()", file="JValue.cs", label="Entry System.Enum.GetHashCode()", span="0-0"];
m8_392 [cluster="object.GetHashCode()", file="JValue.cs", label="Entry object.GetHashCode()", span="0-0"];
m8_380 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(decimal)", file="JValue.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(decimal)", span="931-931"];
m8_275 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", span="523-523"];
m8_276 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="value == null", span="525-525"];
m8_278 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="value == DBNull.Value", span="528-528"];
m8_280 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="value is string", span="531-531"];
m8_281 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="return GetStringValueType(current);", span="532-532"];
m8_282 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="value is long || value is int || value is short || value is sbyte\r\n                     || value is ulong || value is uint || value is ushort || value is byte", span="533-534"];
m8_284 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="value is Enum", span="536-536"];
m8_286 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="value is BigInteger", span="539-539"];
m8_288 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="value is double || value is float || value is decimal", span="542-542"];
m8_290 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="value is DateTime", span="544-544"];
m8_292 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="value is DateTimeOffset", span="547-547"];
m8_294 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="value is byte[]", span="550-550"];
m8_296 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="value is bool", span="552-552"];
m8_298 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="value is Guid", span="554-554"];
m8_300 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="value is Uri", span="556-556"];
m8_302 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="value is TimeSpan", span="558-558"];
m8_304 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="throw new ArgumentException(''Could not determine JSON object type for type {0}.''.FormatWith(CultureInfo.InvariantCulture, value.GetType()));", span="561-561"];
m8_277 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="return JTokenType.Null;", span="526-526"];
m8_279 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="return JTokenType.Null;", span="529-529"];
m8_283 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="return JTokenType.Integer;", span="535-535"];
m8_285 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="return JTokenType.Integer;", span="537-537"];
m8_287 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="return JTokenType.Integer;", span="540-540"];
m8_289 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="return JTokenType.Float;", span="543-543"];
m8_291 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="return JTokenType.Date;", span="545-545"];
m8_293 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="return JTokenType.Date;", span="548-548"];
m8_295 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="return JTokenType.Bytes;", span="551-551"];
m8_297 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="return JTokenType.Boolean;", span="553-553"];
m8_299 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="return JTokenType.Guid;", span="555-555"];
m8_301 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="return JTokenType.Uri;", span="557-557"];
m8_303 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="return JTokenType.TimeSpan;", span="559-559"];
m8_305 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", span="523-523"];
m8_440 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", span="820-820"];
m8_441 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="JValue.cs", label="binder.Type == typeof(JValue)", span="822-822"];
m8_442 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="JValue.cs", label="result = instance", span="824-824"];
m8_444 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="JValue.cs", label="object value = instance.Value", span="828-828"];
m8_447 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="JValue.cs", label="return ReflectionUtils.IsNullable(binder.Type);", span="833-833"];
m8_448 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="JValue.cs", label="result = ConvertUtils.Convert(instance.Value, CultureInfo.InvariantCulture, binder.Type)", span="836-836"];
m8_443 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="JValue.cs", label="return true;", span="825-825"];
m8_445 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="JValue.cs", label="value == null", span="830-830"];
m8_446 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="JValue.cs", label="result = null", span="832-832"];
m8_449 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="JValue.cs", label="return true;", span="837-837"];
m8_450 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", span="820-820"];
m8_20 [cluster="Newtonsoft.Json.Linq.JValue.JValue(string)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(string)", span="134-134"];
m8_21 [cluster="Newtonsoft.Json.Linq.JValue.JValue(string)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValue(string)", span="134-134"];
m8_518 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToByte(System.IFormatProvider)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToByte(System.IFormatProvider)", span="955-955"];
m8_519 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToByte(System.IFormatProvider)", file="JValue.cs", label="return (byte)this;", span="957-957"];
m8_520 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToByte(System.IFormatProvider)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToByte(System.IFormatProvider)", span="955-955"];
m8_28 [cluster="Newtonsoft.Json.Linq.JValue.JValue(object)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(object)", span="170-170"];
m8_29 [cluster="Newtonsoft.Json.Linq.JValue.JValue(object)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValue(object)", span="170-170"];
m8_434 [cluster="System.IFormattable.ToString(string, System.IFormatProvider)", file="JValue.cs", label="Entry System.IFormattable.ToString(string, System.IFormatProvider)", span="0-0"];
m8_265 [cluster="object.ToString()", file="JValue.cs", label="Entry object.ToString()", span="0-0"];
m8_148 [cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime)", file="JValue.cs", label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime)", span="0-0"];
m8_146 [cluster="System.Convert.ToDateTime(object, System.IFormatProvider)", file="JValue.cs", label="Entry System.Convert.ToDateTime(object, System.IFormatProvider)", span="0-0"];
m8_144 [cluster="System.Convert.ToBoolean(object, System.IFormatProvider)", file="JValue.cs", label="Entry System.Convert.ToBoolean(object, System.IFormatProvider)", span="0-0"];
m8_266 [cluster="Newtonsoft.Json.Linq.JValue.CloneToken()", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.CloneToken()", span="498-498"];
m8_267 [cluster="Newtonsoft.Json.Linq.JValue.CloneToken()", file="JValue.cs", label="return new JValue(this);", span="500-500"];
m8_268 [cluster="Newtonsoft.Json.Linq.JValue.CloneToken()", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.CloneToken()", span="498-498"];
m8_12 [cluster="Newtonsoft.Json.Linq.JValue.JValue(double)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(double)", span="98-98"];
m8_13 [cluster="Newtonsoft.Json.Linq.JValue.JValue(double)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValue(double)", span="98-98"];
m8_143 [cluster="string.CompareOrdinal(string, string)", file="JValue.cs", label="Entry string.CompareOrdinal(string, string)", span="0-0"];
m8_542 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDouble(System.IFormatProvider)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDouble(System.IFormatProvider)", span="995-995"];
m8_543 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDouble(System.IFormatProvider)", file="JValue.cs", label="return (double)this;", span="997-997"];
m8_544 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDouble(System.IFormatProvider)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDouble(System.IFormatProvider)", span="995-995"];
m8_533 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt64(System.IFormatProvider)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt64(System.IFormatProvider)", span="980-980"];
m8_534 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt64(System.IFormatProvider)", file="JValue.cs", label="return (long)this;", span="982-982"];
m8_535 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt64(System.IFormatProvider)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt64(System.IFormatProvider)", span="980-980"];
m8_139 [cluster="Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", span="338-338"];
m8_158 [cluster="Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", file="JValue.cs", label="double d1 = Convert.ToDouble(objA, CultureInfo.InvariantCulture)", span="340-340"];
m8_159 [cluster="Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", file="JValue.cs", label="double d2 = Convert.ToDouble(objB, CultureInfo.InvariantCulture)", span="341-341"];
m8_160 [cluster="Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", file="JValue.cs", label="MathUtils.ApproxEquals(d1, d2)", span="344-344"];
m8_162 [cluster="Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", file="JValue.cs", label="return d1.CompareTo(d2);", span="347-347"];
m8_161 [cluster="Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", file="JValue.cs", label="return 0;", span="345-345"];
m8_163 [cluster="Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", span="338-338"];
m8_424 [cluster="Newtonsoft.Json.Linq.JValue.ToString(System.IFormatProvider)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.ToString(System.IFormatProvider)", span="780-780"];
m8_425 [cluster="Newtonsoft.Json.Linq.JValue.ToString(System.IFormatProvider)", file="JValue.cs", label="return ToString(null, formatProvider);", span="782-782"];
m8_426 [cluster="Newtonsoft.Json.Linq.JValue.ToString(System.IFormatProvider)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.ToString(System.IFormatProvider)", span="780-780"];
m8_524 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt16(System.IFormatProvider)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt16(System.IFormatProvider)", span="965-965"];
m8_525 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt16(System.IFormatProvider)", file="JValue.cs", label="return (ushort)this;", span="967-967"];
m8_526 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt16(System.IFormatProvider)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt16(System.IFormatProvider)", span="965-965"];
m8_488 [cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", span="886-886"];
m8_489 [cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="JValue.cs", label="obj == null", span="888-888"];
m8_491 [cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="JValue.cs", label="object otherValue = (obj is JValue) ? ((JValue)obj).Value : obj", span="891-891"];
m8_490 [cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="JValue.cs", label="return 1;", span="889-889"];
m8_492 [cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="JValue.cs", label="return Compare(_valueType, _value, otherValue);", span="893-893"];
m8_493 [cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", span="886-886"];
m8_379 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(long)", file="JValue.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(long)", span="838-838"];
m8_156 [cluster="string.FormatWith(System.IFormatProvider, object)", file="JValue.cs", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
m8_8 [cluster="Newtonsoft.Json.Linq.JValue.JValue(char)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(char)", span="79-79"];
m8_9 [cluster="Newtonsoft.Json.Linq.JValue.JValue(char)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValue(char)", span="79-79"];
m8_508 [cluster="System.Type.GetTypeCode(System.Type)", file="JValue.cs", label="Entry System.Type.GetTypeCode(System.Type)", span="0-0"];
m8_30 [cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="175-175"];
m8_31 [cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JValue.cs", label="JValue other = node as JValue", span="177-177"];
m8_32 [cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JValue.cs", label="other == null", span="178-178"];
m8_34 [cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JValue.cs", label="other == this", span="180-180"];
m8_36 [cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JValue.cs", label="return ValuesEquals(this, other);", span="183-183"];
m8_33 [cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JValue.cs", label="return false;", span="179-179"];
m8_35 [cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JValue.cs", label="return true;", span="181-181"];
m8_37 [cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="175-175"];
m8_269 [cluster="Newtonsoft.Json.Linq.JValue.CreateComment(string)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.CreateComment(string)", span="508-508"];
m8_270 [cluster="Newtonsoft.Json.Linq.JValue.CreateComment(string)", file="JValue.cs", label="return new JValue(value, JTokenType.Comment);", span="510-510"];
m8_271 [cluster="Newtonsoft.Json.Linq.JValue.CreateComment(string)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.CreateComment(string)", span="508-508"];
m8_53 [cluster="System.Math.Truncate(decimal)", file="JValue.cs", label="Entry System.Math.Truncate(decimal)", span="0-0"];
m8_157 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.CreateArgumentOutOfRangeException(string, object, string)", file="JValue.cs", label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.CreateArgumentOutOfRangeException(string, object, string)", span="63-63"];
m8_439 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.JValueDynamicProxy()", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.JValueDynamicProxy()", span="818-818"];
m8_14 [cluster="Newtonsoft.Json.Linq.JValue.JValue(float)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(float)", span="107-107"];
m8_15 [cluster="Newtonsoft.Json.Linq.JValue.JValue(float)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValue(float)", span="107-107"];
m8_59 [cluster="double.CompareTo(double)", file="JValue.cs", label="Entry double.CompareTo(double)", span="0-0"];
m8_384 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool)", file="JValue.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(bool)", span="875-875"];
m8_147 [cluster="System.DateTime.CompareTo(System.DateTime)", file="JValue.cs", label="Entry System.DateTime.CompareTo(System.DateTime)", span="0-0"];
m8_382 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(float)", file="JValue.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(float)", span="857-857"];
m8_551 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToType(System.Type, System.IFormatProvider)", span="1010-1010"];
m8_552 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JValue.cs", label="return ToObject(conversionType);", span="1012-1012"];
m8_553 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToType(System.Type, System.IFormatProvider)", span="1010-1010"];
m8_18 [cluster="Newtonsoft.Json.Linq.JValue.JValue(bool)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(bool)", span="125-125"];
m8_19 [cluster="Newtonsoft.Json.Linq.JValue.JValue(bool)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValue(bool)", span="125-125"];
m8_554 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", span="1690-1690"];
m8_385 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTimeOffset)", file="JValue.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.DateTimeOffset)", span="950-950"];
m8_512 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToChar(System.IFormatProvider)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToChar(System.IFormatProvider)", span="945-945"];
m8_513 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToChar(System.IFormatProvider)", file="JValue.cs", label="return (char)this;", span="947-947"];
m8_514 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToChar(System.IFormatProvider)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToChar(System.IFormatProvider)", span="945-945"];
m8_154 [cluster="System.Collections.Generic.Comparer<T>.Compare(T, T)", file="JValue.cs", label="Entry System.Collections.Generic.Comparer<T>.Compare(T, T)", span="0-0"];
m8_452 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="JValue.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", span="355-355"];
m8_548 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDateTime(System.IFormatProvider)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDateTime(System.IFormatProvider)", span="1005-1005"];
m8_549 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDateTime(System.IFormatProvider)", file="JValue.cs", label="return (DateTime)this;", span="1007-1007"];
m8_550 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDateTime(System.IFormatProvider)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDateTime(System.IFormatProvider)", span="1005-1005"];
m8_388 [cluster="Newtonsoft.Json.Linq.JValue.GetDeepHashCode()", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.GetDeepHashCode()", span="684-684"];
m8_389 [cluster="Newtonsoft.Json.Linq.JValue.GetDeepHashCode()", file="JValue.cs", label="int valueHashCode = (_value != null) ? _value.GetHashCode() : 0", span="686-686"];
m8_390 [cluster="Newtonsoft.Json.Linq.JValue.GetDeepHashCode()", file="JValue.cs", label="return _valueType.GetHashCode() ^ valueHashCode;", span="688-688"];
m8_391 [cluster="Newtonsoft.Json.Linq.JValue.GetDeepHashCode()", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.GetDeepHashCode()", span="684-684"];
m8_151 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.ByteArrayCompare(byte[], byte[])", file="JValue.cs", label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.ByteArrayCompare(byte[], byte[])", span="78-78"];
m8_415 [cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.ToString()", span="753-753"];
m8_416 [cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="JValue.cs", label="_value == null", span="755-755"];
m8_417 [cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="JValue.cs", label="return string.Empty;", span="756-756"];
m8_418 [cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="JValue.cs", label="return _value.ToString();", span="758-758"];
m8_419 [cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.ToString()", span="753-753"];
m8_22 [cluster="Newtonsoft.Json.Linq.JValue.JValue(System.Guid)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.Guid)", span="143-143"];
m8_23 [cluster="Newtonsoft.Json.Linq.JValue.JValue(System.Guid)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValue(System.Guid)", span="143-143"];
m8_373 [cluster="Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JValue.cs", label="Entry Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="44-44"];
m8_56 [cluster="System.Convert.ToDouble(object, System.IFormatProvider)", file="JValue.cs", label="Entry System.Convert.ToDouble(object, System.IFormatProvider)", span="0-0"];
m8_371 [cluster="Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type)", file="JValue.cs", label="Entry Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type)", span="868-868"];
m8_423 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", span="793-793"];
m8_427 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", file="JValue.cs", label="_value == null", span="795-795"];
m8_431 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", file="JValue.cs", label="return formattable.ToString(format, formatProvider);", span="800-800"];
m8_428 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", file="JValue.cs", label="return string.Empty;", span="796-796"];
m8_429 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", file="JValue.cs", label="IFormattable formattable = _value as IFormattable", span="798-798"];
m8_430 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", file="JValue.cs", label="formattable != null", span="799-799"];
m8_432 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", file="JValue.cs", label="return _value.ToString();", span="802-802"];
m8_433 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", span="793-793"];
m8_509 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToBoolean(System.IFormatProvider)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToBoolean(System.IFormatProvider)", span="940-940"];
m8_510 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToBoolean(System.IFormatProvider)", file="JValue.cs", label="return (bool)this;", span="942-942"];
m8_511 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToBoolean(System.IFormatProvider)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToBoolean(System.IFormatProvider)", span="940-940"];
m8_138 [cluster="System.Convert.ToDecimal(object, System.IFormatProvider)", file="JValue.cs", label="Entry System.Convert.ToDecimal(object, System.IFormatProvider)", span="0-0"];
m8_530 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt32(System.IFormatProvider)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt32(System.IFormatProvider)", span="975-975"];
m8_531 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt32(System.IFormatProvider)", file="JValue.cs", label="return (uint)this;", span="977-977"];
m8_532 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt32(System.IFormatProvider)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt32(System.IFormatProvider)", span="975-975"];
m8_378 [cluster="Unk.WriteValue", file="JValue.cs", label="Entry Unk.WriteValue", span=""];
m8_515 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSByte(System.IFormatProvider)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSByte(System.IFormatProvider)", span="950-950"];
m8_516 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSByte(System.IFormatProvider)", file="JValue.cs", label="return (sbyte)this;", span="952-952"];
m8_517 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSByte(System.IFormatProvider)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSByte(System.IFormatProvider)", span="950-950"];
m8_155 [cluster="System.TimeSpan.CompareTo(System.TimeSpan)", file="JValue.cs", label="Entry System.TimeSpan.CompareTo(System.TimeSpan)", span="0-0"];
m8_150 [cluster="System.ArgumentException.ArgumentException(string)", file="JValue.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m8_39 [cluster="Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", span="198-198"];
m8_40 [cluster="Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", file="JValue.cs", label="int result = i1.CompareTo(ConvertUtils.ToBigInteger(i2))", span="200-200"];
m8_43 [cluster="Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", file="JValue.cs", label="i2 is decimal", span="207-207"];
m8_44 [cluster="Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", file="JValue.cs", label="decimal d = (decimal)i2", span="209-209"];
m8_46 [cluster="Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", file="JValue.cs", label="i2 is double || i2 is float", span="212-212"];
m8_47 [cluster="Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", file="JValue.cs", label="double d = Convert.ToDouble(i2, CultureInfo.InvariantCulture)", span="214-214"];
m8_41 [cluster="Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", file="JValue.cs", label="result != 0", span="202-202"];
m8_42 [cluster="Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", file="JValue.cs", label="return result;", span="203-203"];
m8_49 [cluster="Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", file="JValue.cs", label="return result;", span="218-218"];
m8_45 [cluster="Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", file="JValue.cs", label="return (0m).CompareTo(Math.Abs(d - Math.Truncate(d)));", span="210-210"];
m8_48 [cluster="Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", file="JValue.cs", label="return (0d).CompareTo(Math.Abs(d - Math.Truncate(d)));", span="215-215"];
m8_50 [cluster="Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", span="198-198"];
m8_387 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(byte[])", file="JValue.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(byte[])", span="1188-1188"];
m8_499 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.GetTypeCode()", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.GetTypeCode()", span="923-923"];
m8_500 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.GetTypeCode()", file="JValue.cs", label="_value == null", span="925-925"];
m8_501 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.GetTypeCode()", file="JValue.cs", label="return TypeCode.Empty;", span="926-926"];
m8_502 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.GetTypeCode()", file="JValue.cs", label="_value is DateTimeOffset", span="929-929"];
m8_503 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.GetTypeCode()", file="JValue.cs", label="return TypeCode.DateTime;", span="930-930"];
m8_504 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.GetTypeCode()", file="JValue.cs", label="_value is BigInteger", span="933-933"];
m8_505 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.GetTypeCode()", file="JValue.cs", label="return TypeCode.Object;", span="934-934"];
m8_506 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.GetTypeCode()", file="JValue.cs", label="return System.Type.GetTypeCode(_value.GetType());", span="937-937"];
m8_507 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.GetTypeCode()", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.GetTypeCode()", span="923-923"];
m8_409 [cluster="object.Equals(object)", file="JValue.cs", label="Entry object.Equals(object)", span="0-0"];
m8_494 [cluster="Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", span="914-914"];
m8_495 [cluster="Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", file="JValue.cs", label="obj == null", span="916-916"];
m8_497 [cluster="Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", file="JValue.cs", label="return Compare(_valueType, _value, obj._value);", span="919-919"];
m8_496 [cluster="Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", file="JValue.cs", label="return 1;", span="917-917"];
m8_498 [cluster="Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", span="914-914"];
m8_0 [cluster="Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", span="51-51"];
m8_1 [cluster="Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", file="JValue.cs", label="_value = value", span="53-53"];
m8_2 [cluster="Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", file="JValue.cs", label="_valueType = type", span="54-54"];
m8_3 [cluster="Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", span="51-51"];
m8_272 [cluster="Newtonsoft.Json.Linq.JValue.CreateString(string)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.CreateString(string)", span="518-518"];
m8_273 [cluster="Newtonsoft.Json.Linq.JValue.CreateString(string)", file="JValue.cs", label="return new JValue(value, JTokenType.String);", span="520-520"];
m8_274 [cluster="Newtonsoft.Json.Linq.JValue.CreateString(string)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.CreateString(string)", span="518-518"];
m8_381 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(double)", file="JValue.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(double)", span="866-866"];
m8_375 [cluster="Newtonsoft.Json.JsonWriter.WriteRawValue(string)", file="JValue.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteRawValue(string)", span="798-798"];
m8_24 [cluster="Newtonsoft.Json.Linq.JValue.JValue(System.Uri)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.Uri)", span="152-152"];
m8_25 [cluster="Newtonsoft.Json.Linq.JValue.JValue(System.Uri)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValue(System.Uri)", span="152-152"];
m8_58 [cluster="System.Math.Abs(double)", file="JValue.cs", label="Entry System.Math.Abs(double)", span="0-0"];
m8_152 [cluster="System.Guid.CompareTo(System.Guid)", file="JValue.cs", label="Entry System.Guid.CompareTo(System.Guid)", span="0-0"];
m8_51 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", file="JValue.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", span="299-299"];
m8_307 [cluster="object.GetType()", file="JValue.cs", label="Entry object.GetType()", span="0-0"];
m8_54 [cluster="System.Math.Abs(decimal)", file="JValue.cs", label="Entry System.Math.Abs(decimal)", span="0-0"];
m8_521 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt16(System.IFormatProvider)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt16(System.IFormatProvider)", span="960-960"];
m8_522 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt16(System.IFormatProvider)", file="JValue.cs", label="return (short)this;", span="962-962"];
m8_523 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt16(System.IFormatProvider)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt16(System.IFormatProvider)", span="960-960"];
m8_386 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime)", file="JValue.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime)", span="940-940"];
m8_396 [cluster="Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)", span="703-703"];
m8_397 [cluster="Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)", file="JValue.cs", label="other == null", span="705-705"];
m8_399 [cluster="Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)", file="JValue.cs", label="return ValuesEquals(this, other);", span="708-708"];
m8_398 [cluster="Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)", file="JValue.cs", label="return false;", span="706-706"];
m8_400 [cluster="Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)", span="703-703"];
m8_142 [cluster="System.Convert.ToString(object, System.IFormatProvider)", file="JValue.cs", label="Entry System.Convert.ToString(object, System.IFormatProvider)", span="0-0"];
m8_55 [cluster="decimal.CompareTo(decimal)", file="JValue.cs", label="Entry decimal.CompareTo(decimal)", span="0-0"];
m8_6 [cluster="Newtonsoft.Json.Linq.JValue.JValue(long)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(long)", span="70-70"];
m8_7 [cluster="Newtonsoft.Json.Linq.JValue.JValue(long)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValue(long)", span="70-70"];
m8_451 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", file="JValue.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", span="237-237"];
m8_401 [cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.Equals(object)", span="721-721"];
m8_402 [cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", file="JValue.cs", label="obj == null", span="723-723"];
m8_404 [cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", file="JValue.cs", label="JValue otherValue = obj as JValue", span="726-726"];
m8_407 [cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", file="JValue.cs", label="return base.Equals(obj);", span="730-730"];
m8_403 [cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", file="JValue.cs", label="return false;", span="724-724"];
m8_405 [cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", file="JValue.cs", label="otherValue != null", span="727-727"];
m8_406 [cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", file="JValue.cs", label="return Equals(otherValue);", span="728-728"];
m8_408 [cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.Equals(object)", span="721-721"];
m8_420 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.ToString(string)", span="768-768"];
m8_421 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string)", file="JValue.cs", label="return ToString(format, CultureInfo.CurrentCulture);", span="770-770"];
m8_422 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.ToString(string)", span="768-768"];
m8_10 [cluster="Newtonsoft.Json.Linq.JValue.JValue(ulong)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(ulong)", span="89-89"];
m8_11 [cluster="Newtonsoft.Json.Linq.JValue.JValue(ulong)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValue(ulong)", span="89-89"];
m8_141 [cluster="long.CompareTo(long)", file="JValue.cs", label="Entry long.CompareTo(long)", span="0-0"];
m8_453 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", span="840-840"];
m8_454 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="object compareValue = (arg is JValue) ? ((JValue)arg).Value : arg", span="842-842"];
m8_455 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="binder.Operation", span="844-844"];
m8_457 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="result = (Compare(instance.Type, instance.Value, compareValue) == 0)", span="847-847"];
m8_460 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="result = (Compare(instance.Type, instance.Value, compareValue) != 0)", span="850-850"];
m8_463 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="result = (Compare(instance.Type, instance.Value, compareValue) > 0)", span="853-853"];
m8_466 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="result = (Compare(instance.Type, instance.Value, compareValue) >= 0)", span="856-856"];
m8_469 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="result = (Compare(instance.Type, instance.Value, compareValue) < 0)", span="859-859"];
m8_472 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="result = (Compare(instance.Type, instance.Value, compareValue) <= 0)", span="862-862"];
m8_482 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="Operation(binder.Operation, instance.Value, compareValue, out result)", span="872-872"];
m8_456 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="ExpressionType.Equal", span="846-846"];
m8_459 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="ExpressionType.NotEqual", span="849-849"];
m8_462 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="ExpressionType.GreaterThan", span="852-852"];
m8_465 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="ExpressionType.GreaterThanOrEqual", span="855-855"];
m8_468 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="ExpressionType.LessThan", span="858-858"];
m8_471 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="ExpressionType.LessThanOrEqual", span="861-861"];
m8_474 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="ExpressionType.Add", span="864-864"];
m8_458 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="return true;", span="848-848"];
m8_461 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="return true;", span="851-851"];
m8_464 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="return true;", span="854-854"];
m8_467 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="return true;", span="857-857"];
m8_470 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="return true;", span="860-860"];
m8_473 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="return true;", span="863-863"];
m8_475 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="ExpressionType.AddAssign", span="865-865"];
m8_476 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="ExpressionType.Subtract", span="866-866"];
m8_477 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="ExpressionType.SubtractAssign", span="867-867"];
m8_478 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="ExpressionType.Multiply", span="868-868"];
m8_479 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="ExpressionType.MultiplyAssign", span="869-869"];
m8_480 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="ExpressionType.Divide", span="870-870"];
m8_481 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="ExpressionType.DivideAssign", span="871-871"];
m8_483 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="result = new JValue(result)", span="874-874"];
m8_485 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="result = null", span="880-880"];
m8_484 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="return true;", span="875-875"];
m8_486 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="return false;", span="881-881"];
m8_487 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", span="840-840"];
m8_383 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="JValue.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="810-810"];
m8_38 [cluster="Newtonsoft.Json.Linq.JValue.ValuesEquals(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.ValuesEquals(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", span="691-691"];
m8_394 [cluster="Newtonsoft.Json.Linq.JValue.ValuesEquals(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="JValue.cs", label="return (v1 == v2 || (v1._valueType == v2._valueType && Compare(v1._valueType, v1._value, v2._value) == 0));", span="693-693"];
m8_395 [cluster="Newtonsoft.Json.Linq.JValue.ValuesEquals(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.ValuesEquals(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", span="691-691"];
m8_435 [cluster="Newtonsoft.Json.Linq.JValue.GetMetaObject(System.Linq.Expressions.Expression)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.GetMetaObject(System.Linq.Expressions.Expression)", span="813-813"];
m8_436 [cluster="Newtonsoft.Json.Linq.JValue.GetMetaObject(System.Linq.Expressions.Expression)", file="JValue.cs", label="return new DynamicProxyMetaObject<JValue>(parameter, this, new JValueDynamicProxy(), true);", span="815-815"];
m8_437 [cluster="Newtonsoft.Json.Linq.JValue.GetMetaObject(System.Linq.Expressions.Expression)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.GetMetaObject(System.Linq.Expressions.Expression)", span="813-813"];
m8_60 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", span="222-222"];
m8_61 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="objA == null && objB == null", span="224-224"];
m8_63 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="objA != null && objB == null", span="226-226"];
m8_65 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="objA == null && objB != null", span="228-228"];
m8_67 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label=valueType, span="231-231"];
m8_69 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="objA is BigInteger", span="235-235"];
m8_70 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="return CompareBigInteger((BigInteger)objA, objB);", span="236-236"];
m8_71 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="objB is BigInteger", span="237-237"];
m8_72 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="return -CompareBigInteger((BigInteger)objB, objA);", span="238-238"];
m8_73 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="objA is ulong || objB is ulong || objA is decimal || objB is decimal", span="240-240"];
m8_74 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="return Convert.ToDecimal(objA, CultureInfo.InvariantCulture).CompareTo(Convert.ToDecimal(objB, CultureInfo.InvariantCulture));", span="241-241"];
m8_75 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="objA is float || objB is float || objA is double || objB is double", span="242-242"];
m8_76 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="return CompareFloat(objA, objB);", span="243-243"];
m8_77 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="return Convert.ToInt64(objA, CultureInfo.InvariantCulture).CompareTo(Convert.ToInt64(objB, CultureInfo.InvariantCulture));", span="245-245"];
m8_79 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="objA is BigInteger", span="248-248"];
m8_80 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="return CompareBigInteger((BigInteger)objA, objB);", span="249-249"];
m8_81 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="objB is BigInteger", span="250-250"];
m8_82 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="return -CompareBigInteger((BigInteger)objB, objA);", span="251-251"];
m8_83 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="return CompareFloat(objA, objB);", span="253-253"];
m8_87 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="string s1 = Convert.ToString(objA, CultureInfo.InvariantCulture)", span="257-257"];
m8_88 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="string s2 = Convert.ToString(objB, CultureInfo.InvariantCulture)", span="258-258"];
m8_91 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="bool b1 = Convert.ToBoolean(objA, CultureInfo.InvariantCulture)", span="262-262"];
m8_92 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="bool b2 = Convert.ToBoolean(objB, CultureInfo.InvariantCulture)", span="263-263"];
m8_95 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="objA is DateTime", span="268-268"];
m8_96 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="DateTime date1 = (DateTime)objA", span="271-271"];
m8_98 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="objB is DateTimeOffset", span="275-275"];
m8_99 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="date2 = ((DateTimeOffset)objB).DateTime", span="276-276"];
m8_100 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="date2 = Convert.ToDateTime(objB, CultureInfo.InvariantCulture)", span="279-279"];
m8_102 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="DateTimeOffset date1 = (DateTimeOffset)objA", span="286-286"];
m8_104 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="objB is DateTimeOffset", span="289-289"];
m8_105 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="date2 = (DateTimeOffset)objB", span="290-290"];
m8_106 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="date2 = new DateTimeOffset(Convert.ToDateTime(objB, CultureInfo.InvariantCulture))", span="292-292"];
m8_109 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="!(objB is byte[])", span="298-298"];
m8_111 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="byte[] bytes1 = objA as byte[]", span="301-301"];
m8_112 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="byte[] bytes2 = objB as byte[]", span="302-302"];
m8_119 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="!(objB is Guid)", span="310-310"];
m8_121 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="Guid guid1 = (Guid)objA", span="313-313"];
m8_122 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="Guid guid2 = (Guid)objB", span="314-314"];
m8_125 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="!(objB is Uri)", span="318-318"];
m8_127 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="Uri uri1 = (Uri)objA", span="321-321"];
m8_128 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="Uri uri2 = (Uri)objB", span="322-322"];
m8_131 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="!(objB is TimeSpan)", span="326-326"];
m8_133 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="TimeSpan ts1 = (TimeSpan)objA", span="329-329"];
m8_134 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="TimeSpan ts2 = (TimeSpan)objB", span="330-330"];
m8_136 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="throw MiscellaneousUtils.CreateArgumentOutOfRangeException(''valueType'', valueType, ''Unexpected value type: {0}''.FormatWith(CultureInfo.InvariantCulture, valueType));", span="334-334"];
m8_62 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="return 0;", span="225-225"];
m8_64 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="return 1;", span="227-227"];
m8_66 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="return -1;", span="229-229"];
m8_68 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="JTokenType.Integer", span="233-233"];
m8_78 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="JTokenType.Float", span="246-246"];
m8_84 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="JTokenType.Comment", span="254-254"];
m8_90 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="JTokenType.Boolean", span="261-261"];
m8_94 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="JTokenType.Date", span="266-266"];
m8_108 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="JTokenType.Bytes", span="297-297"];
m8_118 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="JTokenType.Guid", span="309-309"];
m8_124 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="JTokenType.Uri", span="317-317"];
m8_130 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="JTokenType.TimeSpan", span="325-325"];
m8_85 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="JTokenType.String", span="255-255"];
m8_86 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="JTokenType.Raw", span="256-256"];
m8_89 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="return string.CompareOrdinal(s1, s2);", span="260-260"];
m8_93 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="return b1.CompareTo(b2);", span="265-265"];
m8_97 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="DateTime date2", span="272-272"];
m8_101 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="return date1.CompareTo(date2);", span="281-281"];
m8_103 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="DateTimeOffset date2", span="287-287"];
m8_107 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="return date1.CompareTo(date2);", span="294-294"];
m8_110 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="throw new ArgumentException(''Object must be of type byte[].'');", span="299-299"];
m8_113 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="bytes1 == null", span="303-303"];
m8_117 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="return MiscellaneousUtils.ByteArrayCompare(bytes1, bytes2);", span="308-308"];
m8_115 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="bytes2 == null", span="305-305"];
m8_114 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="return -1;", span="304-304"];
m8_116 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="return 1;", span="306-306"];
m8_120 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="throw new ArgumentException(''Object must be of type Guid.'');", span="311-311"];
m8_123 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="return guid1.CompareTo(guid2);", span="316-316"];
m8_126 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="throw new ArgumentException(''Object must be of type Uri.'');", span="319-319"];
m8_129 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="return Comparer<string>.Default.Compare(uri1.ToString(), uri2.ToString());", span="324-324"];
m8_132 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="throw new ArgumentException(''Object must be of type TimeSpan.'');", span="327-327"];
m8_135 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="return ts1.CompareTo(ts2);", span="332-332"];
m8_137 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", span="222-222"];
m8_306 [cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", span="564-564"];
m8_308 [cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="JValue.cs", label="current == null", span="566-566"];
m8_310 [cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="JValue.cs", label="current.Value", span="569-569"];
m8_314 [cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="JValue.cs", label="return current.Value;", span="574-574"];
m8_309 [cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="JValue.cs", label="return JTokenType.String;", span="567-567"];
m8_311 [cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="JValue.cs", label="JTokenType.Comment", span="571-571"];
m8_315 [cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="JValue.cs", label="return JTokenType.String;", span="576-576"];
m8_312 [cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="JValue.cs", label="JTokenType.String", span="572-572"];
m8_313 [cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="JValue.cs", label="JTokenType.Raw", span="573-573"];
m8_316 [cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", span="564-564"];
m8_164 [cluster="Newtonsoft.Json.Utilities.MathUtils.ApproxEquals(double, double)", file="JValue.cs", label="Entry Newtonsoft.Json.Utilities.MathUtils.ApproxEquals(double, double)", span="103-103"];
m8_536 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt64(System.IFormatProvider)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt64(System.IFormatProvider)", span="985-985"];
m8_537 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt64(System.IFormatProvider)", file="JValue.cs", label="return (ulong)this;", span="987-987"];
m8_538 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt64(System.IFormatProvider)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt64(System.IFormatProvider)", span="985-985"];
m8_539 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSingle(System.IFormatProvider)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSingle(System.IFormatProvider)", span="990-990"];
m8_540 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSingle(System.IFormatProvider)", file="JValue.cs", label="return (float)this;", span="992-992"];
m8_541 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSingle(System.IFormatProvider)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSingle(System.IFormatProvider)", span="990-990"];
m8_555 [file="JValue.cs", label="Newtonsoft.Json.Linq.JValue", span=""];
m9_365 [cluster="Newtonsoft.Json.Utilities.DynamicProxyMetaObject<T>.DynamicProxyMetaObject(System.Linq.Expressions.Expression, T, Newtonsoft.Json.Utilities.DynamicProxy<T>, bool)", file="StringUtils.cs", label="Entry Newtonsoft.Json.Utilities.DynamicProxyMetaObject<T>.DynamicProxyMetaObject(System.Linq.Expressions.Expression, T, Newtonsoft.Json.Utilities.DynamicProxy<T>, bool)", span="15-15"];
m9_114 [cluster="System.Uri.ToString()", file="StringUtils.cs", label="Entry System.Uri.ToString()", span="0-0"];
m9_4 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeDictionarysWithPreserveObjectReferences()", file="StringUtils.cs", label="string json = JsonConvert.SerializeObject(circularDictionary, Formatting.Indented,\r\n        new JsonSerializerSettings { PreserveReferencesHandling = PreserveReferencesHandling.All })", span="44-45"];
m9_5 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeDictionarysWithPreserveObjectReferences()", file="StringUtils.cs", label="Assert.AreEqual(@''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''other'''': {\r\n    ''''$id'''': ''''2'''',\r\n    ''''blah'''': null\r\n  },\r\n  ''''self'''': {\r\n    ''''$ref'''': ''''1''''\r\n  }\r\n}'', json)", span="47-56"];
m9_255 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="StringUtils.cs", label="Entry Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="501-501"];
m9_256 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="StringUtils.cs", label=_valueType, span="503-503"];
m9_258 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="StringUtils.cs", label="writer.WriteComment(_value.ToString())", span="506-506"];
m9_261 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="StringUtils.cs", label="writer.WriteRawValue((_value != null) ? _value.ToString() : null)", span="509-509"];
m9_264 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="StringUtils.cs", label="writer.WriteNull()", span="512-512"];
m9_267 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="StringUtils.cs", label="writer.WriteUndefined()", span="515-515"];
m9_270 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="StringUtils.cs", label="_value != null && ((matchingConverter = JsonSerializer.GetMatchingConverter(converters, _value.GetType())) != null)", span="520-520"];
m9_271 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="StringUtils.cs", label="matchingConverter.WriteJson(writer, _value, new JsonSerializer())", span="522-522"];
m9_275 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="StringUtils.cs", label="writer.WriteValue(Convert.ToInt64(_value, CultureInfo.InvariantCulture))", span="529-529"];
m9_278 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="StringUtils.cs", label="writer.WriteValue(Convert.ToDouble(_value, CultureInfo.InvariantCulture))", span="532-532"];
m9_281 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="StringUtils.cs", label="writer.WriteValue((_value != null) ? _value.ToString() : null)", span="535-535"];
m9_284 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="StringUtils.cs", label="writer.WriteValue(Convert.ToBoolean(_value, CultureInfo.InvariantCulture))", span="538-538"];
m9_288 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="StringUtils.cs", label="writer.WriteValue((DateTimeOffset)_value)", span="543-543"];
m9_289 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="StringUtils.cs", label="writer.WriteValue(Convert.ToDateTime(_value, CultureInfo.InvariantCulture))", span="546-546"];
m9_292 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="StringUtils.cs", label="writer.WriteValue((byte[])_value)", span="549-549"];
m9_297 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="StringUtils.cs", label="writer.WriteValue((_value != null) ? _value.ToString() : null)", span="554-554"];
m9_257 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="StringUtils.cs", label="JTokenType.Comment", span="505-505"];
m9_260 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="StringUtils.cs", label="JTokenType.Raw", span="508-508"];
m9_263 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="StringUtils.cs", label="JTokenType.Null", span="511-511"];
m9_266 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="StringUtils.cs", label="JTokenType.Undefined", span="514-514"];
m9_259 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="StringUtils.cs", label="return;", span="507-507"];
m9_262 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="StringUtils.cs", label="return;", span="510-510"];
m9_265 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="StringUtils.cs", label="return;", span="513-513"];
m9_268 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="StringUtils.cs", label="return;", span="516-516"];
m9_269 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="StringUtils.cs", label="JsonConverter matchingConverter", span="519-519"];
m9_273 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="StringUtils.cs", label=_valueType, span="526-526"];
m9_272 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="StringUtils.cs", label="return;", span="523-523"];
m9_274 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="StringUtils.cs", label="JTokenType.Integer", span="528-528"];
m9_277 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="StringUtils.cs", label="JTokenType.Float", span="531-531"];
m9_280 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="StringUtils.cs", label="JTokenType.String", span="534-534"];
m9_283 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="StringUtils.cs", label="JTokenType.Boolean", span="537-537"];
m9_286 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="StringUtils.cs", label="JTokenType.Date", span="540-540"];
m9_291 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="StringUtils.cs", label="JTokenType.Bytes", span="548-548"];
m9_294 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="StringUtils.cs", label="JTokenType.Guid", span="551-551"];
m9_276 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="StringUtils.cs", label="return;", span="530-530"];
m9_279 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="StringUtils.cs", label="return;", span="533-533"];
m9_282 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="StringUtils.cs", label="return;", span="536-536"];
m9_285 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="StringUtils.cs", label="return;", span="539-539"];
m9_287 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="StringUtils.cs", label="_value is DateTimeOffset", span="542-542"];
m9_290 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="StringUtils.cs", label="return;", span="547-547"];
m9_293 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="StringUtils.cs", label="return;", span="550-550"];
m9_295 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="StringUtils.cs", label="JTokenType.Uri", span="552-552"];
m9_296 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="StringUtils.cs", label="JTokenType.TimeSpan", span="553-553"];
m9_298 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="StringUtils.cs", label="return;", span="555-555"];
m9_300 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="StringUtils.cs", label="throw MiscellaneousUtils.CreateArgumentOutOfRangeException(''TokenType'', _valueType, ''Unexpected token type.'');", span="558-558"];
m9_299 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="StringUtils.cs", label="Exit Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="501-501"];
m9_337 [cluster="Newtonsoft.Json.Linq.JValue.GetHashCode()", file="StringUtils.cs", label="Entry Newtonsoft.Json.Linq.JValue.GetHashCode()", span="616-616"];
m9_338 [cluster="Newtonsoft.Json.Linq.JValue.GetHashCode()", file="StringUtils.cs", label="_value == null", span="618-618"];
m9_339 [cluster="Newtonsoft.Json.Linq.JValue.GetHashCode()", file="StringUtils.cs", label="return 0;", span="619-619"];
m9_340 [cluster="Newtonsoft.Json.Linq.JValue.GetHashCode()", file="StringUtils.cs", label="return _value.GetHashCode();", span="621-621"];
m9_341 [cluster="Newtonsoft.Json.Linq.JValue.GetHashCode()", file="StringUtils.cs", label="Exit Newtonsoft.Json.Linq.JValue.GetHashCode()", span="616-616"];
m9_77 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="StringUtils.cs", label="return 1;", span="236-236"];
m9_79 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="StringUtils.cs", label="JTokenType.Guid", span="239-239"];
m9_78 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="StringUtils.cs", label="return MiscellaneousUtils.ByteArrayCompare(bytes1, bytes2);", span="238-238"];
m9_80 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="StringUtils.cs", label="!(objB is Guid)", span="240-240"];
m9_102 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.CircularReferenceClassConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="StringUtils.cs", label="CircularReferenceClass circularReferenceClass = new CircularReferenceClass()", span="304-304"];
m9_304 [cluster="Newtonsoft.Json.JsonWriter.WriteUndefined()", file="StringUtils.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteUndefined()", span="648-648"];
m9_197 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="StringUtils.cs", label="return true;", span="379-379"];
m9_200 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="StringUtils.cs", label="result = l1 / l2", span="382-382"];
m9_205 [cluster="object.ToString()", file="StringUtils.cs", label="Entry object.ToString()", span="0-0"];
m9_206 [cluster="Newtonsoft.Json.Linq.JValue.CloneToken()", file="StringUtils.cs", label="Entry Newtonsoft.Json.Linq.JValue.CloneToken()", span="392-392"];
m9_203 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="StringUtils.cs", label="return false;", span="388-388"];
m9_204 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="StringUtils.cs", label="Exit Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", span="281-281"];
m9_199 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="StringUtils.cs", label="ExpressionType.DivideAssign", span="381-381"];
m9_201 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="StringUtils.cs", label="return true;", span="383-383"];
m9_202 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="StringUtils.cs", label="result = null", span="387-387"];
m9_198 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="StringUtils.cs", label="ExpressionType.Divide", span="380-380"];
m9_207 [cluster="Newtonsoft.Json.Linq.JValue.CloneToken()", file="StringUtils.cs", label="return new JValue(this);", span="394-394"];
m9_110 [cluster="System.ArgumentException.ArgumentException(string)", file="StringUtils.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m9_303 [cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="StringUtils.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="640-640"];
m9_12 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeDictionarysWithPreserveObjectReferences()", file="StringUtils.cs", label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeDictionarysWithPreserveObjectReferences()", span="60-60"];
m9_13 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeDictionarysWithPreserveObjectReferences()", file="StringUtils.cs", label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''other'''': {\r\n    ''''$id'''': ''''2'''',\r\n    ''''blah'''': null\r\n  },\r\n  ''''self'''': {\r\n    ''''$ref'''': ''''1''''\r\n  }\r\n}''", span="62-71"];
m9_22 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularListsError()", file="StringUtils.cs", label="circularList.Add(null)", span="93-93"];
m9_23 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularListsError()", file="StringUtils.cs", label="circularList.Add(new CircularList { null })", span="94-94"];
m9_128 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeCircularReferencesWithConverter()", file="StringUtils.cs", label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeCircularReferencesWithConverter()", span="359-359"];
m9_129 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeCircularReferencesWithConverter()", file="StringUtils.cs", label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$type'''': ''''CircularReferenceClass'''',\r\n  ''''Name'''': ''''c1'''',\r\n  ''''Child'''': {\r\n    ''''$id'''': ''''2'''',\r\n    ''''$type'''': ''''CircularReferenceClass'''',\r\n    ''''Name'''': ''''c2'''',\r\n    ''''Child'''': {\r\n      ''''$id'''': ''''3'''',\r\n      ''''$type'''': ''''CircularReferenceClass'''',\r\n      ''''Name'''': ''''c3'''',\r\n      ''''Child'''': {\r\n        ''''$ref'''': ''''1''''\r\n      }\r\n    }\r\n  }\r\n}''", span="361-378"];
m9_130 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeCircularReferencesWithConverter()", file="StringUtils.cs", label="CircularReferenceClass c1 = JsonConvert.DeserializeObject<CircularReferenceClass>(json, new JsonSerializerSettings\r\n      {\r\n        PreserveReferencesHandling = PreserveReferencesHandling.Objects,\r\n        Converters = new List<JsonConverter> { new CircularReferenceClassConverter() }\r\n      })", span="380-384"];
m9_131 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeCircularReferencesWithConverter()", file="StringUtils.cs", label="Assert.AreEqual(''c1'', c1.Name)", span="386-386"];
m9_133 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeCircularReferencesWithConverter()", file="StringUtils.cs", label="Assert.AreEqual(''c3'', c1.Child.Child.Name)", span="388-388"];
m9_134 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeCircularReferencesWithConverter()", file="StringUtils.cs", label="Assert.AreEqual(''c1'', c1.Child.Child.Child.Name)", span="389-389"];
m9_137 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeEmployeeReference()", file="StringUtils.cs", label="EmployeeReference mikeManager = new EmployeeReference\r\n      {\r\n        Name = ''Mike Manager''\r\n      }", span="395-398"];
m9_138 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeEmployeeReference()", file="StringUtils.cs", label="EmployeeReference joeUser = new EmployeeReference\r\n      {\r\n        Name = ''Joe User'',\r\n        Manager = mikeManager\r\n      }", span="399-403"];
m9_139 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeEmployeeReference()", file="StringUtils.cs", label="List<EmployeeReference> employees = new List<EmployeeReference>\r\n        {\r\n          mikeManager,\r\n          joeUser\r\n        }", span="405-409"];
m9_156 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularReference()", file="StringUtils.cs", label="CircularReferenceClass c3 = new CircularReferenceClass { Name = ''c3'' }", span="459-459"];
m9_157 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularReference()", file="StringUtils.cs", label="c1.Child = c2", span="461-461"];
m9_160 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularReference()", file="StringUtils.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented, new JsonSerializerSettings\r\n      {\r\n        PreserveReferencesHandling = PreserveReferencesHandling.Objects\r\n      })", span="465-468"];
m9_161 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularReference()", file="StringUtils.cs", label="Assert.AreEqual(@''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''Name'''': ''''c1'''',\r\n  ''''Child'''': {\r\n    ''''$id'''': ''''2'''',\r\n    ''''Name'''': ''''c2'''',\r\n    ''''Child'''': {\r\n      ''''$id'''': ''''3'''',\r\n      ''''Name'''': ''''c3'''',\r\n      ''''Child'''': {\r\n        ''''$ref'''': ''''1''''\r\n      }\r\n    }\r\n  }\r\n}'', json)", span="470-484"];
m9_162 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularReference()", file="StringUtils.cs", label="Exit Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularReference()", span="455-455"];
m9_179 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeReferenceInList()", file="StringUtils.cs", label="string json = @''[\r\n  {\r\n    ''''$id'''': ''''1'''',\r\n    ''''Name'''': ''''e1'''',\r\n    ''''Manager'''': null\r\n  },\r\n  {\r\n    ''''$id'''': ''''2'''',\r\n    ''''Name'''': ''''e2'''',\r\n    ''''Manager'''': null\r\n  },\r\n  {\r\n    ''''$ref'''': ''''1''''\r\n  },\r\n  {\r\n    ''''$ref'''': ''''2''''\r\n  }\r\n]''", span="551-568"];
m9_180 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeReferenceInList()", file="StringUtils.cs", label="List<EmployeeReference> employees = JsonConvert.DeserializeObject<List<EmployeeReference>>(json)", span="570-570"];
m9_183 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeReferenceInList()", file="StringUtils.cs", label="Assert.AreEqual(''e2'', employees[1].Name)", span="574-574"];
m9_184 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeReferenceInList()", file="StringUtils.cs", label="Assert.AreEqual(''e1'', employees[2].Name)", span="575-575"];
m9_185 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeReferenceInList()", file="StringUtils.cs", label="Assert.AreEqual(''e2'', employees[3].Name)", span="576-576"];
m9_132 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeCircularReferencesWithConverter()", file="StringUtils.cs", label="Assert.AreEqual(''c2'', c1.Child.Name)", span="387-387"];
m9_135 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeCircularReferencesWithConverter()", file="StringUtils.cs", label="Exit Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeCircularReferencesWithConverter()", span="359-359"];
m9_136 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeEmployeeReference()", file="StringUtils.cs", label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeEmployeeReference()", span="393-393"];
m9_142 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeEmployeeReference()", file="StringUtils.cs", label="Exit Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeEmployeeReference()", span="393-393"];
m9_146 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeEmployeeReference()", file="StringUtils.cs", label="List<EmployeeReference> employees = JsonConvert.DeserializeObject<List<EmployeeReference>>(json)", span="446-446"];
m9_150 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeEmployeeReference()", file="StringUtils.cs", label="Assert.AreEqual(employees[0], employees[1].Manager)", span="451-451"];
m9_154 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularReference()", file="StringUtils.cs", label="CircularReferenceClass c1 = new CircularReferenceClass { Name = ''c1'' }", span="457-457"];
m9_140 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeEmployeeReference()", file="StringUtils.cs", label="string json = JsonConvert.SerializeObject(employees, Formatting.Indented)", span="411-411"];
m9_144 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeEmployeeReference()", file="StringUtils.cs", label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeEmployeeReference()", span="429-429"];
m9_148 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeEmployeeReference()", file="StringUtils.cs", label="Assert.AreEqual(''Mike Manager'', employees[0].Name)", span="449-449"];
m9_152 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="StringUtils.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="614-614"];
m9_141 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeEmployeeReference()", file="StringUtils.cs", label="Assert.AreEqual(@''[\r\n  {\r\n    ''''$id'''': ''''1'''',\r\n    ''''Name'''': ''''Mike Manager'''',\r\n    ''''Manager'''': null\r\n  },\r\n  {\r\n    ''''$id'''': ''''2'''',\r\n    ''''Name'''': ''''Joe User'''',\r\n    ''''Manager'''': {\r\n      ''''$ref'''': ''''1''''\r\n    }\r\n  }\r\n]'', json)", span="412-425"];
m9_143 [cluster="Newtonsoft.Json.Tests.TestObjects.EmployeeReference.EmployeeReference()", file="StringUtils.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.EmployeeReference.EmployeeReference()", span="33-33"];
m9_145 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeEmployeeReference()", file="StringUtils.cs", label="string json = @''[\r\n  {\r\n    ''''$id'''': ''''1'''',\r\n    ''''Name'''': ''''Mike Manager'''',\r\n    ''''Manager'''': null\r\n  },\r\n  {\r\n    ''''$id'''': ''''2'''',\r\n    ''''Name'''': ''''Joe User'''',\r\n    ''''Manager'''': {\r\n      ''''$ref'''': ''''1''''\r\n    }\r\n  }\r\n]''", span="431-444"];
m9_147 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeEmployeeReference()", file="StringUtils.cs", label="Assert.AreEqual(2, employees.Count)", span="448-448"];
m9_149 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeEmployeeReference()", file="StringUtils.cs", label="Assert.AreEqual(''Joe User'', employees[1].Name)", span="450-450"];
m9_151 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeEmployeeReference()", file="StringUtils.cs", label="Exit Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeEmployeeReference()", span="429-429"];
m9_153 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularReference()", file="StringUtils.cs", label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularReference()", span="455-455"];
m9_155 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularReference()", file="StringUtils.cs", label="CircularReferenceClass c2 = new CircularReferenceClass { Name = ''c2'' }", span="458-458"];
m9_158 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularReference()", file="StringUtils.cs", label="c2.Child = c3", span="462-462"];
m9_159 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularReference()", file="StringUtils.cs", label="c3.Child = c1", span="463-463"];
m9_165 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeCircularReference()", file="StringUtils.cs", label="CircularReferenceClass c1 =\r\n        JsonConvert.DeserializeObject<CircularReferenceClass>(json, new JsonSerializerSettings\r\n        {\r\n          PreserveReferencesHandling = PreserveReferencesHandling.Objects\r\n        })", span="506-510"];
m9_169 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeCircularReference()", file="StringUtils.cs", label="Assert.AreEqual(''c1'', c1.Child.Child.Child.Name)", span="515-515"];
m9_173 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeReferenceInList()", file="StringUtils.cs", label="EmployeeReference e2 = new EmployeeReference { Name = ''e2'' }", span="522-522"];
m9_177 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeReferenceInList()", file="StringUtils.cs", label="Exit Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeReferenceInList()", span="519-519"];
m9_163 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeCircularReference()", file="StringUtils.cs", label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeCircularReference()", span="488-488"];
m9_167 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeCircularReference()", file="StringUtils.cs", label="Assert.AreEqual(''c2'', c1.Child.Name)", span="513-513"];
m9_171 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeReferenceInList()", file="StringUtils.cs", label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeReferenceInList()", span="519-519"];
m9_175 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeReferenceInList()", file="StringUtils.cs", label="string json = JsonConvert.SerializeObject(employees, Formatting.Indented)", span="526-526"];
m9_164 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeCircularReference()", file="StringUtils.cs", label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''Name'''': ''''c1'''',\r\n  ''''Child'''': {\r\n    ''''$id'''': ''''2'''',\r\n    ''''Name'''': ''''c2'''',\r\n    ''''Child'''': {\r\n      ''''$id'''': ''''3'''',\r\n      ''''Name'''': ''''c3'''',\r\n      ''''Child'''': {\r\n        ''''$ref'''': ''''1''''\r\n      }\r\n    }\r\n  }\r\n}''", span="490-504"];
m9_166 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeCircularReference()", file="StringUtils.cs", label="Assert.AreEqual(''c1'', c1.Name)", span="512-512"];
m9_168 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeCircularReference()", file="StringUtils.cs", label="Assert.AreEqual(''c3'', c1.Child.Child.Name)", span="514-514"];
m9_170 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeCircularReference()", file="StringUtils.cs", label="Exit Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeCircularReference()", span="488-488"];
m9_172 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeReferenceInList()", file="StringUtils.cs", label="EmployeeReference e1 = new EmployeeReference { Name = ''e1'' }", span="521-521"];
m9_174 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeReferenceInList()", file="StringUtils.cs", label="List<EmployeeReference> employees = new List<EmployeeReference> { e1, e2, e1, e2 }", span="524-524"];
m9_176 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeReferenceInList()", file="StringUtils.cs", label="Assert.AreEqual(@''[\r\n  {\r\n    ''''$id'''': ''''1'''',\r\n    ''''Name'''': ''''e1'''',\r\n    ''''Manager'''': null\r\n  },\r\n  {\r\n    ''''$id'''': ''''2'''',\r\n    ''''Name'''': ''''e2'''',\r\n    ''''Manager'''': null\r\n  },\r\n  {\r\n    ''''$ref'''': ''''1''''\r\n  },\r\n  {\r\n    ''''$ref'''': ''''2''''\r\n  }\r\n]'', json)", span="528-545"];
m9_178 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeReferenceInList()", file="StringUtils.cs", label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeReferenceInList()", span="549-549"];
m9_181 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeReferenceInList()", file="StringUtils.cs", label="Assert.AreEqual(4, employees.Count)", span="571-571"];
m9_182 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeReferenceInList()", file="StringUtils.cs", label="Assert.AreEqual(''e1'', employees[0].Name)", span="573-573"];
m9_188 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeReferenceInList()", file="StringUtils.cs", label="Exit Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeReferenceInList()", span="549-549"];
m9_192 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeReferenceInDictionary()", file="StringUtils.cs", label="Dictionary<string, EmployeeReference> employees = new Dictionary<string, EmployeeReference>\r\n        {\r\n          {''One'', e1},\r\n          {''Two'', e2},\r\n          {''Three'', e1},\r\n          {''Four'', e2}\r\n        }", span="588-594"];
m9_196 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="StringUtils.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m9_186 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeReferenceInList()", file="StringUtils.cs", label="Assert.AreEqual(employees[0], employees[2])", span="578-578"];
m9_190 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeReferenceInDictionary()", file="StringUtils.cs", label="EmployeeReference e1 = new EmployeeReference { Name = ''e1'' }", span="585-585"];
m9_194 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeReferenceInDictionary()", file="StringUtils.cs", label="Assert.AreEqual(@''{\r\n  ''''One'''': {\r\n    ''''$id'''': ''''1'''',\r\n    ''''Name'''': ''''e1'''',\r\n    ''''Manager'''': null\r\n  },\r\n  ''''Two'''': {\r\n    ''''$id'''': ''''2'''',\r\n    ''''Name'''': ''''e2'''',\r\n    ''''Manager'''': null\r\n  },\r\n  ''''Three'''': {\r\n    ''''$ref'''': ''''1''''\r\n  },\r\n  ''''Four'''': {\r\n    ''''$ref'''': ''''2''''\r\n  }\r\n}'', json)", span="598-615"];
m9_187 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeReferenceInList()", file="StringUtils.cs", label="Assert.AreEqual(employees[1], employees[3])", span="579-579"];
m9_189 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeReferenceInDictionary()", file="StringUtils.cs", label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeReferenceInDictionary()", span="583-583"];
m9_191 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeReferenceInDictionary()", file="StringUtils.cs", label="EmployeeReference e2 = new EmployeeReference { Name = ''e2'' }", span="586-586"];
m9_193 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeReferenceInDictionary()", file="StringUtils.cs", label="string json = JsonConvert.SerializeObject(employees, Formatting.Indented)", span="596-596"];
m9_195 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeReferenceInDictionary()", file="StringUtils.cs", label="Exit Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeReferenceInDictionary()", span="583-583"];
m9_301 [cluster="Newtonsoft.Json.JsonWriter.WriteComment(string)", file="StringUtils.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteComment(string)", span="1178-1178"];
m9_0 [cluster="Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", file="StringUtils.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", span="47-47"];
m9_1 [cluster="Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", file="StringUtils.cs", label="_value = value", span="49-49"];
m9_3 [cluster="Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", file="StringUtils.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", span="47-47"];
m9_2 [cluster="Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", file="StringUtils.cs", label="_valueType = type", span="50-50"];
m9_6 [cluster="Newtonsoft.Json.Linq.JValue.JValue(long)", file="StringUtils.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(long)", span="66-66"];
m9_111 [cluster="Newtonsoft.Json.JsonSerializer.Populate(Newtonsoft.Json.JsonReader, object)", file="StringUtils.cs", label="Entry Newtonsoft.Json.JsonSerializer.Populate(Newtonsoft.Json.JsonReader, object)", span="336-336"];
m9_107 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.CircularReferenceClassConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="StringUtils.cs", label="Exit Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.CircularReferenceClassConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", span="298-298"];
m9_320 [cluster="System.Enum.GetHashCode()", file="StringUtils.cs", label="Entry System.Enum.GetHashCode()", span="0-0"];
m9_319 [cluster="object.GetHashCode()", file="StringUtils.cs", label="Entry object.GetHashCode()", span="0-0"];
m9_215 [cluster="Newtonsoft.Json.Tests.TestObjects.Person.Person()", file="StringUtils.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Person.Person()", span="34-34"];
m9_216 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="StringUtils.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m9_218 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ExampleWith()", file="StringUtils.cs", label="Person p = new Person\r\n      {\r\n        BirthDate = new DateTime(1980, 12, 23, 0, 0, 0, DateTimeKind.Utc),\r\n        LastModified = new DateTime(2009, 2, 20, 12, 59, 21, DateTimeKind.Utc),\r\n        Department = ''IT'',\r\n        Name = ''James''\r\n      }", span="686-692"];
m9_220 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ExampleWith()", file="StringUtils.cs", label="people.Add(p)", span="695-695"];
m9_221 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ExampleWith()", file="StringUtils.cs", label="people.Add(p)", span="696-696"];
m9_222 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ExampleWith()", file="StringUtils.cs", label="string json = JsonConvert.SerializeObject(people, Formatting.Indented,\r\n        new JsonSerializerSettings { PreserveReferencesHandling = PreserveReferencesHandling.Objects })", span="698-699"];
m9_224 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ExampleWith()", file="StringUtils.cs", label="Console.WriteLine(deserializedPeople.Count)", span="715-715"];
m9_226 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ExampleWith()", file="StringUtils.cs", label="Person p2 = deserializedPeople[1]", span="719-719"];
m9_228 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ExampleWith()", file="StringUtils.cs", label="Console.WriteLine(p2.Name)", span="723-723"];
m9_230 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ExampleWith()", file="StringUtils.cs", label="Exit Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ExampleWith()", span="684-684"];
m9_232 [cluster="System.Console.WriteLine(string)", file="StringUtils.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m9_234 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="StringUtils.cs", label="value is bool", span="440-440"];
m9_236 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="StringUtils.cs", label="value is Guid", span="442-442"];
m9_238 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="StringUtils.cs", label="value is Uri", span="444-444"];
m9_240 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="StringUtils.cs", label="value is TimeSpan", span="446-446"];
m9_242 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="StringUtils.cs", label="throw new ArgumentException(''Could not determine JSON object type for type {0}.''.FormatWith(CultureInfo.InvariantCulture, value.GetType()));", span="449-449"];
m9_217 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ExampleWith()", file="StringUtils.cs", label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ExampleWith()", span="684-684"];
m9_219 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ExampleWith()", file="StringUtils.cs", label="List<Person> people = new List<Person>()", span="694-694"];
m9_223 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ExampleWith()", file="StringUtils.cs", label="List<Person> deserializedPeople = JsonConvert.DeserializeObject<List<Person>>(json,\r\n        new JsonSerializerSettings { PreserveReferencesHandling = PreserveReferencesHandling.Objects })", span="712-713"];
m9_225 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ExampleWith()", file="StringUtils.cs", label="Person p1 = deserializedPeople[0]", span="718-718"];
m9_227 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ExampleWith()", file="StringUtils.cs", label="Console.WriteLine(p1.Name)", span="721-721"];
m9_229 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ExampleWith()", file="StringUtils.cs", label="bool equal = Object.ReferenceEquals(p1, p2)", span="726-726"];
m9_231 [cluster="System.Console.WriteLine(int)", file="StringUtils.cs", label="Entry System.Console.WriteLine(int)", span="0-0"];
m9_233 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="StringUtils.cs", label="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests", span=""];
m9_235 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="StringUtils.cs", label="return JTokenType.Boolean;", span="441-441"];
m9_237 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="StringUtils.cs", label="return JTokenType.Guid;", span="443-443"];
m9_239 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="StringUtils.cs", label="return JTokenType.Uri;", span="445-445"];
m9_241 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="StringUtils.cs", label="return JTokenType.TimeSpan;", span="447-447"];
m9_243 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="StringUtils.cs", label="Exit Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", span="417-417"];
m9_367 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="StringUtils.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", span="697-697"];
m9_368 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="StringUtils.cs", label="binder.Type == typeof(JValue)", span="699-699"];
m9_369 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="StringUtils.cs", label="result = instance", span="701-701"];
m9_371 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="StringUtils.cs", label="object value = instance.Value", span="705-705"];
m9_374 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="StringUtils.cs", label="return ReflectionUtils.IsNullable(binder.Type);", span="710-710"];
m9_375 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="StringUtils.cs", label="result = ConvertUtils.Convert(instance.Value, CultureInfo.InvariantCulture, binder.Type)", span="713-713"];
m9_370 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="StringUtils.cs", label="return true;", span="702-702"];
m9_372 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="StringUtils.cs", label="value == null", span="707-707"];
m9_373 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="StringUtils.cs", label="result = null", span="709-709"];
m9_376 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="StringUtils.cs", label="return true;", span="714-714"];
m9_377 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="StringUtils.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", span="697-697"];
m9_16 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeDictionarysWithPreserveObjectReferences()", file="StringUtils.cs", label="Assert.AreEqual(1, circularDictionary[''other''].Count)", span="80-80"];
m9_17 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeDictionarysWithPreserveObjectReferences()", file="StringUtils.cs", label="Assert.AreEqual(circularDictionary, circularDictionary[''self''])", span="81-81"];
m9_28 [cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="StringUtils.cs", label="other == null", span="156-156"];
m9_24 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularListsError()", file="StringUtils.cs", label="circularList.Add(new CircularList { new CircularList { circularList } })", span="95-95"];
m9_25 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularListsError()", file="StringUtils.cs", label="JsonConvert.SerializeObject(circularList, Formatting.Indented)", span="97-97"];
m9_361 [cluster="System.IFormattable.ToString(string, System.IFormatProvider)", file="StringUtils.cs", label="Entry System.IFormattable.ToString(string, System.IFormatProvider)", span="0-0"];
m9_108 [cluster="Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader)", file="StringUtils.cs", label="Entry Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader)", span="245-245"];
m9_106 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.CircularReferenceClassConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="StringUtils.cs", label="return serializer.ReferenceResolver.ResolveReference(reference);", span="311-311"];
m9_208 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ExampleWithout()", file="StringUtils.cs", label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ExampleWithout()", span="654-654"];
m9_10 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="StringUtils.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="571-571"];
m9_11 [cluster="Unk.AreEqual", file="StringUtils.cs", label="Entry Unk.AreEqual", span=""];
m9_105 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.CircularReferenceClassConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="StringUtils.cs", label="string reference = (string)o[''$ref'']", span="310-310"];
m9_101 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.CircularReferenceClassConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="StringUtils.cs", label="id != null", span="302-302"];
m9_119 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularReferencesWithConverter()", file="StringUtils.cs", label="CircularReferenceClass c3 = new CircularReferenceClass { Name = ''c3'' }", span="326-326"];
m9_120 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularReferencesWithConverter()", file="StringUtils.cs", label="c1.Child = c2", span="328-328"];
m9_121 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularReferencesWithConverter()", file="StringUtils.cs", label="c2.Child = c3", span="329-329"];
m9_123 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularReferencesWithConverter()", file="StringUtils.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented, new JsonSerializerSettings\r\n      {\r\n        PreserveReferencesHandling = PreserveReferencesHandling.Objects,\r\n        Converters = new List<JsonConverter> { new CircularReferenceClassConverter() }\r\n      })", span="332-336"];
m9_122 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularReferencesWithConverter()", file="StringUtils.cs", label="c3.Child = c1", span="330-330"];
m9_124 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularReferencesWithConverter()", file="StringUtils.cs", label="Assert.AreEqual(@''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$type'''': ''''CircularReferenceClass'''',\r\n  ''''Name'''': ''''c1'''',\r\n  ''''Child'''': {\r\n    ''''$id'''': ''''2'''',\r\n    ''''$type'''': ''''CircularReferenceClass'''',\r\n    ''''Name'''': ''''c2'''',\r\n    ''''Child'''': {\r\n      ''''$id'''': ''''3'''',\r\n      ''''$type'''': ''''CircularReferenceClass'''',\r\n      ''''Name'''': ''''c3'''',\r\n      ''''Child'''': {\r\n        ''''$ref'''': ''''1''''\r\n      }\r\n    }\r\n  }\r\n}'', json)", span="338-355"];
m9_116 [cluster="System.TimeSpan.CompareTo(System.TimeSpan)", file="StringUtils.cs", label="Entry System.TimeSpan.CompareTo(System.TimeSpan)", span="0-0"];
m9_117 [cluster="string.FormatWith(System.IFormatProvider, params object[])", file="StringUtils.cs", label="Entry string.FormatWith(System.IFormatProvider, params object[])", span="48-48"];
m9_118 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.CreateArgumentOutOfRangeException(string, object, string)", file="StringUtils.cs", label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.CreateArgumentOutOfRangeException(string, object, string)", span="38-38"];
m9_125 [cluster="System.Convert.ToDouble(object, System.IFormatProvider)", file="StringUtils.cs", label="Entry System.Convert.ToDouble(object, System.IFormatProvider)", span="0-0"];
m9_351 [cluster="Newtonsoft.Json.Linq.JValue.ToString(System.IFormatProvider)", file="StringUtils.cs", label="Entry Newtonsoft.Json.Linq.JValue.ToString(System.IFormatProvider)", span="657-657"];
m9_352 [cluster="Newtonsoft.Json.Linq.JValue.ToString(System.IFormatProvider)", file="StringUtils.cs", label="return ToString(null, formatProvider);", span="659-659"];
m9_353 [cluster="Newtonsoft.Json.Linq.JValue.ToString(System.IFormatProvider)", file="StringUtils.cs", label="Exit Newtonsoft.Json.Linq.JValue.ToString(System.IFormatProvider)", span="657-657"];
m9_60 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="StringUtils.cs", label="objA is DateTime", span="207-207"];
m9_62 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="StringUtils.cs", label="DateTime date2 = Convert.ToDateTime(objB, CultureInfo.InvariantCulture)", span="211-211"];
m9_61 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="StringUtils.cs", label="DateTime date1 = Convert.ToDateTime(objA, CultureInfo.InvariantCulture)", span="210-210"];
m9_63 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="StringUtils.cs", label="return date1.CompareTo(date2);", span="213-213"];
m9_7 [cluster="Newtonsoft.Json.Linq.JValue.JValue(long)", file="StringUtils.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValue(long)", span="66-66"];
m9_58 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="StringUtils.cs", label="return b1.CompareTo(b2);", span="204-204"];
m9_415 [cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="StringUtils.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", span="763-763"];
m9_416 [cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="StringUtils.cs", label="obj == null", span="765-765"];
m9_418 [cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="StringUtils.cs", label="object otherValue = (obj is JValue) ? ((JValue) obj).Value : obj", span="768-768"];
m9_417 [cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="StringUtils.cs", label="return 1;", span="766-766"];
m9_419 [cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="StringUtils.cs", label="return Compare(_valueType, _value, otherValue);", span="770-770"];
m9_420 [cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="StringUtils.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", span="763-763"];
m9_64 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="StringUtils.cs", label="!(objB is DateTimeOffset)", span="218-218"];
m9_65 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="StringUtils.cs", label="throw new ArgumentException(''Object must be of type DateTimeOffset.'');", span="219-219"];
m9_66 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="StringUtils.cs", label="DateTimeOffset date1 = (DateTimeOffset) objA", span="221-221"];
m9_67 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="StringUtils.cs", label="DateTimeOffset date2 = (DateTimeOffset) objB", span="222-222"];
m9_68 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="StringUtils.cs", label="return date1.CompareTo(date2);", span="224-224"];
m9_69 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="StringUtils.cs", label="JTokenType.Bytes", span="227-227"];
m9_308 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(long)", file="StringUtils.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(long)", span="704-704"];
m9_98 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="StringUtils.cs", label="Exit Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", span="173-173"];
m9_103 [cluster="long.CompareTo(long)", file="StringUtils.cs", label="Entry long.CompareTo(long)", span="0-0"];
m9_104 [cluster="System.Convert.ToString(object, System.IFormatProvider)", file="StringUtils.cs", label="Entry System.Convert.ToString(object, System.IFormatProvider)", span="0-0"];
m9_100 [cluster="decimal.CompareTo(decimal)", file="StringUtils.cs", label="Entry decimal.CompareTo(decimal)", span="0-0"];
m9_99 [cluster="System.Convert.ToDecimal(object, System.IFormatProvider)", file="StringUtils.cs", label="Entry System.Convert.ToDecimal(object, System.IFormatProvider)", span="0-0"];
m9_26 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularListsError()", file="StringUtils.cs", label="Exit Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularListsError()", span="90-90"];
m9_27 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.CircularList.CircularList()", file="StringUtils.cs", label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.CircularList.CircularList()", span="84-84"];
m9_30 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularListsIgnore()", file="StringUtils.cs", label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularListsIgnore()", span="101-101"];
m9_29 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="StringUtils.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="529-529"];
m9_31 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularListsIgnore()", file="StringUtils.cs", label="CircularList circularList = new CircularList()", span="103-103"];
m9_209 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ExampleWithout()", file="StringUtils.cs", label="Person p = new Person\r\n        {\r\n          BirthDate = new DateTime(1980, 12, 23, 0, 0, 0, DateTimeKind.Utc),\r\n          LastModified = new DateTime(2009, 2, 20, 12, 59, 21, DateTimeKind.Utc),\r\n          Department = ''IT'',\r\n          Name = ''James''\r\n        }", span="656-662"];
m9_210 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ExampleWithout()", file="StringUtils.cs", label="List<Person> people = new List<Person>()", span="664-664"];
m9_211 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.ExampleWithout()", file="StringUtils.cs", label="people.Add(p)", span="665-665"];
m9_212 [cluster="Newtonsoft.Json.Linq.JValue.CreateString(string)", file="StringUtils.cs", label="Entry Newtonsoft.Json.Linq.JValue.CreateString(string)", span="412-412"];
m9_213 [cluster="Newtonsoft.Json.Linq.JValue.CreateString(string)", file="StringUtils.cs", label="return new JValue(value, JTokenType.String);", span="414-414"];
m9_214 [cluster="Newtonsoft.Json.Linq.JValue.CreateString(string)", file="StringUtils.cs", label="Exit Newtonsoft.Json.Linq.JValue.CreateString(string)", span="412-412"];
m9_47 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="StringUtils.cs", label="JTokenType.Float", span="191-191"];
m9_366 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.JValueDynamicProxy()", file="StringUtils.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.JValueDynamicProxy()", span="695-695"];
m9_127 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.CircularReferenceClassConverter.CircularReferenceClassConverter()", file="StringUtils.cs", label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.CircularReferenceClassConverter.CircularReferenceClassConverter()", span="279-279"];
m9_311 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool)", file="StringUtils.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(bool)", span="741-741"];
m9_109 [cluster="Newtonsoft.Json.Tests.TestObjects.CircularReferenceClass.CircularReferenceClass()", file="StringUtils.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CircularReferenceClass.CircularReferenceClass()", span="32-32"];
m9_14 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeDictionarysWithPreserveObjectReferences()", file="StringUtils.cs", label="CircularDictionary circularDictionary = JsonConvert.DeserializeObject<CircularDictionary>(json,\r\n        new JsonSerializerSettings\r\n        {\r\n          PreserveReferencesHandling = PreserveReferencesHandling.All\r\n        })", span="73-77"];
m9_15 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.DeserializeDictionarysWithPreserveObjectReferences()", file="StringUtils.cs", label="Assert.AreEqual(2, circularDictionary.Count)", span="79-79"];
m9_312 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTimeOffset)", file="StringUtils.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.DateTimeOffset)", span="816-816"];
m9_18 [cluster="Newtonsoft.Json.Linq.JValue.JValue(System.Guid)", file="StringUtils.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.Guid)", span="121-121"];
m9_115 [cluster="System.Collections.Generic.Comparer<T>.Compare(T, T)", file="StringUtils.cs", label="Entry System.Collections.Generic.Comparer<T>.Compare(T, T)", span="0-0"];
m9_379 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="StringUtils.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", span="192-192"];
m9_315 [cluster="Newtonsoft.Json.Linq.JValue.GetDeepHashCode()", file="StringUtils.cs", label="Entry Newtonsoft.Json.Linq.JValue.GetDeepHashCode()", span="561-561"];
m9_316 [cluster="Newtonsoft.Json.Linq.JValue.GetDeepHashCode()", file="StringUtils.cs", label="int valueHashCode = (_value != null) ? _value.GetHashCode() : 0", span="563-563"];
m9_317 [cluster="Newtonsoft.Json.Linq.JValue.GetDeepHashCode()", file="StringUtils.cs", label="return _valueType.GetHashCode() ^ valueHashCode;", span="565-565"];
m9_318 [cluster="Newtonsoft.Json.Linq.JValue.GetDeepHashCode()", file="StringUtils.cs", label="Exit Newtonsoft.Json.Linq.JValue.GetDeepHashCode()", span="561-561"];
m9_112 [cluster="Newtonsoft.Json.Serialization.IReferenceResolver.ResolveReference(string)", file="StringUtils.cs", label="Entry Newtonsoft.Json.Serialization.IReferenceResolver.ResolveReference(string)", span="37-37"];
m9_342 [cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="StringUtils.cs", label="Entry Newtonsoft.Json.Linq.JValue.ToString()", span="630-630"];
m9_343 [cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="StringUtils.cs", label="_value == null", span="632-632"];
m9_344 [cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="StringUtils.cs", label="return string.Empty;", span="633-633"];
m9_345 [cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="StringUtils.cs", label="return _value.ToString();", span="635-635"];
m9_346 [cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="StringUtils.cs", label="Exit Newtonsoft.Json.Linq.JValue.ToString()", span="630-630"];
m9_19 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="StringUtils.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="657-657"];
m9_307 [cluster="Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="StringUtils.cs", label="Entry Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="44-44"];
m9_70 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="StringUtils.cs", label="!(objB is byte[])", span="228-228"];
m9_74 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="StringUtils.cs", label="bytes1 == null", span="233-233"];
m9_75 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="StringUtils.cs", label="return -1;", span="234-234"];
m9_71 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="StringUtils.cs", label="throw new ArgumentException(''Object must be of type byte[].'');", span="229-229"];
m9_73 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="StringUtils.cs", label="byte[] bytes2 = objB as byte[]", span="232-232"];
m9_72 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="StringUtils.cs", label="byte[] bytes1 = objA as byte[]", span="231-231"];
m9_76 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="StringUtils.cs", label="bytes2 == null", span="235-235"];
m9_305 [cluster="Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type)", file="StringUtils.cs", label="Entry Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type)", span="458-458"];
m9_8 [cluster="Newtonsoft.Json.Linq.JValue.JValue(ulong)", file="StringUtils.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(ulong)", span="76-76"];
m9_350 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", file="StringUtils.cs", label="Entry Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", span="670-670"];
m9_354 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", file="StringUtils.cs", label="_value == null", span="672-672"];
m9_358 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", file="StringUtils.cs", label="return formattable.ToString(format, formatProvider);", span="677-677"];
m9_355 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", file="StringUtils.cs", label="return string.Empty;", span="673-673"];
m9_356 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", file="StringUtils.cs", label="IFormattable formattable = _value as IFormattable", span="675-675"];
m9_357 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", file="StringUtils.cs", label="formattable != null", span="676-676"];
m9_359 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", file="StringUtils.cs", label="return _value.ToString();", span="679-679"];
m9_360 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", file="StringUtils.cs", label="Exit Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", span="670-670"];
m9_38 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="StringUtils.cs", label="objA == null && objB != null", span="179-179"];
m9_43 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="StringUtils.cs", label="return Convert.ToDecimal(objA, CultureInfo.InvariantCulture).CompareTo(Convert.ToDecimal(objB, CultureInfo.InvariantCulture));", span="186-186"];
m9_45 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="StringUtils.cs", label="return CompareFloat(objA, objB);", span="188-188"];
m9_39 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="StringUtils.cs", label="return -1;", span="180-180"];
m9_42 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="StringUtils.cs", label="objA is ulong || objB is ulong || objA is decimal || objB is decimal", span="185-185"];
m9_44 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="StringUtils.cs", label="objA is float || objB is float || objA is double || objB is double", span="187-187"];
m9_40 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="StringUtils.cs", label=valueType, span="182-182"];
m9_41 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="StringUtils.cs", label="JTokenType.Integer", span="184-184"];
m9_46 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="StringUtils.cs", label="return Convert.ToInt64(objA, CultureInfo.InvariantCulture).CompareTo(Convert.ToInt64(objB, CultureInfo.InvariantCulture));", span="190-190"];
m9_314 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(byte[])", file="StringUtils.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(byte[])", span="1054-1054"];
m9_59 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="StringUtils.cs", label="JTokenType.Date", span="205-205"];
m9_336 [cluster="object.Equals(object)", file="StringUtils.cs", label="Entry object.Equals(object)", span="0-0"];
m9_421 [cluster="Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", file="StringUtils.cs", label="Entry Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", span="791-791"];
m9_422 [cluster="Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", file="StringUtils.cs", label="obj == null", span="793-793"];
m9_424 [cluster="Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", file="StringUtils.cs", label="return Compare(_valueType, _value, obj._value);", span="796-796"];
m9_423 [cluster="Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", file="StringUtils.cs", label="return 1;", span="794-794"];
m9_425 [cluster="Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", file="StringUtils.cs", label="Exit Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", span="791-791"];
m9_309 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(double)", file="StringUtils.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(double)", span="732-732"];
m9_302 [cluster="Newtonsoft.Json.JsonWriter.WriteRawValue(string)", file="StringUtils.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteRawValue(string)", span="665-665"];
m9_20 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularListsError()", file="StringUtils.cs", label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularListsError()", span="90-90"];
m9_21 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.SerializeCircularListsError()", file="StringUtils.cs", label="CircularList circularList = new CircularList()", span="92-92"];
m9_113 [cluster="System.Guid.CompareTo(System.Guid)", file="StringUtils.cs", label="Entry System.Guid.CompareTo(System.Guid)", span="0-0"];
m9_245 [cluster="object.GetType()", file="StringUtils.cs", label="Entry object.GetType()", span="0-0"];
m9_35 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="StringUtils.cs", label="return 0;", span="176-176"];
m9_34 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="StringUtils.cs", label="objA == null && objB == null", span="175-175"];
m9_36 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="StringUtils.cs", label="objA != null && objB == null", span="177-177"];
m9_33 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="StringUtils.cs", label="Entry Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", span="173-173"];
m9_32 [cluster="Newtonsoft.Json.Linq.JValue.ValuesEquals(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="StringUtils.cs", label="Entry Newtonsoft.Json.Linq.JValue.ValuesEquals(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", span="568-568"];
m9_37 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="StringUtils.cs", label="return 1;", span="178-178"];
m9_313 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime)", file="StringUtils.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime)", span="806-806"];
m9_323 [cluster="Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)", file="StringUtils.cs", label="Entry Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)", span="580-580"];
m9_324 [cluster="Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)", file="StringUtils.cs", label="other == null", span="582-582"];
m9_326 [cluster="Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)", file="StringUtils.cs", label="return ValuesEquals(this, other);", span="585-585"];
m9_325 [cluster="Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)", file="StringUtils.cs", label="return false;", span="583-583"];
m9_327 [cluster="Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)", file="StringUtils.cs", label="Exit Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)", span="580-580"];
m9_126 [cluster="Newtonsoft.Json.Utilities.MathUtils.ApproxEquals(double, double)", file="StringUtils.cs", label="Entry Newtonsoft.Json.Utilities.MathUtils.ApproxEquals(double, double)", span="127-127"];
m9_378 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", file="StringUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", span="180-180"];
m9_328 [cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", file="StringUtils.cs", label="Entry Newtonsoft.Json.Linq.JValue.Equals(object)", span="598-598"];
m9_329 [cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", file="StringUtils.cs", label="obj == null", span="600-600"];
m9_331 [cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", file="StringUtils.cs", label="JValue otherValue = obj as JValue", span="603-603"];
m9_334 [cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", file="StringUtils.cs", label="return base.Equals(obj);", span="607-607"];
m9_330 [cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", file="StringUtils.cs", label="return false;", span="601-601"];
m9_332 [cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", file="StringUtils.cs", label="otherValue != null", span="604-604"];
m9_333 [cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", file="StringUtils.cs", label="return Equals(otherValue);", span="605-605"];
m9_335 [cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", file="StringUtils.cs", label="Exit Newtonsoft.Json.Linq.JValue.Equals(object)", span="598-598"];
m9_48 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="StringUtils.cs", label="return CompareFloat(objA, objB);", span="192-192"];
m9_49 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", color=green, community=0, file="StringUtils.cs", label="0: JTokenType.Comment", span="193-193"];
m9_50 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="StringUtils.cs", label="JTokenType.String", span="194-194"];
m9_51 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="StringUtils.cs", label="JTokenType.Raw", span="195-195"];
m9_52 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="StringUtils.cs", label="string s1 = Convert.ToString(objA, CultureInfo.InvariantCulture)", span="196-196"];
m9_53 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="StringUtils.cs", label="string s2 = Convert.ToString(objB, CultureInfo.InvariantCulture)", span="197-197"];
m9_54 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="StringUtils.cs", label="return s1.CompareTo(s2);", span="199-199"];
m9_55 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="StringUtils.cs", label="JTokenType.Boolean", span="200-200"];
m9_56 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="StringUtils.cs", label="bool b1 = Convert.ToBoolean(objA, CultureInfo.InvariantCulture)", span="201-201"];
m9_57 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="StringUtils.cs", label="bool b2 = Convert.ToBoolean(objB, CultureInfo.InvariantCulture)", span="202-202"];
m9_347 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string)", file="StringUtils.cs", label="Entry Newtonsoft.Json.Linq.JValue.ToString(string)", span="645-645"];
m9_348 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string)", file="StringUtils.cs", label="return ToString(format, CultureInfo.CurrentCulture);", span="647-647"];
m9_349 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string)", file="StringUtils.cs", label="Exit Newtonsoft.Json.Linq.JValue.ToString(string)", span="645-645"];
m9_9 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="StringUtils.cs", label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="103-103"];
m9_380 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="StringUtils.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", span="717-717"];
m9_381 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="StringUtils.cs", label="object compareValue = (arg is JValue) ? ((JValue) arg).Value : arg", span="719-719"];
m9_382 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="StringUtils.cs", label="binder.Operation", span="721-721"];
m9_384 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="StringUtils.cs", label="result = (Compare(instance.Type, instance.Value, compareValue) == 0)", span="724-724"];
m9_387 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="StringUtils.cs", label="result = (Compare(instance.Type, instance.Value, compareValue) != 0)", span="727-727"];
m9_390 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="StringUtils.cs", label="result = (Compare(instance.Type, instance.Value, compareValue) > 0)", span="730-730"];
m9_393 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="StringUtils.cs", label="result = (Compare(instance.Type, instance.Value, compareValue) >= 0)", span="733-733"];
m9_396 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="StringUtils.cs", label="result = (Compare(instance.Type, instance.Value, compareValue) < 0)", span="736-736"];
m9_399 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="StringUtils.cs", label="result = (Compare(instance.Type, instance.Value, compareValue) <= 0)", span="739-739"];
m9_409 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="StringUtils.cs", label="Operation(binder.Operation, instance.Value, compareValue, out result)", span="749-749"];
m9_383 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="StringUtils.cs", label="ExpressionType.Equal", span="723-723"];
m9_386 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="StringUtils.cs", label="ExpressionType.NotEqual", span="726-726"];
m9_389 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="StringUtils.cs", label="ExpressionType.GreaterThan", span="729-729"];
m9_392 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="StringUtils.cs", label="ExpressionType.GreaterThanOrEqual", span="732-732"];
m9_395 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="StringUtils.cs", label="ExpressionType.LessThan", span="735-735"];
m9_398 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="StringUtils.cs", label="ExpressionType.LessThanOrEqual", span="738-738"];
m9_401 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="StringUtils.cs", label="ExpressionType.Add", span="741-741"];
m9_385 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="StringUtils.cs", label="return true;", span="725-725"];
m9_388 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="StringUtils.cs", label="return true;", span="728-728"];
m9_391 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="StringUtils.cs", label="return true;", span="731-731"];
m9_394 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="StringUtils.cs", label="return true;", span="734-734"];
m9_397 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="StringUtils.cs", label="return true;", span="737-737"];
m9_400 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="StringUtils.cs", label="return true;", span="740-740"];
m9_402 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="StringUtils.cs", label="ExpressionType.AddAssign", span="742-742"];
m9_403 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="StringUtils.cs", label="ExpressionType.Subtract", span="743-743"];
m9_404 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="StringUtils.cs", label="ExpressionType.SubtractAssign", span="744-744"];
m9_405 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="StringUtils.cs", label="ExpressionType.Multiply", span="745-745"];
m9_406 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="StringUtils.cs", label="ExpressionType.MultiplyAssign", span="746-746"];
m9_407 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="StringUtils.cs", label="ExpressionType.Divide", span="747-747"];
m9_408 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="StringUtils.cs", label="ExpressionType.DivideAssign", span="748-748"];
m9_410 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="StringUtils.cs", label="result = new JValue(result)", span="751-751"];
m9_412 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="StringUtils.cs", label="result = null", span="757-757"];
m9_411 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="StringUtils.cs", label="return true;", span="752-752"];
m9_413 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="StringUtils.cs", label="return false;", span="758-758"];
m9_414 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="StringUtils.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", span="717-717"];
m9_310 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="StringUtils.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="676-676"];
m9_321 [cluster="Newtonsoft.Json.Linq.JValue.ValuesEquals(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="StringUtils.cs", label="return (v1 == v2 || (v1._valueType == v2._valueType && Compare(v1._valueType, v1._value, v2._value) == 0));", span="570-570"];
m9_322 [cluster="Newtonsoft.Json.Linq.JValue.ValuesEquals(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="StringUtils.cs", label="Exit Newtonsoft.Json.Linq.JValue.ValuesEquals(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", span="568-568"];
m9_362 [cluster="Newtonsoft.Json.Linq.JValue.GetMetaObject(System.Linq.Expressions.Expression)", file="StringUtils.cs", label="Entry Newtonsoft.Json.Linq.JValue.GetMetaObject(System.Linq.Expressions.Expression)", span="690-690"];
m9_363 [cluster="Newtonsoft.Json.Linq.JValue.GetMetaObject(System.Linq.Expressions.Expression)", file="StringUtils.cs", label="return new DynamicProxyMetaObject<JValue>(parameter, this, new JValueDynamicProxy(), true);", span="692-692"];
m9_364 [cluster="Newtonsoft.Json.Linq.JValue.GetMetaObject(System.Linq.Expressions.Expression)", file="StringUtils.cs", label="Exit Newtonsoft.Json.Linq.JValue.GetMetaObject(System.Linq.Expressions.Expression)", span="690-690"];
m9_82 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="StringUtils.cs", label="Guid guid1 = (Guid) objA", span="243-243"];
m9_83 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="StringUtils.cs", label="Guid guid2 = (Guid) objB", span="244-244"];
m9_86 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="StringUtils.cs", label="!(objB is Uri)", span="248-248"];
m9_88 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="StringUtils.cs", label="Uri uri1 = (Uri)objA", span="251-251"];
m9_89 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="StringUtils.cs", label="Uri uri2 = (Uri)objB", span="252-252"];
m9_92 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="StringUtils.cs", label="!(objB is TimeSpan)", span="256-256"];
m9_94 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="StringUtils.cs", label="TimeSpan ts1 = (TimeSpan)objA", span="259-259"];
m9_95 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="StringUtils.cs", label="TimeSpan ts2 = (TimeSpan)objB", span="260-260"];
m9_97 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="StringUtils.cs", label="throw MiscellaneousUtils.CreateArgumentOutOfRangeException(''valueType'', valueType, ''Unexpected value type: {0}''.FormatWith(CultureInfo.InvariantCulture, valueType));", span="264-264"];
m9_85 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="StringUtils.cs", label="JTokenType.Uri", span="247-247"];
m9_91 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="StringUtils.cs", label="JTokenType.TimeSpan", span="255-255"];
m9_81 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="StringUtils.cs", label="throw new ArgumentException(''Object must be of type Guid.'');", span="241-241"];
m9_84 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="StringUtils.cs", label="return guid1.CompareTo(guid2);", span="246-246"];
m9_87 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="StringUtils.cs", label="throw new ArgumentException(''Object must be of type Uri.'');", span="249-249"];
m9_90 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="StringUtils.cs", label="return Comparer<string>.Default.Compare(uri1.ToString(), uri2.ToString());", span="254-254"];
m9_93 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="StringUtils.cs", label="throw new ArgumentException(''Object must be of type TimeSpan.'');", span="257-257"];
m9_96 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="StringUtils.cs", label="return ts1.CompareTo(ts2);", span="262-262"];
m9_244 [cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="StringUtils.cs", label="Entry Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", span="452-452"];
m9_246 [cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="StringUtils.cs", label="current == null", span="454-454"];
m9_248 [cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="StringUtils.cs", label="current.Value", span="457-457"];
m9_252 [cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="StringUtils.cs", label="return current.Value;", span="462-462"];
m9_247 [cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="StringUtils.cs", label="return JTokenType.String;", span="455-455"];
m9_249 [cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="StringUtils.cs", label="JTokenType.Comment", span="459-459"];
m9_253 [cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="StringUtils.cs", label="return JTokenType.String;", span="464-464"];
m9_250 [cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="StringUtils.cs", label="JTokenType.String", span="460-460"];
m9_251 [cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="StringUtils.cs", label="JTokenType.Raw", span="461-461"];
m9_254 [cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="StringUtils.cs", label="Exit Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", span="452-452"];
m9_306 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="StringUtils.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="286-286"];
m9_426 [file="StringUtils.cs", label="Newtonsoft.Json.Linq.JValue", span=""];
m10_76 [cluster="Unk.Fail", file="TestFixtureBase.cs", label="Entry Unk.Fail", span=""];
m10_80 [cluster="string.Format(string, object, object)", file="TestFixtureBase.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m10_79 [cluster="System.Exception.GetType()", file="TestFixtureBase.cs", label="Entry System.Exception.GetType()", span="0-0"];
m10_78 [cluster="System.Exception.Exception(string, System.Exception)", file="TestFixtureBase.cs", label="Entry System.Exception.Exception(string, System.Exception)", span="0-0"];
m10_75 [cluster="System.Action.Invoke()", file="TestFixtureBase.cs", label="Entry System.Action.Invoke()", span="0-0"];
m10_77 [cluster="Unk.AreEqual", file="TestFixtureBase.cs", label="Entry Unk.AreEqual", span=""];
m10_66 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", file="TestFixtureBase.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", span="175-175"];
m10_67 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", color=green, community=0, file="TestFixtureBase.cs", label="0: action()", span="180-180"];
m10_68 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", file="TestFixtureBase.cs", label="Assert.Fail(''Exception of type {0} expected; got none exception'', typeof(TException).Name)", span="182-182"];
m10_70 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", file="TestFixtureBase.cs", label="message != null", span="186-186"];
m10_71 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", file="TestFixtureBase.cs", label="Assert.AreEqual(message, ex.Message, ''Unexpected exception message.'' + Environment.NewLine + ''Expected: '' + message + Environment.NewLine + ''Got: '' + ex.Message + Environment.NewLine + Environment.NewLine + ex)", span="187-187"];
m10_69 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", file="TestFixtureBase.cs", label=TException, span="184-184"];
m10_72 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", file="TestFixtureBase.cs", label=Exception, span="189-189"];
m10_73 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", file="TestFixtureBase.cs", label="throw new Exception(string.Format(''Exception of type {0} expected; got exception of type {1}.'', typeof(TException).Name, ex.GetType().Name), ex);", span="191-191"];
m10_74 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", file="TestFixtureBase.cs", label="Exit Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", span="175-175"];
m0_32 -> m0_33  [key=0, style=solid];
m0_33 -> m0_34  [key=0, style=solid];
m0_33 -> m0_36  [key=2, style=dotted];
m0_34 -> m0_35  [key=0, style=solid];
m0_34 -> m0_37  [key=2, style=dotted];
m0_34 -> m0_20  [key=2, style=dotted];
m0_35 -> m0_32  [color=blue, key=0, style=bold];
m0_64 -> m0_65  [key=0, style=solid];
m0_65 -> m0_66  [key=0, style=solid];
m0_65 -> m0_68  [key=2, style=dotted];
m0_66 -> m0_67  [key=0, style=solid];
m0_66 -> m0_53  [key=2, style=dotted];
m0_67 -> m0_64  [color=blue, key=0, style=bold];
m0_20 -> m0_21  [key=0, style=solid];
m0_20 -> m0_22  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JContainer", style=dashed];
m0_20 -> m0_23  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JContainer", style=dashed];
m0_20 -> m0_24  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JContainer", style=dashed];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_23  [key=0, style=solid];
m0_22 -> m0_24  [key=0, style=solid];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_26  [key=2, style=dotted];
m0_24 -> m0_25  [key=0, style=solid];
m0_25 -> m0_20  [color=blue, key=0, style=bold];
m0_53 -> m0_54  [key=0, style=solid];
m0_54 -> m0_55  [key=0, style=solid];
m0_54 -> m0_58  [key=2, style=dotted];
m0_54 -> m0_26  [key=2, style=dotted];
m0_55 -> m0_56  [key=0, style=solid];
m0_55 -> m0_57  [key=0, style=solid];
m0_56 -> m0_57  [key=0, style=solid];
m0_57 -> m0_53  [color=blue, key=0, style=bold];
m0_140 -> m0_141  [key=0, style=solid];
m0_140 -> m0_142  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m0_141 -> m0_142  [key=0, style=solid];
m0_141 -> m0_144  [key=2, style=dotted];
m0_142 -> m0_143  [key=0, style=solid];
m0_142 -> m0_53  [key=2, style=dotted];
m0_143 -> m0_140  [color=blue, key=0, style=bold];
m0_6 -> m0_7  [key=0, style=solid];
m0_7 -> m0_6  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_0 -> m0_2  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JContainer", style=dashed];
m0_0 -> m0_3  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JContainer", style=dashed];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_5  [key=2, style=dotted];
m0_2 -> m0_3  [key=0, style=solid];
m0_3 -> m0_4  [key=0, style=solid];
m0_4 -> m0_0  [color=blue, key=0, style=bold];
m0_10 -> m0_11  [key=0, style=solid];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_13  [key=2, style=dotted];
m0_12 -> m0_10  [color=blue, key=0, style=bold];
m0_150 -> m0_151  [key=0, style=solid];
m0_150 -> m0_152  [color=darkseagreen4, key=1, label="System.DateTimeOffset", style=dashed];
m0_151 -> m0_152  [key=0, style=solid];
m0_151 -> m0_154  [key=2, style=dotted];
m0_152 -> m0_153  [key=0, style=solid];
m0_152 -> m0_53  [key=2, style=dotted];
m0_153 -> m0_150  [color=blue, key=0, style=bold];
m0_99 -> m0_100  [key=0, style=solid];
m0_99 -> m0_101  [color=darkseagreen4, key=1, label=float, style=dashed];
m0_100 -> m0_101  [key=0, style=solid];
m0_100 -> m0_103  [key=2, style=dotted];
m0_101 -> m0_102  [key=0, style=solid];
m0_101 -> m0_53  [key=2, style=dotted];
m0_102 -> m0_99  [color=blue, key=0, style=bold];
m0_27 -> m0_28  [key=0, style=solid];
m0_28 -> m0_29  [key=0, style=solid];
m0_29 -> m0_30  [key=0, style=solid];
m0_29 -> m0_31  [key=0, style=solid];
m0_30 -> m0_31  [key=0, style=solid];
m0_31 -> m0_27  [color=blue, key=0, style=bold];
m0_130 -> m0_131  [key=0, style=solid];
m0_130 -> m0_132  [color=darkseagreen4, key=1, label=byte, style=dashed];
m0_131 -> m0_132  [key=0, style=solid];
m0_131 -> m0_134  [key=2, style=dotted];
m0_132 -> m0_133  [key=0, style=solid];
m0_132 -> m0_53  [key=2, style=dotted];
m0_133 -> m0_130  [color=blue, key=0, style=bold];
m0_69 -> m0_70  [key=0, style=solid];
m0_69 -> m0_71  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_70 -> m0_71  [key=0, style=solid];
m0_70 -> m0_73  [key=2, style=dotted];
m0_71 -> m0_72  [key=0, style=solid];
m0_71 -> m0_53  [key=2, style=dotted];
m0_72 -> m0_69  [color=blue, key=0, style=bold];
m0_135 -> m0_136  [key=0, style=solid];
m0_135 -> m0_137  [color=darkseagreen4, key=1, label=sbyte, style=dashed];
m0_136 -> m0_137  [key=0, style=solid];
m0_136 -> m0_139  [key=2, style=dotted];
m0_137 -> m0_138  [key=0, style=solid];
m0_137 -> m0_53  [key=2, style=dotted];
m0_138 -> m0_135  [color=blue, key=0, style=bold];
m0_104 -> m0_105  [key=0, style=solid];
m0_104 -> m0_106  [color=darkseagreen4, key=1, label=double, style=dashed];
m0_105 -> m0_106  [key=0, style=solid];
m0_105 -> m0_108  [key=2, style=dotted];
m0_106 -> m0_107  [key=0, style=solid];
m0_106 -> m0_53  [key=2, style=dotted];
m0_107 -> m0_104  [color=blue, key=0, style=bold];
m0_47 -> m0_48  [key=0, style=solid];
m0_47 -> m0_49  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_48 -> m0_49  [key=0, style=solid];
m0_48 -> m0_51  [key=2, style=dotted];
m0_49 -> m0_50  [key=0, style=solid];
m0_49 -> m0_52  [key=2, style=dotted];
m0_49 -> m0_20  [key=2, style=dotted];
m0_50 -> m0_47  [color=blue, key=0, style=bold];
m0_89 -> m0_90  [key=0, style=solid];
m0_89 -> m0_91  [color=darkseagreen4, key=1, label=long, style=dashed];
m0_90 -> m0_91  [key=0, style=solid];
m0_90 -> m0_93  [key=2, style=dotted];
m0_91 -> m0_92  [key=0, style=solid];
m0_91 -> m0_53  [key=2, style=dotted];
m0_92 -> m0_89  [color=blue, key=0, style=bold];
m0_84 -> m0_85  [key=0, style=solid];
m0_84 -> m0_86  [color=darkseagreen4, key=1, label=uint, style=dashed];
m0_85 -> m0_86  [key=0, style=solid];
m0_85 -> m0_88  [key=2, style=dotted];
m0_86 -> m0_87  [key=0, style=solid];
m0_86 -> m0_53  [key=2, style=dotted];
m0_87 -> m0_84  [color=blue, key=0, style=bold];
m0_8 -> m0_9  [key=0, style=solid];
m0_9 -> m0_8  [color=blue, key=0, style=bold];
m0_124 -> m0_125  [key=0, style=solid];
m0_124 -> m0_126  [color=darkseagreen4, key=1, label=char, style=dashed];
m0_125 -> m0_126  [key=0, style=solid];
m0_125 -> m0_128  [key=2, style=dotted];
m0_126 -> m0_127  [key=0, style=solid];
m0_126 -> m0_129  [key=2, style=dotted];
m0_126 -> m0_53  [key=2, style=dotted];
m0_127 -> m0_124  [color=blue, key=0, style=bold];
m0_44 -> m0_45  [key=0, style=solid];
m0_45 -> m0_46  [key=0, style=solid];
m0_45 -> m0_27  [key=2, style=dotted];
m0_46 -> m0_44  [color=blue, key=0, style=bold];
m0_145 -> m0_146  [key=0, style=solid];
m0_145 -> m0_147  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m0_146 -> m0_147  [key=0, style=solid];
m0_146 -> m0_149  [key=2, style=dotted];
m0_147 -> m0_148  [key=0, style=solid];
m0_147 -> m0_53  [key=2, style=dotted];
m0_148 -> m0_145  [color=blue, key=0, style=bold];
m0_119 -> m0_120  [key=0, style=solid];
m0_119 -> m0_121  [color=darkseagreen4, key=1, label=ushort, style=dashed];
m0_120 -> m0_121  [key=0, style=solid];
m0_120 -> m0_123  [key=2, style=dotted];
m0_121 -> m0_122  [key=0, style=solid];
m0_121 -> m0_53  [key=2, style=dotted];
m0_122 -> m0_119  [color=blue, key=0, style=bold];
m0_109 -> m0_110  [key=0, style=solid];
m0_109 -> m0_111  [color=darkseagreen4, key=1, label=bool, style=dashed];
m0_110 -> m0_111  [key=0, style=solid];
m0_110 -> m0_113  [key=2, style=dotted];
m0_111 -> m0_112  [key=0, style=solid];
m0_111 -> m0_53  [key=2, style=dotted];
m0_112 -> m0_109  [color=blue, key=0, style=bold];
m0_59 -> m0_60  [key=0, style=solid];
m0_60 -> m0_61  [key=0, style=solid];
m0_60 -> m0_63  [key=2, style=dotted];
m0_61 -> m0_62  [key=0, style=solid];
m0_61 -> m0_53  [key=2, style=dotted];
m0_62 -> m0_59  [color=blue, key=0, style=bold];
m0_79 -> m0_80  [key=0, style=solid];
m0_79 -> m0_81  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_80 -> m0_81  [key=0, style=solid];
m0_80 -> m0_83  [key=2, style=dotted];
m0_81 -> m0_82  [key=0, style=solid];
m0_81 -> m0_53  [key=2, style=dotted];
m0_82 -> m0_79  [color=blue, key=0, style=bold];
m0_114 -> m0_115  [key=0, style=solid];
m0_114 -> m0_116  [color=darkseagreen4, key=1, label=short, style=dashed];
m0_115 -> m0_116  [key=0, style=solid];
m0_115 -> m0_118  [key=2, style=dotted];
m0_116 -> m0_117  [key=0, style=solid];
m0_116 -> m0_53  [key=2, style=dotted];
m0_117 -> m0_114  [color=blue, key=0, style=bold];
m0_74 -> m0_75  [key=0, style=solid];
m0_74 -> m0_76  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_75 -> m0_76  [key=0, style=solid];
m0_75 -> m0_78  [key=2, style=dotted];
m0_76 -> m0_77  [key=0, style=solid];
m0_76 -> m0_53  [key=2, style=dotted];
m0_77 -> m0_74  [color=blue, key=0, style=bold];
m0_94 -> m0_95  [key=0, style=solid];
m0_94 -> m0_96  [color=darkseagreen4, key=1, label=ulong, style=dashed];
m0_95 -> m0_96  [key=0, style=solid];
m0_95 -> m0_98  [key=2, style=dotted];
m0_96 -> m0_97  [key=0, style=solid];
m0_96 -> m0_53  [key=2, style=dotted];
m0_97 -> m0_94  [color=blue, key=0, style=bold];
m0_14 -> m0_15  [key=0, style=solid];
m0_15 -> m0_16  [key=0, style=solid];
m0_15 -> m0_18  [key=2, style=dotted];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_19  [key=2, style=dotted];
m0_16 -> m0_20  [key=2, style=dotted];
m0_17 -> m0_14  [color=blue, key=0, style=bold];
m0_38 -> m0_39  [key=0, style=solid];
m0_38 -> m0_40  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_39 -> m0_40  [key=0, style=solid];
m0_39 -> m0_42  [key=2, style=dotted];
m0_40 -> m0_41  [key=0, style=solid];
m0_40 -> m0_43  [key=2, style=dotted];
m0_40 -> m0_20  [key=2, style=dotted];
m0_41 -> m0_38  [color=blue, key=0, style=bold];
m0_155 -> m0_2  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonTokenWriter", style=dashed];
m0_155 -> m0_3  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonTokenWriter", style=dashed];
m0_155 -> m0_11  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonTokenWriter", style=dashed];
m0_155 -> m0_15  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonTokenWriter", style=dashed];
m0_155 -> m0_16  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonTokenWriter", style=dashed];
m0_155 -> m0_21  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonTokenWriter", style=dashed];
m0_155 -> m0_22  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonTokenWriter", style=dashed];
m0_155 -> m0_23  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonTokenWriter", style=dashed];
m0_155 -> m0_24  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonTokenWriter", style=dashed];
m0_155 -> m0_28  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonTokenWriter", style=dashed];
m0_155 -> m0_29  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonTokenWriter", style=dashed];
m0_155 -> m0_30  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonTokenWriter", style=dashed];
m0_155 -> m0_33  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonTokenWriter", style=dashed];
m0_155 -> m0_34  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonTokenWriter", style=dashed];
m0_155 -> m0_39  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonTokenWriter", style=dashed];
m0_155 -> m0_40  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonTokenWriter", style=dashed];
m0_155 -> m0_45  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonTokenWriter", style=dashed];
m0_155 -> m0_48  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonTokenWriter", style=dashed];
m0_155 -> m0_49  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonTokenWriter", style=dashed];
m0_155 -> m0_54  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonTokenWriter", style=dashed];
m0_155 -> m0_55  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonTokenWriter", style=dashed];
m0_155 -> m0_56  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonTokenWriter", style=dashed];
m0_155 -> m0_60  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonTokenWriter", style=dashed];
m0_155 -> m0_61  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonTokenWriter", style=dashed];
m0_155 -> m0_65  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonTokenWriter", style=dashed];
m0_155 -> m0_66  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonTokenWriter", style=dashed];
m0_155 -> m0_70  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonTokenWriter", style=dashed];
m0_155 -> m0_71  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonTokenWriter", style=dashed];
m0_155 -> m0_75  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonTokenWriter", style=dashed];
m0_155 -> m0_76  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonTokenWriter", style=dashed];
m0_155 -> m0_80  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonTokenWriter", style=dashed];
m0_155 -> m0_81  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonTokenWriter", style=dashed];
m0_155 -> m0_85  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonTokenWriter", style=dashed];
m0_155 -> m0_86  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonTokenWriter", style=dashed];
m0_155 -> m0_90  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonTokenWriter", style=dashed];
m0_155 -> m0_91  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonTokenWriter", style=dashed];
m0_155 -> m0_95  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonTokenWriter", style=dashed];
m0_155 -> m0_96  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonTokenWriter", style=dashed];
m0_155 -> m0_100  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonTokenWriter", style=dashed];
m0_155 -> m0_101  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonTokenWriter", style=dashed];
m0_155 -> m0_105  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonTokenWriter", style=dashed];
m0_155 -> m0_106  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonTokenWriter", style=dashed];
m0_155 -> m0_110  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonTokenWriter", style=dashed];
m0_155 -> m0_111  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonTokenWriter", style=dashed];
m0_155 -> m0_115  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonTokenWriter", style=dashed];
m0_155 -> m0_116  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonTokenWriter", style=dashed];
m0_155 -> m0_120  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonTokenWriter", style=dashed];
m0_155 -> m0_121  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonTokenWriter", style=dashed];
m0_155 -> m0_125  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonTokenWriter", style=dashed];
m0_155 -> m0_126  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonTokenWriter", style=dashed];
m0_155 -> m0_131  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonTokenWriter", style=dashed];
m0_155 -> m0_132  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonTokenWriter", style=dashed];
m0_155 -> m0_136  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonTokenWriter", style=dashed];
m0_155 -> m0_137  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonTokenWriter", style=dashed];
m0_155 -> m0_141  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonTokenWriter", style=dashed];
m0_155 -> m0_142  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonTokenWriter", style=dashed];
m0_155 -> m0_146  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonTokenWriter", style=dashed];
m0_155 -> m0_147  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonTokenWriter", style=dashed];
m0_155 -> m0_151  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonTokenWriter", style=dashed];
m0_155 -> m0_152  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonTokenWriter", style=dashed];
m1_6 -> m1_7  [key=0, style=solid];
m1_7 -> m1_10  [key=0, style=solid];
m1_7 -> m1_11  [key=2, style=dotted];
m1_8 -> m1_9  [key=0, style=solid];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_12  [key=2, style=dotted];
m1_9 -> m1_13  [key=2, style=dotted];
m1_10 -> m1_6  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_3  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_3  [key=0, style=solid];
m1_3 -> m1_4  [key=0, style=solid];
m1_2 -> m1_4  [key=0, style=solid];
m1_2 -> m1_5  [key=2, style=dotted];
m1_4 -> m1_0  [color=blue, key=0, style=bold];
m1_14 -> m1_3  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonConverterAttribute", style=dashed];
m1_14 -> m1_7  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonConverterAttribute", style=dashed];
m1_14 -> m1_9  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonConverterAttribute", style=dashed];
m2_8 -> m2_21  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m2_8 -> m2_22  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m2_8 -> m2_26  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m2_8 -> m2_29  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m2_8 -> m2_31  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m2_8 -> m2_11  [key=0, style=solid];
m2_8 -> m2_12  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaNode", style=dashed];
m2_8 -> m2_13  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaNode", style=dashed];
m2_8 -> m2_14  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaNode", style=dashed];
m2_8 -> m2_15  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaNode", style=dashed];
m2_8 -> m2_16  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m2_8 -> m2_19  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaNode", style=dashed];
m2_8 -> m2_23  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m2_8 -> m2_25  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m2_8 -> m2_28  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m2_8 -> m2_30  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m2_17 -> m2_18  [key=0, style=solid];
m2_17 -> m2_19  [key=0, style=solid];
m2_17 -> m2_37  [key=2, style=dotted];
m2_18 -> m2_33  [key=0, style=solid];
m2_20 -> m2_21  [key=0, style=solid];
m2_20 -> m2_40  [key=2, style=dotted];
m2_20 -> m2_25  [color=darkorchid, key=3, label="method methodReturn bool Equals", style=bold];
m2_21 -> m2_22  [key=0, style=solid];
m2_21 -> m2_41  [key=2, style=dotted];
m2_22 -> m2_23  [key=0, style=solid];
m2_22 -> m2_41  [key=2, style=dotted];
m2_26 -> m2_27  [key=0, style=solid];
m2_26 -> m2_42  [key=2, style=dotted];
m2_29 -> m2_30  [key=0, style=solid];
m2_29 -> m2_43  [key=2, style=dotted];
m2_31 -> m2_31  [color=darkseagreen4, key=1, label=currentNode, style=dashed];
m2_31 -> m2_32  [key=0, style=solid];
m2_31 -> m2_8  [key=2, style=dotted];
m2_15 -> m2_17  [key=0, style=solid];
m2_15 -> m2_18  [color=darkseagreen4, key=1, label=newId, style=dashed];
m2_15 -> m2_35  [key=2, style=dotted];
m2_15 -> m2_36  [key=2, style=dotted];
m2_16 -> m2_17  [key=0, style=solid];
m2_16 -> m2_18  [color=darkseagreen4, key=1, label=newId, style=dashed];
m2_16 -> m2_36  [key=2, style=dotted];
m2_19 -> m2_20  [key=0, style=solid];
m2_19 -> m2_21  [color=darkseagreen4, key=1, label=currentNode, style=dashed];
m2_19 -> m2_22  [color=darkseagreen4, key=1, label=currentNode, style=dashed];
m2_19 -> m2_26  [color=darkseagreen4, key=1, label=currentNode, style=dashed];
m2_19 -> m2_29  [color=darkseagreen4, key=1, label=currentNode, style=dashed];
m2_19 -> m2_31  [color=darkseagreen4, key=1, label=currentNode, style=dashed];
m2_19 -> m2_38  [key=2, style=dotted];
m2_19 -> m2_39  [key=2, style=dotted];
m2_19 -> m2_32  [color=darkseagreen4, key=1, label=currentNode, style=dashed];
m2_25 -> m2_20  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.ResolverContractKey other", style=bold];
m2_25 -> m2_26  [key=0, style=solid];
m2_25 -> m2_28  [key=0, style=solid];
m2_23 -> m2_24  [key=0, style=solid];
m2_23 -> m2_28  [key=0, style=solid];
m2_24 -> m2_26  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_24 -> m2_25  [key=0, style=solid];
m2_24 -> m2_27  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_27 -> m2_25  [key=0, style=solid];
m2_27 -> m2_27  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_28 -> m2_29  [key=0, style=solid];
m2_28 -> m2_30  [key=0, style=solid];
m2_30 -> m2_31  [key=0, style=solid];
m2_30 -> m2_32  [key=0, style=solid];
m2_32 -> m2_33  [key=0, style=solid];
m2_11 -> m2_12  [key=0, style=solid];
m2_12 -> m2_16  [key=0, style=solid];
m2_12 -> m2_13  [key=0, style=solid];
m2_13 -> m2_15  [key=0, style=solid];
m2_13 -> m2_14  [key=0, style=solid];
m2_13 -> m2_34  [key=2, style=dotted];
m2_14 -> m2_33  [key=0, style=solid];
m2_33 -> m2_8  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [key=0, style=solid];
m2_0 -> m2_2  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m2_4 -> m2_10  [key=2, style=dotted];
m2_4 -> m2_5  [key=0, style=solid];
m2_3 -> m2_9  [key=2, style=dotted];
m2_3 -> m2_4  [key=0, style=solid];
m2_5 -> m2_6  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_7  [key=2, style=dotted];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_8  [key=2, style=dotted];
m2_6 -> m2_0  [color=blue, key=0, style=bold];
m2_48 -> m2_51  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Schema.JsonSchemaNode>", style=dashed];
m2_48 -> m2_49  [key=0, style=solid];
m2_48 -> m2_50  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Schema.JsonSchemaNode>", style=dashed];
m2_51 -> m2_52  [key=0, style=solid];
m2_51 -> m2_8  [key=2, style=dotted];
m2_50 -> m2_51  [key=0, style=solid];
m2_50 -> m2_53  [key=2, style=dotted];
m2_49 -> m2_50  [key=0, style=solid];
m2_52 -> m2_48  [color=blue, key=0, style=bold];
m2_42 -> m2_55  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m2_42 -> m2_54  [key=0, style=solid];
m2_42 -> m2_56  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaNode", style=dashed];
m2_42 -> m2_57  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaNode", style=dashed];
m2_42 -> m2_58  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaNode", style=dashed];
m2_55 -> m2_56  [key=0, style=solid];
m2_55 -> m2_8  [key=2, style=dotted];
m2_55 -> m2_57  [color=darkseagreen4, key=1, label=newItemNode, style=dashed];
m2_55 -> m2_58  [color=darkseagreen4, key=1, label=newItemNode, style=dashed];
m2_54 -> m2_55  [key=0, style=solid];
m2_56 -> m2_57  [key=0, style=solid];
m2_56 -> m2_58  [key=0, style=solid];
m2_57 -> m2_59  [key=0, style=solid];
m2_57 -> m2_60  [key=2, style=dotted];
m2_58 -> m2_59  [key=0, style=solid];
m2_59 -> m2_42  [color=blue, key=0, style=bold];
m2_10 -> m2_68  [color=green, key=1, label="Newtonsoft.Json.Schema.JsonSchemaNode", style=dashed];
m2_10 -> m2_63  [key=0, style=solid];
m2_10 -> m2_64  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaNode", style=dashed];
m2_10 -> m2_66  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaNode", style=dashed];
m2_10 -> m2_67  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaNode", style=dashed];
m2_10 -> m2_72  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaNode", style=dashed];
m2_10 -> m2_77  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaNode", style=dashed];
m2_10 -> m2_80  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaNode", style=dashed];
m2_10 -> m2_82  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaNode", style=dashed];
m2_10 -> m2_83  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaNode", style=dashed];
m2_68 -> m2_69  [color=green, key=0, style=solid];
m2_68 -> m2_72  [color=green, key=0, style=solid];
m2_68 -> m2_71  [color=green, key=1, label=property, style=dashed];
m2_67 -> m2_68  [color=green, key=0, style=solid];
m2_71 -> m2_68  [color=green, key=0, style=solid];
m2_71 -> m2_10  [key=2, style=dotted];
m2_71 -> m2_71  [color=darkseagreen4, key=1, label=property, style=dashed];
m2_69 -> m2_70  [color=green, key=0, style=solid];
m2_69 -> m2_71  [key=0, style=solid];
m2_72 -> m2_73  [key=0, style=solid];
m2_72 -> m2_76  [key=0, style=solid];
m2_72 -> m2_75  [color=darkseagreen4, key=1, label=property, style=dashed];
m2_70 -> m2_71  [color=green, key=0, style=solid];
m2_70 -> m2_9  [color=green, key=2, style=dotted];
m2_66 -> m2_70  [color=green, key=1, label=model, style=dashed];
m2_66 -> m2_67  [key=0, style=solid];
m2_66 -> m2_71  [color=darkseagreen4, key=1, label=model, style=dashed];
m2_66 -> m2_69  [color=darkseagreen4, key=1, label=model, style=dashed];
m2_66 -> m2_87  [key=2, style=dotted];
m2_66 -> m2_73  [color=darkseagreen4, key=1, label=model, style=dashed];
m2_66 -> m2_74  [color=darkseagreen4, key=1, label=model, style=dashed];
m2_66 -> m2_75  [color=darkseagreen4, key=1, label=model, style=dashed];
m2_66 -> m2_78  [color=darkseagreen4, key=1, label=model, style=dashed];
m2_66 -> m2_79  [color=darkseagreen4, key=1, label=model, style=dashed];
m2_66 -> m2_80  [color=darkseagreen4, key=1, label=model, style=dashed];
m2_66 -> m2_83  [color=darkseagreen4, key=1, label=model, style=dashed];
m2_66 -> m2_84  [color=darkseagreen4, key=1, label=model, style=dashed];
m2_80 -> m2_10  [key=2, style=dotted];
m2_80 -> m2_81  [key=0, style=solid];
m2_80 -> m2_89  [key=2, style=dotted];
m2_83 -> m2_10  [key=2, style=dotted];
m2_83 -> m2_84  [key=0, style=solid];
m2_75 -> m2_10  [key=2, style=dotted];
m2_75 -> m2_72  [key=0, style=solid];
m2_75 -> m2_75  [color=darkseagreen4, key=1, label=property, style=dashed];
m2_63 -> m2_64  [key=0, style=solid];
m2_64 -> m2_66  [key=0, style=solid];
m2_64 -> m2_65  [key=0, style=solid];
m2_64 -> m2_86  [key=2, style=dotted];
m2_77 -> m2_78  [key=0, style=solid];
m2_77 -> m2_82  [key=0, style=solid];
m2_82 -> m2_83  [key=0, style=solid];
m2_82 -> m2_84  [key=0, style=solid];
m2_73 -> m2_75  [key=0, style=solid];
m2_73 -> m2_74  [key=0, style=solid];
m2_76 -> m2_80  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_76 -> m2_77  [key=0, style=solid];
m2_76 -> m2_81  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_74 -> m2_9  [key=2, style=dotted];
m2_74 -> m2_75  [key=0, style=solid];
m2_78 -> m2_80  [key=0, style=solid];
m2_78 -> m2_79  [key=0, style=solid];
m2_79 -> m2_80  [key=0, style=solid];
m2_79 -> m2_88  [key=2, style=dotted];
m2_84 -> m2_85  [key=0, style=solid];
m2_81 -> m2_77  [key=0, style=solid];
m2_81 -> m2_81  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_65 -> m2_85  [key=0, style=solid];
m2_85 -> m2_10  [color=blue, key=0, style=bold];
m2_41 -> m2_46  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Schema.JsonSchemaNode>", style=dashed];
m2_41 -> m2_44  [key=0, style=solid];
m2_41 -> m2_45  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Schema.JsonSchema>", style=dashed];
m2_46 -> m2_46  [color=darkseagreen4, key=1, label=property, style=dashed];
m2_46 -> m2_45  [key=0, style=solid];
m2_46 -> m2_48  [key=2, style=dotted];
m2_45 -> m2_46  [key=0, style=solid];
m2_45 -> m2_47  [key=0, style=solid];
m2_44 -> m2_45  [key=0, style=solid];
m2_44 -> m2_47  [key=0, style=solid];
m2_47 -> m2_41  [color=blue, key=0, style=bold];
m2_43 -> m2_61  [key=0, style=solid];
m2_61 -> m2_62  [key=0, style=solid];
m2_61 -> m2_8  [key=2, style=dotted];
m2_62 -> m2_43  [color=blue, key=0, style=bold];
m2_90 -> m2_67  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaModelBuilder", style=dashed];
m2_90 -> m2_71  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaModelBuilder", style=dashed];
m2_90 -> m2_4  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaModelBuilder", style=dashed];
m2_90 -> m2_80  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaModelBuilder", style=dashed];
m2_90 -> m2_83  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaModelBuilder", style=dashed];
m2_90 -> m2_75  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaModelBuilder", style=dashed];
m2_90 -> m2_64  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaModelBuilder", style=dashed];
m2_90 -> m2_1  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaModelBuilder", style=dashed];
m2_90 -> m2_2  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaModelBuilder", style=dashed];
m2_90 -> m2_3  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaModelBuilder", style=dashed];
m2_90 -> m2_17  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaModelBuilder", style=dashed];
m2_90 -> m2_18  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaModelBuilder", style=dashed];
m2_90 -> m2_20  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaModelBuilder", style=dashed];
m2_90 -> m2_21  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaModelBuilder", style=dashed];
m2_90 -> m2_22  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaModelBuilder", style=dashed];
m2_90 -> m2_26  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaModelBuilder", style=dashed];
m2_90 -> m2_29  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaModelBuilder", style=dashed];
m2_90 -> m2_31  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaModelBuilder", style=dashed];
m2_90 -> m2_46  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaModelBuilder", style=dashed];
m2_90 -> m2_51  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaModelBuilder", style=dashed];
m2_90 -> m2_55  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaModelBuilder", style=dashed];
m2_90 -> m2_61  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaModelBuilder", style=dashed];
m4_0 -> m4_1  [key=0, style=solid];
m4_0 -> m4_2  [color=darkseagreen4, key=1, label=T, style=dashed];
m4_1 -> m4_2  [key=0, style=solid];
m4_2 -> m4_3  [key=0, style=solid];
m4_3 -> m4_0  [color=blue, key=0, style=bold];
m4_4 -> m4_1  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.EnumValue<T>", style=dashed];
m4_4 -> m4_2  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.EnumValue<T>", style=dashed];
m6_553 -> m6_773  [key=0, style=solid];
m6_773 -> m6_774  [key=0, style=solid];
m6_773 -> m6_775  [key=0, style=solid];
m6_773 -> m6_627  [key=2, style=dotted];
m6_774 -> m6_776  [key=0, style=solid];
m6_774 -> m6_51  [key=2, style=dotted];
m6_775 -> m6_776  [key=0, style=solid];
m6_775 -> m6_189  [key=2, style=dotted];
m6_776 -> m6_553  [color=blue, key=0, style=bold];
m6_132 -> m6_208  [color=darkorchid, key=3, label="Local variable char writeChar", style=bold];
m6_132 -> m6_289  [color=darkorchid, key=3, label="Local variable char writeChar", style=bold];
m6_145 -> m6_146  [key=0, style=solid];
m6_146 -> m6_147  [key=0, style=solid];
m6_146 -> m6_148  [key=2, style=dotted];
m6_147 -> m6_145  [color=blue, key=0, style=bold];
m6_129 -> m6_130  [key=0, style=solid];
m6_130 -> m6_131  [key=0, style=solid];
m6_130 -> m6_132  [key=2, style=dotted];
m6_131 -> m6_129  [color=blue, key=0, style=bold];
m6_453 -> m6_455  [key=0, style=solid];
m6_453 -> m6_431  [color=darkorchid, key=3, label="Parameter variable char value", style=bold];
m6_453 -> m6_467  [color=darkorchid, key=3, label="Parameter variable char value", style=bold];
m6_455 -> m6_456  [key=0, style=solid];
m6_455 -> m6_457  [key=2, style=dotted];
m6_456 -> m6_453  [color=blue, key=0, style=bold];
m6_15 -> m6_16  [key=0, style=solid];
m6_15 -> m6_17  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_16 -> m6_17  [key=0, style=solid];
m6_17 -> m6_18  [key=0, style=solid];
m6_18 -> m6_15  [color=blue, key=0, style=bold];
m6_559 -> m6_789  [key=0, style=solid];
m6_789 -> m6_790  [key=0, style=solid];
m6_789 -> m6_793  [key=0, style=solid];
m6_789 -> m6_627  [key=2, style=dotted];
m6_790 -> m6_791  [key=0, style=solid];
m6_790 -> m6_792  [key=0, style=solid];
m6_793 -> m6_794  [key=0, style=solid];
m6_793 -> m6_189  [key=2, style=dotted];
m6_791 -> m6_794  [key=0, style=solid];
m6_791 -> m6_795  [key=2, style=dotted];
m6_792 -> m6_794  [key=0, style=solid];
m6_792 -> m6_51  [key=2, style=dotted];
m6_794 -> m6_559  [color=blue, key=0, style=bold];
m6_187 -> m6_705  [key=0, style=solid];
m6_705 -> m6_706  [key=0, style=solid];
m6_706 -> m6_707  [key=0, style=solid];
m6_706 -> m6_708  [key=0, style=solid];
m6_706 -> m6_102  [key=2, style=dotted];
m6_707 -> m6_732  [key=0, style=solid];
m6_707 -> m6_188  [key=2, style=dotted];
m6_707 -> m6_189  [key=2, style=dotted];
m6_708 -> m6_709  [key=0, style=solid];
m6_709 -> m6_710  [key=0, style=solid];
m6_709 -> m6_722  [color=darkseagreen4, key=1, label=initialPosition, style=dashed];
m6_710 -> m6_711  [key=0, style=solid];
m6_710 -> m6_786  [color=darkorchid, key=3, label="Local variable bool commentFinished", style=bold];
m6_722 -> m6_723  [key=0, style=solid];
m6_722 -> m6_295  [key=2, style=dotted];
m6_711 -> m6_712  [key=0, style=solid];
m6_711 -> m6_730  [key=0, style=solid];
m6_712 -> m6_713  [key=0, style=solid];
m6_712 -> m6_718  [key=0, style=solid];
m6_712 -> m6_725  [key=0, style=solid];
m6_712 -> m6_727  [key=0, style=solid];
m6_712 -> m6_729  [key=0, style=solid];
m6_730 -> m6_731  [key=0, style=solid];
m6_730 -> m6_52  [key=2, style=dotted];
m6_730 -> m6_51  [key=2, style=dotted];
m6_713 -> m6_714  [key=0, style=solid];
m6_718 -> m6_719  [key=0, style=solid];
m6_725 -> m6_726  [key=0, style=solid];
m6_727 -> m6_728  [key=0, style=solid];
m6_729 -> m6_711  [key=0, style=solid];
m6_714 -> m6_715  [key=0, style=solid];
m6_714 -> m6_717  [key=0, style=solid];
m6_715 -> m6_716  [key=0, style=solid];
m6_715 -> m6_711  [key=0, style=solid];
m6_715 -> m6_69  [key=2, style=dotted];
m6_717 -> m6_711  [key=0, style=solid];
m6_716 -> m6_732  [key=0, style=solid];
m6_716 -> m6_189  [key=2, style=dotted];
m6_719 -> m6_720  [key=0, style=solid];
m6_720 -> m6_721  [key=0, style=solid];
m6_720 -> m6_711  [key=0, style=solid];
m6_720 -> m6_102  [key=2, style=dotted];
m6_721 -> m6_722  [key=0, style=solid];
m6_721 -> m6_711  [key=0, style=solid];
m6_723 -> m6_724  [key=0, style=solid];
m6_724 -> m6_711  [key=0, style=solid];
m6_726 -> m6_711  [key=0, style=solid];
m6_726 -> m6_293  [key=2, style=dotted];
m6_728 -> m6_711  [key=0, style=solid];
m6_728 -> m6_294  [key=2, style=dotted];
m6_731 -> m6_732  [key=0, style=solid];
m6_731 -> m6_357  [key=2, style=dotted];
m6_732 -> m6_187  [color=blue, key=0, style=bold];
m6_555 -> m6_777  [key=0, style=solid];
m6_777 -> m6_778  [key=0, style=solid];
m6_777 -> m6_779  [key=0, style=solid];
m6_777 -> m6_627  [key=2, style=dotted];
m6_778 -> m6_780  [key=0, style=solid];
m6_778 -> m6_128  [key=2, style=dotted];
m6_779 -> m6_780  [key=0, style=solid];
m6_779 -> m6_189  [key=2, style=dotted];
m6_780 -> m6_555  [color=blue, key=0, style=bold];
m6_127 -> m6_153  [key=0, style=solid];
m6_127 -> m6_183  [color=darkorchid, key=3, label="method methodReturn bool ReadInternal", style=bold];
m6_127 -> m6_184  [color=darkorchid, key=3, label="method methodReturn bool ReadInternal", style=bold];
m6_127 -> m6_774  [color=darkorchid, key=3, label="method methodReturn bool ReadInternal", style=bold];
m6_127 -> m6_786  [color=darkorchid, key=3, label="method methodReturn bool ReadInternal", style=bold];
m6_153 -> m6_154  [key=0, style=solid];
m6_153 -> m6_182  [key=0, style=solid];
m6_154 -> m6_155  [key=0, style=solid];
m6_154 -> m6_162  [key=0, style=solid];
m6_154 -> m6_163  [key=0, style=solid];
m6_154 -> m6_166  [key=0, style=solid];
m6_154 -> m6_169  [key=0, style=solid];
m6_154 -> m6_179  [key=0, style=solid];
m6_154 -> m6_180  [key=0, style=solid];
m6_154 -> m6_181  [key=0, style=solid];
m6_155 -> m6_156  [key=0, style=solid];
m6_162 -> m6_153  [key=0, style=solid];
m6_163 -> m6_164  [key=0, style=solid];
m6_166 -> m6_167  [key=0, style=solid];
m6_169 -> m6_170  [key=0, style=solid];
m6_179 -> m6_153  [key=0, style=solid];
m6_180 -> m6_153  [key=0, style=solid];
m6_181 -> m6_182  [key=0, style=solid];
m6_181 -> m6_188  [key=2, style=dotted];
m6_181 -> m6_189  [key=2, style=dotted];
m6_156 -> m6_157  [key=0, style=solid];
m6_157 -> m6_158  [key=0, style=solid];
m6_158 -> m6_159  [key=0, style=solid];
m6_159 -> m6_160  [key=0, style=solid];
m6_160 -> m6_161  [key=0, style=solid];
m6_161 -> m6_182  [key=0, style=solid];
m6_161 -> m6_183  [key=2, style=dotted];
m6_164 -> m6_165  [key=0, style=solid];
m6_165 -> m6_182  [key=0, style=solid];
m6_165 -> m6_184  [key=2, style=dotted];
m6_167 -> m6_168  [key=0, style=solid];
m6_167 -> m6_153  [key=0, style=solid];
m6_167 -> m6_185  [key=2, style=dotted];
m6_168 -> m6_182  [key=0, style=solid];
m6_170 -> m6_171  [key=0, style=solid];
m6_170 -> m6_178  [key=0, style=solid];
m6_170 -> m6_102  [key=2, style=dotted];
m6_171 -> m6_172  [key=0, style=solid];
m6_171 -> m6_186  [key=2, style=dotted];
m6_178 -> m6_182  [key=0, style=solid];
m6_172 -> m6_173  [key=0, style=solid];
m6_172 -> m6_174  [key=0, style=solid];
m6_173 -> m6_182  [key=0, style=solid];
m6_174 -> m6_175  [key=0, style=solid];
m6_174 -> m6_177  [key=0, style=solid];
m6_175 -> m6_176  [key=0, style=solid];
m6_175 -> m6_187  [key=2, style=dotted];
m6_177 -> m6_182  [key=0, style=solid];
m6_177 -> m6_188  [key=2, style=dotted];
m6_177 -> m6_189  [key=2, style=dotted];
m6_176 -> m6_182  [key=0, style=solid];
m6_182 -> m6_127  [color=blue, key=0, style=bold];
m6_107 -> m6_108  [key=0, style=solid];
m6_107 -> m6_110  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_107 -> m6_112  [color=darkseagreen4, key=1, label=bool, style=dashed];
m6_107 -> m6_102  [color=darkorchid, key=3, label="Parameter variable bool append", style=bold];
m6_107 -> m6_786  [color=darkorchid, key=3, label="method methodReturn bool ReadChars", style=bold];
m6_107 -> m6_774  [color=darkorchid, key=3, label="method methodReturn bool ReadChars", style=bold];
m6_108 -> m6_109  [key=0, style=solid];
m6_108 -> m6_110  [key=0, style=solid];
m6_110 -> m6_111  [key=0, style=solid];
m6_110 -> m6_112  [color=darkseagreen4, key=1, label=charsRequired, style=dashed];
m6_110 -> m6_115  [color=darkseagreen4, key=1, label=charsRequired, style=dashed];
m6_110 -> m6_116  [color=darkseagreen4, key=1, label=charsRequired, style=dashed];
m6_112 -> m6_113  [key=0, style=solid];
m6_112 -> m6_72  [key=2, style=dotted];
m6_112 -> m6_114  [color=darkseagreen4, key=1, label=charsRead, style=dashed];
m6_109 -> m6_119  [key=0, style=solid];
m6_111 -> m6_112  [key=0, style=solid];
m6_111 -> m6_114  [color=darkseagreen4, key=1, label=totalCharsRead, style=dashed];
m6_111 -> m6_79  [color=darkorchid, key=3, label="Local variable int totalCharsRead", style=bold];
m6_115 -> m6_111  [key=0, style=solid];
m6_115 -> m6_116  [key=0, style=solid];
m6_116 -> m6_117  [key=0, style=solid];
m6_116 -> m6_118  [key=0, style=solid];
m6_114 -> m6_115  [key=0, style=solid];
m6_114 -> m6_114  [color=darkseagreen4, key=1, label=totalCharsRead, style=dashed];
m6_114 -> m6_116  [color=darkseagreen4, key=1, label=totalCharsRead, style=dashed];
m6_113 -> m6_114  [key=0, style=solid];
m6_113 -> m6_116  [key=0, style=solid];
m6_117 -> m6_119  [key=0, style=solid];
m6_118 -> m6_119  [key=0, style=solid];
m6_119 -> m6_107  [color=blue, key=0, style=bold];
m6_558 -> m6_796  [key=0, style=solid];
m6_796 -> m6_797  [key=0, style=solid];
m6_796 -> m6_800  [key=0, style=solid];
m6_796 -> m6_627  [key=2, style=dotted];
m6_797 -> m6_798  [key=0, style=solid];
m6_797 -> m6_799  [key=0, style=solid];
m6_800 -> m6_801  [key=0, style=solid];
m6_800 -> m6_189  [key=2, style=dotted];
m6_798 -> m6_801  [key=0, style=solid];
m6_798 -> m6_795  [key=2, style=dotted];
m6_799 -> m6_801  [key=0, style=solid];
m6_799 -> m6_51  [key=2, style=dotted];
m6_801 -> m6_558  [color=blue, key=0, style=bold];
m6_808 -> m6_809  [key=0, style=solid];
m6_809 -> m6_810  [key=0, style=solid];
m6_809 -> m6_815  [key=2, style=dotted];
m6_810 -> m6_811  [key=0, style=solid];
m6_810 -> m6_812  [key=0, style=solid];
m6_811 -> m6_812  [key=0, style=solid];
m6_811 -> m6_816  [key=2, style=dotted];
m6_812 -> m6_813  [key=0, style=solid];
m6_812 -> m6_814  [key=0, style=solid];
m6_813 -> m6_814  [key=0, style=solid];
m6_813 -> m6_817  [key=2, style=dotted];
m6_814 -> m6_808  [color=blue, key=0, style=bold];
m6_149 -> m6_150  [key=0, style=solid];
m6_150 -> m6_151  [key=0, style=solid];
m6_150 -> m6_152  [key=2, style=dotted];
m6_151 -> m6_149  [color=blue, key=0, style=bold];
m6_184 -> m6_404  [key=0, style=solid];
m6_184 -> m6_786  [color=darkorchid, key=3, label="method methodReturn bool ParseObject", style=bold];
m6_184 -> m6_774  [color=darkorchid, key=3, label="method methodReturn bool ParseObject", style=bold];
m6_184 -> m6_430  [color=darkorchid, key=3, label="method methodReturn bool ParseObject", style=bold];
m6_404 -> m6_405  [key=0, style=solid];
m6_404 -> m6_429  [key=0, style=solid];
m6_405 -> m6_406  [key=0, style=solid];
m6_405 -> m6_426  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m6_406 -> m6_407  [key=0, style=solid];
m6_406 -> m6_412  [key=0, style=solid];
m6_406 -> m6_416  [key=0, style=solid];
m6_406 -> m6_419  [key=0, style=solid];
m6_406 -> m6_421  [key=0, style=solid];
m6_406 -> m6_423  [key=0, style=solid];
m6_406 -> m6_426  [key=0, style=solid];
m6_426 -> m6_427  [key=0, style=solid];
m6_426 -> m6_428  [key=0, style=solid];
m6_426 -> m6_403  [key=2, style=dotted];
m6_407 -> m6_408  [key=0, style=solid];
m6_412 -> m6_413  [key=0, style=solid];
m6_416 -> m6_417  [key=0, style=solid];
m6_419 -> m6_420  [key=0, style=solid];
m6_421 -> m6_422  [key=0, style=solid];
m6_423 -> m6_424  [key=0, style=solid];
m6_408 -> m6_409  [key=0, style=solid];
m6_408 -> m6_411  [key=0, style=solid];
m6_409 -> m6_410  [key=0, style=solid];
m6_409 -> m6_404  [key=0, style=solid];
m6_409 -> m6_69  [key=2, style=dotted];
m6_411 -> m6_404  [key=0, style=solid];
m6_410 -> m6_429  [key=0, style=solid];
m6_413 -> m6_414  [key=0, style=solid];
m6_413 -> m6_128  [key=2, style=dotted];
m6_414 -> m6_415  [key=0, style=solid];
m6_415 -> m6_429  [key=0, style=solid];
m6_417 -> m6_418  [key=0, style=solid];
m6_417 -> m6_187  [key=2, style=dotted];
m6_418 -> m6_429  [key=0, style=solid];
m6_420 -> m6_404  [key=0, style=solid];
m6_420 -> m6_293  [key=2, style=dotted];
m6_422 -> m6_404  [key=0, style=solid];
m6_422 -> m6_294  [key=2, style=dotted];
m6_424 -> m6_425  [key=0, style=solid];
m6_425 -> m6_404  [key=0, style=solid];
m6_427 -> m6_404  [key=0, style=solid];
m6_428 -> m6_429  [key=0, style=solid];
m6_428 -> m6_430  [key=2, style=dotted];
m6_429 -> m6_184  [color=blue, key=0, style=bold];
m6_0 -> m6_1  [key=0, style=solid];
m6_0 -> m6_3  [color=darkseagreen4, key=1, label="System.IO.TextReader", style=dashed];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_3  [key=0, style=solid];
m6_3 -> m6_4  [key=0, style=solid];
m6_2 -> m6_6  [key=0, style=solid];
m6_2 -> m6_7  [key=2, style=dotted];
m6_4 -> m6_5  [key=0, style=solid];
m6_5 -> m6_6  [key=0, style=solid];
m6_6 -> m6_0  [color=blue, key=0, style=bold];
m6_49 -> m6_190  [key=0, style=solid];
m6_49 -> m6_201  [color=darkseagreen4, key=1, label=char, style=dashed];
m6_49 -> m6_206  [color=darkseagreen4, key=1, label=char, style=dashed];
m6_49 -> m6_276  [color=darkseagreen4, key=1, label=char, style=dashed];
m6_49 -> m6_19  [color=darkorchid, key=3, label="Parameter variable char quote", style=bold];
m6_49 -> m6_432  [color=darkorchid, key=3, label="Parameter variable char quote", style=bold];
m6_190 -> m6_191  [key=0, style=solid];
m6_190 -> m6_195  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m6_201 -> m6_288  [key=0, style=solid];
m6_201 -> m6_188  [key=2, style=dotted];
m6_201 -> m6_189  [key=2, style=dotted];
m6_206 -> m6_288  [key=0, style=solid];
m6_206 -> m6_188  [key=2, style=dotted];
m6_206 -> m6_189  [key=2, style=dotted];
m6_276 -> m6_277  [key=0, style=solid];
m6_276 -> m6_194  [key=0, style=solid];
m6_191 -> m6_192  [key=0, style=solid];
m6_191 -> m6_278  [color=darkseagreen4, key=1, label=initialPosition, style=dashed];
m6_191 -> m6_279  [color=darkseagreen4, key=1, label=initialPosition, style=dashed];
m6_195 -> m6_196  [key=0, style=solid];
m6_195 -> m6_202  [key=0, style=solid];
m6_195 -> m6_266  [key=0, style=solid];
m6_195 -> m6_270  [key=0, style=solid];
m6_195 -> m6_274  [key=0, style=solid];
m6_195 -> m6_195  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m6_195 -> m6_197  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m6_195 -> m6_198  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m6_195 -> m6_203  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m6_195 -> m6_205  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m6_195 -> m6_207  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m6_195 -> m6_208  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m6_195 -> m6_212  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m6_192 -> m6_193  [key=0, style=solid];
m6_192 -> m6_254  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m6_192 -> m6_264  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m6_192 -> m6_190  [color=darkorchid, key=3, label="Local variable int lastWritePosition", style=bold];
m6_278 -> m6_279  [key=0, style=solid];
m6_278 -> m6_280  [key=0, style=solid];
m6_279 -> m6_285  [key=0, style=solid];
m6_279 -> m6_295  [key=2, style=dotted];
m6_193 -> m6_194  [key=0, style=solid];
m6_193 -> m6_252  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m6_193 -> m6_254  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m6_193 -> m6_262  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m6_193 -> m6_264  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m6_193 -> m6_280  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m6_193 -> m6_283  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m6_193 -> m6_284  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m6_193 -> m6_193  [color=darkorchid, key=3, label="Local variable Newtonsoft.Json.Utilities.StringBuffer buffer", style=bold];
m6_193 -> m6_8  [color=darkorchid, key=3, label="Local variable Newtonsoft.Json.Utilities.StringBuffer buffer", style=bold];
m6_254 -> m6_255  [key=0, style=solid];
m6_254 -> m6_292  [key=2, style=dotted];
m6_264 -> m6_265  [key=0, style=solid];
m6_264 -> m6_292  [key=2, style=dotted];
m6_194 -> m6_195  [key=0, style=solid];
m6_194 -> m6_288  [key=0, style=solid];
m6_252 -> m6_253  [key=0, style=solid];
m6_252 -> m6_254  [key=0, style=solid];
m6_262 -> m6_263  [key=0, style=solid];
m6_262 -> m6_264  [key=0, style=solid];
m6_280 -> m6_281  [key=0, style=solid];
m6_280 -> m6_282  [key=0, style=solid];
m6_283 -> m6_284  [key=0, style=solid];
m6_283 -> m6_296  [key=2, style=dotted];
m6_284 -> m6_285  [key=0, style=solid];
m6_284 -> m6_295  [key=2, style=dotted];
m6_284 -> m6_297  [key=2, style=dotted];
m6_196 -> m6_197  [key=0, style=solid];
m6_202 -> m6_203  [key=0, style=solid];
m6_266 -> m6_267  [key=0, style=solid];
m6_270 -> m6_271  [key=0, style=solid];
m6_274 -> m6_275  [key=0, style=solid];
m6_197 -> m6_198  [key=0, style=solid];
m6_197 -> m6_194  [key=0, style=solid];
m6_198 -> m6_199  [key=0, style=solid];
m6_198 -> m6_198  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m6_198 -> m6_200  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m6_198 -> m6_203  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m6_198 -> m6_205  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m6_198 -> m6_207  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m6_198 -> m6_208  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m6_198 -> m6_212  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m6_203 -> m6_204  [key=0, style=solid];
m6_205 -> m6_206  [key=0, style=solid];
m6_207 -> m6_208  [key=0, style=solid];
m6_207 -> m6_254  [color=darkseagreen4, key=1, label=escapeStartPos, style=dashed];
m6_207 -> m6_264  [color=darkseagreen4, key=1, label=escapeStartPos, style=dashed];
m6_208 -> m6_209  [key=0, style=solid];
m6_208 -> m6_210  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m6_208 -> m6_232  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m6_208 -> m6_261  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m6_212 -> m6_213  [key=0, style=solid];
m6_212 -> m6_212  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m6_212 -> m6_215  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m6_199 -> m6_200  [key=0, style=solid];
m6_199 -> m6_194  [key=0, style=solid];
m6_199 -> m6_69  [key=2, style=dotted];
m6_200 -> m6_201  [key=0, style=solid];
m6_204 -> m6_205  [key=0, style=solid];
m6_204 -> m6_207  [key=0, style=solid];
m6_204 -> m6_102  [key=2, style=dotted];
m6_209 -> m6_210  [key=0, style=solid];
m6_210 -> m6_211  [key=0, style=solid];
m6_210 -> m6_214  [key=0, style=solid];
m6_210 -> m6_217  [key=0, style=solid];
m6_210 -> m6_220  [key=0, style=solid];
m6_210 -> m6_223  [key=0, style=solid];
m6_210 -> m6_226  [key=0, style=solid];
m6_210 -> m6_229  [key=0, style=solid];
m6_210 -> m6_234  [key=0, style=solid];
m6_210 -> m6_259  [key=0, style=solid];
m6_232 -> m6_233  [key=0, style=solid];
m6_261 -> m6_288  [key=0, style=solid];
m6_261 -> m6_188  [key=2, style=dotted];
m6_261 -> m6_189  [key=2, style=dotted];
m6_211 -> m6_212  [key=0, style=solid];
m6_214 -> m6_215  [key=0, style=solid];
m6_217 -> m6_218  [key=0, style=solid];
m6_220 -> m6_221  [key=0, style=solid];
m6_223 -> m6_224  [key=0, style=solid];
m6_226 -> m6_227  [key=0, style=solid];
m6_229 -> m6_230  [key=0, style=solid];
m6_234 -> m6_235  [key=0, style=solid];
m6_259 -> m6_260  [key=0, style=solid];
m6_259 -> m6_259  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m6_259 -> m6_265  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m6_259 -> m6_267  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m6_213 -> m6_262  [key=0, style=solid];
m6_215 -> m6_216  [key=0, style=solid];
m6_215 -> m6_215  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m6_215 -> m6_218  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m6_216 -> m6_262  [key=0, style=solid];
m6_218 -> m6_219  [key=0, style=solid];
m6_218 -> m6_218  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m6_218 -> m6_221  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m6_219 -> m6_262  [key=0, style=solid];
m6_221 -> m6_222  [key=0, style=solid];
m6_221 -> m6_221  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m6_221 -> m6_224  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m6_222 -> m6_262  [key=0, style=solid];
m6_224 -> m6_225  [key=0, style=solid];
m6_224 -> m6_224  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m6_224 -> m6_227  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m6_225 -> m6_262  [key=0, style=solid];
m6_227 -> m6_228  [key=0, style=solid];
m6_227 -> m6_227  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m6_227 -> m6_233  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m6_228 -> m6_262  [key=0, style=solid];
m6_233 -> m6_262  [key=0, style=solid];
m6_233 -> m6_233  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m6_233 -> m6_235  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m6_230 -> m6_231  [key=0, style=solid];
m6_231 -> m6_232  [key=0, style=solid];
m6_235 -> m6_236  [key=0, style=solid];
m6_235 -> m6_235  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m6_236 -> m6_237  [key=0, style=solid];
m6_237 -> m6_238  [key=0, style=solid];
m6_237 -> m6_289  [key=2, style=dotted];
m6_237 -> m6_240  [color=darkseagreen4, key=1, label=writeChar, style=dashed];
m6_237 -> m6_244  [color=darkseagreen4, key=1, label=writeChar, style=dashed];
m6_237 -> m6_264  [color=darkseagreen4, key=1, label=writeChar, style=dashed];
m6_238 -> m6_239  [key=0, style=solid];
m6_238 -> m6_240  [key=0, style=solid];
m6_238 -> m6_290  [key=2, style=dotted];
m6_240 -> m6_241  [key=0, style=solid];
m6_240 -> m6_258  [key=0, style=solid];
m6_240 -> m6_291  [key=2, style=dotted];
m6_244 -> m6_245  [key=0, style=solid];
m6_244 -> m6_254  [color=darkseagreen4, key=1, label=highSurrogate, style=dashed];
m6_244 -> m6_132  [color=darkorchid, key=3, label="Local variable char highSurrogate", style=bold];
m6_239 -> m6_258  [key=0, style=solid];
m6_239 -> m6_264  [color=darkseagreen4, key=1, label=writeChar, style=dashed];
m6_241 -> m6_242  [key=0, style=solid];
m6_258 -> m6_262  [key=0, style=solid];
m6_258 -> m6_259  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m6_242 -> m6_243  [key=0, style=solid];
m6_242 -> m6_257  [color=darkseagreen4, key=1, label=anotherHighSurrogate, style=dashed];
m6_243 -> m6_244  [key=0, style=solid];
m6_243 -> m6_256  [key=0, style=solid];
m6_243 -> m6_102  [key=2, style=dotted];
m6_257 -> m6_241  [key=0, style=solid];
m6_257 -> m6_258  [key=0, style=solid];
m6_256 -> m6_257  [key=0, style=solid];
m6_256 -> m6_264  [color=darkseagreen4, key=1, label=writeChar, style=dashed];
m6_245 -> m6_246  [key=0, style=solid];
m6_246 -> m6_247  [key=0, style=solid];
m6_246 -> m6_289  [key=2, style=dotted];
m6_246 -> m6_248  [color=darkseagreen4, key=1, label=writeChar, style=dashed];
m6_246 -> m6_264  [color=darkseagreen4, key=1, label=writeChar, style=dashed];
m6_247 -> m6_248  [key=0, style=solid];
m6_247 -> m6_252  [key=0, style=solid];
m6_247 -> m6_290  [key=2, style=dotted];
m6_248 -> m6_249  [key=0, style=solid];
m6_248 -> m6_251  [key=0, style=solid];
m6_248 -> m6_291  [key=2, style=dotted];
m6_249 -> m6_250  [key=0, style=solid];
m6_249 -> m6_254  [color=darkseagreen4, key=1, label=highSurrogate, style=dashed];
m6_251 -> m6_252  [key=0, style=solid];
m6_251 -> m6_254  [color=darkseagreen4, key=1, label=highSurrogate, style=dashed];
m6_250 -> m6_252  [key=0, style=solid];
m6_250 -> m6_257  [color=darkseagreen4, key=1, label=anotherHighSurrogate, style=dashed];
m6_253 -> m6_254  [key=0, style=solid];
m6_253 -> m6_8  [key=2, style=dotted];
m6_253 -> m6_262  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m6_253 -> m6_264  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m6_253 -> m6_280  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m6_253 -> m6_283  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m6_253 -> m6_284  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m6_255 -> m6_257  [key=0, style=solid];
m6_255 -> m6_264  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m6_260 -> m6_261  [key=0, style=solid];
m6_265 -> m6_194  [key=0, style=solid];
m6_265 -> m6_278  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m6_265 -> m6_282  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m6_265 -> m6_283  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m6_267 -> m6_268  [key=0, style=solid];
m6_263 -> m6_264  [key=0, style=solid];
m6_263 -> m6_8  [key=2, style=dotted];
m6_263 -> m6_280  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m6_263 -> m6_283  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m6_263 -> m6_284  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m6_268 -> m6_269  [key=0, style=solid];
m6_268 -> m6_293  [key=2, style=dotted];
m6_269 -> m6_194  [key=0, style=solid];
m6_269 -> m6_271  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m6_271 -> m6_272  [key=0, style=solid];
m6_272 -> m6_273  [key=0, style=solid];
m6_272 -> m6_294  [key=2, style=dotted];
m6_273 -> m6_194  [key=0, style=solid];
m6_273 -> m6_276  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m6_273 -> m6_277  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m6_275 -> m6_276  [key=0, style=solid];
m6_277 -> m6_278  [key=0, style=solid];
m6_277 -> m6_277  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m6_277 -> m6_279  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m6_277 -> m6_282  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m6_277 -> m6_283  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m6_277 -> m6_285  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m6_282 -> m6_283  [key=0, style=solid];
m6_282 -> m6_284  [key=0, style=solid];
m6_285 -> m6_286  [key=0, style=solid];
m6_285 -> m6_285  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m6_281 -> m6_282  [key=0, style=solid];
m6_281 -> m6_8  [key=2, style=dotted];
m6_281 -> m6_283  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m6_281 -> m6_284  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m6_286 -> m6_287  [key=0, style=solid];
m6_287 -> m6_288  [key=0, style=solid];
m6_288 -> m6_49  [color=blue, key=0, style=bold];
m6_133 -> m6_134  [key=0, style=solid];
m6_134 -> m6_135  [key=0, style=solid];
m6_134 -> m6_136  [key=2, style=dotted];
m6_135 -> m6_133  [color=blue, key=0, style=bold];
m6_137 -> m6_138  [key=0, style=solid];
m6_138 -> m6_139  [key=0, style=solid];
m6_138 -> m6_140  [key=2, style=dotted];
m6_139 -> m6_137  [color=blue, key=0, style=bold];
m6_185 -> m6_363  [key=0, style=solid];
m6_185 -> m6_786  [color=darkorchid, key=3, label="method methodReturn bool ParsePostValue", style=bold];
m6_185 -> m6_774  [color=darkorchid, key=3, label="method methodReturn bool ParsePostValue", style=bold];
m6_363 -> m6_364  [key=0, style=solid];
m6_363 -> m6_401  [key=0, style=solid];
m6_364 -> m6_365  [key=0, style=solid];
m6_364 -> m6_398  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m6_364 -> m6_400  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m6_365 -> m6_366  [key=0, style=solid];
m6_365 -> m6_372  [key=0, style=solid];
m6_365 -> m6_376  [key=0, style=solid];
m6_365 -> m6_380  [key=0, style=solid];
m6_365 -> m6_384  [key=0, style=solid];
m6_365 -> m6_387  [key=0, style=solid];
m6_365 -> m6_391  [key=0, style=solid];
m6_365 -> m6_394  [key=0, style=solid];
m6_365 -> m6_396  [key=0, style=solid];
m6_365 -> m6_398  [key=0, style=solid];
m6_398 -> m6_399  [key=0, style=solid];
m6_398 -> m6_400  [key=0, style=solid];
m6_398 -> m6_403  [key=2, style=dotted];
m6_400 -> m6_401  [key=0, style=solid];
m6_400 -> m6_188  [key=2, style=dotted];
m6_400 -> m6_189  [key=2, style=dotted];
m6_366 -> m6_367  [key=0, style=solid];
m6_372 -> m6_373  [key=0, style=solid];
m6_376 -> m6_377  [key=0, style=solid];
m6_380 -> m6_381  [key=0, style=solid];
m6_384 -> m6_385  [key=0, style=solid];
m6_387 -> m6_388  [key=0, style=solid];
m6_391 -> m6_392  [key=0, style=solid];
m6_394 -> m6_395  [key=0, style=solid];
m6_396 -> m6_397  [key=0, style=solid];
m6_367 -> m6_368  [key=0, style=solid];
m6_367 -> m6_371  [key=0, style=solid];
m6_368 -> m6_369  [key=0, style=solid];
m6_368 -> m6_363  [key=0, style=solid];
m6_368 -> m6_69  [key=2, style=dotted];
m6_371 -> m6_363  [key=0, style=solid];
m6_369 -> m6_370  [key=0, style=solid];
m6_370 -> m6_401  [key=0, style=solid];
m6_373 -> m6_374  [key=0, style=solid];
m6_374 -> m6_375  [key=0, style=solid];
m6_374 -> m6_128  [key=2, style=dotted];
m6_375 -> m6_401  [key=0, style=solid];
m6_377 -> m6_378  [key=0, style=solid];
m6_378 -> m6_379  [key=0, style=solid];
m6_378 -> m6_128  [key=2, style=dotted];
m6_379 -> m6_401  [key=0, style=solid];
m6_381 -> m6_382  [key=0, style=solid];
m6_382 -> m6_383  [key=0, style=solid];
m6_382 -> m6_128  [key=2, style=dotted];
m6_383 -> m6_401  [key=0, style=solid];
m6_385 -> m6_386  [key=0, style=solid];
m6_385 -> m6_187  [key=2, style=dotted];
m6_386 -> m6_401  [key=0, style=solid];
m6_388 -> m6_389  [key=0, style=solid];
m6_389 -> m6_390  [key=0, style=solid];
m6_389 -> m6_402  [key=2, style=dotted];
m6_390 -> m6_401  [key=0, style=solid];
m6_392 -> m6_393  [key=0, style=solid];
m6_393 -> m6_363  [key=0, style=solid];
m6_395 -> m6_363  [key=0, style=solid];
m6_395 -> m6_293  [key=2, style=dotted];
m6_397 -> m6_363  [key=0, style=solid];
m6_397 -> m6_294  [key=2, style=dotted];
m6_399 -> m6_363  [key=0, style=solid];
m6_401 -> m6_185  [color=blue, key=0, style=bold];
m6_54 -> m6_55  [key=0, style=solid];
m6_54 -> m6_56  [color=darkseagreen4, key=1, label="char[]", style=dashed];
m6_54 -> m6_79  [color=darkorchid, key=3, label="Parameter variable int dstOffset", style=bold];
m6_54 -> m6_78  [color=darkorchid, key=3, label="Parameter variable char[] dst", style=bold];
m6_54 -> m6_83  [color=darkorchid, key=3, label="Parameter variable char[] dst", style=bold];
m6_54 -> m6_61  [color=darkorchid, key=3, label="Parameter variable int count", style=bold];
m6_54 -> m6_81  [color=darkorchid, key=3, label="Parameter variable int count", style=bold];
m6_55 -> m6_56  [key=0, style=solid];
m6_55 -> m6_55  [color=darkorchid, key=3, label="Local variable int charByteCount", style=bold];
m6_56 -> m6_57  [key=0, style=solid];
m6_56 -> m6_58  [key=2, style=dotted];
m6_57 -> m6_54  [color=blue, key=0, style=bold];
m6_627 -> m6_744  [key=0, style=solid];
m6_627 -> m6_591  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
m6_627 -> m6_786  [color=darkorchid, key=3, label="method methodReturn bool MatchValueWithTrailingSeperator", style=bold];
m6_627 -> m6_774  [color=darkorchid, key=3, label="method methodReturn bool MatchValueWithTrailingSeperator", style=bold];
m6_744 -> m6_745  [key=0, style=solid];
m6_744 -> m6_733  [key=2, style=dotted];
m6_745 -> m6_746  [key=0, style=solid];
m6_745 -> m6_747  [key=0, style=solid];
m6_746 -> m6_750  [key=0, style=solid];
m6_747 -> m6_748  [key=0, style=solid];
m6_747 -> m6_749  [key=0, style=solid];
m6_747 -> m6_102  [key=2, style=dotted];
m6_748 -> m6_750  [key=0, style=solid];
m6_749 -> m6_750  [key=0, style=solid];
m6_749 -> m6_751  [key=2, style=dotted];
m6_750 -> m6_627  [color=blue, key=0, style=bold];
m6_19 -> m6_20  [key=0, style=solid];
m6_19 -> m6_22  [color=darkseagreen4, key=1, label=char, style=dashed];
m6_19 -> m6_32  [color=darkseagreen4, key=1, label=char, style=dashed];
m6_19 -> m6_46  [color=darkseagreen4, key=1, label=char, style=dashed];
m6_19 -> m6_476  [color=darkorchid, key=3, label="Parameter variable char quote", style=bold];
m6_20 -> m6_21  [key=0, style=solid];
m6_22 -> m6_23  [key=0, style=solid];
m6_22 -> m6_49  [key=2, style=dotted];
m6_32 -> m6_47  [key=0, style=solid];
m6_46 -> m6_47  [key=0, style=solid];
m6_21 -> m6_22  [key=0, style=solid];
m6_21 -> m6_48  [key=2, style=dotted];
m6_23 -> m6_24  [key=0, style=solid];
m6_23 -> m6_29  [key=0, style=solid];
m6_24 -> m6_25  [key=0, style=solid];
m6_29 -> m6_30  [key=0, style=solid];
m6_29 -> m6_33  [key=0, style=solid];
m6_25 -> m6_26  [key=0, style=solid];
m6_25 -> m6_27  [key=0, style=solid];
m6_26 -> m6_28  [key=0, style=solid];
m6_27 -> m6_28  [key=0, style=solid];
m6_27 -> m6_50  [key=2, style=dotted];
m6_28 -> m6_47  [key=0, style=solid];
m6_28 -> m6_51  [key=2, style=dotted];
m6_30 -> m6_31  [key=0, style=solid];
m6_30 -> m6_52  [key=2, style=dotted];
m6_33 -> m6_34  [key=0, style=solid];
m6_33 -> m6_52  [key=2, style=dotted];
m6_33 -> m6_42  [color=darkseagreen4, key=1, label=text, style=dashed];
m6_33 -> m6_45  [color=darkseagreen4, key=1, label=text, style=dashed];
m6_31 -> m6_32  [key=0, style=solid];
m6_31 -> m6_51  [key=2, style=dotted];
m6_34 -> m6_35  [key=0, style=solid];
m6_34 -> m6_45  [key=0, style=solid];
m6_42 -> m6_43  [key=0, style=solid];
m6_42 -> m6_45  [key=0, style=solid];
m6_42 -> m6_53  [key=2, style=dotted];
m6_45 -> m6_46  [key=0, style=solid];
m6_45 -> m6_51  [key=2, style=dotted];
m6_35 -> m6_36  [key=0, style=solid];
m6_36 -> m6_37  [key=0, style=solid];
m6_36 -> m6_38  [key=0, style=solid];
m6_37 -> m6_41  [key=0, style=solid];
m6_37 -> m6_42  [color=darkseagreen4, key=1, label=dateParseHandling, style=dashed];
m6_38 -> m6_39  [key=0, style=solid];
m6_38 -> m6_40  [key=0, style=solid];
m6_39 -> m6_41  [key=0, style=solid];
m6_39 -> m6_42  [color=darkseagreen4, key=1, label=dateParseHandling, style=dashed];
m6_40 -> m6_41  [key=0, style=solid];
m6_40 -> m6_42  [color=darkseagreen4, key=1, label=dateParseHandling, style=dashed];
m6_41 -> m6_42  [key=0, style=solid];
m6_43 -> m6_44  [key=0, style=solid];
m6_43 -> m6_51  [key=2, style=dotted];
m6_44 -> m6_47  [key=0, style=solid];
m6_47 -> m6_19  [color=blue, key=0, style=bold];
m6_357 -> m6_358  [key=0, style=solid];
m6_358 -> m6_359  [key=0, style=solid];
m6_358 -> m6_360  [key=0, style=solid];
m6_359 -> m6_360  [key=0, style=solid];
m6_360 -> m6_361  [key=0, style=solid];
m6_360 -> m6_362  [key=2, style=dotted];
m6_361 -> m6_357  [color=blue, key=0, style=bold];
m6_293 -> m6_566  [key=0, style=solid];
m6_293 -> m6_567  [color=darkseagreen4, key=1, label=bool, style=dashed];
m6_293 -> m6_774  [color=darkorchid, key=3, label="Parameter variable bool append", style=bold];
m6_293 -> m6_786  [color=darkorchid, key=3, label="Parameter variable bool append", style=bold];
m6_566 -> m6_567  [key=0, style=solid];
m6_567 -> m6_568  [key=0, style=solid];
m6_567 -> m6_569  [key=0, style=solid];
m6_567 -> m6_102  [key=2, style=dotted];
m6_568 -> m6_569  [key=0, style=solid];
m6_569 -> m6_570  [key=0, style=solid];
m6_569 -> m6_15  [key=2, style=dotted];
m6_570 -> m6_293  [color=blue, key=0, style=bold];
m6_186 -> m6_571  [key=0, style=solid];
m6_186 -> m6_589  [color=darkseagreen4, key=1, label=bool, style=dashed];
m6_186 -> m6_786  [color=darkorchid, key=3, label="Parameter variable bool oneOrMore", style=bold];
m6_571 -> m6_572  [key=0, style=solid];
m6_571 -> m6_573  [color=darkseagreen4, key=1, label=finished, style=dashed];
m6_571 -> m6_786  [color=darkorchid, key=3, label="Local variable bool finished", style=bold];
m6_589 -> m6_590  [key=0, style=solid];
m6_572 -> m6_573  [key=0, style=solid];
m6_572 -> m6_589  [color=darkseagreen4, key=1, label=ateWhitespace, style=dashed];
m6_572 -> m6_786  [color=darkorchid, key=3, label="Local variable bool ateWhitespace", style=bold];
m6_573 -> m6_574  [key=0, style=solid];
m6_573 -> m6_589  [key=0, style=solid];
m6_574 -> m6_575  [key=0, style=solid];
m6_574 -> m6_585  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m6_575 -> m6_576  [key=0, style=solid];
m6_575 -> m6_581  [key=0, style=solid];
m6_575 -> m6_583  [key=0, style=solid];
m6_575 -> m6_585  [key=0, style=solid];
m6_585 -> m6_586  [key=0, style=solid];
m6_585 -> m6_588  [key=0, style=solid];
m6_585 -> m6_403  [key=2, style=dotted];
m6_576 -> m6_577  [key=0, style=solid];
m6_581 -> m6_582  [key=0, style=solid];
m6_583 -> m6_584  [key=0, style=solid];
m6_577 -> m6_578  [key=0, style=solid];
m6_577 -> m6_580  [key=0, style=solid];
m6_578 -> m6_579  [key=0, style=solid];
m6_578 -> m6_573  [key=0, style=solid];
m6_578 -> m6_69  [key=2, style=dotted];
m6_580 -> m6_573  [key=0, style=solid];
m6_579 -> m6_573  [key=0, style=solid];
m6_582 -> m6_573  [key=0, style=solid];
m6_582 -> m6_293  [key=2, style=dotted];
m6_584 -> m6_573  [key=0, style=solid];
m6_584 -> m6_294  [key=2, style=dotted];
m6_586 -> m6_587  [key=0, style=solid];
m6_586 -> m6_589  [color=darkseagreen4, key=1, label=ateWhitespace, style=dashed];
m6_588 -> m6_573  [key=0, style=solid];
m6_587 -> m6_573  [key=0, style=solid];
m6_590 -> m6_186  [color=blue, key=0, style=bold];
m6_141 -> m6_142  [key=0, style=solid];
m6_142 -> m6_143  [key=0, style=solid];
m6_142 -> m6_144  [key=2, style=dotted];
m6_143 -> m6_141  [color=blue, key=0, style=bold];
m6_556 -> m6_591  [key=0, style=solid];
m6_591 -> m6_592  [key=0, style=solid];
m6_591 -> m6_625  [key=0, style=solid];
m6_591 -> m6_627  [key=2, style=dotted];
m6_592 -> m6_593  [key=0, style=solid];
m6_592 -> m6_186  [key=2, style=dotted];
m6_625 -> m6_626  [key=0, style=solid];
m6_625 -> m6_189  [key=2, style=dotted];
m6_593 -> m6_594  [key=0, style=solid];
m6_593 -> m6_617  [color=darkseagreen4, key=1, label=initialPosition, style=dashed];
m6_594 -> m6_595  [key=0, style=solid];
m6_594 -> m6_617  [color=darkseagreen4, key=1, label=endPosition, style=dashed];
m6_617 -> m6_618  [key=0, style=solid];
m6_617 -> m6_295  [key=2, style=dotted];
m6_595 -> m6_596  [key=0, style=solid];
m6_595 -> m6_617  [key=0, style=solid];
m6_596 -> m6_597  [key=0, style=solid];
m6_596 -> m6_603  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m6_596 -> m6_605  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m6_596 -> m6_608  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m6_596 -> m6_611  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m6_596 -> m6_614  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m6_596 -> m6_616  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m6_597 -> m6_598  [key=0, style=solid];
m6_597 -> m6_603  [key=0, style=solid];
m6_603 -> m6_604  [key=0, style=solid];
m6_603 -> m6_605  [key=0, style=solid];
m6_603 -> m6_457  [key=2, style=dotted];
m6_605 -> m6_606  [key=0, style=solid];
m6_605 -> m6_608  [key=0, style=solid];
m6_608 -> m6_609  [key=0, style=solid];
m6_608 -> m6_611  [key=0, style=solid];
m6_611 -> m6_612  [key=0, style=solid];
m6_611 -> m6_614  [key=0, style=solid];
m6_611 -> m6_403  [key=2, style=dotted];
m6_614 -> m6_615  [key=0, style=solid];
m6_614 -> m6_616  [key=0, style=solid];
m6_616 -> m6_626  [key=0, style=solid];
m6_616 -> m6_188  [key=2, style=dotted];
m6_616 -> m6_189  [key=2, style=dotted];
m6_598 -> m6_599  [key=0, style=solid];
m6_598 -> m6_601  [key=0, style=solid];
m6_599 -> m6_600  [key=0, style=solid];
m6_599 -> m6_595  [key=0, style=solid];
m6_599 -> m6_69  [key=2, style=dotted];
m6_601 -> m6_602  [key=0, style=solid];
m6_601 -> m6_617  [color=darkseagreen4, key=1, label=endPosition, style=dashed];
m6_600 -> m6_626  [key=0, style=solid];
m6_600 -> m6_189  [key=2, style=dotted];
m6_602 -> m6_617  [key=0, style=solid];
m6_604 -> m6_595  [key=0, style=solid];
m6_606 -> m6_607  [key=0, style=solid];
m6_606 -> m6_617  [color=darkseagreen4, key=1, label=endPosition, style=dashed];
m6_607 -> m6_617  [key=0, style=solid];
m6_607 -> m6_293  [key=2, style=dotted];
m6_609 -> m6_610  [key=0, style=solid];
m6_609 -> m6_617  [color=darkseagreen4, key=1, label=endPosition, style=dashed];
m6_610 -> m6_617  [key=0, style=solid];
m6_610 -> m6_294  [key=2, style=dotted];
m6_612 -> m6_613  [key=0, style=solid];
m6_612 -> m6_617  [color=darkseagreen4, key=1, label=endPosition, style=dashed];
m6_613 -> m6_617  [key=0, style=solid];
m6_615 -> m6_617  [key=0, style=solid];
m6_618 -> m6_619  [key=0, style=solid];
m6_618 -> m6_52  [key=2, style=dotted];
m6_618 -> m6_624  [color=darkseagreen4, key=1, label=constructorName, style=dashed];
m6_619 -> m6_620  [key=0, style=solid];
m6_619 -> m6_186  [key=2, style=dotted];
m6_624 -> m6_626  [key=0, style=solid];
m6_624 -> m6_51  [key=2, style=dotted];
m6_620 -> m6_621  [key=0, style=solid];
m6_620 -> m6_622  [key=0, style=solid];
m6_621 -> m6_626  [key=0, style=solid];
m6_621 -> m6_188  [key=2, style=dotted];
m6_621 -> m6_189  [key=2, style=dotted];
m6_622 -> m6_623  [key=0, style=solid];
m6_623 -> m6_624  [key=0, style=solid];
m6_623 -> m6_357  [key=2, style=dotted];
m6_626 -> m6_556  [color=blue, key=0, style=bold];
m6_818 -> m6_819  [key=0, style=solid];
m6_818 -> m6_774  [color=darkorchid, key=3, label="method methodReturn bool HasLineInfo", style=bold];
m6_819 -> m6_820  [key=0, style=solid];
m6_820 -> m6_818  [color=blue, key=0, style=bold];
m6_292 -> m6_298  [key=0, style=solid];
m6_292 -> m6_299  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.StringBuffer", style=dashed];
m6_292 -> m6_300  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.StringBuffer", style=dashed];
m6_292 -> m6_193  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Utilities.StringBuffer buffer", style=bold];
m6_292 -> m6_244  [color=darkorchid, key=3, label="Parameter variable char writeChar", style=bold];
m6_292 -> m6_132  [color=darkorchid, key=3, label="Parameter variable char writeChar", style=bold];
m6_292 -> m6_192  [color=darkorchid, key=3, label="Parameter variable int lastWritePosition", style=bold];
m6_292 -> m6_207  [color=darkorchid, key=3, label="Parameter variable int writeToPosition", style=bold];
m6_298 -> m6_299  [key=0, style=solid];
m6_298 -> m6_300  [key=0, style=solid];
m6_299 -> m6_300  [key=0, style=solid];
m6_299 -> m6_296  [key=2, style=dotted];
m6_300 -> m6_301  [key=0, style=solid];
m6_300 -> m6_302  [key=2, style=dotted];
m6_301 -> m6_292  [color=blue, key=0, style=bold];
m6_102 -> m6_103  [key=0, style=solid];
m6_102 -> m6_104  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_102 -> m6_107  [color=darkorchid, key=3, label="method methodReturn bool EnsureChars", style=bold];
m6_102 -> m6_774  [color=darkorchid, key=3, label="Parameter variable bool append", style=bold];
m6_102 -> m6_79  [color=darkorchid, key=3, label="Parameter variable int relativePosition", style=bold];
m6_102 -> m6_55  [color=darkorchid, key=3, label="Parameter variable int relativePosition", style=bold];
m6_102 -> m6_448  [color=darkorchid, key=3, label="Parameter variable int relativePosition", style=bold];
m6_102 -> m6_522  [color=darkorchid, key=3, label="Parameter variable int relativePosition", style=bold];
m6_102 -> m6_786  [color=darkorchid, key=3, label="Parameter variable bool append", style=bold];
m6_102 -> m6_293  [color=darkorchid, key=3, label="Parameter variable bool append", style=bold];
m6_103 -> m6_104  [key=0, style=solid];
m6_103 -> m6_105  [key=0, style=solid];
m6_104 -> m6_106  [key=0, style=solid];
m6_104 -> m6_107  [key=2, style=dotted];
m6_105 -> m6_106  [key=0, style=solid];
m6_106 -> m6_102  [color=blue, key=0, style=bold];
m6_751 -> m6_752  [key=0, style=solid];
m6_751 -> m6_769  [color=darkseagreen4, key=1, label=char, style=dashed];
m6_751 -> m6_774  [color=darkorchid, key=3, label="method methodReturn bool IsSeperator", style=bold];
m6_751 -> m6_786  [color=darkorchid, key=3, label="method methodReturn bool IsSeperator", style=bold];
m6_752 -> m6_753  [key=0, style=solid];
m6_752 -> m6_757  [key=0, style=solid];
m6_752 -> m6_761  [key=0, style=solid];
m6_752 -> m6_764  [key=0, style=solid];
m6_752 -> m6_769  [key=0, style=solid];
m6_769 -> m6_770  [key=0, style=solid];
m6_769 -> m6_771  [key=0, style=solid];
m6_769 -> m6_403  [key=2, style=dotted];
m6_753 -> m6_754  [key=0, style=solid];
m6_757 -> m6_758  [key=0, style=solid];
m6_761 -> m6_762  [key=0, style=solid];
m6_764 -> m6_765  [key=0, style=solid];
m6_754 -> m6_755  [key=0, style=solid];
m6_755 -> m6_756  [key=0, style=solid];
m6_756 -> m6_772  [key=0, style=solid];
m6_758 -> m6_759  [key=0, style=solid];
m6_758 -> m6_760  [key=0, style=solid];
m6_758 -> m6_102  [key=2, style=dotted];
m6_759 -> m6_772  [key=0, style=solid];
m6_760 -> m6_772  [key=0, style=solid];
m6_762 -> m6_763  [key=0, style=solid];
m6_762 -> m6_771  [key=0, style=solid];
m6_763 -> m6_772  [key=0, style=solid];
m6_771 -> m6_772  [key=0, style=solid];
m6_765 -> m6_766  [key=0, style=solid];
m6_766 -> m6_767  [key=0, style=solid];
m6_767 -> m6_768  [key=0, style=solid];
m6_768 -> m6_772  [key=0, style=solid];
m6_770 -> m6_772  [key=0, style=solid];
m6_772 -> m6_751  [color=blue, key=0, style=bold];
m6_560 -> m6_628  [key=0, style=solid];
m6_628 -> m6_629  [key=0, style=solid];
m6_628 -> m6_48  [key=2, style=dotted];
m6_629 -> m6_630  [key=0, style=solid];
m6_629 -> m6_635  [color=darkseagreen4, key=1, label=firstChar, style=dashed];
m6_629 -> m6_636  [color=darkseagreen4, key=1, label=firstChar, style=dashed];
m6_629 -> m6_639  [color=darkseagreen4, key=1, label=firstChar, style=dashed];
m6_629 -> m6_654  [color=darkseagreen4, key=1, label=firstChar, style=dashed];
m6_629 -> m6_666  [color=darkseagreen4, key=1, label=firstChar, style=dashed];
m6_630 -> m6_631  [key=0, style=solid];
m6_630 -> m6_632  [color=darkseagreen4, key=1, label=initialPosition, style=dashed];
m6_635 -> m6_636  [key=0, style=solid];
m6_635 -> m6_695  [key=2, style=dotted];
m6_635 -> m6_638  [color=darkseagreen4, key=1, label=singleDigit, style=dashed];
m6_635 -> m6_653  [color=darkseagreen4, key=1, label=singleDigit, style=dashed];
m6_635 -> m6_665  [color=darkseagreen4, key=1, label=singleDigit, style=dashed];
m6_636 -> m6_637  [key=0, style=solid];
m6_636 -> m6_640  [color=darkseagreen4, key=1, label=nonBase10, style=dashed];
m6_636 -> m6_655  [color=darkseagreen4, key=1, label=nonBase10, style=dashed];
m6_636 -> m6_668  [color=darkseagreen4, key=1, label=nonBase10, style=dashed];
m6_639 -> m6_651  [key=0, style=solid];
m6_639 -> m6_693  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m6_654 -> m6_664  [key=0, style=solid];
m6_654 -> m6_693  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m6_666 -> m6_667  [key=0, style=solid];
m6_666 -> m6_693  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m6_631 -> m6_632  [key=0, style=solid];
m6_631 -> m6_315  [key=2, style=dotted];
m6_632 -> m6_633  [key=0, style=solid];
m6_632 -> m6_295  [key=2, style=dotted];
m6_633 -> m6_634  [key=0, style=solid];
m6_633 -> m6_693  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m6_633 -> m6_642  [color=darkorchid, key=3, label="Local variable object numberValue", style=bold];
m6_633 -> m6_644  [color=darkorchid, key=3, label="Local variable object numberValue", style=bold];
m6_633 -> m6_660  [color=darkorchid, key=3, label="Local variable object numberValue", style=bold];
m6_633 -> m6_672  [color=darkorchid, key=3, label="Local variable object numberValue", style=bold];
m6_633 -> m6_683  [color=darkorchid, key=3, label="Local variable object numberValue", style=bold];
m6_633 -> m6_687  [color=darkorchid, key=3, label="Local variable object numberValue", style=bold];
m6_634 -> m6_635  [key=0, style=solid];
m6_693 -> m6_694  [key=0, style=solid];
m6_693 -> m6_51  [key=2, style=dotted];
m6_638 -> m6_639  [key=0, style=solid];
m6_638 -> m6_640  [key=0, style=solid];
m6_653 -> m6_654  [key=0, style=solid];
m6_653 -> m6_655  [key=0, style=solid];
m6_665 -> m6_666  [key=0, style=solid];
m6_665 -> m6_668  [key=0, style=solid];
m6_637 -> m6_638  [key=0, style=solid];
m6_637 -> m6_652  [key=0, style=solid];
m6_640 -> m6_641  [key=0, style=solid];
m6_640 -> m6_644  [key=0, style=solid];
m6_655 -> m6_656  [key=0, style=solid];
m6_655 -> m6_659  [key=0, style=solid];
m6_668 -> m6_669  [key=0, style=solid];
m6_668 -> m6_672  [key=0, style=solid];
m6_652 -> m6_653  [key=0, style=solid];
m6_652 -> m6_665  [key=0, style=solid];
m6_641 -> m6_642  [key=0, style=solid];
m6_641 -> m6_52  [key=2, style=dotted];
m6_644 -> m6_645  [key=0, style=solid];
m6_642 -> m6_643  [key=0, style=solid];
m6_642 -> m6_696  [key=2, style=dotted];
m6_642 -> m6_697  [key=2, style=dotted];
m6_643 -> m6_651  [key=0, style=solid];
m6_643 -> m6_693  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m6_645 -> m6_646  [key=0, style=solid];
m6_645 -> m6_698  [key=2, style=dotted];
m6_645 -> m6_647  [color=darkseagreen4, key=1, label=value, style=dashed];
m6_645 -> m6_648  [color=darkseagreen4, key=1, label=parseResult, style=dashed];
m6_646 -> m6_647  [key=0, style=solid];
m6_646 -> m6_648  [key=0, style=solid];
m6_647 -> m6_651  [key=0, style=solid];
m6_647 -> m6_693  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m6_648 -> m6_649  [key=0, style=solid];
m6_648 -> m6_650  [key=0, style=solid];
m6_649 -> m6_694  [key=0, style=solid];
m6_649 -> m6_52  [key=2, style=dotted];
m6_649 -> m6_188  [key=2, style=dotted];
m6_649 -> m6_189  [key=2, style=dotted];
m6_650 -> m6_694  [key=0, style=solid];
m6_650 -> m6_52  [key=2, style=dotted];
m6_650 -> m6_188  [key=2, style=dotted];
m6_650 -> m6_189  [key=2, style=dotted];
m6_651 -> m6_692  [key=0, style=solid];
m6_651 -> m6_693  [color=darkseagreen4, key=1, label=numberType, style=dashed];
m6_656 -> m6_657  [key=0, style=solid];
m6_656 -> m6_52  [key=2, style=dotted];
m6_659 -> m6_660  [key=0, style=solid];
m6_659 -> m6_52  [key=2, style=dotted];
m6_659 -> m6_661  [color=darkseagreen4, key=1, label=number, style=dashed];
m6_657 -> m6_658  [key=0, style=solid];
m6_657 -> m6_696  [key=2, style=dotted];
m6_657 -> m6_699  [key=2, style=dotted];
m6_658 -> m6_664  [key=0, style=solid];
m6_658 -> m6_700  [key=2, style=dotted];
m6_658 -> m6_693  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m6_660 -> m6_661  [key=0, style=solid];
m6_661 -> m6_662  [key=0, style=solid];
m6_661 -> m6_663  [key=0, style=solid];
m6_661 -> m6_701  [key=2, style=dotted];
m6_662 -> m6_664  [key=0, style=solid];
m6_662 -> m6_693  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m6_663 -> m6_694  [key=0, style=solid];
m6_663 -> m6_52  [key=2, style=dotted];
m6_663 -> m6_188  [key=2, style=dotted];
m6_663 -> m6_189  [key=2, style=dotted];
m6_664 -> m6_692  [key=0, style=solid];
m6_664 -> m6_693  [color=darkseagreen4, key=1, label=numberType, style=dashed];
m6_667 -> m6_692  [key=0, style=solid];
m6_667 -> m6_693  [color=darkseagreen4, key=1, label=numberType, style=dashed];
m6_669 -> m6_670  [key=0, style=solid];
m6_669 -> m6_52  [key=2, style=dotted];
m6_672 -> m6_673  [key=0, style=solid];
m6_670 -> m6_671  [key=0, style=solid];
m6_670 -> m6_696  [key=2, style=dotted];
m6_670 -> m6_699  [key=2, style=dotted];
m6_670 -> m6_693  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m6_671 -> m6_692  [key=0, style=solid];
m6_671 -> m6_693  [color=darkseagreen4, key=1, label=numberType, style=dashed];
m6_673 -> m6_674  [key=0, style=solid];
m6_673 -> m6_702  [key=2, style=dotted];
m6_673 -> m6_675  [color=darkseagreen4, key=1, label=value, style=dashed];
m6_673 -> m6_677  [color=darkseagreen4, key=1, label=parseResult, style=dashed];
m6_674 -> m6_675  [key=0, style=solid];
m6_674 -> m6_677  [key=0, style=solid];
m6_675 -> m6_676  [key=0, style=solid];
m6_675 -> m6_693  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m6_677 -> m6_678  [key=0, style=solid];
m6_677 -> m6_681  [key=0, style=solid];
m6_676 -> m6_692  [key=0, style=solid];
m6_676 -> m6_693  [color=darkseagreen4, key=1, label=numberType, style=dashed];
m6_678 -> m6_679  [key=0, style=solid];
m6_678 -> m6_52  [key=2, style=dotted];
m6_681 -> m6_682  [key=0, style=solid];
m6_681 -> m6_52  [key=2, style=dotted];
m6_681 -> m6_684  [color=darkseagreen4, key=1, label=number, style=dashed];
m6_681 -> m6_686  [color=darkseagreen4, key=1, label=number, style=dashed];
m6_681 -> m6_688  [color=red, key=1, label=number, style=dashed];
m6_681 -> m6_690  [color=darkseagreen4, key=1, label=number, style=dashed];
m6_679 -> m6_680  [key=0, style=solid];
m6_679 -> m6_703  [key=2, style=dotted];
m6_679 -> m6_693  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m6_680 -> m6_692  [key=0, style=solid];
m6_680 -> m6_693  [color=darkseagreen4, key=1, label=numberType, style=dashed];
m6_682 -> m6_683  [key=0, style=solid];
m6_682 -> m6_687  [key=0, style=solid];
m6_684 -> m6_685  [key=0, style=solid];
m6_684 -> m6_686  [key=0, style=solid];
m6_684 -> m6_701  [key=2, style=dotted];
m6_686 -> m6_694  [key=0, style=solid];
m6_686 -> m6_188  [key=2, style=dotted];
m6_686 -> m6_189  [key=2, style=dotted];
m6_688 -> m6_689  [color=red, key=0, style=solid];
m6_688 -> m6_690  [color=red, key=0, style=solid];
m6_688 -> m6_704  [color=red, key=2, style=dotted];
m6_690 -> m6_694  [key=0, style=solid];
m6_690 -> m6_188  [key=2, style=dotted];
m6_690 -> m6_189  [key=2, style=dotted];
m6_683 -> m6_684  [key=0, style=solid];
m6_687 -> m6_688  [color=red, key=0, style=solid];
m6_685 -> m6_691  [key=0, style=solid];
m6_685 -> m6_693  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m6_689 -> m6_691  [key=0, style=solid];
m6_689 -> m6_693  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m6_691 -> m6_692  [key=0, style=solid];
m6_691 -> m6_693  [color=darkseagreen4, key=1, label=numberType, style=dashed];
m6_692 -> m6_693  [key=0, style=solid];
m6_692 -> m6_357  [key=2, style=dotted];
m6_694 -> m6_560  [color=blue, key=0, style=bold];
m6_8 -> m6_9  [key=0, style=solid];
m6_9 -> m6_10  [key=0, style=solid];
m6_9 -> m6_11  [key=0, style=solid];
m6_10 -> m6_12  [key=0, style=solid];
m6_10 -> m6_14  [key=2, style=dotted];
m6_11 -> m6_12  [key=0, style=solid];
m6_12 -> m6_13  [key=0, style=solid];
m6_13 -> m6_8  [color=blue, key=0, style=bold];
m6_454 -> m6_458  [key=0, style=solid];
m6_458 -> m6_459  [key=0, style=solid];
m6_458 -> m6_465  [color=darkseagreen4, key=1, label=initialPosition, style=dashed];
m6_458 -> m6_471  [color=darkseagreen4, key=1, label=initialPosition, style=dashed];
m6_459 -> m6_460  [key=0, style=solid];
m6_459 -> m6_474  [key=0, style=solid];
m6_465 -> m6_466  [key=0, style=solid];
m6_465 -> m6_295  [key=2, style=dotted];
m6_471 -> m6_472  [key=0, style=solid];
m6_471 -> m6_295  [key=2, style=dotted];
m6_460 -> m6_461  [key=0, style=solid];
m6_460 -> m6_467  [key=0, style=solid];
m6_461 -> m6_462  [key=0, style=solid];
m6_467 -> m6_468  [key=0, style=solid];
m6_467 -> m6_470  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m6_467 -> m6_473  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m6_462 -> m6_463  [key=0, style=solid];
m6_462 -> m6_465  [key=0, style=solid];
m6_463 -> m6_464  [key=0, style=solid];
m6_463 -> m6_459  [key=0, style=solid];
m6_463 -> m6_69  [key=2, style=dotted];
m6_464 -> m6_474  [key=0, style=solid];
m6_464 -> m6_189  [key=2, style=dotted];
m6_466 -> m6_474  [key=0, style=solid];
m6_468 -> m6_469  [key=0, style=solid];
m6_468 -> m6_470  [key=0, style=solid];
m6_468 -> m6_453  [key=2, style=dotted];
m6_470 -> m6_471  [key=0, style=solid];
m6_470 -> m6_473  [key=0, style=solid];
m6_470 -> m6_403  [key=2, style=dotted];
m6_473 -> m6_474  [key=0, style=solid];
m6_473 -> m6_188  [key=2, style=dotted];
m6_473 -> m6_189  [key=2, style=dotted];
m6_469 -> m6_459  [key=0, style=solid];
m6_472 -> m6_474  [key=0, style=solid];
m6_474 -> m6_454  [color=blue, key=0, style=bold];
m6_69 -> m6_70  [key=0, style=solid];
m6_69 -> m6_72  [color=darkorchid, key=3, label="method methodReturn int ReadData", style=bold];
m6_69 -> m6_774  [color=darkorchid, key=3, label="Parameter variable bool append", style=bold];
m6_69 -> m6_786  [color=darkorchid, key=3, label="Parameter variable bool append", style=bold];
m6_70 -> m6_71  [key=0, style=solid];
m6_70 -> m6_72  [key=2, style=dotted];
m6_71 -> m6_69  [color=blue, key=0, style=bold];
m6_72 -> m6_73  [key=0, style=solid];
m6_72 -> m6_75  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_72 -> m6_76  [color=darkseagreen4, key=1, label=bool, style=dashed];
m6_72 -> m6_77  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_72 -> m6_82  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_72 -> m6_83  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_72 -> m6_69  [color=darkorchid, key=3, label="Parameter variable bool append", style=bold];
m6_72 -> m6_107  [color=darkorchid, key=3, label="Parameter variable bool append", style=bold];
m6_72 -> m6_79  [color=darkorchid, key=3, label="method methodReturn int ReadData", style=bold];
m6_72 -> m6_93  [color=darkorchid, key=3, label="method methodReturn int ReadData", style=bold];
m6_73 -> m6_74  [key=0, style=solid];
m6_73 -> m6_75  [key=0, style=solid];
m6_75 -> m6_76  [key=0, style=solid];
m6_75 -> m6_92  [key=0, style=solid];
m6_76 -> m6_77  [key=0, style=solid];
m6_76 -> m6_81  [key=0, style=solid];
m6_77 -> m6_78  [key=0, style=solid];
m6_77 -> m6_100  [key=2, style=dotted];
m6_82 -> m6_83  [key=0, style=solid];
m6_82 -> m6_87  [key=0, style=solid];
m6_83 -> m6_84  [key=0, style=solid];
m6_83 -> m6_85  [color=darkseagreen4, key=1, label=dst, style=dashed];
m6_83 -> m6_86  [color=darkseagreen4, key=1, label=dst, style=dashed];
m6_74 -> m6_99  [key=0, style=solid];
m6_92 -> m6_93  [key=0, style=solid];
m6_81 -> m6_82  [key=0, style=solid];
m6_81 -> m6_83  [color=darkseagreen4, key=1, label=remainingCharCount, style=dashed];
m6_81 -> m6_84  [color=darkseagreen4, key=1, label=remainingCharCount, style=dashed];
m6_81 -> m6_85  [color=darkseagreen4, key=1, label=remainingCharCount, style=dashed];
m6_81 -> m6_87  [color=darkseagreen4, key=1, label=remainingCharCount, style=dashed];
m6_81 -> m6_88  [color=darkseagreen4, key=1, label=remainingCharCount, style=dashed];
m6_81 -> m6_91  [color=darkseagreen4, key=1, label=remainingCharCount, style=dashed];
m6_78 -> m6_79  [key=0, style=solid];
m6_78 -> m6_80  [color=darkseagreen4, key=1, label=dst, style=dashed];
m6_79 -> m6_80  [key=0, style=solid];
m6_79 -> m6_54  [key=2, style=dotted];
m6_80 -> m6_92  [key=0, style=solid];
m6_84 -> m6_85  [key=0, style=solid];
m6_84 -> m6_86  [key=0, style=solid];
m6_85 -> m6_86  [key=0, style=solid];
m6_85 -> m6_54  [key=2, style=dotted];
m6_87 -> m6_88  [key=0, style=solid];
m6_87 -> m6_89  [key=0, style=solid];
m6_88 -> m6_89  [key=0, style=solid];
m6_88 -> m6_54  [key=2, style=dotted];
m6_91 -> m6_92  [key=0, style=solid];
m6_86 -> m6_89  [key=0, style=solid];
m6_89 -> m6_90  [key=0, style=solid];
m6_90 -> m6_91  [key=0, style=solid];
m6_93 -> m6_94  [key=0, style=solid];
m6_93 -> m6_101  [key=2, style=dotted];
m6_93 -> m6_95  [color=darkseagreen4, key=1, label=charsRead, style=dashed];
m6_93 -> m6_98  [color=darkseagreen4, key=1, label=charsRead, style=dashed];
m6_94 -> m6_95  [key=0, style=solid];
m6_95 -> m6_96  [key=0, style=solid];
m6_95 -> m6_97  [key=0, style=solid];
m6_98 -> m6_99  [key=0, style=solid];
m6_96 -> m6_97  [key=0, style=solid];
m6_97 -> m6_98  [key=0, style=solid];
m6_99 -> m6_72  [color=blue, key=0, style=bold];
m6_561 -> m6_781  [key=0, style=solid];
m6_781 -> m6_782  [key=0, style=solid];
m6_781 -> m6_783  [key=0, style=solid];
m6_781 -> m6_627  [key=2, style=dotted];
m6_782 -> m6_784  [key=0, style=solid];
m6_782 -> m6_128  [key=2, style=dotted];
m6_783 -> m6_784  [key=0, style=solid];
m6_783 -> m6_189  [key=2, style=dotted];
m6_784 -> m6_561  [color=blue, key=0, style=bold];
m6_289 -> m6_303  [key=0, style=solid];
m6_303 -> m6_304  [key=0, style=solid];
m6_303 -> m6_310  [color=darkseagreen4, key=1, label=writeChar, style=dashed];
m6_303 -> m6_306  [color=darkorchid, key=3, label="Local variable char writeChar", style=bold];
m6_304 -> m6_305  [key=0, style=solid];
m6_304 -> m6_309  [key=0, style=solid];
m6_304 -> m6_102  [key=2, style=dotted];
m6_310 -> m6_311  [key=0, style=solid];
m6_305 -> m6_306  [key=0, style=solid];
m6_305 -> m6_312  [key=2, style=dotted];
m6_309 -> m6_311  [key=0, style=solid];
m6_309 -> m6_189  [key=2, style=dotted];
m6_306 -> m6_307  [key=0, style=solid];
m6_306 -> m6_313  [key=2, style=dotted];
m6_306 -> m6_314  [key=2, style=dotted];
m6_307 -> m6_308  [key=0, style=solid];
m6_307 -> m6_310  [color=darkseagreen4, key=1, label=writeChar, style=dashed];
m6_308 -> m6_310  [key=0, style=solid];
m6_311 -> m6_289  [color=blue, key=0, style=bold];
m6_120 -> m6_121  [key=0, style=solid];
m6_120 -> m6_786  [color=darkorchid, key=3, label="method methodReturn bool Read", style=bold];
m6_120 -> m6_774  [color=darkorchid, key=3, label="method methodReturn bool Read", style=bold];
m6_121 -> m6_122  [key=0, style=solid];
m6_122 -> m6_123  [key=0, style=solid];
m6_122 -> m6_125  [key=0, style=solid];
m6_122 -> m6_127  [key=2, style=dotted];
m6_123 -> m6_124  [key=0, style=solid];
m6_123 -> m6_128  [key=2, style=dotted];
m6_125 -> m6_126  [key=0, style=solid];
m6_124 -> m6_126  [key=0, style=solid];
m6_126 -> m6_120  [color=blue, key=0, style=bold];
m6_554 -> m6_785  [key=0, style=solid];
m6_785 -> m6_786  [key=0, style=solid];
m6_785 -> m6_787  [key=0, style=solid];
m6_785 -> m6_627  [key=2, style=dotted];
m6_786 -> m6_788  [key=0, style=solid];
m6_786 -> m6_51  [key=2, style=dotted];
m6_787 -> m6_788  [key=0, style=solid];
m6_787 -> m6_189  [key=2, style=dotted];
m6_788 -> m6_554  [color=blue, key=0, style=bold];
m6_48 -> m6_59  [key=0, style=solid];
m6_59 -> m6_60  [key=0, style=solid];
m6_60 -> m6_61  [key=0, style=solid];
m6_60 -> m6_68  [key=0, style=solid];
m6_61 -> m6_62  [key=0, style=solid];
m6_61 -> m6_63  [color=darkseagreen4, key=1, label=count, style=dashed];
m6_61 -> m6_66  [color=darkseagreen4, key=1, label=count, style=dashed];
m6_62 -> m6_63  [key=0, style=solid];
m6_62 -> m6_64  [key=0, style=solid];
m6_63 -> m6_64  [key=0, style=solid];
m6_63 -> m6_54  [key=2, style=dotted];
m6_66 -> m6_67  [key=0, style=solid];
m6_64 -> m6_65  [key=0, style=solid];
m6_65 -> m6_66  [key=0, style=solid];
m6_67 -> m6_68  [key=0, style=solid];
m6_68 -> m6_48  [color=blue, key=0, style=bold];
m6_557 -> m6_802  [key=0, style=solid];
m6_802 -> m6_803  [key=0, style=solid];
m6_802 -> m6_806  [key=0, style=solid];
m6_802 -> m6_627  [key=2, style=dotted];
m6_803 -> m6_804  [key=0, style=solid];
m6_803 -> m6_805  [key=0, style=solid];
m6_806 -> m6_807  [key=0, style=solid];
m6_806 -> m6_189  [key=2, style=dotted];
m6_804 -> m6_807  [key=0, style=solid];
m6_804 -> m6_795  [key=2, style=dotted];
m6_805 -> m6_807  [key=0, style=solid];
m6_805 -> m6_51  [key=2, style=dotted];
m6_807 -> m6_557  [color=blue, key=0, style=bold];
m6_733 -> m6_734  [key=0, style=solid];
m6_733 -> m6_737  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_733 -> m6_738  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_733 -> m6_741  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_733 -> m6_786  [color=darkorchid, key=3, label="method methodReturn bool MatchValue", style=bold];
m6_733 -> m6_774  [color=darkorchid, key=3, label="method methodReturn bool MatchValue", style=bold];
m6_733 -> m6_627  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
m6_734 -> m6_735  [key=0, style=solid];
m6_734 -> m6_736  [key=0, style=solid];
m6_734 -> m6_102  [key=2, style=dotted];
m6_737 -> m6_738  [key=0, style=solid];
m6_737 -> m6_741  [key=0, style=solid];
m6_737 -> m6_79  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m6_738 -> m6_739  [key=0, style=solid];
m6_738 -> m6_740  [key=0, style=solid];
m6_741 -> m6_742  [key=0, style=solid];
m6_735 -> m6_743  [key=0, style=solid];
m6_736 -> m6_737  [key=0, style=solid];
m6_736 -> m6_738  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_736 -> m6_740  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_740 -> m6_737  [key=0, style=solid];
m6_740 -> m6_740  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_739 -> m6_743  [key=0, style=solid];
m6_742 -> m6_743  [key=0, style=solid];
m6_743 -> m6_733  [color=blue, key=0, style=bold];
m6_183 -> m6_475  [key=0, style=solid];
m6_183 -> m6_786  [color=darkorchid, key=3, label="method methodReturn bool ParseValue", style=bold];
m6_183 -> m6_774  [color=darkorchid, key=3, label="method methodReturn bool ParseValue", style=bold];
m6_475 -> m6_476  [key=0, style=solid];
m6_475 -> m6_552  [key=0, style=solid];
m6_476 -> m6_477  [key=0, style=solid];
m6_476 -> m6_485  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m6_476 -> m6_546  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m6_476 -> m6_548  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m6_476 -> m6_551  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m6_477 -> m6_478  [key=0, style=solid];
m6_477 -> m6_483  [key=0, style=solid];
m6_477 -> m6_487  [key=0, style=solid];
m6_477 -> m6_490  [key=0, style=solid];
m6_477 -> m6_493  [key=0, style=solid];
m6_477 -> m6_503  [key=0, style=solid];
m6_477 -> m6_506  [key=0, style=solid];
m6_477 -> m6_509  [key=0, style=solid];
m6_477 -> m6_514  [key=0, style=solid];
m6_477 -> m6_517  [key=0, style=solid];
m6_477 -> m6_520  [key=0, style=solid];
m6_477 -> m6_524  [key=0, style=solid];
m6_477 -> m6_528  [key=0, style=solid];
m6_477 -> m6_532  [key=0, style=solid];
m6_477 -> m6_535  [key=0, style=solid];
m6_477 -> m6_539  [key=0, style=solid];
m6_477 -> m6_541  [key=0, style=solid];
m6_477 -> m6_543  [key=0, style=solid];
m6_477 -> m6_546  [key=0, style=solid];
m6_485 -> m6_486  [key=0, style=solid];
m6_485 -> m6_19  [key=2, style=dotted];
m6_546 -> m6_547  [key=0, style=solid];
m6_546 -> m6_548  [key=0, style=solid];
m6_546 -> m6_403  [key=2, style=dotted];
m6_548 -> m6_549  [key=0, style=solid];
m6_548 -> m6_551  [key=0, style=solid];
m6_548 -> m6_562  [key=2, style=dotted];
m6_551 -> m6_552  [key=0, style=solid];
m6_551 -> m6_188  [key=2, style=dotted];
m6_551 -> m6_189  [key=2, style=dotted];
m6_478 -> m6_479  [key=0, style=solid];
m6_483 -> m6_484  [key=0, style=solid];
m6_487 -> m6_488  [key=0, style=solid];
m6_490 -> m6_491  [key=0, style=solid];
m6_493 -> m6_494  [key=0, style=solid];
m6_503 -> m6_504  [key=0, style=solid];
m6_506 -> m6_507  [key=0, style=solid];
m6_509 -> m6_510  [key=0, style=solid];
m6_514 -> m6_515  [key=0, style=solid];
m6_517 -> m6_518  [key=0, style=solid];
m6_520 -> m6_521  [key=0, style=solid];
m6_524 -> m6_525  [key=0, style=solid];
m6_528 -> m6_529  [key=0, style=solid];
m6_532 -> m6_533  [key=0, style=solid];
m6_535 -> m6_536  [key=0, style=solid];
m6_539 -> m6_540  [key=0, style=solid];
m6_541 -> m6_542  [key=0, style=solid];
m6_543 -> m6_544  [key=0, style=solid];
m6_479 -> m6_480  [key=0, style=solid];
m6_479 -> m6_482  [key=0, style=solid];
m6_480 -> m6_481  [key=0, style=solid];
m6_480 -> m6_475  [key=0, style=solid];
m6_480 -> m6_69  [key=2, style=dotted];
m6_482 -> m6_475  [key=0, style=solid];
m6_481 -> m6_552  [key=0, style=solid];
m6_484 -> m6_485  [key=0, style=solid];
m6_486 -> m6_552  [key=0, style=solid];
m6_488 -> m6_489  [key=0, style=solid];
m6_488 -> m6_553  [key=2, style=dotted];
m6_489 -> m6_552  [key=0, style=solid];
m6_491 -> m6_492  [key=0, style=solid];
m6_491 -> m6_554  [key=2, style=dotted];
m6_492 -> m6_552  [key=0, style=solid];
m6_494 -> m6_495  [key=0, style=solid];
m6_494 -> m6_501  [key=0, style=solid];
m6_494 -> m6_102  [key=2, style=dotted];
m6_495 -> m6_496  [key=0, style=solid];
m6_495 -> m6_498  [color=darkseagreen4, key=1, label=next, style=dashed];
m6_501 -> m6_552  [key=0, style=solid];
m6_501 -> m6_189  [key=2, style=dotted];
m6_496 -> m6_497  [key=0, style=solid];
m6_496 -> m6_498  [key=0, style=solid];
m6_498 -> m6_499  [key=0, style=solid];
m6_498 -> m6_500  [key=0, style=solid];
m6_497 -> m6_502  [key=0, style=solid];
m6_497 -> m6_555  [key=2, style=dotted];
m6_499 -> m6_502  [key=0, style=solid];
m6_499 -> m6_556  [key=2, style=dotted];
m6_500 -> m6_552  [key=0, style=solid];
m6_500 -> m6_188  [key=2, style=dotted];
m6_500 -> m6_189  [key=2, style=dotted];
m6_502 -> m6_552  [key=0, style=solid];
m6_504 -> m6_505  [key=0, style=solid];
m6_504 -> m6_557  [key=2, style=dotted];
m6_505 -> m6_552  [key=0, style=solid];
m6_507 -> m6_508  [key=0, style=solid];
m6_507 -> m6_558  [key=2, style=dotted];
m6_508 -> m6_552  [key=0, style=solid];
m6_510 -> m6_511  [key=0, style=solid];
m6_510 -> m6_512  [key=0, style=solid];
m6_510 -> m6_102  [key=2, style=dotted];
m6_511 -> m6_513  [key=0, style=solid];
m6_511 -> m6_559  [key=2, style=dotted];
m6_512 -> m6_513  [key=0, style=solid];
m6_512 -> m6_560  [key=2, style=dotted];
m6_513 -> m6_552  [key=0, style=solid];
m6_515 -> m6_516  [key=0, style=solid];
m6_515 -> m6_187  [key=2, style=dotted];
m6_516 -> m6_552  [key=0, style=solid];
m6_518 -> m6_519  [key=0, style=solid];
m6_518 -> m6_561  [key=2, style=dotted];
m6_519 -> m6_552  [key=0, style=solid];
m6_521 -> m6_522  [key=0, style=solid];
m6_522 -> m6_523  [key=0, style=solid];
m6_522 -> m6_128  [key=2, style=dotted];
m6_523 -> m6_552  [key=0, style=solid];
m6_525 -> m6_526  [key=0, style=solid];
m6_526 -> m6_527  [key=0, style=solid];
m6_526 -> m6_128  [key=2, style=dotted];
m6_527 -> m6_552  [key=0, style=solid];
m6_529 -> m6_530  [key=0, style=solid];
m6_530 -> m6_531  [key=0, style=solid];
m6_530 -> m6_128  [key=2, style=dotted];
m6_531 -> m6_552  [key=0, style=solid];
m6_533 -> m6_534  [key=0, style=solid];
m6_533 -> m6_128  [key=2, style=dotted];
m6_534 -> m6_552  [key=0, style=solid];
m6_536 -> m6_537  [key=0, style=solid];
m6_537 -> m6_538  [key=0, style=solid];
m6_537 -> m6_128  [key=2, style=dotted];
m6_538 -> m6_552  [key=0, style=solid];
m6_540 -> m6_475  [key=0, style=solid];
m6_540 -> m6_293  [key=2, style=dotted];
m6_542 -> m6_475  [key=0, style=solid];
m6_542 -> m6_294  [key=2, style=dotted];
m6_544 -> m6_545  [key=0, style=solid];
m6_545 -> m6_475  [key=0, style=solid];
m6_547 -> m6_475  [key=0, style=solid];
m6_549 -> m6_550  [key=0, style=solid];
m6_549 -> m6_560  [key=2, style=dotted];
m6_550 -> m6_552  [key=0, style=solid];
m6_552 -> m6_183  [color=blue, key=0, style=bold];
m6_430 -> m6_431  [key=0, style=solid];
m6_430 -> m6_774  [color=darkorchid, key=3, label="method methodReturn bool ParseProperty", style=bold];
m6_431 -> m6_432  [key=0, style=solid];
m6_431 -> m6_433  [color=darkseagreen4, key=1, label=firstChar, style=dashed];
m6_431 -> m6_435  [color=darkseagreen4, key=1, label=firstChar, style=dashed];
m6_431 -> m6_438  [color=darkseagreen4, key=1, label=firstChar, style=dashed];
m6_432 -> m6_433  [key=0, style=solid];
m6_432 -> m6_449  [color=darkseagreen4, key=1, label=quoteChar, style=dashed];
m6_432 -> m6_431  [color=darkorchid, key=3, label="Local variable char quoteChar", style=bold];
m6_433 -> m6_434  [key=0, style=solid];
m6_433 -> m6_438  [key=0, style=solid];
m6_435 -> m6_436  [key=0, style=solid];
m6_435 -> m6_437  [color=darkseagreen4, key=1, label=quoteChar, style=dashed];
m6_435 -> m6_449  [color=darkseagreen4, key=1, label=quoteChar, style=dashed];
m6_438 -> m6_439  [key=0, style=solid];
m6_438 -> m6_442  [key=0, style=solid];
m6_438 -> m6_453  [key=2, style=dotted];
m6_449 -> m6_450  [key=0, style=solid];
m6_434 -> m6_435  [key=0, style=solid];
m6_436 -> m6_437  [key=0, style=solid];
m6_436 -> m6_48  [key=2, style=dotted];
m6_437 -> m6_443  [key=0, style=solid];
m6_437 -> m6_49  [key=2, style=dotted];
m6_439 -> m6_440  [key=0, style=solid];
m6_439 -> m6_449  [color=darkseagreen4, key=1, label=quoteChar, style=dashed];
m6_442 -> m6_452  [key=0, style=solid];
m6_442 -> m6_188  [key=2, style=dotted];
m6_442 -> m6_189  [key=2, style=dotted];
m6_440 -> m6_441  [key=0, style=solid];
m6_440 -> m6_48  [key=2, style=dotted];
m6_441 -> m6_443  [key=0, style=solid];
m6_441 -> m6_454  [key=2, style=dotted];
m6_443 -> m6_444  [key=0, style=solid];
m6_443 -> m6_52  [key=2, style=dotted];
m6_443 -> m6_448  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m6_444 -> m6_445  [key=0, style=solid];
m6_444 -> m6_186  [key=2, style=dotted];
m6_448 -> m6_449  [key=0, style=solid];
m6_448 -> m6_51  [key=2, style=dotted];
m6_445 -> m6_446  [key=0, style=solid];
m6_445 -> m6_447  [key=0, style=solid];
m6_446 -> m6_452  [key=0, style=solid];
m6_446 -> m6_188  [key=2, style=dotted];
m6_446 -> m6_189  [key=2, style=dotted];
m6_447 -> m6_448  [key=0, style=solid];
m6_450 -> m6_451  [key=0, style=solid];
m6_450 -> m6_357  [key=2, style=dotted];
m6_451 -> m6_452  [key=0, style=solid];
m6_452 -> m6_430  [color=blue, key=0, style=bold];
m6_315 -> m6_316  [key=0, style=solid];
m6_316 -> m6_317  [key=0, style=solid];
m6_316 -> m6_318  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m6_317 -> m6_318  [key=0, style=solid];
m6_317 -> m6_356  [key=0, style=solid];
m6_318 -> m6_319  [key=0, style=solid];
m6_318 -> m6_327  [key=0, style=solid];
m6_318 -> m6_354  [key=0, style=solid];
m6_318 -> m6_318  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m6_318 -> m6_320  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m6_318 -> m6_321  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m6_318 -> m6_325  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m6_319 -> m6_320  [key=0, style=solid];
m6_327 -> m6_328  [key=0, style=solid];
m6_354 -> m6_355  [key=0, style=solid];
m6_320 -> m6_321  [key=0, style=solid];
m6_320 -> m6_325  [key=0, style=solid];
m6_321 -> m6_322  [key=0, style=solid];
m6_321 -> m6_321  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m6_321 -> m6_354  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m6_325 -> m6_326  [key=0, style=solid];
m6_322 -> m6_323  [key=0, style=solid];
m6_323 -> m6_324  [key=0, style=solid];
m6_323 -> m6_317  [key=0, style=solid];
m6_323 -> m6_69  [key=2, style=dotted];
m6_324 -> m6_356  [key=0, style=solid];
m6_326 -> m6_356  [key=0, style=solid];
m6_328 -> m6_329  [key=0, style=solid];
m6_329 -> m6_330  [key=0, style=solid];
m6_330 -> m6_331  [key=0, style=solid];
m6_331 -> m6_332  [key=0, style=solid];
m6_332 -> m6_333  [key=0, style=solid];
m6_333 -> m6_334  [key=0, style=solid];
m6_334 -> m6_335  [key=0, style=solid];
m6_335 -> m6_336  [key=0, style=solid];
m6_336 -> m6_337  [key=0, style=solid];
m6_337 -> m6_338  [key=0, style=solid];
m6_338 -> m6_339  [key=0, style=solid];
m6_339 -> m6_340  [key=0, style=solid];
m6_340 -> m6_341  [key=0, style=solid];
m6_341 -> m6_342  [key=0, style=solid];
m6_342 -> m6_343  [key=0, style=solid];
m6_343 -> m6_344  [key=0, style=solid];
m6_344 -> m6_345  [key=0, style=solid];
m6_345 -> m6_346  [key=0, style=solid];
m6_346 -> m6_347  [key=0, style=solid];
m6_347 -> m6_348  [key=0, style=solid];
m6_348 -> m6_349  [key=0, style=solid];
m6_349 -> m6_350  [key=0, style=solid];
m6_350 -> m6_351  [key=0, style=solid];
m6_351 -> m6_352  [key=0, style=solid];
m6_352 -> m6_353  [key=0, style=solid];
m6_353 -> m6_317  [key=0, style=solid];
m6_355 -> m6_356  [key=0, style=solid];
m6_356 -> m6_315  [color=blue, key=0, style=bold];
m6_294 -> m6_563  [key=0, style=solid];
m6_563 -> m6_564  [key=0, style=solid];
m6_564 -> m6_565  [key=0, style=solid];
m6_564 -> m6_15  [key=2, style=dotted];
m6_565 -> m6_294  [color=blue, key=0, style=bold];
m6_821 -> m6_3  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_4  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_5  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_9  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_10  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_11  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_12  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_16  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_17  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_20  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_21  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_22  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_23  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_25  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_27  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_28  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_29  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_30  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_31  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_32  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_33  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_34  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_36  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_38  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_40  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_42  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_43  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_45  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_46  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_59  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_60  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_61  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_63  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_64  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_65  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_66  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_67  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_70  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_73  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_75  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_77  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_79  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_80  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_81  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_82  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_85  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_86  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_88  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_89  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_90  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_91  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_92  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_93  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_94  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_96  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_97  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_103  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_104  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_108  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_110  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_112  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_121  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_122  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_123  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_130  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_134  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_138  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_142  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_146  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_150  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_154  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_161  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_165  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_167  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_170  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_171  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_172  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_174  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_175  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_177  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_181  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_190  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_191  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_192  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_195  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_197  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_199  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_200  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_201  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_203  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_204  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_205  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_206  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_208  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_236  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_237  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_243  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_245  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_246  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_253  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_254  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_255  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_258  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_260  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_261  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_263  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_264  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_267  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_268  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_269  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_271  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_272  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_273  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_276  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_279  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_281  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_283  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_284  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_286  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_299  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_304  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_305  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_308  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_309  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_316  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_318  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_320  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_322  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_323  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_325  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_354  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_358  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_359  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_360  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_364  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_367  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_368  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_369  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_371  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_373  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_374  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_377  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_378  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_381  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_382  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_385  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_388  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_389  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_393  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_395  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_397  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_399  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_400  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_405  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_408  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_409  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_411  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_413  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_414  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_417  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_420  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_422  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_425  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_427  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_428  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_431  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_434  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_436  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_437  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_438  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_440  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_441  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_442  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_443  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_444  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_445  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_446  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_447  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_448  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_449  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_450  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_458  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_460  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_462  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_463  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_464  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_465  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_467  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_468  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_469  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_471  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_473  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_476  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_479  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_480  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_482  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_485  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_488  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_491  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_494  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_495  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_497  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_499  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_500  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_501  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_504  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_507  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_510  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_511  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_512  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_515  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_518  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_521  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_522  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_525  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_526  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_529  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_530  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_533  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_536  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_537  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_540  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_542  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_545  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_547  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_549  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_551  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_563  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_564  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_566  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_567  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_568  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_569  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_574  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_577  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_578  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_580  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_582  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_584  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_587  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_591  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_592  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_593  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_596  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_598  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_599  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_600  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_601  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_602  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_604  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_606  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_607  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_609  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_610  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_612  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_613  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_615  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_616  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_617  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_618  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_619  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_620  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_621  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_622  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_623  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_624  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_625  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_628  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_629  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_630  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_631  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_632  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_635  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_636  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_637  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_641  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_645  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_649  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_650  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_652  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_656  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_659  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_663  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_669  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_673  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_678  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_681  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_682  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_686  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_690  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_692  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_693  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_705  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_706  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_707  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_708  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_709  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_712  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_714  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_715  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_716  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_717  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_719  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_720  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_721  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_722  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_723  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_726  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_728  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_729  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_730  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_731  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_734  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_738  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_741  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_744  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_747  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_749  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_758  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_760  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_762  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_773  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_774  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_775  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_777  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_778  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_779  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_781  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_782  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_783  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_785  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_786  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_787  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_789  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_790  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_792  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_793  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_796  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_797  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_799  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_800  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_802  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_803  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_805  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_806  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_809  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_810  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_811  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_812  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m6_821 -> m6_813  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_1460 -> m7_1461  [key=0, style=solid];
m7_1461 -> m7_1462  [key=0, style=solid];
m7_1461 -> m7_1461  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_1462 -> m7_1463  [key=0, style=solid];
m7_1462 -> m7_13  [key=2, style=dotted];
m7_1462 -> m7_14  [key=2, style=dotted];
m7_1462 -> m7_1464  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1462 -> m7_1465  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1462 -> m7_1466  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1463 -> m7_1464  [key=0, style=solid];
m7_1463 -> m7_15  [key=2, style=dotted];
m7_1463 -> m7_16  [key=2, style=dotted];
m7_1464 -> m7_1465  [key=0, style=solid];
m7_1464 -> m7_15  [key=2, style=dotted];
m7_1464 -> m7_16  [key=2, style=dotted];
m7_1465 -> m7_1466  [key=0, style=solid];
m7_1465 -> m7_15  [key=2, style=dotted];
m7_1465 -> m7_16  [key=2, style=dotted];
m7_1466 -> m7_1467  [key=0, style=solid];
m7_1466 -> m7_15  [key=2, style=dotted];
m7_1466 -> m7_131  [key=2, style=dotted];
m7_1467 -> m7_1460  [color=blue, key=0, style=bold];
m7_967 -> m7_968  [key=0, style=solid];
m7_968 -> m7_969  [key=0, style=solid];
m7_968 -> m7_14  [key=2, style=dotted];
m7_969 -> m7_970  [key=0, style=solid];
m7_969 -> m7_13  [key=2, style=dotted];
m7_970 -> m7_971  [key=0, style=solid];
m7_970 -> m7_975  [key=2, style=dotted];
m7_970 -> m7_972  [color=darkseagreen4, key=1, label=data, style=dashed];
m7_971 -> m7_972  [key=0, style=solid];
m7_971 -> m7_976  [key=2, style=dotted];
m7_972 -> m7_973  [key=0, style=solid];
m7_972 -> m7_977  [key=2, style=dotted];
m7_973 -> m7_974  [key=0, style=solid];
m7_973 -> m7_17  [key=2, style=dotted];
m7_974 -> m7_967  [color=blue, key=0, style=bold];
m7_198 -> m7_199  [key=0, style=solid];
m7_199 -> m7_200  [key=0, style=solid];
m7_199 -> m7_199  [color=darkorchid, key=3, label="Local variable string input", style=bold];
m7_200 -> m7_201  [key=0, style=solid];
m7_200 -> m7_14  [key=2, style=dotted];
m7_201 -> m7_202  [key=0, style=solid];
m7_201 -> m7_13  [key=2, style=dotted];
m7_201 -> m7_203  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_201 -> m7_204  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_201 -> m7_205  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_201 -> m7_206  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_201 -> m7_207  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_201 -> m7_208  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_201 -> m7_209  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_201 -> m7_210  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_201 -> m7_211  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_201 -> m7_212  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_201 -> m7_213  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_201 -> m7_214  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_201 -> m7_215  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_201 -> m7_216  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_201 -> m7_217  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_201 -> m7_218  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_201 -> m7_219  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_201 -> m7_220  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_201 -> m7_221  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_201 -> m7_222  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_201 -> m7_223  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_201 -> m7_224  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_201 -> m7_225  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_201 -> m7_226  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_201 -> m7_227  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_201 -> m7_228  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_201 -> m7_229  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_201 -> m7_230  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_201 -> m7_231  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_201 -> m7_232  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_201 -> m7_233  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_201 -> m7_234  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_201 -> m7_235  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_201 -> m7_236  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_201 -> m7_237  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_201 -> m7_238  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_201 -> m7_239  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_201 -> m7_240  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_201 -> m7_241  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_201 -> m7_242  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_201 -> m7_243  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_201 -> m7_244  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_201 -> m7_245  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_201 -> m7_246  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_201 -> m7_247  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_201 -> m7_248  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_202 -> m7_203  [key=0, style=solid];
m7_202 -> m7_17  [key=2, style=dotted];
m7_203 -> m7_204  [key=0, style=solid];
m7_203 -> m7_17  [key=2, style=dotted];
m7_204 -> m7_205  [key=0, style=solid];
m7_204 -> m7_17  [key=2, style=dotted];
m7_205 -> m7_206  [key=0, style=solid];
m7_205 -> m7_15  [key=2, style=dotted];
m7_206 -> m7_207  [key=0, style=solid];
m7_206 -> m7_17  [key=2, style=dotted];
m7_207 -> m7_208  [key=0, style=solid];
m7_207 -> m7_17  [key=2, style=dotted];
m7_208 -> m7_209  [key=0, style=solid];
m7_208 -> m7_17  [key=2, style=dotted];
m7_209 -> m7_210  [key=0, style=solid];
m7_209 -> m7_15  [key=2, style=dotted];
m7_210 -> m7_211  [key=0, style=solid];
m7_210 -> m7_17  [key=2, style=dotted];
m7_211 -> m7_212  [key=0, style=solid];
m7_211 -> m7_17  [key=2, style=dotted];
m7_212 -> m7_213  [key=0, style=solid];
m7_212 -> m7_17  [key=2, style=dotted];
m7_213 -> m7_214  [key=0, style=solid];
m7_213 -> m7_17  [key=2, style=dotted];
m7_214 -> m7_215  [key=0, style=solid];
m7_214 -> m7_15  [key=2, style=dotted];
m7_215 -> m7_216  [key=0, style=solid];
m7_215 -> m7_17  [key=2, style=dotted];
m7_216 -> m7_217  [key=0, style=solid];
m7_216 -> m7_17  [key=2, style=dotted];
m7_217 -> m7_218  [key=0, style=solid];
m7_217 -> m7_17  [key=2, style=dotted];
m7_218 -> m7_219  [key=0, style=solid];
m7_218 -> m7_17  [key=2, style=dotted];
m7_219 -> m7_220  [key=0, style=solid];
m7_219 -> m7_15  [key=2, style=dotted];
m7_220 -> m7_221  [key=0, style=solid];
m7_220 -> m7_17  [key=2, style=dotted];
m7_221 -> m7_222  [key=0, style=solid];
m7_221 -> m7_17  [key=2, style=dotted];
m7_222 -> m7_223  [key=0, style=solid];
m7_222 -> m7_17  [key=2, style=dotted];
m7_223 -> m7_224  [key=0, style=solid];
m7_223 -> m7_17  [key=2, style=dotted];
m7_224 -> m7_225  [key=0, style=solid];
m7_224 -> m7_15  [key=2, style=dotted];
m7_225 -> m7_226  [key=0, style=solid];
m7_225 -> m7_17  [key=2, style=dotted];
m7_226 -> m7_227  [key=0, style=solid];
m7_226 -> m7_17  [key=2, style=dotted];
m7_227 -> m7_228  [key=0, style=solid];
m7_227 -> m7_17  [key=2, style=dotted];
m7_228 -> m7_229  [key=0, style=solid];
m7_228 -> m7_15  [key=2, style=dotted];
m7_229 -> m7_230  [key=0, style=solid];
m7_229 -> m7_17  [key=2, style=dotted];
m7_230 -> m7_231  [key=0, style=solid];
m7_230 -> m7_17  [key=2, style=dotted];
m7_231 -> m7_232  [key=0, style=solid];
m7_231 -> m7_17  [key=2, style=dotted];
m7_232 -> m7_233  [key=0, style=solid];
m7_232 -> m7_17  [key=2, style=dotted];
m7_233 -> m7_234  [key=0, style=solid];
m7_233 -> m7_17  [key=2, style=dotted];
m7_234 -> m7_235  [key=0, style=solid];
m7_234 -> m7_15  [key=2, style=dotted];
m7_235 -> m7_236  [key=0, style=solid];
m7_235 -> m7_17  [key=2, style=dotted];
m7_236 -> m7_237  [key=0, style=solid];
m7_236 -> m7_17  [key=2, style=dotted];
m7_237 -> m7_238  [key=0, style=solid];
m7_237 -> m7_17  [key=2, style=dotted];
m7_238 -> m7_239  [key=0, style=solid];
m7_238 -> m7_17  [key=2, style=dotted];
m7_239 -> m7_240  [key=0, style=solid];
m7_239 -> m7_17  [key=2, style=dotted];
m7_240 -> m7_241  [key=0, style=solid];
m7_240 -> m7_15  [key=2, style=dotted];
m7_241 -> m7_242  [key=0, style=solid];
m7_241 -> m7_17  [key=2, style=dotted];
m7_242 -> m7_243  [key=0, style=solid];
m7_242 -> m7_17  [key=2, style=dotted];
m7_243 -> m7_244  [key=0, style=solid];
m7_243 -> m7_17  [key=2, style=dotted];
m7_244 -> m7_245  [key=0, style=solid];
m7_244 -> m7_15  [key=2, style=dotted];
m7_245 -> m7_246  [key=0, style=solid];
m7_245 -> m7_17  [key=2, style=dotted];
m7_246 -> m7_247  [key=0, style=solid];
m7_246 -> m7_17  [key=2, style=dotted];
m7_247 -> m7_248  [key=0, style=solid];
m7_247 -> m7_17  [key=2, style=dotted];
m7_248 -> m7_249  [key=0, style=solid];
m7_248 -> m7_15  [key=2, style=dotted];
m7_248 -> m7_131  [key=2, style=dotted];
m7_249 -> m7_198  [color=blue, key=0, style=bold];
m7_1097 -> m7_1098  [key=0, style=solid];
m7_1098 -> m7_1099  [key=0, style=solid];
m7_1098 -> m7_13  [key=2, style=dotted];
m7_1098 -> m7_14  [key=2, style=dotted];
m7_1098 -> m7_1102  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1099 -> m7_1100  [key=0, style=solid];
m7_1099 -> m7_18  [key=2, style=dotted];
m7_1099 -> m7_1101  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_1100 -> m7_1097  [color=blue, key=0, style=bold];
m7_1476 -> m7_1477  [key=0, style=solid];
m7_1477 -> m7_1478  [key=0, style=solid];
m7_1477 -> m7_1477  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_1478 -> m7_1479  [key=0, style=solid];
m7_1478 -> m7_13  [key=2, style=dotted];
m7_1478 -> m7_14  [key=2, style=dotted];
m7_1478 -> m7_1480  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1478 -> m7_1481  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1478 -> m7_1482  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1479 -> m7_1480  [key=0, style=solid];
m7_1479 -> m7_15  [key=2, style=dotted];
m7_1479 -> m7_16  [key=2, style=dotted];
m7_1480 -> m7_1481  [key=0, style=solid];
m7_1480 -> m7_17  [key=2, style=dotted];
m7_1481 -> m7_1482  [key=0, style=solid];
m7_1481 -> m7_15  [key=2, style=dotted];
m7_1481 -> m7_16  [key=2, style=dotted];
m7_1482 -> m7_1483  [key=0, style=solid];
m7_1482 -> m7_17  [key=2, style=dotted];
m7_1483 -> m7_1476  [color=blue, key=0, style=bold];
m7_996 -> m7_997  [key=0, style=solid];
m7_997 -> m7_998  [key=0, style=solid];
m7_997 -> m7_14  [key=2, style=dotted];
m7_998 -> m7_999  [key=0, style=solid];
m7_998 -> m7_13  [key=2, style=dotted];
m7_998 -> m7_1000  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_998 -> m7_1001  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_998 -> m7_1002  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_998 -> m7_1003  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_998 -> m7_1004  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_998 -> m7_1005  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_998 -> m7_1006  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_998 -> m7_1007  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_998 -> m7_1008  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_998 -> m7_1009  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_998 -> m7_1010  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_998 -> m7_1011  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_998 -> m7_1012  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_998 -> m7_1013  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_998 -> m7_1014  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_998 -> m7_1015  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_999 -> m7_1000  [key=0, style=solid];
m7_999 -> m7_15  [key=2, style=dotted];
m7_999 -> m7_16  [key=2, style=dotted];
m7_1000 -> m7_1001  [key=0, style=solid];
m7_1000 -> m7_17  [key=2, style=dotted];
m7_1001 -> m7_1002  [key=0, style=solid];
m7_1001 -> m7_15  [key=2, style=dotted];
m7_1002 -> m7_1003  [key=0, style=solid];
m7_1002 -> m7_17  [key=2, style=dotted];
m7_1003 -> m7_1004  [key=0, style=solid];
m7_1003 -> m7_17  [key=2, style=dotted];
m7_1004 -> m7_1005  [key=0, style=solid];
m7_1004 -> m7_17  [key=2, style=dotted];
m7_1005 -> m7_1006  [key=0, style=solid];
m7_1005 -> m7_15  [key=2, style=dotted];
m7_1006 -> m7_1007  [key=0, style=solid];
m7_1006 -> m7_17  [key=2, style=dotted];
m7_1007 -> m7_1008  [key=0, style=solid];
m7_1007 -> m7_17  [key=2, style=dotted];
m7_1008 -> m7_1009  [key=0, style=solid];
m7_1008 -> m7_17  [key=2, style=dotted];
m7_1009 -> m7_1010  [key=0, style=solid];
m7_1009 -> m7_15  [key=2, style=dotted];
m7_1010 -> m7_1011  [key=0, style=solid];
m7_1010 -> m7_17  [key=2, style=dotted];
m7_1011 -> m7_1012  [key=0, style=solid];
m7_1011 -> m7_17  [key=2, style=dotted];
m7_1012 -> m7_1013  [key=0, style=solid];
m7_1012 -> m7_17  [key=2, style=dotted];
m7_1013 -> m7_1014  [key=0, style=solid];
m7_1013 -> m7_15  [key=2, style=dotted];
m7_1013 -> m7_16  [key=2, style=dotted];
m7_1014 -> m7_1015  [key=0, style=solid];
m7_1014 -> m7_17  [key=2, style=dotted];
m7_1015 -> m7_1016  [key=0, style=solid];
m7_1015 -> m7_15  [key=2, style=dotted];
m7_1015 -> m7_131  [key=2, style=dotted];
m7_1016 -> m7_996  [color=blue, key=0, style=bold];
m7_552 -> m7_553  [key=0, style=solid];
m7_553 -> m7_554  [key=0, style=solid];
m7_553 -> m7_13  [key=2, style=dotted];
m7_553 -> m7_14  [key=2, style=dotted];
m7_553 -> m7_555  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_553 -> m7_558  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_554 -> m7_555  [key=0, style=solid];
m7_554 -> m7_138  [key=2, style=dotted];
m7_554 -> m7_16  [key=2, style=dotted];
m7_555 -> m7_556  [key=0, style=solid];
m7_555 -> m7_18  [key=2, style=dotted];
m7_555 -> m7_557  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_556 -> m7_552  [color=blue, key=0, style=bold];
m7_1886 -> m7_1887  [key=0, style=solid];
m7_1887 -> m7_1888  [key=0, style=solid];
m7_1887 -> m7_1885  [key=2, style=dotted];
m7_1888 -> m7_1886  [color=blue, key=0, style=bold];
m7_1889 -> m7_1890  [key=0, style=solid];
m7_1890 -> m7_1891  [key=0, style=solid];
m7_1890 -> m7_1885  [key=2, style=dotted];
m7_1891 -> m7_1889  [color=blue, key=0, style=bold];
m7_1499 -> m7_1500  [key=0, style=solid];
m7_1500 -> m7_1501  [key=0, style=solid];
m7_1500 -> m7_1500  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_1501 -> m7_1502  [key=0, style=solid];
m7_1501 -> m7_13  [key=2, style=dotted];
m7_1501 -> m7_14  [key=2, style=dotted];
m7_1501 -> m7_1506  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1502 -> m7_1503  [key=0, style=solid];
m7_1502 -> m7_1504  [key=2, style=dotted];
m7_1502 -> m7_1505  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_1503 -> m7_1499  [color=blue, key=0, style=bold];
m7_1139 -> m7_1140  [key=0, style=solid];
m7_1140 -> m7_1141  [key=0, style=solid];
m7_1140 -> m7_1140  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_1141 -> m7_1142  [key=0, style=solid];
m7_1141 -> m7_13  [key=2, style=dotted];
m7_1141 -> m7_14  [key=2, style=dotted];
m7_1141 -> m7_1143  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1141 -> m7_1144  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1141 -> m7_1145  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1141 -> m7_1146  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1141 -> m7_1147  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1141 -> m7_1148  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1141 -> m7_1149  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1141 -> m7_1150  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1141 -> m7_1151  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1142 -> m7_1143  [key=0, style=solid];
m7_1142 -> m7_15  [key=2, style=dotted];
m7_1142 -> m7_16  [key=2, style=dotted];
m7_1143 -> m7_1144  [key=0, style=solid];
m7_1143 -> m7_17  [key=2, style=dotted];
m7_1144 -> m7_1145  [key=0, style=solid];
m7_1144 -> m7_15  [key=2, style=dotted];
m7_1144 -> m7_16  [key=2, style=dotted];
m7_1145 -> m7_1146  [key=0, style=solid];
m7_1145 -> m7_17  [key=2, style=dotted];
m7_1146 -> m7_1147  [key=0, style=solid];
m7_1146 -> m7_1068  [key=2, style=dotted];
m7_1147 -> m7_1148  [key=0, style=solid];
m7_1147 -> m7_17  [key=2, style=dotted];
m7_1148 -> m7_1149  [key=0, style=solid];
m7_1148 -> m7_17  [key=2, style=dotted];
m7_1149 -> m7_1150  [key=0, style=solid];
m7_1149 -> m7_1153  [key=2, style=dotted];
m7_1149 -> m7_1154  [key=2, style=dotted];
m7_1149 -> m7_1155  [key=2, style=dotted];
m7_1149 -> m7_17  [key=2, style=dotted];
m7_1150 -> m7_1151  [key=0, style=solid];
m7_1150 -> m7_15  [key=2, style=dotted];
m7_1150 -> m7_16  [key=2, style=dotted];
m7_1151 -> m7_1152  [key=0, style=solid];
m7_1151 -> m7_17  [key=2, style=dotted];
m7_1152 -> m7_1139  [color=blue, key=0, style=bold];
m7_435 -> m7_436  [key=0, style=solid];
m7_436 -> m7_437  [key=0, style=solid];
m7_436 -> m7_442  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_436 -> m7_436  [color=darkorchid, key=3, label="Local variable long i", style=bold];
m7_437 -> m7_438  [key=0, style=solid];
m7_437 -> m7_13  [key=2, style=dotted];
m7_437 -> m7_14  [key=2, style=dotted];
m7_437 -> m7_446  [key=2, style=dotted];
m7_437 -> m7_439  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_437 -> m7_443  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_442 -> m7_443  [key=0, style=solid];
m7_442 -> m7_448  [color=darkseagreen4, key=1, label=total, style=dashed];
m7_438 -> m7_439  [key=0, style=solid];
m7_438 -> m7_15  [key=2, style=dotted];
m7_439 -> m7_440  [key=0, style=solid];
m7_439 -> m7_17  [key=2, style=dotted];
m7_443 -> m7_444  [key=0, style=solid];
m7_443 -> m7_18  [key=2, style=dotted];
m7_443 -> m7_447  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_440 -> m7_441  [key=0, style=solid];
m7_440 -> m7_442  [color=darkseagreen4, key=1, label=j, style=dashed];
m7_440 -> m7_444  [color=darkseagreen4, key=1, label=j, style=dashed];
m7_440 -> m7_440  [color=darkorchid, key=3, label="Local variable int j", style=bold];
m7_441 -> m7_442  [key=0, style=solid];
m7_441 -> m7_445  [key=0, style=solid];
m7_444 -> m7_441  [key=0, style=solid];
m7_444 -> m7_444  [color=darkseagreen4, key=1, label=j, style=dashed];
m7_445 -> m7_435  [color=blue, key=0, style=bold];
m7_1600 -> m7_1601  [key=0, style=solid];
m7_1601 -> m7_1602  [key=0, style=solid];
m7_1601 -> m7_13  [key=2, style=dotted];
m7_1601 -> m7_14  [key=2, style=dotted];
m7_1601 -> m7_1603  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1601 -> m7_1604  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1601 -> m7_1607  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1602 -> m7_1603  [key=0, style=solid];
m7_1602 -> m7_138  [key=2, style=dotted];
m7_1602 -> m7_16  [key=2, style=dotted];
m7_1603 -> m7_1604  [key=0, style=solid];
m7_1603 -> m7_138  [key=2, style=dotted];
m7_1603 -> m7_16  [key=2, style=dotted];
m7_1604 -> m7_1605  [key=0, style=solid];
m7_1604 -> m7_18  [key=2, style=dotted];
m7_1604 -> m7_1606  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_1605 -> m7_1600  [color=blue, key=0, style=bold];
m7_1017 -> m7_1018  [key=0, style=solid];
m7_1018 -> m7_1019  [key=0, style=solid];
m7_1018 -> m7_14  [key=2, style=dotted];
m7_1019 -> m7_1020  [key=0, style=solid];
m7_1019 -> m7_13  [key=2, style=dotted];
m7_1019 -> m7_1021  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_1019 -> m7_1022  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_1019 -> m7_1023  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_1019 -> m7_1024  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_1019 -> m7_1025  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_1019 -> m7_1026  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_1019 -> m7_1027  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_1019 -> m7_1028  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_1019 -> m7_1029  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_1019 -> m7_1030  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_1019 -> m7_1031  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_1019 -> m7_1032  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_1019 -> m7_1033  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_1019 -> m7_1034  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_1019 -> m7_1035  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_1019 -> m7_1036  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_1020 -> m7_1021  [key=0, style=solid];
m7_1020 -> m7_15  [key=2, style=dotted];
m7_1020 -> m7_16  [key=2, style=dotted];
m7_1021 -> m7_1022  [key=0, style=solid];
m7_1021 -> m7_17  [key=2, style=dotted];
m7_1022 -> m7_1023  [key=0, style=solid];
m7_1022 -> m7_451  [key=2, style=dotted];
m7_1023 -> m7_1024  [key=0, style=solid];
m7_1023 -> m7_17  [key=2, style=dotted];
m7_1024 -> m7_1025  [key=0, style=solid];
m7_1024 -> m7_17  [key=2, style=dotted];
m7_1025 -> m7_1026  [key=0, style=solid];
m7_1025 -> m7_17  [key=2, style=dotted];
m7_1026 -> m7_1027  [key=0, style=solid];
m7_1026 -> m7_451  [key=2, style=dotted];
m7_1027 -> m7_1028  [key=0, style=solid];
m7_1027 -> m7_17  [key=2, style=dotted];
m7_1028 -> m7_1029  [key=0, style=solid];
m7_1028 -> m7_17  [key=2, style=dotted];
m7_1029 -> m7_1030  [key=0, style=solid];
m7_1029 -> m7_17  [key=2, style=dotted];
m7_1030 -> m7_1031  [key=0, style=solid];
m7_1030 -> m7_451  [key=2, style=dotted];
m7_1031 -> m7_1032  [key=0, style=solid];
m7_1031 -> m7_17  [key=2, style=dotted];
m7_1032 -> m7_1033  [key=0, style=solid];
m7_1032 -> m7_17  [key=2, style=dotted];
m7_1033 -> m7_1034  [key=0, style=solid];
m7_1033 -> m7_17  [key=2, style=dotted];
m7_1034 -> m7_1035  [key=0, style=solid];
m7_1034 -> m7_15  [key=2, style=dotted];
m7_1034 -> m7_16  [key=2, style=dotted];
m7_1035 -> m7_1036  [key=0, style=solid];
m7_1035 -> m7_17  [key=2, style=dotted];
m7_1036 -> m7_1037  [key=0, style=solid];
m7_1036 -> m7_15  [key=2, style=dotted];
m7_1036 -> m7_131  [key=2, style=dotted];
m7_1037 -> m7_1017  [color=blue, key=0, style=bold];
m7_1227 -> m7_1228  [key=0, style=solid];
m7_1228 -> m7_1229  [key=0, style=solid];
m7_1228 -> m7_1228  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_1229 -> m7_1230  [key=0, style=solid];
m7_1229 -> m7_13  [key=2, style=dotted];
m7_1229 -> m7_14  [key=2, style=dotted];
m7_1229 -> m7_1231  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1229 -> m7_1232  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1229 -> m7_1233  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1229 -> m7_1234  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1229 -> m7_1235  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1229 -> m7_1236  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1229 -> m7_1237  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1229 -> m7_1238  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1229 -> m7_1240  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1229 -> m7_1241  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1230 -> m7_1231  [key=0, style=solid];
m7_1230 -> m7_1243  [key=2, style=dotted];
m7_1231 -> m7_1232  [key=0, style=solid];
m7_1231 -> m7_15  [key=2, style=dotted];
m7_1231 -> m7_16  [key=2, style=dotted];
m7_1232 -> m7_1233  [key=0, style=solid];
m7_1232 -> m7_17  [key=2, style=dotted];
m7_1233 -> m7_1234  [key=0, style=solid];
m7_1233 -> m7_15  [key=2, style=dotted];
m7_1233 -> m7_16  [key=2, style=dotted];
m7_1234 -> m7_1235  [key=0, style=solid];
m7_1234 -> m7_17  [key=2, style=dotted];
m7_1235 -> m7_1236  [key=0, style=solid];
m7_1235 -> m7_1068  [key=2, style=dotted];
m7_1236 -> m7_1237  [key=0, style=solid];
m7_1236 -> m7_17  [key=2, style=dotted];
m7_1237 -> m7_1238  [key=0, style=solid];
m7_1237 -> m7_17  [key=2, style=dotted];
m7_1238 -> m7_1239  [key=0, style=solid];
m7_1240 -> m7_1241  [key=0, style=solid];
m7_1240 -> m7_15  [key=2, style=dotted];
m7_1240 -> m7_16  [key=2, style=dotted];
m7_1241 -> m7_1242  [key=0, style=solid];
m7_1241 -> m7_17  [key=2, style=dotted];
m7_1239 -> m7_1240  [key=0, style=solid];
m7_1239 -> m7_1226  [key=2, style=dotted];
m7_1239 -> m7_17  [key=2, style=dotted];
m7_1239 -> m7_1239  [color=darkseagreen4, key=1, label=dt, style=dashed];
m7_1242 -> m7_1227  [color=blue, key=0, style=bold];
m7_1741 -> m7_1742  [key=0, style=solid];
m7_1742 -> m7_1743  [key=0, style=solid];
m7_1742 -> m7_1753  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_1742 -> m7_1763  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_1742 -> m7_1773  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_1742 -> m7_1783  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_1742 -> m7_1742  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_1743 -> m7_1744  [key=0, style=solid];
m7_1743 -> m7_13  [key=2, style=dotted];
m7_1743 -> m7_14  [key=2, style=dotted];
m7_1743 -> m7_1745  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1743 -> m7_1746  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1743 -> m7_1747  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1743 -> m7_1748  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1743 -> m7_1749  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1743 -> m7_1750  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1743 -> m7_1751  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1743 -> m7_1752  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1753 -> m7_1754  [key=0, style=solid];
m7_1753 -> m7_13  [key=2, style=dotted];
m7_1753 -> m7_14  [key=2, style=dotted];
m7_1753 -> m7_1755  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1753 -> m7_1756  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1753 -> m7_1757  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1753 -> m7_1758  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1753 -> m7_1759  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1753 -> m7_1760  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1753 -> m7_1761  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1753 -> m7_1762  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1763 -> m7_1764  [key=0, style=solid];
m7_1763 -> m7_13  [key=2, style=dotted];
m7_1763 -> m7_14  [key=2, style=dotted];
m7_1763 -> m7_1765  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1763 -> m7_1766  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1763 -> m7_1767  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1763 -> m7_1768  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1763 -> m7_1769  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1763 -> m7_1770  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1763 -> m7_1771  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1763 -> m7_1772  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1773 -> m7_1774  [key=0, style=solid];
m7_1773 -> m7_13  [key=2, style=dotted];
m7_1773 -> m7_14  [key=2, style=dotted];
m7_1773 -> m7_1775  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1773 -> m7_1776  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1773 -> m7_1777  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1773 -> m7_1778  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1773 -> m7_1779  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1773 -> m7_1780  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1773 -> m7_1781  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1773 -> m7_1782  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1783 -> m7_1784  [key=0, style=solid];
m7_1783 -> m7_13  [key=2, style=dotted];
m7_1783 -> m7_14  [key=2, style=dotted];
m7_1783 -> m7_1785  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1783 -> m7_1786  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1783 -> m7_1787  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1783 -> m7_1788  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1783 -> m7_1789  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1783 -> m7_1790  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1783 -> m7_1791  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1783 -> m7_1792  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1744 -> m7_1745  [key=0, style=solid];
m7_1745 -> m7_1746  [key=0, style=solid];
m7_1745 -> m7_15  [key=2, style=dotted];
m7_1745 -> m7_16  [key=2, style=dotted];
m7_1746 -> m7_1747  [key=0, style=solid];
m7_1746 -> m7_15  [key=2, style=dotted];
m7_1746 -> m7_16  [key=2, style=dotted];
m7_1747 -> m7_1748  [key=0, style=solid];
m7_1747 -> m7_1794  [key=2, style=dotted];
m7_1747 -> m7_17  [key=2, style=dotted];
m7_1748 -> m7_1749  [key=0, style=solid];
m7_1748 -> m7_17  [key=2, style=dotted];
m7_1749 -> m7_1750  [key=0, style=solid];
m7_1749 -> m7_15  [key=2, style=dotted];
m7_1749 -> m7_16  [key=2, style=dotted];
m7_1750 -> m7_1751  [key=0, style=solid];
m7_1750 -> m7_1794  [key=2, style=dotted];
m7_1750 -> m7_17  [key=2, style=dotted];
m7_1751 -> m7_1752  [key=0, style=solid];
m7_1751 -> m7_17  [key=2, style=dotted];
m7_1752 -> m7_1753  [key=0, style=solid];
m7_1752 -> m7_15  [key=2, style=dotted];
m7_1752 -> m7_16  [key=2, style=dotted];
m7_1754 -> m7_1755  [key=0, style=solid];
m7_1755 -> m7_1756  [key=0, style=solid];
m7_1755 -> m7_15  [key=2, style=dotted];
m7_1755 -> m7_16  [key=2, style=dotted];
m7_1756 -> m7_1757  [key=0, style=solid];
m7_1756 -> m7_15  [key=2, style=dotted];
m7_1756 -> m7_16  [key=2, style=dotted];
m7_1757 -> m7_1758  [key=0, style=solid];
m7_1757 -> m7_1795  [key=2, style=dotted];
m7_1757 -> m7_17  [key=2, style=dotted];
m7_1758 -> m7_1759  [key=0, style=solid];
m7_1758 -> m7_17  [key=2, style=dotted];
m7_1759 -> m7_1760  [key=0, style=solid];
m7_1759 -> m7_15  [key=2, style=dotted];
m7_1759 -> m7_16  [key=2, style=dotted];
m7_1760 -> m7_1761  [key=0, style=solid];
m7_1760 -> m7_1795  [key=2, style=dotted];
m7_1760 -> m7_17  [key=2, style=dotted];
m7_1761 -> m7_1762  [key=0, style=solid];
m7_1761 -> m7_17  [key=2, style=dotted];
m7_1762 -> m7_1763  [key=0, style=solid];
m7_1762 -> m7_15  [key=2, style=dotted];
m7_1762 -> m7_16  [key=2, style=dotted];
m7_1764 -> m7_1765  [key=0, style=solid];
m7_1765 -> m7_1766  [key=0, style=solid];
m7_1765 -> m7_15  [key=2, style=dotted];
m7_1765 -> m7_16  [key=2, style=dotted];
m7_1766 -> m7_1767  [key=0, style=solid];
m7_1766 -> m7_15  [key=2, style=dotted];
m7_1766 -> m7_16  [key=2, style=dotted];
m7_1767 -> m7_1768  [key=0, style=solid];
m7_1767 -> m7_17  [key=2, style=dotted];
m7_1768 -> m7_1769  [key=0, style=solid];
m7_1768 -> m7_17  [key=2, style=dotted];
m7_1769 -> m7_1770  [key=0, style=solid];
m7_1769 -> m7_15  [key=2, style=dotted];
m7_1769 -> m7_16  [key=2, style=dotted];
m7_1770 -> m7_1771  [key=0, style=solid];
m7_1770 -> m7_17  [key=2, style=dotted];
m7_1771 -> m7_1772  [key=0, style=solid];
m7_1771 -> m7_17  [key=2, style=dotted];
m7_1772 -> m7_1773  [key=0, style=solid];
m7_1772 -> m7_15  [key=2, style=dotted];
m7_1772 -> m7_16  [key=2, style=dotted];
m7_1774 -> m7_1775  [key=0, style=solid];
m7_1775 -> m7_1776  [key=0, style=solid];
m7_1775 -> m7_15  [key=2, style=dotted];
m7_1775 -> m7_16  [key=2, style=dotted];
m7_1776 -> m7_1777  [key=0, style=solid];
m7_1776 -> m7_1068  [key=2, style=dotted];
m7_1777 -> m7_1778  [key=0, style=solid];
m7_1777 -> m7_1795  [key=2, style=dotted];
m7_1777 -> m7_17  [key=2, style=dotted];
m7_1778 -> m7_1779  [key=0, style=solid];
m7_1778 -> m7_17  [key=2, style=dotted];
m7_1779 -> m7_1780  [key=0, style=solid];
m7_1779 -> m7_1068  [key=2, style=dotted];
m7_1780 -> m7_1781  [key=0, style=solid];
m7_1780 -> m7_1795  [key=2, style=dotted];
m7_1780 -> m7_17  [key=2, style=dotted];
m7_1781 -> m7_1782  [key=0, style=solid];
m7_1781 -> m7_17  [key=2, style=dotted];
m7_1782 -> m7_1783  [key=0, style=solid];
m7_1782 -> m7_15  [key=2, style=dotted];
m7_1782 -> m7_16  [key=2, style=dotted];
m7_1784 -> m7_1785  [key=0, style=solid];
m7_1785 -> m7_1786  [key=0, style=solid];
m7_1785 -> m7_15  [key=2, style=dotted];
m7_1785 -> m7_16  [key=2, style=dotted];
m7_1786 -> m7_1787  [key=0, style=solid];
m7_1786 -> m7_1796  [key=2, style=dotted];
m7_1787 -> m7_1788  [key=0, style=solid];
m7_1787 -> m7_1794  [key=2, style=dotted];
m7_1787 -> m7_17  [key=2, style=dotted];
m7_1788 -> m7_1789  [key=0, style=solid];
m7_1788 -> m7_17  [key=2, style=dotted];
m7_1789 -> m7_1790  [key=0, style=solid];
m7_1789 -> m7_1796  [key=2, style=dotted];
m7_1790 -> m7_1791  [key=0, style=solid];
m7_1790 -> m7_1794  [key=2, style=dotted];
m7_1790 -> m7_17  [key=2, style=dotted];
m7_1791 -> m7_1792  [key=0, style=solid];
m7_1791 -> m7_17  [key=2, style=dotted];
m7_1792 -> m7_1793  [key=0, style=solid];
m7_1792 -> m7_15  [key=2, style=dotted];
m7_1792 -> m7_16  [key=2, style=dotted];
m7_1793 -> m7_1741  [color=blue, key=0, style=bold];
m7_1882 -> m7_1883  [key=0, style=solid];
m7_1883 -> m7_1884  [key=0, style=solid];
m7_1883 -> m7_1885  [key=2, style=dotted];
m7_1884 -> m7_1882  [color=blue, key=0, style=bold];
m7_1051 -> m7_1052  [key=0, style=solid];
m7_1052 -> m7_1053  [key=0, style=solid];
m7_1052 -> m7_13  [key=2, style=dotted];
m7_1052 -> m7_14  [key=2, style=dotted];
m7_1052 -> m7_1054  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1053 -> m7_1054  [key=0, style=solid];
m7_1053 -> m7_975  [key=2, style=dotted];
m7_1053 -> m7_551  [key=2, style=dotted];
m7_1054 -> m7_1055  [key=0, style=solid];
m7_1054 -> m7_17  [key=2, style=dotted];
m7_1055 -> m7_1051  [color=blue, key=0, style=bold];
m7_1609 -> m7_1610  [key=0, style=solid];
m7_1610 -> m7_1611  [key=0, style=solid];
m7_1611 -> m7_1612  [key=0, style=solid];
m7_1611 -> m7_1652  [key=2, style=dotted];
m7_1611 -> m7_1613  [color=darkseagreen4, key=1, label=d, style=dashed];
m7_1612 -> m7_1613  [key=0, style=solid];
m7_1612 -> m7_1243  [key=2, style=dotted];
m7_1612 -> m7_1653  [key=2, style=dotted];
m7_1612 -> m7_1654  [key=2, style=dotted];
m7_1613 -> m7_1614  [key=0, style=solid];
m7_1613 -> m7_1655  [key=2, style=dotted];
m7_1613 -> m7_1654  [key=2, style=dotted];
m7_1614 -> m7_1615  [key=0, style=solid];
m7_1614 -> m7_1633  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_1614 -> m7_1614  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_1615 -> m7_1616  [key=0, style=solid];
m7_1615 -> m7_13  [key=2, style=dotted];
m7_1615 -> m7_14  [key=2, style=dotted];
m7_1615 -> m7_1617  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1615 -> m7_1618  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1615 -> m7_1619  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1615 -> m7_1620  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1615 -> m7_1621  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1615 -> m7_1622  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1615 -> m7_1623  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1615 -> m7_1624  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1615 -> m7_1625  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1615 -> m7_1626  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1615 -> m7_1627  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1615 -> m7_1628  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1615 -> m7_1629  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1615 -> m7_1630  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1615 -> m7_1631  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1615 -> m7_1632  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1633 -> m7_1634  [key=0, style=solid];
m7_1633 -> m7_13  [key=2, style=dotted];
m7_1633 -> m7_14  [key=2, style=dotted];
m7_1633 -> m7_1635  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1633 -> m7_1636  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1633 -> m7_1637  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1633 -> m7_1638  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1633 -> m7_1639  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1633 -> m7_1640  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1633 -> m7_1641  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1633 -> m7_1642  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1633 -> m7_1643  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1633 -> m7_1644  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1633 -> m7_1645  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1633 -> m7_1646  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1633 -> m7_1647  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1633 -> m7_1648  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1633 -> m7_1649  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1633 -> m7_1650  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1616 -> m7_1617  [key=0, style=solid];
m7_1616 -> m7_15  [key=2, style=dotted];
m7_1617 -> m7_1618  [key=0, style=solid];
m7_1617 -> m7_15  [key=2, style=dotted];
m7_1618 -> m7_1619  [key=0, style=solid];
m7_1618 -> m7_17  [key=2, style=dotted];
m7_1619 -> m7_1620  [key=0, style=solid];
m7_1619 -> m7_17  [key=2, style=dotted];
m7_1620 -> m7_1621  [key=0, style=solid];
m7_1620 -> m7_15  [key=2, style=dotted];
m7_1621 -> m7_1622  [key=0, style=solid];
m7_1621 -> m7_17  [key=2, style=dotted];
m7_1622 -> m7_1623  [key=0, style=solid];
m7_1622 -> m7_17  [key=2, style=dotted];
m7_1623 -> m7_1624  [key=0, style=solid];
m7_1623 -> m7_15  [key=2, style=dotted];
m7_1624 -> m7_1625  [key=0, style=solid];
m7_1624 -> m7_17  [key=2, style=dotted];
m7_1625 -> m7_1626  [key=0, style=solid];
m7_1625 -> m7_17  [key=2, style=dotted];
m7_1626 -> m7_1627  [key=0, style=solid];
m7_1626 -> m7_15  [key=2, style=dotted];
m7_1627 -> m7_1628  [key=0, style=solid];
m7_1627 -> m7_17  [key=2, style=dotted];
m7_1628 -> m7_1629  [key=0, style=solid];
m7_1628 -> m7_17  [key=2, style=dotted];
m7_1629 -> m7_1630  [key=0, style=solid];
m7_1629 -> m7_15  [key=2, style=dotted];
m7_1630 -> m7_1631  [key=0, style=solid];
m7_1630 -> m7_17  [key=2, style=dotted];
m7_1631 -> m7_1632  [key=0, style=solid];
m7_1631 -> m7_17  [key=2, style=dotted];
m7_1632 -> m7_1633  [key=0, style=solid];
m7_1632 -> m7_15  [key=2, style=dotted];
m7_1634 -> m7_1635  [key=0, style=solid];
m7_1634 -> m7_15  [key=2, style=dotted];
m7_1635 -> m7_1636  [key=0, style=solid];
m7_1635 -> m7_747  [key=2, style=dotted];
m7_1636 -> m7_1637  [key=0, style=solid];
m7_1636 -> m7_17  [key=2, style=dotted];
m7_1637 -> m7_1638  [key=0, style=solid];
m7_1637 -> m7_17  [key=2, style=dotted];
m7_1638 -> m7_1639  [key=0, style=solid];
m7_1638 -> m7_747  [key=2, style=dotted];
m7_1639 -> m7_1640  [key=0, style=solid];
m7_1639 -> m7_17  [key=2, style=dotted];
m7_1640 -> m7_1641  [key=0, style=solid];
m7_1640 -> m7_17  [key=2, style=dotted];
m7_1641 -> m7_1642  [key=0, style=solid];
m7_1641 -> m7_747  [key=2, style=dotted];
m7_1642 -> m7_1643  [key=0, style=solid];
m7_1642 -> m7_17  [key=2, style=dotted];
m7_1643 -> m7_1644  [key=0, style=solid];
m7_1643 -> m7_17  [key=2, style=dotted];
m7_1644 -> m7_1645  [key=0, style=solid];
m7_1644 -> m7_747  [key=2, style=dotted];
m7_1645 -> m7_1646  [key=0, style=solid];
m7_1645 -> m7_17  [key=2, style=dotted];
m7_1646 -> m7_1647  [key=0, style=solid];
m7_1646 -> m7_17  [key=2, style=dotted];
m7_1647 -> m7_1648  [key=0, style=solid];
m7_1647 -> m7_747  [key=2, style=dotted];
m7_1648 -> m7_1649  [key=0, style=solid];
m7_1648 -> m7_17  [key=2, style=dotted];
m7_1649 -> m7_1650  [key=0, style=solid];
m7_1649 -> m7_17  [key=2, style=dotted];
m7_1650 -> m7_1651  [key=0, style=solid];
m7_1650 -> m7_15  [key=2, style=dotted];
m7_1651 -> m7_1609  [color=blue, key=0, style=bold];
m7_1182 -> m7_1183  [key=0, style=solid];
m7_1183 -> m7_1184  [key=0, style=solid];
m7_1183 -> m7_1183  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_1184 -> m7_1185  [key=0, style=solid];
m7_1184 -> m7_13  [key=2, style=dotted];
m7_1184 -> m7_14  [key=2, style=dotted];
m7_1184 -> m7_1186  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1184 -> m7_1187  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1184 -> m7_1188  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1184 -> m7_1189  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1184 -> m7_1190  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1184 -> m7_1191  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1184 -> m7_1192  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1184 -> m7_1193  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1184 -> m7_1194  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1185 -> m7_1186  [key=0, style=solid];
m7_1185 -> m7_15  [key=2, style=dotted];
m7_1185 -> m7_16  [key=2, style=dotted];
m7_1186 -> m7_1187  [key=0, style=solid];
m7_1186 -> m7_17  [key=2, style=dotted];
m7_1187 -> m7_1188  [key=0, style=solid];
m7_1187 -> m7_15  [key=2, style=dotted];
m7_1187 -> m7_16  [key=2, style=dotted];
m7_1188 -> m7_1189  [key=0, style=solid];
m7_1188 -> m7_17  [key=2, style=dotted];
m7_1189 -> m7_1190  [key=0, style=solid];
m7_1189 -> m7_1068  [key=2, style=dotted];
m7_1190 -> m7_1191  [key=0, style=solid];
m7_1190 -> m7_17  [key=2, style=dotted];
m7_1191 -> m7_1192  [key=0, style=solid];
m7_1191 -> m7_17  [key=2, style=dotted];
m7_1192 -> m7_1193  [key=0, style=solid];
m7_1192 -> m7_1153  [key=2, style=dotted];
m7_1192 -> m7_1154  [key=2, style=dotted];
m7_1192 -> m7_1155  [key=2, style=dotted];
m7_1192 -> m7_17  [key=2, style=dotted];
m7_1193 -> m7_1194  [key=0, style=solid];
m7_1193 -> m7_15  [key=2, style=dotted];
m7_1193 -> m7_16  [key=2, style=dotted];
m7_1194 -> m7_1195  [key=0, style=solid];
m7_1194 -> m7_17  [key=2, style=dotted];
m7_1195 -> m7_1182  [color=blue, key=0, style=bold];
m7_545 -> m7_546  [key=0, style=solid];
m7_546 -> m7_547  [key=0, style=solid];
m7_546 -> m7_13  [key=2, style=dotted];
m7_546 -> m7_14  [key=2, style=dotted];
m7_546 -> m7_548  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_546 -> m7_549  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_547 -> m7_548  [key=0, style=solid];
m7_547 -> m7_138  [key=2, style=dotted];
m7_547 -> m7_16  [key=2, style=dotted];
m7_548 -> m7_549  [key=0, style=solid];
m7_548 -> m7_534  [key=2, style=dotted];
m7_548 -> m7_551  [key=2, style=dotted];
m7_549 -> m7_550  [key=0, style=solid];
m7_549 -> m7_17  [key=2, style=dotted];
m7_550 -> m7_545  [color=blue, key=0, style=bold];
m7_1584 -> m7_1585  [key=0, style=solid];
m7_1585 -> m7_1586  [key=0, style=solid];
m7_1585 -> m7_1585  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_1586 -> m7_1587  [key=0, style=solid];
m7_1586 -> m7_13  [key=2, style=dotted];
m7_1586 -> m7_14  [key=2, style=dotted];
m7_1586 -> m7_1588  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1586 -> m7_1589  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1586 -> m7_1590  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1586 -> m7_1591  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1586 -> m7_1592  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1586 -> m7_1593  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1586 -> m7_1594  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1586 -> m7_1595  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1586 -> m7_1596  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1586 -> m7_1597  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1586 -> m7_1598  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1587 -> m7_1588  [key=0, style=solid];
m7_1587 -> m7_15  [key=2, style=dotted];
m7_1588 -> m7_1589  [key=0, style=solid];
m7_1588 -> m7_17  [key=2, style=dotted];
m7_1589 -> m7_1590  [key=0, style=solid];
m7_1589 -> m7_15  [key=2, style=dotted];
m7_1590 -> m7_1591  [key=0, style=solid];
m7_1590 -> m7_17  [key=2, style=dotted];
m7_1591 -> m7_1592  [key=0, style=solid];
m7_1591 -> m7_15  [key=2, style=dotted];
m7_1592 -> m7_1593  [key=0, style=solid];
m7_1592 -> m7_17  [key=2, style=dotted];
m7_1593 -> m7_1594  [key=0, style=solid];
m7_1593 -> m7_15  [key=2, style=dotted];
m7_1594 -> m7_1595  [key=0, style=solid];
m7_1594 -> m7_17  [key=2, style=dotted];
m7_1595 -> m7_1596  [key=0, style=solid];
m7_1595 -> m7_15  [key=2, style=dotted];
m7_1596 -> m7_1597  [key=0, style=solid];
m7_1596 -> m7_17  [key=2, style=dotted];
m7_1597 -> m7_1598  [key=0, style=solid];
m7_1597 -> m7_15  [key=2, style=dotted];
m7_1598 -> m7_1599  [key=0, style=solid];
m7_1598 -> m7_17  [key=2, style=dotted];
m7_1599 -> m7_1584  [color=blue, key=0, style=bold];
m7_1577 -> m7_1578  [key=0, style=solid];
m7_1578 -> m7_1579  [key=0, style=solid];
m7_1578 -> m7_1578  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_1579 -> m7_1580  [key=0, style=solid];
m7_1579 -> m7_13  [key=2, style=dotted];
m7_1579 -> m7_14  [key=2, style=dotted];
m7_1579 -> m7_1581  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1579 -> m7_1582  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1580 -> m7_1581  [key=0, style=solid];
m7_1580 -> m7_747  [key=2, style=dotted];
m7_1581 -> m7_1582  [key=0, style=solid];
m7_1581 -> m7_17  [key=2, style=dotted];
m7_1582 -> m7_1583  [key=0, style=solid];
m7_1582 -> m7_17  [key=2, style=dotted];
m7_1583 -> m7_1577  [color=blue, key=0, style=bold];
m7_1298 -> m7_1299  [key=0, style=solid];
m7_1299 -> m7_1300  [key=0, style=solid];
m7_1299 -> m7_13  [key=2, style=dotted];
m7_1299 -> m7_14  [key=2, style=dotted];
m7_1299 -> m7_1303  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1300 -> m7_1301  [key=0, style=solid];
m7_1300 -> m7_18  [key=2, style=dotted];
m7_1300 -> m7_1302  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_1301 -> m7_1298  [color=blue, key=0, style=bold];
m7_725 -> m7_726  [key=0, style=solid];
m7_726 -> m7_727  [key=0, style=solid];
m7_726 -> m7_682  [color=darkorchid, key=3, label="Local variable Newtonsoft.Json.JsonTextReader reader", style=bold];
m7_727 -> m7_728  [key=0, style=solid];
m7_727 -> m7_13  [key=2, style=dotted];
m7_727 -> m7_14  [key=2, style=dotted];
m7_728 -> m7_729  [key=0, style=solid];
m7_728 -> m7_747  [key=2, style=dotted];
m7_728 -> m7_17  [key=2, style=dotted];
m7_729 -> m7_730  [key=0, style=solid];
m7_729 -> m7_13  [key=2, style=dotted];
m7_729 -> m7_14  [key=2, style=dotted];
m7_730 -> m7_731  [key=0, style=solid];
m7_730 -> m7_747  [key=2, style=dotted];
m7_730 -> m7_17  [key=2, style=dotted];
m7_731 -> m7_732  [key=0, style=solid];
m7_731 -> m7_13  [key=2, style=dotted];
m7_731 -> m7_14  [key=2, style=dotted];
m7_732 -> m7_733  [key=0, style=solid];
m7_732 -> m7_747  [key=2, style=dotted];
m7_732 -> m7_17  [key=2, style=dotted];
m7_733 -> m7_734  [key=0, style=solid];
m7_733 -> m7_13  [key=2, style=dotted];
m7_733 -> m7_14  [key=2, style=dotted];
m7_734 -> m7_735  [key=0, style=solid];
m7_734 -> m7_747  [key=2, style=dotted];
m7_734 -> m7_17  [key=2, style=dotted];
m7_735 -> m7_736  [key=0, style=solid];
m7_735 -> m7_13  [key=2, style=dotted];
m7_735 -> m7_14  [key=2, style=dotted];
m7_735 -> m7_749  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_736 -> m7_737  [key=0, style=solid];
m7_736 -> m7_18  [key=2, style=dotted];
m7_736 -> m7_748  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_737 -> m7_738  [key=0, style=solid];
m7_737 -> m7_13  [key=2, style=dotted];
m7_737 -> m7_14  [key=2, style=dotted];
m7_737 -> m7_739  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_737 -> m7_752  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_738 -> m7_739  [key=0, style=solid];
m7_739 -> m7_740  [key=0, style=solid];
m7_739 -> m7_18  [key=2, style=dotted];
m7_739 -> m7_751  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_740 -> m7_741  [key=0, style=solid];
m7_740 -> m7_13  [key=2, style=dotted];
m7_740 -> m7_14  [key=2, style=dotted];
m7_741 -> m7_742  [key=0, style=solid];
m7_741 -> m7_747  [key=2, style=dotted];
m7_741 -> m7_17  [key=2, style=dotted];
m7_742 -> m7_743  [key=0, style=solid];
m7_742 -> m7_13  [key=2, style=dotted];
m7_742 -> m7_14  [key=2, style=dotted];
m7_743 -> m7_744  [key=0, style=solid];
m7_743 -> m7_747  [key=2, style=dotted];
m7_743 -> m7_17  [key=2, style=dotted];
m7_744 -> m7_745  [key=0, style=solid];
m7_744 -> m7_13  [key=2, style=dotted];
m7_744 -> m7_14  [key=2, style=dotted];
m7_744 -> m7_755  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_745 -> m7_746  [key=0, style=solid];
m7_745 -> m7_18  [key=2, style=dotted];
m7_745 -> m7_754  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_746 -> m7_725  [color=blue, key=0, style=bold];
m7_1260 -> m7_1261  [key=0, style=solid];
m7_1261 -> m7_1262  [key=0, style=solid];
m7_1261 -> m7_1261  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_1262 -> m7_1263  [key=0, style=solid];
m7_1262 -> m7_13  [key=2, style=dotted];
m7_1262 -> m7_14  [key=2, style=dotted];
m7_1262 -> m7_1264  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1262 -> m7_1265  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1262 -> m7_1266  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1262 -> m7_1267  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1262 -> m7_1268  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1262 -> m7_1269  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1262 -> m7_1270  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1263 -> m7_1264  [key=0, style=solid];
m7_1263 -> m7_15  [key=2, style=dotted];
m7_1263 -> m7_16  [key=2, style=dotted];
m7_1264 -> m7_1265  [key=0, style=solid];
m7_1264 -> m7_17  [key=2, style=dotted];
m7_1265 -> m7_1266  [key=0, style=solid];
m7_1265 -> m7_15  [key=2, style=dotted];
m7_1265 -> m7_16  [key=2, style=dotted];
m7_1266 -> m7_1267  [key=0, style=solid];
m7_1266 -> m7_17  [key=2, style=dotted];
m7_1267 -> m7_1268  [key=0, style=solid];
m7_1267 -> m7_747  [key=2, style=dotted];
m7_1268 -> m7_1269  [key=0, style=solid];
m7_1268 -> m7_17  [key=2, style=dotted];
m7_1269 -> m7_1270  [key=0, style=solid];
m7_1269 -> m7_17  [key=2, style=dotted];
m7_1270 -> m7_1271  [key=0, style=solid];
m7_1270 -> m7_17  [key=2, style=dotted];
m7_1271 -> m7_1260  [color=blue, key=0, style=bold];
m7_22 -> m7_23  [key=0, style=solid];
m7_23 -> m7_24  [key=0, style=solid];
m7_23 -> m7_23  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_24 -> m7_25  [key=0, style=solid];
m7_24 -> m7_13  [key=2, style=dotted];
m7_24 -> m7_14  [key=2, style=dotted];
m7_24 -> m7_26  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_24 -> m7_27  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_24 -> m7_28  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_24 -> m7_29  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_24 -> m7_30  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_24 -> m7_31  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_24 -> m7_32  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_24 -> m7_33  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_24 -> m7_34  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_24 -> m7_35  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_24 -> m7_36  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_24 -> m7_37  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_24 -> m7_38  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_24 -> m7_39  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_24 -> m7_40  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_24 -> m7_41  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_24 -> m7_42  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_24 -> m7_43  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_24 -> m7_44  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_24 -> m7_45  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_25 -> m7_26  [key=0, style=solid];
m7_26 -> m7_27  [key=0, style=solid];
m7_26 -> m7_15  [key=2, style=dotted];
m7_26 -> m7_16  [key=2, style=dotted];
m7_27 -> m7_28  [key=0, style=solid];
m7_27 -> m7_17  [key=2, style=dotted];
m7_28 -> m7_29  [key=0, style=solid];
m7_28 -> m7_15  [key=2, style=dotted];
m7_28 -> m7_16  [key=2, style=dotted];
m7_29 -> m7_30  [key=0, style=solid];
m7_29 -> m7_17  [key=2, style=dotted];
m7_30 -> m7_31  [key=0, style=solid];
m7_30 -> m7_17  [key=2, style=dotted];
m7_31 -> m7_32  [key=0, style=solid];
m7_31 -> m7_17  [key=2, style=dotted];
m7_32 -> m7_33  [key=0, style=solid];
m7_32 -> m7_15  [key=2, style=dotted];
m7_32 -> m7_16  [key=2, style=dotted];
m7_33 -> m7_34  [key=0, style=solid];
m7_33 -> m7_17  [key=2, style=dotted];
m7_34 -> m7_35  [key=0, style=solid];
m7_34 -> m7_17  [key=2, style=dotted];
m7_35 -> m7_36  [key=0, style=solid];
m7_35 -> m7_17  [key=2, style=dotted];
m7_36 -> m7_37  [key=0, style=solid];
m7_36 -> m7_15  [key=2, style=dotted];
m7_36 -> m7_16  [key=2, style=dotted];
m7_37 -> m7_38  [key=0, style=solid];
m7_37 -> m7_17  [key=2, style=dotted];
m7_38 -> m7_39  [key=0, style=solid];
m7_38 -> m7_17  [key=2, style=dotted];
m7_39 -> m7_40  [key=0, style=solid];
m7_39 -> m7_17  [key=2, style=dotted];
m7_40 -> m7_41  [key=0, style=solid];
m7_40 -> m7_15  [key=2, style=dotted];
m7_40 -> m7_16  [key=2, style=dotted];
m7_41 -> m7_42  [key=0, style=solid];
m7_41 -> m7_47  [key=2, style=dotted];
m7_41 -> m7_17  [key=2, style=dotted];
m7_42 -> m7_43  [key=0, style=solid];
m7_42 -> m7_17  [key=2, style=dotted];
m7_43 -> m7_44  [key=0, style=solid];
m7_43 -> m7_17  [key=2, style=dotted];
m7_44 -> m7_45  [key=0, style=solid];
m7_44 -> m7_15  [key=2, style=dotted];
m7_44 -> m7_16  [key=2, style=dotted];
m7_45 -> m7_46  [key=0, style=solid];
m7_45 -> m7_17  [key=2, style=dotted];
m7_46 -> m7_22  [color=blue, key=0, style=bold];
m7_618 -> m7_619  [key=0, style=solid];
m7_619 -> m7_620  [key=0, style=solid];
m7_619 -> m7_536  [color=darkorchid, key=3, label="Local variable string helloWorld", style=bold];
m7_620 -> m7_621  [key=0, style=solid];
m7_620 -> m7_115  [key=2, style=dotted];
m7_620 -> m7_627  [color=darkseagreen4, key=1, label=helloWorldData, style=dashed];
m7_621 -> m7_622  [key=0, style=solid];
m7_621 -> m7_13  [key=2, style=dotted];
m7_621 -> m7_14  [key=2, style=dotted];
m7_621 -> m7_541  [key=2, style=dotted];
m7_621 -> m7_623  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_621 -> m7_624  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_621 -> m7_625  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_621 -> m7_626  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_621 -> m7_628  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_621 -> m7_629  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_621 -> m7_630  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_621 -> m7_631  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_627 -> m7_628  [key=0, style=solid];
m7_627 -> m7_633  [key=2, style=dotted];
m7_622 -> m7_623  [key=0, style=solid];
m7_622 -> m7_138  [key=2, style=dotted];
m7_622 -> m7_16  [key=2, style=dotted];
m7_623 -> m7_624  [key=0, style=solid];
m7_623 -> m7_17  [key=2, style=dotted];
m7_624 -> m7_625  [key=0, style=solid];
m7_624 -> m7_138  [key=2, style=dotted];
m7_624 -> m7_16  [key=2, style=dotted];
m7_625 -> m7_626  [key=0, style=solid];
m7_625 -> m7_17  [key=2, style=dotted];
m7_626 -> m7_627  [key=0, style=solid];
m7_626 -> m7_534  [key=2, style=dotted];
m7_628 -> m7_629  [key=0, style=solid];
m7_628 -> m7_17  [key=2, style=dotted];
m7_629 -> m7_630  [key=0, style=solid];
m7_629 -> m7_138  [key=2, style=dotted];
m7_629 -> m7_16  [key=2, style=dotted];
m7_630 -> m7_631  [key=0, style=solid];
m7_630 -> m7_17  [key=2, style=dotted];
m7_631 -> m7_632  [key=0, style=solid];
m7_631 -> m7_138  [key=2, style=dotted];
m7_631 -> m7_131  [key=2, style=dotted];
m7_632 -> m7_618  [color=blue, key=0, style=bold];
m7_1056 -> m7_1057  [key=0, style=solid];
m7_1057 -> m7_1058  [key=0, style=solid];
m7_1057 -> m7_13  [key=2, style=dotted];
m7_1057 -> m7_14  [key=2, style=dotted];
m7_1057 -> m7_1061  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1058 -> m7_1059  [key=0, style=solid];
m7_1058 -> m7_18  [key=2, style=dotted];
m7_1058 -> m7_1060  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_1059 -> m7_1056  [color=blue, key=0, style=bold];
m7_1491 -> m7_1492  [key=0, style=solid];
m7_1492 -> m7_1493  [key=0, style=solid];
m7_1492 -> m7_1492  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_1493 -> m7_1494  [key=0, style=solid];
m7_1493 -> m7_13  [key=2, style=dotted];
m7_1493 -> m7_14  [key=2, style=dotted];
m7_1493 -> m7_1495  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1493 -> m7_1496  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1493 -> m7_1497  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1494 -> m7_1495  [key=0, style=solid];
m7_1494 -> m7_15  [key=2, style=dotted];
m7_1494 -> m7_16  [key=2, style=dotted];
m7_1495 -> m7_1496  [key=0, style=solid];
m7_1495 -> m7_17  [key=2, style=dotted];
m7_1496 -> m7_1497  [key=0, style=solid];
m7_1496 -> m7_15  [key=2, style=dotted];
m7_1496 -> m7_16  [key=2, style=dotted];
m7_1497 -> m7_1498  [key=0, style=solid];
m7_1497 -> m7_17  [key=2, style=dotted];
m7_1498 -> m7_1491  [color=blue, key=0, style=bold];
m7_1244 -> m7_1245  [key=0, style=solid];
m7_1245 -> m7_1246  [key=0, style=solid];
m7_1245 -> m7_1245  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_1246 -> m7_1247  [key=0, style=solid];
m7_1246 -> m7_13  [key=2, style=dotted];
m7_1246 -> m7_14  [key=2, style=dotted];
m7_1246 -> m7_1248  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1246 -> m7_1249  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1246 -> m7_1250  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1246 -> m7_1251  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1246 -> m7_1252  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1246 -> m7_1253  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1246 -> m7_1254  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1246 -> m7_1255  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1246 -> m7_1257  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1246 -> m7_1258  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1247 -> m7_1248  [key=0, style=solid];
m7_1247 -> m7_1243  [key=2, style=dotted];
m7_1248 -> m7_1249  [key=0, style=solid];
m7_1248 -> m7_15  [key=2, style=dotted];
m7_1248 -> m7_16  [key=2, style=dotted];
m7_1249 -> m7_1250  [key=0, style=solid];
m7_1249 -> m7_17  [key=2, style=dotted];
m7_1250 -> m7_1251  [key=0, style=solid];
m7_1250 -> m7_15  [key=2, style=dotted];
m7_1250 -> m7_16  [key=2, style=dotted];
m7_1251 -> m7_1252  [key=0, style=solid];
m7_1251 -> m7_17  [key=2, style=dotted];
m7_1252 -> m7_1253  [key=0, style=solid];
m7_1252 -> m7_1068  [key=2, style=dotted];
m7_1253 -> m7_1254  [key=0, style=solid];
m7_1253 -> m7_17  [key=2, style=dotted];
m7_1254 -> m7_1255  [key=0, style=solid];
m7_1254 -> m7_17  [key=2, style=dotted];
m7_1255 -> m7_1256  [key=0, style=solid];
m7_1257 -> m7_1258  [key=0, style=solid];
m7_1257 -> m7_15  [key=2, style=dotted];
m7_1257 -> m7_16  [key=2, style=dotted];
m7_1258 -> m7_1259  [key=0, style=solid];
m7_1258 -> m7_17  [key=2, style=dotted];
m7_1256 -> m7_1257  [key=0, style=solid];
m7_1256 -> m7_1226  [key=2, style=dotted];
m7_1256 -> m7_17  [key=2, style=dotted];
m7_1256 -> m7_1256  [color=darkseagreen4, key=1, label=dt, style=dashed];
m7_1259 -> m7_1244  [color=blue, key=0, style=bold];
m7_452 -> m7_453  [key=0, style=solid];
m7_453 -> m7_454  [key=0, style=solid];
m7_453 -> m7_457  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_453 -> m7_460  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_453 -> m7_453  [color=darkorchid, key=3, label="Local variable long i", style=bold];
m7_454 -> m7_455  [key=0, style=solid];
m7_454 -> m7_13  [key=2, style=dotted];
m7_454 -> m7_14  [key=2, style=dotted];
m7_454 -> m7_446  [key=2, style=dotted];
m7_454 -> m7_456  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_454 -> m7_457  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_454 -> m7_461  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_457 -> m7_458  [key=0, style=solid];
m7_457 -> m7_17  [key=2, style=dotted];
m7_460 -> m7_461  [key=0, style=solid];
m7_460 -> m7_465  [color=darkseagreen4, key=1, label=total, style=dashed];
m7_455 -> m7_456  [key=0, style=solid];
m7_455 -> m7_15  [key=2, style=dotted];
m7_456 -> m7_457  [key=0, style=solid];
m7_456 -> m7_17  [key=2, style=dotted];
m7_461 -> m7_462  [key=0, style=solid];
m7_461 -> m7_18  [key=2, style=dotted];
m7_461 -> m7_464  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_458 -> m7_459  [key=0, style=solid];
m7_458 -> m7_460  [color=darkseagreen4, key=1, label=j, style=dashed];
m7_458 -> m7_462  [color=darkseagreen4, key=1, label=j, style=dashed];
m7_458 -> m7_440  [color=darkorchid, key=3, label="Local variable int j", style=bold];
m7_459 -> m7_460  [key=0, style=solid];
m7_459 -> m7_463  [key=0, style=solid];
m7_462 -> m7_459  [key=0, style=solid];
m7_462 -> m7_462  [color=darkseagreen4, key=1, label=j, style=dashed];
m7_463 -> m7_452  [color=blue, key=0, style=bold];
m7_1111 -> m7_1112  [key=0, style=solid];
m7_1112 -> m7_1113  [key=0, style=solid];
m7_1112 -> m7_1112  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_1113 -> m7_1114  [key=0, style=solid];
m7_1113 -> m7_13  [key=2, style=dotted];
m7_1113 -> m7_14  [key=2, style=dotted];
m7_1113 -> m7_1115  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1113 -> m7_1116  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1113 -> m7_1117  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1113 -> m7_1118  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1113 -> m7_1119  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1113 -> m7_1120  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1113 -> m7_1121  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1113 -> m7_1122  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1113 -> m7_1123  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1113 -> m7_1124  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1114 -> m7_1115  [key=0, style=solid];
m7_1114 -> m7_15  [key=2, style=dotted];
m7_1114 -> m7_16  [key=2, style=dotted];
m7_1115 -> m7_1116  [key=0, style=solid];
m7_1115 -> m7_17  [key=2, style=dotted];
m7_1116 -> m7_1117  [key=0, style=solid];
m7_1116 -> m7_15  [key=2, style=dotted];
m7_1116 -> m7_16  [key=2, style=dotted];
m7_1117 -> m7_1118  [key=0, style=solid];
m7_1117 -> m7_17  [key=2, style=dotted];
m7_1118 -> m7_1119  [key=0, style=solid];
m7_1118 -> m7_17  [key=2, style=dotted];
m7_1119 -> m7_1120  [key=0, style=solid];
m7_1119 -> m7_15  [key=2, style=dotted];
m7_1119 -> m7_16  [key=2, style=dotted];
m7_1120 -> m7_1121  [key=0, style=solid];
m7_1120 -> m7_17  [key=2, style=dotted];
m7_1121 -> m7_1122  [key=0, style=solid];
m7_1121 -> m7_17  [key=2, style=dotted];
m7_1122 -> m7_1123  [key=0, style=solid];
m7_1122 -> m7_15  [key=2, style=dotted];
m7_1122 -> m7_16  [key=2, style=dotted];
m7_1123 -> m7_1124  [key=0, style=solid];
m7_1123 -> m7_17  [key=2, style=dotted];
m7_1124 -> m7_1125  [key=0, style=solid];
m7_1124 -> m7_15  [key=2, style=dotted];
m7_1124 -> m7_131  [key=2, style=dotted];
m7_1125 -> m7_1111  [color=blue, key=0, style=bold];
m7_1069 -> m7_1070  [key=0, style=solid];
m7_1070 -> m7_1071  [key=0, style=solid];
m7_1070 -> m7_13  [key=2, style=dotted];
m7_1070 -> m7_14  [key=2, style=dotted];
m7_1070 -> m7_1074  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1071 -> m7_1072  [key=0, style=solid];
m7_1071 -> m7_18  [key=2, style=dotted];
m7_1071 -> m7_1073  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_1072 -> m7_1069  [color=blue, key=0, style=bold];
m7_535 -> m7_536  [key=0, style=solid];
m7_536 -> m7_537  [key=0, style=solid];
m7_536 -> m7_536  [color=darkorchid, key=3, label="Local variable string helloWorld", style=bold];
m7_537 -> m7_538  [key=0, style=solid];
m7_537 -> m7_115  [key=2, style=dotted];
m7_538 -> m7_539  [key=0, style=solid];
m7_538 -> m7_13  [key=2, style=dotted];
m7_538 -> m7_14  [key=2, style=dotted];
m7_538 -> m7_541  [key=2, style=dotted];
m7_538 -> m7_543  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_539 -> m7_540  [key=0, style=solid];
m7_539 -> m7_18  [key=2, style=dotted];
m7_539 -> m7_542  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_540 -> m7_535  [color=blue, key=0, style=bold];
m7_1126 -> m7_1127  [key=0, style=solid];
m7_1127 -> m7_1128  [key=0, style=solid];
m7_1127 -> m7_1127  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_1128 -> m7_1129  [key=0, style=solid];
m7_1128 -> m7_13  [key=2, style=dotted];
m7_1128 -> m7_14  [key=2, style=dotted];
m7_1128 -> m7_1130  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1128 -> m7_1131  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1128 -> m7_1132  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1128 -> m7_1133  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1128 -> m7_1134  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1128 -> m7_1135  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1128 -> m7_1136  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1128 -> m7_1137  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1129 -> m7_1130  [key=0, style=solid];
m7_1129 -> m7_15  [key=2, style=dotted];
m7_1129 -> m7_16  [key=2, style=dotted];
m7_1130 -> m7_1131  [key=0, style=solid];
m7_1130 -> m7_17  [key=2, style=dotted];
m7_1131 -> m7_1132  [key=0, style=solid];
m7_1131 -> m7_15  [key=2, style=dotted];
m7_1131 -> m7_16  [key=2, style=dotted];
m7_1132 -> m7_1133  [key=0, style=solid];
m7_1132 -> m7_17  [key=2, style=dotted];
m7_1133 -> m7_1134  [key=0, style=solid];
m7_1133 -> m7_15  [key=2, style=dotted];
m7_1133 -> m7_16  [key=2, style=dotted];
m7_1134 -> m7_1135  [key=0, style=solid];
m7_1134 -> m7_17  [key=2, style=dotted];
m7_1135 -> m7_1136  [key=0, style=solid];
m7_1135 -> m7_17  [key=2, style=dotted];
m7_1136 -> m7_1137  [key=0, style=solid];
m7_1136 -> m7_15  [key=2, style=dotted];
m7_1136 -> m7_16  [key=2, style=dotted];
m7_1137 -> m7_1138  [key=0, style=solid];
m7_1137 -> m7_17  [key=2, style=dotted];
m7_1138 -> m7_1126  [color=blue, key=0, style=bold];
m7_1388 -> m7_1389  [key=0, style=solid];
m7_1389 -> m7_1390  [key=0, style=solid];
m7_1389 -> m7_1389  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_1390 -> m7_1391  [key=0, style=solid];
m7_1390 -> m7_13  [key=2, style=dotted];
m7_1390 -> m7_14  [key=2, style=dotted];
m7_1390 -> m7_1392  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1390 -> m7_1393  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1390 -> m7_1394  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1390 -> m7_1395  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1390 -> m7_1396  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1390 -> m7_1397  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1390 -> m7_1398  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1390 -> m7_1399  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1390 -> m7_1400  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1390 -> m7_1401  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1390 -> m7_1402  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1390 -> m7_1403  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1390 -> m7_1404  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1391 -> m7_1392  [key=0, style=solid];
m7_1391 -> m7_15  [key=2, style=dotted];
m7_1391 -> m7_16  [key=2, style=dotted];
m7_1392 -> m7_1393  [key=0, style=solid];
m7_1392 -> m7_17  [key=2, style=dotted];
m7_1393 -> m7_1394  [key=0, style=solid];
m7_1393 -> m7_15  [key=2, style=dotted];
m7_1393 -> m7_16  [key=2, style=dotted];
m7_1394 -> m7_1395  [key=0, style=solid];
m7_1394 -> m7_17  [key=2, style=dotted];
m7_1395 -> m7_1396  [key=0, style=solid];
m7_1395 -> m7_15  [key=2, style=dotted];
m7_1395 -> m7_16  [key=2, style=dotted];
m7_1396 -> m7_1397  [key=0, style=solid];
m7_1396 -> m7_17  [key=2, style=dotted];
m7_1397 -> m7_1398  [key=0, style=solid];
m7_1397 -> m7_15  [key=2, style=dotted];
m7_1397 -> m7_16  [key=2, style=dotted];
m7_1398 -> m7_1399  [key=0, style=solid];
m7_1398 -> m7_17  [key=2, style=dotted];
m7_1399 -> m7_1400  [key=0, style=solid];
m7_1399 -> m7_15  [key=2, style=dotted];
m7_1399 -> m7_16  [key=2, style=dotted];
m7_1400 -> m7_1401  [key=0, style=solid];
m7_1400 -> m7_17  [key=2, style=dotted];
m7_1401 -> m7_1402  [key=0, style=solid];
m7_1401 -> m7_15  [key=2, style=dotted];
m7_1401 -> m7_16  [key=2, style=dotted];
m7_1402 -> m7_1403  [key=0, style=solid];
m7_1402 -> m7_17  [key=2, style=dotted];
m7_1403 -> m7_1404  [key=0, style=solid];
m7_1403 -> m7_15  [key=2, style=dotted];
m7_1403 -> m7_16  [key=2, style=dotted];
m7_1404 -> m7_1405  [key=0, style=solid];
m7_1404 -> m7_17  [key=2, style=dotted];
m7_1405 -> m7_1388  [color=blue, key=0, style=bold];
m7_1104 -> m7_1105  [key=0, style=solid];
m7_1105 -> m7_1106  [key=0, style=solid];
m7_1105 -> m7_13  [key=2, style=dotted];
m7_1105 -> m7_14  [key=2, style=dotted];
m7_1105 -> m7_1109  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1106 -> m7_1107  [key=0, style=solid];
m7_1106 -> m7_18  [key=2, style=dotted];
m7_1106 -> m7_1108  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_1107 -> m7_1104  [color=blue, key=0, style=bold];
m7_1076 -> m7_1077  [key=0, style=solid];
m7_1077 -> m7_1078  [key=0, style=solid];
m7_1077 -> m7_13  [key=2, style=dotted];
m7_1077 -> m7_14  [key=2, style=dotted];
m7_1077 -> m7_1081  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1078 -> m7_1079  [key=0, style=solid];
m7_1078 -> m7_18  [key=2, style=dotted];
m7_1078 -> m7_1080  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_1079 -> m7_1076  [color=blue, key=0, style=bold];
m7_1508 -> m7_1509  [key=0, style=solid];
m7_1509 -> m7_1510  [key=0, style=solid];
m7_1509 -> m7_1509  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_1510 -> m7_1511  [key=0, style=solid];
m7_1510 -> m7_13  [key=2, style=dotted];
m7_1510 -> m7_116  [key=2, style=dotted];
m7_1510 -> m7_157  [key=2, style=dotted];
m7_1510 -> m7_158  [key=2, style=dotted];
m7_1510 -> m7_1512  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1510 -> m7_1513  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1510 -> m7_1514  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1510 -> m7_1515  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1510 -> m7_1516  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1510 -> m7_1517  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1510 -> m7_1518  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1510 -> m7_1519  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1510 -> m7_1520  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1510 -> m7_1521  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1510 -> m7_1522  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1510 -> m7_1523  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1510 -> m7_1524  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1510 -> m7_1525  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1510 -> m7_1526  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1510 -> m7_1527  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1510 -> m7_1528  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1510 -> m7_1529  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1511 -> m7_1512  [key=0, style=solid];
m7_1511 -> m7_15  [key=2, style=dotted];
m7_1511 -> m7_16  [key=2, style=dotted];
m7_1512 -> m7_1513  [key=0, style=solid];
m7_1512 -> m7_17  [key=2, style=dotted];
m7_1513 -> m7_1514  [key=0, style=solid];
m7_1513 -> m7_15  [key=2, style=dotted];
m7_1513 -> m7_16  [key=2, style=dotted];
m7_1514 -> m7_1515  [key=0, style=solid];
m7_1514 -> m7_17  [key=2, style=dotted];
m7_1515 -> m7_1516  [key=0, style=solid];
m7_1515 -> m7_15  [key=2, style=dotted];
m7_1515 -> m7_16  [key=2, style=dotted];
m7_1516 -> m7_1517  [key=0, style=solid];
m7_1516 -> m7_17  [key=2, style=dotted];
m7_1517 -> m7_1518  [key=0, style=solid];
m7_1517 -> m7_15  [key=2, style=dotted];
m7_1517 -> m7_16  [key=2, style=dotted];
m7_1518 -> m7_1519  [key=0, style=solid];
m7_1518 -> m7_17  [key=2, style=dotted];
m7_1519 -> m7_1520  [key=0, style=solid];
m7_1519 -> m7_15  [key=2, style=dotted];
m7_1519 -> m7_16  [key=2, style=dotted];
m7_1520 -> m7_1521  [key=0, style=solid];
m7_1520 -> m7_17  [key=2, style=dotted];
m7_1521 -> m7_1522  [key=0, style=solid];
m7_1521 -> m7_15  [key=2, style=dotted];
m7_1521 -> m7_16  [key=2, style=dotted];
m7_1522 -> m7_1523  [key=0, style=solid];
m7_1522 -> m7_17  [key=2, style=dotted];
m7_1523 -> m7_1524  [key=0, style=solid];
m7_1523 -> m7_15  [key=2, style=dotted];
m7_1523 -> m7_16  [key=2, style=dotted];
m7_1524 -> m7_1525  [key=0, style=solid];
m7_1524 -> m7_17  [key=2, style=dotted];
m7_1525 -> m7_1526  [key=0, style=solid];
m7_1525 -> m7_15  [key=2, style=dotted];
m7_1525 -> m7_16  [key=2, style=dotted];
m7_1526 -> m7_1527  [key=0, style=solid];
m7_1526 -> m7_17  [key=2, style=dotted];
m7_1527 -> m7_1528  [key=0, style=solid];
m7_1527 -> m7_15  [key=2, style=dotted];
m7_1527 -> m7_16  [key=2, style=dotted];
m7_1528 -> m7_1529  [key=0, style=solid];
m7_1528 -> m7_17  [key=2, style=dotted];
m7_1529 -> m7_1530  [key=0, style=solid];
m7_1529 -> m7_15  [key=2, style=dotted];
m7_1529 -> m7_131  [key=2, style=dotted];
m7_1530 -> m7_1508  [color=blue, key=0, style=bold];
m7_1370 -> m7_1371  [key=0, style=solid];
m7_1371 -> m7_1372  [key=0, style=solid];
m7_1371 -> m7_1371  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_1372 -> m7_1373  [key=0, style=solid];
m7_1372 -> m7_13  [key=2, style=dotted];
m7_1372 -> m7_14  [key=2, style=dotted];
m7_1372 -> m7_1374  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1372 -> m7_1375  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1372 -> m7_1376  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1372 -> m7_1377  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1373 -> m7_1374  [key=0, style=solid];
m7_1373 -> m7_15  [key=2, style=dotted];
m7_1373 -> m7_16  [key=2, style=dotted];
m7_1374 -> m7_1375  [key=0, style=solid];
m7_1374 -> m7_17  [key=2, style=dotted];
m7_1375 -> m7_1376  [key=0, style=solid];
m7_1375 -> m7_17  [key=2, style=dotted];
m7_1376 -> m7_1377  [key=0, style=solid];
m7_1376 -> m7_15  [key=2, style=dotted];
m7_1376 -> m7_16  [key=2, style=dotted];
m7_1377 -> m7_1378  [key=0, style=solid];
m7_1377 -> m7_17  [key=2, style=dotted];
m7_1378 -> m7_1370  [color=blue, key=0, style=bold];
m7_367 -> m7_368  [key=0, style=solid];
m7_368 -> m7_369  [key=0, style=solid];
m7_368 -> m7_373  [color=darkseagreen4, key=1, label=valueCount, style=dashed];
m7_368 -> m7_381  [color=darkseagreen4, key=1, label=valueCount, style=dashed];
m7_368 -> m7_368  [color=darkorchid, key=3, label="Local variable int valueCount", style=bold];
m7_369 -> m7_370  [key=0, style=solid];
m7_369 -> m7_388  [key=2, style=dotted];
m7_369 -> m7_377  [color=darkseagreen4, key=1, label=sw, style=dashed];
m7_373 -> m7_374  [key=0, style=solid];
m7_373 -> m7_376  [key=0, style=solid];
m7_373 -> m7_373  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m7_381 -> m7_382  [key=0, style=solid];
m7_381 -> m7_385  [key=0, style=solid];
m7_381 -> m7_373  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m7_370 -> m7_371  [key=0, style=solid];
m7_370 -> m7_389  [key=2, style=dotted];
m7_370 -> m7_374  [color=darkseagreen4, key=1, label=writer, style=dashed];
m7_370 -> m7_376  [color=darkseagreen4, key=1, label=writer, style=dashed];
m7_377 -> m7_378  [key=0, style=solid];
m7_377 -> m7_393  [key=2, style=dotted];
m7_371 -> m7_372  [key=0, style=solid];
m7_371 -> m7_390  [key=2, style=dotted];
m7_374 -> m7_375  [key=0, style=solid];
m7_374 -> m7_391  [key=2, style=dotted];
m7_376 -> m7_377  [key=0, style=solid];
m7_376 -> m7_392  [key=2, style=dotted];
m7_372 -> m7_373  [key=0, style=solid];
m7_372 -> m7_374  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_372 -> m7_375  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_375 -> m7_373  [key=0, style=solid];
m7_375 -> m7_375  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_378 -> m7_379  [key=0, style=solid];
m7_378 -> m7_13  [key=2, style=dotted];
m7_378 -> m7_14  [key=2, style=dotted];
m7_378 -> m7_382  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_378 -> m7_383  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_378 -> m7_385  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_378 -> m7_386  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_379 -> m7_380  [key=0, style=solid];
m7_379 -> m7_15  [key=2, style=dotted];
m7_379 -> m7_16  [key=2, style=dotted];
m7_382 -> m7_383  [key=0, style=solid];
m7_382 -> m7_15  [key=2, style=dotted];
m7_382 -> m7_16  [key=2, style=dotted];
m7_383 -> m7_384  [key=0, style=solid];
m7_383 -> m7_17  [key=2, style=dotted];
m7_385 -> m7_386  [key=0, style=solid];
m7_385 -> m7_15  [key=2, style=dotted];
m7_385 -> m7_16  [key=2, style=dotted];
m7_386 -> m7_387  [key=0, style=solid];
m7_386 -> m7_15  [key=2, style=dotted];
m7_386 -> m7_131  [key=2, style=dotted];
m7_380 -> m7_381  [key=0, style=solid];
m7_380 -> m7_383  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_380 -> m7_384  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_384 -> m7_381  [key=0, style=solid];
m7_384 -> m7_384  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_387 -> m7_367  [color=blue, key=0, style=bold];
m7_48 -> m7_49  [key=0, style=solid];
m7_49 -> m7_50  [key=0, style=solid];
m7_49 -> m7_49  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_50 -> m7_51  [key=0, style=solid];
m7_50 -> m7_13  [key=2, style=dotted];
m7_50 -> m7_14  [key=2, style=dotted];
m7_50 -> m7_52  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_50 -> m7_53  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_50 -> m7_54  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_50 -> m7_57  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_51 -> m7_52  [key=0, style=solid];
m7_52 -> m7_53  [key=0, style=solid];
m7_52 -> m7_15  [key=2, style=dotted];
m7_52 -> m7_16  [key=2, style=dotted];
m7_53 -> m7_54  [key=0, style=solid];
m7_53 -> m7_17  [key=2, style=dotted];
m7_54 -> m7_55  [key=0, style=solid];
m7_54 -> m7_18  [key=2, style=dotted];
m7_54 -> m7_56  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_55 -> m7_48  [color=blue, key=0, style=bold];
m7_681 -> m7_682  [key=0, style=solid];
m7_682 -> m7_683  [key=0, style=solid];
m7_682 -> m7_682  [color=darkorchid, key=3, label="Local variable Newtonsoft.Json.JsonTextReader reader", style=bold];
m7_683 -> m7_684  [key=0, style=solid];
m7_683 -> m7_13  [key=2, style=dotted];
m7_683 -> m7_14  [key=2, style=dotted];
m7_684 -> m7_685  [key=0, style=solid];
m7_684 -> m7_451  [key=2, style=dotted];
m7_684 -> m7_17  [key=2, style=dotted];
m7_685 -> m7_686  [key=0, style=solid];
m7_685 -> m7_13  [key=2, style=dotted];
m7_685 -> m7_14  [key=2, style=dotted];
m7_686 -> m7_687  [key=0, style=solid];
m7_686 -> m7_451  [key=2, style=dotted];
m7_686 -> m7_17  [key=2, style=dotted];
m7_687 -> m7_688  [key=0, style=solid];
m7_687 -> m7_13  [key=2, style=dotted];
m7_687 -> m7_14  [key=2, style=dotted];
m7_688 -> m7_689  [key=0, style=solid];
m7_688 -> m7_451  [key=2, style=dotted];
m7_688 -> m7_17  [key=2, style=dotted];
m7_689 -> m7_690  [key=0, style=solid];
m7_689 -> m7_13  [key=2, style=dotted];
m7_689 -> m7_14  [key=2, style=dotted];
m7_690 -> m7_691  [key=0, style=solid];
m7_690 -> m7_451  [key=2, style=dotted];
m7_690 -> m7_17  [key=2, style=dotted];
m7_691 -> m7_692  [key=0, style=solid];
m7_691 -> m7_13  [key=2, style=dotted];
m7_691 -> m7_14  [key=2, style=dotted];
m7_691 -> m7_708  [key=2, style=dotted];
m7_692 -> m7_693  [key=0, style=solid];
m7_692 -> m7_451  [key=2, style=dotted];
m7_692 -> m7_17  [key=2, style=dotted];
m7_693 -> m7_694  [key=0, style=solid];
m7_693 -> m7_13  [key=2, style=dotted];
m7_693 -> m7_14  [key=2, style=dotted];
m7_693 -> m7_708  [key=2, style=dotted];
m7_694 -> m7_695  [key=0, style=solid];
m7_694 -> m7_451  [key=2, style=dotted];
m7_694 -> m7_17  [key=2, style=dotted];
m7_695 -> m7_696  [key=0, style=solid];
m7_695 -> m7_13  [key=2, style=dotted];
m7_695 -> m7_14  [key=2, style=dotted];
m7_695 -> m7_709  [key=2, style=dotted];
m7_695 -> m7_711  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_696 -> m7_697  [key=0, style=solid];
m7_696 -> m7_18  [key=2, style=dotted];
m7_696 -> m7_710  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_697 -> m7_698  [key=0, style=solid];
m7_697 -> m7_13  [key=2, style=dotted];
m7_697 -> m7_14  [key=2, style=dotted];
m7_697 -> m7_714  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_698 -> m7_699  [key=0, style=solid];
m7_698 -> m7_18  [key=2, style=dotted];
m7_698 -> m7_713  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_699 -> m7_700  [key=0, style=solid];
m7_699 -> m7_13  [key=2, style=dotted];
m7_699 -> m7_14  [key=2, style=dotted];
m7_699 -> m7_717  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_700 -> m7_701  [key=0, style=solid];
m7_700 -> m7_18  [key=2, style=dotted];
m7_700 -> m7_716  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_701 -> m7_702  [key=0, style=solid];
m7_701 -> m7_13  [key=2, style=dotted];
m7_701 -> m7_14  [key=2, style=dotted];
m7_701 -> m7_720  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_702 -> m7_703  [key=0, style=solid];
m7_702 -> m7_18  [key=2, style=dotted];
m7_702 -> m7_719  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_703 -> m7_704  [key=0, style=solid];
m7_703 -> m7_13  [key=2, style=dotted];
m7_703 -> m7_14  [key=2, style=dotted];
m7_704 -> m7_705  [key=0, style=solid];
m7_704 -> m7_451  [key=2, style=dotted];
m7_704 -> m7_17  [key=2, style=dotted];
m7_705 -> m7_706  [key=0, style=solid];
m7_705 -> m7_13  [key=2, style=dotted];
m7_705 -> m7_14  [key=2, style=dotted];
m7_705 -> m7_723  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_706 -> m7_707  [key=0, style=solid];
m7_706 -> m7_18  [key=2, style=dotted];
m7_706 -> m7_722  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_707 -> m7_681  [color=blue, key=0, style=bold];
m7_347 -> m7_348  [key=0, style=solid];
m7_348 -> m7_349  [key=0, style=solid];
m7_348 -> m7_18  [key=2, style=dotted];
m7_348 -> m7_350  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_349 -> m7_347  [color=blue, key=0, style=bold];
m7_484 -> m7_485  [key=0, style=solid];
m7_485 -> m7_486  [key=0, style=solid];
m7_485 -> m7_481  [key=2, style=dotted];
m7_485 -> m7_491  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_486 -> m7_487  [key=0, style=solid];
m7_486 -> m7_13  [key=2, style=dotted];
m7_486 -> m7_482  [key=2, style=dotted];
m7_486 -> m7_483  [key=2, style=dotted];
m7_486 -> m7_488  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_491 -> m7_492  [key=0, style=solid];
m7_487 -> m7_488  [key=0, style=solid];
m7_487 -> m7_15  [key=2, style=dotted];
m7_488 -> m7_489  [key=0, style=solid];
m7_488 -> m7_17  [key=2, style=dotted];
m7_489 -> m7_490  [key=0, style=solid];
m7_489 -> m7_491  [color=darkseagreen4, key=1, label=j, style=dashed];
m7_489 -> m7_495  [color=darkseagreen4, key=1, label=j, style=dashed];
m7_489 -> m7_440  [color=darkorchid, key=3, label="Local variable int j", style=bold];
m7_490 -> m7_491  [key=0, style=solid];
m7_490 -> m7_496  [key=0, style=solid];
m7_495 -> m7_490  [key=0, style=solid];
m7_495 -> m7_495  [color=darkseagreen4, key=1, label=j, style=dashed];
m7_492 -> m7_493  [key=0, style=solid];
m7_492 -> m7_13  [key=2, style=dotted];
m7_492 -> m7_482  [key=2, style=dotted];
m7_492 -> m7_483  [key=2, style=dotted];
m7_492 -> m7_494  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_493 -> m7_494  [key=0, style=solid];
m7_493 -> m7_15  [key=2, style=dotted];
m7_494 -> m7_495  [key=0, style=solid];
m7_494 -> m7_17  [key=2, style=dotted];
m7_496 -> m7_484  [color=blue, key=0, style=bold];
m7_117 -> m7_118  [key=0, style=solid];
m7_118 -> m7_119  [key=0, style=solid];
m7_118 -> m7_129  [key=2, style=dotted];
m7_118 -> m7_120  [color=darkseagreen4, key=1, label=ms, style=dashed];
m7_118 -> m7_122  [color=darkseagreen4, key=1, label=ms, style=dashed];
m7_119 -> m7_120  [key=0, style=solid];
m7_119 -> m7_13  [key=2, style=dotted];
m7_119 -> m7_116  [key=2, style=dotted];
m7_119 -> m7_121  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_120 -> m7_121  [key=0, style=solid];
m7_120 -> m7_16  [key=2, style=dotted];
m7_122 -> m7_123  [key=0, style=solid];
m7_122 -> m7_131  [key=2, style=dotted];
m7_121 -> m7_122  [key=0, style=solid];
m7_121 -> m7_130  [key=2, style=dotted];
m7_123 -> m7_124  [key=0, style=solid];
m7_123 -> m7_129  [key=2, style=dotted];
m7_123 -> m7_125  [color=darkseagreen4, key=1, label=ms, style=dashed];
m7_123 -> m7_127  [color=darkseagreen4, key=1, label=ms, style=dashed];
m7_124 -> m7_125  [key=0, style=solid];
m7_124 -> m7_13  [key=2, style=dotted];
m7_124 -> m7_116  [key=2, style=dotted];
m7_124 -> m7_126  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_125 -> m7_126  [key=0, style=solid];
m7_125 -> m7_16  [key=2, style=dotted];
m7_127 -> m7_128  [key=0, style=solid];
m7_127 -> m7_16  [key=2, style=dotted];
m7_126 -> m7_127  [key=0, style=solid];
m7_126 -> m7_130  [key=2, style=dotted];
m7_128 -> m7_117  [color=blue, key=0, style=bold];
m7_425 -> m7_426  [key=0, style=solid];
m7_426 -> m7_427  [key=0, style=solid];
m7_426 -> m7_426  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_427 -> m7_428  [key=0, style=solid];
m7_427 -> m7_13  [key=2, style=dotted];
m7_427 -> m7_14  [key=2, style=dotted];
m7_427 -> m7_430  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_427 -> m7_432  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_427 -> m7_433  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_428 -> m7_429  [key=0, style=solid];
m7_428 -> m7_431  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_428 -> m7_373  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m7_430 -> m7_431  [key=0, style=solid];
m7_430 -> m7_15  [key=2, style=dotted];
m7_432 -> m7_433  [key=0, style=solid];
m7_432 -> m7_15  [key=2, style=dotted];
m7_433 -> m7_434  [key=0, style=solid];
m7_433 -> m7_17  [key=2, style=dotted];
m7_429 -> m7_430  [key=0, style=solid];
m7_429 -> m7_432  [key=0, style=solid];
m7_431 -> m7_429  [key=0, style=solid];
m7_431 -> m7_431  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_434 -> m7_425  [color=blue, key=0, style=bold];
m7_1700 -> m7_1701  [key=0, style=solid];
m7_1701 -> m7_1702  [key=0, style=solid];
m7_1701 -> m7_1701  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_1702 -> m7_1703  [key=0, style=solid];
m7_1702 -> m7_13  [key=2, style=dotted];
m7_1702 -> m7_116  [key=2, style=dotted];
m7_1702 -> m7_157  [key=2, style=dotted];
m7_1702 -> m7_158  [key=2, style=dotted];
m7_1702 -> m7_1704  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1702 -> m7_1705  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1702 -> m7_1706  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1702 -> m7_1707  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1702 -> m7_1708  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1702 -> m7_1709  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1702 -> m7_1710  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1702 -> m7_1711  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1702 -> m7_1712  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1702 -> m7_1713  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1702 -> m7_1714  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1702 -> m7_1715  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1702 -> m7_1716  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1702 -> m7_1717  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1702 -> m7_1718  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1702 -> m7_1719  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1702 -> m7_1720  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1702 -> m7_1721  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1702 -> m7_1722  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1702 -> m7_1723  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1702 -> m7_1724  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1702 -> m7_1725  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1702 -> m7_1726  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1702 -> m7_1727  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1702 -> m7_1728  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1702 -> m7_1729  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1702 -> m7_1730  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1702 -> m7_1731  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1702 -> m7_1732  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1702 -> m7_1733  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1702 -> m7_1734  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1702 -> m7_1735  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1702 -> m7_1736  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1702 -> m7_1737  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1702 -> m7_1738  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1702 -> m7_1739  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1703 -> m7_1704  [key=0, style=solid];
m7_1703 -> m7_15  [key=2, style=dotted];
m7_1703 -> m7_16  [key=2, style=dotted];
m7_1704 -> m7_1705  [key=0, style=solid];
m7_1704 -> m7_15  [key=2, style=dotted];
m7_1704 -> m7_16  [key=2, style=dotted];
m7_1705 -> m7_1706  [key=0, style=solid];
m7_1705 -> m7_17  [key=2, style=dotted];
m7_1706 -> m7_1707  [key=0, style=solid];
m7_1706 -> m7_15  [key=2, style=dotted];
m7_1706 -> m7_16  [key=2, style=dotted];
m7_1707 -> m7_1708  [key=0, style=solid];
m7_1707 -> m7_17  [key=2, style=dotted];
m7_1708 -> m7_1709  [key=0, style=solid];
m7_1708 -> m7_17  [key=2, style=dotted];
m7_1709 -> m7_1710  [key=0, style=solid];
m7_1709 -> m7_15  [key=2, style=dotted];
m7_1709 -> m7_16  [key=2, style=dotted];
m7_1710 -> m7_1711  [key=0, style=solid];
m7_1710 -> m7_17  [key=2, style=dotted];
m7_1711 -> m7_1712  [key=0, style=solid];
m7_1711 -> m7_17  [key=2, style=dotted];
m7_1712 -> m7_1713  [key=0, style=solid];
m7_1712 -> m7_15  [key=2, style=dotted];
m7_1712 -> m7_16  [key=2, style=dotted];
m7_1713 -> m7_1714  [key=0, style=solid];
m7_1713 -> m7_17  [key=2, style=dotted];
m7_1714 -> m7_1715  [key=0, style=solid];
m7_1714 -> m7_17  [key=2, style=dotted];
m7_1715 -> m7_1716  [key=0, style=solid];
m7_1715 -> m7_15  [key=2, style=dotted];
m7_1715 -> m7_16  [key=2, style=dotted];
m7_1716 -> m7_1717  [key=0, style=solid];
m7_1716 -> m7_17  [key=2, style=dotted];
m7_1717 -> m7_1718  [key=0, style=solid];
m7_1717 -> m7_17  [key=2, style=dotted];
m7_1718 -> m7_1719  [key=0, style=solid];
m7_1718 -> m7_15  [key=2, style=dotted];
m7_1718 -> m7_16  [key=2, style=dotted];
m7_1719 -> m7_1720  [key=0, style=solid];
m7_1719 -> m7_17  [key=2, style=dotted];
m7_1720 -> m7_1721  [key=0, style=solid];
m7_1720 -> m7_17  [key=2, style=dotted];
m7_1721 -> m7_1722  [key=0, style=solid];
m7_1721 -> m7_15  [key=2, style=dotted];
m7_1721 -> m7_16  [key=2, style=dotted];
m7_1722 -> m7_1723  [key=0, style=solid];
m7_1722 -> m7_17  [key=2, style=dotted];
m7_1723 -> m7_1724  [key=0, style=solid];
m7_1723 -> m7_17  [key=2, style=dotted];
m7_1724 -> m7_1725  [key=0, style=solid];
m7_1724 -> m7_15  [key=2, style=dotted];
m7_1724 -> m7_16  [key=2, style=dotted];
m7_1725 -> m7_1726  [key=0, style=solid];
m7_1725 -> m7_17  [key=2, style=dotted];
m7_1726 -> m7_1727  [key=0, style=solid];
m7_1726 -> m7_17  [key=2, style=dotted];
m7_1727 -> m7_1728  [key=0, style=solid];
m7_1727 -> m7_15  [key=2, style=dotted];
m7_1727 -> m7_16  [key=2, style=dotted];
m7_1728 -> m7_1729  [key=0, style=solid];
m7_1728 -> m7_17  [key=2, style=dotted];
m7_1729 -> m7_1730  [key=0, style=solid];
m7_1729 -> m7_17  [key=2, style=dotted];
m7_1730 -> m7_1731  [key=0, style=solid];
m7_1730 -> m7_15  [key=2, style=dotted];
m7_1730 -> m7_16  [key=2, style=dotted];
m7_1731 -> m7_1732  [key=0, style=solid];
m7_1731 -> m7_17  [key=2, style=dotted];
m7_1732 -> m7_1733  [key=0, style=solid];
m7_1732 -> m7_17  [key=2, style=dotted];
m7_1733 -> m7_1734  [key=0, style=solid];
m7_1733 -> m7_15  [key=2, style=dotted];
m7_1733 -> m7_16  [key=2, style=dotted];
m7_1734 -> m7_1735  [key=0, style=solid];
m7_1734 -> m7_17  [key=2, style=dotted];
m7_1735 -> m7_1736  [key=0, style=solid];
m7_1735 -> m7_17  [key=2, style=dotted];
m7_1736 -> m7_1737  [key=0, style=solid];
m7_1736 -> m7_15  [key=2, style=dotted];
m7_1736 -> m7_16  [key=2, style=dotted];
m7_1737 -> m7_1738  [key=0, style=solid];
m7_1737 -> m7_17  [key=2, style=dotted];
m7_1738 -> m7_1739  [key=0, style=solid];
m7_1738 -> m7_17  [key=2, style=dotted];
m7_1739 -> m7_1740  [key=0, style=solid];
m7_1739 -> m7_15  [key=2, style=dotted];
m7_1739 -> m7_16  [key=2, style=dotted];
m7_1740 -> m7_1700  [color=blue, key=0, style=bold];
m7_1857 -> m7_1858  [key=0, style=solid];
m7_1857 -> m7_1860  [color=darkseagreen4, key=1, label="char[]", style=dashed];
m7_1858 -> m7_1859  [key=0, style=solid];
m7_1858 -> m7_1860  [key=0, style=solid];
m7_1860 -> m7_1861  [key=0, style=solid];
m7_1860 -> m7_1863  [key=2, style=dotted];
m7_1859 -> m7_1861  [key=0, style=solid];
m7_1859 -> m7_1862  [key=2, style=dotted];
m7_1861 -> m7_1857  [color=blue, key=0, style=bold];
m7_1212 -> m7_1213  [key=0, style=solid];
m7_1213 -> m7_1214  [key=0, style=solid];
m7_1213 -> m7_1213  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_1214 -> m7_1215  [key=0, style=solid];
m7_1214 -> m7_13  [key=2, style=dotted];
m7_1214 -> m7_14  [key=2, style=dotted];
m7_1214 -> m7_1216  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1214 -> m7_1217  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1214 -> m7_1218  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1214 -> m7_1219  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1214 -> m7_1220  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1214 -> m7_1221  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1214 -> m7_1222  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1214 -> m7_1223  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1214 -> m7_1224  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1215 -> m7_1216  [key=0, style=solid];
m7_1215 -> m7_15  [key=2, style=dotted];
m7_1215 -> m7_16  [key=2, style=dotted];
m7_1216 -> m7_1217  [key=0, style=solid];
m7_1216 -> m7_17  [key=2, style=dotted];
m7_1217 -> m7_1218  [key=0, style=solid];
m7_1217 -> m7_15  [key=2, style=dotted];
m7_1217 -> m7_16  [key=2, style=dotted];
m7_1218 -> m7_1219  [key=0, style=solid];
m7_1218 -> m7_17  [key=2, style=dotted];
m7_1219 -> m7_1220  [key=0, style=solid];
m7_1219 -> m7_1068  [key=2, style=dotted];
m7_1220 -> m7_1221  [key=0, style=solid];
m7_1220 -> m7_17  [key=2, style=dotted];
m7_1221 -> m7_1222  [key=0, style=solid];
m7_1221 -> m7_17  [key=2, style=dotted];
m7_1222 -> m7_1223  [key=0, style=solid];
m7_1222 -> m7_1153  [key=2, style=dotted];
m7_1222 -> m7_1226  [key=2, style=dotted];
m7_1222 -> m7_17  [key=2, style=dotted];
m7_1223 -> m7_1224  [key=0, style=solid];
m7_1223 -> m7_15  [key=2, style=dotted];
m7_1223 -> m7_16  [key=2, style=dotted];
m7_1224 -> m7_1225  [key=0, style=solid];
m7_1224 -> m7_17  [key=2, style=dotted];
m7_1225 -> m7_1212  [color=blue, key=0, style=bold];
m7_1484 -> m7_1485  [key=0, style=solid];
m7_1485 -> m7_1486  [key=0, style=solid];
m7_1485 -> m7_13  [key=2, style=dotted];
m7_1485 -> m7_14  [key=2, style=dotted];
m7_1485 -> m7_1489  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1486 -> m7_1487  [key=0, style=solid];
m7_1486 -> m7_18  [key=2, style=dotted];
m7_1486 -> m7_1488  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_1487 -> m7_1484  [color=blue, key=0, style=bold];
m7_1305 -> m7_1306  [key=0, style=solid];
m7_1306 -> m7_1307  [key=0, style=solid];
m7_1306 -> m7_13  [key=2, style=dotted];
m7_1306 -> m7_14  [key=2, style=dotted];
m7_1306 -> m7_1310  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1307 -> m7_1308  [key=0, style=solid];
m7_1307 -> m7_18  [key=2, style=dotted];
m7_1307 -> m7_1309  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_1308 -> m7_1305  [color=blue, key=0, style=bold];
m7_1291 -> m7_1292  [key=0, style=solid];
m7_1292 -> m7_1293  [key=0, style=solid];
m7_1292 -> m7_13  [key=2, style=dotted];
m7_1292 -> m7_14  [key=2, style=dotted];
m7_1292 -> m7_1296  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1293 -> m7_1294  [key=0, style=solid];
m7_1293 -> m7_18  [key=2, style=dotted];
m7_1293 -> m7_1295  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_1294 -> m7_1291  [color=blue, key=0, style=bold];
m7_59 -> m7_60  [key=0, style=solid];
m7_60 -> m7_61  [key=0, style=solid];
m7_60 -> m7_60  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_61 -> m7_62  [key=0, style=solid];
m7_61 -> m7_13  [key=2, style=dotted];
m7_61 -> m7_14  [key=2, style=dotted];
m7_61 -> m7_63  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_61 -> m7_64  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_61 -> m7_65  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_61 -> m7_66  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_61 -> m7_67  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_61 -> m7_68  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_61 -> m7_69  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_61 -> m7_70  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_61 -> m7_71  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_61 -> m7_72  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_61 -> m7_73  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_61 -> m7_74  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_61 -> m7_75  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_61 -> m7_76  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_61 -> m7_77  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_62 -> m7_63  [key=0, style=solid];
m7_62 -> m7_15  [key=2, style=dotted];
m7_62 -> m7_16  [key=2, style=dotted];
m7_63 -> m7_64  [key=0, style=solid];
m7_63 -> m7_17  [key=2, style=dotted];
m7_64 -> m7_65  [key=0, style=solid];
m7_64 -> m7_15  [key=2, style=dotted];
m7_64 -> m7_16  [key=2, style=dotted];
m7_65 -> m7_66  [key=0, style=solid];
m7_65 -> m7_17  [key=2, style=dotted];
m7_66 -> m7_67  [key=0, style=solid];
m7_66 -> m7_15  [key=2, style=dotted];
m7_66 -> m7_16  [key=2, style=dotted];
m7_67 -> m7_68  [key=0, style=solid];
m7_67 -> m7_17  [key=2, style=dotted];
m7_68 -> m7_69  [key=0, style=solid];
m7_68 -> m7_15  [key=2, style=dotted];
m7_68 -> m7_16  [key=2, style=dotted];
m7_69 -> m7_70  [key=0, style=solid];
m7_69 -> m7_17  [key=2, style=dotted];
m7_70 -> m7_71  [key=0, style=solid];
m7_70 -> m7_15  [key=2, style=dotted];
m7_70 -> m7_16  [key=2, style=dotted];
m7_71 -> m7_72  [key=0, style=solid];
m7_71 -> m7_17  [key=2, style=dotted];
m7_72 -> m7_73  [key=0, style=solid];
m7_72 -> m7_15  [key=2, style=dotted];
m7_72 -> m7_16  [key=2, style=dotted];
m7_73 -> m7_74  [key=0, style=solid];
m7_73 -> m7_17  [key=2, style=dotted];
m7_74 -> m7_75  [key=0, style=solid];
m7_74 -> m7_17  [key=2, style=dotted];
m7_75 -> m7_76  [key=0, style=solid];
m7_75 -> m7_15  [key=2, style=dotted];
m7_75 -> m7_16  [key=2, style=dotted];
m7_76 -> m7_77  [key=0, style=solid];
m7_76 -> m7_17  [key=2, style=dotted];
m7_77 -> m7_78  [key=0, style=solid];
m7_77 -> m7_17  [key=2, style=dotted];
m7_78 -> m7_59  [color=blue, key=0, style=bold];
m7_79 -> m7_80  [key=0, style=solid];
m7_80 -> m7_81  [key=0, style=solid];
m7_80 -> m7_80  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_81 -> m7_82  [key=0, style=solid];
m7_81 -> m7_13  [key=2, style=dotted];
m7_81 -> m7_14  [key=2, style=dotted];
m7_81 -> m7_83  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_81 -> m7_84  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_81 -> m7_85  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_81 -> m7_86  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_82 -> m7_83  [key=0, style=solid];
m7_82 -> m7_15  [key=2, style=dotted];
m7_82 -> m7_16  [key=2, style=dotted];
m7_83 -> m7_84  [key=0, style=solid];
m7_83 -> m7_15  [key=2, style=dotted];
m7_83 -> m7_16  [key=2, style=dotted];
m7_84 -> m7_85  [key=0, style=solid];
m7_84 -> m7_15  [key=2, style=dotted];
m7_84 -> m7_16  [key=2, style=dotted];
m7_85 -> m7_86  [key=0, style=solid];
m7_85 -> m7_17  [key=2, style=dotted];
m7_86 -> m7_87  [key=0, style=solid];
m7_86 -> m7_91  [key=2, style=dotted];
m7_86 -> m7_88  [color=darkseagreen4, key=1, label=s, style=dashed];
m7_87 -> m7_88  [key=0, style=solid];
m7_87 -> m7_17  [key=2, style=dotted];
m7_88 -> m7_89  [key=0, style=solid];
m7_88 -> m7_92  [key=2, style=dotted];
m7_89 -> m7_90  [key=0, style=solid];
m7_89 -> m7_17  [key=2, style=dotted];
m7_90 -> m7_79  [color=blue, key=0, style=bold];
m7_167 -> m7_168  [key=0, style=solid];
m7_168 -> m7_169  [key=0, style=solid];
m7_168 -> m7_168  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_169 -> m7_170  [key=0, style=solid];
m7_169 -> m7_13  [key=2, style=dotted];
m7_169 -> m7_14  [key=2, style=dotted];
m7_169 -> m7_171  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_169 -> m7_172  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_169 -> m7_173  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_169 -> m7_174  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_169 -> m7_175  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_169 -> m7_176  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_169 -> m7_177  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_169 -> m7_178  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_169 -> m7_179  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_169 -> m7_180  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_169 -> m7_183  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_170 -> m7_171  [key=0, style=solid];
m7_170 -> m7_15  [key=2, style=dotted];
m7_171 -> m7_172  [key=0, style=solid];
m7_171 -> m7_17  [key=2, style=dotted];
m7_172 -> m7_173  [key=0, style=solid];
m7_172 -> m7_15  [key=2, style=dotted];
m7_173 -> m7_174  [key=0, style=solid];
m7_173 -> m7_17  [key=2, style=dotted];
m7_174 -> m7_175  [key=0, style=solid];
m7_174 -> m7_15  [key=2, style=dotted];
m7_175 -> m7_176  [key=0, style=solid];
m7_175 -> m7_17  [key=2, style=dotted];
m7_176 -> m7_177  [key=0, style=solid];
m7_176 -> m7_15  [key=2, style=dotted];
m7_177 -> m7_178  [key=0, style=solid];
m7_177 -> m7_17  [key=2, style=dotted];
m7_178 -> m7_179  [key=0, style=solid];
m7_178 -> m7_15  [key=2, style=dotted];
m7_179 -> m7_180  [key=0, style=solid];
m7_179 -> m7_17  [key=2, style=dotted];
m7_180 -> m7_181  [key=0, style=solid];
m7_180 -> m7_18  [key=2, style=dotted];
m7_180 -> m7_182  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_181 -> m7_167  [color=blue, key=0, style=bold];
m7_1312 -> m7_1313  [key=0, style=solid];
m7_1313 -> m7_1314  [key=0, style=solid];
m7_1313 -> m7_13  [key=2, style=dotted];
m7_1313 -> m7_14  [key=2, style=dotted];
m7_1313 -> m7_1317  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1314 -> m7_1315  [key=0, style=solid];
m7_1314 -> m7_18  [key=2, style=dotted];
m7_1314 -> m7_1316  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_1315 -> m7_1312  [color=blue, key=0, style=bold];
m7_1452 -> m7_1453  [key=0, style=solid];
m7_1453 -> m7_1454  [key=0, style=solid];
m7_1453 -> m7_1453  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_1454 -> m7_1455  [key=0, style=solid];
m7_1454 -> m7_13  [key=2, style=dotted];
m7_1454 -> m7_14  [key=2, style=dotted];
m7_1454 -> m7_1458  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1455 -> m7_1456  [key=0, style=solid];
m7_1455 -> m7_18  [key=2, style=dotted];
m7_1455 -> m7_1457  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_1456 -> m7_1452  [color=blue, key=0, style=bold];
m7_497 -> m7_498  [key=0, style=solid];
m7_498 -> m7_499  [key=0, style=solid];
m7_498 -> m7_498  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_499 -> m7_500  [key=0, style=solid];
m7_499 -> m7_13  [key=2, style=dotted];
m7_499 -> m7_14  [key=2, style=dotted];
m7_499 -> m7_502  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_499 -> m7_504  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_499 -> m7_505  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_499 -> m7_506  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_500 -> m7_501  [key=0, style=solid];
m7_500 -> m7_503  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_500 -> m7_373  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m7_502 -> m7_503  [key=0, style=solid];
m7_502 -> m7_15  [key=2, style=dotted];
m7_502 -> m7_16  [key=2, style=dotted];
m7_504 -> m7_505  [key=0, style=solid];
m7_504 -> m7_15  [key=2, style=dotted];
m7_504 -> m7_16  [key=2, style=dotted];
m7_505 -> m7_506  [key=0, style=solid];
m7_505 -> m7_17  [key=2, style=dotted];
m7_506 -> m7_507  [key=0, style=solid];
m7_506 -> m7_17  [key=2, style=dotted];
m7_501 -> m7_502  [key=0, style=solid];
m7_501 -> m7_504  [key=0, style=solid];
m7_503 -> m7_501  [key=0, style=solid];
m7_503 -> m7_503  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_507 -> m7_497  [color=blue, key=0, style=bold];
m7_1272 -> m7_1273  [key=0, style=solid];
m7_1273 -> m7_1274  [key=0, style=solid];
m7_1273 -> m7_1273  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_1274 -> m7_1275  [key=0, style=solid];
m7_1274 -> m7_13  [key=2, style=dotted];
m7_1274 -> m7_14  [key=2, style=dotted];
m7_1274 -> m7_1276  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1274 -> m7_1277  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1274 -> m7_1278  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1274 -> m7_1279  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1274 -> m7_1282  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1275 -> m7_1276  [key=0, style=solid];
m7_1275 -> m7_15  [key=2, style=dotted];
m7_1275 -> m7_16  [key=2, style=dotted];
m7_1276 -> m7_1277  [key=0, style=solid];
m7_1276 -> m7_17  [key=2, style=dotted];
m7_1277 -> m7_1278  [key=0, style=solid];
m7_1277 -> m7_15  [key=2, style=dotted];
m7_1277 -> m7_16  [key=2, style=dotted];
m7_1278 -> m7_1279  [key=0, style=solid];
m7_1278 -> m7_17  [key=2, style=dotted];
m7_1279 -> m7_1280  [key=0, style=solid];
m7_1279 -> m7_18  [key=2, style=dotted];
m7_1279 -> m7_1281  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_1280 -> m7_1272  [color=blue, key=0, style=bold];
m7_508 -> m7_509  [key=0, style=solid];
m7_509 -> m7_510  [key=0, style=solid];
m7_509 -> m7_13  [key=2, style=dotted];
m7_509 -> m7_14  [key=2, style=dotted];
m7_509 -> m7_511  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_510 -> m7_511  [key=0, style=solid];
m7_510 -> m7_138  [key=2, style=dotted];
m7_510 -> m7_16  [key=2, style=dotted];
m7_511 -> m7_512  [key=0, style=solid];
m7_511 -> m7_17  [key=2, style=dotted];
m7_512 -> m7_508  [color=blue, key=0, style=bold];
m7_757 -> m7_758  [key=0, style=solid];
m7_758 -> m7_759  [key=0, style=solid];
m7_758 -> m7_682  [color=darkorchid, key=3, label="Local variable Newtonsoft.Json.JsonTextReader reader", style=bold];
m7_759 -> m7_760  [key=0, style=solid];
m7_759 -> m7_13  [key=2, style=dotted];
m7_759 -> m7_14  [key=2, style=dotted];
m7_759 -> m7_761  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_759 -> m7_762  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_760 -> m7_761  [key=0, style=solid];
m7_760 -> m7_15  [key=2, style=dotted];
m7_760 -> m7_16  [key=2, style=dotted];
m7_761 -> m7_762  [key=0, style=solid];
m7_761 -> m7_17  [key=2, style=dotted];
m7_762 -> m7_763  [key=0, style=solid];
m7_762 -> m7_17  [key=2, style=dotted];
m7_763 -> m7_764  [key=0, style=solid];
m7_763 -> m7_13  [key=2, style=dotted];
m7_763 -> m7_14  [key=2, style=dotted];
m7_763 -> m7_765  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_763 -> m7_766  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_764 -> m7_765  [key=0, style=solid];
m7_764 -> m7_15  [key=2, style=dotted];
m7_764 -> m7_16  [key=2, style=dotted];
m7_765 -> m7_766  [key=0, style=solid];
m7_765 -> m7_17  [key=2, style=dotted];
m7_766 -> m7_767  [key=0, style=solid];
m7_766 -> m7_17  [key=2, style=dotted];
m7_767 -> m7_768  [key=0, style=solid];
m7_767 -> m7_13  [key=2, style=dotted];
m7_767 -> m7_14  [key=2, style=dotted];
m7_767 -> m7_769  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_767 -> m7_770  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_768 -> m7_769  [key=0, style=solid];
m7_768 -> m7_15  [key=2, style=dotted];
m7_768 -> m7_16  [key=2, style=dotted];
m7_769 -> m7_770  [key=0, style=solid];
m7_769 -> m7_17  [key=2, style=dotted];
m7_770 -> m7_771  [key=0, style=solid];
m7_770 -> m7_17  [key=2, style=dotted];
m7_771 -> m7_772  [key=0, style=solid];
m7_771 -> m7_13  [key=2, style=dotted];
m7_771 -> m7_14  [key=2, style=dotted];
m7_771 -> m7_773  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_771 -> m7_774  [color=red, key=1, label=reader, style=dashed];
m7_772 -> m7_773  [key=0, style=solid];
m7_772 -> m7_15  [key=2, style=dotted];
m7_772 -> m7_16  [key=2, style=dotted];
m7_773 -> m7_774  [color=red, key=0, style=solid];
m7_773 -> m7_17  [key=2, style=dotted];
m7_774 -> m7_775  [color=red, key=0, style=solid];
m7_774 -> m7_17  [color=red, key=2, style=dotted];
m7_775 -> m7_776  [key=0, style=solid];
m7_775 -> m7_13  [key=2, style=dotted];
m7_775 -> m7_14  [key=2, style=dotted];
m7_775 -> m7_787  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_776 -> m7_777  [key=0, style=solid];
m7_776 -> m7_18  [key=2, style=dotted];
m7_776 -> m7_786  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_777 -> m7_778  [key=0, style=solid];
m7_777 -> m7_13  [key=2, style=dotted];
m7_777 -> m7_14  [key=2, style=dotted];
m7_777 -> m7_779  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_777 -> m7_780  [color=red, key=1, label=reader, style=dashed];
m7_778 -> m7_779  [key=0, style=solid];
m7_778 -> m7_15  [key=2, style=dotted];
m7_778 -> m7_16  [key=2, style=dotted];
m7_779 -> m7_780  [color=red, key=0, style=solid];
m7_779 -> m7_17  [key=2, style=dotted];
m7_780 -> m7_781  [color=red, key=0, style=solid];
m7_780 -> m7_17  [color=red, key=2, style=dotted];
m7_781 -> m7_782  [key=0, style=solid];
m7_781 -> m7_13  [key=2, style=dotted];
m7_781 -> m7_14  [key=2, style=dotted];
m7_782 -> m7_783  [key=0, style=solid];
m7_782 -> m7_15  [key=2, style=dotted];
m7_782 -> m7_131  [key=2, style=dotted];
m7_783 -> m7_784  [key=0, style=solid];
m7_783 -> m7_13  [key=2, style=dotted];
m7_783 -> m7_14  [key=2, style=dotted];
m7_783 -> m7_790  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_784 -> m7_785  [key=0, style=solid];
m7_784 -> m7_18  [key=2, style=dotted];
m7_784 -> m7_789  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_785 -> m7_757  [color=blue, key=0, style=bold];
m7_1284 -> m7_1285  [key=0, style=solid];
m7_1285 -> m7_1286  [key=0, style=solid];
m7_1285 -> m7_13  [key=2, style=dotted];
m7_1285 -> m7_14  [key=2, style=dotted];
m7_1285 -> m7_1289  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1286 -> m7_1287  [key=0, style=solid];
m7_1286 -> m7_18  [key=2, style=dotted];
m7_1286 -> m7_1288  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_1287 -> m7_1284  [color=blue, key=0, style=bold];
m7_1319 -> m7_1320  [key=0, style=solid];
m7_1320 -> m7_1321  [key=0, style=solid];
m7_1320 -> m7_1320  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_1321 -> m7_1322  [key=0, style=solid];
m7_1321 -> m7_13  [key=2, style=dotted];
m7_1321 -> m7_14  [key=2, style=dotted];
m7_1321 -> m7_1323  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1321 -> m7_1324  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1321 -> m7_1325  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1321 -> m7_1326  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1321 -> m7_1327  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1321 -> m7_1328  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1321 -> m7_1330  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1321 -> m7_1331  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1322 -> m7_1323  [key=0, style=solid];
m7_1322 -> m7_15  [key=2, style=dotted];
m7_1322 -> m7_16  [key=2, style=dotted];
m7_1323 -> m7_1324  [key=0, style=solid];
m7_1323 -> m7_17  [key=2, style=dotted];
m7_1324 -> m7_1325  [key=0, style=solid];
m7_1324 -> m7_15  [key=2, style=dotted];
m7_1324 -> m7_16  [key=2, style=dotted];
m7_1325 -> m7_1326  [key=0, style=solid];
m7_1325 -> m7_17  [key=2, style=dotted];
m7_1326 -> m7_1327  [key=0, style=solid];
m7_1326 -> m7_747  [key=2, style=dotted];
m7_1326 -> m7_1329  [color=darkseagreen4, key=1, label=d, style=dashed];
m7_1327 -> m7_1328  [key=0, style=solid];
m7_1327 -> m7_17  [key=2, style=dotted];
m7_1328 -> m7_1329  [key=0, style=solid];
m7_1328 -> m7_17  [key=2, style=dotted];
m7_1330 -> m7_1331  [key=0, style=solid];
m7_1330 -> m7_15  [key=2, style=dotted];
m7_1330 -> m7_16  [key=2, style=dotted];
m7_1331 -> m7_1332  [key=0, style=solid];
m7_1331 -> m7_17  [key=2, style=dotted];
m7_1329 -> m7_1330  [key=0, style=solid];
m7_1329 -> m7_17  [key=2, style=dotted];
m7_1332 -> m7_1319  [color=blue, key=0, style=bold];
m7_651 -> m7_652  [key=0, style=solid];
m7_652 -> m7_653  [key=0, style=solid];
m7_652 -> m7_652  [color=darkorchid, key=3, label="Local variable string input", style=bold];
m7_653 -> m7_654  [key=0, style=solid];
m7_653 -> m7_14  [key=2, style=dotted];
m7_654 -> m7_655  [key=0, style=solid];
m7_654 -> m7_13  [key=2, style=dotted];
m7_654 -> m7_656  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_654 -> m7_657  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_654 -> m7_658  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_654 -> m7_659  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_654 -> m7_660  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_654 -> m7_661  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_654 -> m7_662  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_654 -> m7_663  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_654 -> m7_664  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_654 -> m7_665  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_654 -> m7_666  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_654 -> m7_667  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_654 -> m7_668  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_654 -> m7_669  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_655 -> m7_656  [key=0, style=solid];
m7_655 -> m7_17  [key=2, style=dotted];
m7_656 -> m7_657  [key=0, style=solid];
m7_656 -> m7_138  [key=2, style=dotted];
m7_657 -> m7_658  [key=0, style=solid];
m7_657 -> m7_17  [key=2, style=dotted];
m7_658 -> m7_659  [key=0, style=solid];
m7_658 -> m7_17  [key=2, style=dotted];
m7_659 -> m7_660  [key=0, style=solid];
m7_659 -> m7_138  [key=2, style=dotted];
m7_660 -> m7_661  [key=0, style=solid];
m7_660 -> m7_17  [key=2, style=dotted];
m7_661 -> m7_662  [key=0, style=solid];
m7_661 -> m7_17  [key=2, style=dotted];
m7_662 -> m7_663  [key=0, style=solid];
m7_662 -> m7_138  [key=2, style=dotted];
m7_663 -> m7_664  [key=0, style=solid];
m7_663 -> m7_17  [key=2, style=dotted];
m7_664 -> m7_665  [key=0, style=solid];
m7_664 -> m7_17  [key=2, style=dotted];
m7_665 -> m7_666  [key=0, style=solid];
m7_665 -> m7_17  [key=2, style=dotted];
m7_666 -> m7_667  [key=0, style=solid];
m7_666 -> m7_17  [key=2, style=dotted];
m7_667 -> m7_668  [key=0, style=solid];
m7_667 -> m7_138  [key=2, style=dotted];
m7_668 -> m7_669  [key=0, style=solid];
m7_668 -> m7_17  [key=2, style=dotted];
m7_669 -> m7_670  [key=0, style=solid];
m7_669 -> m7_17  [key=2, style=dotted];
m7_670 -> m7_651  [color=blue, key=0, style=bold];
m7_978 -> m7_979  [key=0, style=solid];
m7_979 -> m7_980  [key=0, style=solid];
m7_979 -> m7_14  [key=2, style=dotted];
m7_980 -> m7_981  [key=0, style=solid];
m7_980 -> m7_13  [key=2, style=dotted];
m7_980 -> m7_982  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_980 -> m7_983  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_980 -> m7_984  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_980 -> m7_985  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_980 -> m7_986  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_980 -> m7_987  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_980 -> m7_988  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_980 -> m7_989  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_980 -> m7_990  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_980 -> m7_991  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_980 -> m7_992  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_980 -> m7_993  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_980 -> m7_994  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_981 -> m7_982  [key=0, style=solid];
m7_981 -> m7_15  [key=2, style=dotted];
m7_981 -> m7_16  [key=2, style=dotted];
m7_982 -> m7_983  [key=0, style=solid];
m7_982 -> m7_17  [key=2, style=dotted];
m7_983 -> m7_984  [key=0, style=solid];
m7_983 -> m7_15  [key=2, style=dotted];
m7_983 -> m7_16  [key=2, style=dotted];
m7_984 -> m7_985  [key=0, style=solid];
m7_984 -> m7_17  [key=2, style=dotted];
m7_985 -> m7_986  [key=0, style=solid];
m7_985 -> m7_17  [key=2, style=dotted];
m7_986 -> m7_987  [key=0, style=solid];
m7_986 -> m7_15  [key=2, style=dotted];
m7_986 -> m7_16  [key=2, style=dotted];
m7_987 -> m7_988  [key=0, style=solid];
m7_987 -> m7_17  [key=2, style=dotted];
m7_988 -> m7_989  [key=0, style=solid];
m7_988 -> m7_17  [key=2, style=dotted];
m7_989 -> m7_990  [key=0, style=solid];
m7_989 -> m7_15  [key=2, style=dotted];
m7_989 -> m7_16  [key=2, style=dotted];
m7_990 -> m7_991  [key=0, style=solid];
m7_990 -> m7_17  [key=2, style=dotted];
m7_991 -> m7_992  [key=0, style=solid];
m7_991 -> m7_17  [key=2, style=dotted];
m7_992 -> m7_993  [key=0, style=solid];
m7_992 -> m7_15  [key=2, style=dotted];
m7_992 -> m7_16  [key=2, style=dotted];
m7_993 -> m7_994  [key=0, style=solid];
m7_993 -> m7_17  [key=2, style=dotted];
m7_994 -> m7_995  [key=0, style=solid];
m7_994 -> m7_15  [key=2, style=dotted];
m7_994 -> m7_131  [key=2, style=dotted];
m7_995 -> m7_978  [color=blue, key=0, style=bold];
m7_1834 -> m7_1835  [key=0, style=solid];
m7_20 -> m7_21  [key=0, style=solid];
m7_20 -> m7_15  [key=2, style=dotted];
m7_19 -> m7_20  [key=0, style=solid];
m7_21 -> m7_19  [color=blue, key=0, style=bold];
m7_57 -> m7_58  [key=0, style=solid];
m7_57 -> m7_15  [key=2, style=dotted];
m7_56 -> m7_57  [key=0, style=solid];
m7_58 -> m7_56  [color=blue, key=0, style=bold];
m7_165 -> m7_165  [key=0, style=solid];
m7_165 -> m7_166  [key=0, style=solid];
m7_165 -> m7_15  [key=2, style=dotted];
m7_164 -> m7_165  [key=0, style=solid];
m7_166 -> m7_164  [color=blue, key=0, style=bold];
m7_183 -> m7_184  [key=0, style=solid];
m7_183 -> m7_15  [key=2, style=dotted];
m7_182 -> m7_183  [key=0, style=solid];
m7_184 -> m7_182  [color=blue, key=0, style=bold];
m7_196 -> m7_196  [key=0, style=solid];
m7_196 -> m7_197  [key=0, style=solid];
m7_196 -> m7_15  [key=2, style=dotted];
m7_195 -> m7_196  [key=0, style=solid];
m7_197 -> m7_195  [color=blue, key=0, style=bold];
m7_350 -> m7_351  [key=0, style=solid];
m7_351 -> m7_352  [key=0, style=solid];
m7_351 -> m7_13  [key=2, style=dotted];
m7_352 -> m7_350  [color=blue, key=0, style=bold];
m7_358 -> m7_359  [key=0, style=solid];
m7_358 -> m7_138  [key=2, style=dotted];
m7_357 -> m7_358  [key=0, style=solid];
m7_359 -> m7_357  [color=blue, key=0, style=bold];
m7_448 -> m7_449  [key=0, style=solid];
m7_448 -> m7_13  [key=2, style=dotted];
m7_448 -> m7_14  [key=2, style=dotted];
m7_448 -> m7_446  [key=2, style=dotted];
m7_447 -> m7_448  [key=0, style=solid];
m7_449 -> m7_450  [key=0, style=solid];
m7_449 -> m7_451  [key=2, style=dotted];
m7_450 -> m7_447  [color=blue, key=0, style=bold];
m7_465 -> m7_466  [key=0, style=solid];
m7_465 -> m7_13  [key=2, style=dotted];
m7_465 -> m7_14  [key=2, style=dotted];
m7_465 -> m7_446  [key=2, style=dotted];
m7_464 -> m7_465  [key=0, style=solid];
m7_466 -> m7_467  [key=0, style=solid];
m7_466 -> m7_451  [key=2, style=dotted];
m7_467 -> m7_464  [color=blue, key=0, style=bold];
m7_518 -> m7_519  [key=0, style=solid];
m7_518 -> m7_138  [key=2, style=dotted];
m7_517 -> m7_518  [key=0, style=solid];
m7_519 -> m7_517  [color=blue, key=0, style=bold];
m7_525 -> m7_526  [key=0, style=solid];
m7_525 -> m7_138  [key=2, style=dotted];
m7_524 -> m7_525  [key=0, style=solid];
m7_526 -> m7_524  [color=blue, key=0, style=bold];
m7_532 -> m7_533  [key=0, style=solid];
m7_532 -> m7_534  [key=2, style=dotted];
m7_531 -> m7_532  [key=0, style=solid];
m7_533 -> m7_531  [color=blue, key=0, style=bold];
m7_543 -> m7_544  [key=0, style=solid];
m7_543 -> m7_534  [key=2, style=dotted];
m7_542 -> m7_543  [key=0, style=solid];
m7_544 -> m7_542  [color=blue, key=0, style=bold];
m7_558 -> m7_559  [key=0, style=solid];
m7_558 -> m7_138  [key=2, style=dotted];
m7_557 -> m7_558  [key=0, style=solid];
m7_559 -> m7_557  [color=blue, key=0, style=bold];
m7_711 -> m7_712  [key=0, style=solid];
m7_711 -> m7_451  [key=2, style=dotted];
m7_710 -> m7_711  [key=0, style=solid];
m7_714 -> m7_715  [key=0, style=solid];
m7_714 -> m7_451  [key=2, style=dotted];
m7_713 -> m7_714  [key=0, style=solid];
m7_717 -> m7_718  [key=0, style=solid];
m7_717 -> m7_451  [key=2, style=dotted];
m7_716 -> m7_717  [key=0, style=solid];
m7_720 -> m7_721  [key=0, style=solid];
m7_720 -> m7_451  [key=2, style=dotted];
m7_719 -> m7_720  [key=0, style=solid];
m7_723 -> m7_724  [key=0, style=solid];
m7_723 -> m7_451  [key=2, style=dotted];
m7_722 -> m7_723  [key=0, style=solid];
m7_712 -> m7_710  [color=blue, key=0, style=bold];
m7_715 -> m7_713  [color=blue, key=0, style=bold];
m7_718 -> m7_716  [color=blue, key=0, style=bold];
m7_721 -> m7_719  [color=blue, key=0, style=bold];
m7_724 -> m7_722  [color=blue, key=0, style=bold];
m7_749 -> m7_750  [key=0, style=solid];
m7_749 -> m7_747  [key=2, style=dotted];
m7_748 -> m7_749  [key=0, style=solid];
m7_752 -> m7_753  [key=0, style=solid];
m7_752 -> m7_15  [key=2, style=dotted];
m7_751 -> m7_752  [key=0, style=solid];
m7_755 -> m7_756  [key=0, style=solid];
m7_755 -> m7_747  [key=2, style=dotted];
m7_754 -> m7_755  [key=0, style=solid];
m7_750 -> m7_748  [color=blue, key=0, style=bold];
m7_753 -> m7_751  [color=blue, key=0, style=bold];
m7_756 -> m7_754  [color=blue, key=0, style=bold];
m7_787 -> m7_788  [key=0, style=solid];
m7_787 -> m7_15  [key=2, style=dotted];
m7_786 -> m7_787  [key=0, style=solid];
m7_790 -> m7_791  [key=0, style=solid];
m7_790 -> m7_15  [key=2, style=dotted];
m7_789 -> m7_790  [key=0, style=solid];
m7_788 -> m7_786  [color=blue, key=0, style=bold];
m7_791 -> m7_789  [color=blue, key=0, style=bold];
m7_965 -> m7_966  [key=0, style=solid];
m7_965 -> m7_15  [key=2, style=dotted];
m7_964 -> m7_965  [key=0, style=solid];
m7_966 -> m7_964  [color=blue, key=0, style=bold];
m7_1044 -> m7_1045  [key=0, style=solid];
m7_1044 -> m7_15  [key=2, style=dotted];
m7_1043 -> m7_1044  [key=0, style=solid];
m7_1045 -> m7_1043  [color=blue, key=0, style=bold];
m7_1061 -> m7_1062  [key=0, style=solid];
m7_1061 -> m7_975  [key=2, style=dotted];
m7_1060 -> m7_1061  [key=0, style=solid];
m7_1062 -> m7_1060  [color=blue, key=0, style=bold];
m7_1074 -> m7_1075  [key=0, style=solid];
m7_1074 -> m7_747  [key=2, style=dotted];
m7_1073 -> m7_1074  [key=0, style=solid];
m7_1075 -> m7_1073  [color=blue, key=0, style=bold];
m7_1081 -> m7_1082  [key=0, style=solid];
m7_1081 -> m7_975  [key=2, style=dotted];
m7_1080 -> m7_1081  [key=0, style=solid];
m7_1082 -> m7_1080  [color=blue, key=0, style=bold];
m7_1088 -> m7_1089  [key=0, style=solid];
m7_1088 -> m7_1068  [key=2, style=dotted];
m7_1087 -> m7_1088  [key=0, style=solid];
m7_1089 -> m7_1087  [color=blue, key=0, style=bold];
m7_1102 -> m7_1103  [key=0, style=solid];
m7_1102 -> m7_975  [key=2, style=dotted];
m7_1101 -> m7_1102  [key=0, style=solid];
m7_1103 -> m7_1101  [color=blue, key=0, style=bold];
m7_1109 -> m7_1110  [key=0, style=solid];
m7_1109 -> m7_975  [key=2, style=dotted];
m7_1108 -> m7_1109  [key=0, style=solid];
m7_1110 -> m7_1108  [color=blue, key=0, style=bold];
m7_1180 -> m7_1181  [key=0, style=solid];
m7_1180 -> m7_1068  [key=2, style=dotted];
m7_1179 -> m7_1180  [key=0, style=solid];
m7_1181 -> m7_1179  [color=blue, key=0, style=bold];
m7_1282 -> m7_1283  [key=0, style=solid];
m7_1282 -> m7_451  [key=2, style=dotted];
m7_1281 -> m7_1282  [key=0, style=solid];
m7_1283 -> m7_1281  [color=blue, key=0, style=bold];
m7_1289 -> m7_1290  [key=0, style=solid];
m7_1289 -> m7_15  [key=2, style=dotted];
m7_1288 -> m7_1289  [key=0, style=solid];
m7_1290 -> m7_1288  [color=blue, key=0, style=bold];
m7_1296 -> m7_1297  [key=0, style=solid];
m7_1296 -> m7_15  [key=2, style=dotted];
m7_1295 -> m7_1296  [key=0, style=solid];
m7_1297 -> m7_1295  [color=blue, key=0, style=bold];
m7_1303 -> m7_1304  [key=0, style=solid];
m7_1303 -> m7_15  [key=2, style=dotted];
m7_1302 -> m7_1303  [key=0, style=solid];
m7_1304 -> m7_1302  [color=blue, key=0, style=bold];
m7_1310 -> m7_1311  [key=0, style=solid];
m7_1310 -> m7_15  [key=2, style=dotted];
m7_1309 -> m7_1310  [key=0, style=solid];
m7_1311 -> m7_1309  [color=blue, key=0, style=bold];
m7_1317 -> m7_1318  [key=0, style=solid];
m7_1317 -> m7_15  [key=2, style=dotted];
m7_1316 -> m7_1317  [key=0, style=solid];
m7_1318 -> m7_1316  [color=blue, key=0, style=bold];
m7_1450 -> m7_1451  [key=0, style=solid];
m7_1450 -> m7_15  [key=2, style=dotted];
m7_1449 -> m7_1450  [key=0, style=solid];
m7_1451 -> m7_1449  [color=blue, key=0, style=bold];
m7_1458 -> m7_1459  [key=0, style=solid];
m7_1458 -> m7_15  [key=2, style=dotted];
m7_1457 -> m7_1458  [key=0, style=solid];
m7_1459 -> m7_1457  [color=blue, key=0, style=bold];
m7_1489 -> m7_1490  [key=0, style=solid];
m7_1489 -> m7_15  [key=2, style=dotted];
m7_1488 -> m7_1489  [key=0, style=solid];
m7_1490 -> m7_1488  [color=blue, key=0, style=bold];
m7_1506 -> m7_1507  [key=0, style=solid];
m7_1506 -> m7_15  [key=2, style=dotted];
m7_1506 -> m7_16  [key=2, style=dotted];
m7_1505 -> m7_1506  [key=0, style=solid];
m7_1507 -> m7_1505  [color=blue, key=0, style=bold];
m7_1607 -> m7_1608  [key=0, style=solid];
m7_1607 -> m7_138  [key=2, style=dotted];
m7_1606 -> m7_1607  [key=0, style=solid];
m7_1608 -> m7_1606  [color=blue, key=0, style=bold];
m7_1663 -> m7_1664  [key=0, style=solid];
m7_1663 -> m7_15  [key=2, style=dotted];
m7_1663 -> m7_16  [key=2, style=dotted];
m7_1662 -> m7_1663  [key=0, style=solid];
m7_1664 -> m7_1662  [color=blue, key=0, style=bold];
m7_1695 -> m7_1696  [key=0, style=solid];
m7_1695 -> m7_15  [key=2, style=dotted];
m7_1695 -> m7_16  [key=2, style=dotted];
m7_1698 -> m7_1699  [key=0, style=solid];
m7_1698 -> m7_15  [key=2, style=dotted];
m7_1698 -> m7_16  [key=2, style=dotted];
m7_1694 -> m7_1695  [key=0, style=solid];
m7_1697 -> m7_1698  [key=0, style=solid];
m7_1696 -> m7_1694  [color=blue, key=0, style=bold];
m7_1699 -> m7_1697  [color=blue, key=0, style=bold];
m7_1820 -> m7_1821  [key=0, style=solid];
m7_1820 -> m7_15  [key=2, style=dotted];
m7_1823 -> m7_1824  [key=0, style=solid];
m7_1823 -> m7_15  [key=2, style=dotted];
m7_1826 -> m7_1827  [key=0, style=solid];
m7_1826 -> m7_15  [key=2, style=dotted];
m7_1829 -> m7_1830  [key=0, style=solid];
m7_1829 -> m7_15  [key=2, style=dotted];
m7_1832 -> m7_1833  [key=0, style=solid];
m7_1832 -> m7_15  [key=2, style=dotted];
m7_1835 -> m7_1836  [key=0, style=solid];
m7_1835 -> m7_15  [key=2, style=dotted];
m7_1819 -> m7_1820  [key=0, style=solid];
m7_1822 -> m7_1823  [key=0, style=solid];
m7_1825 -> m7_1826  [key=0, style=solid];
m7_1828 -> m7_1829  [key=0, style=solid];
m7_1831 -> m7_1832  [key=0, style=solid];
m7_1821 -> m7_1819  [color=blue, key=0, style=bold];
m7_1824 -> m7_1822  [color=blue, key=0, style=bold];
m7_1827 -> m7_1825  [color=blue, key=0, style=bold];
m7_1830 -> m7_1828  [color=blue, key=0, style=bold];
m7_1833 -> m7_1831  [color=blue, key=0, style=bold];
m7_1836 -> m7_1834  [color=blue, key=0, style=bold];
m7_1038 -> m7_1039  [key=0, style=solid];
m7_1039 -> m7_1040  [key=0, style=solid];
m7_1039 -> m7_13  [key=2, style=dotted];
m7_1039 -> m7_14  [key=2, style=dotted];
m7_1039 -> m7_1041  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1039 -> m7_1044  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1040 -> m7_1041  [key=0, style=solid];
m7_1040 -> m7_15  [key=2, style=dotted];
m7_1041 -> m7_1042  [key=0, style=solid];
m7_1041 -> m7_18  [key=2, style=dotted];
m7_1041 -> m7_1043  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_1042 -> m7_1038  [color=blue, key=0, style=bold];
m7_891 -> m7_892  [key=0, style=solid];
m7_892 -> m7_893  [key=0, style=solid];
m7_892 -> m7_892  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_893 -> m7_894  [key=0, style=solid];
m7_893 -> m7_13  [key=2, style=dotted];
m7_893 -> m7_14  [key=2, style=dotted];
m7_893 -> m7_895  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_893 -> m7_896  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_893 -> m7_897  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_893 -> m7_898  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_893 -> m7_899  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_893 -> m7_900  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_893 -> m7_901  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_893 -> m7_902  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_893 -> m7_903  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_893 -> m7_904  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_893 -> m7_905  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_893 -> m7_906  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_893 -> m7_907  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_893 -> m7_908  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_893 -> m7_909  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_893 -> m7_910  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_893 -> m7_911  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_893 -> m7_912  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_893 -> m7_913  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_893 -> m7_914  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_893 -> m7_915  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_893 -> m7_916  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_893 -> m7_917  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_893 -> m7_918  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_893 -> m7_919  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_893 -> m7_920  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_893 -> m7_921  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_893 -> m7_922  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_893 -> m7_923  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_893 -> m7_924  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_893 -> m7_925  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_893 -> m7_926  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_893 -> m7_927  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_893 -> m7_928  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_893 -> m7_929  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_893 -> m7_930  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_893 -> m7_931  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_893 -> m7_932  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_893 -> m7_933  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_893 -> m7_934  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_893 -> m7_935  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_893 -> m7_936  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_893 -> m7_937  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_893 -> m7_938  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_893 -> m7_939  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_893 -> m7_940  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_893 -> m7_941  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_893 -> m7_942  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_893 -> m7_943  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_893 -> m7_944  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_893 -> m7_945  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_893 -> m7_946  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_893 -> m7_947  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_893 -> m7_948  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_893 -> m7_949  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_893 -> m7_950  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_893 -> m7_951  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_894 -> m7_895  [key=0, style=solid];
m7_894 -> m7_138  [key=2, style=dotted];
m7_895 -> m7_896  [key=0, style=solid];
m7_895 -> m7_17  [key=2, style=dotted];
m7_896 -> m7_897  [key=0, style=solid];
m7_896 -> m7_138  [key=2, style=dotted];
m7_897 -> m7_898  [key=0, style=solid];
m7_897 -> m7_17  [key=2, style=dotted];
m7_898 -> m7_899  [key=0, style=solid];
m7_898 -> m7_17  [key=2, style=dotted];
m7_899 -> m7_900  [key=0, style=solid];
m7_899 -> m7_138  [key=2, style=dotted];
m7_900 -> m7_901  [key=0, style=solid];
m7_900 -> m7_17  [key=2, style=dotted];
m7_901 -> m7_902  [key=0, style=solid];
m7_901 -> m7_17  [key=2, style=dotted];
m7_902 -> m7_903  [key=0, style=solid];
m7_902 -> m7_138  [key=2, style=dotted];
m7_903 -> m7_904  [key=0, style=solid];
m7_903 -> m7_17  [key=2, style=dotted];
m7_904 -> m7_905  [key=0, style=solid];
m7_904 -> m7_17  [key=2, style=dotted];
m7_905 -> m7_906  [key=0, style=solid];
m7_905 -> m7_138  [key=2, style=dotted];
m7_906 -> m7_907  [key=0, style=solid];
m7_906 -> m7_17  [key=2, style=dotted];
m7_907 -> m7_908  [key=0, style=solid];
m7_907 -> m7_17  [key=2, style=dotted];
m7_908 -> m7_909  [key=0, style=solid];
m7_908 -> m7_138  [key=2, style=dotted];
m7_909 -> m7_910  [key=0, style=solid];
m7_909 -> m7_17  [key=2, style=dotted];
m7_910 -> m7_911  [key=0, style=solid];
m7_910 -> m7_17  [key=2, style=dotted];
m7_911 -> m7_912  [key=0, style=solid];
m7_911 -> m7_138  [key=2, style=dotted];
m7_912 -> m7_913  [key=0, style=solid];
m7_912 -> m7_17  [key=2, style=dotted];
m7_913 -> m7_914  [key=0, style=solid];
m7_913 -> m7_17  [key=2, style=dotted];
m7_914 -> m7_915  [key=0, style=solid];
m7_914 -> m7_138  [key=2, style=dotted];
m7_915 -> m7_916  [key=0, style=solid];
m7_915 -> m7_17  [key=2, style=dotted];
m7_916 -> m7_917  [key=0, style=solid];
m7_916 -> m7_17  [key=2, style=dotted];
m7_917 -> m7_918  [key=0, style=solid];
m7_917 -> m7_138  [key=2, style=dotted];
m7_918 -> m7_919  [key=0, style=solid];
m7_918 -> m7_17  [key=2, style=dotted];
m7_919 -> m7_920  [key=0, style=solid];
m7_919 -> m7_17  [key=2, style=dotted];
m7_920 -> m7_921  [key=0, style=solid];
m7_920 -> m7_138  [key=2, style=dotted];
m7_921 -> m7_922  [key=0, style=solid];
m7_921 -> m7_17  [key=2, style=dotted];
m7_922 -> m7_923  [key=0, style=solid];
m7_922 -> m7_17  [key=2, style=dotted];
m7_923 -> m7_924  [key=0, style=solid];
m7_923 -> m7_138  [key=2, style=dotted];
m7_924 -> m7_925  [key=0, style=solid];
m7_924 -> m7_17  [key=2, style=dotted];
m7_925 -> m7_926  [key=0, style=solid];
m7_925 -> m7_17  [key=2, style=dotted];
m7_926 -> m7_927  [key=0, style=solid];
m7_926 -> m7_138  [key=2, style=dotted];
m7_927 -> m7_928  [key=0, style=solid];
m7_927 -> m7_17  [key=2, style=dotted];
m7_928 -> m7_929  [key=0, style=solid];
m7_928 -> m7_17  [key=2, style=dotted];
m7_929 -> m7_930  [key=0, style=solid];
m7_929 -> m7_138  [key=2, style=dotted];
m7_930 -> m7_931  [key=0, style=solid];
m7_930 -> m7_17  [key=2, style=dotted];
m7_931 -> m7_932  [key=0, style=solid];
m7_931 -> m7_17  [key=2, style=dotted];
m7_932 -> m7_933  [key=0, style=solid];
m7_932 -> m7_138  [key=2, style=dotted];
m7_933 -> m7_934  [key=0, style=solid];
m7_933 -> m7_17  [key=2, style=dotted];
m7_934 -> m7_935  [key=0, style=solid];
m7_934 -> m7_17  [key=2, style=dotted];
m7_935 -> m7_936  [key=0, style=solid];
m7_935 -> m7_138  [key=2, style=dotted];
m7_936 -> m7_937  [key=0, style=solid];
m7_936 -> m7_17  [key=2, style=dotted];
m7_937 -> m7_938  [key=0, style=solid];
m7_937 -> m7_17  [key=2, style=dotted];
m7_938 -> m7_939  [key=0, style=solid];
m7_938 -> m7_138  [key=2, style=dotted];
m7_939 -> m7_940  [key=0, style=solid];
m7_939 -> m7_17  [key=2, style=dotted];
m7_940 -> m7_941  [key=0, style=solid];
m7_940 -> m7_17  [key=2, style=dotted];
m7_941 -> m7_942  [key=0, style=solid];
m7_941 -> m7_138  [key=2, style=dotted];
m7_942 -> m7_943  [key=0, style=solid];
m7_942 -> m7_17  [key=2, style=dotted];
m7_943 -> m7_944  [key=0, style=solid];
m7_943 -> m7_17  [key=2, style=dotted];
m7_944 -> m7_945  [key=0, style=solid];
m7_944 -> m7_138  [key=2, style=dotted];
m7_945 -> m7_946  [key=0, style=solid];
m7_945 -> m7_17  [key=2, style=dotted];
m7_946 -> m7_947  [key=0, style=solid];
m7_946 -> m7_17  [key=2, style=dotted];
m7_947 -> m7_948  [key=0, style=solid];
m7_947 -> m7_138  [key=2, style=dotted];
m7_948 -> m7_949  [key=0, style=solid];
m7_948 -> m7_17  [key=2, style=dotted];
m7_949 -> m7_950  [key=0, style=solid];
m7_949 -> m7_17  [key=2, style=dotted];
m7_950 -> m7_951  [key=0, style=solid];
m7_950 -> m7_138  [key=2, style=dotted];
m7_951 -> m7_952  [key=0, style=solid];
m7_951 -> m7_17  [key=2, style=dotted];
m7_952 -> m7_891  [color=blue, key=0, style=bold];
m7_394 -> m7_395  [key=0, style=solid];
m7_395 -> m7_396  [key=0, style=solid];
m7_395 -> m7_395  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_396 -> m7_397  [key=0, style=solid];
m7_396 -> m7_13  [key=2, style=dotted];
m7_396 -> m7_116  [key=2, style=dotted];
m7_396 -> m7_157  [key=2, style=dotted];
m7_396 -> m7_158  [key=2, style=dotted];
m7_396 -> m7_398  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_396 -> m7_399  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_396 -> m7_400  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_396 -> m7_401  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_396 -> m7_402  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_396 -> m7_403  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_396 -> m7_404  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_396 -> m7_405  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_396 -> m7_406  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_396 -> m7_407  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_396 -> m7_408  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_396 -> m7_409  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_396 -> m7_410  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_396 -> m7_411  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_396 -> m7_412  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_396 -> m7_413  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_396 -> m7_414  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_396 -> m7_415  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_396 -> m7_416  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_396 -> m7_417  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_396 -> m7_418  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_396 -> m7_419  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_396 -> m7_420  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_396 -> m7_421  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_396 -> m7_422  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_396 -> m7_423  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_397 -> m7_398  [key=0, style=solid];
m7_397 -> m7_15  [key=2, style=dotted];
m7_397 -> m7_16  [key=2, style=dotted];
m7_398 -> m7_399  [key=0, style=solid];
m7_398 -> m7_17  [key=2, style=dotted];
m7_399 -> m7_400  [key=0, style=solid];
m7_399 -> m7_15  [key=2, style=dotted];
m7_399 -> m7_16  [key=2, style=dotted];
m7_400 -> m7_401  [key=0, style=solid];
m7_400 -> m7_17  [key=2, style=dotted];
m7_401 -> m7_402  [key=0, style=solid];
m7_401 -> m7_15  [key=2, style=dotted];
m7_401 -> m7_16  [key=2, style=dotted];
m7_402 -> m7_403  [key=0, style=solid];
m7_402 -> m7_17  [key=2, style=dotted];
m7_403 -> m7_404  [key=0, style=solid];
m7_403 -> m7_15  [key=2, style=dotted];
m7_403 -> m7_16  [key=2, style=dotted];
m7_404 -> m7_405  [key=0, style=solid];
m7_404 -> m7_17  [key=2, style=dotted];
m7_405 -> m7_406  [key=0, style=solid];
m7_405 -> m7_15  [key=2, style=dotted];
m7_405 -> m7_16  [key=2, style=dotted];
m7_406 -> m7_407  [key=0, style=solid];
m7_406 -> m7_17  [key=2, style=dotted];
m7_407 -> m7_408  [key=0, style=solid];
m7_407 -> m7_15  [key=2, style=dotted];
m7_407 -> m7_16  [key=2, style=dotted];
m7_408 -> m7_409  [key=0, style=solid];
m7_408 -> m7_17  [key=2, style=dotted];
m7_409 -> m7_410  [key=0, style=solid];
m7_409 -> m7_15  [key=2, style=dotted];
m7_409 -> m7_16  [key=2, style=dotted];
m7_410 -> m7_411  [key=0, style=solid];
m7_410 -> m7_17  [key=2, style=dotted];
m7_411 -> m7_412  [key=0, style=solid];
m7_411 -> m7_15  [key=2, style=dotted];
m7_411 -> m7_16  [key=2, style=dotted];
m7_412 -> m7_413  [key=0, style=solid];
m7_412 -> m7_17  [key=2, style=dotted];
m7_413 -> m7_414  [key=0, style=solid];
m7_413 -> m7_15  [key=2, style=dotted];
m7_413 -> m7_16  [key=2, style=dotted];
m7_414 -> m7_415  [key=0, style=solid];
m7_414 -> m7_17  [key=2, style=dotted];
m7_415 -> m7_416  [key=0, style=solid];
m7_415 -> m7_15  [key=2, style=dotted];
m7_415 -> m7_16  [key=2, style=dotted];
m7_416 -> m7_417  [key=0, style=solid];
m7_416 -> m7_17  [key=2, style=dotted];
m7_417 -> m7_418  [key=0, style=solid];
m7_417 -> m7_15  [key=2, style=dotted];
m7_417 -> m7_16  [key=2, style=dotted];
m7_418 -> m7_419  [key=0, style=solid];
m7_418 -> m7_17  [key=2, style=dotted];
m7_419 -> m7_420  [key=0, style=solid];
m7_419 -> m7_17  [key=2, style=dotted];
m7_420 -> m7_421  [key=0, style=solid];
m7_420 -> m7_15  [key=2, style=dotted];
m7_420 -> m7_16  [key=2, style=dotted];
m7_421 -> m7_422  [key=0, style=solid];
m7_421 -> m7_17  [key=2, style=dotted];
m7_422 -> m7_423  [key=0, style=solid];
m7_422 -> m7_17  [key=2, style=dotted];
m7_423 -> m7_424  [key=0, style=solid];
m7_423 -> m7_15  [key=2, style=dotted];
m7_423 -> m7_131  [key=2, style=dotted];
m7_424 -> m7_394  [color=blue, key=0, style=bold];
m7_513 -> m7_514  [key=0, style=solid];
m7_514 -> m7_515  [key=0, style=solid];
m7_514 -> m7_13  [key=2, style=dotted];
m7_514 -> m7_14  [key=2, style=dotted];
m7_514 -> m7_518  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_515 -> m7_516  [key=0, style=solid];
m7_515 -> m7_18  [key=2, style=dotted];
m7_515 -> m7_517  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_516 -> m7_513  [color=blue, key=0, style=bold];
m7_676 -> m7_677  [key=0, style=solid];
m7_677 -> m7_678  [key=0, style=solid];
m7_677 -> m7_677  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_678 -> m7_679  [key=0, style=solid];
m7_678 -> m7_13  [key=2, style=dotted];
m7_678 -> m7_14  [key=2, style=dotted];
m7_679 -> m7_679  [key=0, style=solid];
m7_679 -> m7_680  [key=0, style=solid];
m7_679 -> m7_15  [key=2, style=dotted];
m7_680 -> m7_676  [color=blue, key=0, style=bold];
m7_1359 -> m7_1360  [key=0, style=solid];
m7_1360 -> m7_1361  [key=0, style=solid];
m7_1360 -> m7_1360  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_1361 -> m7_1362  [key=0, style=solid];
m7_1361 -> m7_13  [key=2, style=dotted];
m7_1361 -> m7_14  [key=2, style=dotted];
m7_1361 -> m7_1364  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1361 -> m7_1366  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1361 -> m7_1367  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1361 -> m7_1368  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1362 -> m7_1363  [key=0, style=solid];
m7_1362 -> m7_1365  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_1362 -> m7_373  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m7_1364 -> m7_1365  [key=0, style=solid];
m7_1364 -> m7_15  [key=2, style=dotted];
m7_1364 -> m7_16  [key=2, style=dotted];
m7_1366 -> m7_1367  [key=0, style=solid];
m7_1366 -> m7_15  [key=2, style=dotted];
m7_1366 -> m7_16  [key=2, style=dotted];
m7_1367 -> m7_1368  [key=0, style=solid];
m7_1367 -> m7_17  [key=2, style=dotted];
m7_1368 -> m7_1369  [key=0, style=solid];
m7_1368 -> m7_15  [key=2, style=dotted];
m7_1368 -> m7_131  [key=2, style=dotted];
m7_1363 -> m7_1364  [key=0, style=solid];
m7_1363 -> m7_1366  [key=0, style=solid];
m7_1365 -> m7_1363  [key=0, style=solid];
m7_1365 -> m7_1365  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_1369 -> m7_1359  [color=blue, key=0, style=bold];
m7_140 -> m7_141  [key=0, style=solid];
m7_141 -> m7_142  [key=0, style=solid];
m7_141 -> m7_141  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_142 -> m7_143  [key=0, style=solid];
m7_142 -> m7_13  [key=2, style=dotted];
m7_142 -> m7_116  [key=2, style=dotted];
m7_142 -> m7_157  [key=2, style=dotted];
m7_142 -> m7_158  [key=2, style=dotted];
m7_142 -> m7_144  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_142 -> m7_145  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_142 -> m7_146  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_142 -> m7_147  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_142 -> m7_148  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_142 -> m7_149  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_142 -> m7_150  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_142 -> m7_151  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_142 -> m7_152  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_142 -> m7_153  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_142 -> m7_154  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_142 -> m7_155  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_143 -> m7_144  [key=0, style=solid];
m7_143 -> m7_138  [key=2, style=dotted];
m7_143 -> m7_16  [key=2, style=dotted];
m7_144 -> m7_145  [key=0, style=solid];
m7_144 -> m7_138  [key=2, style=dotted];
m7_144 -> m7_16  [key=2, style=dotted];
m7_145 -> m7_146  [key=0, style=solid];
m7_145 -> m7_138  [key=2, style=dotted];
m7_145 -> m7_16  [key=2, style=dotted];
m7_146 -> m7_147  [key=0, style=solid];
m7_146 -> m7_17  [key=2, style=dotted];
m7_147 -> m7_148  [key=0, style=solid];
m7_147 -> m7_17  [key=2, style=dotted];
m7_148 -> m7_149  [key=0, style=solid];
m7_148 -> m7_138  [key=2, style=dotted];
m7_148 -> m7_16  [key=2, style=dotted];
m7_149 -> m7_150  [key=0, style=solid];
m7_149 -> m7_17  [key=2, style=dotted];
m7_150 -> m7_151  [key=0, style=solid];
m7_150 -> m7_138  [key=2, style=dotted];
m7_150 -> m7_16  [key=2, style=dotted];
m7_151 -> m7_152  [key=0, style=solid];
m7_151 -> m7_17  [key=2, style=dotted];
m7_152 -> m7_153  [key=0, style=solid];
m7_152 -> m7_138  [key=2, style=dotted];
m7_152 -> m7_16  [key=2, style=dotted];
m7_153 -> m7_154  [key=0, style=solid];
m7_153 -> m7_17  [key=2, style=dotted];
m7_154 -> m7_155  [key=0, style=solid];
m7_154 -> m7_138  [key=2, style=dotted];
m7_154 -> m7_16  [key=2, style=dotted];
m7_155 -> m7_156  [key=0, style=solid];
m7_155 -> m7_17  [key=2, style=dotted];
m7_156 -> m7_140  [color=blue, key=0, style=bold];
m7_1656 -> m7_1657  [key=0, style=solid];
m7_1657 -> m7_1658  [key=0, style=solid];
m7_1657 -> m7_1657  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_1658 -> m7_1659  [key=0, style=solid];
m7_1658 -> m7_13  [key=2, style=dotted];
m7_1658 -> m7_14  [key=2, style=dotted];
m7_1658 -> m7_1660  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1658 -> m7_1663  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1659 -> m7_1660  [key=0, style=solid];
m7_1659 -> m7_15  [key=2, style=dotted];
m7_1659 -> m7_16  [key=2, style=dotted];
m7_1660 -> m7_1661  [key=0, style=solid];
m7_1660 -> m7_1504  [key=2, style=dotted];
m7_1660 -> m7_1662  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_1661 -> m7_1656  [color=blue, key=0, style=bold];
m7_1797 -> m7_1798  [key=0, style=solid];
m7_1798 -> m7_1799  [key=0, style=solid];
m7_1798 -> m7_1818  [key=2, style=dotted];
m7_1798 -> m7_14  [key=2, style=dotted];
m7_1798 -> m7_1801  [color=darkseagreen4, key=1, label=toggleReaderError, style=dashed];
m7_1798 -> m7_1804  [color=darkseagreen4, key=1, label=toggleReaderError, style=dashed];
m7_1798 -> m7_1807  [color=darkseagreen4, key=1, label=toggleReaderError, style=dashed];
m7_1798 -> m7_1809  [color=darkseagreen4, key=1, label=toggleReaderError, style=dashed];
m7_1798 -> m7_1812  [color=darkseagreen4, key=1, label=toggleReaderError, style=dashed];
m7_1798 -> m7_1816  [color=darkseagreen4, key=1, label=toggleReaderError, style=dashed];
m7_1799 -> m7_1800  [key=0, style=solid];
m7_1799 -> m7_13  [key=2, style=dotted];
m7_1799 -> m7_1802  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m7_1799 -> m7_1820  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m7_1799 -> m7_1803  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m7_1799 -> m7_1823  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m7_1799 -> m7_1805  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m7_1799 -> m7_1806  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m7_1799 -> m7_1808  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m7_1799 -> m7_1826  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m7_1799 -> m7_1810  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m7_1799 -> m7_1811  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m7_1799 -> m7_1813  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m7_1799 -> m7_1829  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m7_1799 -> m7_1814  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m7_1799 -> m7_1832  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m7_1799 -> m7_1815  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m7_1799 -> m7_1835  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m7_1801 -> m7_1802  [key=0, style=solid];
m7_1804 -> m7_1805  [key=0, style=solid];
m7_1807 -> m7_1808  [key=0, style=solid];
m7_1809 -> m7_1810  [key=0, style=solid];
m7_1812 -> m7_1813  [key=0, style=solid];
m7_1816 -> m7_1817  [key=0, style=solid];
m7_1800 -> m7_1801  [key=0, style=solid];
m7_1800 -> m7_15  [key=2, style=dotted];
m7_1800 -> m7_16  [key=2, style=dotted];
m7_1802 -> m7_1803  [key=0, style=solid];
m7_1802 -> m7_18  [key=2, style=dotted];
m7_1802 -> m7_1819  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_1803 -> m7_1804  [key=0, style=solid];
m7_1803 -> m7_18  [key=2, style=dotted];
m7_1803 -> m7_1822  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_1805 -> m7_1806  [key=0, style=solid];
m7_1805 -> m7_15  [key=2, style=dotted];
m7_1805 -> m7_16  [key=2, style=dotted];
m7_1806 -> m7_1807  [key=0, style=solid];
m7_1806 -> m7_17  [key=2, style=dotted];
m7_1808 -> m7_1809  [key=0, style=solid];
m7_1808 -> m7_18  [key=2, style=dotted];
m7_1808 -> m7_1825  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_1810 -> m7_1811  [key=0, style=solid];
m7_1810 -> m7_15  [key=2, style=dotted];
m7_1810 -> m7_16  [key=2, style=dotted];
m7_1811 -> m7_1812  [key=0, style=solid];
m7_1811 -> m7_17  [key=2, style=dotted];
m7_1813 -> m7_1814  [key=0, style=solid];
m7_1813 -> m7_18  [key=2, style=dotted];
m7_1813 -> m7_1828  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_1814 -> m7_1815  [key=0, style=solid];
m7_1814 -> m7_18  [key=2, style=dotted];
m7_1814 -> m7_1831  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_1815 -> m7_1816  [key=0, style=solid];
m7_1815 -> m7_18  [key=2, style=dotted];
m7_1815 -> m7_1834  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_1817 -> m7_1797  [color=blue, key=0, style=bold];
m7_520 -> m7_521  [key=0, style=solid];
m7_521 -> m7_522  [key=0, style=solid];
m7_521 -> m7_13  [key=2, style=dotted];
m7_521 -> m7_14  [key=2, style=dotted];
m7_521 -> m7_525  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_522 -> m7_523  [key=0, style=solid];
m7_522 -> m7_18  [key=2, style=dotted];
m7_522 -> m7_524  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_523 -> m7_520  [color=blue, key=0, style=bold];
m7_353 -> m7_354  [key=0, style=solid];
m7_354 -> m7_355  [key=0, style=solid];
m7_354 -> m7_13  [key=2, style=dotted];
m7_354 -> m7_14  [key=2, style=dotted];
m7_354 -> m7_358  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_355 -> m7_356  [key=0, style=solid];
m7_355 -> m7_18  [key=2, style=dotted];
m7_355 -> m7_357  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_356 -> m7_353  [color=blue, key=0, style=bold];
m7_1333 -> m7_1334  [key=0, style=solid];
m7_1334 -> m7_1335  [key=0, style=solid];
m7_1334 -> m7_1334  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_1335 -> m7_1336  [key=0, style=solid];
m7_1335 -> m7_13  [key=2, style=dotted];
m7_1335 -> m7_14  [key=2, style=dotted];
m7_1335 -> m7_1337  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1335 -> m7_1338  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1335 -> m7_1339  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1335 -> m7_1340  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1335 -> m7_1341  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1335 -> m7_1342  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1335 -> m7_1343  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1335 -> m7_1345  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1335 -> m7_1346  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1336 -> m7_1337  [key=0, style=solid];
m7_1336 -> m7_1243  [key=2, style=dotted];
m7_1337 -> m7_1338  [key=0, style=solid];
m7_1337 -> m7_15  [key=2, style=dotted];
m7_1337 -> m7_16  [key=2, style=dotted];
m7_1338 -> m7_1339  [key=0, style=solid];
m7_1338 -> m7_17  [key=2, style=dotted];
m7_1339 -> m7_1340  [key=0, style=solid];
m7_1339 -> m7_15  [key=2, style=dotted];
m7_1339 -> m7_16  [key=2, style=dotted];
m7_1340 -> m7_1341  [key=0, style=solid];
m7_1340 -> m7_17  [key=2, style=dotted];
m7_1341 -> m7_1342  [key=0, style=solid];
m7_1341 -> m7_747  [key=2, style=dotted];
m7_1341 -> m7_1344  [color=darkseagreen4, key=1, label=d, style=dashed];
m7_1342 -> m7_1343  [key=0, style=solid];
m7_1342 -> m7_17  [key=2, style=dotted];
m7_1343 -> m7_1344  [key=0, style=solid];
m7_1343 -> m7_17  [key=2, style=dotted];
m7_1345 -> m7_1346  [key=0, style=solid];
m7_1345 -> m7_15  [key=2, style=dotted];
m7_1345 -> m7_16  [key=2, style=dotted];
m7_1346 -> m7_1347  [key=0, style=solid];
m7_1346 -> m7_17  [key=2, style=dotted];
m7_1344 -> m7_1345  [key=0, style=solid];
m7_1344 -> m7_17  [key=2, style=dotted];
m7_1347 -> m7_1333  [color=blue, key=0, style=bold];
m7_250 -> m7_251  [key=0, style=solid];
m7_251 -> m7_252  [key=0, style=solid];
m7_251 -> m7_251  [color=darkorchid, key=3, label="Local variable string input", style=bold];
m7_252 -> m7_253  [key=0, style=solid];
m7_252 -> m7_14  [key=2, style=dotted];
m7_253 -> m7_254  [key=0, style=solid];
m7_253 -> m7_13  [key=2, style=dotted];
m7_253 -> m7_255  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_256  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_257  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_258  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_259  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_260  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_261  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_262  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_263  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_264  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_265  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_266  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_267  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_268  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_269  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_270  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_271  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_272  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_273  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_274  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_275  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_276  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_277  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_278  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_279  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_280  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_281  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_282  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_283  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_284  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_285  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_286  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_287  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_288  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_289  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_290  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_291  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_292  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_293  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_294  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_295  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_296  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_297  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_298  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_299  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_300  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_301  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_302  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_303  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_304  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_305  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_306  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_307  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_308  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_309  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_310  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_311  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_312  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_313  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_314  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_315  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_316  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_317  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_318  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_319  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_320  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_321  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_322  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_323  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_324  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_325  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_326  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_327  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_328  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_329  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_330  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_331  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_332  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_333  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_334  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_335  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_336  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_337  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_338  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_339  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_340  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_341  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_342  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_343  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_344  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_253 -> m7_345  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_254 -> m7_255  [key=0, style=solid];
m7_254 -> m7_17  [key=2, style=dotted];
m7_255 -> m7_256  [key=0, style=solid];
m7_255 -> m7_138  [key=2, style=dotted];
m7_256 -> m7_257  [key=0, style=solid];
m7_256 -> m7_17  [key=2, style=dotted];
m7_257 -> m7_258  [key=0, style=solid];
m7_257 -> m7_17  [key=2, style=dotted];
m7_258 -> m7_259  [key=0, style=solid];
m7_258 -> m7_17  [key=2, style=dotted];
m7_259 -> m7_260  [key=0, style=solid];
m7_259 -> m7_138  [key=2, style=dotted];
m7_260 -> m7_261  [key=0, style=solid];
m7_260 -> m7_17  [key=2, style=dotted];
m7_261 -> m7_262  [key=0, style=solid];
m7_261 -> m7_17  [key=2, style=dotted];
m7_262 -> m7_263  [key=0, style=solid];
m7_262 -> m7_17  [key=2, style=dotted];
m7_263 -> m7_264  [key=0, style=solid];
m7_263 -> m7_138  [key=2, style=dotted];
m7_264 -> m7_265  [key=0, style=solid];
m7_264 -> m7_17  [key=2, style=dotted];
m7_265 -> m7_266  [key=0, style=solid];
m7_265 -> m7_17  [key=2, style=dotted];
m7_266 -> m7_267  [key=0, style=solid];
m7_266 -> m7_17  [key=2, style=dotted];
m7_267 -> m7_268  [key=0, style=solid];
m7_267 -> m7_17  [key=2, style=dotted];
m7_268 -> m7_269  [key=0, style=solid];
m7_268 -> m7_17  [key=2, style=dotted];
m7_269 -> m7_270  [key=0, style=solid];
m7_269 -> m7_138  [key=2, style=dotted];
m7_270 -> m7_271  [key=0, style=solid];
m7_270 -> m7_17  [key=2, style=dotted];
m7_271 -> m7_272  [key=0, style=solid];
m7_271 -> m7_17  [key=2, style=dotted];
m7_272 -> m7_273  [key=0, style=solid];
m7_272 -> m7_17  [key=2, style=dotted];
m7_273 -> m7_274  [key=0, style=solid];
m7_273 -> m7_138  [key=2, style=dotted];
m7_274 -> m7_275  [key=0, style=solid];
m7_274 -> m7_17  [key=2, style=dotted];
m7_275 -> m7_276  [key=0, style=solid];
m7_275 -> m7_17  [key=2, style=dotted];
m7_276 -> m7_277  [key=0, style=solid];
m7_276 -> m7_17  [key=2, style=dotted];
m7_277 -> m7_278  [key=0, style=solid];
m7_277 -> m7_138  [key=2, style=dotted];
m7_278 -> m7_279  [key=0, style=solid];
m7_278 -> m7_17  [key=2, style=dotted];
m7_279 -> m7_280  [key=0, style=solid];
m7_279 -> m7_17  [key=2, style=dotted];
m7_280 -> m7_281  [key=0, style=solid];
m7_280 -> m7_17  [key=2, style=dotted];
m7_281 -> m7_282  [key=0, style=solid];
m7_281 -> m7_17  [key=2, style=dotted];
m7_282 -> m7_283  [key=0, style=solid];
m7_282 -> m7_138  [key=2, style=dotted];
m7_283 -> m7_284  [key=0, style=solid];
m7_283 -> m7_17  [key=2, style=dotted];
m7_284 -> m7_285  [key=0, style=solid];
m7_284 -> m7_17  [key=2, style=dotted];
m7_285 -> m7_286  [key=0, style=solid];
m7_285 -> m7_17  [key=2, style=dotted];
m7_286 -> m7_287  [key=0, style=solid];
m7_286 -> m7_17  [key=2, style=dotted];
m7_287 -> m7_288  [key=0, style=solid];
m7_287 -> m7_138  [key=2, style=dotted];
m7_288 -> m7_289  [key=0, style=solid];
m7_288 -> m7_17  [key=2, style=dotted];
m7_289 -> m7_290  [key=0, style=solid];
m7_289 -> m7_17  [key=2, style=dotted];
m7_290 -> m7_291  [key=0, style=solid];
m7_290 -> m7_17  [key=2, style=dotted];
m7_291 -> m7_292  [key=0, style=solid];
m7_291 -> m7_17  [key=2, style=dotted];
m7_292 -> m7_293  [key=0, style=solid];
m7_292 -> m7_138  [key=2, style=dotted];
m7_293 -> m7_294  [key=0, style=solid];
m7_293 -> m7_17  [key=2, style=dotted];
m7_294 -> m7_295  [key=0, style=solid];
m7_294 -> m7_17  [key=2, style=dotted];
m7_295 -> m7_296  [key=0, style=solid];
m7_295 -> m7_17  [key=2, style=dotted];
m7_296 -> m7_297  [key=0, style=solid];
m7_296 -> m7_17  [key=2, style=dotted];
m7_297 -> m7_298  [key=0, style=solid];
m7_297 -> m7_138  [key=2, style=dotted];
m7_298 -> m7_299  [key=0, style=solid];
m7_298 -> m7_17  [key=2, style=dotted];
m7_299 -> m7_300  [key=0, style=solid];
m7_299 -> m7_17  [key=2, style=dotted];
m7_300 -> m7_301  [key=0, style=solid];
m7_300 -> m7_17  [key=2, style=dotted];
m7_301 -> m7_302  [key=0, style=solid];
m7_301 -> m7_17  [key=2, style=dotted];
m7_302 -> m7_303  [key=0, style=solid];
m7_302 -> m7_138  [key=2, style=dotted];
m7_303 -> m7_304  [key=0, style=solid];
m7_303 -> m7_17  [key=2, style=dotted];
m7_304 -> m7_305  [key=0, style=solid];
m7_304 -> m7_17  [key=2, style=dotted];
m7_305 -> m7_306  [key=0, style=solid];
m7_305 -> m7_17  [key=2, style=dotted];
m7_306 -> m7_307  [key=0, style=solid];
m7_306 -> m7_138  [key=2, style=dotted];
m7_307 -> m7_308  [key=0, style=solid];
m7_307 -> m7_17  [key=2, style=dotted];
m7_308 -> m7_309  [key=0, style=solid];
m7_308 -> m7_17  [key=2, style=dotted];
m7_309 -> m7_310  [key=0, style=solid];
m7_309 -> m7_17  [key=2, style=dotted];
m7_310 -> m7_311  [key=0, style=solid];
m7_310 -> m7_138  [key=2, style=dotted];
m7_311 -> m7_312  [key=0, style=solid];
m7_311 -> m7_17  [key=2, style=dotted];
m7_312 -> m7_313  [key=0, style=solid];
m7_312 -> m7_17  [key=2, style=dotted];
m7_313 -> m7_314  [key=0, style=solid];
m7_313 -> m7_17  [key=2, style=dotted];
m7_314 -> m7_315  [key=0, style=solid];
m7_314 -> m7_138  [key=2, style=dotted];
m7_315 -> m7_316  [key=0, style=solid];
m7_315 -> m7_17  [key=2, style=dotted];
m7_316 -> m7_317  [key=0, style=solid];
m7_316 -> m7_17  [key=2, style=dotted];
m7_317 -> m7_318  [key=0, style=solid];
m7_317 -> m7_17  [key=2, style=dotted];
m7_318 -> m7_319  [key=0, style=solid];
m7_318 -> m7_138  [key=2, style=dotted];
m7_319 -> m7_320  [key=0, style=solid];
m7_319 -> m7_17  [key=2, style=dotted];
m7_320 -> m7_321  [key=0, style=solid];
m7_320 -> m7_17  [key=2, style=dotted];
m7_321 -> m7_322  [key=0, style=solid];
m7_321 -> m7_17  [key=2, style=dotted];
m7_322 -> m7_323  [key=0, style=solid];
m7_322 -> m7_138  [key=2, style=dotted];
m7_323 -> m7_324  [key=0, style=solid];
m7_323 -> m7_17  [key=2, style=dotted];
m7_324 -> m7_325  [key=0, style=solid];
m7_324 -> m7_17  [key=2, style=dotted];
m7_325 -> m7_326  [key=0, style=solid];
m7_325 -> m7_17  [key=2, style=dotted];
m7_326 -> m7_327  [key=0, style=solid];
m7_326 -> m7_138  [key=2, style=dotted];
m7_327 -> m7_328  [key=0, style=solid];
m7_327 -> m7_17  [key=2, style=dotted];
m7_328 -> m7_329  [key=0, style=solid];
m7_328 -> m7_17  [key=2, style=dotted];
m7_329 -> m7_330  [key=0, style=solid];
m7_329 -> m7_17  [key=2, style=dotted];
m7_330 -> m7_331  [key=0, style=solid];
m7_330 -> m7_138  [key=2, style=dotted];
m7_331 -> m7_332  [key=0, style=solid];
m7_331 -> m7_17  [key=2, style=dotted];
m7_332 -> m7_333  [key=0, style=solid];
m7_332 -> m7_17  [key=2, style=dotted];
m7_333 -> m7_334  [key=0, style=solid];
m7_333 -> m7_17  [key=2, style=dotted];
m7_334 -> m7_335  [key=0, style=solid];
m7_334 -> m7_138  [key=2, style=dotted];
m7_335 -> m7_336  [key=0, style=solid];
m7_335 -> m7_17  [key=2, style=dotted];
m7_336 -> m7_337  [key=0, style=solid];
m7_336 -> m7_17  [key=2, style=dotted];
m7_337 -> m7_338  [key=0, style=solid];
m7_337 -> m7_17  [key=2, style=dotted];
m7_338 -> m7_339  [key=0, style=solid];
m7_338 -> m7_138  [key=2, style=dotted];
m7_339 -> m7_340  [key=0, style=solid];
m7_339 -> m7_17  [key=2, style=dotted];
m7_340 -> m7_341  [key=0, style=solid];
m7_340 -> m7_17  [key=2, style=dotted];
m7_341 -> m7_342  [key=0, style=solid];
m7_341 -> m7_17  [key=2, style=dotted];
m7_342 -> m7_343  [key=0, style=solid];
m7_342 -> m7_138  [key=2, style=dotted];
m7_343 -> m7_344  [key=0, style=solid];
m7_343 -> m7_17  [key=2, style=dotted];
m7_344 -> m7_345  [key=0, style=solid];
m7_344 -> m7_17  [key=2, style=dotted];
m7_345 -> m7_346  [key=0, style=solid];
m7_345 -> m7_17  [key=2, style=dotted];
m7_346 -> m7_250  [color=blue, key=0, style=bold];
m7_1379 -> m7_1380  [key=0, style=solid];
m7_1380 -> m7_1381  [key=0, style=solid];
m7_1380 -> m7_1380  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_1381 -> m7_1382  [key=0, style=solid];
m7_1381 -> m7_13  [key=2, style=dotted];
m7_1381 -> m7_14  [key=2, style=dotted];
m7_1381 -> m7_1383  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1381 -> m7_1384  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1381 -> m7_1385  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1381 -> m7_1386  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1382 -> m7_1383  [key=0, style=solid];
m7_1382 -> m7_15  [key=2, style=dotted];
m7_1382 -> m7_16  [key=2, style=dotted];
m7_1383 -> m7_1384  [key=0, style=solid];
m7_1383 -> m7_17  [key=2, style=dotted];
m7_1384 -> m7_1385  [key=0, style=solid];
m7_1384 -> m7_17  [key=2, style=dotted];
m7_1385 -> m7_1386  [key=0, style=solid];
m7_1385 -> m7_15  [key=2, style=dotted];
m7_1385 -> m7_16  [key=2, style=dotted];
m7_1386 -> m7_1387  [key=0, style=solid];
m7_1386 -> m7_17  [key=2, style=dotted];
m7_1387 -> m7_1379  [color=blue, key=0, style=bold];
m7_1570 -> m7_1571  [key=0, style=solid];
m7_1571 -> m7_1572  [key=0, style=solid];
m7_1571 -> m7_1571  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_1572 -> m7_1573  [key=0, style=solid];
m7_1572 -> m7_13  [key=2, style=dotted];
m7_1572 -> m7_14  [key=2, style=dotted];
m7_1572 -> m7_1574  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1572 -> m7_1575  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1573 -> m7_1574  [key=0, style=solid];
m7_1573 -> m7_747  [key=2, style=dotted];
m7_1574 -> m7_1575  [key=0, style=solid];
m7_1574 -> m7_17  [key=2, style=dotted];
m7_1575 -> m7_1576  [key=0, style=solid];
m7_1575 -> m7_17  [key=2, style=dotted];
m7_1576 -> m7_1570  [color=blue, key=0, style=bold];
m7_1837 -> m7_1838  [key=0, style=solid];
m7_1838 -> m7_1839  [key=0, style=solid];
m7_1838 -> m7_388  [key=2, style=dotted];
m7_1838 -> m7_1844  [color=darkseagreen4, key=1, label=sw, style=dashed];
m7_1839 -> m7_1840  [key=0, style=solid];
m7_1839 -> m7_389  [key=2, style=dotted];
m7_1839 -> m7_1841  [color=darkseagreen4, key=1, label=writer, style=dashed];
m7_1839 -> m7_1842  [color=darkseagreen4, key=1, label=writer, style=dashed];
m7_1839 -> m7_1843  [color=darkseagreen4, key=1, label=writer, style=dashed];
m7_1844 -> m7_1845  [key=0, style=solid];
m7_1844 -> m7_393  [key=2, style=dotted];
m7_1840 -> m7_1841  [key=0, style=solid];
m7_1840 -> m7_390  [key=2, style=dotted];
m7_1841 -> m7_1842  [key=0, style=solid];
m7_1841 -> m7_1854  [key=2, style=dotted];
m7_1842 -> m7_1843  [key=0, style=solid];
m7_1842 -> m7_1854  [key=2, style=dotted];
m7_1843 -> m7_1844  [key=0, style=solid];
m7_1843 -> m7_392  [key=2, style=dotted];
m7_1845 -> m7_1846  [key=0, style=solid];
m7_1845 -> m7_14  [key=2, style=dotted];
m7_1846 -> m7_1847  [key=0, style=solid];
m7_1846 -> m7_13  [key=2, style=dotted];
m7_1846 -> m7_1848  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1846 -> m7_1850  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1846 -> m7_1852  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1847 -> m7_1848  [key=0, style=solid];
m7_1847 -> m7_15  [key=2, style=dotted];
m7_1847 -> m7_16  [key=2, style=dotted];
m7_1848 -> m7_1849  [key=0, style=solid];
m7_1848 -> m7_747  [key=2, style=dotted];
m7_1850 -> m7_1851  [key=0, style=solid];
m7_1850 -> m7_747  [key=2, style=dotted];
m7_1852 -> m7_1853  [key=0, style=solid];
m7_1852 -> m7_15  [key=2, style=dotted];
m7_1852 -> m7_16  [key=2, style=dotted];
m7_1849 -> m7_1850  [key=0, style=solid];
m7_1849 -> m7_17  [key=2, style=dotted];
m7_1851 -> m7_1852  [key=0, style=solid];
m7_1851 -> m7_17  [key=2, style=dotted];
m7_1853 -> m7_1837  [color=blue, key=0, style=bold];
m7_1872 -> m7_1873  [key=0, style=solid];
m7_1872 -> m7_1876  [color=darkseagreen4, key=1, label="byte[]", style=dashed];
m7_1873 -> m7_1874  [key=0, style=solid];
m7_1873 -> m7_1880  [key=2, style=dotted];
m7_1876 -> m7_1877  [key=0, style=solid];
m7_1876 -> m7_1881  [key=2, style=dotted];
m7_1874 -> m7_1875  [key=0, style=solid];
m7_1874 -> m7_1880  [key=2, style=dotted];
m7_1874 -> m7_1874  [color=darkseagreen4, key=1, label=toReturn, style=dashed];
m7_1874 -> m7_1876  [color=darkseagreen4, key=1, label=toReturn, style=dashed];
m7_1874 -> m7_1877  [color=darkseagreen4, key=1, label=toReturn, style=dashed];
m7_1874 -> m7_1878  [color=darkseagreen4, key=1, label=toReturn, style=dashed];
m7_1875 -> m7_1876  [key=0, style=solid];
m7_1875 -> m7_1877  [key=0, style=solid];
m7_1877 -> m7_1878  [key=0, style=solid];
m7_1878 -> m7_1879  [key=0, style=solid];
m7_1879 -> m7_1872  [color=blue, key=0, style=bold];
m7_527 -> m7_528  [key=0, style=solid];
m7_528 -> m7_529  [key=0, style=solid];
m7_528 -> m7_13  [key=2, style=dotted];
m7_528 -> m7_14  [key=2, style=dotted];
m7_528 -> m7_532  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_529 -> m7_530  [key=0, style=solid];
m7_529 -> m7_18  [key=2, style=dotted];
m7_529 -> m7_531  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_530 -> m7_527  [color=blue, key=0, style=bold];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_2  [key=0, style=solid];
m7_1 -> m7_1  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_2 -> m7_3  [key=0, style=solid];
m7_2 -> m7_13  [key=2, style=dotted];
m7_2 -> m7_14  [key=2, style=dotted];
m7_2 -> m7_4  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_2 -> m7_5  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_2 -> m7_6  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_2 -> m7_7  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_2 -> m7_8  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_2 -> m7_9  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_2 -> m7_10  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_2 -> m7_11  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_2 -> m7_20  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_3 -> m7_4  [key=0, style=solid];
m7_3 -> m7_15  [key=2, style=dotted];
m7_3 -> m7_16  [key=2, style=dotted];
m7_4 -> m7_5  [key=0, style=solid];
m7_4 -> m7_17  [key=2, style=dotted];
m7_5 -> m7_6  [key=0, style=solid];
m7_5 -> m7_15  [key=2, style=dotted];
m7_5 -> m7_16  [key=2, style=dotted];
m7_6 -> m7_7  [key=0, style=solid];
m7_6 -> m7_17  [key=2, style=dotted];
m7_7 -> m7_8  [key=0, style=solid];
m7_7 -> m7_15  [key=2, style=dotted];
m7_7 -> m7_16  [key=2, style=dotted];
m7_8 -> m7_9  [key=0, style=solid];
m7_8 -> m7_17  [key=2, style=dotted];
m7_9 -> m7_10  [key=0, style=solid];
m7_9 -> m7_15  [key=2, style=dotted];
m7_9 -> m7_16  [key=2, style=dotted];
m7_10 -> m7_11  [key=0, style=solid];
m7_10 -> m7_17  [key=2, style=dotted];
m7_11 -> m7_12  [key=0, style=solid];
m7_11 -> m7_18  [key=2, style=dotted];
m7_11 -> m7_19  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_12 -> m7_0  [color=blue, key=0, style=bold];
m7_605 -> m7_606  [key=0, style=solid];
m7_606 -> m7_607  [key=0, style=solid];
m7_606 -> m7_13  [key=2, style=dotted];
m7_606 -> m7_14  [key=2, style=dotted];
m7_606 -> m7_608  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_606 -> m7_609  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_606 -> m7_610  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_606 -> m7_611  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_606 -> m7_612  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_606 -> m7_613  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_606 -> m7_614  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_606 -> m7_615  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_606 -> m7_616  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_607 -> m7_608  [key=0, style=solid];
m7_607 -> m7_138  [key=2, style=dotted];
m7_607 -> m7_16  [key=2, style=dotted];
m7_608 -> m7_609  [key=0, style=solid];
m7_608 -> m7_138  [key=2, style=dotted];
m7_608 -> m7_16  [key=2, style=dotted];
m7_609 -> m7_610  [key=0, style=solid];
m7_609 -> m7_17  [key=2, style=dotted];
m7_610 -> m7_611  [key=0, style=solid];
m7_610 -> m7_17  [key=2, style=dotted];
m7_611 -> m7_612  [key=0, style=solid];
m7_611 -> m7_138  [key=2, style=dotted];
m7_611 -> m7_16  [key=2, style=dotted];
m7_612 -> m7_613  [key=0, style=solid];
m7_612 -> m7_17  [key=2, style=dotted];
m7_613 -> m7_614  [key=0, style=solid];
m7_613 -> m7_17  [key=2, style=dotted];
m7_614 -> m7_615  [key=0, style=solid];
m7_614 -> m7_138  [key=2, style=dotted];
m7_614 -> m7_16  [key=2, style=dotted];
m7_615 -> m7_616  [key=0, style=solid];
m7_615 -> m7_17  [key=2, style=dotted];
m7_616 -> m7_617  [key=0, style=solid];
m7_616 -> m7_138  [key=2, style=dotted];
m7_616 -> m7_131  [key=2, style=dotted];
m7_617 -> m7_605  [color=blue, key=0, style=bold];
m7_1864 -> m7_1865  [key=0, style=solid];
m7_1864 -> m7_1867  [color=darkseagreen4, key=1, label=int, style=dashed];
m7_1865 -> m7_1866  [key=0, style=solid];
m7_1867 -> m7_1868  [key=0, style=solid];
m7_1866 -> m7_1867  [key=0, style=solid];
m7_1868 -> m7_1864  [color=blue, key=0, style=bold];
m7_1531 -> m7_1532  [key=0, style=solid];
m7_1532 -> m7_1533  [key=0, style=solid];
m7_1533 -> m7_1534  [key=0, style=solid];
m7_1533 -> m7_13  [key=2, style=dotted];
m7_1533 -> m7_116  [key=2, style=dotted];
m7_1533 -> m7_157  [key=2, style=dotted];
m7_1533 -> m7_158  [key=2, style=dotted];
m7_1533 -> m7_1535  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1533 -> m7_1536  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1533 -> m7_1537  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1533 -> m7_1538  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1533 -> m7_1539  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1533 -> m7_1540  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1533 -> m7_1541  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1533 -> m7_1542  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1533 -> m7_1543  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1533 -> m7_1544  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1533 -> m7_1545  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1533 -> m7_1546  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1533 -> m7_1547  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1533 -> m7_1548  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1533 -> m7_1549  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1533 -> m7_1550  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1533 -> m7_1551  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1533 -> m7_1552  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1533 -> m7_1553  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1533 -> m7_1554  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1533 -> m7_1555  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1533 -> m7_1556  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1533 -> m7_1557  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1533 -> m7_1558  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1533 -> m7_1559  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1533 -> m7_1560  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1533 -> m7_1561  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1533 -> m7_1562  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1533 -> m7_1563  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1533 -> m7_1564  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1533 -> m7_1565  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1533 -> m7_1566  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1533 -> m7_1567  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1533 -> m7_1568  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1534 -> m7_1535  [key=0, style=solid];
m7_1534 -> m7_15  [key=2, style=dotted];
m7_1534 -> m7_16  [key=2, style=dotted];
m7_1535 -> m7_1536  [key=0, style=solid];
m7_1535 -> m7_17  [key=2, style=dotted];
m7_1536 -> m7_1537  [key=0, style=solid];
m7_1536 -> m7_15  [key=2, style=dotted];
m7_1536 -> m7_16  [key=2, style=dotted];
m7_1537 -> m7_1538  [key=0, style=solid];
m7_1537 -> m7_17  [key=2, style=dotted];
m7_1538 -> m7_1539  [key=0, style=solid];
m7_1538 -> m7_15  [key=2, style=dotted];
m7_1538 -> m7_16  [key=2, style=dotted];
m7_1539 -> m7_1540  [key=0, style=solid];
m7_1539 -> m7_17  [key=2, style=dotted];
m7_1540 -> m7_1541  [key=0, style=solid];
m7_1540 -> m7_15  [key=2, style=dotted];
m7_1540 -> m7_16  [key=2, style=dotted];
m7_1541 -> m7_1542  [key=0, style=solid];
m7_1541 -> m7_17  [key=2, style=dotted];
m7_1542 -> m7_1543  [key=0, style=solid];
m7_1542 -> m7_17  [key=2, style=dotted];
m7_1543 -> m7_1544  [key=0, style=solid];
m7_1543 -> m7_15  [key=2, style=dotted];
m7_1543 -> m7_16  [key=2, style=dotted];
m7_1544 -> m7_1545  [key=0, style=solid];
m7_1544 -> m7_17  [key=2, style=dotted];
m7_1545 -> m7_1546  [key=0, style=solid];
m7_1545 -> m7_15  [key=2, style=dotted];
m7_1545 -> m7_16  [key=2, style=dotted];
m7_1546 -> m7_1547  [key=0, style=solid];
m7_1546 -> m7_17  [key=2, style=dotted];
m7_1547 -> m7_1548  [key=0, style=solid];
m7_1547 -> m7_17  [key=2, style=dotted];
m7_1548 -> m7_1549  [key=0, style=solid];
m7_1548 -> m7_15  [key=2, style=dotted];
m7_1548 -> m7_16  [key=2, style=dotted];
m7_1549 -> m7_1550  [key=0, style=solid];
m7_1549 -> m7_17  [key=2, style=dotted];
m7_1550 -> m7_1551  [key=0, style=solid];
m7_1550 -> m7_15  [key=2, style=dotted];
m7_1550 -> m7_16  [key=2, style=dotted];
m7_1551 -> m7_1552  [key=0, style=solid];
m7_1551 -> m7_17  [key=2, style=dotted];
m7_1552 -> m7_1553  [key=0, style=solid];
m7_1552 -> m7_15  [key=2, style=dotted];
m7_1552 -> m7_16  [key=2, style=dotted];
m7_1553 -> m7_1554  [key=0, style=solid];
m7_1553 -> m7_17  [key=2, style=dotted];
m7_1554 -> m7_1555  [key=0, style=solid];
m7_1554 -> m7_17  [key=2, style=dotted];
m7_1555 -> m7_1556  [key=0, style=solid];
m7_1555 -> m7_15  [key=2, style=dotted];
m7_1555 -> m7_16  [key=2, style=dotted];
m7_1556 -> m7_1557  [key=0, style=solid];
m7_1556 -> m7_17  [key=2, style=dotted];
m7_1557 -> m7_1558  [key=0, style=solid];
m7_1557 -> m7_15  [key=2, style=dotted];
m7_1557 -> m7_16  [key=2, style=dotted];
m7_1558 -> m7_1559  [key=0, style=solid];
m7_1558 -> m7_17  [key=2, style=dotted];
m7_1559 -> m7_1560  [key=0, style=solid];
m7_1559 -> m7_17  [key=2, style=dotted];
m7_1560 -> m7_1561  [key=0, style=solid];
m7_1560 -> m7_17  [key=2, style=dotted];
m7_1561 -> m7_1562  [key=0, style=solid];
m7_1561 -> m7_15  [key=2, style=dotted];
m7_1561 -> m7_16  [key=2, style=dotted];
m7_1562 -> m7_1563  [key=0, style=solid];
m7_1562 -> m7_17  [key=2, style=dotted];
m7_1563 -> m7_1564  [key=0, style=solid];
m7_1563 -> m7_15  [key=2, style=dotted];
m7_1563 -> m7_16  [key=2, style=dotted];
m7_1564 -> m7_1565  [key=0, style=solid];
m7_1564 -> m7_17  [key=2, style=dotted];
m7_1565 -> m7_1566  [key=0, style=solid];
m7_1565 -> m7_15  [key=2, style=dotted];
m7_1565 -> m7_16  [key=2, style=dotted];
m7_1566 -> m7_1567  [key=0, style=solid];
m7_1566 -> m7_17  [key=2, style=dotted];
m7_1567 -> m7_1568  [key=0, style=solid];
m7_1567 -> m7_15  [key=2, style=dotted];
m7_1567 -> m7_16  [key=2, style=dotted];
m7_1568 -> m7_1569  [key=0, style=solid];
m7_1568 -> m7_17  [key=2, style=dotted];
m7_1569 -> m7_1531  [color=blue, key=0, style=bold];
m7_1818 -> m7_1855  [key=0, style=solid];
m7_1855 -> m7_1856  [key=0, style=solid];
m7_1856 -> m7_1818  [color=blue, key=0, style=bold];
m7_107 -> m7_108  [key=0, style=solid];
m7_107 -> m7_94  [color=darkorchid, key=3, label="Parameter variable string input", style=bold];
m7_107 -> m7_95  [color=darkorchid, key=3, label="Parameter variable string input", style=bold];
m7_107 -> m7_96  [color=darkorchid, key=3, label="Parameter variable string input", style=bold];
m7_107 -> m7_97  [color=darkorchid, key=3, label="Parameter variable string input", style=bold];
m7_107 -> m7_98  [color=darkorchid, key=3, label="Parameter variable string input", style=bold];
m7_107 -> m7_99  [color=darkorchid, key=3, label="Parameter variable string input", style=bold];
m7_107 -> m7_100  [color=darkorchid, key=3, label="Parameter variable string input", style=bold];
m7_107 -> m7_101  [color=darkorchid, key=3, label="Parameter variable string input", style=bold];
m7_107 -> m7_102  [color=darkorchid, key=3, label="Parameter variable string input", style=bold];
m7_107 -> m7_103  [color=darkorchid, key=3, label="Parameter variable string input", style=bold];
m7_107 -> m7_104  [color=darkorchid, key=3, label="Parameter variable string input", style=bold];
m7_107 -> m7_105  [color=darkorchid, key=3, label="Parameter variable string input", style=bold];
m7_107 -> m7_111  [color=darkorchid, key=3, label="method methodReturn string ReadString", style=bold];
m7_108 -> m7_109  [key=0, style=solid];
m7_108 -> m7_114  [key=2, style=dotted];
m7_108 -> m7_115  [key=2, style=dotted];
m7_109 -> m7_110  [key=0, style=solid];
m7_109 -> m7_13  [key=2, style=dotted];
m7_109 -> m7_116  [key=2, style=dotted];
m7_109 -> m7_111  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_110 -> m7_111  [key=0, style=solid];
m7_110 -> m7_15  [key=2, style=dotted];
m7_111 -> m7_112  [key=0, style=solid];
m7_112 -> m7_113  [key=0, style=solid];
m7_113 -> m7_107  [color=blue, key=0, style=bold];
m7_953 -> m7_954  [key=0, style=solid];
m7_954 -> m7_955  [key=0, style=solid];
m7_954 -> m7_954  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_955 -> m7_956  [key=0, style=solid];
m7_955 -> m7_13  [key=2, style=dotted];
m7_955 -> m7_14  [key=2, style=dotted];
m7_955 -> m7_957  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_955 -> m7_958  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_955 -> m7_959  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_955 -> m7_960  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_955 -> m7_961  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_955 -> m7_962  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_955 -> m7_965  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_956 -> m7_957  [key=0, style=solid];
m7_956 -> m7_15  [key=2, style=dotted];
m7_957 -> m7_958  [key=0, style=solid];
m7_957 -> m7_17  [key=2, style=dotted];
m7_958 -> m7_959  [key=0, style=solid];
m7_958 -> m7_15  [key=2, style=dotted];
m7_959 -> m7_960  [key=0, style=solid];
m7_959 -> m7_17  [key=2, style=dotted];
m7_960 -> m7_961  [key=0, style=solid];
m7_960 -> m7_15  [key=2, style=dotted];
m7_961 -> m7_962  [key=0, style=solid];
m7_961 -> m7_17  [key=2, style=dotted];
m7_962 -> m7_963  [key=0, style=solid];
m7_962 -> m7_18  [key=2, style=dotted];
m7_962 -> m7_964  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_963 -> m7_953  [color=blue, key=0, style=bold];
m7_1444 -> m7_1445  [key=0, style=solid];
m7_1445 -> m7_1446  [key=0, style=solid];
m7_1445 -> m7_1445  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_1446 -> m7_1447  [key=0, style=solid];
m7_1446 -> m7_13  [key=2, style=dotted];
m7_1446 -> m7_14  [key=2, style=dotted];
m7_1446 -> m7_1450  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1447 -> m7_1448  [key=0, style=solid];
m7_1447 -> m7_18  [key=2, style=dotted];
m7_1447 -> m7_1449  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_1448 -> m7_1444  [color=blue, key=0, style=bold];
m7_862 -> m7_863  [key=0, style=solid];
m7_863 -> m7_864  [key=0, style=solid];
m7_863 -> m7_863  [color=darkorchid, key=3, label="Local variable int length", style=bold];
m7_864 -> m7_865  [key=0, style=solid];
m7_864 -> m7_366  [key=2, style=dotted];
m7_865 -> m7_866  [key=0, style=solid];
m7_865 -> m7_13  [key=2, style=dotted];
m7_865 -> m7_14  [key=2, style=dotted];
m7_865 -> m7_867  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_865 -> m7_868  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_865 -> m7_869  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_865 -> m7_870  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_865 -> m7_871  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_865 -> m7_872  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_865 -> m7_873  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_865 -> m7_874  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_865 -> m7_875  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_866 -> m7_867  [key=0, style=solid];
m7_866 -> m7_15  [key=2, style=dotted];
m7_867 -> m7_868  [key=0, style=solid];
m7_867 -> m7_17  [key=2, style=dotted];
m7_868 -> m7_869  [key=0, style=solid];
m7_868 -> m7_15  [key=2, style=dotted];
m7_869 -> m7_870  [key=0, style=solid];
m7_869 -> m7_17  [key=2, style=dotted];
m7_870 -> m7_871  [key=0, style=solid];
m7_870 -> m7_17  [key=2, style=dotted];
m7_871 -> m7_872  [key=0, style=solid];
m7_871 -> m7_91  [key=2, style=dotted];
m7_871 -> m7_17  [key=2, style=dotted];
m7_872 -> m7_873  [key=0, style=solid];
m7_872 -> m7_15  [key=2, style=dotted];
m7_872 -> m7_16  [key=2, style=dotted];
m7_873 -> m7_874  [key=0, style=solid];
m7_873 -> m7_17  [key=2, style=dotted];
m7_874 -> m7_875  [key=0, style=solid];
m7_874 -> m7_15  [key=2, style=dotted];
m7_874 -> m7_131  [key=2, style=dotted];
m7_875 -> m7_876  [key=0, style=solid];
m7_875 -> m7_17  [key=2, style=dotted];
m7_876 -> m7_862  [color=blue, key=0, style=bold];
m7_132 -> m7_133  [key=0, style=solid];
m7_133 -> m7_134  [key=0, style=solid];
m7_133 -> m7_133  [color=darkorchid, key=3, label="Local variable string input", style=bold];
m7_134 -> m7_135  [key=0, style=solid];
m7_134 -> m7_13  [key=2, style=dotted];
m7_134 -> m7_14  [key=2, style=dotted];
m7_134 -> m7_136  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_135 -> m7_136  [key=0, style=solid];
m7_135 -> m7_137  [key=0, style=solid];
m7_135 -> m7_138  [key=2, style=dotted];
m7_136 -> m7_135  [key=0, style=solid];
m7_136 -> m7_139  [key=2, style=dotted];
m7_137 -> m7_132  [color=blue, key=0, style=bold];
m7_185 -> m7_186  [key=0, style=solid];
m7_186 -> m7_187  [key=0, style=solid];
m7_186 -> m7_186  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_187 -> m7_188  [key=0, style=solid];
m7_187 -> m7_13  [key=2, style=dotted];
m7_187 -> m7_14  [key=2, style=dotted];
m7_188 -> m7_188  [key=0, style=solid];
m7_188 -> m7_189  [key=0, style=solid];
m7_188 -> m7_15  [key=2, style=dotted];
m7_189 -> m7_185  [color=blue, key=0, style=bold];
m7_360 -> m7_361  [key=0, style=solid];
m7_361 -> m7_362  [key=0, style=solid];
m7_361 -> m7_366  [key=2, style=dotted];
m7_361 -> m7_364  [color=darkseagreen4, key=1, label=s, style=dashed];
m7_362 -> m7_363  [key=0, style=solid];
m7_362 -> m7_13  [key=2, style=dotted];
m7_362 -> m7_14  [key=2, style=dotted];
m7_362 -> m7_364  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_364 -> m7_365  [key=0, style=solid];
m7_364 -> m7_17  [key=2, style=dotted];
m7_363 -> m7_364  [key=0, style=solid];
m7_363 -> m7_138  [key=2, style=dotted];
m7_365 -> m7_360  [color=blue, key=0, style=bold];
m7_157 -> m7_1869  [key=0, style=solid];
m7_1869 -> m7_157  [color=blue, key=0, style=bold];
m7_1468 -> m7_1469  [key=0, style=solid];
m7_1469 -> m7_1470  [key=0, style=solid];
m7_1469 -> m7_1469  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_1470 -> m7_1471  [key=0, style=solid];
m7_1470 -> m7_13  [key=2, style=dotted];
m7_1470 -> m7_14  [key=2, style=dotted];
m7_1470 -> m7_1472  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1470 -> m7_1473  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1470 -> m7_1474  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1471 -> m7_1472  [key=0, style=solid];
m7_1471 -> m7_15  [key=2, style=dotted];
m7_1471 -> m7_16  [key=2, style=dotted];
m7_1472 -> m7_1473  [key=0, style=solid];
m7_1472 -> m7_17  [key=2, style=dotted];
m7_1473 -> m7_1474  [key=0, style=solid];
m7_1473 -> m7_15  [key=2, style=dotted];
m7_1473 -> m7_16  [key=2, style=dotted];
m7_1474 -> m7_1475  [key=0, style=solid];
m7_1474 -> m7_17  [key=2, style=dotted];
m7_1475 -> m7_1468  [color=blue, key=0, style=bold];
m7_634 -> m7_635  [key=0, style=solid];
m7_635 -> m7_636  [key=0, style=solid];
m7_635 -> m7_536  [color=darkorchid, key=3, label="Local variable string helloWorld", style=bold];
m7_636 -> m7_637  [key=0, style=solid];
m7_636 -> m7_115  [key=2, style=dotted];
m7_636 -> m7_645  [color=darkseagreen4, key=1, label=helloWorldData, style=dashed];
m7_637 -> m7_638  [key=0, style=solid];
m7_637 -> m7_13  [key=2, style=dotted];
m7_637 -> m7_14  [key=2, style=dotted];
m7_637 -> m7_541  [key=2, style=dotted];
m7_637 -> m7_639  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_637 -> m7_640  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_637 -> m7_641  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_637 -> m7_642  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_637 -> m7_643  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_637 -> m7_644  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_637 -> m7_646  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_637 -> m7_647  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_637 -> m7_648  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_637 -> m7_649  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_645 -> m7_646  [key=0, style=solid];
m7_645 -> m7_633  [key=2, style=dotted];
m7_638 -> m7_639  [key=0, style=solid];
m7_638 -> m7_138  [key=2, style=dotted];
m7_638 -> m7_16  [key=2, style=dotted];
m7_639 -> m7_640  [key=0, style=solid];
m7_639 -> m7_17  [key=2, style=dotted];
m7_640 -> m7_641  [key=0, style=solid];
m7_640 -> m7_138  [key=2, style=dotted];
m7_640 -> m7_16  [key=2, style=dotted];
m7_641 -> m7_642  [key=0, style=solid];
m7_641 -> m7_138  [key=2, style=dotted];
m7_641 -> m7_16  [key=2, style=dotted];
m7_642 -> m7_643  [key=0, style=solid];
m7_642 -> m7_17  [key=2, style=dotted];
m7_643 -> m7_644  [key=0, style=solid];
m7_643 -> m7_138  [key=2, style=dotted];
m7_643 -> m7_16  [key=2, style=dotted];
m7_644 -> m7_645  [key=0, style=solid];
m7_644 -> m7_534  [key=2, style=dotted];
m7_646 -> m7_647  [key=0, style=solid];
m7_646 -> m7_17  [key=2, style=dotted];
m7_647 -> m7_648  [key=0, style=solid];
m7_647 -> m7_138  [key=2, style=dotted];
m7_647 -> m7_16  [key=2, style=dotted];
m7_648 -> m7_649  [key=0, style=solid];
m7_648 -> m7_17  [key=2, style=dotted];
m7_649 -> m7_650  [key=0, style=solid];
m7_649 -> m7_138  [key=2, style=dotted];
m7_649 -> m7_131  [key=2, style=dotted];
m7_650 -> m7_634  [color=blue, key=0, style=bold];
m7_792 -> m7_793  [key=0, style=solid];
m7_793 -> m7_794  [key=0, style=solid];
m7_793 -> m7_829  [key=2, style=dotted];
m7_793 -> m7_820  [color=darkseagreen4, key=1, label=sb, style=dashed];
m7_794 -> m7_795  [key=0, style=solid];
m7_794 -> m7_830  [key=2, style=dotted];
m7_820 -> m7_821  [key=0, style=solid];
m7_820 -> m7_840  [key=2, style=dotted];
m7_820 -> m7_822  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_820 -> m7_827  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_795 -> m7_796  [key=0, style=solid];
m7_795 -> m7_389  [key=2, style=dotted];
m7_795 -> m7_797  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_795 -> m7_798  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_795 -> m7_799  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_795 -> m7_800  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_795 -> m7_801  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_795 -> m7_802  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_795 -> m7_803  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_795 -> m7_804  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_795 -> m7_807  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_795 -> m7_809  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_795 -> m7_810  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_795 -> m7_811  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_795 -> m7_812  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_795 -> m7_813  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_795 -> m7_814  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_795 -> m7_815  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_795 -> m7_816  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_795 -> m7_817  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_795 -> m7_818  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_795 -> m7_819  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_796 -> m7_797  [key=0, style=solid];
m7_796 -> m7_831  [key=2, style=dotted];
m7_797 -> m7_798  [key=0, style=solid];
m7_797 -> m7_832  [key=2, style=dotted];
m7_798 -> m7_799  [key=0, style=solid];
m7_798 -> m7_833  [key=2, style=dotted];
m7_799 -> m7_800  [key=0, style=solid];
m7_799 -> m7_834  [key=2, style=dotted];
m7_800 -> m7_801  [key=0, style=solid];
m7_800 -> m7_835  [key=2, style=dotted];
m7_801 -> m7_802  [key=0, style=solid];
m7_801 -> m7_834  [key=2, style=dotted];
m7_802 -> m7_803  [key=0, style=solid];
m7_802 -> m7_836  [key=2, style=dotted];
m7_803 -> m7_804  [key=0, style=solid];
m7_803 -> m7_834  [key=2, style=dotted];
m7_804 -> m7_805  [key=0, style=solid];
m7_804 -> m7_831  [key=2, style=dotted];
m7_807 -> m7_808  [key=0, style=solid];
m7_807 -> m7_835  [key=2, style=dotted];
m7_809 -> m7_810  [key=0, style=solid];
m7_809 -> m7_833  [key=2, style=dotted];
m7_810 -> m7_811  [key=0, style=solid];
m7_810 -> m7_834  [key=2, style=dotted];
m7_811 -> m7_812  [key=0, style=solid];
m7_811 -> m7_837  [key=2, style=dotted];
m7_812 -> m7_813  [key=0, style=solid];
m7_812 -> m7_838  [key=2, style=dotted];
m7_813 -> m7_814  [key=0, style=solid];
m7_813 -> m7_835  [key=2, style=dotted];
m7_814 -> m7_815  [key=0, style=solid];
m7_814 -> m7_392  [key=2, style=dotted];
m7_815 -> m7_816  [key=0, style=solid];
m7_815 -> m7_838  [key=2, style=dotted];
m7_816 -> m7_817  [key=0, style=solid];
m7_816 -> m7_836  [key=2, style=dotted];
m7_817 -> m7_818  [key=0, style=solid];
m7_817 -> m7_839  [key=2, style=dotted];
m7_818 -> m7_819  [key=0, style=solid];
m7_818 -> m7_839  [key=2, style=dotted];
m7_819 -> m7_820  [key=0, style=solid];
m7_819 -> m7_392  [key=2, style=dotted];
m7_805 -> m7_806  [key=0, style=solid];
m7_805 -> m7_807  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_805 -> m7_808  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_805 -> m7_373  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m7_806 -> m7_807  [key=0, style=solid];
m7_806 -> m7_809  [key=0, style=solid];
m7_808 -> m7_806  [key=0, style=solid];
m7_808 -> m7_808  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_821 -> m7_822  [key=0, style=solid];
m7_821 -> m7_841  [key=2, style=dotted];
m7_821 -> m7_826  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m7_822 -> m7_823  [key=0, style=solid];
m7_822 -> m7_13  [key=2, style=dotted];
m7_822 -> m7_14  [key=2, style=dotted];
m7_822 -> m7_842  [key=2, style=dotted];
m7_822 -> m7_826  [color=darkseagreen4, key=1, label=jsonObject, style=dashed];
m7_827 -> m7_828  [key=0, style=solid];
m7_827 -> m7_840  [key=2, style=dotted];
m7_827 -> m7_17  [key=2, style=dotted];
m7_826 -> m7_827  [key=0, style=solid];
m7_826 -> m7_843  [key=2, style=dotted];
m7_823 -> m7_824  [key=0, style=solid];
m7_823 -> m7_829  [key=2, style=dotted];
m7_823 -> m7_827  [color=darkseagreen4, key=1, label=sb, style=dashed];
m7_824 -> m7_825  [key=0, style=solid];
m7_824 -> m7_830  [key=2, style=dotted];
m7_825 -> m7_826  [key=0, style=solid];
m7_825 -> m7_389  [key=2, style=dotted];
m7_828 -> m7_792  [color=blue, key=0, style=bold];
m7_93 -> m7_94  [key=0, style=solid];
m7_94 -> m7_95  [key=0, style=solid];
m7_94 -> m7_107  [key=2, style=dotted];
m7_94 -> m7_17  [key=2, style=dotted];
m7_95 -> m7_96  [key=0, style=solid];
m7_95 -> m7_107  [key=2, style=dotted];
m7_95 -> m7_17  [key=2, style=dotted];
m7_96 -> m7_97  [key=0, style=solid];
m7_96 -> m7_107  [key=2, style=dotted];
m7_96 -> m7_17  [key=2, style=dotted];
m7_97 -> m7_98  [key=0, style=solid];
m7_97 -> m7_107  [key=2, style=dotted];
m7_97 -> m7_17  [key=2, style=dotted];
m7_98 -> m7_99  [key=0, style=solid];
m7_98 -> m7_107  [key=2, style=dotted];
m7_98 -> m7_17  [key=2, style=dotted];
m7_99 -> m7_100  [key=0, style=solid];
m7_99 -> m7_107  [key=2, style=dotted];
m7_99 -> m7_17  [key=2, style=dotted];
m7_100 -> m7_101  [key=0, style=solid];
m7_100 -> m7_107  [key=2, style=dotted];
m7_100 -> m7_17  [key=2, style=dotted];
m7_101 -> m7_102  [key=0, style=solid];
m7_101 -> m7_107  [key=2, style=dotted];
m7_101 -> m7_17  [key=2, style=dotted];
m7_102 -> m7_103  [key=0, style=solid];
m7_102 -> m7_107  [key=2, style=dotted];
m7_102 -> m7_17  [key=2, style=dotted];
m7_103 -> m7_104  [key=0, style=solid];
m7_103 -> m7_107  [key=2, style=dotted];
m7_103 -> m7_17  [key=2, style=dotted];
m7_104 -> m7_105  [key=0, style=solid];
m7_104 -> m7_107  [key=2, style=dotted];
m7_104 -> m7_17  [key=2, style=dotted];
m7_105 -> m7_106  [key=0, style=solid];
m7_105 -> m7_107  [key=2, style=dotted];
m7_105 -> m7_17  [key=2, style=dotted];
m7_106 -> m7_93  [color=blue, key=0, style=bold];
m7_1348 -> m7_1349  [key=0, style=solid];
m7_1349 -> m7_1350  [key=0, style=solid];
m7_1349 -> m7_1349  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_1350 -> m7_1351  [key=0, style=solid];
m7_1350 -> m7_13  [key=2, style=dotted];
m7_1350 -> m7_14  [key=2, style=dotted];
m7_1350 -> m7_1353  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1350 -> m7_1355  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1350 -> m7_1356  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1351 -> m7_1352  [key=0, style=solid];
m7_1351 -> m7_1354  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_1351 -> m7_373  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m7_1353 -> m7_1354  [key=0, style=solid];
m7_1353 -> m7_15  [key=2, style=dotted];
m7_1355 -> m7_1356  [key=0, style=solid];
m7_1355 -> m7_15  [key=2, style=dotted];
m7_1355 -> m7_16  [key=2, style=dotted];
m7_1356 -> m7_1357  [key=0, style=solid];
m7_1356 -> m7_1358  [key=2, style=dotted];
m7_1356 -> m7_17  [key=2, style=dotted];
m7_1352 -> m7_1353  [key=0, style=solid];
m7_1352 -> m7_1355  [key=0, style=solid];
m7_1354 -> m7_1352  [key=0, style=solid];
m7_1354 -> m7_1354  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_1357 -> m7_1348  [color=blue, key=0, style=bold];
m7_468 -> m7_469  [key=0, style=solid];
m7_469 -> m7_470  [key=0, style=solid];
m7_469 -> m7_481  [key=2, style=dotted];
m7_469 -> m7_475  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_470 -> m7_471  [key=0, style=solid];
m7_470 -> m7_13  [key=2, style=dotted];
m7_470 -> m7_482  [key=2, style=dotted];
m7_470 -> m7_483  [key=2, style=dotted];
m7_470 -> m7_472  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_475 -> m7_476  [key=0, style=solid];
m7_471 -> m7_472  [key=0, style=solid];
m7_471 -> m7_15  [key=2, style=dotted];
m7_472 -> m7_473  [key=0, style=solid];
m7_472 -> m7_17  [key=2, style=dotted];
m7_473 -> m7_474  [key=0, style=solid];
m7_473 -> m7_475  [color=darkseagreen4, key=1, label=j, style=dashed];
m7_473 -> m7_479  [color=darkseagreen4, key=1, label=j, style=dashed];
m7_473 -> m7_440  [color=darkorchid, key=3, label="Local variable int j", style=bold];
m7_474 -> m7_475  [key=0, style=solid];
m7_474 -> m7_480  [key=0, style=solid];
m7_479 -> m7_474  [key=0, style=solid];
m7_479 -> m7_479  [color=darkseagreen4, key=1, label=j, style=dashed];
m7_476 -> m7_477  [key=0, style=solid];
m7_476 -> m7_13  [key=2, style=dotted];
m7_476 -> m7_482  [key=2, style=dotted];
m7_476 -> m7_483  [key=2, style=dotted];
m7_476 -> m7_478  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_477 -> m7_478  [key=0, style=solid];
m7_477 -> m7_15  [key=2, style=dotted];
m7_478 -> m7_479  [key=0, style=solid];
m7_478 -> m7_17  [key=2, style=dotted];
m7_480 -> m7_468  [color=blue, key=0, style=bold];
m7_1046 -> m7_1047  [key=0, style=solid];
m7_1047 -> m7_1048  [key=0, style=solid];
m7_1047 -> m7_13  [key=2, style=dotted];
m7_1047 -> m7_14  [key=2, style=dotted];
m7_1047 -> m7_1049  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1048 -> m7_1049  [key=0, style=solid];
m7_1048 -> m7_747  [key=2, style=dotted];
m7_1048 -> m7_551  [key=2, style=dotted];
m7_1049 -> m7_1050  [key=0, style=solid];
m7_1049 -> m7_17  [key=2, style=dotted];
m7_1050 -> m7_1046  [color=blue, key=0, style=bold];
m7_877 -> m7_878  [key=0, style=solid];
m7_878 -> m7_879  [key=0, style=solid];
m7_878 -> m7_878  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_879 -> m7_880  [key=0, style=solid];
m7_879 -> m7_13  [key=2, style=dotted];
m7_879 -> m7_14  [key=2, style=dotted];
m7_879 -> m7_881  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_879 -> m7_882  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_879 -> m7_883  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_879 -> m7_884  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_879 -> m7_885  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_879 -> m7_886  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_879 -> m7_887  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_880 -> m7_881  [key=0, style=solid];
m7_880 -> m7_15  [key=2, style=dotted];
m7_881 -> m7_882  [key=0, style=solid];
m7_881 -> m7_17  [key=2, style=dotted];
m7_882 -> m7_883  [key=0, style=solid];
m7_882 -> m7_15  [key=2, style=dotted];
m7_883 -> m7_884  [key=0, style=solid];
m7_883 -> m7_17  [key=2, style=dotted];
m7_884 -> m7_885  [key=0, style=solid];
m7_884 -> m7_15  [key=2, style=dotted];
m7_885 -> m7_886  [key=0, style=solid];
m7_885 -> m7_889  [key=2, style=dotted];
m7_885 -> m7_890  [key=2, style=dotted];
m7_885 -> m7_17  [key=2, style=dotted];
m7_886 -> m7_887  [key=0, style=solid];
m7_886 -> m7_15  [key=2, style=dotted];
m7_887 -> m7_888  [key=0, style=solid];
m7_887 -> m7_17  [key=2, style=dotted];
m7_888 -> m7_877  [color=blue, key=0, style=bold];
m7_1170 -> m7_1171  [key=0, style=solid];
m7_1171 -> m7_1172  [key=0, style=solid];
m7_1171 -> m7_1171  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_1172 -> m7_1173  [key=0, style=solid];
m7_1172 -> m7_13  [key=2, style=dotted];
m7_1172 -> m7_14  [key=2, style=dotted];
m7_1172 -> m7_1174  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1172 -> m7_1175  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1172 -> m7_1176  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1172 -> m7_1177  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1172 -> m7_1180  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1173 -> m7_1174  [key=0, style=solid];
m7_1173 -> m7_15  [key=2, style=dotted];
m7_1173 -> m7_16  [key=2, style=dotted];
m7_1174 -> m7_1175  [key=0, style=solid];
m7_1174 -> m7_17  [key=2, style=dotted];
m7_1175 -> m7_1176  [key=0, style=solid];
m7_1175 -> m7_15  [key=2, style=dotted];
m7_1175 -> m7_16  [key=2, style=dotted];
m7_1176 -> m7_1177  [key=0, style=solid];
m7_1176 -> m7_17  [key=2, style=dotted];
m7_1177 -> m7_1178  [key=0, style=solid];
m7_1177 -> m7_18  [key=2, style=dotted];
m7_1177 -> m7_1179  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_1178 -> m7_1170  [color=blue, key=0, style=bold];
m7_671 -> m7_672  [key=0, style=solid];
m7_672 -> m7_673  [key=0, style=solid];
m7_673 -> m7_674  [key=0, style=solid];
m7_673 -> m7_675  [key=2, style=dotted];
m7_674 -> m7_671  [color=blue, key=0, style=bold];
m7_1090 -> m7_1091  [key=0, style=solid];
m7_1091 -> m7_1092  [key=0, style=solid];
m7_1091 -> m7_13  [key=2, style=dotted];
m7_1091 -> m7_14  [key=2, style=dotted];
m7_1092 -> m7_1093  [key=0, style=solid];
m7_1092 -> m7_975  [key=2, style=dotted];
m7_1092 -> m7_1094  [color=darkseagreen4, key=1, label=data, style=dashed];
m7_1092 -> m7_1095  [color=darkseagreen4, key=1, label=data, style=dashed];
m7_1093 -> m7_1094  [key=0, style=solid];
m7_1093 -> m7_17  [key=2, style=dotted];
m7_1094 -> m7_1095  [key=0, style=solid];
m7_1094 -> m7_17  [key=2, style=dotted];
m7_1095 -> m7_1096  [key=0, style=solid];
m7_1095 -> m7_17  [key=2, style=dotted];
m7_1096 -> m7_1090  [color=blue, key=0, style=bold];
m7_1083 -> m7_1084  [key=0, style=solid];
m7_1084 -> m7_1085  [key=0, style=solid];
m7_1084 -> m7_13  [key=2, style=dotted];
m7_1084 -> m7_14  [key=2, style=dotted];
m7_1084 -> m7_1088  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1085 -> m7_1086  [key=0, style=solid];
m7_1085 -> m7_18  [key=2, style=dotted];
m7_1085 -> m7_1087  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_1086 -> m7_1083  [color=blue, key=0, style=bold];
m7_560 -> m7_561  [key=0, style=solid];
m7_561 -> m7_562  [key=0, style=solid];
m7_561 -> m7_564  [color=darkseagreen4, key=1, label=newLinesText, style=dashed];
m7_561 -> m7_572  [color=darkseagreen4, key=1, label=newLinesText, style=dashed];
m7_561 -> m7_587  [color=darkseagreen4, key=1, label=newLinesText, style=dashed];
m7_562 -> m7_563  [key=0, style=solid];
m7_562 -> m7_567  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_564 -> m7_565  [key=0, style=solid];
m7_564 -> m7_14  [key=2, style=dotted];
m7_572 -> m7_573  [key=0, style=solid];
m7_572 -> m7_17  [key=2, style=dotted];
m7_587 -> m7_588  [key=0, style=solid];
m7_587 -> m7_17  [key=2, style=dotted];
m7_563 -> m7_564  [key=0, style=solid];
m7_563 -> m7_566  [color=darkseagreen4, key=1, label=count, style=dashed];
m7_563 -> m7_373  [color=darkorchid, key=3, label="Local variable int count", style=bold];
m7_567 -> m7_568  [key=0, style=solid];
m7_567 -> m7_13  [key=2, style=dotted];
m7_567 -> m7_116  [key=2, style=dotted];
m7_567 -> m7_157  [key=2, style=dotted];
m7_567 -> m7_158  [key=2, style=dotted];
m7_567 -> m7_569  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_567 -> m7_570  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_567 -> m7_571  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_567 -> m7_572  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_567 -> m7_573  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_567 -> m7_574  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_567 -> m7_575  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_567 -> m7_576  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_567 -> m7_577  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_567 -> m7_578  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_567 -> m7_579  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_567 -> m7_580  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_567 -> m7_581  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_567 -> m7_582  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_567 -> m7_583  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_567 -> m7_584  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_567 -> m7_585  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_567 -> m7_586  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_567 -> m7_587  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_567 -> m7_588  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_567 -> m7_589  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_567 -> m7_590  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_567 -> m7_591  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_567 -> m7_592  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_567 -> m7_593  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_567 -> m7_594  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_567 -> m7_595  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_567 -> m7_596  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_567 -> m7_597  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_567 -> m7_598  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_567 -> m7_599  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_567 -> m7_600  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_567 -> m7_601  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_567 -> m7_602  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_566 -> m7_565  [key=0, style=solid];
m7_566 -> m7_566  [color=darkseagreen4, key=1, label=count, style=dashed];
m7_565 -> m7_566  [key=0, style=solid];
m7_565 -> m7_567  [key=0, style=solid];
m7_565 -> m7_604  [key=2, style=dotted];
m7_568 -> m7_569  [key=0, style=solid];
m7_568 -> m7_15  [key=2, style=dotted];
m7_568 -> m7_16  [key=2, style=dotted];
m7_569 -> m7_570  [key=0, style=solid];
m7_569 -> m7_17  [key=2, style=dotted];
m7_570 -> m7_571  [key=0, style=solid];
m7_570 -> m7_15  [key=2, style=dotted];
m7_570 -> m7_16  [key=2, style=dotted];
m7_571 -> m7_572  [key=0, style=solid];
m7_571 -> m7_17  [key=2, style=dotted];
m7_573 -> m7_574  [key=0, style=solid];
m7_573 -> m7_15  [key=2, style=dotted];
m7_573 -> m7_16  [key=2, style=dotted];
m7_574 -> m7_575  [key=0, style=solid];
m7_574 -> m7_17  [key=2, style=dotted];
m7_575 -> m7_576  [key=0, style=solid];
m7_575 -> m7_15  [key=2, style=dotted];
m7_575 -> m7_16  [key=2, style=dotted];
m7_576 -> m7_577  [key=0, style=solid];
m7_576 -> m7_17  [key=2, style=dotted];
m7_577 -> m7_578  [key=0, style=solid];
m7_577 -> m7_17  [key=2, style=dotted];
m7_578 -> m7_579  [key=0, style=solid];
m7_578 -> m7_17  [key=2, style=dotted];
m7_579 -> m7_580  [key=0, style=solid];
m7_579 -> m7_15  [key=2, style=dotted];
m7_579 -> m7_16  [key=2, style=dotted];
m7_580 -> m7_581  [key=0, style=solid];
m7_580 -> m7_17  [key=2, style=dotted];
m7_581 -> m7_582  [key=0, style=solid];
m7_581 -> m7_17  [key=2, style=dotted];
m7_582 -> m7_583  [key=0, style=solid];
m7_582 -> m7_15  [key=2, style=dotted];
m7_582 -> m7_16  [key=2, style=dotted];
m7_583 -> m7_584  [key=0, style=solid];
m7_583 -> m7_17  [key=2, style=dotted];
m7_584 -> m7_585  [key=0, style=solid];
m7_584 -> m7_17  [key=2, style=dotted];
m7_585 -> m7_586  [key=0, style=solid];
m7_585 -> m7_15  [key=2, style=dotted];
m7_585 -> m7_16  [key=2, style=dotted];
m7_586 -> m7_587  [key=0, style=solid];
m7_586 -> m7_17  [key=2, style=dotted];
m7_588 -> m7_589  [key=0, style=solid];
m7_588 -> m7_15  [key=2, style=dotted];
m7_588 -> m7_16  [key=2, style=dotted];
m7_589 -> m7_590  [key=0, style=solid];
m7_589 -> m7_17  [key=2, style=dotted];
m7_590 -> m7_591  [key=0, style=solid];
m7_590 -> m7_15  [key=2, style=dotted];
m7_590 -> m7_16  [key=2, style=dotted];
m7_591 -> m7_592  [key=0, style=solid];
m7_591 -> m7_17  [key=2, style=dotted];
m7_592 -> m7_593  [key=0, style=solid];
m7_592 -> m7_15  [key=2, style=dotted];
m7_592 -> m7_16  [key=2, style=dotted];
m7_593 -> m7_594  [key=0, style=solid];
m7_593 -> m7_17  [key=2, style=dotted];
m7_594 -> m7_595  [key=0, style=solid];
m7_594 -> m7_15  [key=2, style=dotted];
m7_594 -> m7_16  [key=2, style=dotted];
m7_595 -> m7_596  [key=0, style=solid];
m7_595 -> m7_17  [key=2, style=dotted];
m7_596 -> m7_597  [key=0, style=solid];
m7_596 -> m7_17  [key=2, style=dotted];
m7_597 -> m7_598  [key=0, style=solid];
m7_597 -> m7_15  [key=2, style=dotted];
m7_597 -> m7_16  [key=2, style=dotted];
m7_598 -> m7_599  [key=0, style=solid];
m7_598 -> m7_17  [key=2, style=dotted];
m7_599 -> m7_600  [key=0, style=solid];
m7_599 -> m7_15  [key=2, style=dotted];
m7_599 -> m7_16  [key=2, style=dotted];
m7_600 -> m7_601  [key=0, style=solid];
m7_600 -> m7_17  [key=2, style=dotted];
m7_601 -> m7_602  [key=0, style=solid];
m7_601 -> m7_15  [key=2, style=dotted];
m7_601 -> m7_16  [key=2, style=dotted];
m7_602 -> m7_603  [key=0, style=solid];
m7_602 -> m7_17  [key=2, style=dotted];
m7_603 -> m7_560  [color=blue, key=0, style=bold];
m7_844 -> m7_845  [key=0, style=solid];
m7_845 -> m7_846  [key=0, style=solid];
m7_845 -> m7_845  [color=darkorchid, key=3, label="Local variable string input", style=bold];
m7_846 -> m7_847  [key=0, style=solid];
m7_846 -> m7_14  [key=2, style=dotted];
m7_847 -> m7_848  [key=0, style=solid];
m7_847 -> m7_13  [key=2, style=dotted];
m7_847 -> m7_849  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_847 -> m7_850  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_847 -> m7_851  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_847 -> m7_852  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_847 -> m7_853  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_847 -> m7_854  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_847 -> m7_855  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_847 -> m7_856  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_847 -> m7_857  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_847 -> m7_858  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_847 -> m7_859  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_847 -> m7_860  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m7_848 -> m7_849  [key=0, style=solid];
m7_848 -> m7_138  [key=2, style=dotted];
m7_849 -> m7_850  [key=0, style=solid];
m7_849 -> m7_17  [key=2, style=dotted];
m7_850 -> m7_851  [key=0, style=solid];
m7_850 -> m7_138  [key=2, style=dotted];
m7_851 -> m7_852  [key=0, style=solid];
m7_851 -> m7_17  [key=2, style=dotted];
m7_852 -> m7_853  [key=0, style=solid];
m7_852 -> m7_17  [key=2, style=dotted];
m7_853 -> m7_854  [key=0, style=solid];
m7_853 -> m7_138  [key=2, style=dotted];
m7_854 -> m7_855  [key=0, style=solid];
m7_854 -> m7_17  [key=2, style=dotted];
m7_855 -> m7_856  [key=0, style=solid];
m7_855 -> m7_17  [key=2, style=dotted];
m7_856 -> m7_857  [key=0, style=solid];
m7_856 -> m7_138  [key=2, style=dotted];
m7_857 -> m7_858  [key=0, style=solid];
m7_857 -> m7_17  [key=2, style=dotted];
m7_858 -> m7_859  [key=0, style=solid];
m7_858 -> m7_17  [key=2, style=dotted];
m7_859 -> m7_860  [key=0, style=solid];
m7_859 -> m7_138  [key=2, style=dotted];
m7_860 -> m7_861  [key=0, style=solid];
m7_860 -> m7_17  [key=2, style=dotted];
m7_861 -> m7_844  [color=blue, key=0, style=bold];
m7_1196 -> m7_1197  [key=0, style=solid];
m7_1197 -> m7_1198  [key=0, style=solid];
m7_1197 -> m7_1197  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_1198 -> m7_1199  [key=0, style=solid];
m7_1198 -> m7_13  [key=2, style=dotted];
m7_1198 -> m7_14  [key=2, style=dotted];
m7_1198 -> m7_1200  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1198 -> m7_1201  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1198 -> m7_1202  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1198 -> m7_1203  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1198 -> m7_1204  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1198 -> m7_1205  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1198 -> m7_1206  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1198 -> m7_1207  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1198 -> m7_1208  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1199 -> m7_1200  [key=0, style=solid];
m7_1199 -> m7_15  [key=2, style=dotted];
m7_1199 -> m7_16  [key=2, style=dotted];
m7_1200 -> m7_1201  [key=0, style=solid];
m7_1200 -> m7_17  [key=2, style=dotted];
m7_1201 -> m7_1202  [key=0, style=solid];
m7_1201 -> m7_15  [key=2, style=dotted];
m7_1201 -> m7_16  [key=2, style=dotted];
m7_1202 -> m7_1203  [key=0, style=solid];
m7_1202 -> m7_17  [key=2, style=dotted];
m7_1203 -> m7_1204  [key=0, style=solid];
m7_1203 -> m7_1068  [key=2, style=dotted];
m7_1204 -> m7_1205  [key=0, style=solid];
m7_1204 -> m7_17  [key=2, style=dotted];
m7_1205 -> m7_1206  [key=0, style=solid];
m7_1205 -> m7_17  [key=2, style=dotted];
m7_1206 -> m7_1207  [key=0, style=solid];
m7_1206 -> m7_1153  [key=2, style=dotted];
m7_1206 -> m7_1154  [key=2, style=dotted];
m7_1206 -> m7_1155  [key=2, style=dotted];
m7_1206 -> m7_1210  [key=2, style=dotted];
m7_1206 -> m7_1211  [key=2, style=dotted];
m7_1206 -> m7_17  [key=2, style=dotted];
m7_1207 -> m7_1208  [key=0, style=solid];
m7_1207 -> m7_15  [key=2, style=dotted];
m7_1207 -> m7_16  [key=2, style=dotted];
m7_1208 -> m7_1209  [key=0, style=solid];
m7_1208 -> m7_17  [key=2, style=dotted];
m7_1209 -> m7_1196  [color=blue, key=0, style=bold];
m7_1406 -> m7_1407  [key=0, style=solid];
m7_1407 -> m7_1408  [key=0, style=solid];
m7_1407 -> m7_13  [key=2, style=dotted];
m7_1407 -> m7_14  [key=2, style=dotted];
m7_1407 -> m7_1409  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1407 -> m7_1410  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1407 -> m7_1411  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1407 -> m7_1412  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1407 -> m7_1413  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1407 -> m7_1414  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1407 -> m7_1415  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1407 -> m7_1416  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1407 -> m7_1417  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1407 -> m7_1418  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1407 -> m7_1419  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1407 -> m7_1420  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1407 -> m7_1421  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1407 -> m7_1422  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1407 -> m7_1423  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1407 -> m7_1424  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1407 -> m7_1425  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1407 -> m7_1426  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1407 -> m7_1427  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1407 -> m7_1428  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1407 -> m7_1429  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1407 -> m7_1430  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1407 -> m7_1431  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1407 -> m7_1432  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1407 -> m7_1433  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1407 -> m7_1434  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1407 -> m7_1435  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1408 -> m7_1409  [key=0, style=solid];
m7_1409 -> m7_1410  [key=0, style=solid];
m7_1409 -> m7_15  [key=2, style=dotted];
m7_1409 -> m7_16  [key=2, style=dotted];
m7_1410 -> m7_1411  [key=0, style=solid];
m7_1410 -> m7_17  [key=2, style=dotted];
m7_1411 -> m7_1412  [key=0, style=solid];
m7_1411 -> m7_15  [key=2, style=dotted];
m7_1411 -> m7_16  [key=2, style=dotted];
m7_1412 -> m7_1413  [key=0, style=solid];
m7_1412 -> m7_17  [key=2, style=dotted];
m7_1413 -> m7_1414  [key=0, style=solid];
m7_1413 -> m7_15  [key=2, style=dotted];
m7_1413 -> m7_16  [key=2, style=dotted];
m7_1414 -> m7_1415  [key=0, style=solid];
m7_1414 -> m7_17  [key=2, style=dotted];
m7_1415 -> m7_1416  [key=0, style=solid];
m7_1415 -> m7_15  [key=2, style=dotted];
m7_1415 -> m7_16  [key=2, style=dotted];
m7_1416 -> m7_1417  [key=0, style=solid];
m7_1416 -> m7_17  [key=2, style=dotted];
m7_1417 -> m7_1418  [key=0, style=solid];
m7_1417 -> m7_15  [key=2, style=dotted];
m7_1417 -> m7_16  [key=2, style=dotted];
m7_1418 -> m7_1419  [key=0, style=solid];
m7_1418 -> m7_17  [key=2, style=dotted];
m7_1419 -> m7_1420  [key=0, style=solid];
m7_1419 -> m7_15  [key=2, style=dotted];
m7_1419 -> m7_16  [key=2, style=dotted];
m7_1420 -> m7_1421  [key=0, style=solid];
m7_1420 -> m7_17  [key=2, style=dotted];
m7_1421 -> m7_1422  [key=0, style=solid];
m7_1421 -> m7_15  [key=2, style=dotted];
m7_1421 -> m7_16  [key=2, style=dotted];
m7_1422 -> m7_1423  [key=0, style=solid];
m7_1422 -> m7_17  [key=2, style=dotted];
m7_1423 -> m7_1424  [key=0, style=solid];
m7_1423 -> m7_15  [key=2, style=dotted];
m7_1423 -> m7_16  [key=2, style=dotted];
m7_1424 -> m7_1425  [key=0, style=solid];
m7_1424 -> m7_17  [key=2, style=dotted];
m7_1425 -> m7_1426  [key=0, style=solid];
m7_1425 -> m7_15  [key=2, style=dotted];
m7_1425 -> m7_16  [key=2, style=dotted];
m7_1426 -> m7_1427  [key=0, style=solid];
m7_1426 -> m7_17  [key=2, style=dotted];
m7_1427 -> m7_1428  [key=0, style=solid];
m7_1427 -> m7_15  [key=2, style=dotted];
m7_1427 -> m7_16  [key=2, style=dotted];
m7_1428 -> m7_1429  [key=0, style=solid];
m7_1428 -> m7_17  [key=2, style=dotted];
m7_1429 -> m7_1430  [key=0, style=solid];
m7_1429 -> m7_15  [key=2, style=dotted];
m7_1429 -> m7_16  [key=2, style=dotted];
m7_1430 -> m7_1431  [key=0, style=solid];
m7_1430 -> m7_17  [key=2, style=dotted];
m7_1431 -> m7_1432  [key=0, style=solid];
m7_1431 -> m7_15  [key=2, style=dotted];
m7_1431 -> m7_16  [key=2, style=dotted];
m7_1432 -> m7_1433  [key=0, style=solid];
m7_1432 -> m7_17  [key=2, style=dotted];
m7_1433 -> m7_1434  [key=0, style=solid];
m7_1433 -> m7_15  [key=2, style=dotted];
m7_1433 -> m7_16  [key=2, style=dotted];
m7_1434 -> m7_1435  [key=0, style=solid];
m7_1434 -> m7_17  [key=2, style=dotted];
m7_1435 -> m7_1436  [key=0, style=solid];
m7_1435 -> m7_15  [key=2, style=dotted];
m7_1435 -> m7_131  [key=2, style=dotted];
m7_1436 -> m7_1406  [color=blue, key=0, style=bold];
m7_1063 -> m7_1064  [key=0, style=solid];
m7_1064 -> m7_1065  [key=0, style=solid];
m7_1064 -> m7_13  [key=2, style=dotted];
m7_1064 -> m7_14  [key=2, style=dotted];
m7_1064 -> m7_1066  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1065 -> m7_1066  [key=0, style=solid];
m7_1065 -> m7_1068  [key=2, style=dotted];
m7_1065 -> m7_551  [key=2, style=dotted];
m7_1066 -> m7_1067  [key=0, style=solid];
m7_1066 -> m7_17  [key=2, style=dotted];
m7_1067 -> m7_1063  [color=blue, key=0, style=bold];
m7_1437 -> m7_1438  [key=0, style=solid];
m7_1438 -> m7_1439  [key=0, style=solid];
m7_1438 -> m7_1438  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_1439 -> m7_1440  [key=0, style=solid];
m7_1439 -> m7_13  [key=2, style=dotted];
m7_1439 -> m7_14  [key=2, style=dotted];
m7_1439 -> m7_1441  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1439 -> m7_1442  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1440 -> m7_1441  [key=0, style=solid];
m7_1440 -> m7_15  [key=2, style=dotted];
m7_1440 -> m7_16  [key=2, style=dotted];
m7_1441 -> m7_1442  [key=0, style=solid];
m7_1441 -> m7_15  [key=2, style=dotted];
m7_1441 -> m7_16  [key=2, style=dotted];
m7_1442 -> m7_1443  [key=0, style=solid];
m7_1442 -> m7_15  [key=2, style=dotted];
m7_1442 -> m7_131  [key=2, style=dotted];
m7_1443 -> m7_1437  [color=blue, key=0, style=bold];
m7_1665 -> m7_1666  [key=0, style=solid];
m7_1666 -> m7_1667  [key=0, style=solid];
m7_1666 -> m7_1666  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_1667 -> m7_1668  [key=0, style=solid];
m7_1667 -> m7_13  [key=2, style=dotted];
m7_1667 -> m7_14  [key=2, style=dotted];
m7_1667 -> m7_1669  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1667 -> m7_1670  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1667 -> m7_1695  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1667 -> m7_1671  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1667 -> m7_1672  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1667 -> m7_1673  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1667 -> m7_1674  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1667 -> m7_1675  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1667 -> m7_1676  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1667 -> m7_1677  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1667 -> m7_1678  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1667 -> m7_1679  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1667 -> m7_1680  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1667 -> m7_1681  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1667 -> m7_1682  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1667 -> m7_1698  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1667 -> m7_1683  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1667 -> m7_1684  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1667 -> m7_1685  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1667 -> m7_1686  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1667 -> m7_1687  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1667 -> m7_1688  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1667 -> m7_1689  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1667 -> m7_1690  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1667 -> m7_1691  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1667 -> m7_1692  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1668 -> m7_1669  [key=0, style=solid];
m7_1668 -> m7_15  [key=2, style=dotted];
m7_1668 -> m7_16  [key=2, style=dotted];
m7_1669 -> m7_1670  [key=0, style=solid];
m7_1669 -> m7_17  [key=2, style=dotted];
m7_1670 -> m7_1671  [key=0, style=solid];
m7_1670 -> m7_1504  [key=2, style=dotted];
m7_1670 -> m7_1694  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_1671 -> m7_1672  [key=0, style=solid];
m7_1671 -> m7_17  [key=2, style=dotted];
m7_1672 -> m7_1673  [key=0, style=solid];
m7_1672 -> m7_15  [key=2, style=dotted];
m7_1672 -> m7_16  [key=2, style=dotted];
m7_1673 -> m7_1674  [key=0, style=solid];
m7_1673 -> m7_17  [key=2, style=dotted];
m7_1674 -> m7_1675  [key=0, style=solid];
m7_1674 -> m7_15  [key=2, style=dotted];
m7_1674 -> m7_16  [key=2, style=dotted];
m7_1675 -> m7_1676  [key=0, style=solid];
m7_1675 -> m7_17  [key=2, style=dotted];
m7_1676 -> m7_1677  [key=0, style=solid];
m7_1676 -> m7_15  [key=2, style=dotted];
m7_1676 -> m7_16  [key=2, style=dotted];
m7_1677 -> m7_1678  [key=0, style=solid];
m7_1677 -> m7_17  [key=2, style=dotted];
m7_1678 -> m7_1679  [key=0, style=solid];
m7_1678 -> m7_15  [key=2, style=dotted];
m7_1678 -> m7_16  [key=2, style=dotted];
m7_1679 -> m7_1680  [key=0, style=solid];
m7_1679 -> m7_17  [key=2, style=dotted];
m7_1680 -> m7_1681  [key=0, style=solid];
m7_1680 -> m7_15  [key=2, style=dotted];
m7_1680 -> m7_16  [key=2, style=dotted];
m7_1681 -> m7_1682  [key=0, style=solid];
m7_1681 -> m7_17  [key=2, style=dotted];
m7_1682 -> m7_1683  [key=0, style=solid];
m7_1682 -> m7_1504  [key=2, style=dotted];
m7_1682 -> m7_1697  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_1683 -> m7_1684  [key=0, style=solid];
m7_1683 -> m7_17  [key=2, style=dotted];
m7_1684 -> m7_1685  [key=0, style=solid];
m7_1684 -> m7_15  [key=2, style=dotted];
m7_1684 -> m7_16  [key=2, style=dotted];
m7_1685 -> m7_1686  [key=0, style=solid];
m7_1685 -> m7_17  [key=2, style=dotted];
m7_1686 -> m7_1687  [key=0, style=solid];
m7_1686 -> m7_15  [key=2, style=dotted];
m7_1686 -> m7_16  [key=2, style=dotted];
m7_1687 -> m7_1688  [key=0, style=solid];
m7_1687 -> m7_17  [key=2, style=dotted];
m7_1688 -> m7_1689  [key=0, style=solid];
m7_1688 -> m7_15  [key=2, style=dotted];
m7_1688 -> m7_16  [key=2, style=dotted];
m7_1689 -> m7_1690  [key=0, style=solid];
m7_1689 -> m7_17  [key=2, style=dotted];
m7_1690 -> m7_1691  [key=0, style=solid];
m7_1690 -> m7_15  [key=2, style=dotted];
m7_1690 -> m7_16  [key=2, style=dotted];
m7_1691 -> m7_1692  [key=0, style=solid];
m7_1691 -> m7_17  [key=2, style=dotted];
m7_1692 -> m7_1693  [key=0, style=solid];
m7_1692 -> m7_15  [key=2, style=dotted];
m7_1692 -> m7_131  [key=2, style=dotted];
m7_1693 -> m7_1665  [color=blue, key=0, style=bold];
m7_190 -> m7_191  [key=0, style=solid];
m7_191 -> m7_192  [key=0, style=solid];
m7_191 -> m7_191  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_192 -> m7_193  [key=0, style=solid];
m7_192 -> m7_13  [key=2, style=dotted];
m7_192 -> m7_14  [key=2, style=dotted];
m7_192 -> m7_196  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_193 -> m7_194  [key=0, style=solid];
m7_193 -> m7_18  [key=2, style=dotted];
m7_193 -> m7_195  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_194 -> m7_190  [color=blue, key=0, style=bold];
m7_1870 -> m7_1871  [key=0, style=solid];
m7_1871 -> m7_1870  [color=blue, key=0, style=bold];
m7_159 -> m7_160  [key=0, style=solid];
m7_160 -> m7_161  [key=0, style=solid];
m7_160 -> m7_160  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_161 -> m7_162  [key=0, style=solid];
m7_161 -> m7_13  [key=2, style=dotted];
m7_161 -> m7_14  [key=2, style=dotted];
m7_161 -> m7_165  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_162 -> m7_163  [key=0, style=solid];
m7_162 -> m7_18  [key=2, style=dotted];
m7_162 -> m7_164  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_163 -> m7_159  [color=blue, key=0, style=bold];
m7_1156 -> m7_1157  [key=0, style=solid];
m7_1157 -> m7_1158  [key=0, style=solid];
m7_1157 -> m7_1157  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_1158 -> m7_1159  [key=0, style=solid];
m7_1158 -> m7_13  [key=2, style=dotted];
m7_1158 -> m7_14  [key=2, style=dotted];
m7_1158 -> m7_1160  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1158 -> m7_1161  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1158 -> m7_1162  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1158 -> m7_1163  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1158 -> m7_1164  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1158 -> m7_1165  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1158 -> m7_1166  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1158 -> m7_1167  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1158 -> m7_1168  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1159 -> m7_1160  [key=0, style=solid];
m7_1159 -> m7_15  [key=2, style=dotted];
m7_1159 -> m7_16  [key=2, style=dotted];
m7_1160 -> m7_1161  [key=0, style=solid];
m7_1160 -> m7_17  [key=2, style=dotted];
m7_1161 -> m7_1162  [key=0, style=solid];
m7_1161 -> m7_15  [key=2, style=dotted];
m7_1161 -> m7_16  [key=2, style=dotted];
m7_1162 -> m7_1163  [key=0, style=solid];
m7_1162 -> m7_17  [key=2, style=dotted];
m7_1163 -> m7_1164  [key=0, style=solid];
m7_1163 -> m7_1068  [key=2, style=dotted];
m7_1164 -> m7_1165  [key=0, style=solid];
m7_1164 -> m7_17  [key=2, style=dotted];
m7_1165 -> m7_1166  [key=0, style=solid];
m7_1165 -> m7_17  [key=2, style=dotted];
m7_1166 -> m7_1167  [key=0, style=solid];
m7_1166 -> m7_1153  [key=2, style=dotted];
m7_1166 -> m7_1154  [key=2, style=dotted];
m7_1166 -> m7_1155  [key=2, style=dotted];
m7_1166 -> m7_17  [key=2, style=dotted];
m7_1167 -> m7_1168  [key=0, style=solid];
m7_1167 -> m7_15  [key=2, style=dotted];
m7_1167 -> m7_16  [key=2, style=dotted];
m7_1168 -> m7_1169  [key=0, style=solid];
m7_1168 -> m7_17  [key=2, style=dotted];
m7_1169 -> m7_1156  [color=blue, key=0, style=bold];
m7_1892 -> m7_20  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1893 -> m7_57  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1894 -> m7_94  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m7_1894 -> m7_95  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m7_1894 -> m7_96  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m7_1894 -> m7_97  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m7_1894 -> m7_98  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m7_1894 -> m7_99  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m7_1894 -> m7_100  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m7_1894 -> m7_101  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m7_1894 -> m7_102  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m7_1894 -> m7_103  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m7_1894 -> m7_104  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m7_1894 -> m7_105  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m7_1895 -> m7_165  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1896 -> m7_183  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1897 -> m7_196  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1898 -> m7_358  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1899 -> m7_448  [color=darkseagreen4, key=1, label=total, style=dashed];
m7_1900 -> m7_465  [color=darkseagreen4, key=1, label=total, style=dashed];
m7_1901 -> m7_518  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1902 -> m7_525  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1903 -> m7_532  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1904 -> m7_543  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1905 -> m7_558  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1906 -> m7_711  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1906 -> m7_714  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1906 -> m7_717  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1906 -> m7_720  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1906 -> m7_723  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1907 -> m7_749  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1907 -> m7_752  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1907 -> m7_755  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1908 -> m7_787  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1908 -> m7_790  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1909 -> m7_965  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1910 -> m7_1044  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1911 -> m7_1061  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1912 -> m7_1074  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1913 -> m7_1081  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1914 -> m7_1088  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1915 -> m7_1102  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1916 -> m7_1109  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1917 -> m7_1180  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1918 -> m7_1282  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1919 -> m7_1289  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1920 -> m7_1296  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1921 -> m7_1303  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1922 -> m7_1310  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1923 -> m7_1317  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1924 -> m7_1450  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1925 -> m7_1458  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1926 -> m7_1489  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1927 -> m7_1506  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1928 -> m7_1607  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1929 -> m7_1663  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1930 -> m7_1695  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1930 -> m7_1698  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_1931 -> m7_1820  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m7_1931 -> m7_1823  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m7_1931 -> m7_1826  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m7_1931 -> m7_1829  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m7_1931 -> m7_1832  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m7_1931 -> m7_1835  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m7_1932 -> m7_1855  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.ToggleReaderError", style=dashed];
m7_1932 -> m7_1858  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.ToggleReaderError", style=dashed];
m7_1932 -> m7_1860  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.ToggleReaderError", style=dashed];
m7_1933 -> m7_1865  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.SlowStream", style=dashed];
m7_1933 -> m7_1866  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.SlowStream", style=dashed];
m7_1933 -> m7_1867  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.SlowStream", style=dashed];
m7_1933 -> m7_1873  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.SlowStream", style=dashed];
m7_1933 -> m7_1874  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.SlowStream", style=dashed];
m7_1933 -> m7_1876  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.SlowStream", style=dashed];
m7_1933 -> m7_1877  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.SlowStream", style=dashed];
m8_527 -> m8_528  [key=0, style=solid];
m8_528 -> m8_529  [key=0, style=solid];
m8_529 -> m8_527  [color=blue, key=0, style=bold];
m8_4 -> m8_5  [key=0, style=solid];
m8_5 -> m8_4  [color=blue, key=0, style=bold];
m8_317 -> m8_318  [key=0, style=solid];
m8_317 -> m8_319  [color=darkseagreen4, key=1, label="params Newtonsoft.Json.JsonConverter[]", style=dashed];
m8_317 -> m8_321  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m8_317 -> m8_325  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m8_317 -> m8_328  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m8_317 -> m8_331  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m8_317 -> m8_334  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m8_317 -> m8_338  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m8_317 -> m8_339  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m8_317 -> m8_343  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m8_317 -> m8_345  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m8_317 -> m8_347  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m8_317 -> m8_348  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m8_317 -> m8_351  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m8_317 -> m8_354  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m8_317 -> m8_358  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m8_317 -> m8_359  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m8_317 -> m8_362  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m8_317 -> m8_367  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m8_318 -> m8_319  [key=0, style=solid];
m8_318 -> m8_323  [key=0, style=solid];
m8_319 -> m8_320  [key=0, style=solid];
m8_319 -> m8_307  [key=2, style=dotted];
m8_319 -> m8_371  [key=2, style=dotted];
m8_319 -> m8_321  [color=darkseagreen4, key=1, label=matchingConverter, style=dashed];
m8_321 -> m8_322  [key=0, style=solid];
m8_321 -> m8_372  [key=2, style=dotted];
m8_321 -> m8_373  [key=2, style=dotted];
m8_325 -> m8_326  [key=0, style=solid];
m8_325 -> m8_265  [key=2, style=dotted];
m8_325 -> m8_374  [key=2, style=dotted];
m8_328 -> m8_329  [key=0, style=solid];
m8_328 -> m8_265  [key=2, style=dotted];
m8_328 -> m8_375  [key=2, style=dotted];
m8_331 -> m8_332  [key=0, style=solid];
m8_331 -> m8_376  [key=2, style=dotted];
m8_334 -> m8_335  [key=0, style=solid];
m8_334 -> m8_377  [key=2, style=dotted];
m8_338 -> m8_340  [key=0, style=solid];
m8_338 -> m8_378  [key=2, style=dotted];
m8_339 -> m8_340  [key=0, style=solid];
m8_339 -> m8_140  [key=2, style=dotted];
m8_339 -> m8_379  [key=2, style=dotted];
m8_343 -> m8_349  [key=0, style=solid];
m8_343 -> m8_380  [key=2, style=dotted];
m8_345 -> m8_349  [key=0, style=solid];
m8_345 -> m8_381  [key=2, style=dotted];
m8_347 -> m8_349  [key=0, style=solid];
m8_347 -> m8_382  [key=2, style=dotted];
m8_348 -> m8_349  [key=0, style=solid];
m8_348 -> m8_56  [key=2, style=dotted];
m8_348 -> m8_381  [key=2, style=dotted];
m8_351 -> m8_352  [key=0, style=solid];
m8_351 -> m8_265  [key=2, style=dotted];
m8_351 -> m8_383  [key=2, style=dotted];
m8_354 -> m8_355  [key=0, style=solid];
m8_354 -> m8_144  [key=2, style=dotted];
m8_354 -> m8_384  [key=2, style=dotted];
m8_358 -> m8_360  [key=0, style=solid];
m8_358 -> m8_385  [key=2, style=dotted];
m8_359 -> m8_360  [key=0, style=solid];
m8_359 -> m8_146  [key=2, style=dotted];
m8_359 -> m8_386  [key=2, style=dotted];
m8_362 -> m8_363  [key=0, style=solid];
m8_362 -> m8_387  [key=2, style=dotted];
m8_367 -> m8_368  [key=0, style=solid];
m8_367 -> m8_265  [key=2, style=dotted];
m8_367 -> m8_383  [key=2, style=dotted];
m8_323 -> m8_324  [key=0, style=solid];
m8_323 -> m8_327  [key=0, style=solid];
m8_323 -> m8_330  [key=0, style=solid];
m8_323 -> m8_333  [key=0, style=solid];
m8_323 -> m8_336  [key=0, style=solid];
m8_323 -> m8_341  [key=0, style=solid];
m8_323 -> m8_350  [key=0, style=solid];
m8_323 -> m8_353  [key=0, style=solid];
m8_323 -> m8_356  [key=0, style=solid];
m8_323 -> m8_361  [key=0, style=solid];
m8_323 -> m8_364  [key=0, style=solid];
m8_320 -> m8_321  [key=0, style=solid];
m8_320 -> m8_323  [key=0, style=solid];
m8_322 -> m8_369  [key=0, style=solid];
m8_324 -> m8_325  [key=0, style=solid];
m8_327 -> m8_328  [key=0, style=solid];
m8_330 -> m8_331  [key=0, style=solid];
m8_333 -> m8_334  [key=0, style=solid];
m8_336 -> m8_337  [key=0, style=solid];
m8_341 -> m8_342  [key=0, style=solid];
m8_350 -> m8_351  [key=0, style=solid];
m8_353 -> m8_354  [key=0, style=solid];
m8_356 -> m8_357  [key=0, style=solid];
m8_361 -> m8_362  [key=0, style=solid];
m8_364 -> m8_365  [key=0, style=solid];
m8_326 -> m8_369  [key=0, style=solid];
m8_329 -> m8_369  [key=0, style=solid];
m8_332 -> m8_369  [key=0, style=solid];
m8_335 -> m8_369  [key=0, style=solid];
m8_337 -> m8_338  [key=0, style=solid];
m8_337 -> m8_339  [key=0, style=solid];
m8_340 -> m8_369  [key=0, style=solid];
m8_342 -> m8_343  [key=0, style=solid];
m8_342 -> m8_344  [key=0, style=solid];
m8_344 -> m8_345  [key=0, style=solid];
m8_344 -> m8_346  [key=0, style=solid];
m8_346 -> m8_347  [key=0, style=solid];
m8_346 -> m8_348  [key=0, style=solid];
m8_349 -> m8_369  [key=0, style=solid];
m8_352 -> m8_369  [key=0, style=solid];
m8_355 -> m8_369  [key=0, style=solid];
m8_357 -> m8_358  [key=0, style=solid];
m8_357 -> m8_359  [key=0, style=solid];
m8_360 -> m8_369  [key=0, style=solid];
m8_363 -> m8_369  [key=0, style=solid];
m8_365 -> m8_366  [key=0, style=solid];
m8_366 -> m8_367  [key=0, style=solid];
m8_368 -> m8_369  [key=0, style=solid];
m8_370 -> m8_369  [key=0, style=solid];
m8_370 -> m8_157  [key=2, style=dotted];
m8_369 -> m8_317  [color=blue, key=0, style=bold];
m8_410 -> m8_411  [key=0, style=solid];
m8_410 -> m8_62  [color=darkorchid, key=3, label="method methodReturn int GetHashCode", style=bold];
m8_411 -> m8_412  [key=0, style=solid];
m8_411 -> m8_413  [key=0, style=solid];
m8_412 -> m8_414  [key=0, style=solid];
m8_413 -> m8_414  [key=0, style=solid];
m8_413 -> m8_392  [key=2, style=dotted];
m8_414 -> m8_410  [color=blue, key=0, style=bold];
m8_377 -> m8_423  [color=darkorchid, key=3, label="method methodReturn string ToString", style=bold];
m8_545 -> m8_546  [key=0, style=solid];
m8_546 -> m8_547  [key=0, style=solid];
m8_547 -> m8_545  [color=blue, key=0, style=bold];
m8_16 -> m8_17  [key=0, style=solid];
m8_17 -> m8_16  [color=blue, key=0, style=bold];
m8_26 -> m8_27  [key=0, style=solid];
m8_27 -> m8_26  [color=blue, key=0, style=bold];
m8_165 -> m8_166  [key=0, style=solid];
m8_165 -> m8_167  [color=darkseagreen4, key=1, label="System.Linq.Expressions.ExpressionType", style=dashed];
m8_165 -> m8_168  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_165 -> m8_170  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_165 -> m8_171  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_165 -> m8_174  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_165 -> m8_175  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_165 -> m8_176  [color=darkseagreen4, key=1, label="System.Linq.Expressions.ExpressionType", style=dashed];
m8_165 -> m8_193  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_165 -> m8_194  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_165 -> m8_197  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_165 -> m8_198  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_165 -> m8_199  [color=darkseagreen4, key=1, label="System.Linq.Expressions.ExpressionType", style=dashed];
m8_165 -> m8_216  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_165 -> m8_217  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_165 -> m8_220  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_165 -> m8_221  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_165 -> m8_222  [color=darkseagreen4, key=1, label="System.Linq.Expressions.ExpressionType", style=dashed];
m8_165 -> m8_239  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_165 -> m8_240  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_165 -> m8_243  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_165 -> m8_244  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_165 -> m8_245  [color=darkseagreen4, key=1, label="System.Linq.Expressions.ExpressionType", style=dashed];
m8_165 -> m8_35  [color=darkorchid, key=3, label="method methodReturn bool Operation", style=bold];
m8_165 -> m8_33  [color=darkorchid, key=3, label="method methodReturn bool Operation", style=bold];
m8_165 -> m8_454  [color=darkorchid, key=3, label="Parameter variable object objB", style=bold];
m8_165 -> m8_453  [color=darkorchid, key=3, label="Parameter variable object result", style=bold];
m8_166 -> m8_167  [key=0, style=solid];
m8_166 -> m8_170  [key=0, style=solid];
m8_167 -> m8_168  [key=0, style=solid];
m8_167 -> m8_170  [key=0, style=solid];
m8_168 -> m8_169  [key=0, style=solid];
m8_168 -> m8_265  [key=2, style=dotted];
m8_170 -> m8_171  [key=0, style=solid];
m8_170 -> m8_193  [key=0, style=solid];
m8_171 -> m8_172  [key=0, style=solid];
m8_171 -> m8_174  [key=0, style=solid];
m8_174 -> m8_175  [key=0, style=solid];
m8_174 -> m8_51  [key=2, style=dotted];
m8_174 -> m8_179  [color=darkseagreen4, key=1, label=i1, style=dashed];
m8_174 -> m8_183  [color=darkseagreen4, key=1, label=i1, style=dashed];
m8_174 -> m8_187  [color=darkseagreen4, key=1, label=i1, style=dashed];
m8_174 -> m8_191  [color=darkseagreen4, key=1, label=i1, style=dashed];
m8_175 -> m8_176  [key=0, style=solid];
m8_175 -> m8_51  [key=2, style=dotted];
m8_175 -> m8_179  [color=darkseagreen4, key=1, label=i2, style=dashed];
m8_175 -> m8_183  [color=darkseagreen4, key=1, label=i2, style=dashed];
m8_175 -> m8_187  [color=darkseagreen4, key=1, label=i2, style=dashed];
m8_175 -> m8_191  [color=darkseagreen4, key=1, label=i2, style=dashed];
m8_176 -> m8_177  [key=0, style=solid];
m8_176 -> m8_181  [key=0, style=solid];
m8_176 -> m8_185  [key=0, style=solid];
m8_176 -> m8_189  [key=0, style=solid];
m8_193 -> m8_194  [key=0, style=solid];
m8_193 -> m8_216  [key=0, style=solid];
m8_194 -> m8_195  [key=0, style=solid];
m8_194 -> m8_197  [key=0, style=solid];
m8_197 -> m8_198  [key=0, style=solid];
m8_197 -> m8_138  [key=2, style=dotted];
m8_197 -> m8_202  [color=darkseagreen4, key=1, label=d1, style=dashed];
m8_197 -> m8_206  [color=darkseagreen4, key=1, label=d1, style=dashed];
m8_197 -> m8_210  [color=darkseagreen4, key=1, label=d1, style=dashed];
m8_197 -> m8_214  [color=darkseagreen4, key=1, label=d1, style=dashed];
m8_198 -> m8_199  [key=0, style=solid];
m8_198 -> m8_138  [key=2, style=dotted];
m8_198 -> m8_202  [color=darkseagreen4, key=1, label=d2, style=dashed];
m8_198 -> m8_206  [color=darkseagreen4, key=1, label=d2, style=dashed];
m8_198 -> m8_210  [color=darkseagreen4, key=1, label=d2, style=dashed];
m8_198 -> m8_214  [color=darkseagreen4, key=1, label=d2, style=dashed];
m8_199 -> m8_200  [key=0, style=solid];
m8_199 -> m8_204  [key=0, style=solid];
m8_199 -> m8_208  [key=0, style=solid];
m8_199 -> m8_212  [key=0, style=solid];
m8_216 -> m8_217  [key=0, style=solid];
m8_216 -> m8_239  [key=0, style=solid];
m8_217 -> m8_218  [key=0, style=solid];
m8_217 -> m8_220  [key=0, style=solid];
m8_220 -> m8_221  [key=0, style=solid];
m8_220 -> m8_56  [key=2, style=dotted];
m8_220 -> m8_225  [color=darkseagreen4, key=1, label=d1, style=dashed];
m8_220 -> m8_229  [color=darkseagreen4, key=1, label=d1, style=dashed];
m8_220 -> m8_233  [color=darkseagreen4, key=1, label=d1, style=dashed];
m8_220 -> m8_237  [color=darkseagreen4, key=1, label=d1, style=dashed];
m8_221 -> m8_222  [key=0, style=solid];
m8_221 -> m8_56  [key=2, style=dotted];
m8_221 -> m8_225  [color=darkseagreen4, key=1, label=d2, style=dashed];
m8_221 -> m8_229  [color=darkseagreen4, key=1, label=d2, style=dashed];
m8_221 -> m8_233  [color=darkseagreen4, key=1, label=d2, style=dashed];
m8_221 -> m8_237  [color=darkseagreen4, key=1, label=d2, style=dashed];
m8_222 -> m8_223  [key=0, style=solid];
m8_222 -> m8_227  [key=0, style=solid];
m8_222 -> m8_231  [key=0, style=solid];
m8_222 -> m8_235  [key=0, style=solid];
m8_239 -> m8_240  [key=0, style=solid];
m8_239 -> m8_262  [key=0, style=solid];
m8_240 -> m8_241  [key=0, style=solid];
m8_240 -> m8_243  [key=0, style=solid];
m8_243 -> m8_244  [key=0, style=solid];
m8_243 -> m8_140  [key=2, style=dotted];
m8_243 -> m8_248  [color=darkseagreen4, key=1, label=l1, style=dashed];
m8_243 -> m8_252  [color=darkseagreen4, key=1, label=l1, style=dashed];
m8_243 -> m8_256  [color=darkseagreen4, key=1, label=l1, style=dashed];
m8_243 -> m8_260  [color=darkseagreen4, key=1, label=l1, style=dashed];
m8_244 -> m8_245  [key=0, style=solid];
m8_244 -> m8_140  [key=2, style=dotted];
m8_244 -> m8_248  [color=darkseagreen4, key=1, label=l2, style=dashed];
m8_244 -> m8_252  [color=darkseagreen4, key=1, label=l2, style=dashed];
m8_244 -> m8_256  [color=darkseagreen4, key=1, label=l2, style=dashed];
m8_244 -> m8_260  [color=darkseagreen4, key=1, label=l2, style=dashed];
m8_245 -> m8_246  [key=0, style=solid];
m8_245 -> m8_250  [key=0, style=solid];
m8_245 -> m8_254  [key=0, style=solid];
m8_245 -> m8_258  [key=0, style=solid];
m8_169 -> m8_264  [key=0, style=solid];
m8_172 -> m8_173  [key=0, style=solid];
m8_173 -> m8_264  [key=0, style=solid];
m8_179 -> m8_180  [key=0, style=solid];
m8_183 -> m8_184  [key=0, style=solid];
m8_187 -> m8_188  [key=0, style=solid];
m8_191 -> m8_192  [key=0, style=solid];
m8_177 -> m8_178  [key=0, style=solid];
m8_181 -> m8_182  [key=0, style=solid];
m8_185 -> m8_186  [key=0, style=solid];
m8_189 -> m8_190  [key=0, style=solid];
m8_178 -> m8_179  [key=0, style=solid];
m8_180 -> m8_264  [key=0, style=solid];
m8_182 -> m8_183  [key=0, style=solid];
m8_184 -> m8_264  [key=0, style=solid];
m8_186 -> m8_187  [key=0, style=solid];
m8_188 -> m8_264  [key=0, style=solid];
m8_190 -> m8_191  [key=0, style=solid];
m8_192 -> m8_264  [key=0, style=solid];
m8_195 -> m8_196  [key=0, style=solid];
m8_196 -> m8_264  [key=0, style=solid];
m8_202 -> m8_203  [key=0, style=solid];
m8_206 -> m8_207  [key=0, style=solid];
m8_210 -> m8_211  [key=0, style=solid];
m8_214 -> m8_215  [key=0, style=solid];
m8_200 -> m8_201  [key=0, style=solid];
m8_204 -> m8_205  [key=0, style=solid];
m8_208 -> m8_209  [key=0, style=solid];
m8_212 -> m8_213  [key=0, style=solid];
m8_201 -> m8_202  [key=0, style=solid];
m8_203 -> m8_264  [key=0, style=solid];
m8_205 -> m8_206  [key=0, style=solid];
m8_207 -> m8_264  [key=0, style=solid];
m8_209 -> m8_210  [key=0, style=solid];
m8_211 -> m8_264  [key=0, style=solid];
m8_213 -> m8_214  [key=0, style=solid];
m8_215 -> m8_264  [key=0, style=solid];
m8_218 -> m8_219  [key=0, style=solid];
m8_219 -> m8_264  [key=0, style=solid];
m8_225 -> m8_226  [key=0, style=solid];
m8_229 -> m8_230  [key=0, style=solid];
m8_233 -> m8_234  [key=0, style=solid];
m8_237 -> m8_238  [key=0, style=solid];
m8_223 -> m8_224  [key=0, style=solid];
m8_227 -> m8_228  [key=0, style=solid];
m8_231 -> m8_232  [key=0, style=solid];
m8_235 -> m8_236  [key=0, style=solid];
m8_224 -> m8_225  [key=0, style=solid];
m8_226 -> m8_264  [key=0, style=solid];
m8_228 -> m8_229  [key=0, style=solid];
m8_230 -> m8_264  [key=0, style=solid];
m8_232 -> m8_233  [key=0, style=solid];
m8_234 -> m8_264  [key=0, style=solid];
m8_236 -> m8_237  [key=0, style=solid];
m8_238 -> m8_264  [key=0, style=solid];
m8_262 -> m8_263  [key=0, style=solid];
m8_262 -> m8_264  [color=darkseagreen4, key=1, label="out object", style=dashed];
m8_241 -> m8_242  [key=0, style=solid];
m8_242 -> m8_264  [key=0, style=solid];
m8_248 -> m8_249  [key=0, style=solid];
m8_252 -> m8_253  [key=0, style=solid];
m8_256 -> m8_257  [key=0, style=solid];
m8_260 -> m8_261  [key=0, style=solid];
m8_246 -> m8_247  [key=0, style=solid];
m8_250 -> m8_251  [key=0, style=solid];
m8_254 -> m8_255  [key=0, style=solid];
m8_258 -> m8_259  [key=0, style=solid];
m8_247 -> m8_248  [key=0, style=solid];
m8_249 -> m8_264  [key=0, style=solid];
m8_251 -> m8_252  [key=0, style=solid];
m8_253 -> m8_264  [key=0, style=solid];
m8_255 -> m8_256  [key=0, style=solid];
m8_257 -> m8_264  [key=0, style=solid];
m8_259 -> m8_260  [key=0, style=solid];
m8_261 -> m8_264  [key=0, style=solid];
m8_263 -> m8_264  [key=0, style=solid];
m8_264 -> m8_165  [color=blue, key=0, style=bold];
m8_275 -> m8_276  [key=0, style=solid];
m8_275 -> m8_278  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_275 -> m8_280  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_275 -> m8_281  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenType?", style=dashed];
m8_275 -> m8_282  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_275 -> m8_284  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_275 -> m8_286  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_275 -> m8_288  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_275 -> m8_290  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_275 -> m8_292  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_275 -> m8_294  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_275 -> m8_296  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_275 -> m8_298  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_275 -> m8_300  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_275 -> m8_302  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_275 -> m8_304  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_275 -> m8_28  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m8_275 -> m8_277  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Linq.JTokenType GetValueType", style=bold];
m8_275 -> m8_306  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Linq.JTokenType GetValueType", style=bold];
m8_275 -> m8_283  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Linq.JTokenType GetValueType", style=bold];
m8_275 -> m8_289  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Linq.JTokenType GetValueType", style=bold];
m8_275 -> m8_291  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Linq.JTokenType GetValueType", style=bold];
m8_275 -> m8_295  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Linq.JTokenType GetValueType", style=bold];
m8_275 -> m8_297  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Linq.JTokenType GetValueType", style=bold];
m8_275 -> m8_299  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Linq.JTokenType GetValueType", style=bold];
m8_275 -> m8_301  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Linq.JTokenType GetValueType", style=bold];
m8_275 -> m8_303  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Linq.JTokenType GetValueType", style=bold];
m8_276 -> m8_277  [key=0, style=solid];
m8_276 -> m8_278  [key=0, style=solid];
m8_278 -> m8_279  [key=0, style=solid];
m8_278 -> m8_280  [key=0, style=solid];
m8_280 -> m8_281  [key=0, style=solid];
m8_280 -> m8_282  [key=0, style=solid];
m8_281 -> m8_305  [key=0, style=solid];
m8_281 -> m8_306  [key=2, style=dotted];
m8_282 -> m8_283  [key=0, style=solid];
m8_282 -> m8_284  [key=0, style=solid];
m8_284 -> m8_285  [key=0, style=solid];
m8_284 -> m8_286  [key=0, style=solid];
m8_286 -> m8_287  [key=0, style=solid];
m8_286 -> m8_288  [key=0, style=solid];
m8_288 -> m8_289  [key=0, style=solid];
m8_288 -> m8_290  [key=0, style=solid];
m8_290 -> m8_291  [key=0, style=solid];
m8_290 -> m8_292  [key=0, style=solid];
m8_292 -> m8_293  [key=0, style=solid];
m8_292 -> m8_294  [key=0, style=solid];
m8_294 -> m8_295  [key=0, style=solid];
m8_294 -> m8_296  [key=0, style=solid];
m8_296 -> m8_297  [key=0, style=solid];
m8_296 -> m8_298  [key=0, style=solid];
m8_298 -> m8_299  [key=0, style=solid];
m8_298 -> m8_300  [key=0, style=solid];
m8_300 -> m8_301  [key=0, style=solid];
m8_300 -> m8_302  [key=0, style=solid];
m8_302 -> m8_303  [key=0, style=solid];
m8_302 -> m8_304  [key=0, style=solid];
m8_304 -> m8_305  [key=0, style=solid];
m8_304 -> m8_150  [key=2, style=dotted];
m8_304 -> m8_307  [key=2, style=dotted];
m8_304 -> m8_156  [key=2, style=dotted];
m8_277 -> m8_305  [key=0, style=solid];
m8_279 -> m8_305  [key=0, style=solid];
m8_283 -> m8_305  [key=0, style=solid];
m8_285 -> m8_305  [key=0, style=solid];
m8_287 -> m8_305  [key=0, style=solid];
m8_289 -> m8_305  [key=0, style=solid];
m8_291 -> m8_305  [key=0, style=solid];
m8_293 -> m8_305  [key=0, style=solid];
m8_295 -> m8_305  [key=0, style=solid];
m8_297 -> m8_305  [key=0, style=solid];
m8_299 -> m8_305  [key=0, style=solid];
m8_301 -> m8_305  [key=0, style=solid];
m8_303 -> m8_305  [key=0, style=solid];
m8_305 -> m8_275  [color=blue, key=0, style=bold];
m8_440 -> m8_441  [key=0, style=solid];
m8_440 -> m8_442  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_440 -> m8_444  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_440 -> m8_447  [color=darkseagreen4, key=1, label="System.Dynamic.ConvertBinder", style=dashed];
m8_440 -> m8_448  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_440 -> m8_440  [color=darkorchid, key=3, label="Parameter variable object result", style=bold];
m8_440 -> m8_35  [color=darkorchid, key=3, label="method methodReturn bool TryConvert", style=bold];
m8_441 -> m8_442  [key=0, style=solid];
m8_441 -> m8_444  [key=0, style=solid];
m8_442 -> m8_443  [key=0, style=solid];
m8_444 -> m8_445  [key=0, style=solid];
m8_447 -> m8_450  [key=0, style=solid];
m8_447 -> m8_451  [key=2, style=dotted];
m8_448 -> m8_449  [key=0, style=solid];
m8_448 -> m8_452  [key=2, style=dotted];
m8_448 -> m8_450  [color=darkseagreen4, key=1, label="out object", style=dashed];
m8_443 -> m8_450  [key=0, style=solid];
m8_445 -> m8_446  [key=0, style=solid];
m8_445 -> m8_448  [key=0, style=solid];
m8_446 -> m8_447  [key=0, style=solid];
m8_449 -> m8_450  [key=0, style=solid];
m8_450 -> m8_440  [color=blue, key=0, style=bold];
m8_20 -> m8_21  [key=0, style=solid];
m8_21 -> m8_20  [color=blue, key=0, style=bold];
m8_518 -> m8_519  [key=0, style=solid];
m8_519 -> m8_520  [key=0, style=solid];
m8_520 -> m8_518  [color=blue, key=0, style=bold];
m8_28 -> m8_29  [key=0, style=solid];
m8_29 -> m8_28  [color=blue, key=0, style=bold];
m8_266 -> m8_267  [key=0, style=solid];
m8_267 -> m8_268  [key=0, style=solid];
m8_267 -> m8_4  [key=2, style=dotted];
m8_268 -> m8_266  [color=blue, key=0, style=bold];
m8_12 -> m8_13  [key=0, style=solid];
m8_13 -> m8_12  [color=blue, key=0, style=bold];
m8_542 -> m8_543  [key=0, style=solid];
m8_543 -> m8_544  [key=0, style=solid];
m8_544 -> m8_542  [color=blue, key=0, style=bold];
m8_533 -> m8_534  [key=0, style=solid];
m8_534 -> m8_535  [key=0, style=solid];
m8_535 -> m8_533  [color=blue, key=0, style=bold];
m8_139 -> m8_158  [key=0, style=solid];
m8_139 -> m8_159  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_139 -> m8_60  [color=darkorchid, key=3, label="Parameter variable object objB", style=bold];
m8_139 -> m8_62  [color=darkorchid, key=3, label="method methodReturn int CompareFloat", style=bold];
m8_158 -> m8_159  [key=0, style=solid];
m8_158 -> m8_56  [key=2, style=dotted];
m8_158 -> m8_160  [color=darkseagreen4, key=1, label=d1, style=dashed];
m8_158 -> m8_162  [color=darkseagreen4, key=1, label=d1, style=dashed];
m8_159 -> m8_160  [key=0, style=solid];
m8_159 -> m8_56  [key=2, style=dotted];
m8_159 -> m8_162  [color=darkseagreen4, key=1, label=d2, style=dashed];
m8_160 -> m8_161  [key=0, style=solid];
m8_160 -> m8_162  [key=0, style=solid];
m8_160 -> m8_164  [key=2, style=dotted];
m8_162 -> m8_163  [key=0, style=solid];
m8_162 -> m8_59  [key=2, style=dotted];
m8_161 -> m8_163  [key=0, style=solid];
m8_163 -> m8_139  [color=blue, key=0, style=bold];
m8_424 -> m8_425  [key=0, style=solid];
m8_425 -> m8_426  [key=0, style=solid];
m8_425 -> m8_423  [key=2, style=dotted];
m8_426 -> m8_424  [color=blue, key=0, style=bold];
m8_524 -> m8_525  [key=0, style=solid];
m8_525 -> m8_526  [key=0, style=solid];
m8_526 -> m8_524  [color=blue, key=0, style=bold];
m8_488 -> m8_489  [key=0, style=solid];
m8_488 -> m8_491  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_488 -> m8_64  [color=darkorchid, key=3, label="method methodReturn int System.IComparable.CompareTo", style=bold];
m8_488 -> m8_60  [color=darkorchid, key=3, label="method methodReturn int System.IComparable.CompareTo", style=bold];
m8_489 -> m8_490  [key=0, style=solid];
m8_489 -> m8_491  [key=0, style=solid];
m8_491 -> m8_492  [key=0, style=solid];
m8_490 -> m8_493  [key=0, style=solid];
m8_492 -> m8_493  [key=0, style=solid];
m8_492 -> m8_60  [key=2, style=dotted];
m8_493 -> m8_488  [color=blue, key=0, style=bold];
m8_8 -> m8_9  [key=0, style=solid];
m8_9 -> m8_8  [color=blue, key=0, style=bold];
m8_30 -> m8_31  [key=0, style=solid];
m8_30 -> m8_33  [color=darkorchid, key=3, label="method methodReturn bool DeepEquals", style=bold];
m8_30 -> m8_35  [color=darkorchid, key=3, label="method methodReturn bool DeepEquals", style=bold];
m8_30 -> m8_38  [color=darkorchid, key=3, label="method methodReturn bool DeepEquals", style=bold];
m8_31 -> m8_32  [key=0, style=solid];
m8_31 -> m8_34  [color=darkseagreen4, key=1, label=other, style=dashed];
m8_31 -> m8_36  [color=darkseagreen4, key=1, label=other, style=dashed];
m8_32 -> m8_33  [key=0, style=solid];
m8_32 -> m8_34  [key=0, style=solid];
m8_34 -> m8_35  [key=0, style=solid];
m8_34 -> m8_36  [key=0, style=solid];
m8_36 -> m8_37  [key=0, style=solid];
m8_36 -> m8_38  [key=2, style=dotted];
m8_33 -> m8_37  [key=0, style=solid];
m8_35 -> m8_37  [key=0, style=solid];
m8_37 -> m8_30  [color=blue, key=0, style=bold];
m8_269 -> m8_270  [key=0, style=solid];
m8_270 -> m8_271  [key=0, style=solid];
m8_270 -> m8_0  [key=2, style=dotted];
m8_271 -> m8_269  [color=blue, key=0, style=bold];
m8_14 -> m8_15  [key=0, style=solid];
m8_15 -> m8_14  [color=blue, key=0, style=bold];
m8_551 -> m8_552  [key=0, style=solid];
m8_552 -> m8_553  [key=0, style=solid];
m8_552 -> m8_554  [key=2, style=dotted];
m8_553 -> m8_551  [color=blue, key=0, style=bold];
m8_18 -> m8_19  [key=0, style=solid];
m8_19 -> m8_18  [color=blue, key=0, style=bold];
m8_512 -> m8_513  [key=0, style=solid];
m8_513 -> m8_514  [key=0, style=solid];
m8_514 -> m8_512  [color=blue, key=0, style=bold];
m8_548 -> m8_549  [key=0, style=solid];
m8_549 -> m8_550  [key=0, style=solid];
m8_550 -> m8_548  [color=blue, key=0, style=bold];
m8_388 -> m8_389  [key=0, style=solid];
m8_389 -> m8_390  [key=0, style=solid];
m8_389 -> m8_392  [key=2, style=dotted];
m8_390 -> m8_391  [key=0, style=solid];
m8_390 -> m8_393  [key=2, style=dotted];
m8_391 -> m8_388  [color=blue, key=0, style=bold];
m8_415 -> m8_416  [key=0, style=solid];
m8_416 -> m8_417  [key=0, style=solid];
m8_416 -> m8_418  [key=0, style=solid];
m8_417 -> m8_419  [key=0, style=solid];
m8_418 -> m8_419  [key=0, style=solid];
m8_418 -> m8_265  [key=2, style=dotted];
m8_419 -> m8_415  [color=blue, key=0, style=bold];
m8_22 -> m8_23  [key=0, style=solid];
m8_23 -> m8_22  [color=blue, key=0, style=bold];
m8_423 -> m8_427  [key=0, style=solid];
m8_423 -> m8_431  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_423 -> m8_420  [color=darkorchid, key=3, label="Parameter variable string format", style=bold];
m8_423 -> m8_377  [color=darkorchid, key=3, label="Parameter variable System.IFormatProvider formatProvider", style=bold];
m8_427 -> m8_428  [key=0, style=solid];
m8_427 -> m8_429  [key=0, style=solid];
m8_431 -> m8_433  [key=0, style=solid];
m8_431 -> m8_434  [key=2, style=dotted];
m8_428 -> m8_433  [key=0, style=solid];
m8_429 -> m8_430  [key=0, style=solid];
m8_429 -> m8_431  [color=darkseagreen4, key=1, label=formattable, style=dashed];
m8_430 -> m8_431  [key=0, style=solid];
m8_430 -> m8_432  [key=0, style=solid];
m8_432 -> m8_433  [key=0, style=solid];
m8_432 -> m8_265  [key=2, style=dotted];
m8_433 -> m8_423  [color=blue, key=0, style=bold];
m8_509 -> m8_510  [key=0, style=solid];
m8_510 -> m8_511  [key=0, style=solid];
m8_511 -> m8_509  [color=blue, key=0, style=bold];
m8_530 -> m8_531  [key=0, style=solid];
m8_531 -> m8_532  [key=0, style=solid];
m8_532 -> m8_530  [color=blue, key=0, style=bold];
m8_515 -> m8_516  [key=0, style=solid];
m8_516 -> m8_517  [key=0, style=solid];
m8_517 -> m8_515  [color=blue, key=0, style=bold];
m8_39 -> m8_40  [key=0, style=solid];
m8_39 -> m8_43  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_39 -> m8_44  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_39 -> m8_46  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_39 -> m8_47  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_39 -> m8_60  [color=darkorchid, key=3, label="Parameter variable object i2", style=bold];
m8_40 -> m8_41  [key=0, style=solid];
m8_40 -> m8_51  [key=2, style=dotted];
m8_40 -> m8_52  [key=2, style=dotted];
m8_40 -> m8_42  [color=darkseagreen4, key=1, label=result, style=dashed];
m8_40 -> m8_49  [color=darkseagreen4, key=1, label=result, style=dashed];
m8_43 -> m8_44  [key=0, style=solid];
m8_43 -> m8_46  [key=0, style=solid];
m8_44 -> m8_45  [key=0, style=solid];
m8_46 -> m8_47  [key=0, style=solid];
m8_46 -> m8_49  [key=0, style=solid];
m8_47 -> m8_48  [key=0, style=solid];
m8_47 -> m8_56  [key=2, style=dotted];
m8_41 -> m8_42  [key=0, style=solid];
m8_41 -> m8_43  [key=0, style=solid];
m8_42 -> m8_50  [key=0, style=solid];
m8_49 -> m8_50  [key=0, style=solid];
m8_45 -> m8_50  [key=0, style=solid];
m8_45 -> m8_53  [key=2, style=dotted];
m8_45 -> m8_54  [key=2, style=dotted];
m8_45 -> m8_55  [key=2, style=dotted];
m8_48 -> m8_50  [key=0, style=solid];
m8_48 -> m8_57  [key=2, style=dotted];
m8_48 -> m8_58  [key=2, style=dotted];
m8_48 -> m8_59  [key=2, style=dotted];
m8_50 -> m8_39  [color=blue, key=0, style=bold];
m8_499 -> m8_500  [key=0, style=solid];
m8_499 -> m8_62  [color=darkorchid, key=3, label="method methodReturn System.TypeCode System.IConvertible.GetTypeCode", style=bold];
m8_499 -> m8_301  [color=darkorchid, key=3, label="method methodReturn System.TypeCode System.IConvertible.GetTypeCode", style=bold];
m8_499 -> m8_64  [color=darkorchid, key=3, label="method methodReturn System.TypeCode System.IConvertible.GetTypeCode", style=bold];
m8_500 -> m8_501  [key=0, style=solid];
m8_500 -> m8_502  [key=0, style=solid];
m8_501 -> m8_507  [key=0, style=solid];
m8_502 -> m8_503  [key=0, style=solid];
m8_502 -> m8_504  [key=0, style=solid];
m8_503 -> m8_507  [key=0, style=solid];
m8_504 -> m8_505  [key=0, style=solid];
m8_504 -> m8_506  [key=0, style=solid];
m8_505 -> m8_507  [key=0, style=solid];
m8_506 -> m8_507  [key=0, style=solid];
m8_506 -> m8_307  [key=2, style=dotted];
m8_506 -> m8_508  [key=2, style=dotted];
m8_507 -> m8_499  [color=blue, key=0, style=bold];
m8_494 -> m8_495  [key=0, style=solid];
m8_494 -> m8_497  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_494 -> m8_64  [color=darkorchid, key=3, label="method methodReturn int CompareTo", style=bold];
m8_494 -> m8_60  [color=darkorchid, key=3, label="method methodReturn int CompareTo", style=bold];
m8_495 -> m8_496  [key=0, style=solid];
m8_495 -> m8_497  [key=0, style=solid];
m8_497 -> m8_498  [key=0, style=solid];
m8_497 -> m8_60  [key=2, style=dotted];
m8_496 -> m8_498  [key=0, style=solid];
m8_498 -> m8_494  [color=blue, key=0, style=bold];
m8_0 -> m8_1  [key=0, style=solid];
m8_0 -> m8_2  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenType", style=dashed];
m8_1 -> m8_2  [key=0, style=solid];
m8_2 -> m8_3  [key=0, style=solid];
m8_3 -> m8_0  [color=blue, key=0, style=bold];
m8_272 -> m8_273  [key=0, style=solid];
m8_273 -> m8_274  [key=0, style=solid];
m8_273 -> m8_0  [key=2, style=dotted];
m8_274 -> m8_272  [color=blue, key=0, style=bold];
m8_24 -> m8_25  [key=0, style=solid];
m8_25 -> m8_24  [color=blue, key=0, style=bold];
m8_521 -> m8_522  [key=0, style=solid];
m8_522 -> m8_523  [key=0, style=solid];
m8_523 -> m8_521  [color=blue, key=0, style=bold];
m8_396 -> m8_397  [key=0, style=solid];
m8_396 -> m8_399  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_396 -> m8_33  [color=darkorchid, key=3, label="method methodReturn bool Equals", style=bold];
m8_396 -> m8_38  [color=darkorchid, key=3, label="method methodReturn bool Equals", style=bold];
m8_396 -> m8_404  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JValue other", style=bold];
m8_397 -> m8_398  [key=0, style=solid];
m8_397 -> m8_399  [key=0, style=solid];
m8_399 -> m8_400  [key=0, style=solid];
m8_399 -> m8_38  [key=2, style=dotted];
m8_398 -> m8_400  [key=0, style=solid];
m8_400 -> m8_396  [color=blue, key=0, style=bold];
m8_6 -> m8_7  [key=0, style=solid];
m8_7 -> m8_6  [color=blue, key=0, style=bold];
m8_401 -> m8_402  [key=0, style=solid];
m8_401 -> m8_404  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_401 -> m8_407  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_401 -> m8_33  [color=darkorchid, key=3, label="method methodReturn bool Equals", style=bold];
m8_401 -> m8_396  [color=darkorchid, key=3, label="method methodReturn bool Equals", style=bold];
m8_402 -> m8_403  [key=0, style=solid];
m8_402 -> m8_404  [key=0, style=solid];
m8_404 -> m8_405  [key=0, style=solid];
m8_404 -> m8_406  [color=darkseagreen4, key=1, label=otherValue, style=dashed];
m8_407 -> m8_408  [key=0, style=solid];
m8_407 -> m8_409  [key=2, style=dotted];
m8_403 -> m8_408  [key=0, style=solid];
m8_405 -> m8_406  [key=0, style=solid];
m8_405 -> m8_407  [key=0, style=solid];
m8_406 -> m8_408  [key=0, style=solid];
m8_406 -> m8_396  [key=2, style=dotted];
m8_408 -> m8_401  [color=blue, key=0, style=bold];
m8_420 -> m8_421  [key=0, style=solid];
m8_420 -> m8_423  [color=darkorchid, key=3, label="method methodReturn string ToString", style=bold];
m8_421 -> m8_422  [key=0, style=solid];
m8_421 -> m8_423  [key=2, style=dotted];
m8_422 -> m8_420  [color=blue, key=0, style=bold];
m8_10 -> m8_11  [key=0, style=solid];
m8_11 -> m8_10  [color=blue, key=0, style=bold];
m8_453 -> m8_454  [key=0, style=solid];
m8_453 -> m8_455  [color=darkseagreen4, key=1, label="System.Dynamic.BinaryOperationBinder", style=dashed];
m8_453 -> m8_457  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_453 -> m8_460  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_453 -> m8_463  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_453 -> m8_466  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_453 -> m8_469  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_453 -> m8_472  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_453 -> m8_482  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_453 -> m8_35  [color=darkorchid, key=3, label="method methodReturn bool TryBinaryOperation", style=bold];
m8_453 -> m8_33  [color=darkorchid, key=3, label="method methodReturn bool TryBinaryOperation", style=bold];
m8_454 -> m8_455  [key=0, style=solid];
m8_454 -> m8_457  [color=darkseagreen4, key=1, label=compareValue, style=dashed];
m8_454 -> m8_460  [color=darkseagreen4, key=1, label=compareValue, style=dashed];
m8_454 -> m8_463  [color=darkseagreen4, key=1, label=compareValue, style=dashed];
m8_454 -> m8_466  [color=darkseagreen4, key=1, label=compareValue, style=dashed];
m8_454 -> m8_469  [color=darkseagreen4, key=1, label=compareValue, style=dashed];
m8_454 -> m8_472  [color=darkseagreen4, key=1, label=compareValue, style=dashed];
m8_454 -> m8_482  [color=darkseagreen4, key=1, label=compareValue, style=dashed];
m8_455 -> m8_456  [key=0, style=solid];
m8_455 -> m8_459  [key=0, style=solid];
m8_455 -> m8_462  [key=0, style=solid];
m8_455 -> m8_465  [key=0, style=solid];
m8_455 -> m8_468  [key=0, style=solid];
m8_455 -> m8_471  [key=0, style=solid];
m8_455 -> m8_474  [key=0, style=solid];
m8_457 -> m8_458  [key=0, style=solid];
m8_457 -> m8_60  [key=2, style=dotted];
m8_460 -> m8_461  [key=0, style=solid];
m8_460 -> m8_60  [key=2, style=dotted];
m8_463 -> m8_464  [key=0, style=solid];
m8_463 -> m8_60  [key=2, style=dotted];
m8_466 -> m8_467  [key=0, style=solid];
m8_466 -> m8_60  [key=2, style=dotted];
m8_469 -> m8_470  [key=0, style=solid];
m8_469 -> m8_60  [key=2, style=dotted];
m8_472 -> m8_473  [key=0, style=solid];
m8_472 -> m8_60  [key=2, style=dotted];
m8_482 -> m8_483  [key=0, style=solid];
m8_482 -> m8_485  [key=0, style=solid];
m8_482 -> m8_165  [key=2, style=dotted];
m8_456 -> m8_457  [key=0, style=solid];
m8_459 -> m8_460  [key=0, style=solid];
m8_462 -> m8_463  [key=0, style=solid];
m8_465 -> m8_466  [key=0, style=solid];
m8_468 -> m8_469  [key=0, style=solid];
m8_471 -> m8_472  [key=0, style=solid];
m8_474 -> m8_475  [key=0, style=solid];
m8_458 -> m8_487  [key=0, style=solid];
m8_461 -> m8_487  [key=0, style=solid];
m8_464 -> m8_487  [key=0, style=solid];
m8_467 -> m8_487  [key=0, style=solid];
m8_470 -> m8_487  [key=0, style=solid];
m8_473 -> m8_487  [key=0, style=solid];
m8_475 -> m8_476  [key=0, style=solid];
m8_476 -> m8_477  [key=0, style=solid];
m8_477 -> m8_478  [key=0, style=solid];
m8_478 -> m8_479  [key=0, style=solid];
m8_479 -> m8_480  [key=0, style=solid];
m8_480 -> m8_481  [key=0, style=solid];
m8_481 -> m8_482  [key=0, style=solid];
m8_483 -> m8_484  [key=0, style=solid];
m8_483 -> m8_28  [key=2, style=dotted];
m8_483 -> m8_483  [color=darkseagreen4, key=1, label="out object", style=dashed];
m8_485 -> m8_486  [key=0, style=solid];
m8_485 -> m8_487  [color=darkseagreen4, key=1, label="out object", style=dashed];
m8_484 -> m8_487  [key=0, style=solid];
m8_486 -> m8_487  [key=0, style=solid];
m8_487 -> m8_453  [color=blue, key=0, style=bold];
m8_38 -> m8_394  [key=0, style=solid];
m8_38 -> m8_31  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JValue v2", style=bold];
m8_38 -> m8_396  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JValue v2", style=bold];
m8_394 -> m8_395  [key=0, style=solid];
m8_394 -> m8_60  [key=2, style=dotted];
m8_395 -> m8_38  [color=blue, key=0, style=bold];
m8_435 -> m8_436  [key=0, style=solid];
m8_436 -> m8_437  [key=0, style=solid];
m8_436 -> m8_438  [key=2, style=dotted];
m8_436 -> m8_439  [key=2, style=dotted];
m8_437 -> m8_435  [color=blue, key=0, style=bold];
m8_60 -> m8_61  [key=0, style=solid];
m8_60 -> m8_63  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_60 -> m8_65  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_60 -> m8_67  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenType", style=dashed];
m8_60 -> m8_69  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_60 -> m8_70  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_60 -> m8_71  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_60 -> m8_72  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_60 -> m8_73  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_60 -> m8_74  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_60 -> m8_75  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_60 -> m8_76  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_60 -> m8_77  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_60 -> m8_79  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_60 -> m8_80  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_60 -> m8_81  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_60 -> m8_82  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_60 -> m8_83  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_60 -> m8_87  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_60 -> m8_88  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_60 -> m8_91  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_60 -> m8_92  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_60 -> m8_95  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_60 -> m8_96  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_60 -> m8_98  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_60 -> m8_99  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_60 -> m8_100  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_60 -> m8_102  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_60 -> m8_104  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_60 -> m8_105  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_60 -> m8_106  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_60 -> m8_109  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_60 -> m8_111  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_60 -> m8_112  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_60 -> m8_119  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_60 -> m8_121  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_60 -> m8_122  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_60 -> m8_125  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_60 -> m8_127  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_60 -> m8_128  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_60 -> m8_131  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_60 -> m8_133  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_60 -> m8_134  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_60 -> m8_136  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenType", style=dashed];
m8_60 -> m8_62  [color=darkorchid, key=3, label="method methodReturn int Compare", style=bold];
m8_60 -> m8_64  [color=darkorchid, key=3, label="method methodReturn int Compare", style=bold];
m8_60 -> m8_66  [color=darkorchid, key=3, label="method methodReturn int Compare", style=bold];
m8_60 -> m8_39  [color=darkorchid, key=3, label="method methodReturn int Compare", style=bold];
m8_60 -> m8_139  [color=darkorchid, key=3, label="method methodReturn int Compare", style=bold];
m8_60 -> m8_454  [color=darkorchid, key=3, label="Parameter variable object objB", style=bold];
m8_60 -> m8_491  [color=darkorchid, key=3, label="Parameter variable object objB", style=bold];
m8_61 -> m8_62  [key=0, style=solid];
m8_61 -> m8_63  [key=0, style=solid];
m8_63 -> m8_64  [key=0, style=solid];
m8_63 -> m8_65  [key=0, style=solid];
m8_65 -> m8_66  [key=0, style=solid];
m8_65 -> m8_67  [key=0, style=solid];
m8_67 -> m8_68  [key=0, style=solid];
m8_67 -> m8_78  [key=0, style=solid];
m8_67 -> m8_84  [key=0, style=solid];
m8_67 -> m8_90  [key=0, style=solid];
m8_67 -> m8_94  [key=0, style=solid];
m8_67 -> m8_108  [key=0, style=solid];
m8_67 -> m8_118  [key=0, style=solid];
m8_67 -> m8_124  [key=0, style=solid];
m8_67 -> m8_130  [key=0, style=solid];
m8_67 -> m8_136  [key=0, style=solid];
m8_69 -> m8_70  [key=0, style=solid];
m8_69 -> m8_71  [key=0, style=solid];
m8_70 -> m8_137  [key=0, style=solid];
m8_70 -> m8_39  [key=2, style=dotted];
m8_71 -> m8_72  [key=0, style=solid];
m8_71 -> m8_73  [key=0, style=solid];
m8_72 -> m8_137  [key=0, style=solid];
m8_72 -> m8_39  [key=2, style=dotted];
m8_73 -> m8_74  [key=0, style=solid];
m8_73 -> m8_75  [key=0, style=solid];
m8_74 -> m8_137  [key=0, style=solid];
m8_74 -> m8_138  [key=2, style=dotted];
m8_74 -> m8_55  [key=2, style=dotted];
m8_75 -> m8_76  [key=0, style=solid];
m8_75 -> m8_77  [key=0, style=solid];
m8_76 -> m8_137  [key=0, style=solid];
m8_76 -> m8_139  [key=2, style=dotted];
m8_77 -> m8_137  [key=0, style=solid];
m8_77 -> m8_140  [key=2, style=dotted];
m8_77 -> m8_141  [key=2, style=dotted];
m8_79 -> m8_80  [key=0, style=solid];
m8_79 -> m8_81  [key=0, style=solid];
m8_80 -> m8_137  [key=0, style=solid];
m8_80 -> m8_39  [key=2, style=dotted];
m8_81 -> m8_82  [key=0, style=solid];
m8_81 -> m8_83  [key=0, style=solid];
m8_82 -> m8_137  [key=0, style=solid];
m8_82 -> m8_39  [key=2, style=dotted];
m8_83 -> m8_137  [key=0, style=solid];
m8_83 -> m8_139  [key=2, style=dotted];
m8_87 -> m8_88  [key=0, style=solid];
m8_87 -> m8_142  [key=2, style=dotted];
m8_87 -> m8_89  [color=darkseagreen4, key=1, label=s1, style=dashed];
m8_88 -> m8_89  [key=0, style=solid];
m8_88 -> m8_142  [key=2, style=dotted];
m8_91 -> m8_92  [key=0, style=solid];
m8_91 -> m8_144  [key=2, style=dotted];
m8_91 -> m8_93  [color=darkseagreen4, key=1, label=b1, style=dashed];
m8_92 -> m8_93  [key=0, style=solid];
m8_92 -> m8_144  [key=2, style=dotted];
m8_95 -> m8_96  [key=0, style=solid];
m8_95 -> m8_102  [key=0, style=solid];
m8_96 -> m8_97  [key=0, style=solid];
m8_96 -> m8_101  [color=darkseagreen4, key=1, label=date1, style=dashed];
m8_98 -> m8_99  [key=0, style=solid];
m8_98 -> m8_100  [key=0, style=solid];
m8_99 -> m8_101  [key=0, style=solid];
m8_100 -> m8_101  [key=0, style=solid];
m8_100 -> m8_146  [key=2, style=dotted];
m8_102 -> m8_103  [key=0, style=solid];
m8_102 -> m8_107  [color=darkseagreen4, key=1, label=date1, style=dashed];
m8_104 -> m8_105  [key=0, style=solid];
m8_104 -> m8_106  [key=0, style=solid];
m8_105 -> m8_107  [key=0, style=solid];
m8_106 -> m8_107  [key=0, style=solid];
m8_106 -> m8_148  [key=2, style=dotted];
m8_106 -> m8_146  [key=2, style=dotted];
m8_109 -> m8_110  [key=0, style=solid];
m8_109 -> m8_111  [key=0, style=solid];
m8_111 -> m8_112  [key=0, style=solid];
m8_111 -> m8_113  [color=darkseagreen4, key=1, label=bytes1, style=dashed];
m8_111 -> m8_117  [color=darkseagreen4, key=1, label=bytes1, style=dashed];
m8_112 -> m8_113  [key=0, style=solid];
m8_112 -> m8_115  [color=darkseagreen4, key=1, label=bytes2, style=dashed];
m8_112 -> m8_117  [color=darkseagreen4, key=1, label=bytes2, style=dashed];
m8_119 -> m8_120  [key=0, style=solid];
m8_119 -> m8_121  [key=0, style=solid];
m8_121 -> m8_122  [key=0, style=solid];
m8_121 -> m8_123  [color=darkseagreen4, key=1, label=guid1, style=dashed];
m8_122 -> m8_123  [key=0, style=solid];
m8_125 -> m8_126  [key=0, style=solid];
m8_125 -> m8_127  [key=0, style=solid];
m8_127 -> m8_128  [key=0, style=solid];
m8_127 -> m8_129  [color=darkseagreen4, key=1, label=uri1, style=dashed];
m8_128 -> m8_129  [key=0, style=solid];
m8_131 -> m8_132  [key=0, style=solid];
m8_131 -> m8_133  [key=0, style=solid];
m8_133 -> m8_134  [key=0, style=solid];
m8_133 -> m8_135  [color=darkseagreen4, key=1, label=ts1, style=dashed];
m8_134 -> m8_135  [key=0, style=solid];
m8_136 -> m8_137  [key=0, style=solid];
m8_136 -> m8_156  [key=2, style=dotted];
m8_136 -> m8_157  [key=2, style=dotted];
m8_62 -> m8_137  [key=0, style=solid];
m8_64 -> m8_137  [key=0, style=solid];
m8_66 -> m8_137  [key=0, style=solid];
m8_68 -> m8_69  [key=0, style=solid];
m8_78 -> m8_79  [key=0, style=solid];
m8_84 -> m8_85  [key=0, style=solid];
m8_90 -> m8_91  [key=0, style=solid];
m8_94 -> m8_95  [key=0, style=solid];
m8_108 -> m8_109  [key=0, style=solid];
m8_118 -> m8_119  [key=0, style=solid];
m8_124 -> m8_125  [key=0, style=solid];
m8_130 -> m8_131  [key=0, style=solid];
m8_85 -> m8_86  [key=0, style=solid];
m8_86 -> m8_87  [key=0, style=solid];
m8_89 -> m8_137  [key=0, style=solid];
m8_89 -> m8_143  [key=2, style=dotted];
m8_93 -> m8_137  [key=0, style=solid];
m8_93 -> m8_145  [key=2, style=dotted];
m8_97 -> m8_98  [key=0, style=solid];
m8_101 -> m8_137  [key=0, style=solid];
m8_101 -> m8_147  [key=2, style=dotted];
m8_103 -> m8_104  [key=0, style=solid];
m8_107 -> m8_137  [key=0, style=solid];
m8_107 -> m8_149  [key=2, style=dotted];
m8_107 -> m8_107  [color=darkseagreen4, key=1, label=date1, style=dashed];
m8_110 -> m8_137  [key=0, style=solid];
m8_110 -> m8_150  [key=2, style=dotted];
m8_113 -> m8_114  [key=0, style=solid];
m8_113 -> m8_115  [key=0, style=solid];
m8_117 -> m8_137  [key=0, style=solid];
m8_117 -> m8_151  [key=2, style=dotted];
m8_115 -> m8_116  [key=0, style=solid];
m8_115 -> m8_117  [key=0, style=solid];
m8_114 -> m8_137  [key=0, style=solid];
m8_116 -> m8_137  [key=0, style=solid];
m8_120 -> m8_137  [key=0, style=solid];
m8_120 -> m8_150  [key=2, style=dotted];
m8_123 -> m8_137  [key=0, style=solid];
m8_123 -> m8_152  [key=2, style=dotted];
m8_123 -> m8_123  [color=darkseagreen4, key=1, label=guid1, style=dashed];
m8_126 -> m8_137  [key=0, style=solid];
m8_126 -> m8_150  [key=2, style=dotted];
m8_129 -> m8_137  [key=0, style=solid];
m8_129 -> m8_153  [key=2, style=dotted];
m8_129 -> m8_154  [key=2, style=dotted];
m8_132 -> m8_137  [key=0, style=solid];
m8_132 -> m8_150  [key=2, style=dotted];
m8_135 -> m8_137  [key=0, style=solid];
m8_135 -> m8_155  [key=2, style=dotted];
m8_135 -> m8_135  [color=darkseagreen4, key=1, label=ts1, style=dashed];
m8_137 -> m8_60  [color=blue, key=0, style=bold];
m8_306 -> m8_308  [key=0, style=solid];
m8_306 -> m8_310  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenType?", style=dashed];
m8_306 -> m8_314  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenType?", style=dashed];
m8_306 -> m8_275  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JTokenType? current", style=bold];
m8_306 -> m8_309  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Linq.JTokenType GetStringValueType", style=bold];
m8_308 -> m8_309  [key=0, style=solid];
m8_308 -> m8_310  [key=0, style=solid];
m8_310 -> m8_311  [key=0, style=solid];
m8_310 -> m8_315  [key=0, style=solid];
m8_314 -> m8_316  [key=0, style=solid];
m8_309 -> m8_316  [key=0, style=solid];
m8_311 -> m8_312  [key=0, style=solid];
m8_315 -> m8_316  [key=0, style=solid];
m8_312 -> m8_313  [key=0, style=solid];
m8_313 -> m8_314  [key=0, style=solid];
m8_316 -> m8_306  [color=blue, key=0, style=bold];
m8_536 -> m8_537  [key=0, style=solid];
m8_537 -> m8_538  [key=0, style=solid];
m8_538 -> m8_536  [color=blue, key=0, style=bold];
m8_539 -> m8_540  [key=0, style=solid];
m8_540 -> m8_541  [key=0, style=solid];
m8_541 -> m8_539  [color=blue, key=0, style=bold];
m8_555 -> m8_1  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_555 -> m8_2  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_555 -> m8_34  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_555 -> m8_36  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_555 -> m8_267  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_555 -> m8_318  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_555 -> m8_319  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_555 -> m8_321  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_555 -> m8_323  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_555 -> m8_325  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_555 -> m8_328  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_555 -> m8_337  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_555 -> m8_338  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_555 -> m8_339  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_555 -> m8_342  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_555 -> m8_343  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_555 -> m8_344  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_555 -> m8_345  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_555 -> m8_346  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_555 -> m8_347  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_555 -> m8_348  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_555 -> m8_351  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_555 -> m8_354  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_555 -> m8_357  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_555 -> m8_358  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_555 -> m8_359  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_555 -> m8_362  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_555 -> m8_367  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_555 -> m8_370  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_555 -> m8_389  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_555 -> m8_390  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_555 -> m8_399  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_555 -> m8_406  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_555 -> m8_407  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_555 -> m8_411  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_555 -> m8_413  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_555 -> m8_416  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_555 -> m8_418  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_555 -> m8_421  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_555 -> m8_425  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_555 -> m8_427  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_555 -> m8_429  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_555 -> m8_432  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_555 -> m8_436  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_555 -> m8_492  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_555 -> m8_497  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_555 -> m8_500  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_555 -> m8_502  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_555 -> m8_504  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_555 -> m8_506  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_555 -> m8_510  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_555 -> m8_513  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_555 -> m8_516  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_555 -> m8_519  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_555 -> m8_522  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_555 -> m8_525  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_555 -> m8_528  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_555 -> m8_531  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_555 -> m8_534  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_555 -> m8_537  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_555 -> m8_540  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_555 -> m8_543  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_555 -> m8_546  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_555 -> m8_549  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m8_555 -> m8_552  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m9_4 -> m9_5  [key=0, style=solid];
m9_4 -> m9_9  [key=2, style=dotted];
m9_4 -> m9_4  [color=darkorchid, key=3, label="Field variable char Tab", style=bold];
m9_4 -> m9_10  [key=2, style=dotted];
m9_5 -> m9_4  [color=blue, key=0, style=bold];
m9_5 -> m9_11  [key=2, style=dotted];
m9_5 -> m9_6  [key=0, style=solid];
m9_5 -> m9_13  [color=darkorchid, key=3, label="method methodReturn string FormatWith", style=bold];
m9_255 -> m9_256  [key=0, style=solid];
m9_255 -> m9_258  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m9_255 -> m9_261  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m9_255 -> m9_264  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m9_255 -> m9_267  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m9_255 -> m9_270  [color=darkseagreen4, key=1, label="params Newtonsoft.Json.JsonConverter[]", style=dashed];
m9_255 -> m9_271  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m9_255 -> m9_275  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m9_255 -> m9_278  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m9_255 -> m9_281  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m9_255 -> m9_284  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m9_255 -> m9_288  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m9_255 -> m9_289  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m9_255 -> m9_292  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m9_255 -> m9_297  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m9_256 -> m9_257  [key=0, style=solid];
m9_256 -> m9_260  [key=0, style=solid];
m9_256 -> m9_263  [key=0, style=solid];
m9_256 -> m9_266  [key=0, style=solid];
m9_258 -> m9_259  [key=0, style=solid];
m9_258 -> m9_205  [key=2, style=dotted];
m9_258 -> m9_301  [key=2, style=dotted];
m9_261 -> m9_262  [key=0, style=solid];
m9_261 -> m9_205  [key=2, style=dotted];
m9_261 -> m9_302  [key=2, style=dotted];
m9_264 -> m9_265  [key=0, style=solid];
m9_264 -> m9_303  [key=2, style=dotted];
m9_267 -> m9_268  [key=0, style=solid];
m9_267 -> m9_304  [key=2, style=dotted];
m9_270 -> m9_271  [key=0, style=solid];
m9_270 -> m9_273  [key=0, style=solid];
m9_270 -> m9_245  [key=2, style=dotted];
m9_270 -> m9_305  [key=2, style=dotted];
m9_271 -> m9_272  [key=0, style=solid];
m9_271 -> m9_306  [key=2, style=dotted];
m9_271 -> m9_307  [key=2, style=dotted];
m9_275 -> m9_276  [key=0, style=solid];
m9_275 -> m9_102  [key=2, style=dotted];
m9_275 -> m9_308  [key=2, style=dotted];
m9_278 -> m9_279  [key=0, style=solid];
m9_278 -> m9_125  [key=2, style=dotted];
m9_278 -> m9_309  [key=2, style=dotted];
m9_281 -> m9_282  [key=0, style=solid];
m9_281 -> m9_205  [key=2, style=dotted];
m9_281 -> m9_310  [key=2, style=dotted];
m9_284 -> m9_285  [key=0, style=solid];
m9_284 -> m9_106  [key=2, style=dotted];
m9_284 -> m9_311  [key=2, style=dotted];
m9_288 -> m9_290  [key=0, style=solid];
m9_288 -> m9_312  [key=2, style=dotted];
m9_289 -> m9_290  [key=0, style=solid];
m9_289 -> m9_108  [key=2, style=dotted];
m9_289 -> m9_313  [key=2, style=dotted];
m9_292 -> m9_293  [key=0, style=solid];
m9_292 -> m9_314  [key=2, style=dotted];
m9_297 -> m9_298  [key=0, style=solid];
m9_297 -> m9_205  [key=2, style=dotted];
m9_297 -> m9_310  [key=2, style=dotted];
m9_257 -> m9_258  [key=0, style=solid];
m9_260 -> m9_261  [key=0, style=solid];
m9_263 -> m9_264  [key=0, style=solid];
m9_266 -> m9_267  [key=0, style=solid];
m9_259 -> m9_299  [key=0, style=solid];
m9_262 -> m9_299  [key=0, style=solid];
m9_265 -> m9_299  [key=0, style=solid];
m9_268 -> m9_299  [key=0, style=solid];
m9_269 -> m9_270  [key=0, style=solid];
m9_273 -> m9_274  [key=0, style=solid];
m9_273 -> m9_277  [key=0, style=solid];
m9_273 -> m9_280  [key=0, style=solid];
m9_273 -> m9_283  [key=0, style=solid];
m9_273 -> m9_286  [key=0, style=solid];
m9_273 -> m9_291  [key=0, style=solid];
m9_273 -> m9_294  [key=0, style=solid];
m9_272 -> m9_299  [key=0, style=solid];
m9_274 -> m9_275  [key=0, style=solid];
m9_277 -> m9_278  [key=0, style=solid];
m9_280 -> m9_281  [key=0, style=solid];
m9_283 -> m9_284  [key=0, style=solid];
m9_286 -> m9_287  [key=0, style=solid];
m9_291 -> m9_292  [key=0, style=solid];
m9_294 -> m9_295  [key=0, style=solid];
m9_276 -> m9_299  [key=0, style=solid];
m9_279 -> m9_299  [key=0, style=solid];
m9_282 -> m9_299  [key=0, style=solid];
m9_285 -> m9_299  [key=0, style=solid];
m9_287 -> m9_288  [key=0, style=solid];
m9_287 -> m9_289  [key=0, style=solid];
m9_290 -> m9_299  [key=0, style=solid];
m9_293 -> m9_299  [key=0, style=solid];
m9_295 -> m9_296  [key=0, style=solid];
m9_296 -> m9_297  [key=0, style=solid];
m9_298 -> m9_299  [key=0, style=solid];
m9_300 -> m9_299  [key=0, style=solid];
m9_300 -> m9_118  [key=2, style=dotted];
m9_299 -> m9_255  [color=blue, key=0, style=bold];
m9_337 -> m9_338  [key=0, style=solid];
m9_338 -> m9_339  [key=0, style=solid];
m9_338 -> m9_340  [key=0, style=solid];
m9_339 -> m9_341  [key=0, style=solid];
m9_340 -> m9_341  [key=0, style=solid];
m9_340 -> m9_319  [key=2, style=dotted];
m9_341 -> m9_337  [color=blue, key=0, style=bold];
m9_77 -> m9_78  [key=0, style=solid];
m9_77 -> m9_98  [key=0, style=solid];
m9_79 -> m9_9  [key=2, style=dotted];
m9_79 -> m9_19  [key=2, style=dotted];
m9_79 -> m9_80  [key=0, style=solid];
m9_78 -> m9_79  [key=0, style=solid];
m9_78 -> m9_98  [key=0, style=solid];
m9_78 -> m9_112  [key=2, style=dotted];
m9_80 -> m9_77  [color=blue, key=0, style=bold];
m9_80 -> m9_81  [key=0, style=solid];
m9_80 -> m9_82  [key=0, style=solid];
m9_102 -> m9_109  [key=2, style=dotted];
m9_102 -> m9_103  [key=0, style=solid];
m9_102 -> m9_104  [color=darkseagreen4, key=1, label=circularReferenceClass, style=dashed];
m9_197 -> m9_198  [key=0, style=solid];
m9_197 -> m9_204  [key=0, style=solid];
m9_200 -> m9_11  [key=2, style=dotted];
m9_200 -> m9_201  [key=0, style=solid];
m9_205 -> m9_11  [key=2, style=dotted];
m9_205 -> m9_206  [key=0, style=solid];
m9_206 -> m9_11  [key=2, style=dotted];
m9_206 -> m9_207  [key=0, style=solid];
m9_203 -> m9_11  [key=2, style=dotted];
m9_203 -> m9_204  [key=0, style=solid];
m9_204 -> m9_11  [key=2, style=dotted];
m9_204 -> m9_205  [key=0, style=solid];
m9_204 -> m9_128  [color=blue, key=0, style=bold];
m9_199 -> m9_200  [key=0, style=solid];
m9_199 -> m9_205  [color=darkseagreen4, key=1, label=employees, style=dashed];
m9_199 -> m9_206  [color=darkseagreen4, key=1, label=employees, style=dashed];
m9_199 -> m9_152  [key=2, style=dotted];
m9_199 -> m9_201  [color=darkseagreen4, key=1, label=employees, style=dashed];
m9_199 -> m9_202  [color=darkseagreen4, key=1, label=employees, style=dashed];
m9_201 -> m9_205  [color=darkseagreen4, key=1, label=e1, style=dashed];
m9_201 -> m9_203  [color=darkseagreen4, key=1, label=e1, style=dashed];
m9_201 -> m9_202  [key=0, style=solid];
m9_201 -> m9_204  [key=0, style=solid];
m9_202 -> m9_206  [color=darkseagreen4, key=1, label=e2, style=dashed];
m9_202 -> m9_203  [key=0, style=solid];
m9_202 -> m9_204  [color=darkseagreen4, key=1, label="out object", style=dashed];
m9_198 -> m9_199  [key=0, style=solid];
m9_207 -> m9_197  [color=blue, key=0, style=bold];
m9_207 -> m9_208  [key=0, style=solid];
m9_207 -> m9_4  [key=2, style=dotted];
m9_12 -> m9_13  [key=0, style=solid];
m9_13 -> m9_12  [color=blue, key=0, style=bold];
m9_13 -> m9_14  [key=0, style=solid];
m9_13 -> m9_5  [color=darkorchid, key=3, label="Parameter variable System.IFormatProvider provider", style=bold];
m9_22 -> m9_23  [key=0, style=solid];
m9_22 -> m9_28  [key=2, style=dotted];
m9_23 -> m9_22  [color=blue, key=0, style=bold];
m9_23 -> m9_27  [key=2, style=dotted];
m9_23 -> m9_28  [key=2, style=dotted];
m9_23 -> m9_24  [key=0, style=solid];
m9_128 -> m9_129  [key=0, style=solid];
m9_128 -> m9_130  [color=darkseagreen4, key=1, label="System.Linq.Expressions.ExpressionType", style=dashed];
m9_128 -> m9_131  [color=darkseagreen4, key=1, label=object, style=dashed];
m9_128 -> m9_133  [color=darkseagreen4, key=1, label=object, style=dashed];
m9_128 -> m9_134  [color=darkseagreen4, key=1, label=object, style=dashed];
m9_128 -> m9_137  [color=darkseagreen4, key=1, label=object, style=dashed];
m9_128 -> m9_138  [color=darkseagreen4, key=1, label=object, style=dashed];
m9_128 -> m9_139  [color=darkseagreen4, key=1, label="System.Linq.Expressions.ExpressionType", style=dashed];
m9_128 -> m9_156  [color=darkseagreen4, key=1, label=object, style=dashed];
m9_128 -> m9_157  [color=darkseagreen4, key=1, label=object, style=dashed];
m9_128 -> m9_160  [color=darkseagreen4, key=1, label=object, style=dashed];
m9_128 -> m9_161  [color=darkseagreen4, key=1, label=object, style=dashed];
m9_128 -> m9_162  [color=darkseagreen4, key=1, label="System.Linq.Expressions.ExpressionType", style=dashed];
m9_128 -> m9_179  [color=darkseagreen4, key=1, label=object, style=dashed];
m9_128 -> m9_180  [color=darkseagreen4, key=1, label=object, style=dashed];
m9_128 -> m9_183  [color=darkseagreen4, key=1, label=object, style=dashed];
m9_128 -> m9_184  [color=darkseagreen4, key=1, label=object, style=dashed];
m9_128 -> m9_185  [color=darkseagreen4, key=1, label="System.Linq.Expressions.ExpressionType", style=dashed];
m9_129 -> m9_130  [key=0, style=solid];
m9_129 -> m9_133  [key=0, style=solid];
m9_130 -> m9_131  [key=0, style=solid];
m9_130 -> m9_133  [key=0, style=solid];
m9_130 -> m9_9  [key=2, style=dotted];
m9_130 -> m9_19  [key=2, style=dotted];
m9_130 -> m9_126  [key=2, style=dotted];
m9_130 -> m9_127  [key=2, style=dotted];
m9_130 -> m9_132  [color=darkseagreen4, key=1, label=c1, style=dashed];
m9_130 -> m9_134  [color=darkseagreen4, key=1, label=c1, style=dashed];
m9_131 -> m9_132  [key=0, style=solid];
m9_131 -> m9_205  [key=2, style=dotted];
m9_131 -> m9_11  [key=2, style=dotted];
m9_133 -> m9_134  [key=0, style=solid];
m9_133 -> m9_156  [key=0, style=solid];
m9_133 -> m9_11  [key=2, style=dotted];
m9_134 -> m9_135  [key=0, style=solid];
m9_134 -> m9_137  [key=0, style=solid];
m9_134 -> m9_11  [key=2, style=dotted];
m9_137 -> m9_138  [key=0, style=solid];
m9_137 -> m9_99  [key=2, style=dotted];
m9_137 -> m9_142  [color=darkseagreen4, key=1, label=d1, style=dashed];
m9_137 -> m9_146  [color=darkseagreen4, key=1, label=d1, style=dashed];
m9_137 -> m9_150  [color=darkseagreen4, key=1, label=d1, style=dashed];
m9_137 -> m9_154  [color=darkseagreen4, key=1, label=d1, style=dashed];
m9_137 -> m9_139  [color=darkseagreen4, key=1, label=mikeManager, style=dashed];
m9_137 -> m9_143  [key=2, style=dotted];
m9_138 -> m9_139  [key=0, style=solid];
m9_138 -> m9_99  [key=2, style=dotted];
m9_138 -> m9_142  [color=darkseagreen4, key=1, label=d2, style=dashed];
m9_138 -> m9_146  [color=darkseagreen4, key=1, label=d2, style=dashed];
m9_138 -> m9_150  [color=darkseagreen4, key=1, label=d2, style=dashed];
m9_138 -> m9_154  [color=darkseagreen4, key=1, label=d2, style=dashed];
m9_138 -> m9_143  [key=2, style=dotted];
m9_139 -> m9_140  [key=0, style=solid];
m9_139 -> m9_144  [key=0, style=solid];
m9_139 -> m9_148  [key=0, style=solid];
m9_139 -> m9_152  [key=0, style=solid];
m9_139 -> m9_126  [key=2, style=dotted];
m9_156 -> m9_157  [key=0, style=solid];
m9_156 -> m9_179  [key=0, style=solid];
m9_156 -> m9_159  [color=darkseagreen4, key=1, label=c3, style=dashed];
m9_156 -> m9_109  [key=2, style=dotted];
m9_156 -> m9_158  [color=darkseagreen4, key=1, label=c3, style=dashed];
m9_157 -> m9_158  [key=0, style=solid];
m9_157 -> m9_160  [key=0, style=solid];
m9_160 -> m9_161  [key=0, style=solid];
m9_160 -> m9_125  [key=2, style=dotted];
m9_160 -> m9_165  [color=darkseagreen4, key=1, label=d1, style=dashed];
m9_160 -> m9_169  [color=darkseagreen4, key=1, label=d1, style=dashed];
m9_160 -> m9_173  [color=darkseagreen4, key=1, label=d1, style=dashed];
m9_160 -> m9_177  [color=darkseagreen4, key=1, label=d1, style=dashed];
m9_160 -> m9_9  [key=2, style=dotted];
m9_160 -> m9_10  [key=2, style=dotted];
m9_161 -> m9_162  [key=0, style=solid];
m9_161 -> m9_125  [key=2, style=dotted];
m9_161 -> m9_165  [color=darkseagreen4, key=1, label=d2, style=dashed];
m9_161 -> m9_169  [color=darkseagreen4, key=1, label=d2, style=dashed];
m9_161 -> m9_173  [color=darkseagreen4, key=1, label=d2, style=dashed];
m9_161 -> m9_177  [color=darkseagreen4, key=1, label=d2, style=dashed];
m9_161 -> m9_11  [key=2, style=dotted];
m9_162 -> m9_163  [key=0, style=solid];
m9_162 -> m9_167  [key=0, style=solid];
m9_162 -> m9_171  [key=0, style=solid];
m9_162 -> m9_175  [key=0, style=solid];
m9_162 -> m9_153  [color=blue, key=0, style=bold];
m9_179 -> m9_180  [key=0, style=solid];
m9_179 -> m9_202  [key=0, style=solid];
m9_180 -> m9_181  [key=0, style=solid];
m9_180 -> m9_183  [key=0, style=solid];
m9_180 -> m9_182  [color=darkseagreen4, key=1, label=employees, style=dashed];
m9_180 -> m9_184  [color=darkseagreen4, key=1, label=employees, style=dashed];
m9_180 -> m9_185  [color=darkseagreen4, key=1, label=employees, style=dashed];
m9_180 -> m9_186  [color=darkseagreen4, key=1, label=employees, style=dashed];
m9_180 -> m9_187  [color=darkseagreen4, key=1, label=employees, style=dashed];
m9_180 -> m9_152  [key=2, style=dotted];
m9_183 -> m9_184  [key=0, style=solid];
m9_183 -> m9_102  [key=2, style=dotted];
m9_183 -> m9_188  [color=darkseagreen4, key=1, label=l1, style=dashed];
m9_183 -> m9_192  [color=darkseagreen4, key=1, label=l1, style=dashed];
m9_183 -> m9_196  [color=darkseagreen4, key=1, label=l1, style=dashed];
m9_183 -> m9_200  [color=darkseagreen4, key=1, label=l1, style=dashed];
m9_183 -> m9_11  [key=2, style=dotted];
m9_184 -> m9_185  [key=0, style=solid];
m9_184 -> m9_102  [key=2, style=dotted];
m9_184 -> m9_188  [color=darkseagreen4, key=1, label=l2, style=dashed];
m9_184 -> m9_192  [color=darkseagreen4, key=1, label=l2, style=dashed];
m9_184 -> m9_196  [color=darkseagreen4, key=1, label=l2, style=dashed];
m9_184 -> m9_200  [color=darkseagreen4, key=1, label=l2, style=dashed];
m9_184 -> m9_11  [key=2, style=dotted];
m9_185 -> m9_186  [key=0, style=solid];
m9_185 -> m9_190  [key=0, style=solid];
m9_185 -> m9_194  [key=0, style=solid];
m9_185 -> m9_198  [key=0, style=solid];
m9_185 -> m9_11  [key=2, style=dotted];
m9_132 -> m9_204  [key=0, style=solid];
m9_132 -> m9_11  [key=2, style=dotted];
m9_132 -> m9_133  [key=0, style=solid];
m9_135 -> m9_136  [key=0, style=solid];
m9_135 -> m9_128  [color=blue, key=0, style=bold];
m9_136 -> m9_204  [key=0, style=solid];
m9_136 -> m9_137  [key=0, style=solid];
m9_142 -> m9_143  [key=0, style=solid];
m9_142 -> m9_136  [color=blue, key=0, style=bold];
m9_146 -> m9_147  [key=0, style=solid];
m9_146 -> m9_148  [color=darkseagreen4, key=1, label=employees, style=dashed];
m9_146 -> m9_149  [color=darkseagreen4, key=1, label=employees, style=dashed];
m9_146 -> m9_150  [color=darkseagreen4, key=1, label=employees, style=dashed];
m9_146 -> m9_152  [key=2, style=dotted];
m9_150 -> m9_151  [key=0, style=solid];
m9_150 -> m9_11  [key=2, style=dotted];
m9_154 -> m9_155  [key=0, style=solid];
m9_154 -> m9_160  [color=darkseagreen4, key=1, label=c1, style=dashed];
m9_154 -> m9_109  [key=2, style=dotted];
m9_154 -> m9_157  [color=darkseagreen4, key=1, label=c1, style=dashed];
m9_154 -> m9_159  [color=darkseagreen4, key=1, label=c1, style=dashed];
m9_140 -> m9_141  [key=0, style=solid];
m9_140 -> m9_29  [key=2, style=dotted];
m9_144 -> m9_145  [key=0, style=solid];
m9_148 -> m9_149  [key=0, style=solid];
m9_148 -> m9_11  [key=2, style=dotted];
m9_152 -> m9_153  [key=0, style=solid];
m9_141 -> m9_142  [key=0, style=solid];
m9_141 -> m9_11  [key=2, style=dotted];
m9_143 -> m9_204  [key=0, style=solid];
m9_145 -> m9_146  [key=0, style=solid];
m9_147 -> m9_204  [key=0, style=solid];
m9_147 -> m9_11  [key=2, style=dotted];
m9_147 -> m9_148  [key=0, style=solid];
m9_149 -> m9_150  [key=0, style=solid];
m9_149 -> m9_11  [key=2, style=dotted];
m9_151 -> m9_204  [key=0, style=solid];
m9_151 -> m9_144  [color=blue, key=0, style=bold];
m9_153 -> m9_154  [key=0, style=solid];
m9_155 -> m9_204  [key=0, style=solid];
m9_155 -> m9_109  [key=2, style=dotted];
m9_155 -> m9_156  [key=0, style=solid];
m9_155 -> m9_157  [color=darkseagreen4, key=1, label=c2, style=dashed];
m9_155 -> m9_158  [color=darkseagreen4, key=1, label=c2, style=dashed];
m9_158 -> m9_159  [key=0, style=solid];
m9_159 -> m9_204  [key=0, style=solid];
m9_159 -> m9_160  [key=0, style=solid];
m9_165 -> m9_166  [key=0, style=solid];
m9_165 -> m9_9  [key=2, style=dotted];
m9_165 -> m9_19  [key=2, style=dotted];
m9_165 -> m9_167  [color=darkseagreen4, key=1, label=c1, style=dashed];
m9_165 -> m9_168  [color=darkseagreen4, key=1, label=c1, style=dashed];
m9_165 -> m9_169  [color=darkseagreen4, key=1, label=c1, style=dashed];
m9_169 -> m9_170  [key=0, style=solid];
m9_169 -> m9_11  [key=2, style=dotted];
m9_173 -> m9_174  [key=0, style=solid];
m9_173 -> m9_143  [key=2, style=dotted];
m9_177 -> m9_178  [key=0, style=solid];
m9_177 -> m9_171  [color=blue, key=0, style=bold];
m9_163 -> m9_164  [key=0, style=solid];
m9_167 -> m9_168  [key=0, style=solid];
m9_167 -> m9_11  [key=2, style=dotted];
m9_171 -> m9_172  [key=0, style=solid];
m9_175 -> m9_176  [key=0, style=solid];
m9_175 -> m9_29  [key=2, style=dotted];
m9_164 -> m9_165  [key=0, style=solid];
m9_166 -> m9_204  [key=0, style=solid];
m9_166 -> m9_11  [key=2, style=dotted];
m9_166 -> m9_167  [key=0, style=solid];
m9_168 -> m9_169  [key=0, style=solid];
m9_168 -> m9_11  [key=2, style=dotted];
m9_170 -> m9_204  [key=0, style=solid];
m9_170 -> m9_163  [color=blue, key=0, style=bold];
m9_172 -> m9_173  [key=0, style=solid];
m9_172 -> m9_174  [color=darkseagreen4, key=1, label=e1, style=dashed];
m9_172 -> m9_143  [key=2, style=dotted];
m9_174 -> m9_204  [key=0, style=solid];
m9_174 -> m9_126  [key=2, style=dotted];
m9_174 -> m9_175  [key=0, style=solid];
m9_176 -> m9_177  [key=0, style=solid];
m9_176 -> m9_11  [key=2, style=dotted];
m9_178 -> m9_204  [key=0, style=solid];
m9_178 -> m9_179  [key=0, style=solid];
m9_181 -> m9_182  [key=0, style=solid];
m9_181 -> m9_11  [key=2, style=dotted];
m9_182 -> m9_204  [key=0, style=solid];
m9_182 -> m9_11  [key=2, style=dotted];
m9_182 -> m9_183  [key=0, style=solid];
m9_188 -> m9_189  [key=0, style=solid];
m9_188 -> m9_178  [color=blue, key=0, style=bold];
m9_192 -> m9_193  [key=0, style=solid];
m9_192 -> m9_196  [key=2, style=dotted];
m9_196 -> m9_197  [key=0, style=solid];
m9_186 -> m9_187  [key=0, style=solid];
m9_186 -> m9_11  [key=2, style=dotted];
m9_190 -> m9_191  [key=0, style=solid];
m9_190 -> m9_192  [color=darkseagreen4, key=1, label=e1, style=dashed];
m9_190 -> m9_143  [key=2, style=dotted];
m9_194 -> m9_195  [key=0, style=solid];
m9_194 -> m9_11  [key=2, style=dotted];
m9_187 -> m9_188  [key=0, style=solid];
m9_187 -> m9_11  [key=2, style=dotted];
m9_189 -> m9_204  [key=0, style=solid];
m9_189 -> m9_190  [key=0, style=solid];
m9_191 -> m9_192  [key=0, style=solid];
m9_191 -> m9_143  [key=2, style=dotted];
m9_193 -> m9_204  [key=0, style=solid];
m9_193 -> m9_194  [key=0, style=solid];
m9_193 -> m9_29  [key=2, style=dotted];
m9_195 -> m9_196  [key=0, style=solid];
m9_195 -> m9_189  [color=blue, key=0, style=bold];
m9_0 -> m9_1  [key=0, style=solid];
m9_0 -> m9_2  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenType", style=dashed];
m9_1 -> m9_4  [color=darkseagreen4, key=1, label=circularDictionary, style=dashed];
m9_1 -> m9_2  [key=0, style=solid];
m9_1 -> m9_7  [key=2, style=dotted];
m9_1 -> m9_3  [color=darkseagreen4, key=1, label=circularDictionary, style=dashed];
m9_3 -> m9_4  [key=0, style=solid];
m9_3 -> m9_3  [color=darkorchid, key=3, label="Field variable string Empty", style=bold];
m9_3 -> m9_8  [key=2, style=dotted];
m9_3 -> m9_0  [color=blue, key=0, style=bold];
m9_2 -> m9_3  [key=0, style=solid];
m9_2 -> m9_2  [color=darkorchid, key=3, label="Field variable string CarriageReturnLineFeed", style=bold];
m9_2 -> m9_7  [key=2, style=dotted];
m9_2 -> m9_8  [key=2, style=dotted];
m9_6 -> m9_0  [color=blue, key=0, style=bold];
m9_6 -> m9_7  [key=0, style=solid];
m9_107 -> m9_98  [color=blue, key=0, style=bold];
m9_215 -> m9_216  [key=0, style=solid];
m9_215 -> m9_218  [color=darkseagreen4, key=1, label=object, style=dashed];
m9_215 -> m9_220  [color=darkseagreen4, key=1, label=object, style=dashed];
m9_215 -> m9_221  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenType?", style=dashed];
m9_215 -> m9_222  [color=darkseagreen4, key=1, label=object, style=dashed];
m9_215 -> m9_224  [color=darkseagreen4, key=1, label=object, style=dashed];
m9_215 -> m9_226  [color=darkseagreen4, key=1, label=object, style=dashed];
m9_215 -> m9_228  [color=darkseagreen4, key=1, label=object, style=dashed];
m9_215 -> m9_230  [color=darkseagreen4, key=1, label=object, style=dashed];
m9_215 -> m9_232  [color=darkseagreen4, key=1, label=object, style=dashed];
m9_215 -> m9_234  [color=darkseagreen4, key=1, label=object, style=dashed];
m9_215 -> m9_236  [color=darkseagreen4, key=1, label=object, style=dashed];
m9_215 -> m9_238  [color=darkseagreen4, key=1, label=object, style=dashed];
m9_215 -> m9_240  [color=darkseagreen4, key=1, label=object, style=dashed];
m9_215 -> m9_242  [color=darkseagreen4, key=1, label=object, style=dashed];
m9_216 -> m9_217  [key=0, style=solid];
m9_216 -> m9_218  [key=0, style=solid];
m9_218 -> m9_219  [key=0, style=solid];
m9_218 -> m9_220  [key=0, style=solid];
m9_218 -> m9_221  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_218 -> m9_215  [key=2, style=dotted];
m9_218 -> m9_216  [key=2, style=dotted];
m9_220 -> m9_221  [key=0, style=solid];
m9_220 -> m9_222  [key=0, style=solid];
m9_220 -> m9_28  [key=2, style=dotted];
m9_221 -> m9_243  [key=0, style=solid];
m9_221 -> m9_244  [key=2, style=dotted];
m9_221 -> m9_222  [key=0, style=solid];
m9_221 -> m9_28  [key=2, style=dotted];
m9_222 -> m9_223  [key=0, style=solid];
m9_222 -> m9_224  [key=0, style=solid];
m9_222 -> m9_9  [key=2, style=dotted];
m9_222 -> m9_10  [key=2, style=dotted];
m9_224 -> m9_225  [key=0, style=solid];
m9_224 -> m9_226  [key=0, style=solid];
m9_224 -> m9_231  [key=2, style=dotted];
m9_226 -> m9_227  [key=0, style=solid];
m9_226 -> m9_228  [key=0, style=solid];
m9_226 -> m9_229  [color=darkseagreen4, key=1, label=p2, style=dashed];
m9_228 -> m9_229  [key=0, style=solid];
m9_228 -> m9_230  [key=0, style=solid];
m9_228 -> m9_232  [key=2, style=dotted];
m9_230 -> m9_231  [key=0, style=solid];
m9_230 -> m9_232  [key=0, style=solid];
m9_230 -> m9_217  [color=blue, key=0, style=bold];
m9_232 -> m9_233  [key=0, style=solid];
m9_232 -> m9_234  [key=0, style=solid];
m9_234 -> m9_235  [key=0, style=solid];
m9_234 -> m9_236  [key=0, style=solid];
m9_236 -> m9_237  [key=0, style=solid];
m9_236 -> m9_238  [key=0, style=solid];
m9_238 -> m9_239  [key=0, style=solid];
m9_238 -> m9_240  [key=0, style=solid];
m9_240 -> m9_241  [key=0, style=solid];
m9_240 -> m9_242  [key=0, style=solid];
m9_242 -> m9_243  [key=0, style=solid];
m9_242 -> m9_110  [key=2, style=dotted];
m9_242 -> m9_245  [key=2, style=dotted];
m9_242 -> m9_117  [key=2, style=dotted];
m9_217 -> m9_243  [key=0, style=solid];
m9_217 -> m9_218  [key=0, style=solid];
m9_219 -> m9_243  [key=0, style=solid];
m9_219 -> m9_222  [color=darkseagreen4, key=1, label=people, style=dashed];
m9_219 -> m9_126  [key=2, style=dotted];
m9_219 -> m9_220  [key=0, style=solid];
m9_219 -> m9_221  [color=darkseagreen4, key=1, label=people, style=dashed];
m9_223 -> m9_243  [key=0, style=solid];
m9_223 -> m9_9  [key=2, style=dotted];
m9_223 -> m9_19  [key=2, style=dotted];
m9_223 -> m9_224  [key=0, style=solid];
m9_223 -> m9_225  [color=darkseagreen4, key=1, label=deserializedPeople, style=dashed];
m9_223 -> m9_226  [color=darkseagreen4, key=1, label=deserializedPeople, style=dashed];
m9_225 -> m9_243  [key=0, style=solid];
m9_225 -> m9_226  [key=0, style=solid];
m9_225 -> m9_227  [color=darkseagreen4, key=1, label=p1, style=dashed];
m9_225 -> m9_229  [color=darkseagreen4, key=1, label=p1, style=dashed];
m9_227 -> m9_243  [key=0, style=solid];
m9_227 -> m9_228  [key=0, style=solid];
m9_227 -> m9_232  [key=2, style=dotted];
m9_229 -> m9_243  [key=0, style=solid];
m9_229 -> m9_58  [key=2, style=dotted];
m9_229 -> m9_230  [key=0, style=solid];
m9_231 -> m9_243  [key=0, style=solid];
m9_233 -> m9_243  [key=0, style=solid];
m9_233 -> m9_44  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests", style=dashed];
m9_235 -> m9_243  [key=0, style=solid];
m9_237 -> m9_243  [key=0, style=solid];
m9_239 -> m9_243  [key=0, style=solid];
m9_241 -> m9_243  [key=0, style=solid];
m9_243 -> m9_215  [color=blue, key=0, style=bold];
m9_367 -> m9_368  [key=0, style=solid];
m9_367 -> m9_369  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m9_367 -> m9_371  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m9_367 -> m9_374  [color=darkseagreen4, key=1, label="System.Dynamic.ConvertBinder", style=dashed];
m9_367 -> m9_375  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m9_368 -> m9_369  [key=0, style=solid];
m9_368 -> m9_371  [key=0, style=solid];
m9_369 -> m9_370  [key=0, style=solid];
m9_371 -> m9_372  [key=0, style=solid];
m9_374 -> m9_377  [key=0, style=solid];
m9_374 -> m9_378  [key=2, style=dotted];
m9_375 -> m9_376  [key=0, style=solid];
m9_375 -> m9_379  [key=2, style=dotted];
m9_375 -> m9_377  [color=darkseagreen4, key=1, label="out object", style=dashed];
m9_370 -> m9_377  [key=0, style=solid];
m9_372 -> m9_373  [key=0, style=solid];
m9_372 -> m9_375  [key=0, style=solid];
m9_373 -> m9_374  [key=0, style=solid];
m9_376 -> m9_377  [key=0, style=solid];
m9_377 -> m9_367  [color=blue, key=0, style=bold];
m9_16 -> m9_17  [key=0, style=solid];
m9_16 -> m9_11  [key=2, style=dotted];
m9_17 -> m9_16  [color=blue, key=0, style=bold];
m9_17 -> m9_11  [key=2, style=dotted];
m9_17 -> m9_18  [key=0, style=solid];
m9_28 -> m9_29  [key=0, style=solid];
m9_28 -> m9_30  [key=0, style=solid];
m9_24 -> m9_25  [key=0, style=solid];
m9_24 -> m9_27  [key=2, style=dotted];
m9_24 -> m9_28  [key=2, style=dotted];
m9_25 -> m9_24  [color=blue, key=0, style=bold];
m9_25 -> m9_26  [key=0, style=solid];
m9_25 -> m9_29  [key=2, style=dotted];
m9_106 -> m9_107  [key=0, style=solid];
m9_106 -> m9_112  [key=2, style=dotted];
m9_208 -> m9_206  [color=blue, key=0, style=bold];
m9_208 -> m9_209  [key=0, style=solid];
m9_10 -> m9_11  [key=0, style=solid];
m9_11 -> m9_10  [color=blue, key=0, style=bold];
m9_105 -> m9_106  [key=0, style=solid];
m9_101 -> m9_119  [key=0, style=solid];
m9_101 -> m9_120  [color=darkseagreen4, key=1, label=object, style=dashed];
m9_101 -> m9_102  [key=0, style=solid];
m9_101 -> m9_105  [key=0, style=solid];
m9_119 -> m9_120  [key=0, style=solid];
m9_119 -> m9_125  [key=2, style=dotted];
m9_119 -> m9_121  [color=darkseagreen4, key=1, label=c3, style=dashed];
m9_119 -> m9_123  [color=darkseagreen4, key=1, label=d1, style=dashed];
m9_119 -> m9_122  [color=darkseagreen4, key=1, label=c3, style=dashed];
m9_119 -> m9_109  [key=2, style=dotted];
m9_120 -> m9_121  [key=0, style=solid];
m9_120 -> m9_125  [key=2, style=dotted];
m9_120 -> m9_123  [color=darkseagreen4, key=1, label=d2, style=dashed];
m9_121 -> m9_122  [key=0, style=solid];
m9_121 -> m9_123  [key=0, style=solid];
m9_121 -> m9_126  [key=2, style=dotted];
m9_123 -> m9_124  [key=0, style=solid];
m9_123 -> m9_127  [key=2, style=dotted];
m9_123 -> m9_9  [key=2, style=dotted];
m9_123 -> m9_126  [key=2, style=dotted];
m9_123 -> m9_10  [key=2, style=dotted];
m9_122 -> m9_124  [key=0, style=solid];
m9_122 -> m9_123  [key=0, style=solid];
m9_124 -> m9_101  [color=blue, key=0, style=bold];
m9_124 -> m9_11  [key=2, style=dotted];
m9_124 -> m9_125  [key=0, style=solid];
m9_116 -> m9_117  [key=0, style=solid];
m9_117 -> m9_123  [color=darkseagreen4, key=1, label=c1, style=dashed];
m9_117 -> m9_118  [key=0, style=solid];
m9_117 -> m9_109  [key=2, style=dotted];
m9_117 -> m9_120  [color=darkseagreen4, key=1, label=c1, style=dashed];
m9_117 -> m9_122  [color=darkseagreen4, key=1, label=c1, style=dashed];
m9_118 -> m9_119  [key=0, style=solid];
m9_118 -> m9_109  [key=2, style=dotted];
m9_118 -> m9_120  [color=darkseagreen4, key=1, label=c2, style=dashed];
m9_118 -> m9_121  [color=darkseagreen4, key=1, label=c2, style=dashed];
m9_125 -> m9_116  [color=blue, key=0, style=bold];
m9_351 -> m9_352  [key=0, style=solid];
m9_352 -> m9_353  [key=0, style=solid];
m9_352 -> m9_350  [key=2, style=dotted];
m9_353 -> m9_351  [color=blue, key=0, style=bold];
m9_60 -> m9_61  [key=0, style=solid];
m9_60 -> m9_64  [key=0, style=solid];
m9_62 -> m9_9  [key=2, style=dotted];
m9_62 -> m9_19  [key=2, style=dotted];
m9_62 -> m9_63  [key=0, style=solid];
m9_62 -> m9_108  [key=2, style=dotted];
m9_61 -> m9_62  [key=0, style=solid];
m9_61 -> m9_108  [key=2, style=dotted];
m9_61 -> m9_63  [color=darkseagreen4, key=1, label=date1, style=dashed];
m9_63 -> m9_60  [color=blue, key=0, style=bold];
m9_63 -> m9_98  [key=0, style=solid];
m9_63 -> m9_109  [key=2, style=dotted];
m9_7 -> m9_6  [color=blue, key=0, style=bold];
m9_58 -> m9_98  [key=0, style=solid];
m9_58 -> m9_107  [key=2, style=dotted];
m9_415 -> m9_416  [key=0, style=solid];
m9_415 -> m9_418  [color=darkseagreen4, key=1, label=object, style=dashed];
m9_416 -> m9_417  [key=0, style=solid];
m9_416 -> m9_418  [key=0, style=solid];
m9_418 -> m9_419  [key=0, style=solid];
m9_417 -> m9_420  [key=0, style=solid];
m9_419 -> m9_420  [key=0, style=solid];
m9_419 -> m9_33  [key=2, style=dotted];
m9_420 -> m9_415  [color=blue, key=0, style=bold];
m9_64 -> m9_65  [key=0, style=solid];
m9_64 -> m9_66  [key=0, style=solid];
m9_65 -> m9_7  [key=2, style=dotted];
m9_65 -> m9_66  [key=0, style=solid];
m9_65 -> m9_67  [color=darkseagreen4, key=1, label=circularDictionary, style=dashed];
m9_65 -> m9_68  [color=darkseagreen4, key=1, label=circularDictionary, style=dashed];
m9_65 -> m9_98  [key=0, style=solid];
m9_65 -> m9_110  [key=2, style=dotted];
m9_66 -> m9_7  [key=2, style=dotted];
m9_66 -> m9_8  [key=2, style=dotted];
m9_66 -> m9_67  [key=0, style=solid];
m9_66 -> m9_68  [color=darkseagreen4, key=1, label=date1, style=dashed];
m9_67 -> m9_8  [key=2, style=dotted];
m9_67 -> m9_68  [key=0, style=solid];
m9_68 -> m9_29  [key=2, style=dotted];
m9_68 -> m9_69  [key=0, style=solid];
m9_68 -> m9_98  [key=0, style=solid];
m9_68 -> m9_111  [key=2, style=dotted];
m9_68 -> m9_68  [color=darkseagreen4, key=1, label=date1, style=dashed];
m9_69 -> m9_64  [color=blue, key=0, style=bold];
m9_69 -> m9_70  [key=0, style=solid];
m9_98 -> m9_103  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m9_98 -> m9_99  [key=0, style=solid];
m9_98 -> m9_106  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m9_98 -> m9_33  [color=blue, key=0, style=bold];
m9_103 -> m9_104  [key=0, style=solid];
m9_103 -> m9_110  [key=2, style=dotted];
m9_103 -> m9_111  [key=2, style=dotted];
m9_104 -> m9_107  [key=0, style=solid];
m9_100 -> m9_101  [key=0, style=solid];
m9_99 -> m9_103  [color=darkseagreen4, key=1, label=o, style=dashed];
m9_99 -> m9_100  [key=0, style=solid];
m9_99 -> m9_105  [color=darkseagreen4, key=1, label=o, style=dashed];
m9_99 -> m9_108  [key=2, style=dotted];
m9_26 -> m9_27  [key=0, style=solid];
m9_26 -> m9_20  [color=blue, key=0, style=bold];
m9_27 -> m9_28  [key=0, style=solid];
m9_27 -> m9_30  [color=darkseagreen4, key=1, label=other, style=dashed];
m9_27 -> m9_27  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m9_30 -> m9_31  [key=0, style=solid];
m9_30 -> m9_32  [key=2, style=dotted];
m9_29 -> m9_31  [key=0, style=solid];
m9_31 -> m9_26  [color=blue, key=0, style=bold];
m9_31 -> m9_35  [color=darkseagreen4, key=1, label=circularList, style=dashed];
m9_31 -> m9_34  [color=darkseagreen4, key=1, label=circularList, style=dashed];
m9_31 -> m9_32  [key=0, style=solid];
m9_31 -> m9_27  [key=2, style=dotted];
m9_31 -> m9_33  [color=darkseagreen4, key=1, label=circularList, style=dashed];
m9_209 -> m9_210  [key=0, style=solid];
m9_209 -> m9_211  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_209 -> m9_212  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_209 -> m9_215  [key=2, style=dotted];
m9_209 -> m9_216  [key=2, style=dotted];
m9_210 -> m9_211  [key=0, style=solid];
m9_210 -> m9_0  [key=2, style=dotted];
m9_210 -> m9_126  [key=2, style=dotted];
m9_210 -> m9_212  [color=darkseagreen4, key=1, label=people, style=dashed];
m9_210 -> m9_213  [color=darkseagreen4, key=1, label=people, style=dashed];
m9_211 -> m9_209  [color=blue, key=0, style=bold];
m9_211 -> m9_28  [key=2, style=dotted];
m9_211 -> m9_212  [key=0, style=solid];
m9_212 -> m9_28  [key=2, style=dotted];
m9_212 -> m9_213  [key=0, style=solid];
m9_213 -> m9_29  [key=2, style=dotted];
m9_213 -> m9_214  [key=0, style=solid];
m9_213 -> m9_0  [key=2, style=dotted];
m9_214 -> m9_208  [color=blue, key=0, style=bold];
m9_214 -> m9_212  [color=blue, key=0, style=bold];
m9_47 -> m9_48  [key=0, style=solid];
m9_14 -> m9_15  [key=0, style=solid];
m9_14 -> m9_9  [key=2, style=dotted];
m9_14 -> m9_19  [key=2, style=dotted];
m9_14 -> m9_16  [color=darkseagreen4, key=1, label=circularDictionary, style=dashed];
m9_14 -> m9_17  [color=darkseagreen4, key=1, label=circularDictionary, style=dashed];
m9_14 -> m9_20  [color=darkorchid, key=3, label="method methodReturn bool IsWhiteSpace", style=bold];
m9_15 -> m9_14  [color=blue, key=0, style=bold];
m9_15 -> m9_11  [key=2, style=dotted];
m9_15 -> m9_16  [key=0, style=solid];
m9_18 -> m9_12  [color=blue, key=0, style=bold];
m9_18 -> m9_19  [key=0, style=solid];
m9_315 -> m9_316  [key=0, style=solid];
m9_316 -> m9_317  [key=0, style=solid];
m9_316 -> m9_319  [key=2, style=dotted];
m9_317 -> m9_318  [key=0, style=solid];
m9_317 -> m9_320  [key=2, style=dotted];
m9_318 -> m9_315  [color=blue, key=0, style=bold];
m9_342 -> m9_343  [key=0, style=solid];
m9_343 -> m9_344  [key=0, style=solid];
m9_343 -> m9_345  [key=0, style=solid];
m9_344 -> m9_346  [key=0, style=solid];
m9_345 -> m9_346  [key=0, style=solid];
m9_345 -> m9_205  [key=2, style=dotted];
m9_346 -> m9_342  [color=blue, key=0, style=bold];
m9_19 -> m9_18  [color=blue, key=0, style=bold];
m9_70 -> m9_71  [key=0, style=solid];
m9_70 -> m9_72  [key=0, style=solid];
m9_74 -> m9_9  [key=2, style=dotted];
m9_74 -> m9_75  [key=0, style=solid];
m9_74 -> m9_10  [key=2, style=dotted];
m9_74 -> m9_76  [key=0, style=solid];
m9_75 -> m9_11  [key=2, style=dotted];
m9_75 -> m9_76  [key=0, style=solid];
m9_75 -> m9_98  [key=0, style=solid];
m9_71 -> m9_74  [color=darkseagreen4, key=1, label=circularDictionary, style=dashed];
m9_71 -> m9_72  [key=0, style=solid];
m9_71 -> m9_7  [key=2, style=dotted];
m9_71 -> m9_73  [color=darkseagreen4, key=1, label=circularDictionary, style=dashed];
m9_71 -> m9_98  [key=0, style=solid];
m9_71 -> m9_110  [key=2, style=dotted];
m9_73 -> m9_74  [key=0, style=solid];
m9_73 -> m9_8  [key=2, style=dotted];
m9_73 -> m9_76  [color=darkseagreen4, key=1, label=bytes2, style=dashed];
m9_73 -> m9_78  [color=darkseagreen4, key=1, label=bytes2, style=dashed];
m9_72 -> m9_73  [key=0, style=solid];
m9_72 -> m9_7  [key=2, style=dotted];
m9_72 -> m9_8  [key=2, style=dotted];
m9_72 -> m9_74  [color=darkseagreen4, key=1, label=bytes1, style=dashed];
m9_72 -> m9_78  [color=darkseagreen4, key=1, label=bytes1, style=dashed];
m9_76 -> m9_70  [color=blue, key=0, style=bold];
m9_76 -> m9_77  [key=0, style=solid];
m9_76 -> m9_78  [key=0, style=solid];
m9_8 -> m9_9  [key=0, style=solid];
m9_350 -> m9_354  [key=0, style=solid];
m9_350 -> m9_358  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_354 -> m9_355  [key=0, style=solid];
m9_354 -> m9_356  [key=0, style=solid];
m9_358 -> m9_360  [key=0, style=solid];
m9_358 -> m9_361  [key=2, style=dotted];
m9_355 -> m9_360  [key=0, style=solid];
m9_356 -> m9_357  [key=0, style=solid];
m9_356 -> m9_358  [color=darkseagreen4, key=1, label=formattable, style=dashed];
m9_357 -> m9_358  [key=0, style=solid];
m9_357 -> m9_359  [key=0, style=solid];
m9_359 -> m9_360  [key=0, style=solid];
m9_359 -> m9_205  [key=2, style=dotted];
m9_360 -> m9_350  [color=blue, key=0, style=bold];
m9_38 -> m9_39  [key=0, style=solid];
m9_38 -> m9_40  [key=0, style=solid];
m9_43 -> m9_9  [key=2, style=dotted];
m9_43 -> m9_44  [key=0, style=solid];
m9_43 -> m9_10  [key=2, style=dotted];
m9_43 -> m9_45  [color=darkseagreen4, key=1, label=json, style=dashed];
m9_43 -> m9_98  [key=0, style=solid];
m9_43 -> m9_99  [key=2, style=dotted];
m9_43 -> m9_100  [key=2, style=dotted];
m9_45 -> m9_11  [key=2, style=dotted];
m9_45 -> m9_45  [color=darkorchid, key=3, label="method methodReturn string ToCamelCase", style=bold];
m9_45 -> m9_46  [key=0, style=solid];
m9_45 -> m9_27  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m9_45 -> m9_98  [key=0, style=solid];
m9_45 -> m9_101  [key=2, style=dotted];
m9_39 -> m9_43  [color=darkseagreen4, key=1, label=circularList, style=dashed];
m9_39 -> m9_40  [key=0, style=solid];
m9_39 -> m9_27  [key=2, style=dotted];
m9_39 -> m9_41  [color=darkseagreen4, key=1, label=circularList, style=dashed];
m9_39 -> m9_42  [color=darkseagreen4, key=1, label=circularList, style=dashed];
m9_39 -> m9_98  [key=0, style=solid];
m9_42 -> m9_43  [key=0, style=solid];
m9_42 -> m9_27  [key=2, style=dotted];
m9_42 -> m9_28  [key=2, style=dotted];
m9_42 -> m9_44  [key=0, style=solid];
m9_44 -> m9_45  [key=0, style=solid];
m9_44 -> m9_47  [key=2, style=dotted];
m9_44 -> m9_46  [key=0, style=solid];
m9_40 -> m9_28  [key=2, style=dotted];
m9_40 -> m9_41  [key=0, style=solid];
m9_40 -> m9_47  [key=0, style=solid];
m9_40 -> m9_49  [key=0, style=solid];
m9_40 -> m9_55  [key=0, style=solid];
m9_40 -> m9_59  [key=0, style=solid];
m9_40 -> m9_69  [key=0, style=solid];
m9_40 -> m9_79  [key=0, style=solid];
m9_40 -> m9_85  [key=0, style=solid];
m9_40 -> m9_91  [key=0, style=solid];
m9_40 -> m9_97  [key=0, style=solid];
m9_41 -> m9_42  [key=0, style=solid];
m9_41 -> m9_27  [key=2, style=dotted];
m9_41 -> m9_28  [key=2, style=dotted];
m9_46 -> m9_38  [color=blue, key=0, style=bold];
m9_46 -> m9_98  [key=0, style=solid];
m9_46 -> m9_102  [key=2, style=dotted];
m9_46 -> m9_103  [key=2, style=dotted];
m9_59 -> m9_60  [key=0, style=solid];
m9_421 -> m9_422  [key=0, style=solid];
m9_421 -> m9_424  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m9_422 -> m9_423  [key=0, style=solid];
m9_422 -> m9_424  [key=0, style=solid];
m9_424 -> m9_425  [key=0, style=solid];
m9_424 -> m9_33  [key=2, style=dotted];
m9_423 -> m9_425  [key=0, style=solid];
m9_425 -> m9_421  [color=blue, key=0, style=bold];
m9_20 -> m9_21  [key=0, style=solid];
m9_21 -> m9_20  [color=blue, key=0, style=bold];
m9_21 -> m9_27  [key=2, style=dotted];
m9_21 -> m9_22  [key=0, style=solid];
m9_21 -> m9_23  [color=darkseagreen4, key=1, label=circularList, style=dashed];
m9_21 -> m9_24  [color=darkseagreen4, key=1, label=circularList, style=dashed];
m9_21 -> m9_25  [color=darkseagreen4, key=1, label=circularList, style=dashed];
m9_35 -> m9_9  [key=2, style=dotted];
m9_35 -> m9_36  [key=0, style=solid];
m9_35 -> m9_10  [key=2, style=dotted];
m9_35 -> m9_98  [key=0, style=solid];
m9_34 -> m9_35  [key=0, style=solid];
m9_34 -> m9_27  [key=2, style=dotted];
m9_34 -> m9_28  [key=2, style=dotted];
m9_34 -> m9_36  [key=0, style=solid];
m9_36 -> m9_11  [key=2, style=dotted];
m9_36 -> m9_37  [key=0, style=solid];
m9_36 -> m9_38  [key=0, style=solid];
m9_33 -> m9_34  [key=0, style=solid];
m9_33 -> m9_27  [key=2, style=dotted];
m9_33 -> m9_28  [key=2, style=dotted];
m9_33 -> m9_36  [color=darkseagreen4, key=1, label=object, style=dashed];
m9_33 -> m9_38  [color=darkseagreen4, key=1, label=object, style=dashed];
m9_33 -> m9_40  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenType", style=dashed];
m9_33 -> m9_42  [color=darkseagreen4, key=1, label=object, style=dashed];
m9_33 -> m9_43  [color=darkseagreen4, key=1, label=object, style=dashed];
m9_33 -> m9_44  [color=darkseagreen4, key=1, label=object, style=dashed];
m9_33 -> m9_45  [color=darkseagreen4, key=1, label=object, style=dashed];
m9_33 -> m9_46  [color=darkseagreen4, key=1, label=object, style=dashed];
m9_33 -> m9_48  [color=darkseagreen4, key=1, label=object, style=dashed];
m9_33 -> m9_52  [color=darkseagreen4, key=1, label=object, style=dashed];
m9_33 -> m9_53  [color=darkseagreen4, key=1, label=object, style=dashed];
m9_33 -> m9_56  [color=darkseagreen4, key=1, label=object, style=dashed];
m9_33 -> m9_57  [color=darkseagreen4, key=1, label=object, style=dashed];
m9_33 -> m9_60  [color=darkseagreen4, key=1, label=object, style=dashed];
m9_33 -> m9_61  [color=darkseagreen4, key=1, label=object, style=dashed];
m9_33 -> m9_62  [color=darkseagreen4, key=1, label=object, style=dashed];
m9_33 -> m9_64  [color=darkseagreen4, key=1, label=object, style=dashed];
m9_33 -> m9_66  [color=darkseagreen4, key=1, label=object, style=dashed];
m9_33 -> m9_67  [color=darkseagreen4, key=1, label=object, style=dashed];
m9_33 -> m9_70  [color=darkseagreen4, key=1, label=object, style=dashed];
m9_33 -> m9_72  [color=darkseagreen4, key=1, label=object, style=dashed];
m9_33 -> m9_73  [color=darkseagreen4, key=1, label=object, style=dashed];
m9_33 -> m9_80  [color=darkseagreen4, key=1, label=object, style=dashed];
m9_33 -> m9_82  [color=darkseagreen4, key=1, label=object, style=dashed];
m9_33 -> m9_83  [color=darkseagreen4, key=1, label=object, style=dashed];
m9_33 -> m9_86  [color=darkseagreen4, key=1, label=object, style=dashed];
m9_33 -> m9_88  [color=darkseagreen4, key=1, label=object, style=dashed];
m9_33 -> m9_89  [color=darkseagreen4, key=1, label=object, style=dashed];
m9_33 -> m9_92  [color=darkseagreen4, key=1, label=object, style=dashed];
m9_33 -> m9_94  [color=darkseagreen4, key=1, label=object, style=dashed];
m9_33 -> m9_95  [color=darkseagreen4, key=1, label=object, style=dashed];
m9_33 -> m9_97  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenType", style=dashed];
m9_32 -> m9_33  [key=0, style=solid];
m9_32 -> m9_28  [key=2, style=dotted];
m9_32 -> m9_321  [key=0, style=solid];
m9_37 -> m9_30  [color=blue, key=0, style=bold];
m9_37 -> m9_98  [key=0, style=solid];
m9_323 -> m9_324  [key=0, style=solid];
m9_323 -> m9_326  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m9_324 -> m9_325  [key=0, style=solid];
m9_324 -> m9_326  [key=0, style=solid];
m9_326 -> m9_327  [key=0, style=solid];
m9_326 -> m9_32  [key=2, style=dotted];
m9_325 -> m9_327  [key=0, style=solid];
m9_327 -> m9_323  [color=blue, key=0, style=bold];
m9_328 -> m9_329  [key=0, style=solid];
m9_328 -> m9_331  [color=darkseagreen4, key=1, label=object, style=dashed];
m9_328 -> m9_334  [color=darkseagreen4, key=1, label=object, style=dashed];
m9_329 -> m9_330  [key=0, style=solid];
m9_329 -> m9_331  [key=0, style=solid];
m9_331 -> m9_332  [key=0, style=solid];
m9_331 -> m9_333  [color=darkseagreen4, key=1, label=otherValue, style=dashed];
m9_334 -> m9_335  [key=0, style=solid];
m9_334 -> m9_336  [key=2, style=dotted];
m9_330 -> m9_335  [key=0, style=solid];
m9_332 -> m9_333  [key=0, style=solid];
m9_332 -> m9_334  [key=0, style=solid];
m9_333 -> m9_335  [key=0, style=solid];
m9_333 -> m9_323  [key=2, style=dotted];
m9_335 -> m9_328  [color=blue, key=0, style=bold];
m9_48 -> m9_49  [color=green, key=0, style=solid];
m9_48 -> m9_98  [key=0, style=solid];
m9_48 -> m9_101  [key=2, style=dotted];
m9_49 -> m9_50  [color=green, key=0, style=solid];
m9_50 -> m9_51  [key=0, style=solid];
m9_50 -> m9_9  [key=2, style=dotted];
m9_50 -> m9_19  [key=2, style=dotted];
m9_50 -> m9_52  [color=darkseagreen4, key=1, label=circularList, style=dashed];
m9_50 -> m9_53  [color=darkseagreen4, key=1, label=circularList, style=dashed];
m9_50 -> m9_54  [color=darkseagreen4, key=1, label=circularList, style=dashed];
m9_50 -> m9_55  [color=darkseagreen4, key=1, label=circularList, style=dashed];
m9_50 -> m9_56  [color=darkseagreen4, key=1, label=circularList, style=dashed];
m9_51 -> m9_52  [key=0, style=solid];
m9_51 -> m9_11  [key=2, style=dotted];
m9_52 -> m9_53  [key=0, style=solid];
m9_52 -> m9_11  [key=2, style=dotted];
m9_52 -> m9_104  [key=2, style=dotted];
m9_52 -> m9_54  [color=darkseagreen4, key=1, label=s1, style=dashed];
m9_53 -> m9_54  [key=0, style=solid];
m9_53 -> m9_11  [key=2, style=dotted];
m9_53 -> m9_104  [key=2, style=dotted];
m9_54 -> m9_55  [key=0, style=solid];
m9_54 -> m9_11  [key=2, style=dotted];
m9_54 -> m9_98  [key=0, style=solid];
m9_54 -> m9_105  [key=2, style=dotted];
m9_55 -> m9_56  [key=0, style=solid];
m9_55 -> m9_11  [key=2, style=dotted];
m9_56 -> m9_57  [key=0, style=solid];
m9_56 -> m9_58  [key=2, style=dotted];
m9_56 -> m9_59  [key=2, style=dotted];
m9_56 -> m9_106  [key=2, style=dotted];
m9_57 -> m9_48  [color=blue, key=0, style=bold];
m9_57 -> m9_58  [key=0, style=solid];
m9_57 -> m9_106  [key=2, style=dotted];
m9_347 -> m9_348  [key=0, style=solid];
m9_348 -> m9_349  [key=0, style=solid];
m9_348 -> m9_350  [key=2, style=dotted];
m9_349 -> m9_347  [color=blue, key=0, style=bold];
m9_9 -> m9_8  [color=blue, key=0, style=bold];
m9_9 -> m9_34  [color=darkorchid, key=3, label="method methodReturn System.IO.StringWriter CreateStringWriter", style=bold];
m9_380 -> m9_381  [key=0, style=solid];
m9_380 -> m9_382  [color=darkseagreen4, key=1, label="System.Dynamic.BinaryOperationBinder", style=dashed];
m9_380 -> m9_384  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m9_380 -> m9_387  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m9_380 -> m9_390  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m9_380 -> m9_393  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m9_380 -> m9_396  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m9_380 -> m9_399  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m9_380 -> m9_409  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m9_381 -> m9_382  [key=0, style=solid];
m9_381 -> m9_384  [color=darkseagreen4, key=1, label=compareValue, style=dashed];
m9_381 -> m9_387  [color=darkseagreen4, key=1, label=compareValue, style=dashed];
m9_381 -> m9_390  [color=darkseagreen4, key=1, label=compareValue, style=dashed];
m9_381 -> m9_393  [color=darkseagreen4, key=1, label=compareValue, style=dashed];
m9_381 -> m9_396  [color=darkseagreen4, key=1, label=compareValue, style=dashed];
m9_381 -> m9_399  [color=darkseagreen4, key=1, label=compareValue, style=dashed];
m9_381 -> m9_409  [color=darkseagreen4, key=1, label=compareValue, style=dashed];
m9_382 -> m9_383  [key=0, style=solid];
m9_382 -> m9_386  [key=0, style=solid];
m9_382 -> m9_389  [key=0, style=solid];
m9_382 -> m9_392  [key=0, style=solid];
m9_382 -> m9_395  [key=0, style=solid];
m9_382 -> m9_398  [key=0, style=solid];
m9_382 -> m9_401  [key=0, style=solid];
m9_384 -> m9_385  [key=0, style=solid];
m9_384 -> m9_33  [key=2, style=dotted];
m9_387 -> m9_388  [key=0, style=solid];
m9_387 -> m9_33  [key=2, style=dotted];
m9_390 -> m9_391  [key=0, style=solid];
m9_390 -> m9_33  [key=2, style=dotted];
m9_393 -> m9_394  [key=0, style=solid];
m9_393 -> m9_33  [key=2, style=dotted];
m9_396 -> m9_397  [key=0, style=solid];
m9_396 -> m9_33  [key=2, style=dotted];
m9_399 -> m9_400  [key=0, style=solid];
m9_399 -> m9_33  [key=2, style=dotted];
m9_409 -> m9_410  [key=0, style=solid];
m9_409 -> m9_412  [key=0, style=solid];
m9_409 -> m9_128  [key=2, style=dotted];
m9_383 -> m9_384  [key=0, style=solid];
m9_386 -> m9_387  [key=0, style=solid];
m9_389 -> m9_390  [key=0, style=solid];
m9_392 -> m9_393  [key=0, style=solid];
m9_395 -> m9_396  [key=0, style=solid];
m9_398 -> m9_399  [key=0, style=solid];
m9_401 -> m9_402  [key=0, style=solid];
m9_385 -> m9_414  [key=0, style=solid];
m9_388 -> m9_414  [key=0, style=solid];
m9_391 -> m9_414  [key=0, style=solid];
m9_394 -> m9_414  [key=0, style=solid];
m9_397 -> m9_414  [key=0, style=solid];
m9_400 -> m9_414  [key=0, style=solid];
m9_402 -> m9_403  [key=0, style=solid];
m9_403 -> m9_404  [key=0, style=solid];
m9_404 -> m9_405  [key=0, style=solid];
m9_405 -> m9_406  [key=0, style=solid];
m9_406 -> m9_407  [key=0, style=solid];
m9_407 -> m9_408  [key=0, style=solid];
m9_408 -> m9_409  [key=0, style=solid];
m9_410 -> m9_411  [key=0, style=solid];
m9_410 -> m9_24  [key=2, style=dotted];
m9_410 -> m9_410  [color=darkseagreen4, key=1, label="out object", style=dashed];
m9_412 -> m9_413  [key=0, style=solid];
m9_412 -> m9_414  [color=darkseagreen4, key=1, label="out object", style=dashed];
m9_411 -> m9_414  [key=0, style=solid];
m9_413 -> m9_414  [key=0, style=solid];
m9_414 -> m9_380  [color=blue, key=0, style=bold];
m9_321 -> m9_322  [key=0, style=solid];
m9_321 -> m9_33  [key=2, style=dotted];
m9_322 -> m9_32  [color=blue, key=0, style=bold];
m9_362 -> m9_363  [key=0, style=solid];
m9_363 -> m9_364  [key=0, style=solid];
m9_363 -> m9_365  [key=2, style=dotted];
m9_363 -> m9_366  [key=2, style=dotted];
m9_364 -> m9_362  [color=blue, key=0, style=bold];
m9_82 -> m9_83  [key=0, style=solid];
m9_82 -> m9_84  [color=darkseagreen4, key=1, label=guid1, style=dashed];
m9_83 -> m9_84  [key=0, style=solid];
m9_86 -> m9_87  [key=0, style=solid];
m9_86 -> m9_88  [key=0, style=solid];
m9_88 -> m9_89  [key=0, style=solid];
m9_88 -> m9_90  [color=darkseagreen4, key=1, label=uri1, style=dashed];
m9_89 -> m9_90  [key=0, style=solid];
m9_92 -> m9_93  [key=0, style=solid];
m9_92 -> m9_94  [key=0, style=solid];
m9_94 -> m9_95  [key=0, style=solid];
m9_94 -> m9_96  [color=darkseagreen4, key=1, label=ts1, style=dashed];
m9_95 -> m9_96  [key=0, style=solid];
m9_97 -> m9_98  [key=0, style=solid];
m9_97 -> m9_117  [key=2, style=dotted];
m9_97 -> m9_118  [key=2, style=dotted];
m9_85 -> m9_86  [key=0, style=solid];
m9_91 -> m9_92  [key=0, style=solid];
m9_81 -> m9_98  [key=0, style=solid];
m9_81 -> m9_110  [key=2, style=dotted];
m9_84 -> m9_98  [key=0, style=solid];
m9_84 -> m9_113  [key=2, style=dotted];
m9_84 -> m9_84  [color=darkseagreen4, key=1, label=guid1, style=dashed];
m9_87 -> m9_98  [key=0, style=solid];
m9_87 -> m9_110  [key=2, style=dotted];
m9_90 -> m9_98  [key=0, style=solid];
m9_90 -> m9_114  [key=2, style=dotted];
m9_90 -> m9_115  [key=2, style=dotted];
m9_93 -> m9_98  [key=0, style=solid];
m9_93 -> m9_110  [key=2, style=dotted];
m9_96 -> m9_98  [key=0, style=solid];
m9_96 -> m9_116  [key=2, style=dotted];
m9_96 -> m9_96  [color=darkseagreen4, key=1, label=ts1, style=dashed];
m9_244 -> m9_246  [key=0, style=solid];
m9_244 -> m9_248  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenType?", style=dashed];
m9_244 -> m9_252  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenType?", style=dashed];
m9_246 -> m9_247  [key=0, style=solid];
m9_246 -> m9_248  [key=0, style=solid];
m9_248 -> m9_249  [key=0, style=solid];
m9_248 -> m9_253  [key=0, style=solid];
m9_252 -> m9_254  [key=0, style=solid];
m9_247 -> m9_254  [key=0, style=solid];
m9_249 -> m9_250  [key=0, style=solid];
m9_253 -> m9_254  [key=0, style=solid];
m9_250 -> m9_251  [key=0, style=solid];
m9_251 -> m9_252  [key=0, style=solid];
m9_254 -> m9_244  [color=blue, key=0, style=bold];
m9_426 -> m9_1  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m9_426 -> m9_2  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m9_426 -> m9_30  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m9_426 -> m9_207  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m9_426 -> m9_256  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m9_426 -> m9_258  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m9_426 -> m9_261  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m9_426 -> m9_270  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m9_426 -> m9_271  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m9_426 -> m9_273  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m9_426 -> m9_275  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m9_426 -> m9_278  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m9_426 -> m9_281  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m9_426 -> m9_284  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m9_426 -> m9_287  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m9_426 -> m9_288  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m9_426 -> m9_289  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m9_426 -> m9_292  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m9_426 -> m9_297  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m9_426 -> m9_300  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m9_426 -> m9_316  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m9_426 -> m9_317  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m9_426 -> m9_326  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m9_426 -> m9_333  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m9_426 -> m9_334  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m9_426 -> m9_338  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m9_426 -> m9_340  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m9_426 -> m9_343  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m9_426 -> m9_345  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m9_426 -> m9_348  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m9_426 -> m9_352  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m9_426 -> m9_354  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m9_426 -> m9_356  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m9_426 -> m9_359  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m9_426 -> m9_363  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m9_426 -> m9_419  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m9_426 -> m9_424  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m10_66 -> m10_67  [color=green, key=0, style=solid];
m10_66 -> m10_70  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_66 -> m10_71  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_67 -> m10_68  [color=green, key=0, style=solid];
m10_67 -> m10_75  [color=green, key=2, style=dotted];
m10_68 -> m10_69  [key=0, style=solid];
m10_68 -> m10_72  [key=0, style=solid];
m10_68 -> m10_74  [key=0, style=solid];
m10_68 -> m10_76  [key=2, style=dotted];
m10_70 -> m10_74  [key=0, style=solid];
m10_70 -> m10_71  [key=0, style=solid];
m10_71 -> m10_74  [key=0, style=solid];
m10_71 -> m10_77  [key=2, style=dotted];
m10_69 -> m10_70  [key=0, style=solid];
m10_72 -> m10_73  [key=0, style=solid];
m10_73 -> m10_74  [key=0, style=solid];
m10_73 -> m10_78  [key=2, style=dotted];
m10_73 -> m10_79  [key=2, style=dotted];
m10_73 -> m10_80  [key=2, style=dotted];
m10_74 -> m10_66  [color=blue, key=0, style=bold];
}
