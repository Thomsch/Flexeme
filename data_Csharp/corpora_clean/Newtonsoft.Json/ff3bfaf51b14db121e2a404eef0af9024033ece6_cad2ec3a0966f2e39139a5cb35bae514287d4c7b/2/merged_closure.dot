digraph  {
m0_44 [cluster="Newtonsoft.Json.Utilities.AsyncUtils.ReadAsync(System.IO.TextReader, char[], int, int, System.Threading.CancellationToken)", file="AsyncUtils.cs", label="Entry Newtonsoft.Json.Utilities.AsyncUtils.ReadAsync(System.IO.TextReader, char[], int, int, System.Threading.CancellationToken)", span="95-95"];
m0_45 [cluster="Newtonsoft.Json.Utilities.AsyncUtils.ReadAsync(System.IO.TextReader, char[], int, int, System.Threading.CancellationToken)", file="AsyncUtils.cs", label="Debug.Assert(reader != null)", span="97-97"];
m0_46 [cluster="Newtonsoft.Json.Utilities.AsyncUtils.ReadAsync(System.IO.TextReader, char[], int, int, System.Threading.CancellationToken)", file="AsyncUtils.cs", label="return cancellationToken.IsCancellationRequested ? FromCanceled<int>(cancellationToken) : reader.ReadAsync(buffer, index, count);", span="98-98"];
m0_47 [cluster="Newtonsoft.Json.Utilities.AsyncUtils.ReadAsync(System.IO.TextReader, char[], int, int, System.Threading.CancellationToken)", file="AsyncUtils.cs", label="Exit Newtonsoft.Json.Utilities.AsyncUtils.ReadAsync(System.IO.TextReader, char[], int, int, System.Threading.CancellationToken)", span="95-95"];
m0_34 [cluster="Newtonsoft.Json.Utilities.AsyncUtils.WriteAsync(System.IO.TextWriter, char[], System.Threading.CancellationToken)", file="AsyncUtils.cs", label="Entry Newtonsoft.Json.Utilities.AsyncUtils.WriteAsync(System.IO.TextWriter, char[], System.Threading.CancellationToken)", span="83-83"];
m0_35 [cluster="Newtonsoft.Json.Utilities.AsyncUtils.WriteAsync(System.IO.TextWriter, char[], System.Threading.CancellationToken)", file="AsyncUtils.cs", label="Debug.Assert(writer != null)", span="85-85"];
m0_36 [cluster="Newtonsoft.Json.Utilities.AsyncUtils.WriteAsync(System.IO.TextWriter, char[], System.Threading.CancellationToken)", file="AsyncUtils.cs", label="return cancellationToken.IsCancellationRequested ? FromCanceled(cancellationToken) : writer.WriteAsync(value);", span="86-86"];
m0_37 [cluster="Newtonsoft.Json.Utilities.AsyncUtils.WriteAsync(System.IO.TextWriter, char[], System.Threading.CancellationToken)", file="AsyncUtils.cs", label="Exit Newtonsoft.Json.Utilities.AsyncUtils.WriteAsync(System.IO.TextWriter, char[], System.Threading.CancellationToken)", span="83-83"];
m0_29 [cluster="Newtonsoft.Json.Utilities.AsyncUtils.WriteAsync(System.IO.TextWriter, string, System.Threading.CancellationToken)", file="AsyncUtils.cs", label="Entry Newtonsoft.Json.Utilities.AsyncUtils.WriteAsync(System.IO.TextWriter, string, System.Threading.CancellationToken)", span="77-77"];
m0_30 [cluster="Newtonsoft.Json.Utilities.AsyncUtils.WriteAsync(System.IO.TextWriter, string, System.Threading.CancellationToken)", file="AsyncUtils.cs", label="Debug.Assert(writer != null)", span="79-79"];
m0_31 [cluster="Newtonsoft.Json.Utilities.AsyncUtils.WriteAsync(System.IO.TextWriter, string, System.Threading.CancellationToken)", file="AsyncUtils.cs", label="return cancellationToken.IsCancellationRequested ? FromCanceled(cancellationToken) : writer.WriteAsync(value);", span="80-80"];
m0_32 [cluster="Newtonsoft.Json.Utilities.AsyncUtils.WriteAsync(System.IO.TextWriter, string, System.Threading.CancellationToken)", file="AsyncUtils.cs", label="Exit Newtonsoft.Json.Utilities.AsyncUtils.WriteAsync(System.IO.TextWriter, string, System.Threading.CancellationToken)", span="77-77"];
m0_39 [cluster="Newtonsoft.Json.Utilities.AsyncUtils.WriteAsync(System.IO.TextWriter, char[], int, int, System.Threading.CancellationToken)", file="AsyncUtils.cs", label="Entry Newtonsoft.Json.Utilities.AsyncUtils.WriteAsync(System.IO.TextWriter, char[], int, int, System.Threading.CancellationToken)", span="89-89"];
m0_40 [cluster="Newtonsoft.Json.Utilities.AsyncUtils.WriteAsync(System.IO.TextWriter, char[], int, int, System.Threading.CancellationToken)", file="AsyncUtils.cs", label="Debug.Assert(writer != null)", span="91-91"];
m0_41 [cluster="Newtonsoft.Json.Utilities.AsyncUtils.WriteAsync(System.IO.TextWriter, char[], int, int, System.Threading.CancellationToken)", file="AsyncUtils.cs", label="return cancellationToken.IsCancellationRequested ? FromCanceled(cancellationToken) : writer.WriteAsync(value, start, count);", span="92-92"];
m0_42 [cluster="Newtonsoft.Json.Utilities.AsyncUtils.WriteAsync(System.IO.TextWriter, char[], int, int, System.Threading.CancellationToken)", file="AsyncUtils.cs", label="Exit Newtonsoft.Json.Utilities.AsyncUtils.WriteAsync(System.IO.TextWriter, char[], int, int, System.Threading.CancellationToken)", span="89-89"];
m0_13 [cluster="System.Diagnostics.Debug.Assert(bool)", file="AsyncUtils.cs", label="Entry System.Diagnostics.Debug.Assert(bool)", span="0-0"];
m0_5 [cluster="Newtonsoft.Json.Utilities.AsyncUtils.FromCanceled(System.Threading.CancellationToken)", file="AsyncUtils.cs", label="Entry Newtonsoft.Json.Utilities.AsyncUtils.FromCanceled(System.Threading.CancellationToken)", span="54-54"];
m0_10 [cluster="Newtonsoft.Json.Utilities.AsyncUtils.FromCanceled(System.Threading.CancellationToken)", file="AsyncUtils.cs", label="Debug.Assert(cancellationToken.IsCancellationRequested)", span="56-56"];
m0_11 [cluster="Newtonsoft.Json.Utilities.AsyncUtils.FromCanceled(System.Threading.CancellationToken)", file="AsyncUtils.cs", label="return new Task(() => {}, cancellationToken);", span="57-57"];
m0_12 [cluster="Newtonsoft.Json.Utilities.AsyncUtils.FromCanceled(System.Threading.CancellationToken)", file="AsyncUtils.cs", label="Exit Newtonsoft.Json.Utilities.AsyncUtils.FromCanceled(System.Threading.CancellationToken)", span="54-54"];
m0_0 [cluster="Newtonsoft.Json.Utilities.AsyncUtils.ToAsync(bool)", file="AsyncUtils.cs", label="Entry Newtonsoft.Json.Utilities.AsyncUtils.ToAsync(bool)", span="40-40"];
m0_1 [cluster="Newtonsoft.Json.Utilities.AsyncUtils.ToAsync(bool)", file="AsyncUtils.cs", label="Exit Newtonsoft.Json.Utilities.AsyncUtils.ToAsync(bool)", span="40-40"];
m0_21 [cluster="lambda expression", file="AsyncUtils.cs", label="Entry lambda expression", span="63-63"];
m0_15 [cluster="lambda expression", file="AsyncUtils.cs", label="Entry lambda expression", span="57-57"];
m0_16 [cluster="lambda expression", file="AsyncUtils.cs", label="Exit lambda expression", span="57-57"];
m0_22 [cluster="lambda expression", file="AsyncUtils.cs", label="default(T)", span="63-63"];
m0_23 [cluster="lambda expression", file="AsyncUtils.cs", label="Exit lambda expression", span="63-63"];
m0_24 [cluster="Newtonsoft.Json.Utilities.AsyncUtils.WriteAsync(System.IO.TextWriter, char, System.Threading.CancellationToken)", file="AsyncUtils.cs", label="Entry Newtonsoft.Json.Utilities.AsyncUtils.WriteAsync(System.IO.TextWriter, char, System.Threading.CancellationToken)", span="71-71"];
m0_25 [cluster="Newtonsoft.Json.Utilities.AsyncUtils.WriteAsync(System.IO.TextWriter, char, System.Threading.CancellationToken)", file="AsyncUtils.cs", label="Debug.Assert(writer != null)", span="73-73"];
m0_26 [cluster="Newtonsoft.Json.Utilities.AsyncUtils.WriteAsync(System.IO.TextWriter, char, System.Threading.CancellationToken)", file="AsyncUtils.cs", label="return cancellationToken.IsCancellationRequested ? FromCanceled(cancellationToken) : writer.WriteAsync(value);", span="74-74"];
m0_27 [cluster="Newtonsoft.Json.Utilities.AsyncUtils.WriteAsync(System.IO.TextWriter, char, System.Threading.CancellationToken)", file="AsyncUtils.cs", label="Exit Newtonsoft.Json.Utilities.AsyncUtils.WriteAsync(System.IO.TextWriter, char, System.Threading.CancellationToken)", span="71-71"];
m0_2 [cluster="Newtonsoft.Json.Utilities.AsyncUtils.CancelIfRequestedAsync(System.Threading.CancellationToken)", file="AsyncUtils.cs", label="Entry Newtonsoft.Json.Utilities.AsyncUtils.CancelIfRequestedAsync(System.Threading.CancellationToken)", span="42-42"];
m0_3 [cluster="Newtonsoft.Json.Utilities.AsyncUtils.CancelIfRequestedAsync(System.Threading.CancellationToken)", file="AsyncUtils.cs", label="return cancellationToken.IsCancellationRequested ? FromCanceled(cancellationToken) : null;", span="44-44"];
m0_4 [cluster="Newtonsoft.Json.Utilities.AsyncUtils.CancelIfRequestedAsync(System.Threading.CancellationToken)", file="AsyncUtils.cs", label="Exit Newtonsoft.Json.Utilities.AsyncUtils.CancelIfRequestedAsync(System.Threading.CancellationToken)", span="42-42"];
m0_14 [cluster="System.Threading.Tasks.Task.Task(System.Action, System.Threading.CancellationToken)", file="AsyncUtils.cs", label="Entry System.Threading.Tasks.Task.Task(System.Action, System.Threading.CancellationToken)", span="0-0"];
m0_9 [cluster="Newtonsoft.Json.Utilities.AsyncUtils.FromCanceled<T>(System.Threading.CancellationToken)", file="AsyncUtils.cs", label="Entry Newtonsoft.Json.Utilities.AsyncUtils.FromCanceled<T>(System.Threading.CancellationToken)", span="60-60"];
m0_17 [cluster="Newtonsoft.Json.Utilities.AsyncUtils.FromCanceled<T>(System.Threading.CancellationToken)", file="AsyncUtils.cs", label="Debug.Assert(cancellationToken.IsCancellationRequested)", span="62-62"];
m0_18 [cluster="Newtonsoft.Json.Utilities.AsyncUtils.FromCanceled<T>(System.Threading.CancellationToken)", file="AsyncUtils.cs", label="return new Task<T>(() => default(T), cancellationToken);", span="63-63"];
m0_19 [cluster="Newtonsoft.Json.Utilities.AsyncUtils.FromCanceled<T>(System.Threading.CancellationToken)", file="AsyncUtils.cs", label="Exit Newtonsoft.Json.Utilities.AsyncUtils.FromCanceled<T>(System.Threading.CancellationToken)", span="60-60"];
m0_48 [cluster="System.IO.TextReader.ReadAsync(char[], int, int)", file="AsyncUtils.cs", label="Entry System.IO.TextReader.ReadAsync(char[], int, int)", span="0-0"];
m0_20 [cluster="System.Threading.Tasks.Task<TResult>.Task(System.Func<TResult>, System.Threading.CancellationToken)", file="AsyncUtils.cs", label="Entry System.Threading.Tasks.Task<TResult>.Task(System.Func<TResult>, System.Threading.CancellationToken)", span="0-0"];
m0_33 [cluster="System.IO.TextWriter.WriteAsync(string)", file="AsyncUtils.cs", label="Entry System.IO.TextWriter.WriteAsync(string)", span="0-0"];
m0_43 [cluster="System.IO.TextWriter.WriteAsync(char[], int, int)", file="AsyncUtils.cs", label="Entry System.IO.TextWriter.WriteAsync(char[], int, int)", span="0-0"];
m0_28 [cluster="System.IO.TextWriter.WriteAsync(char)", file="AsyncUtils.cs", label="Entry System.IO.TextWriter.WriteAsync(char)", span="0-0"];
m0_38 [cluster="System.IO.TextWriter.WriteAsync(char[])", file="AsyncUtils.cs", label="Entry System.IO.TextWriter.WriteAsync(char[])", span="0-0"];
m0_6 [cluster="Newtonsoft.Json.Utilities.AsyncUtils.CancelIfRequestedAsync<T>(System.Threading.CancellationToken)", file="AsyncUtils.cs", label="Entry Newtonsoft.Json.Utilities.AsyncUtils.CancelIfRequestedAsync<T>(System.Threading.CancellationToken)", span="47-47"];
m0_7 [cluster="Newtonsoft.Json.Utilities.AsyncUtils.CancelIfRequestedAsync<T>(System.Threading.CancellationToken)", file="AsyncUtils.cs", label="return cancellationToken.IsCancellationRequested ? FromCanceled<T>(cancellationToken) : null;", span="49-49"];
m0_8 [cluster="Newtonsoft.Json.Utilities.AsyncUtils.CancelIfRequestedAsync<T>(System.Threading.CancellationToken)", file="AsyncUtils.cs", label="Exit Newtonsoft.Json.Utilities.AsyncUtils.CancelIfRequestedAsync<T>(System.Threading.CancellationToken)", span="47-47"];
m1_6 [cluster="Newtonsoft.Json.Linq.JToken.ToString(Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", file="Base64Encoder.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToString(Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", span="421-421"];
m1_4 [cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="Base64Encoder.cs", label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="359-359"];
m1_5 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", file="Base64Encoder.cs", label="Entry Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", span="34-34"];
m1_0 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.ToStringJsonConverter.Example()", file="Base64Encoder.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Linq.ToStringJsonConverter.Example()", span="11-11"];
m1_1 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.ToStringJsonConverter.Example()", file="Base64Encoder.cs", label="JObject o = JObject.Parse(@''{'string1':'value','integer2':99,'datetime3':'2000-05-23T00:00:00'}'')", span="14-14"];
m1_2 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.ToStringJsonConverter.Example()", file="Base64Encoder.cs", label="Console.WriteLine(o.ToString(Formatting.None, new JavaScriptDateTimeConverter()))", span="16-16"];
m1_3 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.ToStringJsonConverter.Example()", file="Base64Encoder.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Linq.ToStringJsonConverter.Example()", span="11-11"];
m1_7 [cluster="System.Console.WriteLine(string)", file="Base64Encoder.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m2_4 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string, System.Exception)", file="BinaryConverter.cs", label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string, System.Exception)", span="63-63"];
m2_5 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string, System.Exception)", file="BinaryConverter.cs", label="Exit Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string, System.Exception)", span="63-63"];
m2_0 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException()", file="BinaryConverter.cs", label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException()", span="43-43"];
m2_1 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException()", file="BinaryConverter.cs", label="Exit Newtonsoft.Json.JsonSerializationException.JsonSerializationException()", span="43-43"];
m2_6 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="BinaryConverter.cs", label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="76-76"];
m2_7 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="BinaryConverter.cs", label="Exit Newtonsoft.Json.JsonSerializationException.JsonSerializationException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="76-76"];
m2_11 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", file="BinaryConverter.cs", label="Entry Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", span="87-87"];
m2_12 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", file="BinaryConverter.cs", label="return Create(reader as IJsonLineInfo, reader.Path, message, ex);", span="89-89"];
m2_13 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", file="BinaryConverter.cs", label="Exit Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", span="87-87"];
m2_8 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", file="BinaryConverter.cs", label="Entry Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", span="82-82"];
m2_9 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", file="BinaryConverter.cs", label="return Create(reader, message, null);", span="84-84"];
m2_10 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", file="BinaryConverter.cs", label="Exit Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", span="82-82"];
m2_14 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", file="BinaryConverter.cs", label="Entry Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", span="92-92"];
m2_15 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", file="BinaryConverter.cs", label="message = JsonPosition.FormatMessage(lineInfo, path, message)", span="94-94"];
m2_16 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", file="BinaryConverter.cs", label="return new JsonSerializationException(message, ex);", span="96-96"];
m2_17 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", file="BinaryConverter.cs", label="Exit Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", span="92-92"];
m2_18 [cluster="Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", file="BinaryConverter.cs", label="Entry Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", span="104-104"];
m2_2 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", file="BinaryConverter.cs", label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="52-52"];
m2_3 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", file="BinaryConverter.cs", label="Exit Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="52-52"];
m3_77 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeOffsetString(System.IO.TextWriter, System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", file="BsonBinaryWriter.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeOffsetString(System.IO.TextWriter, System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", span="741-741"];
m3_79 [cluster="System.IO.StringWriter.ToString()", file="BsonBinaryWriter.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m3_78 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(System.IO.TextWriter, System.DateTime, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", file="BsonBinaryWriter.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(System.IO.TextWriter, System.DateTime, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", span="609-609"];
m3_6 [cluster="Newtonsoft.Json.Linq.JsonPath.CompositeExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="BsonBinaryWriter.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.CompositeExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", span="38-38"];
m3_7 [cluster="Newtonsoft.Json.Linq.JsonPath.CompositeExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="BsonBinaryWriter.cs", label=Operator, span="40-40"];
m3_10 [cluster="Newtonsoft.Json.Linq.JsonPath.CompositeExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="BsonBinaryWriter.cs", label="!e.IsMatch(t)", span="45-45"];
m3_15 [cluster="Newtonsoft.Json.Linq.JsonPath.CompositeExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="BsonBinaryWriter.cs", label="e.IsMatch(t)", span="52-52"];
m3_8 [cluster="Newtonsoft.Json.Linq.JsonPath.CompositeExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="BsonBinaryWriter.cs", label="QueryOperator.And", span="42-42"];
m3_13 [cluster="Newtonsoft.Json.Linq.JsonPath.CompositeExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="BsonBinaryWriter.cs", label="QueryOperator.Or", span="49-49"];
m3_18 [cluster="Newtonsoft.Json.Linq.JsonPath.CompositeExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="BsonBinaryWriter.cs", label="throw new ArgumentOutOfRangeException();", span="57-57"];
m3_9 [cluster="Newtonsoft.Json.Linq.JsonPath.CompositeExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="BsonBinaryWriter.cs", label=Expressions, span="43-43"];
m3_12 [cluster="Newtonsoft.Json.Linq.JsonPath.CompositeExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="BsonBinaryWriter.cs", label="return true;", span="48-48"];
m3_11 [cluster="Newtonsoft.Json.Linq.JsonPath.CompositeExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="BsonBinaryWriter.cs", label="return false;", span="46-46"];
m3_14 [cluster="Newtonsoft.Json.Linq.JsonPath.CompositeExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="BsonBinaryWriter.cs", label=Expressions, span="50-50"];
m3_17 [cluster="Newtonsoft.Json.Linq.JsonPath.CompositeExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="BsonBinaryWriter.cs", label="return false;", span="55-55"];
m3_16 [cluster="Newtonsoft.Json.Linq.JsonPath.CompositeExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="BsonBinaryWriter.cs", label="return true;", span="53-53"];
m3_19 [cluster="Newtonsoft.Json.Linq.JsonPath.CompositeExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="BsonBinaryWriter.cs", label="Exit Newtonsoft.Json.Linq.JsonPath.CompositeExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", span="38-38"];
m3_21 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="BsonBinaryWriter.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", span="67-67"];
m3_22 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="BsonBinaryWriter.cs", label="IEnumerable<JToken> pathResult = JPath.Evaluate(Path, t, false)", span="69-69"];
m3_23 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="BsonBinaryWriter.cs", label=pathResult, span="71-71"];
m3_24 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="BsonBinaryWriter.cs", label="JValue v = r as JValue", span="73-73"];
m3_47 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="BsonBinaryWriter.cs", label="return false;", span="107-107"];
m3_25 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="BsonBinaryWriter.cs", label=Operator, span="74-74"];
m3_27 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="BsonBinaryWriter.cs", label="v != null && EqualsWithStringCoercion(v, Value)", span="77-77"];
m3_30 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="BsonBinaryWriter.cs", label="v != null && !EqualsWithStringCoercion(v, Value)", span="81-81"];
m3_33 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="BsonBinaryWriter.cs", label="v != null && v.CompareTo(Value) > 0", span="85-85"];
m3_36 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="BsonBinaryWriter.cs", label="v != null && v.CompareTo(Value) >= 0", span="89-89"];
m3_39 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="BsonBinaryWriter.cs", label="v != null && v.CompareTo(Value) < 0", span="93-93"];
m3_42 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="BsonBinaryWriter.cs", label="v != null && v.CompareTo(Value) <= 0", span="97-97"];
m3_26 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="BsonBinaryWriter.cs", label="QueryOperator.Equals", span="76-76"];
m3_29 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="BsonBinaryWriter.cs", label="QueryOperator.NotEquals", span="80-80"];
m3_32 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="BsonBinaryWriter.cs", label="QueryOperator.GreaterThan", span="84-84"];
m3_35 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="BsonBinaryWriter.cs", label="QueryOperator.GreaterThanOrEquals", span="88-88"];
m3_38 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="BsonBinaryWriter.cs", label="QueryOperator.LessThan", span="92-92"];
m3_41 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="BsonBinaryWriter.cs", label="QueryOperator.LessThanOrEquals", span="96-96"];
m3_44 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="BsonBinaryWriter.cs", label="QueryOperator.Exists", span="100-100"];
m3_46 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="BsonBinaryWriter.cs", label="throw new ArgumentOutOfRangeException();", span="103-103"];
m3_28 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="BsonBinaryWriter.cs", label="return true;", span="78-78"];
m3_31 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="BsonBinaryWriter.cs", label="return true;", span="82-82"];
m3_34 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="BsonBinaryWriter.cs", label="return true;", span="86-86"];
m3_37 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="BsonBinaryWriter.cs", label="return true;", span="90-90"];
m3_40 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="BsonBinaryWriter.cs", label="return true;", span="94-94"];
m3_43 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="BsonBinaryWriter.cs", label="return true;", span="98-98"];
m3_45 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="BsonBinaryWriter.cs", label="return true;", span="101-101"];
m3_48 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="BsonBinaryWriter.cs", label="Exit Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", span="67-67"];
m3_75 [cluster="Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)", file="BsonBinaryWriter.cs", label="Entry Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)", span="750-750"];
m3_81 [cluster="object.ToString()", file="BsonBinaryWriter.cs", label="Entry object.ToString()", span="0-0"];
m3_51 [cluster="Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", file="BsonBinaryWriter.cs", label="Entry Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", span="961-961"];
m3_76 [cluster="Newtonsoft.Json.Utilities.StringUtils.CreateStringWriter(int)", file="BsonBinaryWriter.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.CreateStringWriter(int)", span="110-110"];
m3_80 [cluster="System.Convert.ToBase64String(byte[])", file="BsonBinaryWriter.cs", label="Entry System.Convert.ToBase64String(byte[])", span="0-0"];
m3_82 [cluster="string.Equals(string, string, System.StringComparison)", file="BsonBinaryWriter.cs", label="Entry string.Equals(string, string, System.StringComparison)", span="0-0"];
m3_0 [cluster="Newtonsoft.Json.Linq.JsonPath.QueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="BsonBinaryWriter.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.QueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", span="26-26"];
m3_1 [cluster="Newtonsoft.Json.Linq.JsonPath.QueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="BsonBinaryWriter.cs", label="Exit Newtonsoft.Json.Linq.JsonPath.QueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", span="26-26"];
m3_2 [cluster="Newtonsoft.Json.Linq.JsonPath.CompositeExpression.CompositeExpression()", file="BsonBinaryWriter.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.CompositeExpression.CompositeExpression()", span="33-33"];
m3_3 [cluster="Newtonsoft.Json.Linq.JsonPath.CompositeExpression.CompositeExpression()", file="BsonBinaryWriter.cs", label="Expressions = new List<QueryExpression>()", span="35-35"];
m3_4 [cluster="Newtonsoft.Json.Linq.JsonPath.CompositeExpression.CompositeExpression()", file="BsonBinaryWriter.cs", label="Exit Newtonsoft.Json.Linq.JsonPath.CompositeExpression.CompositeExpression()", span="33-33"];
m3_50 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.EqualsWithStringCoercion(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="BsonBinaryWriter.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.EqualsWithStringCoercion(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", span="110-110"];
m3_52 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.EqualsWithStringCoercion(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="BsonBinaryWriter.cs", label="value.Equals(queryValue)", span="112-112"];
m3_54 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.EqualsWithStringCoercion(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="BsonBinaryWriter.cs", label="queryValue.Type != JTokenType.String", span="117-117"];
m3_56 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.EqualsWithStringCoercion(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="BsonBinaryWriter.cs", label="string queryValueString = (string)queryValue.Value", span="122-122"];
m3_58 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.EqualsWithStringCoercion(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="BsonBinaryWriter.cs", label="value.Type", span="127-127"];
m3_61 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.EqualsWithStringCoercion(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="BsonBinaryWriter.cs", label="value.Value is DateTimeOffset", span="133-133"];
m3_62 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.EqualsWithStringCoercion(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="BsonBinaryWriter.cs", label="DateTimeUtils.WriteDateTimeOffsetString(writer, (DateTimeOffset)value.Value, DateFormatHandling.IsoDateFormat, null, CultureInfo.InvariantCulture)", span="135-135"];
m3_63 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.EqualsWithStringCoercion(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="BsonBinaryWriter.cs", label="DateTimeUtils.WriteDateTimeString(writer, (DateTime)value.Value, DateFormatHandling.IsoDateFormat, null, CultureInfo.InvariantCulture)", span="140-140"];
m3_66 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.EqualsWithStringCoercion(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="BsonBinaryWriter.cs", label="currentValueString = Convert.ToBase64String((byte[])value.Value)", span="147-147"];
m3_71 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.EqualsWithStringCoercion(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="BsonBinaryWriter.cs", label="currentValueString = ((Uri)value.Value).OriginalString", span="154-154"];
m3_53 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.EqualsWithStringCoercion(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="BsonBinaryWriter.cs", label="return true;", span="114-114"];
m3_55 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.EqualsWithStringCoercion(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="BsonBinaryWriter.cs", label="return false;", span="119-119"];
m3_57 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.EqualsWithStringCoercion(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="BsonBinaryWriter.cs", label="string currentValueString", span="124-124"];
m3_73 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.EqualsWithStringCoercion(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="BsonBinaryWriter.cs", label="return string.Equals(currentValueString, queryValueString, StringComparison.Ordinal);", span="160-160"];
m3_59 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.EqualsWithStringCoercion(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="BsonBinaryWriter.cs", label="JTokenType.Date", span="129-129"];
m3_65 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.EqualsWithStringCoercion(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="BsonBinaryWriter.cs", label="JTokenType.Bytes", span="146-146"];
m3_67 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.EqualsWithStringCoercion(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="BsonBinaryWriter.cs", label="JTokenType.Guid", span="149-149"];
m3_70 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.EqualsWithStringCoercion(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="BsonBinaryWriter.cs", label="JTokenType.Uri", span="153-153"];
m3_72 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.EqualsWithStringCoercion(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="BsonBinaryWriter.cs", label="return false;", span="157-157"];
m3_60 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.EqualsWithStringCoercion(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="BsonBinaryWriter.cs", label="StringWriter writer = StringUtils.CreateStringWriter(64)", span="130-130"];
m3_64 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.EqualsWithStringCoercion(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="BsonBinaryWriter.cs", label="currentValueString = writer.ToString()", span="143-143"];
m3_68 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.EqualsWithStringCoercion(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="BsonBinaryWriter.cs", label="JTokenType.TimeSpan", span="150-150"];
m3_74 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.EqualsWithStringCoercion(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="BsonBinaryWriter.cs", label="Exit Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.EqualsWithStringCoercion(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", span="110-110"];
m3_49 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.Evaluate(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, Newtonsoft.Json.Linq.JToken, bool)", file="BsonBinaryWriter.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.JPath.Evaluate(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, Newtonsoft.Json.Linq.JToken, bool)", span="662-662"];
m3_5 [cluster="System.Collections.Generic.List<T>.List()", file="BsonBinaryWriter.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m3_20 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", file="BsonBinaryWriter.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", span="0-0"];
m3_83 [file="BsonBinaryWriter.cs", label="Newtonsoft.Json.Linq.JsonPath.CompositeExpression", span=""];
m3_84 [file="BsonBinaryWriter.cs", label="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression", span=""];
m4_68 [cluster="System.IO.BinaryReader.Close()", file="BsonReader.cs", label="Entry System.IO.BinaryReader.Close()", span="0-0"];
m4_101 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInt32()", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadInt32()", span="798-798"];
m4_382 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInt32()", file="BsonReader.cs", label="MovePosition(4)", span="800-800"];
m4_383 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInt32()", file="BsonReader.cs", label="return _reader.ReadInt32();", span="801-801"];
m4_384 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInt32()", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadInt32()", span="798-798"];
m4_347 [cluster="System.IO.EndOfStreamException.EndOfStreamException(string)", file="BsonReader.cs", label="Entry System.IO.EndOfStreamException.EndOfStreamException(string)", span="0-0"];
m4_261 [cluster="System.Convert.ToDecimal(object, System.IFormatProvider)", file="BsonReader.cs", label="Entry System.Convert.ToDecimal(object, System.IFormatProvider)", span="0-0"];
m4_385 [cluster="System.IO.BinaryReader.ReadInt32()", file="BsonReader.cs", label="Entry System.IO.BinaryReader.ReadInt32()", span="0-0"];
m4_267 [cluster="System.DateTime.SpecifyKind(System.DateTime, System.DateTimeKind)", file="BsonReader.cs", label="Entry System.DateTime.SpecifyKind(System.DateTime, System.DateTimeKind)", span="0-0"];
m4_194 [cluster="System.IO.BinaryReader.ReadByte()", file="BsonReader.cs", label="Entry System.IO.BinaryReader.ReadByte()", span="0-0"];
m4_268 [cluster="System.DateTime.ToLocalTime()", file="BsonReader.cs", label="Entry System.DateTime.ToLocalTime()", span="0-0"];
m4_3 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", span="125-125"];
m4_4 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", span="125-125"];
m4_309 [cluster="System.Text.StringBuilder.Append(char[], int, int)", file="BsonReader.cs", label="Entry System.Text.StringBuilder.Append(char[], int, int)", span="0-0"];
m4_5 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.BinaryReader)", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.BinaryReader)", span="134-134"];
m4_6 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.BinaryReader)", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.BinaryReader)", span="134-134"];
m4_25 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadElement()", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadElement()", span="169-169"];
m4_26 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadElement()", file="BsonReader.cs", label="_currentElementType = ReadType()", span="171-171"];
m4_27 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadElement()", file="BsonReader.cs", label="string elementName = ReadString()", span="172-172"];
m4_28 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadElement()", file="BsonReader.cs", label="return elementName;", span="173-173"];
m4_29 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadElement()", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadElement()", span="169-169"];
m4_393 [cluster="System.IO.BinaryReader.ReadSByte()", file="BsonReader.cs", label="Entry System.IO.BinaryReader.ReadSByte()", span="0-0"];
m4_30 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType()", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadType()", span="810-810"];
m4_390 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType()", file="BsonReader.cs", label="MovePosition(1)", span="812-812"];
m4_391 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType()", file="BsonReader.cs", label="return (BsonType)_reader.ReadSByte();", span="813-813"];
m4_392 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType()", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadType()", span="810-810"];
m4_389 [cluster="System.IO.BinaryReader.ReadInt64()", file="BsonReader.cs", label="Entry System.IO.BinaryReader.ReadInt64()", span="0-0"];
m4_100 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="BsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", span="962-962"];
m4_102 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadLengthString()", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadLengthString()", span="644-644"];
m4_312 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadLengthString()", file="BsonReader.cs", label="int length = ReadInt32()", span="646-646"];
m4_313 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadLengthString()", file="BsonReader.cs", label="MovePosition(length)", span="648-648"];
m4_314 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadLengthString()", file="BsonReader.cs", label="string s = GetString(length - 1)", span="650-650"];
m4_315 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadLengthString()", file="BsonReader.cs", label="_reader.ReadByte()", span="651-651"];
m4_316 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadLengthString()", file="BsonReader.cs", label="return s;", span="653-653"];
m4_317 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadLengthString()", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadLengthString()", span="644-644"];
m4_177 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", span="451-451"];
m4_195 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label=type, span="453-453"];
m4_258 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="throw new ArgumentOutOfRangeException(nameof(type), ''Unexpected BsonType value: '' + type);", span="559-559"];
m4_196 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="BsonType.Number", span="455-455"];
m4_201 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="BsonType.String", span="467-467"];
m4_204 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="BsonType.Object", span="471-471"];
m4_209 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="BsonType.Array", span="480-480"];
m4_214 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="BsonType.Binary", span="489-489"];
m4_219 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="BsonType.Undefined", span="499-499"];
m4_221 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="BsonType.Oid", span="502-502"];
m4_224 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="BsonType.Boolean", span="506-506"];
m4_227 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="BsonType.Date", span="510-510"];
m4_238 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="BsonType.Null", span="530-530"];
m4_240 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="BsonType.Regex", span="533-533"];
m4_245 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="BsonType.Reference", span="540-540"];
m4_248 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="BsonType.Code", span="544-544"];
m4_250 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="BsonType.CodeWScope", span="547-547"];
m4_253 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="BsonType.Integer", span="551-551"];
m4_255 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="BsonType.TimeStamp", span="554-554"];
m4_197 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="double d = ReadDouble()", span="456-456"];
m4_198 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="_floatParseHandling == FloatParseHandling.Decimal", span="458-458"];
m4_199 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="SetToken(JsonToken.Float, Convert.ToDecimal(d, CultureInfo.InvariantCulture))", span="460-460"];
m4_200 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="SetToken(JsonToken.Float, d)", span="464-464"];
m4_202 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="BsonType.Symbol", span="468-468"];
m4_203 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="SetToken(JsonToken.String, ReadLengthString())", span="469-469"];
m4_205 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="SetToken(JsonToken.StartObject)", span="473-473"];
m4_206 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="ContainerContext newContext = new ContainerContext(BsonType.Object)", span="475-475"];
m4_207 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="PushContext(newContext)", span="476-476"];
m4_208 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="newContext.Length = ReadInt32()", span="477-477"];
m4_210 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="SetToken(JsonToken.StartArray)", span="482-482"];
m4_211 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="ContainerContext newContext = new ContainerContext(BsonType.Array)", span="484-484"];
m4_212 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="PushContext(newContext)", span="485-485"];
m4_213 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="newContext.Length = ReadInt32()", span="486-486"];
m4_215 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="BsonBinaryType binaryType", span="490-490"];
m4_216 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="byte[] data = ReadBinary(out binaryType)", span="491-491"];
m4_217 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="object value = (binaryType != BsonBinaryType.Uuid)\r\n                        ? data\r\n                        : (object)new Guid(data)", span="493-495"];
m4_218 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="SetToken(JsonToken.Bytes, value)", span="497-497"];
m4_220 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="SetToken(JsonToken.Undefined)", span="500-500"];
m4_222 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="byte[] oid = ReadBytes(12)", span="503-503"];
m4_223 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="SetToken(JsonToken.Bytes, oid)", span="504-504"];
m4_225 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="bool b = Convert.ToBoolean(ReadByte())", span="507-507"];
m4_226 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="SetToken(JsonToken.Boolean, b)", span="508-508"];
m4_228 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="long ticks = ReadInt64()", span="511-511"];
m4_229 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="DateTime utcDateTime = DateTimeUtils.ConvertJavaScriptTicksToDateTime(ticks)", span="512-512"];
m4_230 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="DateTime dateTime", span="514-514"];
m4_233 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="dateTime = DateTime.SpecifyKind(utcDateTime, DateTimeKind.Unspecified)", span="518-518"];
m4_235 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="dateTime = utcDateTime.ToLocalTime()", span="521-521"];
m4_236 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="dateTime = utcDateTime", span="524-524"];
m4_231 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label=DateTimeKindHandling, span="515-515"];
m4_232 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="DateTimeKind.Unspecified", span="517-517"];
m4_234 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="DateTimeKind.Local", span="520-520"];
m4_237 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="SetToken(JsonToken.Date, dateTime)", span="528-528"];
m4_239 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="SetToken(JsonToken.Null)", span="531-531"];
m4_241 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="string expression = ReadString()", span="534-534"];
m4_242 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="string modifiers = ReadString()", span="535-535"];
m4_243 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="string regex = @''/'' + expression + @''/'' + modifiers", span="537-537"];
m4_244 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="SetToken(JsonToken.String, regex)", span="538-538"];
m4_246 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="SetToken(JsonToken.StartObject)", span="541-541"];
m4_247 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="_bsonReaderState = BsonReaderState.ReferenceStart", span="542-542"];
m4_249 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="SetToken(JsonToken.String, ReadLengthString())", span="545-545"];
m4_251 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="SetToken(JsonToken.StartObject)", span="548-548"];
m4_252 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="_bsonReaderState = BsonReaderState.CodeWScopeStart", span="549-549"];
m4_254 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="SetToken(JsonToken.Integer, (long)ReadInt32())", span="552-552"];
m4_256 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="BsonType.Long", span="555-555"];
m4_257 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="SetToken(JsonToken.Integer, ReadInt64())", span="556-556"];
m4_259 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", span="451-451"];
m4_305 [cluster="System.Text.Encoding.GetChars(byte[], int, int, char[], int)", file="BsonReader.cs", label="Entry System.Text.Encoding.GetChars(byte[], int, int, char[], int)", span="0-0"];
m4_17 [cluster="System.Collections.Generic.List<T>.List()", file="BsonReader.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m4_186 [cluster="System.Collections.Generic.List<T>.RemoveAt(int)", file="BsonReader.cs", label="Entry System.Collections.Generic.List<T>.RemoveAt(int)", span="0-0"];
m4_61 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken)", file="BsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken)", span="952-952"];
m4_16 [cluster="System.IO.BinaryReader.BinaryReader(System.IO.Stream)", file="BsonReader.cs", label="Entry System.IO.BinaryReader.BinaryReader(System.IO.Stream)", span="0-0"];
m4_360 [cluster="Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)", span="758-758"];
m4_361 [cluster="Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)", file="BsonReader.cs", label="b <= SeqRange1[1]", span="760-760"];
m4_363 [cluster="Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)", file="BsonReader.cs", label="b >= SeqRange2[0] && b <= SeqRange2[1]", span="764-764"];
m4_365 [cluster="Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)", file="BsonReader.cs", label="b >= SeqRange3[0] && b <= SeqRange3[1]", span="768-768"];
m4_367 [cluster="Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)", file="BsonReader.cs", label="b >= SeqRange4[0] && b <= SeqRange4[1]", span="772-772"];
m4_362 [cluster="Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)", file="BsonReader.cs", label="return 1;", span="762-762"];
m4_364 [cluster="Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)", file="BsonReader.cs", label="return 2;", span="766-766"];
m4_366 [cluster="Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)", file="BsonReader.cs", label="return 3;", span="770-770"];
m4_368 [cluster="Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)", file="BsonReader.cs", label="return 4;", span="774-774"];
m4_369 [cluster="Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)", file="BsonReader.cs", label="return 0;", span="776-776"];
m4_370 [cluster="Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)", span="758-758"];
m4_67 [cluster="Newtonsoft.Json.JsonReader.Close()", file="BsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.Close()", span="1133-1133"];
m4_130 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadBytes(int)", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadBytes(int)", span="821-821"];
m4_396 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadBytes(int)", file="BsonReader.cs", label="MovePosition(count)", span="823-823"];
m4_397 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadBytes(int)", file="BsonReader.cs", label="return _reader.ReadBytes(count);", span="824-824"];
m4_398 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadBytes(int)", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadBytes(int)", span="821-821"];
m4_18 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.BinaryReader, bool, System.DateTimeKind)", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.BinaryReader, bool, System.DateTimeKind)", span="160-160"];
m4_19 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.BinaryReader, bool, System.DateTimeKind)", file="BsonReader.cs", label="ValidationUtils.ArgumentNotNull(reader, nameof(reader))", span="162-162"];
m4_20 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.BinaryReader, bool, System.DateTimeKind)", file="BsonReader.cs", label="_reader = reader", span="163-163"];
m4_22 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.BinaryReader, bool, System.DateTimeKind)", file="BsonReader.cs", label="_readRootValueAsArray = readRootValueAsArray", span="165-165"];
m4_23 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.BinaryReader, bool, System.DateTimeKind)", file="BsonReader.cs", label="_dateTimeKindHandling = dateTimeKindHandling", span="166-166"];
m4_21 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.BinaryReader, bool, System.DateTimeKind)", file="BsonReader.cs", label="_stack = new List<ContainerContext>()", span="164-164"];
m4_24 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.BinaryReader, bool, System.DateTimeKind)", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.BinaryReader, bool, System.DateTimeKind)", span="160-160"];
m4_269 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", file="BsonReader.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", span="0-0"];
m4_7 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream, bool, System.DateTimeKind)", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream, bool, System.DateTimeKind)", span="145-145"];
m4_8 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream, bool, System.DateTimeKind)", file="BsonReader.cs", label="ValidationUtils.ArgumentNotNull(stream, nameof(stream))", span="147-147"];
m4_9 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream, bool, System.DateTimeKind)", file="BsonReader.cs", label="_reader = new BinaryReader(stream)", span="148-148"];
m4_11 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream, bool, System.DateTimeKind)", file="BsonReader.cs", label="_readRootValueAsArray = readRootValueAsArray", span="150-150"];
m4_12 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream, bool, System.DateTimeKind)", file="BsonReader.cs", label="_dateTimeKindHandling = dateTimeKindHandling", span="151-151"];
m4_10 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream, bool, System.DateTimeKind)", file="BsonReader.cs", label="_stack = new List<ContainerContext>()", span="149-149"];
m4_13 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream, bool, System.DateTimeKind)", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream, bool, System.DateTimeKind)", span="145-145"];
m4_180 [cluster="Newtonsoft.Json.Bson.BsonReader.MovePosition(int)", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.MovePosition(int)", span="816-816"];
m4_394 [cluster="Newtonsoft.Json.Bson.BsonReader.MovePosition(int)", file="BsonReader.cs", label="_currentContext.Position += count", span="818-818"];
m4_395 [cluster="Newtonsoft.Json.Bson.BsonReader.MovePosition(int)", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.MovePosition(int)", span="816-816"];
m4_190 [cluster="System.Collections.Generic.List<T>.Add(T)", file="BsonReader.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m4_32 [cluster="Newtonsoft.Json.Bson.BsonReader.Read()", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.Read()", span="182-182"];
m4_33 [cluster="Newtonsoft.Json.Bson.BsonReader.Read()", file="BsonReader.cs", label="bool success", span="186-186"];
m4_34 [cluster="Newtonsoft.Json.Bson.BsonReader.Read()", file="BsonReader.cs", label=_bsonReaderState, span="188-188"];
m4_35 [cluster="Newtonsoft.Json.Bson.BsonReader.Read()", file="BsonReader.cs", label="BsonReaderState.Normal", span="190-190"];
m4_37 [cluster="Newtonsoft.Json.Bson.BsonReader.Read()", file="BsonReader.cs", label="BsonReaderState.ReferenceStart", span="193-193"];
m4_41 [cluster="Newtonsoft.Json.Bson.BsonReader.Read()", file="BsonReader.cs", label="BsonReaderState.CodeWScopeStart", span="198-198"];
m4_47 [cluster="Newtonsoft.Json.Bson.BsonReader.Read()", file="BsonReader.cs", label="throw JsonReaderException.Create(this, ''Unexpected state: {0}''.FormatWith(CultureInfo.InvariantCulture, _bsonReaderState));", span="206-206"];
m4_36 [cluster="Newtonsoft.Json.Bson.BsonReader.Read()", file="BsonReader.cs", label="success = ReadNormal()", span="191-191"];
m4_38 [cluster="Newtonsoft.Json.Bson.BsonReader.Read()", file="BsonReader.cs", label="BsonReaderState.ReferenceRef", span="194-194"];
m4_39 [cluster="Newtonsoft.Json.Bson.BsonReader.Read()", file="BsonReader.cs", label="BsonReaderState.ReferenceId", span="195-195"];
m4_40 [cluster="Newtonsoft.Json.Bson.BsonReader.Read()", file="BsonReader.cs", label="success = ReadReference()", span="196-196"];
m4_42 [cluster="Newtonsoft.Json.Bson.BsonReader.Read()", file="BsonReader.cs", label="BsonReaderState.CodeWScopeCode", span="199-199"];
m4_43 [cluster="Newtonsoft.Json.Bson.BsonReader.Read()", file="BsonReader.cs", label="BsonReaderState.CodeWScopeScope", span="200-200"];
m4_44 [cluster="Newtonsoft.Json.Bson.BsonReader.Read()", file="BsonReader.cs", label="BsonReaderState.CodeWScopeScopeObject", span="201-201"];
m4_45 [cluster="Newtonsoft.Json.Bson.BsonReader.Read()", file="BsonReader.cs", label="BsonReaderState.CodeWScopeScopeEnd", span="202-202"];
m4_46 [cluster="Newtonsoft.Json.Bson.BsonReader.Read()", file="BsonReader.cs", label="success = ReadCodeWScope()", span="203-203"];
m4_48 [cluster="Newtonsoft.Json.Bson.BsonReader.Read()", file="BsonReader.cs", label="!success", span="209-209"];
m4_49 [cluster="Newtonsoft.Json.Bson.BsonReader.Read()", file="BsonReader.cs", label="SetToken(JsonToken.None)", span="211-211"];
m4_51 [cluster="Newtonsoft.Json.Bson.BsonReader.Read()", file="BsonReader.cs", label="return true;", span="215-215"];
m4_50 [cluster="Newtonsoft.Json.Bson.BsonReader.Read()", file="BsonReader.cs", label="return false;", span="212-212"];
m4_52 [cluster="Newtonsoft.Json.Bson.BsonReader.Read()", file="BsonReader.cs", label=EndOfStreamException, span="217-217"];
m4_53 [cluster="Newtonsoft.Json.Bson.BsonReader.Read()", file="BsonReader.cs", label="SetToken(JsonToken.None)", span="219-219"];
m4_54 [cluster="Newtonsoft.Json.Bson.BsonReader.Read()", file="BsonReader.cs", label="return false;", span="220-220"];
m4_55 [cluster="Newtonsoft.Json.Bson.BsonReader.Read()", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.Read()", span="182-182"];
m4_14 [cluster="Unk.nameof", file="BsonReader.cs", label="Entry Unk.nameof", span=""];
m4_304 [cluster="Newtonsoft.Json.Bson.BsonReader.EnsureBuffers()", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.EnsureBuffers()", span="779-779"];
m4_371 [cluster="Newtonsoft.Json.Bson.BsonReader.EnsureBuffers()", file="BsonReader.cs", label="_byteBuffer == null", span="781-781"];
m4_372 [cluster="Newtonsoft.Json.Bson.BsonReader.EnsureBuffers()", file="BsonReader.cs", label="_byteBuffer = new byte[MaxCharBytesSize]", span="783-783"];
m4_373 [cluster="Newtonsoft.Json.Bson.BsonReader.EnsureBuffers()", file="BsonReader.cs", label="_charBuffer == null", span="785-785"];
m4_374 [cluster="Newtonsoft.Json.Bson.BsonReader.EnsureBuffers()", file="BsonReader.cs", label="int charBufferSize = Encoding.UTF8.GetMaxCharCount(MaxCharBytesSize)", span="787-787"];
m4_375 [cluster="Newtonsoft.Json.Bson.BsonReader.EnsureBuffers()", file="BsonReader.cs", label="_charBuffer = new char[charBufferSize]", span="788-788"];
m4_376 [cluster="Newtonsoft.Json.Bson.BsonReader.EnsureBuffers()", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.EnsureBuffers()", span="779-779"];
m4_104 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", file="BsonReader.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", span="0-0"];
m4_262 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadBinary(out Newtonsoft.Json.Bson.BsonBinaryType)", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadBinary(out Newtonsoft.Json.Bson.BsonBinaryType)", span="563-563"];
m4_270 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadBinary(out Newtonsoft.Json.Bson.BsonBinaryType)", file="BsonReader.cs", label="int dataLength = ReadInt32()", span="565-565"];
m4_271 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadBinary(out Newtonsoft.Json.Bson.BsonBinaryType)", file="BsonReader.cs", label="binaryType = (BsonBinaryType)ReadByte()", span="567-567"];
m4_274 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadBinary(out Newtonsoft.Json.Bson.BsonBinaryType)", file="BsonReader.cs", label="return ReadBytes(dataLength);", span="577-577"];
m4_272 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadBinary(out Newtonsoft.Json.Bson.BsonBinaryType)", file="BsonReader.cs", label="binaryType == BsonBinaryType.BinaryOld && !_jsonNet35BinaryCompatibility", span="571-571"];
m4_273 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadBinary(out Newtonsoft.Json.Bson.BsonBinaryType)", file="BsonReader.cs", label="dataLength = ReadInt32()", span="573-573"];
m4_275 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadBinary(out Newtonsoft.Json.Bson.BsonBinaryType)", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadBinary(out Newtonsoft.Json.Bson.BsonBinaryType)", span="563-563"];
m4_62 [cluster="Newtonsoft.Json.Bson.BsonReader.Close()", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.Close()", span="228-228"];
m4_63 [cluster="Newtonsoft.Json.Bson.BsonReader.Close()", file="BsonReader.cs", label="base.Close()", span="230-230"];
m4_64 [cluster="Newtonsoft.Json.Bson.BsonReader.Close()", file="BsonReader.cs", label=CloseInput, span="232-232"];
m4_65 [cluster="Newtonsoft.Json.Bson.BsonReader.Close()", file="BsonReader.cs", label="_reader?.Close()", span="235-235"];
m4_66 [cluster="Newtonsoft.Json.Bson.BsonReader.Close()", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.Close()", span="228-228"];
m4_56 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadNormal()", span="342-342"];
m4_131 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label=CurrentState, span="344-344"];
m4_132 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="State.Start", span="346-346"];
m4_140 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="State.Complete", span="357-357"];
m4_143 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="State.Property", span="360-360"];
m4_146 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="State.ObjectStart", span="365-365"];
m4_170 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="State.ConstructorStart", span="411-411"];
m4_171 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="State.Constructor", span="413-413"];
m4_172 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="State.Error", span="415-415"];
m4_173 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="State.Finished", span="417-417"];
m4_174 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="throw new ArgumentOutOfRangeException();", span="420-420"];
m4_133 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="JsonToken token = (!_readRootValueAsArray) ? JsonToken.StartObject : JsonToken.StartArray", span="348-348"];
m4_134 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="BsonType type = (!_readRootValueAsArray) ? BsonType.Object : BsonType.Array", span="349-349"];
m4_135 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="SetToken(token)", span="351-351"];
m4_136 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="ContainerContext newContext = new ContainerContext(type)", span="352-352"];
m4_137 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="PushContext(newContext)", span="353-353"];
m4_138 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="newContext.Length = ReadInt32()", span="354-354"];
m4_139 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="return true;", span="355-355"];
m4_141 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="State.Closed", span="358-358"];
m4_142 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="return false;", span="359-359"];
m4_144 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="ReadType(_currentElementType)", span="362-362"];
m4_145 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="return true;", span="363-363"];
m4_147 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="State.ArrayStart", span="366-366"];
m4_148 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="State.PostValue", span="367-367"];
m4_149 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="ContainerContext context = _currentContext", span="368-368"];
m4_150 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="context == null", span="369-369"];
m4_152 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="int lengthMinusEnd = context.Length - 1", span="374-374"];
m4_153 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="context.Position < lengthMinusEnd", span="376-376"];
m4_154 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="context.Type == BsonType.Array", span="378-378"];
m4_160 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="context.Position == lengthMinusEnd", span="390-390"];
m4_165 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="MovePosition(context.Length)", span="400-400"];
m4_166 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="JsonToken endToken = (context.Type == BsonType.Object) ? JsonToken.EndObject : JsonToken.EndArray", span="403-403"];
m4_151 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="return false;", span="371-371"];
m4_155 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="ReadElement()", span="380-380"];
m4_158 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="SetToken(JsonToken.PropertyName, ReadElement())", span="386-386"];
m4_156 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="ReadType(_currentElementType)", span="381-381"];
m4_157 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="return true;", span="382-382"];
m4_159 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="return true;", span="387-387"];
m4_161 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="ReadByte() != 0", span="392-392"];
m4_169 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="throw JsonReaderException.Create(this, ''Read past end of current container context.'');", span="409-409"];
m4_162 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="throw JsonReaderException.Create(this, ''Unexpected end of object byte value.'');", span="394-394"];
m4_163 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="PopContext()", span="397-397"];
m4_164 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="_currentContext != null", span="398-398"];
m4_167 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="SetToken(endToken)", span="404-404"];
m4_168 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="return true;", span="405-405"];
m4_175 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="return false;", span="423-423"];
m4_176 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadNormal()", span="342-342"];
m4_265 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInt64()", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadInt64()", span="804-804"];
m4_386 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInt64()", file="BsonReader.cs", label="MovePosition(8)", span="806-806"];
m4_387 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInt64()", file="BsonReader.cs", label="return _reader.ReadInt64();", span="807-807"];
m4_388 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInt64()", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadInt64()", span="804-804"];
m4_260 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadDouble()", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadDouble()", span="792-792"];
m4_378 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadDouble()", file="BsonReader.cs", label="MovePosition(8)", span="794-794"];
m4_379 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadDouble()", file="BsonReader.cs", label="return _reader.ReadDouble();", span="795-795"];
m4_380 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadDouble()", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadDouble()", span="792-792"];
m4_306 [cluster="string.String(char[], int, int)", file="BsonReader.cs", label="Entry string.String(char[], int, int)", span="0-0"];
m4_381 [cluster="System.IO.BinaryReader.ReadDouble()", file="BsonReader.cs", label="Entry System.IO.BinaryReader.ReadDouble()", span="0-0"];
m4_103 [cluster="Newtonsoft.Json.Bson.BsonReader.PushContext(Newtonsoft.Json.Bson.BsonReader.ContainerContext)", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.PushContext(Newtonsoft.Json.Bson.BsonReader.ContainerContext)", span="439-439"];
m4_187 [cluster="Newtonsoft.Json.Bson.BsonReader.PushContext(Newtonsoft.Json.Bson.BsonReader.ContainerContext)", file="BsonReader.cs", label="_stack.Add(newContext)", span="441-441"];
m4_188 [cluster="Newtonsoft.Json.Bson.BsonReader.PushContext(Newtonsoft.Json.Bson.BsonReader.ContainerContext)", file="BsonReader.cs", label="_currentContext = newContext", span="442-442"];
m4_189 [cluster="Newtonsoft.Json.Bson.BsonReader.PushContext(Newtonsoft.Json.Bson.BsonReader.ContainerContext)", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.PushContext(Newtonsoft.Json.Bson.BsonReader.ContainerContext)", span="439-439"];
m4_0 [cluster="Newtonsoft.Json.Bson.BsonReader.ContainerContext.ContainerContext(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.ContainerContext.ContainerContext(Newtonsoft.Json.Bson.BsonType)", span="80-80"];
m4_1 [cluster="Newtonsoft.Json.Bson.BsonReader.ContainerContext.ContainerContext(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="Type = type", span="82-82"];
m4_2 [cluster="Newtonsoft.Json.Bson.BsonReader.ContainerContext.ContainerContext(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.ContainerContext.ContainerContext(Newtonsoft.Json.Bson.BsonType)", span="80-80"];
m4_399 [cluster="System.IO.BinaryReader.ReadBytes(int)", file="BsonReader.cs", label="Entry System.IO.BinaryReader.ReadBytes(int)", span="0-0"];
m4_57 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadReference()", span="291-291"];
m4_105 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs", label=CurrentState, span="293-293"];
m4_106 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs", label="State.ObjectStart", span="295-295"];
m4_110 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs", label="State.Property", span="301-301"];
m4_118 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs", label="State.PostValue", span="318-318"];
m4_128 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs", label="throw JsonReaderException.Create(this, ''Unexpected state when reading BSON reference: '' + CurrentState);", span="338-338"];
m4_107 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs", label="SetToken(JsonToken.PropertyName, JsonTypeReflector.RefPropertyName)", span="297-297"];
m4_108 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs", label="_bsonReaderState = BsonReaderState.ReferenceRef", span="298-298"];
m4_109 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs", label="return true;", span="299-299"];
m4_111 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs", label="_bsonReaderState == BsonReaderState.ReferenceRef", span="303-303"];
m4_112 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs", label="SetToken(JsonToken.String, ReadLengthString())", span="305-305"];
m4_114 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs", label="_bsonReaderState == BsonReaderState.ReferenceId", span="308-308"];
m4_113 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs", label="return true;", span="306-306"];
m4_115 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs", label="SetToken(JsonToken.Bytes, ReadBytes(12))", span="310-310"];
m4_117 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs", label="throw JsonReaderException.Create(this, ''Unexpected state when reading BSON reference: '' + _bsonReaderState);", span="315-315"];
m4_116 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs", label="return true;", span="311-311"];
m4_119 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs", label="_bsonReaderState == BsonReaderState.ReferenceRef", span="320-320"];
m4_120 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs", label="SetToken(JsonToken.PropertyName, JsonTypeReflector.IdPropertyName)", span="322-322"];
m4_123 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs", label="_bsonReaderState == BsonReaderState.ReferenceId", span="326-326"];
m4_121 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs", label="_bsonReaderState = BsonReaderState.ReferenceId", span="323-323"];
m4_122 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs", label="return true;", span="324-324"];
m4_124 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs", label="SetToken(JsonToken.EndObject)", span="328-328"];
m4_127 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs", label="throw JsonReaderException.Create(this, ''Unexpected state when reading BSON reference: '' + _bsonReaderState);", span="334-334"];
m4_125 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs", label="_bsonReaderState = BsonReaderState.Normal", span="329-329"];
m4_126 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs", label="return true;", span="330-330"];
m4_129 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadReference()", span="291-291"];
m4_264 [cluster="System.Convert.ToBoolean(byte)", file="BsonReader.cs", label="Entry System.Convert.ToBoolean(byte)", span="0-0"];
m4_58 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", span="242-242"];
m4_69 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label=_bsonReaderState, span="244-244"];
m4_70 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="BsonReaderState.CodeWScopeStart", span="246-246"];
m4_74 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="BsonReaderState.CodeWScopeCode", span="250-250"];
m4_79 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="BsonReaderState.CodeWScopeScope", span="257-257"];
m4_89 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="BsonReaderState.CodeWScopeScopeObject", span="274-274"];
m4_94 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="BsonReaderState.CodeWScopeScopeEnd", span="282-282"];
m4_98 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="throw new ArgumentOutOfRangeException();", span="287-287"];
m4_71 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="SetToken(JsonToken.PropertyName, ''$code'')", span="247-247"];
m4_72 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="_bsonReaderState = BsonReaderState.CodeWScopeCode", span="248-248"];
m4_73 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="return true;", span="249-249"];
m4_75 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="ReadInt32()", span="252-252"];
m4_76 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="SetToken(JsonToken.String, ReadLengthString())", span="254-254"];
m4_77 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="_bsonReaderState = BsonReaderState.CodeWScopeScope", span="255-255"];
m4_78 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="return true;", span="256-256"];
m4_80 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="CurrentState == State.PostValue", span="258-258"];
m4_81 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="SetToken(JsonToken.PropertyName, ''$scope'')", span="260-260"];
m4_83 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="SetToken(JsonToken.StartObject)", span="265-265"];
m4_82 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="return true;", span="261-261"];
m4_84 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="_bsonReaderState = BsonReaderState.CodeWScopeScopeObject", span="266-266"];
m4_85 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="ContainerContext newContext = new ContainerContext(BsonType.Object)", span="268-268"];
m4_86 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="PushContext(newContext)", span="269-269"];
m4_87 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="newContext.Length = ReadInt32()", span="270-270"];
m4_88 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="return true;", span="272-272"];
m4_90 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="bool result = ReadNormal()", span="275-275"];
m4_91 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="result && TokenType == JsonToken.EndObject", span="276-276"];
m4_93 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="return result;", span="281-281"];
m4_92 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="_bsonReaderState = BsonReaderState.CodeWScopeScopeEnd", span="278-278"];
m4_95 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="SetToken(JsonToken.EndObject)", span="283-283"];
m4_96 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="_bsonReaderState = BsonReaderState.Normal", span="284-284"];
m4_97 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="return true;", span="285-285"];
m4_99 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", span="242-242"];
m4_310 [cluster="System.Array.Copy(System.Array, int, System.Array, int, int)", file="BsonReader.cs", label="Entry System.Array.Copy(System.Array, int, System.Array, int, int)", span="0-0"];
m4_15 [cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="BsonReader.cs", label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="31-31"];
m4_377 [cluster="System.Text.Encoding.GetMaxCharCount(int)", file="BsonReader.cs", label="Entry System.Text.Encoding.GetMaxCharCount(int)", span="0-0"];
m4_318 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.GetString(int)", span="656-656"];
m4_319 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="length == 0", span="658-658"];
m4_325 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="int count = ((length - totalBytesRead) > MaxCharBytesSize - offset)\r\n                    ? MaxCharBytesSize - offset\r\n                    : length - totalBytesRead", span="673-675"];
m4_331 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="byteCount == length", span="690-690"];
m4_336 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="builder = new StringBuilder(length)", span="703-703"];
m4_343 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="totalBytesRead < length", span="720-720"];
m4_320 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="return string.Empty;", span="660-660"];
m4_321 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="EnsureBuffers()", span="663-663"];
m4_322 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="StringBuilder builder = null", span="665-665"];
m4_323 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="int totalBytesRead = 0", span="667-667"];
m4_335 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="builder == null", span="701-701"];
m4_338 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="builder.Append(_charBuffer, 0, charCount)", span="707-707"];
m4_344 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="return builder.ToString();", span="722-722"];
m4_324 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="int offset = 0", span="670-670"];
m4_329 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="totalBytesRead += byteCount", span="684-684"];
m4_326 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="int byteCount = _reader.Read(_byteBuffer, offset, count)", span="677-677"];
m4_330 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="byteCount += offset", span="688-688"];
m4_327 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="byteCount == 0", span="679-679"];
m4_328 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="throw new EndOfStreamException(''Unable to read beyond the end of the stream.'');", span="681-681"];
m4_332 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="int charCount = Encoding.UTF8.GetChars(_byteBuffer, 0, byteCount, _charBuffer, 0)", span="694-694"];
m4_334 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="int lastFullCharStop = GetLastFullCharStop(byteCount - 1)", span="699-699"];
m4_339 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="lastFullCharStop < byteCount - 1", span="709-709"];
m4_340 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="offset = byteCount - lastFullCharStop - 1", span="711-711"];
m4_333 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="return new string(_charBuffer, 0, charCount);", span="695-695"];
m4_337 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="int charCount = Encoding.UTF8.GetChars(_byteBuffer, 0, lastFullCharStop + 1, _charBuffer, 0)", span="706-706"];
m4_341 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="Array.Copy(_byteBuffer, lastFullCharStop + 1, _byteBuffer, 0, offset)", span="713-713"];
m4_342 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="offset = 0", span="717-717"];
m4_345 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.GetString(int)", span="656-656"];
m4_308 [cluster="System.Text.StringBuilder.StringBuilder(int)", file="BsonReader.cs", label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0"];
m4_311 [cluster="System.Text.StringBuilder.ToString()", file="BsonReader.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m4_60 [cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", file="BsonReader.cs", label="Entry Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", span="108-108"];
m4_31 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadString()", span="580-580"];
m4_276 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="EnsureBuffers()", span="582-582"];
m4_277 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="StringBuilder builder = null", span="584-584"];
m4_278 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="int totalBytesRead = 0", span="586-586"];
m4_287 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="count < MaxCharBytesSize && builder == null", span="600-600"];
m4_293 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="builder == null", span="616-616"];
m4_295 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="builder.Append(_charBuffer, 0, charCount)", span="621-621"];
m4_301 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="return builder.ToString();", span="635-635"];
m4_279 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="int offset = 0", span="588-588"];
m4_286 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="totalBytesRead += byteCount", span="598-598"];
m4_280 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label=true, span="589-589"];
m4_281 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="int count = offset", span="591-591"];
m4_285 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="int byteCount = count - offset", span="597-597"];
m4_282 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="byte b", span="592-592"];
m4_283 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="count < MaxCharBytesSize && (b = _reader.ReadByte()) > 0", span="593-593"];
m4_284 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="_byteBuffer[count++] = b", span="595-595"];
m4_291 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="int lastFullCharStop = GetLastFullCharStop(count - 1)", span="612-612"];
m4_299 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="count < MaxCharBytesSize", span="632-632"];
m4_288 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="int length = Encoding.UTF8.GetChars(_byteBuffer, 0, byteCount, _charBuffer, 0)", span="604-604"];
m4_296 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="lastFullCharStop < byteCount - 1", span="623-623"];
m4_297 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="offset = byteCount - lastFullCharStop - 1", span="625-625"];
m4_289 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="MovePosition(totalBytesRead + 1)", span="606-606"];
m4_300 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="MovePosition(totalBytesRead + 1)", span="634-634"];
m4_290 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="return new string(_charBuffer, 0, length);", span="607-607"];
m4_292 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="int charCount = Encoding.UTF8.GetChars(_byteBuffer, 0, lastFullCharStop + 1, _charBuffer, 0)", span="614-614"];
m4_298 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="Array.Copy(_byteBuffer, lastFullCharStop + 1, _byteBuffer, 0, offset)", span="627-627"];
m4_294 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="builder = new StringBuilder(MaxCharBytesSize * 2)", span="618-618"];
m4_302 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="offset = 0", span="638-638"];
m4_303 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadString()", span="580-580"];
m4_178 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadByte()", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadByte()", span="445-445"];
m4_191 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadByte()", file="BsonReader.cs", label="MovePosition(1)", span="447-447"];
m4_192 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadByte()", file="BsonReader.cs", label="return _reader.ReadByte();", span="448-448"];
m4_193 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadByte()", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadByte()", span="445-445"];
m4_266 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ConvertJavaScriptTicksToDateTime(long)", file="BsonReader.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.ConvertJavaScriptTicksToDateTime(long)", span="205-205"];
m4_346 [cluster="System.IO.BinaryReader.Read(byte[], int, int)", file="BsonReader.cs", label="Entry System.IO.BinaryReader.Read(byte[], int, int)", span="0-0"];
m4_307 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", span="725-725"];
m4_348 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", file="BsonReader.cs", label="int lookbackPos = start", span="727-727"];
m4_356 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", file="BsonReader.cs", label="bis == start - lookbackPos", span="747-747"];
m4_357 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", file="BsonReader.cs", label="return start;", span="750-750"];
m4_349 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", file="BsonReader.cs", label="int bis = 0", span="728-728"];
m4_350 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", file="BsonReader.cs", label="lookbackPos >= 0", span="729-729"];
m4_351 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", file="BsonReader.cs", label="bis = BytesInSequence(_byteBuffer[lookbackPos])", span="731-731"];
m4_353 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", file="BsonReader.cs", label="lookbackPos--", span="734-734"];
m4_355 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", file="BsonReader.cs", label="lookbackPos--", span="743-743"];
m4_358 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", file="BsonReader.cs", label="return lookbackPos;", span="754-754"];
m4_352 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", file="BsonReader.cs", label="bis == 0", span="732-732"];
m4_354 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", file="BsonReader.cs", label="bis == 1", span="737-737"];
m4_359 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", span="725-725"];
m4_179 [cluster="Newtonsoft.Json.Bson.BsonReader.PopContext()", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.PopContext()", span="426-426"];
m4_181 [cluster="Newtonsoft.Json.Bson.BsonReader.PopContext()", file="BsonReader.cs", label="_stack.RemoveAt(_stack.Count - 1)", span="428-428"];
m4_182 [cluster="Newtonsoft.Json.Bson.BsonReader.PopContext()", file="BsonReader.cs", label="_stack.Count == 0", span="429-429"];
m4_183 [cluster="Newtonsoft.Json.Bson.BsonReader.PopContext()", file="BsonReader.cs", label="_currentContext = null", span="431-431"];
m4_184 [cluster="Newtonsoft.Json.Bson.BsonReader.PopContext()", file="BsonReader.cs", label="_currentContext = _stack[_stack.Count - 1]", span="435-435"];
m4_185 [cluster="Newtonsoft.Json.Bson.BsonReader.PopContext()", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.PopContext()", span="426-426"];
m4_263 [cluster="System.Guid.Guid(byte[])", file="BsonReader.cs", label="Entry System.Guid.Guid(byte[])", span="0-0"];
m4_59 [cluster="string.FormatWith(System.IFormatProvider, object)", file="BsonReader.cs", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
m4_400 [file="BsonReader.cs", label="Newtonsoft.Json.Bson.BsonReader.ContainerContext", span=""];
m4_401 [file="BsonReader.cs", label="Newtonsoft.Json.Bson.BsonReader", span=""];
m5_101 [cluster="Unk.>", file="BsonWriter.cs", label="Entry Unk.>", span=""];
m5_15 [cluster="System.Console.ReadKey()", file="BsonWriter.cs", label="Entry System.Console.ReadKey()", span="0-0"];
m5_0 [cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="BsonWriter.cs", label="Entry Newtonsoft.Json.TestConsole.Program.Main(string[])", span="40-40"];
m5_1 [cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="BsonWriter.cs", label="Console.WriteLine(''Json.NET Test Console'')", span="42-42"];
m5_2 [cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="BsonWriter.cs", label="string version = FileVersionInfo.GetVersionInfo(typeof (JsonConvert).Assembly.Location).FileVersion", span="44-44"];
m5_3 [cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="BsonWriter.cs", label="Console.WriteLine(''Json.NET Version: '' + version)", span="45-45"];
m5_4 [cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="BsonWriter.cs", label="Console.ReadKey()", span="46-46"];
m5_5 [cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="BsonWriter.cs", label="Console.WriteLine(''Doing stuff...'')", span="48-48"];
m5_6 [cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="BsonWriter.cs", label="DiscriminatedUnionConverterTests t = new DiscriminatedUnionConverterTests()", span="58-58"];
m5_7 [cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="BsonWriter.cs", label="t.SerializePerformance()", span="59-59"];
m5_8 [cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="BsonWriter.cs", label="Console.WriteLine()", span="61-61"];
m5_9 [cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="BsonWriter.cs", label="Console.WriteLine(''Finished'')", span="62-62"];
m5_10 [cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="BsonWriter.cs", label="Console.WriteLine(''Press any key to exit'')", span="63-63"];
m5_11 [cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="BsonWriter.cs", label="Console.ReadKey()", span="64-64"];
m5_12 [cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="BsonWriter.cs", label="Exit Newtonsoft.Json.TestConsole.Program.Main(string[])", span="40-40"];
m5_19 [cluster="Newtonsoft.Json.TestConsole.Program.DeserializeJson()", file="BsonWriter.cs", label="Entry Newtonsoft.Json.TestConsole.Program.DeserializeJson()", span="67-67"];
m5_20 [cluster="Newtonsoft.Json.TestConsole.Program.DeserializeJson()", file="BsonWriter.cs", label="PerformanceTests t = new PerformanceTests()", span="69-69"];
m5_21 [cluster="Newtonsoft.Json.TestConsole.Program.DeserializeJson()", file="BsonWriter.cs", label="t.Iterations = 50000", span="70-70"];
m5_22 [cluster="Newtonsoft.Json.TestConsole.Program.DeserializeJson()", file="BsonWriter.cs", label="t.Deserialize()", span="71-71"];
m5_23 [cluster="Newtonsoft.Json.TestConsole.Program.DeserializeJson()", file="BsonWriter.cs", label="Exit Newtonsoft.Json.TestConsole.Program.DeserializeJson()", span="67-67"];
m5_100 [cluster="JavaScriptSerializer.cstr", file="BsonWriter.cs", label="Entry JavaScriptSerializer.cstr", span=""];
m5_30 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeLargeJson()", file="BsonWriter.cs", label="Entry Newtonsoft.Json.Tests.PerformanceTests.DeserializeLargeJson()", span="182-182"];
m5_24 [cluster="Newtonsoft.Json.Tests.PerformanceTests.PerformanceTests()", file="BsonWriter.cs", label="Entry Newtonsoft.Json.Tests.PerformanceTests.PerformanceTests()", span="66-66"];
m5_77 [cluster="System.IO.File.OpenText(string)", file="BsonWriter.cs", label="Entry System.IO.File.OpenText(string)", span="0-0"];
m5_54 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="BsonWriter.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="433-433"];
m5_31 [cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="BsonWriter.cs", label="Entry Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", span="80-80"];
m5_32 [cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="BsonWriter.cs", label="var json = System.IO.File.ReadAllText(''large.json'')", span="82-82"];
m5_33 [cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="BsonWriter.cs", label="IList<PerformanceTests.RootObject> o = JsonConvert.DeserializeObject<IList<PerformanceTests.RootObject>>(json)", span="84-84"];
m5_34 [cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="BsonWriter.cs", label="Console.WriteLine(''Press any key to start serialize'')", span="86-86"];
m5_44 [cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="BsonWriter.cs", label="serializer.Serialize(file, o)", span="99-99"];
m5_35 [cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="BsonWriter.cs", label="Console.ReadKey()", span="87-87"];
m5_36 [cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="BsonWriter.cs", label="Console.WriteLine(''Serializing...'')", span="88-88"];
m5_37 [cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="BsonWriter.cs", label="Stopwatch sw = new Stopwatch()", span="90-90"];
m5_38 [cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="BsonWriter.cs", label="sw.Start()", span="91-91"];
m5_46 [cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="BsonWriter.cs", label="sw.Stop()", span="103-103"];
m5_47 [cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="BsonWriter.cs", label="Console.WriteLine(''Finished. Total seconds: '' + sw.Elapsed.TotalSeconds)", span="105-105"];
m5_39 [cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="BsonWriter.cs", label="int i = 0", span="93-93"];
m5_40 [cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="BsonWriter.cs", label="i < 10", span="93-93"];
m5_45 [cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="BsonWriter.cs", label="i++", span="93-93"];
m5_41 [cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="BsonWriter.cs", label="StreamWriter file = System.IO.File.CreateText(''largewrite.json'')", span="95-95"];
m5_42 [cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="BsonWriter.cs", label="JsonSerializer serializer = new JsonSerializer()", span="97-97"];
m5_43 [cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="BsonWriter.cs", label="serializer.Formatting = Formatting.Indented", span="98-98"];
m5_48 [cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="BsonWriter.cs", label="Exit Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", span="80-80"];
m5_80 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="BsonWriter.cs", label="Entry Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", span="139-139"];
m5_81 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="BsonWriter.cs", label="string json = System.IO.File.ReadAllText(''large.json'')", span="141-141"];
m5_82 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="BsonWriter.cs", label="JavaScriptSerializer s = new JavaScriptSerializer()", span="143-143"];
m5_84 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="BsonWriter.cs", label="s.Deserialize<IList<PerformanceTests.RootObject>>(json)", span="145-145"];
m5_83 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="BsonWriter.cs", label="s.MaxJsonLength = int.MaxValue", span="144-144"];
m5_85 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="BsonWriter.cs", label="Console.WriteLine(''Press any key to start deserialization'')", span="147-147"];
m5_86 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="BsonWriter.cs", label="Console.ReadKey()", span="148-148"];
m5_87 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="BsonWriter.cs", label="Console.WriteLine(''Deserializing...'')", span="149-149"];
m5_88 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="BsonWriter.cs", label="Stopwatch sw = new Stopwatch()", span="151-151"];
m5_89 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="BsonWriter.cs", label="sw.Start()", span="152-152"];
m5_97 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="BsonWriter.cs", label="sw.Stop()", span="163-163"];
m5_98 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="BsonWriter.cs", label="Console.WriteLine(''Finished. Total seconds: '' + sw.Elapsed.TotalSeconds)", span="165-165"];
m5_90 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="BsonWriter.cs", label="int i = 0", span="154-154"];
m5_91 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="BsonWriter.cs", label="i < 5", span="154-154"];
m5_96 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="BsonWriter.cs", label="i++", span="154-154"];
m5_92 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="BsonWriter.cs", label="json = System.IO.File.ReadAllText(''large.json'')", span="156-156"];
m5_93 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="BsonWriter.cs", label="s = new JavaScriptSerializer()", span="158-158"];
m5_95 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="BsonWriter.cs", label="s.Deserialize<IList<PerformanceTests.RootObject>>(json)", span="160-160"];
m5_94 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="BsonWriter.cs", label="s.MaxJsonLength = int.MaxValue", span="159-159"];
m5_99 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="BsonWriter.cs", label="Exit Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", span="139-139"];
m5_13 [cluster="System.Console.WriteLine(string)", file="BsonWriter.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m5_25 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize()", file="BsonWriter.cs", label="Entry Newtonsoft.Json.Tests.PerformanceTests.Deserialize()", span="219-219"];
m5_53 [cluster="System.IO.File.CreateText(string)", file="BsonWriter.cs", label="Entry System.IO.File.CreateText(string)", span="0-0"];
m5_17 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializePerformance()", file="BsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializePerformance()", span="90-90"];
m5_49 [cluster="System.IO.File.ReadAllText(string)", file="BsonWriter.cs", label="Entry System.IO.File.ReadAllText(string)", span="0-0"];
m5_16 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DiscriminatedUnionConverterTests()", file="BsonWriter.cs", label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DiscriminatedUnionConverterTests()", span="41-41"];
m5_50 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="BsonWriter.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="739-739"];
m5_14 [cluster="System.Diagnostics.FileVersionInfo.GetVersionInfo(string)", file="BsonWriter.cs", label="Entry System.Diagnostics.FileVersionInfo.GetVersionInfo(string)", span="0-0"];
m5_79 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", file="BsonWriter.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", span="674-674"];
m5_52 [cluster="System.Diagnostics.Stopwatch.Start()", file="BsonWriter.cs", label="Entry System.Diagnostics.Stopwatch.Start()", span="0-0"];
m5_55 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", file="BsonWriter.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", span="817-817"];
m5_78 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="BsonWriter.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="72-72"];
m5_26 [cluster="Newtonsoft.Json.TestConsole.Program.DeserializeLargeJson()", file="BsonWriter.cs", label="Entry Newtonsoft.Json.TestConsole.Program.DeserializeLargeJson()", span="74-74"];
m5_27 [cluster="Newtonsoft.Json.TestConsole.Program.DeserializeLargeJson()", file="BsonWriter.cs", label="PerformanceTests t = new PerformanceTests()", span="76-76"];
m5_28 [cluster="Newtonsoft.Json.TestConsole.Program.DeserializeLargeJson()", file="BsonWriter.cs", label="t.DeserializeLargeJson()", span="77-77"];
m5_29 [cluster="Newtonsoft.Json.TestConsole.Program.DeserializeLargeJson()", file="BsonWriter.cs", label="Exit Newtonsoft.Json.TestConsole.Program.DeserializeLargeJson()", span="74-74"];
m5_51 [cluster="System.Diagnostics.Stopwatch.Stopwatch()", file="BsonWriter.cs", label="Entry System.Diagnostics.Stopwatch.Stopwatch()", span="0-0"];
m5_57 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="BsonWriter.cs", label="Entry Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", span="108-108"];
m5_58 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="BsonWriter.cs", label="var jsonFile = System.IO.File.OpenText(''large.json'')", span="110-110"];
m5_59 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="BsonWriter.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(jsonFile)", span="111-111"];
m5_60 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="BsonWriter.cs", label="JsonSerializer serializer = new JsonSerializer()", span="113-113"];
m5_61 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="BsonWriter.cs", label="serializer.Deserialize<IList<PerformanceTests.RootObject>>(jsonTextReader)", span="114-114"];
m5_62 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="BsonWriter.cs", label="Console.WriteLine(''Press any key to start deserialization'')", span="117-117"];
m5_63 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="BsonWriter.cs", label="Console.ReadKey()", span="118-118"];
m5_64 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="BsonWriter.cs", label="Console.WriteLine(''Deserializing...'')", span="119-119"];
m5_65 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="BsonWriter.cs", label="Stopwatch sw = new Stopwatch()", span="121-121"];
m5_66 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="BsonWriter.cs", label="sw.Start()", span="122-122"];
m5_74 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="BsonWriter.cs", label="sw.Stop()", span="134-134"];
m5_75 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="BsonWriter.cs", label="Console.WriteLine(''Finished. Total seconds: '' + sw.Elapsed.TotalSeconds)", span="136-136"];
m5_67 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="BsonWriter.cs", label="int i = 0", span="124-124"];
m5_68 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="BsonWriter.cs", label="i < 5", span="124-124"];
m5_73 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="BsonWriter.cs", label="i++", span="124-124"];
m5_69 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="BsonWriter.cs", label="var jsonFile = System.IO.File.OpenText(''large.json'')", span="126-126"];
m5_70 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="BsonWriter.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(jsonFile)", span="127-127"];
m5_71 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="BsonWriter.cs", label="JsonSerializer serializer = new JsonSerializer()", span="129-129"];
m5_72 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="BsonWriter.cs", label="serializer.Deserialize<IList<PerformanceTests.RootObject>>(jsonTextReader)", span="130-130"];
m5_76 [cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="BsonWriter.cs", label="Exit Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", span="108-108"];
m5_56 [cluster="System.Diagnostics.Stopwatch.Stop()", file="BsonWriter.cs", label="Entry System.Diagnostics.Stopwatch.Stop()", span="0-0"];
m5_18 [cluster="System.Console.WriteLine()", file="BsonWriter.cs", label="Entry System.Console.WriteLine()", span="0-0"];
m6_8 [cluster="System.Console.WriteLine(string)", file="CollectionUtils.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m6_22 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.AddAnnotation_MultipleOfDifferentTypes()", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Tests.Linq.AnnotationsTests.AddAnnotation_MultipleOfDifferentTypes()", span="54-54"];
m6_26 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.AddAnnotation_MultipleOfDifferentTypes()", file="CollectionUtils.cs", label="string s = o.Annotation<string>()", span="60-60"];
m6_30 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.AddAnnotation_MultipleOfDifferentTypes()", file="CollectionUtils.cs", label="Uri i = o.Annotation<Uri>()", span="66-66"];
m6_23 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.AddAnnotation_MultipleOfDifferentTypes()", file="CollectionUtils.cs", label="JObject o = new JObject()", span="56-56"];
m6_24 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.AddAnnotation_MultipleOfDifferentTypes()", file="CollectionUtils.cs", label="o.AddAnnotation(''A string!'')", span="57-57"];
m6_25 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.AddAnnotation_MultipleOfDifferentTypes()", file="CollectionUtils.cs", label="o.AddAnnotation(new Uri(''http://www.google.com/''))", span="58-58"];
m6_27 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.AddAnnotation_MultipleOfDifferentTypes()", file="CollectionUtils.cs", label="Assert.AreEqual(''A string!'', s)", span="61-61"];
m6_29 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.AddAnnotation_MultipleOfDifferentTypes()", file="CollectionUtils.cs", label="Assert.AreEqual(''A string!'', s)", span="64-64"];
m6_31 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.AddAnnotation_MultipleOfDifferentTypes()", file="CollectionUtils.cs", label="Assert.AreEqual(new Uri(''http://www.google.com/''), i)", span="67-67"];
m6_33 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.AddAnnotation_MultipleOfDifferentTypes()", file="CollectionUtils.cs", label="Assert.AreEqual(new Uri(''http://www.google.com/''), i)", span="70-70"];
m6_28 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.AddAnnotation_MultipleOfDifferentTypes()", file="CollectionUtils.cs", label="s = (string)o.Annotation(typeof(string))", span="63-63"];
m6_32 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.AddAnnotation_MultipleOfDifferentTypes()", file="CollectionUtils.cs", label="i = (Uri)o.Annotation(typeof(Uri))", span="69-69"];
m6_34 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.AddAnnotation_MultipleOfDifferentTypes()", file="CollectionUtils.cs", label="Exit Newtonsoft.Json.Tests.Linq.AnnotationsTests.AddAnnotation_MultipleOfDifferentTypes()", span="54-54"];
m6_62 [cluster="System.Collections.IEnumerable.Cast<TResult>()", file="CollectionUtils.cs", label="Entry System.Collections.IEnumerable.Cast<TResult>()", span="0-0"];
m6_9 [cluster="Unk.AreEqual", file="CollectionUtils.cs", label="Entry Unk.AreEqual", span=""];
m6_90 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_NonGeneric()", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_NonGeneric()", span="147-147"];
m6_94 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_NonGeneric()", file="CollectionUtils.cs", label="string s = o.Annotation<string>()", span="154-154"];
m6_91 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_NonGeneric()", file="CollectionUtils.cs", label="JObject o = new JObject()", span="149-149"];
m6_92 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_NonGeneric()", file="CollectionUtils.cs", label="o.AddAnnotation(''A string!'')", span="150-150"];
m6_95 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_NonGeneric()", file="CollectionUtils.cs", label="Assert.AreEqual(null, s)", span="155-155"];
m6_97 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_NonGeneric()", file="CollectionUtils.cs", label="Assert.AreEqual(null, s)", span="158-158"];
m6_93 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_NonGeneric()", file="CollectionUtils.cs", label="o.RemoveAnnotations(typeof(string))", span="152-152"];
m6_96 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_NonGeneric()", file="CollectionUtils.cs", label="s = (string)o.Annotation(typeof(string))", span="157-157"];
m6_98 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_NonGeneric()", file="CollectionUtils.cs", label="Exit Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_NonGeneric()", span="147-147"];
m6_133 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleCalls_NonGeneric()", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleCalls_NonGeneric()", span="214-214"];
m6_139 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleCalls_NonGeneric()", file="CollectionUtils.cs", label="string s = o.Annotation<string>()", span="223-223"];
m6_141 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleCalls_NonGeneric()", file="CollectionUtils.cs", label="Uri i = o.Annotation<Uri>()", span="226-226"];
m6_134 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleCalls_NonGeneric()", file="CollectionUtils.cs", label="JObject o = new JObject()", span="216-216"];
m6_135 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleCalls_NonGeneric()", file="CollectionUtils.cs", label="o.AddAnnotation(''A string!'')", span="217-217"];
m6_136 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleCalls_NonGeneric()", file="CollectionUtils.cs", label="o.AddAnnotation(new Uri(''http://www.google.com/''))", span="218-218"];
m6_140 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleCalls_NonGeneric()", file="CollectionUtils.cs", label="Assert.AreEqual(null, s)", span="224-224"];
m6_142 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleCalls_NonGeneric()", file="CollectionUtils.cs", label="Assert.AreEqual(null, i)", span="227-227"];
m6_138 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleCalls_NonGeneric()", file="CollectionUtils.cs", label="o.RemoveAnnotations(typeof(Uri))", span="221-221"];
m6_137 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleCalls_NonGeneric()", file="CollectionUtils.cs", label="o.RemoveAnnotations(typeof(string))", span="220-220"];
m6_143 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleCalls_NonGeneric()", file="CollectionUtils.cs", label="Exit Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleCalls_NonGeneric()", span="214-214"];
m6_36 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotation_NeverSet()", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotation_NeverSet()", span="74-74"];
m6_38 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotation_NeverSet()", file="CollectionUtils.cs", label="string s = o.Annotation<string>()", span="78-78"];
m6_37 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotation_NeverSet()", file="CollectionUtils.cs", label="JObject o = new JObject()", span="76-76"];
m6_39 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotation_NeverSet()", file="CollectionUtils.cs", label="Assert.AreEqual(null, s)", span="79-79"];
m6_41 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotation_NeverSet()", file="CollectionUtils.cs", label="Assert.AreEqual(null, s)", span="82-82"];
m6_40 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotation_NeverSet()", file="CollectionUtils.cs", label="s = (string)o.Annotation(typeof(string))", span="81-81"];
m6_42 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotation_NeverSet()", file="CollectionUtils.cs", label="Exit Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotation_NeverSet()", span="74-74"];
m6_154 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleWithDifferentTypes_NonGeneric()", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleWithDifferentTypes_NonGeneric()", span="247-247"];
m6_159 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleWithDifferentTypes_NonGeneric()", file="CollectionUtils.cs", label="string s = o.Annotation<string>()", span="255-255"];
m6_161 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleWithDifferentTypes_NonGeneric()", file="CollectionUtils.cs", label="Uri i = o.Annotation<Uri>()", span="258-258"];
m6_155 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleWithDifferentTypes_NonGeneric()", file="CollectionUtils.cs", label="JObject o = new JObject()", span="249-249"];
m6_156 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleWithDifferentTypes_NonGeneric()", file="CollectionUtils.cs", label="o.AddAnnotation(''A string!'')", span="250-250"];
m6_157 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleWithDifferentTypes_NonGeneric()", file="CollectionUtils.cs", label="o.AddAnnotation(new Uri(''http://www.google.com/''))", span="251-251"];
m6_160 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleWithDifferentTypes_NonGeneric()", file="CollectionUtils.cs", label="Assert.AreEqual(null, s)", span="256-256"];
m6_162 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleWithDifferentTypes_NonGeneric()", file="CollectionUtils.cs", label="Assert.AreEqual(new Uri(''http://www.google.com/''), i)", span="259-259"];
m6_158 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleWithDifferentTypes_NonGeneric()", file="CollectionUtils.cs", label="o.RemoveAnnotations(typeof(string))", span="253-253"];
m6_163 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleWithDifferentTypes_NonGeneric()", file="CollectionUtils.cs", label="Exit Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleWithDifferentTypes_NonGeneric()", span="247-247"];
m6_63 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations_MultipleTypes()", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations_MultipleTypes()", span="109-109"];
m6_64 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations_MultipleTypes()", file="CollectionUtils.cs", label="JObject o = new JObject()", span="111-111"];
m6_65 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations_MultipleTypes()", file="CollectionUtils.cs", label="o.AddAnnotation(''A string!'')", span="112-112"];
m6_66 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations_MultipleTypes()", file="CollectionUtils.cs", label="o.AddAnnotation(''A string 2!'')", span="113-113"];
m6_67 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations_MultipleTypes()", file="CollectionUtils.cs", label="o.AddAnnotation(''A string 3!'')", span="114-114"];
m6_68 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations_MultipleTypes()", file="CollectionUtils.cs", label="o.AddAnnotation(new Uri(''http://www.google.com/''))", span="115-115"];
m6_70 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations_MultipleTypes()", file="CollectionUtils.cs", label="Assert.AreEqual(4, l.Count)", span="119-119"];
m6_71 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations_MultipleTypes()", file="CollectionUtils.cs", label="Assert.AreEqual(''A string!'', l[0])", span="120-120"];
m6_72 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations_MultipleTypes()", file="CollectionUtils.cs", label="Assert.AreEqual(''A string 2!'', l[1])", span="121-121"];
m6_73 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations_MultipleTypes()", file="CollectionUtils.cs", label="Assert.AreEqual(''A string 3!'', l[2])", span="122-122"];
m6_74 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations_MultipleTypes()", file="CollectionUtils.cs", label="Assert.AreEqual(new Uri(''http://www.google.com/''), l[3])", span="123-123"];
m6_76 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations_MultipleTypes()", file="CollectionUtils.cs", label="Assert.AreEqual(4, l.Count)", span="127-127"];
m6_77 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations_MultipleTypes()", file="CollectionUtils.cs", label="Assert.AreEqual(''A string!'', l[0])", span="128-128"];
m6_78 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations_MultipleTypes()", file="CollectionUtils.cs", label="Assert.AreEqual(''A string 2!'', l[1])", span="129-129"];
m6_79 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations_MultipleTypes()", file="CollectionUtils.cs", label="Assert.AreEqual(''A string 3!'', l[2])", span="130-130"];
m6_80 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations_MultipleTypes()", file="CollectionUtils.cs", label="Assert.AreEqual(new Uri(''http://www.google.com/''), l[3])", span="131-131"];
m6_69 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations_MultipleTypes()", file="CollectionUtils.cs", label="IList<object> l = o.Annotations<object>().ToList()", span="117-117"];
m6_75 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations_MultipleTypes()", file="CollectionUtils.cs", label="l = o.Annotations(typeof(object)).ToList()", span="125-125"];
m6_81 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations_MultipleTypes()", file="CollectionUtils.cs", label="Exit Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations_MultipleTypes()", span="109-109"];
m6_82 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation()", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation()", span="135-135"];
m6_86 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation()", file="CollectionUtils.cs", label="string s = o.Annotation<string>()", span="142-142"];
m6_83 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation()", file="CollectionUtils.cs", label="JObject o = new JObject()", span="137-137"];
m6_84 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation()", file="CollectionUtils.cs", label="o.AddAnnotation(''A string!'')", span="138-138"];
m6_87 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation()", file="CollectionUtils.cs", label="Assert.AreEqual(null, s)", span="143-143"];
m6_85 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation()", file="CollectionUtils.cs", label="o.RemoveAnnotations<string>()", span="140-140"];
m6_88 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation()", file="CollectionUtils.cs", label="Exit Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation()", span="135-135"];
m6_144 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleWithDifferentTypes()", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleWithDifferentTypes()", span="231-231"];
m6_149 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleWithDifferentTypes()", file="CollectionUtils.cs", label="string s = o.Annotation<string>()", span="239-239"];
m6_151 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleWithDifferentTypes()", file="CollectionUtils.cs", label="Uri i = o.Annotation<Uri>()", span="242-242"];
m6_145 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleWithDifferentTypes()", file="CollectionUtils.cs", label="JObject o = new JObject()", span="233-233"];
m6_146 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleWithDifferentTypes()", file="CollectionUtils.cs", label="o.AddAnnotation(''A string!'')", span="234-234"];
m6_147 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleWithDifferentTypes()", file="CollectionUtils.cs", label="o.AddAnnotation(new Uri(''http://www.google.com/''))", span="235-235"];
m6_150 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleWithDifferentTypes()", file="CollectionUtils.cs", label="Assert.AreEqual(null, s)", span="240-240"];
m6_152 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleWithDifferentTypes()", file="CollectionUtils.cs", label="Assert.AreEqual(new Uri(''http://www.google.com/''), i)", span="243-243"];
m6_148 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleWithDifferentTypes()", file="CollectionUtils.cs", label="o.RemoveAnnotations<string>()", span="237-237"];
m6_153 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleWithDifferentTypes()", file="CollectionUtils.cs", label="Exit Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleWithDifferentTypes()", span="231-231"];
m6_173 [cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="371-371"];
m6_43 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations()", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations()", span="86-86"];
m6_44 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations()", file="CollectionUtils.cs", label="JObject o = new JObject()", span="88-88"];
m6_45 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations()", file="CollectionUtils.cs", label="o.AddAnnotation(''A string!'')", span="89-89"];
m6_46 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations()", file="CollectionUtils.cs", label="o.AddAnnotation(''A string 2!'')", span="90-90"];
m6_47 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations()", file="CollectionUtils.cs", label="o.AddAnnotation(''A string 3!'')", span="91-91"];
m6_49 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations()", file="CollectionUtils.cs", label="Assert.AreEqual(3, l.Count)", span="95-95"];
m6_50 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations()", file="CollectionUtils.cs", label="Assert.AreEqual(''A string!'', l[0])", span="96-96"];
m6_51 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations()", file="CollectionUtils.cs", label="Assert.AreEqual(''A string 2!'', l[1])", span="97-97"];
m6_52 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations()", file="CollectionUtils.cs", label="Assert.AreEqual(''A string 3!'', l[2])", span="98-98"];
m6_54 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations()", file="CollectionUtils.cs", label="Assert.AreEqual(3, l.Count)", span="102-102"];
m6_55 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations()", file="CollectionUtils.cs", label="Assert.AreEqual(''A string!'', l[0])", span="103-103"];
m6_56 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations()", file="CollectionUtils.cs", label="Assert.AreEqual(''A string 2!'', l[1])", span="104-104"];
m6_57 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations()", file="CollectionUtils.cs", label="Assert.AreEqual(''A string 3!'', l[2])", span="105-105"];
m6_48 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations()", file="CollectionUtils.cs", label="IList<string> l = o.Annotations<string>().ToList()", span="93-93"];
m6_53 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations()", file="CollectionUtils.cs", label="l = o.Annotations(typeof(string)).Cast<string>().ToList()", span="100-100"];
m6_58 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations()", file="CollectionUtils.cs", label="Exit Newtonsoft.Json.Tests.Linq.AnnotationsTests.GetAnnotations()", span="86-86"];
m6_174 [cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="CollectionUtils.cs", label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0"];
m6_114 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleCalls()", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleCalls()", span="184-184"];
m6_120 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleCalls()", file="CollectionUtils.cs", label="string s = o.Annotation<string>()", span="193-193"];
m6_122 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleCalls()", file="CollectionUtils.cs", label="Uri i = o.Annotation<Uri>()", span="196-196"];
m6_115 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleCalls()", file="CollectionUtils.cs", label="JObject o = new JObject()", span="186-186"];
m6_116 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleCalls()", file="CollectionUtils.cs", label="o.AddAnnotation(''A string!'')", span="187-187"];
m6_117 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleCalls()", file="CollectionUtils.cs", label="o.AddAnnotation(new Uri(''http://www.google.com/''))", span="188-188"];
m6_121 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleCalls()", file="CollectionUtils.cs", label="Assert.AreEqual(null, s)", span="194-194"];
m6_123 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleCalls()", file="CollectionUtils.cs", label="Assert.AreEqual(null, i)", span="197-197"];
m6_119 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleCalls()", file="CollectionUtils.cs", label="o.RemoveAnnotations<Uri>()", span="191-191"];
m6_118 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleCalls()", file="CollectionUtils.cs", label="o.RemoveAnnotations<string>()", span="190-190"];
m6_124 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleCalls()", file="CollectionUtils.cs", label="Exit Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_MultipleCalls()", span="184-184"];
m6_89 [cluster="Newtonsoft.Json.Linq.JToken.RemoveAnnotations<T>()", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Linq.JToken.RemoveAnnotations<T>()", span="2334-2334"];
m6_100 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_Multiple()", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_Multiple()", span="162-162"];
m6_106 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_Multiple()", file="CollectionUtils.cs", label="string s = o.Annotation<string>()", span="171-171"];
m6_109 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_Multiple()", file="CollectionUtils.cs", label="s = o.Annotation<string>()", span="176-176"];
m6_101 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_Multiple()", file="CollectionUtils.cs", label="JObject o = new JObject()", span="164-164"];
m6_102 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_Multiple()", file="CollectionUtils.cs", label="o.AddAnnotation(''A string!'')", span="165-165"];
m6_103 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_Multiple()", file="CollectionUtils.cs", label="o.AddAnnotation(''A string 2!'')", span="166-166"];
m6_104 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_Multiple()", file="CollectionUtils.cs", label="o.AddAnnotation(''A string 3!'')", span="167-167"];
m6_108 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_Multiple()", file="CollectionUtils.cs", label="o.AddAnnotation(''A string 4!'')", span="174-174"];
m6_107 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_Multiple()", file="CollectionUtils.cs", label="Assert.AreEqual(null, s)", span="172-172"];
m6_110 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_Multiple()", file="CollectionUtils.cs", label="Assert.AreEqual(''A string 4!'', s)", span="177-177"];
m6_112 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_Multiple()", file="CollectionUtils.cs", label="Assert.AreEqual(null, i)", span="180-180"];
m6_105 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_Multiple()", file="CollectionUtils.cs", label="o.RemoveAnnotations<string>()", span="169-169"];
m6_111 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_Multiple()", file="CollectionUtils.cs", label="Uri i = (Uri)o.Annotation(typeof(Uri))", span="179-179"];
m6_113 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_Multiple()", file="CollectionUtils.cs", label="Exit Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_Multiple()", span="162-162"];
m6_11 [cluster="Unk.AreEqual", file="CollectionUtils.cs", label="Entry Unk.AreEqual", span=""];
m6_0 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.AddAnnotation()", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Tests.Linq.AnnotationsTests.AddAnnotation()", span="27-27"];
m6_1 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.AddAnnotation()", file="CollectionUtils.cs", label="JObject o = new JObject()", span="29-29"];
m6_2 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.AddAnnotation()", file="CollectionUtils.cs", label="o.AddAnnotation(''A string!'')", span="30-30"];
m6_3 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.AddAnnotation()", color=green, community=0, file="CollectionUtils.cs", label="string s = o.Annotation<string>()", prediction=0, span="32-32"];
m6_4 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.AddAnnotation()", file="CollectionUtils.cs", label="Assert.AreEqual(''A string!'', s)", span="33-33"];
m6_5 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.AddAnnotation()", file="CollectionUtils.cs", label="s = (string)o.Annotation(typeof(string))", span="35-35"];
m6_7 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.AddAnnotation()", file="CollectionUtils.cs", label="Exit Newtonsoft.Json.Tests.Linq.AnnotationsTests.AddAnnotation()", span="27-27"];
m6_164 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.Example()", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Tests.Linq.AnnotationsTests.Example()", span="264-264"];
m6_170 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.Example()", file="CollectionUtils.cs", label="HashSet<string> changedProperties = o.Annotation<HashSet<string>>()", span="280-280"];
m6_166 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.Example()", file="CollectionUtils.cs", label="o.AddAnnotation(new HashSet<string>())", span="273-273"];
m6_171 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.Example()", file="CollectionUtils.cs", label="Assert.AreEqual(2, changedProperties.Count)", span="284-284"];
m6_165 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.Example()", file="CollectionUtils.cs", label="JObject o = JObject.Parse(@''{\r\n                'name': 'Bill G',\r\n                'age': 58,\r\n                'country': 'United States',\r\n                'employer': 'Microsoft'\r\n            }'')", span="266-271"];
m6_167 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.Example()", file="CollectionUtils.cs", label="o.PropertyChanged += (sender, args) => o.Annotation<HashSet<string>>().Add(args.PropertyName)", span="274-274"];
m6_169 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.Example()", file="CollectionUtils.cs", label="o[''employer''] = ''Bill & Melinda Gates Foundation''", span="277-277"];
m6_168 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.Example()", file="CollectionUtils.cs", label="o[''age''] = 59", span="276-276"];
m6_172 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.Example()", file="CollectionUtils.cs", label="Exit Newtonsoft.Json.Tests.Linq.AnnotationsTests.Example()", span="264-264"];
m6_12 [cluster="Newtonsoft.Json.Linq.JToken.Annotation(System.Type)", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Linq.JToken.Annotation(System.Type)", span="2233-2233"];
m6_99 [cluster="Newtonsoft.Json.Linq.JToken.RemoveAnnotations(System.Type)", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Linq.JToken.RemoveAnnotations(System.Type)", span="2379-2379"];
m6_6 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeProperty.User.User()", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeProperty.User.User()", span="50-50"];
m6_59 [cluster="Newtonsoft.Json.Linq.JToken.Annotations<T>()", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Linq.JToken.Annotations<T>()", span="2268-2268"];
m6_61 [cluster="Newtonsoft.Json.Linq.JToken.Annotations(System.Type)", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Linq.JToken.Annotations(System.Type)", span="2301-2301"];
m6_178 [cluster="System.Collections.Generic.HashSet<T>.Add(T)", file="CollectionUtils.cs", label="Entry System.Collections.Generic.HashSet<T>.Add(T)", span="0-0"];
m6_35 [cluster="System.Uri.Uri(string)", file="CollectionUtils.cs", label="Entry System.Uri.Uri(string)", span="0-0"];
m6_10 [cluster="Newtonsoft.Json.Linq.JToken.Annotation<T>()", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Linq.JToken.Annotation<T>()", span="2204-2204"];
m6_175 [cluster="lambda expression", file="CollectionUtils.cs", label="Entry lambda expression", span="274-274"];
m6_176 [cluster="lambda expression", file="CollectionUtils.cs", label="o.Annotation<HashSet<string>>().Add(args.PropertyName)", span="274-274"];
m6_177 [cluster="lambda expression", file="CollectionUtils.cs", label="Exit lambda expression", span="274-274"];
m6_125 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_Multiple_NonGeneric()", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_Multiple_NonGeneric()", span="201-201"];
m6_130 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_Multiple_NonGeneric()", file="CollectionUtils.cs", label="string s = o.Annotation<string>()", span="209-209"];
m6_126 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_Multiple_NonGeneric()", file="CollectionUtils.cs", label="JObject o = new JObject()", span="203-203"];
m6_127 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_Multiple_NonGeneric()", file="CollectionUtils.cs", label="o.AddAnnotation(''A string!'')", span="204-204"];
m6_128 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_Multiple_NonGeneric()", file="CollectionUtils.cs", label="o.AddAnnotation(''A string 2!'')", span="205-205"];
m6_131 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_Multiple_NonGeneric()", file="CollectionUtils.cs", label="Assert.AreEqual(null, s)", span="210-210"];
m6_129 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_Multiple_NonGeneric()", file="CollectionUtils.cs", label="o.RemoveAnnotations(typeof(string))", span="207-207"];
m6_132 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_Multiple_NonGeneric()", file="CollectionUtils.cs", label="Exit Newtonsoft.Json.Tests.Linq.AnnotationsTests.RemoveAnnotation_Multiple_NonGeneric()", span="201-201"];
m6_60 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="CollectionUtils.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m6_13 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.AddAnnotation_MultipleOfTheSameType()", file="CollectionUtils.cs", label="Entry Newtonsoft.Json.Tests.Linq.AnnotationsTests.AddAnnotation_MultipleOfTheSameType()", span="40-40"];
m6_17 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.AddAnnotation_MultipleOfTheSameType()", file="CollectionUtils.cs", label="string s = o.Annotation<string>()", span="46-46"];
m6_14 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.AddAnnotation_MultipleOfTheSameType()", file="CollectionUtils.cs", label="JObject o = new JObject()", span="42-42"];
m6_15 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.AddAnnotation_MultipleOfTheSameType()", file="CollectionUtils.cs", label="o.AddAnnotation(''A string!'')", span="43-43"];
m6_16 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.AddAnnotation_MultipleOfTheSameType()", file="CollectionUtils.cs", label="o.AddAnnotation(''Another string!'')", span="44-44"];
m6_18 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.AddAnnotation_MultipleOfTheSameType()", file="CollectionUtils.cs", label="Assert.AreEqual(''A string!'', s)", span="47-47"];
m6_20 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.AddAnnotation_MultipleOfTheSameType()", file="CollectionUtils.cs", label="Assert.AreEqual(''A string!'', s)", span="50-50"];
m6_19 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.AddAnnotation_MultipleOfTheSameType()", file="CollectionUtils.cs", label="s = (string)o.Annotation(typeof(string))", span="49-49"];
m6_21 [cluster="Newtonsoft.Json.Tests.Linq.AnnotationsTests.AddAnnotation_MultipleOfTheSameType()", file="CollectionUtils.cs", label="Exit Newtonsoft.Json.Tests.Linq.AnnotationsTests.AddAnnotation_MultipleOfTheSameType()", span="40-40"];
m6_179 [file="CollectionUtils.cs", label=o, span=""];
m7_87 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.Insert(int, object)", file="CollectionWrapper.cs", label="Entry Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.Insert(int, object)", span="222-222"];
m7_88 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.Insert(int, object)", file="CollectionWrapper.cs", label="_genericCollection != null", span="224-224"];
m7_90 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.Insert(int, object)", file="CollectionWrapper.cs", label="VerifyValueType(value)", span="229-229"];
m7_91 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.Insert(int, object)", file="CollectionWrapper.cs", label="_list.Insert(index, (T)value)", span="230-230"];
m7_89 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.Insert(int, object)", file="CollectionWrapper.cs", label="throw new InvalidOperationException(''Wrapped ICollection<T> does not support Insert.'');", span="226-226"];
m7_92 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.Insert(int, object)", file="CollectionWrapper.cs", label="Exit Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.Insert(int, object)", span="222-222"];
m7_40 [cluster="System.Collections.ICollection.CopyTo(System.Array, int)", file="CollectionWrapper.cs", label="Entry System.Collections.ICollection.CopyTo(System.Array, int)", span="0-0"];
m7_54 [cluster="System.Collections.IEnumerable.Cast<TResult>()", file="CollectionWrapper.cs", label="Entry System.Collections.IEnumerable.Cast<TResult>()", span="0-0"];
m7_111 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", file="CollectionWrapper.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", span="267-267"];
m7_39 [cluster="System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", file="CollectionWrapper.cs", label="Entry System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", span="0-0"];
m7_65 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.VerifyValueType(object)", file="CollectionWrapper.cs", label="Entry Newtonsoft.Json.Utilities.CollectionWrapper<T>.VerifyValueType(object)", span="303-303"];
m7_101 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.VerifyValueType(object)", file="CollectionWrapper.cs", label="!IsCompatibleObject(value)", span="305-305"];
m7_102 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.VerifyValueType(object)", file="CollectionWrapper.cs", label="throw new ArgumentException(''The value '{0}' is not of type '{1}' and cannot be used in this generic collection.''.FormatWith(CultureInfo.InvariantCulture, value, typeof(T)), nameof(value));", span="307-307"];
m7_103 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.VerifyValueType(object)", file="CollectionWrapper.cs", label="Exit Newtonsoft.Json.Utilities.CollectionWrapper<T>.VerifyValueType(object)", span="303-303"];
m7_32 [cluster="System.Collections.Generic.ICollection<T>.Contains(T)", file="CollectionWrapper.cs", label="Entry System.Collections.Generic.ICollection<T>.Contains(T)", span="0-0"];
m7_13 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.Add(T)", file="CollectionWrapper.cs", label="Entry Newtonsoft.Json.Utilities.CollectionWrapper<T>.Add(T)", span="72-72"];
m7_14 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.Add(T)", file="CollectionWrapper.cs", label="_genericCollection != null", span="74-74"];
m7_15 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.Add(T)", file="CollectionWrapper.cs", label="_genericCollection.Add(item)", span="76-76"];
m7_16 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.Add(T)", file="CollectionWrapper.cs", label="_list.Add(item)", span="80-80"];
m7_17 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.Add(T)", file="CollectionWrapper.cs", label="Exit Newtonsoft.Json.Utilities.CollectionWrapper<T>.Add(T)", span="72-72"];
m7_93 [cluster="System.Collections.IList.Insert(int, object)", file="CollectionWrapper.cs", label="Entry System.Collections.IList.Insert(int, object)", span="0-0"];
m7_34 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.CopyTo(T[], int)", file="CollectionWrapper.cs", label="Entry Newtonsoft.Json.Utilities.CollectionWrapper<T>.CopyTo(T[], int)", span="108-108"];
m7_35 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.CopyTo(T[], int)", file="CollectionWrapper.cs", label="_genericCollection != null", span="110-110"];
m7_36 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.CopyTo(T[], int)", file="CollectionWrapper.cs", label="_genericCollection.CopyTo(array, arrayIndex)", span="112-112"];
m7_37 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.CopyTo(T[], int)", file="CollectionWrapper.cs", label="_list.CopyTo(array, arrayIndex)", span="116-116"];
m7_38 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.CopyTo(T[], int)", file="CollectionWrapper.cs", label="Exit Newtonsoft.Json.Utilities.CollectionWrapper<T>.CopyTo(T[], int)", span="108-108"];
m7_0 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.CollectionWrapper(System.Collections.IList)", file="CollectionWrapper.cs", label="Entry Newtonsoft.Json.Utilities.CollectionWrapper<T>.CollectionWrapper(System.Collections.IList)", span="50-50"];
m7_1 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.CollectionWrapper(System.Collections.IList)", file="CollectionWrapper.cs", label="ValidationUtils.ArgumentNotNull(list, nameof(list))", span="52-52"];
m7_2 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.CollectionWrapper(System.Collections.IList)", file="CollectionWrapper.cs", label="ICollection<T> collection = list as ICollection<T>", span="54-54"];
m7_5 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.CollectionWrapper(System.Collections.IList)", file="CollectionWrapper.cs", label="_list = list", span="61-61"];
m7_3 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.CollectionWrapper(System.Collections.IList)", file="CollectionWrapper.cs", label="collection != null", span="55-55"];
m7_4 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.CollectionWrapper(System.Collections.IList)", file="CollectionWrapper.cs", label="_genericCollection = collection", span="57-57"];
m7_6 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.CollectionWrapper(System.Collections.IList)", file="CollectionWrapper.cs", label="Exit Newtonsoft.Json.Utilities.CollectionWrapper<T>.CollectionWrapper(System.Collections.IList)", span="50-50"];
m7_51 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.GetEnumerator()", file="CollectionWrapper.cs", label="Entry Newtonsoft.Json.Utilities.CollectionWrapper<T>.GetEnumerator()", span="169-169"];
m7_52 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.GetEnumerator()", file="CollectionWrapper.cs", label="return (_genericCollection ?? _list.Cast<T>()).GetEnumerator();", span="171-171"];
m7_53 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.GetEnumerator()", file="CollectionWrapper.cs", label="Exit Newtonsoft.Json.Utilities.CollectionWrapper<T>.GetEnumerator()", span="169-169"];
m7_66 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.Contains(object)", file="CollectionWrapper.cs", label="Entry Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.Contains(object)", span="187-187"];
m7_67 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.Contains(object)", file="CollectionWrapper.cs", label="IsCompatibleObject(value)", span="189-189"];
m7_68 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.Contains(object)", file="CollectionWrapper.cs", label="return Contains((T)value);", span="191-191"];
m7_69 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.Contains(object)", file="CollectionWrapper.cs", label="return false;", span="194-194"];
m7_70 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.Contains(object)", file="CollectionWrapper.cs", label="Exit Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.Contains(object)", span="187-187"];
m7_80 [cluster="System.Collections.IList.IndexOf(object)", file="CollectionWrapper.cs", label="Entry System.Collections.IList.IndexOf(object)", span="0-0"];
m7_81 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.RemoveAt(int)", file="CollectionWrapper.cs", label="Entry Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.RemoveAt(int)", span="212-212"];
m7_82 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.RemoveAt(int)", file="CollectionWrapper.cs", label="_genericCollection != null", span="214-214"];
m7_84 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.RemoveAt(int)", file="CollectionWrapper.cs", label="_list.RemoveAt(index)", span="219-219"];
m7_83 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.RemoveAt(int)", file="CollectionWrapper.cs", label="throw new InvalidOperationException(''Wrapped ICollection<T> does not support RemoveAt.'');", span="216-216"];
m7_85 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.RemoveAt(int)", file="CollectionWrapper.cs", label="Exit Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.RemoveAt(int)", span="212-212"];
m7_98 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.ICollection.CopyTo(System.Array, int)", file="CollectionWrapper.cs", label="Entry Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.ICollection.CopyTo(System.Array, int)", span="280-280"];
m7_99 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.ICollection.CopyTo(System.Array, int)", file="CollectionWrapper.cs", label="CopyTo((T[])array, arrayIndex)", span="282-282"];
m7_100 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.ICollection.CopyTo(System.Array, int)", file="CollectionWrapper.cs", label="Exit Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.ICollection.CopyTo(System.Array, int)", span="280-280"];
m7_94 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.Remove(object)", file="CollectionWrapper.cs", label="Entry Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.Remove(object)", span="249-249"];
m7_95 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.Remove(object)", file="CollectionWrapper.cs", label="IsCompatibleObject(value)", span="251-251"];
m7_96 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.Remove(object)", file="CollectionWrapper.cs", label="Remove((T)value)", span="253-253"];
m7_97 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.Remove(object)", file="CollectionWrapper.cs", label="Exit Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.Remove(object)", span="249-249"];
m7_49 [cluster="System.Collections.Generic.ICollection<T>.Remove(T)", file="CollectionWrapper.cs", label="Entry System.Collections.Generic.ICollection<T>.Remove(T)", span="0-0"];
m7_26 [cluster="System.Collections.IList.Clear()", file="CollectionWrapper.cs", label="Entry System.Collections.IList.Clear()", span="0-0"];
m7_7 [cluster="Unk.nameof", file="CollectionWrapper.cs", label="Entry Unk.nameof", span=""];
m7_33 [cluster="System.Collections.IList.Contains(object)", file="CollectionWrapper.cs", label="Entry System.Collections.IList.Contains(object)", span="0-0"];
m7_79 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="CollectionWrapper.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m7_110 [cluster="System.Type.IsValueType()", file="CollectionWrapper.cs", label="Entry System.Type.IsValueType()", span="535-535"];
m7_86 [cluster="System.Collections.IList.RemoveAt(int)", file="CollectionWrapper.cs", label="Entry System.Collections.IList.RemoveAt(int)", span="0-0"];
m7_20 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.Clear()", file="CollectionWrapper.cs", label="Entry Newtonsoft.Json.Utilities.CollectionWrapper<T>.Clear()", span="84-84"];
m7_21 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.Clear()", file="CollectionWrapper.cs", label="_genericCollection != null", span="86-86"];
m7_22 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.Clear()", file="CollectionWrapper.cs", label="_genericCollection.Clear()", span="88-88"];
m7_23 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.Clear()", file="CollectionWrapper.cs", label="_list.Clear()", span="92-92"];
m7_24 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.Clear()", file="CollectionWrapper.cs", label="Exit Newtonsoft.Json.Utilities.CollectionWrapper<T>.Clear()", span="84-84"];
m7_27 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.Contains(T)", file="CollectionWrapper.cs", label="Entry Newtonsoft.Json.Utilities.CollectionWrapper<T>.Contains(T)", span="96-96"];
m7_28 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.Contains(T)", file="CollectionWrapper.cs", label="_genericCollection != null", span="98-98"];
m7_29 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.Contains(T)", file="CollectionWrapper.cs", label="return _genericCollection.Contains(item);", span="100-100"];
m7_30 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.Contains(T)", file="CollectionWrapper.cs", label="return _list.Contains(item);", span="104-104"];
m7_31 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.Contains(T)", file="CollectionWrapper.cs", label="Exit Newtonsoft.Json.Utilities.CollectionWrapper<T>.Contains(T)", span="96-96"];
m7_41 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.Remove(T)", file="CollectionWrapper.cs", label="Entry Newtonsoft.Json.Utilities.CollectionWrapper<T>.Remove(T)", span="150-150"];
m7_42 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.Remove(T)", file="CollectionWrapper.cs", label="_genericCollection != null", span="152-152"];
m7_43 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.Remove(T)", file="CollectionWrapper.cs", label="return _genericCollection.Remove(item);", span="154-154"];
m7_44 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.Remove(T)", file="CollectionWrapper.cs", label="bool contains = _list.Contains(item)", span="158-158"];
m7_46 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.Remove(T)", file="CollectionWrapper.cs", label="_list.Remove(item)", span="162-162"];
m7_45 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.Remove(T)", file="CollectionWrapper.cs", label=contains, span="160-160"];
m7_47 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.Remove(T)", file="CollectionWrapper.cs", label="return contains;", span="165-165"];
m7_48 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.Remove(T)", file="CollectionWrapper.cs", label="Exit Newtonsoft.Json.Utilities.CollectionWrapper<T>.Remove(T)", span="150-150"];
m7_18 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="CollectionWrapper.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m7_50 [cluster="System.Collections.IList.Remove(object)", file="CollectionWrapper.cs", label="Entry System.Collections.IList.Remove(object)", span="0-0"];
m7_25 [cluster="System.Collections.Generic.ICollection<T>.Clear()", file="CollectionWrapper.cs", label="Entry System.Collections.Generic.ICollection<T>.Clear()", span="0-0"];
m7_104 [cluster="System.ArgumentException.ArgumentException(string, string)", file="CollectionWrapper.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m7_72 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.IndexOf(object)", file="CollectionWrapper.cs", label="Entry Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.IndexOf(object)", span="197-197"];
m7_73 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.IndexOf(object)", file="CollectionWrapper.cs", label="_genericCollection != null", span="199-199"];
m7_75 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.IndexOf(object)", file="CollectionWrapper.cs", label="IsCompatibleObject(value)", span="204-204"];
m7_76 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.IndexOf(object)", file="CollectionWrapper.cs", label="return _list.IndexOf((T)value);", span="206-206"];
m7_74 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.IndexOf(object)", file="CollectionWrapper.cs", label="throw new InvalidOperationException(''Wrapped ICollection<T> does not support IndexOf.'');", span="201-201"];
m7_77 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.IndexOf(object)", file="CollectionWrapper.cs", label="return -1;", span="209-209"];
m7_78 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.IndexOf(object)", file="CollectionWrapper.cs", label="Exit Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.IndexOf(object)", span="197-197"];
m7_59 [cluster="System.Collections.IEnumerable.GetEnumerator()", file="CollectionWrapper.cs", label="Entry System.Collections.IEnumerable.GetEnumerator()", span="0-0"];
m7_8 [cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="CollectionWrapper.cs", label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="31-31"];
m7_60 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.Add(object)", file="CollectionWrapper.cs", label="Entry Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.Add(object)", span="179-179"];
m7_61 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.Add(object)", file="CollectionWrapper.cs", label="VerifyValueType(value)", span="181-181"];
m7_62 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.Add(object)", file="CollectionWrapper.cs", label="Add((T)value)", span="182-182"];
m7_63 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.Add(object)", file="CollectionWrapper.cs", label="return (Count - 1);", span="184-184"];
m7_64 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.Add(object)", file="CollectionWrapper.cs", label="Exit Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IList.Add(object)", span="179-179"];
m7_56 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IEnumerable.GetEnumerator()", file="CollectionWrapper.cs", label="Entry Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IEnumerable.GetEnumerator()", span="174-174"];
m7_57 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IEnumerable.GetEnumerator()", file="CollectionWrapper.cs", label="return ((IEnumerable)_genericCollection ?? _list).GetEnumerator();", span="176-176"];
m7_58 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IEnumerable.GetEnumerator()", file="CollectionWrapper.cs", label="Exit Newtonsoft.Json.Utilities.CollectionWrapper<T>.System.Collections.IEnumerable.GetEnumerator()", span="174-174"];
m7_9 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.CollectionWrapper(System.Collections.Generic.ICollection<T>)", file="CollectionWrapper.cs", label="Entry Newtonsoft.Json.Utilities.CollectionWrapper<T>.CollectionWrapper(System.Collections.Generic.ICollection<T>)", span="65-65"];
m7_10 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.CollectionWrapper(System.Collections.Generic.ICollection<T>)", file="CollectionWrapper.cs", label="ValidationUtils.ArgumentNotNull(list, nameof(list))", span="67-67"];
m7_11 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.CollectionWrapper(System.Collections.Generic.ICollection<T>)", file="CollectionWrapper.cs", label="_genericCollection = list", span="69-69"];
m7_12 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.CollectionWrapper(System.Collections.Generic.ICollection<T>)", file="CollectionWrapper.cs", label="Exit Newtonsoft.Json.Utilities.CollectionWrapper<T>.CollectionWrapper(System.Collections.Generic.ICollection<T>)", span="65-65"];
m7_19 [cluster="System.Collections.IList.Add(object)", file="CollectionWrapper.cs", label="Entry System.Collections.IList.Add(object)", span="0-0"];
m7_105 [cluster="string.FormatWith(System.IFormatProvider, object, object)", file="CollectionWrapper.cs", label="Entry string.FormatWith(System.IFormatProvider, object, object)", span="52-52"];
m7_71 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.IsCompatibleObject(object)", file="CollectionWrapper.cs", label="Entry Newtonsoft.Json.Utilities.CollectionWrapper<T>.IsCompatibleObject(object)", span="311-311"];
m7_106 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.IsCompatibleObject(object)", file="CollectionWrapper.cs", label="!(value is T) && (value != null || (typeof(T).IsValueType() && !ReflectionUtils.IsNullableType(typeof(T))))", span="313-313"];
m7_107 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.IsCompatibleObject(object)", file="CollectionWrapper.cs", label="return false;", span="315-315"];
m7_108 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.IsCompatibleObject(object)", file="CollectionWrapper.cs", label="return true;", span="318-318"];
m7_109 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.IsCompatibleObject(object)", file="CollectionWrapper.cs", label="Exit Newtonsoft.Json.Utilities.CollectionWrapper<T>.IsCompatibleObject(object)", span="311-311"];
m7_55 [cluster="System.Collections.Generic.IEnumerable<T>.GetEnumerator()", file="CollectionWrapper.cs", label="Entry System.Collections.Generic.IEnumerable<T>.GetEnumerator()", span="0-0"];
m7_112 [file="CollectionWrapper.cs", label="Newtonsoft.Json.Utilities.CollectionWrapper<T>", span=""];
m9_10 [cluster="Newtonsoft.Json.Linq.JObject.JObject()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject()", span="87-87"];
m9_12 [cluster="Newtonsoft.Json.Linq.JToken.CreateReader()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Linq.JToken.CreateReader()", span="1653-1653"];
m9_0 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateReader.Example()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateReader.Example()", span="43-43"];
m9_1 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateReader.Example()", file="DataSetConverter.cs", label="JObject o = new JObject\r\n            {\r\n                { ''Cpu'', ''Intel'' },\r\n                { ''Memory'', 32 },\r\n                {\r\n                    ''Drives'', new JArray\r\n                    {\r\n                        ''DVD'',\r\n                        ''SSD''\r\n                    }\r\n                }\r\n            }", span="46-57"];
m9_2 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateReader.Example()", file="DataSetConverter.cs", label="JsonReader reader = o.CreateReader()", span="59-59"];
m9_3 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateReader.Example()", file="DataSetConverter.cs", label="reader.Read()", span="60-60"];
m9_4 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateReader.Example()", file="DataSetConverter.cs", label="Console.Write(reader.TokenType)", span="62-62"];
m9_5 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateReader.Example()", file="DataSetConverter.cs", label="reader.Value != null", span="63-63"];
m9_6 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateReader.Example()", file="DataSetConverter.cs", label="Console.Write('' - '' + reader.Value)", span="64-64"];
m9_8 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateReader.Example()", file="DataSetConverter.cs", label="Assert.IsFalse(reader.Read())", span="82-82"];
m9_7 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateReader.Example()", file="DataSetConverter.cs", label="Console.WriteLine()", span="66-66"];
m9_9 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateReader.Example()", file="DataSetConverter.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateReader.Example()", span="43-43"];
m9_14 [cluster="System.Console.Write(object)", file="DataSetConverter.cs", label="Entry System.Console.Write(object)", span="0-0"];
m9_17 [cluster="Unk.IsFalse", file="DataSetConverter.cs", label="Entry Unk.IsFalse", span=""];
m9_11 [cluster="Newtonsoft.Json.Linq.JArray.JArray()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.Linq.JArray.JArray()", span="65-65"];
m9_16 [cluster="System.Console.WriteLine()", file="DataSetConverter.cs", label="Entry System.Console.WriteLine()", span="0-0"];
m9_13 [cluster="Newtonsoft.Json.JsonReader.Read()", file="DataSetConverter.cs", label="Entry Newtonsoft.Json.JsonReader.Read()", span="405-405"];
m9_15 [cluster="System.Console.Write(string)", file="DataSetConverter.cs", label="Entry System.Console.Write(string)", span="0-0"];
m12_0 [cluster="Newtonsoft.Json.Converters.DateTimeConverterBase.CanConvert(System.Type)", file="DateTimeConverterBase.cs", label="Entry Newtonsoft.Json.Converters.DateTimeConverterBase.CanConvert(System.Type)", span="41-41"];
m12_1 [cluster="Newtonsoft.Json.Converters.DateTimeConverterBase.CanConvert(System.Type)", file="DateTimeConverterBase.cs", label="objectType == typeof(DateTime) || objectType == typeof(DateTime?)", span="43-43"];
m12_3 [cluster="Newtonsoft.Json.Converters.DateTimeConverterBase.CanConvert(System.Type)", file="DateTimeConverterBase.cs", label="objectType == typeof(DateTimeOffset) || objectType == typeof(DateTimeOffset?)", span="48-48"];
m12_2 [cluster="Newtonsoft.Json.Converters.DateTimeConverterBase.CanConvert(System.Type)", file="DateTimeConverterBase.cs", label="return true;", span="45-45"];
m12_4 [cluster="Newtonsoft.Json.Converters.DateTimeConverterBase.CanConvert(System.Type)", file="DateTimeConverterBase.cs", label="return true;", span="50-50"];
m12_5 [cluster="Newtonsoft.Json.Converters.DateTimeConverterBase.CanConvert(System.Type)", file="DateTimeConverterBase.cs", label="return false;", span="54-54"];
m12_6 [cluster="Newtonsoft.Json.Converters.DateTimeConverterBase.CanConvert(System.Type)", file="DateTimeConverterBase.cs", label="Exit Newtonsoft.Json.Converters.DateTimeConverterBase.CanConvert(System.Type)", span="41-41"];
m13_202 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(string, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out System.DateTime)", file="DateTimeUtils.cs", label="Exit Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(string, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out System.DateTime)", span="379-379"];
m13_486 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DateTimeUtils.cs", label="property.PropertyName = ResolvePropertyName(mappedName)", span="1009-1009"];
m13_520 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DateTimeUtils.cs", label="(DefaultMembersSearchFlags & BindingFlags.NonPublic) == BindingFlags.NonPublic", span="1078-1078"];
m13_485 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DateTimeUtils.cs", label="mappedName = name", span="1007-1007"];
m13_484 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DateTimeUtils.cs", label="mappedName = dataMemberAttribute.Name", span="1004-1004"];
m13_482 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DateTimeUtils.cs", label="mappedName = propertyAttribute.PropertyName", span="1001-1001"];
m13_487 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DateTimeUtils.cs", label="property.UnderlyingName = name", span="1010-1010"];
m13_519 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DateTimeUtils.cs", label="allowNonPublicAccess = false", span="1077-1077"];
m13_521 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DateTimeUtils.cs", label="allowNonPublicAccess = true", span="1079-1079"];
m13_522 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DateTimeUtils.cs", label="propertyAttribute != null", span="1080-1080"];
m13_470 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DateTimeUtils.cs", label="DataContractAttribute dataContractAttribute = JsonTypeReflector.GetDataContractAttribute(declaringType)", span="979-979"];
m13_472 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DateTimeUtils.cs", label="memberInfo = attributeProvider as MemberInfo", span="983-983"];
m13_477 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DateTimeUtils.cs", label="JsonPropertyAttribute propertyAttribute = JsonTypeReflector.GetAttribute<JsonPropertyAttribute>(attributeProvider)", span="995-995"];
m13_479 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DateTimeUtils.cs", label="property.HasMemberAttribute = true", span="997-997"];
m13_490 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DateTimeUtils.cs", label="property._required = propertyAttribute._required", span="1015-1015"];
m13_491 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DateTimeUtils.cs", label="property.Order = propertyAttribute._order", span="1016-1016"];
m13_492 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DateTimeUtils.cs", label="property.DefaultValueHandling = propertyAttribute._defaultValueHandling", span="1017-1017"];
m13_495 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DateTimeUtils.cs", label="property._required = (dataMemberAttribute.IsRequired) ? Required.AllowNull : Required.Default", span="1023-1023"];
m13_496 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DateTimeUtils.cs", label="property.Order = (dataMemberAttribute.Order != -1) ? (int?) dataMemberAttribute.Order : null", span="1024-1024"];
m13_497 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DateTimeUtils.cs", label="property.DefaultValueHandling = (!dataMemberAttribute.EmitDefaultValue) ? (DefaultValueHandling?) DefaultValueHandling.Ignore : null", span="1025-1025"];
m13_499 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DateTimeUtils.cs", label="bool hasJsonIgnoreAttribute =\r\n        JsonTypeReflector.GetAttribute<JsonIgnoreAttribute>(attributeProvider) != null\r\n#if !(SILVERLIGHT || NETFX_CORE || PORTABLE)\r\n        || JsonTypeReflector.GetAttribute<NonSerializedAttribute>(attributeProvider) != null", span="1030-1033"];
m13_500 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DateTimeUtils.cs", label="memberSerialization != MemberSerialization.OptIn", span="1037-1037"];
m13_502 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DateTimeUtils.cs", label="hasIgnoreDataMemberAttribute = (JsonTypeReflector.GetAttribute<IgnoreDataMemberAttribute>(attributeProvider) != null)", span="1042-1042"];
m13_503 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DateTimeUtils.cs", label="property.Ignored = (hasJsonIgnoreAttribute || hasIgnoreDataMemberAttribute)", span="1046-1046"];
m13_504 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DateTimeUtils.cs", label="property.Ignored = (hasJsonIgnoreAttribute || !hasMemberAttribute)", span="1051-1051"];
m13_505 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DateTimeUtils.cs", label="property.Converter = JsonTypeReflector.GetJsonConverter(attributeProvider, property.PropertyType)", span="1056-1056"];
m13_506 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DateTimeUtils.cs", label="property.MemberConverter = JsonTypeReflector.GetJsonConverter(attributeProvider, property.PropertyType)", span="1057-1057"];
m13_507 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DateTimeUtils.cs", label="DefaultValueAttribute defaultValueAttribute = JsonTypeReflector.GetAttribute<DefaultValueAttribute>(attributeProvider)", span="1059-1059"];
m13_509 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DateTimeUtils.cs", label="property.DefaultValue = defaultValueAttribute.Value", span="1061-1061"];
m13_510 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DateTimeUtils.cs", label="property.NullValueHandling = (propertyAttribute != null) ? propertyAttribute._nullValueHandling : null", span="1063-1063"];
m13_511 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DateTimeUtils.cs", label="property.ReferenceLoopHandling = (propertyAttribute != null) ? propertyAttribute._referenceLoopHandling : null", span="1064-1064"];
m13_512 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DateTimeUtils.cs", label="property.ObjectCreationHandling = (propertyAttribute != null) ? propertyAttribute._objectCreationHandling : null", span="1065-1065"];
m13_513 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DateTimeUtils.cs", label="property.TypeNameHandling = (propertyAttribute != null) ? propertyAttribute._typeNameHandling : null", span="1066-1066"];
m13_514 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DateTimeUtils.cs", label="property.IsReference = (propertyAttribute != null) ? propertyAttribute._isReference : null", span="1067-1067"];
m13_515 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DateTimeUtils.cs", label="property.ItemIsReference = (propertyAttribute != null) ? propertyAttribute._itemIsReference : null", span="1069-1069"];
m13_516 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DateTimeUtils.cs", label="property.ItemConverter =\r\n        (propertyAttribute != null && propertyAttribute.ItemConverterType != null)\r\n          ? JsonConverterAttribute.CreateJsonConverterInstance(propertyAttribute.ItemConverterType)\r\n          : null", span="1070-1073"];
m13_517 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DateTimeUtils.cs", label="property.ItemReferenceLoopHandling = (propertyAttribute != null) ? propertyAttribute._itemReferenceLoopHandling : null", span="1074-1074"];
m13_518 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DateTimeUtils.cs", label="property.ItemTypeNameHandling = (propertyAttribute != null) ? propertyAttribute._itemTypeNameHandling : null", span="1075-1075"];
m13_524 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DateTimeUtils.cs", label="memberSerialization == MemberSerialization.Fields", span="1082-1082"];
m13_528 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DateTimeUtils.cs", label="property.HasMemberAttribute = true", span="1089-1089"];
m13_483 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DateTimeUtils.cs", label="dataMemberAttribute != null && dataMemberAttribute.Name != null", span="1003-1003"];
m13_475 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DateTimeUtils.cs", label="dataMemberAttribute = JsonTypeReflector.GetDataMemberAttribute((MemberInfo) memberInfo)", span="990-990"];
m13_476 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DateTimeUtils.cs", label="dataMemberAttribute = null", span="992-992"];
m13_481 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DateTimeUtils.cs", label="propertyAttribute != null && propertyAttribute.PropertyName != null", span="1000-1000"];
m13_488 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DateTimeUtils.cs", label="bool hasMemberAttribute = false", span="1012-1012"];
m13_523 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DateTimeUtils.cs", label="allowNonPublicAccess = true", span="1081-1081"];
m13_526 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DateTimeUtils.cs", label="dataMemberAttribute != null", span="1086-1086"];
m13_525 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DateTimeUtils.cs", label="allowNonPublicAccess = true", span="1083-1083"];
m13_527 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DateTimeUtils.cs", label="allowNonPublicAccess = true", span="1088-1088"];
m13_471 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DateTimeUtils.cs", label="MemberInfo memberInfo = null", span="981-981"];
m13_474 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DateTimeUtils.cs", label="dataContractAttribute != null && memberInfo != null", span="989-989"];
m13_473 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DateTimeUtils.cs", label="DataMemberAttribute dataMemberAttribute", span="988-988"];
m13_478 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DateTimeUtils.cs", label="propertyAttribute != null", span="996-996"];
m13_489 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DateTimeUtils.cs", label="propertyAttribute != null", span="1013-1013"];
m13_480 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DateTimeUtils.cs", label="string mappedName", span="999-999"];
m13_493 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DateTimeUtils.cs", label="hasMemberAttribute = true", span="1018-1018"];
m13_494 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DateTimeUtils.cs", label="dataMemberAttribute != null", span="1021-1021"];
m13_498 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DateTimeUtils.cs", label="hasMemberAttribute = true", span="1026-1026"];
m13_501 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DateTimeUtils.cs", label="bool hasIgnoreDataMemberAttribute = false", span="1039-1039"];
m13_508 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DateTimeUtils.cs", label="defaultValueAttribute != null", span="1060-1060"];
m13_529 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DateTimeUtils.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", span="976-976"];
m13_45 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DateTimeUtils.cs", label="UpdateCache(updatedCache)", span="246-246"];
m13_205 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", file="DateTimeUtils.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", span="500-500"];
m13_259 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DateTimeUtils.cs", label="MethodInfo currentOnError = null", span="604-604"];
m13_305 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryReadOffset(Newtonsoft.Json.Utilities.StringReference, int, out System.TimeSpan)", file="DateTimeUtils.cs", label="int hours", span="603-603"];
m13_530 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataMemberAttribute(System.Reflection.MemberInfo)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataMemberAttribute(System.Reflection.MemberInfo)", span="124-124"];
m13_332 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="DateTimeUtils.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", span="730-730"];
m13_51 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.SwitchToUtcTime(System.DateTime)", file="DateTimeUtils.cs", label="DateTimeKind.Local", span="140-140"];
m13_356 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(char[], int, System.DateTime, System.TimeSpan?, System.DateTimeKind, Newtonsoft.Json.DateFormatHandling)", file="DateTimeUtils.cs", label="chars[pos++] = 'Z'", span="688-688"];
m13_358 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(char[], int, System.DateTime, System.TimeSpan?, System.DateTimeKind, Newtonsoft.Json.DateFormatHandling)", file="DateTimeUtils.cs", label="Exit Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(char[], int, System.DateTime, System.TimeSpan?, System.DateTimeKind, Newtonsoft.Json.DateFormatHandling)", span="645-645"];
m13_360 [cluster="long.ToString(System.IFormatProvider)", file="DateTimeUtils.cs", label="Entry long.ToString(System.IFormatProvider)", span="0-0"];
m13_362 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDefaultIsoDate(char[], int, System.DateTime)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.WriteDefaultIsoDate(char[], int, System.DateTime)", span="696-696"];
m13_364 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDefaultIsoDate(char[], int, System.DateTime)", file="DateTimeUtils.cs", label="int year", span="700-700"];
m13_366 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDefaultIsoDate(char[], int, System.DateTime)", file="DateTimeUtils.cs", label="int day", span="702-702"];
m13_368 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDefaultIsoDate(char[], int, System.DateTime)", file="DateTimeUtils.cs", label="CopyIntToCharArray(chars, start, year, 4)", span="705-705"];
m13_370 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDefaultIsoDate(char[], int, System.DateTime)", file="DateTimeUtils.cs", label="CopyIntToCharArray(chars, start + 5, month, 2)", span="707-707"];
m13_371 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDefaultIsoDate(char[], int, System.DateTime)", file="DateTimeUtils.cs", label="chars[start + 7] = '-'", span="708-708"];
m13_372 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDefaultIsoDate(char[], int, System.DateTime)", file="DateTimeUtils.cs", label="CopyIntToCharArray(chars, start + 8, day, 2)", span="709-709"];
m13_374 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDefaultIsoDate(char[], int, System.DateTime)", file="DateTimeUtils.cs", label="CopyIntToCharArray(chars, start + 11, dt.Hour, 2)", span="711-711"];
m13_375 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDefaultIsoDate(char[], int, System.DateTime)", file="DateTimeUtils.cs", label="chars[start + 13] = ':'", span="712-712"];
m13_355 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(char[], int, System.DateTime, System.TimeSpan?, System.DateTimeKind, Newtonsoft.Json.DateFormatHandling)", file="DateTimeUtils.cs", label="DateTimeKind.Utc", span="687-687"];
m13_357 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(char[], int, System.DateTime, System.TimeSpan?, System.DateTimeKind, Newtonsoft.Json.DateFormatHandling)", file="DateTimeUtils.cs", label="return pos;", span="693-693"];
m13_359 [cluster="string.CopyTo(int, char[], int, int)", file="DateTimeUtils.cs", label="Entry string.CopyTo(int, char[], int, int)", span="0-0"];
m13_361 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeOffset(char[], int, System.TimeSpan, Newtonsoft.Json.DateFormatHandling)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeOffset(char[], int, System.TimeSpan, Newtonsoft.Json.DateFormatHandling)", span="746-746"];
m13_363 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDefaultIsoDate(char[], int, System.DateTime)", file="DateTimeUtils.cs", label="int length = 19", span="698-698"];
m13_365 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDefaultIsoDate(char[], int, System.DateTime)", file="DateTimeUtils.cs", label="int month", span="701-701"];
m13_367 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDefaultIsoDate(char[], int, System.DateTime)", file="DateTimeUtils.cs", label="GetDateValues(dt, out year, out month, out day)", span="703-703"];
m13_369 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDefaultIsoDate(char[], int, System.DateTime)", file="DateTimeUtils.cs", label="chars[start + 4] = '-'", span="706-706"];
m13_354 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(char[], int, System.DateTime, System.TimeSpan?, System.DateTimeKind, Newtonsoft.Json.DateFormatHandling)", file="DateTimeUtils.cs", label="pos = WriteDateTimeOffset(chars, pos, offset ?? value.GetUtcOffset(), format)", span="685-685"];
m13_373 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDefaultIsoDate(char[], int, System.DateTime)", file="DateTimeUtils.cs", label="chars[start + 10] = 'T'", span="710-710"];
m13_376 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDefaultIsoDate(char[], int, System.DateTime)", file="DateTimeUtils.cs", label="CopyIntToCharArray(chars, start + 14, dt.Minute, 2)", span="713-713"];
m13_340 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(char[], int, System.DateTime, System.TimeSpan?, System.DateTimeKind, Newtonsoft.Json.DateFormatHandling)", file="DateTimeUtils.cs", label="string ticksText = javaScriptTicks.ToString(CultureInfo.InvariantCulture)", span="658-658"];
m13_342 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(char[], int, System.DateTime, System.TimeSpan?, System.DateTimeKind, Newtonsoft.Json.DateFormatHandling)", file="DateTimeUtils.cs", label="pos += ticksText.Length", span="660-660"];
m13_343 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(char[], int, System.DateTime, System.TimeSpan?, System.DateTimeKind, Newtonsoft.Json.DateFormatHandling)", file="DateTimeUtils.cs", label=kind, span="662-662"];
m13_344 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(char[], int, System.DateTime, System.TimeSpan?, System.DateTimeKind, Newtonsoft.Json.DateFormatHandling)", file="DateTimeUtils.cs", label="DateTimeKind.Unspecified", span="664-664"];
m13_341 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(char[], int, System.DateTime, System.TimeSpan?, System.DateTimeKind, Newtonsoft.Json.DateFormatHandling)", file="DateTimeUtils.cs", label="ticksText.CopyTo(0, chars, pos, ticksText.Length)", span="659-659"];
m13_345 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(char[], int, System.DateTime, System.TimeSpan?, System.DateTimeKind, Newtonsoft.Json.DateFormatHandling)", file="DateTimeUtils.cs", label="value != DateTime.MaxValue && value != DateTime.MinValue", span="665-665"];
m13_346 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(char[], int, System.DateTime, System.TimeSpan?, System.DateTimeKind, Newtonsoft.Json.DateFormatHandling)", file="DateTimeUtils.cs", label="pos = WriteDateTimeOffset(chars, pos, o, format)", span="667-667"];
m13_321 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", file="DateTimeUtils.cs", label="return contract;", span="721-721"];
m13_331 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="DateTimeUtils.cs", label="return contract;", span="743-743"];
m13_243 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DateTimeUtils.cs", label="!t.IsGenericType() || (t.GetGenericTypeDefinition() != typeof(ConcurrentDictionary<,>))", span="577-577"];
m13_244 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DateTimeUtils.cs", label="contract.OnDeserializedCallbacks.AddRange(onDeserialized)", span="578-578"];
m13_245 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DateTimeUtils.cs", label="onError != null", span="584-584"];
m13_246 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DateTimeUtils.cs", label="contract.OnErrorCallbacks.AddRange(onError)", span="585-585"];
m13_247 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DateTimeUtils.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", span="547-547"];
m13_248 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", span="588-588"];
m13_250 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DateTimeUtils.cs", label="onSerialized = null", span="591-591"];
m13_254 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DateTimeUtils.cs", label="GetClassHierarchyForType(type)", span="596-596"];
m13_255 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DateTimeUtils.cs", label="MethodInfo currentOnSerializing = null", span="600-600"];
m13_249 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DateTimeUtils.cs", label="onSerializing = null", span="590-590"];
m13_253 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DateTimeUtils.cs", label="onError = null", span="594-594"];
m13_251 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DateTimeUtils.cs", label="onDeserializing = null", span="592-592"];
m13_252 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DateTimeUtils.cs", label="onDeserialized = null", span="593-593"];
m13_256 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DateTimeUtils.cs", label="MethodInfo currentOnSerialized = null", span="601-601"];
m13_466 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", span="585-585"];
m13_422 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.GetDateValues(System.DateTime, out int, out int, out int)", file="DateTimeUtils.cs", label="y100 = 3", span="798-798"];
m13_163 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="DateTimeUtils.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m13_539 [cluster="System.Type.GetMethod(string, System.Type[])", file="DateTimeUtils.cs", label="Entry System.Type.GetMethod(string, System.Type[])", span="0-0"];
m13_85 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.UniversialTicksToJavaScriptTicks(long)", file="DateTimeUtils.cs", label="return javaScriptTicks;", span="202-202"];
m13_225 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffsetExact(string, string, System.Globalization.CultureInfo, out System.DateTimeOffset)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffsetExact(string, string, System.Globalization.CultureInfo, out System.DateTimeOffset)", span="585-585"];
m13_207 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", span="505-505"];
m13_391 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="DateTimeUtils.cs", label="return false;", span="850-850"];
m13_392 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="DateTimeUtils.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", span="824-824"];
m13_393 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetConverter(System.Type)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.GetConverter(System.Type)", span="542-542"];
m13_394 [cluster="System.ComponentModel.TypeConverter.CanConvertTo(System.Type)", file="DateTimeUtils.cs", label="Entry System.ComponentModel.TypeConverter.CanConvertTo(System.Type)", span="0-0"];
m13_395 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DateTimeUtils.cs", label="!method.IsDefined(attributeType, false)", span="855-855"];
m13_88 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ConvertJavaScriptTicksToDateTime(long)", file="DateTimeUtils.cs", label="DateTime dateTime = new DateTime((javaScriptTicks * 10000) + InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="207-207"];
m13_138 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffsetIso(Newtonsoft.Json.Utilities.StringReference, out System.DateTimeOffset)", file="DateTimeUtils.cs", label="ParserTimeZone.LocalEastOfUtc", span="300-300"];
m13_152 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.CreateDateTime(Newtonsoft.Json.Utilities.DateTimeParser)", file="DateTimeUtils.cs", label="is24Hour = true", span="325-325"];
m13_18 [cluster="Unk.nameof", file="DateTimeUtils.cs", label="Entry Unk.nameof", span=""];
m13_19 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.CreateArgumentOutOfRangeException(string, object, string)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.CreateArgumentOutOfRangeException(string, object, string)", span="71-71"];
m13_20 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.EnsureDateTime(System.DateTime, Newtonsoft.Json.DateTimeZoneHandling)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.EnsureDateTime(System.DateTime, Newtonsoft.Json.DateTimeZoneHandling)", span="92-92"];
m13_21 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.EnsureDateTime(System.DateTime, Newtonsoft.Json.DateTimeZoneHandling)", file="DateTimeUtils.cs", label=timeZone, span="94-94"];
m13_22 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.EnsureDateTime(System.DateTime, Newtonsoft.Json.DateTimeZoneHandling)", file="DateTimeUtils.cs", label="DateTimeZoneHandling.Local", span="96-96"];
m13_227 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffset(string, string, System.Globalization.CultureInfo, out System.DateTimeOffset)", file="DateTimeUtils.cs", label="s.Length > 0", span="454-454"];
m13_319 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", file="DateTimeUtils.cs", label="JsonLinqContract contract = new JsonLinqContract(objectType)", span="718-718"];
m13_203 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", span="500-500"];
m13_141 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffsetIso(Newtonsoft.Json.Utilities.StringReference, out System.DateTimeOffset)", file="DateTimeUtils.cs", label="long ticks = d.Ticks - offset.Ticks", span="308-308"];
m13_170 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(Newtonsoft.Json.Utilities.StringReference, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out System.DateTime)", file="DateTimeUtils.cs", label="return true;", span="354-354"];
m13_167 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(Newtonsoft.Json.Utilities.StringReference, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out System.DateTime)", file="DateTimeUtils.cs", label="s[i] == '/'", span="348-348"];
m13_166 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(Newtonsoft.Json.Utilities.StringReference, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out System.DateTime)", file="DateTimeUtils.cs", label="int i = s.StartIndex", span="347-347"];
m13_168 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(Newtonsoft.Json.Utilities.StringReference, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out System.DateTime)", file="DateTimeUtils.cs", label="s.Length >= 9 && s.StartsWith(''/Date('') && s.EndsWith('')/'')", span="350-350"];
m13_169 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(Newtonsoft.Json.Utilities.StringReference, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out System.DateTime)", file="DateTimeUtils.cs", label="TryParseDateTimeMicrosoft(s, dateTimeZoneHandling, out dt)", span="352-352"];
m13_171 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(Newtonsoft.Json.Utilities.StringReference, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out System.DateTime)", file="DateTimeUtils.cs", label="s.Length >= 19 && s.Length <= 40 && char.IsDigit(s[i]) && s[i + 10] == 'T'", span="358-358"];
m13_172 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(Newtonsoft.Json.Utilities.StringReference, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out System.DateTime)", file="DateTimeUtils.cs", label="TryParseDateTimeIso(s, dateTimeZoneHandling, out dt)", span="360-360"];
m13_164 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(Newtonsoft.Json.Utilities.StringReference, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out System.DateTime)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(Newtonsoft.Json.Utilities.StringReference, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out System.DateTime)", span="343-343"];
m13_165 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(Newtonsoft.Json.Utilities.StringReference, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out System.DateTime)", file="DateTimeUtils.cs", label="s.Length > 0", span="345-345"];
m13_173 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(Newtonsoft.Json.Utilities.StringReference, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out System.DateTime)", file="DateTimeUtils.cs", label="return true;", span="362-362"];
m13_174 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(Newtonsoft.Json.Utilities.StringReference, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out System.DateTime)", file="DateTimeUtils.cs", label="!string.IsNullOrEmpty(dateFormatString)", span="366-366"];
m13_142 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffsetIso(Newtonsoft.Json.Utilities.StringReference, out System.DateTimeOffset)", file="DateTimeUtils.cs", label="ticks < 0 || ticks > 3155378975999999999", span="309-309"];
m13_158 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.CreateDateTime(Newtonsoft.Json.Utilities.DateTimeParser)", color=green, community=0, file="DateTimeUtils.cs", label="d = d.AddDays(1)", prediction=1, span="338-338"];
m13_159 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.CreateDateTime(Newtonsoft.Json.Utilities.DateTimeParser)", file="DateTimeUtils.cs", label="return d;", span="340-340"];
m13_160 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.CreateDateTime(Newtonsoft.Json.Utilities.DateTimeParser)", file="DateTimeUtils.cs", label="Exit Newtonsoft.Json.Utilities.DateTimeUtils.CreateDateTime(Newtonsoft.Json.Utilities.DateTimeParser)", span="320-320"];
m13_161 [cluster="System.DateTime.DateTime(int, int, int, int, int, int)", file="DateTimeUtils.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int)", span="0-0"];
m13_162 [cluster="System.DateTime.AddTicks(long)", file="DateTimeUtils.cs", label="Entry System.DateTime.AddTicks(long)", span="0-0"];
m13_333 [cluster="System.IO.TextWriter.Write(string)", file="DateTimeUtils.cs", label="Entry System.IO.TextWriter.Write(string)", span="0-0"];
m13_229 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffset(string, string, System.Globalization.CultureInfo, out System.DateTimeOffset)", file="DateTimeUtils.cs", label="s.Length >= 9 && s.StartsWith(''/Date('', StringComparison.Ordinal) && s.EndsWith('')/'', StringComparison.Ordinal)", span="458-458"];
m13_235 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffset(string, string, System.Globalization.CultureInfo, out System.DateTimeOffset)", file="DateTimeUtils.cs", label="return true;", span="472-472"];
m13_234 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffset(string, string, System.Globalization.CultureInfo, out System.DateTimeOffset)", file="DateTimeUtils.cs", label="TryParseDateTimeOffsetIso(new StringReference(s.ToCharArray(), 0, s.Length), out dt)", span="470-470"];
m13_236 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffset(string, string, System.Globalization.CultureInfo, out System.DateTimeOffset)", file="DateTimeUtils.cs", label="!string.IsNullOrEmpty(dateFormatString)", span="477-477"];
m13_237 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffset(string, string, System.Globalization.CultureInfo, out System.DateTimeOffset)", file="DateTimeUtils.cs", label="TryParseDateTimeOffsetExact(s, dateFormatString, culture, out dt)", span="479-479"];
m13_238 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffset(string, string, System.Globalization.CultureInfo, out System.DateTimeOffset)", file="DateTimeUtils.cs", label="return true;", span="481-481"];
m13_239 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffset(string, string, System.Globalization.CultureInfo, out System.DateTimeOffset)", file="DateTimeUtils.cs", label="dt = default(DateTimeOffset)", span="486-486"];
m13_240 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffset(string, string, System.Globalization.CultureInfo, out System.DateTimeOffset)", file="DateTimeUtils.cs", label="return false;", span="487-487"];
m13_241 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffset(string, string, System.Globalization.CultureInfo, out System.DateTimeOffset)", file="DateTimeUtils.cs", label="Exit Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffset(string, string, System.Globalization.CultureInfo, out System.DateTimeOffset)", span="452-452"];
m13_242 [cluster="System.DateTimeOffset.TryParseExact(string, string, System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTimeOffset)", file="DateTimeUtils.cs", label="Entry System.DateTimeOffset.TryParseExact(string, string, System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTimeOffset)", span="0-0"];
m13_230 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffset(string, string, System.Globalization.CultureInfo, out System.DateTimeOffset)", file="DateTimeUtils.cs", label="TryParseDateTimeOffsetMicrosoft(new StringReference(s.ToCharArray(), 0, s.Length), out dt)", span="460-460"];
m13_233 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffset(string, string, System.Globalization.CultureInfo, out System.DateTimeOffset)", file="DateTimeUtils.cs", label="DateTimeOffset.TryParseExact(s, IsoDateFormat, CultureInfo.InvariantCulture, DateTimeStyles.RoundtripKind, out dt)", span="468-468"];
m13_231 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffset(string, string, System.Globalization.CultureInfo, out System.DateTimeOffset)", file="DateTimeUtils.cs", label="return true;", span="462-462"];
m13_232 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffset(string, string, System.Globalization.CultureInfo, out System.DateTimeOffset)", file="DateTimeUtils.cs", label="s.Length >= 19 && s.Length <= 40 && char.IsDigit(s[0]) && s[10] == 'T'", span="466-466"];
m13_34 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DateTimeUtils.cs", label="type == null", span="226-226"];
m13_469 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", span="1107-1107"];
m13_543 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="DateTimeUtils.cs", label="MemberInfo specifiedMember = member.DeclaringType.GetProperty(member.Name + JsonTypeReflector.SpecifiedPostfix)", span="1109-1109"];
m13_545 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="DateTimeUtils.cs", label="specifiedMember = member.DeclaringType.GetField(member.Name + JsonTypeReflector.SpecifiedPostfix)", span="1111-1111"];
m13_549 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="DateTimeUtils.cs", label="property.GetIsSpecified = o => (bool)specifiedPropertyGet(o)", span="1120-1120"];
m13_550 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="DateTimeUtils.cs", label="ReflectionUtils.CanSetMemberValue(specifiedMember, allowNonPublicAccess, false)", span="1122-1122"];
m13_551 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="DateTimeUtils.cs", label="property.SetIsSpecified = JsonTypeReflector.ReflectionDelegateFactory.CreateSet<object>(specifiedMember)", span="1123-1123"];
m13_547 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="DateTimeUtils.cs", label="return;", span="1115-1115"];
m13_544 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="DateTimeUtils.cs", label="specifiedMember == null", span="1110-1110"];
m13_546 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="DateTimeUtils.cs", label="specifiedMember == null || ReflectionUtils.GetMemberUnderlyingType(specifiedMember) != typeof(bool)", span="1113-1113"];
m13_548 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="DateTimeUtils.cs", label="Func<object, object> specifiedPropertyGet = JsonTypeReflector.ReflectionDelegateFactory.CreateGet<object>(specifiedMember)", span="1118-1118"];
m13_552 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="DateTimeUtils.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", span="1107-1107"];
m13_178 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(Newtonsoft.Json.Utilities.StringReference, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out System.DateTime)", file="DateTimeUtils.cs", label="return false;", span="376-376"];
m13_183 [cluster="char.IsDigit(char)", file="DateTimeUtils.cs", label="Entry char.IsDigit(char)", span="0-0"];
m13_180 [cluster="Newtonsoft.Json.Utilities.StringReference.StartsWith(string)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Utilities.StringReference.StartsWith(string)", span="81-81"];
m13_182 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeMicrosoft(Newtonsoft.Json.Utilities.StringReference, Newtonsoft.Json.DateTimeZoneHandling, out System.DateTime)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeMicrosoft(Newtonsoft.Json.Utilities.StringReference, Newtonsoft.Json.DateTimeZoneHandling, out System.DateTime)", span="521-521"];
m13_184 [cluster="string.IsNullOrEmpty(string)", file="DateTimeUtils.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m13_181 [cluster="Newtonsoft.Json.Utilities.StringReference.EndsWith(string)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Utilities.StringReference.EndsWith(string)", span="101-101"];
m13_186 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeExact(string, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out System.DateTime)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeExact(string, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out System.DateTime)", span="552-552"];
m13_187 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(string, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out System.DateTime)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(string, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out System.DateTime)", span="379-379"];
m13_188 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(string, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out System.DateTime)", file="DateTimeUtils.cs", label="s.Length > 0", span="381-381"];
m13_189 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(string, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out System.DateTime)", file="DateTimeUtils.cs", label="s[0] == '/'", span="383-383"];
m13_190 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(string, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out System.DateTime)", file="DateTimeUtils.cs", label="s.Length >= 9 && s.StartsWith(''/Date('', StringComparison.Ordinal) && s.EndsWith('')/'', StringComparison.Ordinal)", span="385-385"];
m13_191 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(string, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out System.DateTime)", file="DateTimeUtils.cs", label="TryParseDateTimeMicrosoft(new StringReference(s.ToCharArray(), 0, s.Length), dateTimeZoneHandling, out dt)", span="387-387"];
m13_192 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(string, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out System.DateTime)", file="DateTimeUtils.cs", label="return true;", span="389-389"];
m13_193 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(string, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out System.DateTime)", file="DateTimeUtils.cs", label="s.Length >= 19 && s.Length <= 40 && char.IsDigit(s[0]) && s[10] == 'T'", span="393-393"];
m13_194 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(string, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out System.DateTime)", file="DateTimeUtils.cs", label="DateTime.TryParseExact(s, IsoDateFormat, CultureInfo.InvariantCulture, DateTimeStyles.RoundtripKind, out dt)", span="395-395"];
m13_195 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(string, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out System.DateTime)", file="DateTimeUtils.cs", label="dt = EnsureDateTime(dt, dateTimeZoneHandling)", span="397-397"];
m13_196 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(string, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out System.DateTime)", file="DateTimeUtils.cs", label="return true;", span="398-398"];
m13_197 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(string, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out System.DateTime)", file="DateTimeUtils.cs", label="!string.IsNullOrEmpty(dateFormatString)", span="402-402"];
m13_198 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(string, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out System.DateTime)", file="DateTimeUtils.cs", label="TryParseDateTimeExact(s, dateTimeZoneHandling, dateFormatString, culture, out dt)", span="404-404"];
m13_185 [cluster="Newtonsoft.Json.Utilities.StringReference.ToString()", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Utilities.StringReference.ToString()", span="62-62"];
m13_199 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(string, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out System.DateTime)", file="DateTimeUtils.cs", label="return true;", span="406-406"];
m13_200 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(string, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out System.DateTime)", file="DateTimeUtils.cs", label="dt = default(DateTime)", span="411-411"];
m13_289 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffsetMicrosoft(Newtonsoft.Json.Utilities.StringReference, out System.DateTimeOffset)", file="DateTimeUtils.cs", label="dt = default(DateTime)", span="575-575"];
m13_62 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DateTimeUtils.cs", label="List<MemberInfo> defaultMembers = ReflectionUtils.GetFieldsAndProperties(objectType, DefaultMembersSearchFlags)\r\n         .Where(m => !ReflectionUtils.IsIndexedProperty(m)).ToList()", span="280-281"];
m13_63 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DateTimeUtils.cs", label=allMembers, span="283-283"];
m13_64 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DateTimeUtils.cs", label="SerializeCompilerGeneratedMembers || !member.IsDefined(typeof (CompilerGeneratedAttribute), true)", span="286-286"];
m13_65 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DateTimeUtils.cs", label="defaultMembers.Contains(member)", span="288-288"];
m13_66 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DateTimeUtils.cs", label="serializableMembers.Add(member)", span="291-291"];
m13_68 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DateTimeUtils.cs", label="serializableMembers.Add(member)", span="298-298"];
m13_70 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DateTimeUtils.cs", label="serializableMembers.Add(member)", span="301-301"];
m13_67 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DateTimeUtils.cs", label="JsonTypeReflector.GetAttribute<JsonPropertyAttribute>(member.GetCustomAttributeProvider()) != null", span="297-297"];
m13_69 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DateTimeUtils.cs", label="dataContractAttribute != null && JsonTypeReflector.GetAttribute<DataMemberAttribute>(member.GetCustomAttributeProvider()) != null", span="300-300"];
m13_71 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DateTimeUtils.cs", label="memberSerialization == MemberSerialization.Fields && member.MemberType() == MemberTypes.Field", span="303-303"];
m13_136 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffsetIso(Newtonsoft.Json.Utilities.StringReference, out System.DateTimeOffset)", file="DateTimeUtils.cs", label="ParserTimeZone.LocalWestOfUtc", span="297-297"];
m13_217 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffset(Newtonsoft.Json.Utilities.StringReference, string, System.Globalization.CultureInfo, out System.DateTimeOffset)", file="DateTimeUtils.cs", label="return true;", span="435-435"];
m13_220 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffset(Newtonsoft.Json.Utilities.StringReference, string, System.Globalization.CultureInfo, out System.DateTimeOffset)", file="DateTimeUtils.cs", label="return true;", span="443-443"];
m13_222 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffset(Newtonsoft.Json.Utilities.StringReference, string, System.Globalization.CultureInfo, out System.DateTimeOffset)", file="DateTimeUtils.cs", label="return false;", span="449-449"];
m13_213 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffset(Newtonsoft.Json.Utilities.StringReference, string, System.Globalization.CultureInfo, out System.DateTimeOffset)", file="DateTimeUtils.cs", label="TryParseDateTimeOffsetMicrosoft(s, out dt)", span="425-425"];
m13_216 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffset(Newtonsoft.Json.Utilities.StringReference, string, System.Globalization.CultureInfo, out System.DateTimeOffset)", file="DateTimeUtils.cs", label="TryParseDateTimeOffsetIso(s, out dt)", span="433-433"];
m13_215 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffset(Newtonsoft.Json.Utilities.StringReference, string, System.Globalization.CultureInfo, out System.DateTimeOffset)", file="DateTimeUtils.cs", label="s.Length >= 19 && s.Length <= 40 && char.IsDigit(s[i]) && s[i + 10] == 'T'", span="431-431"];
m13_218 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffset(Newtonsoft.Json.Utilities.StringReference, string, System.Globalization.CultureInfo, out System.DateTimeOffset)", file="DateTimeUtils.cs", label="!string.IsNullOrEmpty(dateFormatString)", span="439-439"];
m13_219 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffset(Newtonsoft.Json.Utilities.StringReference, string, System.Globalization.CultureInfo, out System.DateTimeOffset)", file="DateTimeUtils.cs", label="TryParseDateTimeOffsetExact(s.ToString(), dateFormatString, culture, out dt)", span="441-441"];
m13_221 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffset(Newtonsoft.Json.Utilities.StringReference, string, System.Globalization.CultureInfo, out System.DateTimeOffset)", file="DateTimeUtils.cs", label="dt = default(DateTimeOffset)", span="448-448"];
m13_211 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffset(Newtonsoft.Json.Utilities.StringReference, string, System.Globalization.CultureInfo, out System.DateTimeOffset)", file="DateTimeUtils.cs", label="s[i] == '/'", span="421-421"];
m13_214 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffset(Newtonsoft.Json.Utilities.StringReference, string, System.Globalization.CultureInfo, out System.DateTimeOffset)", file="DateTimeUtils.cs", label="return true;", span="427-427"];
m13_212 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffset(Newtonsoft.Json.Utilities.StringReference, string, System.Globalization.CultureInfo, out System.DateTimeOffset)", file="DateTimeUtils.cs", label="s.Length >= 9 && s.StartsWith(''/Date('') && s.EndsWith('')/'')", span="423-423"];
m13_223 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffset(Newtonsoft.Json.Utilities.StringReference, string, System.Globalization.CultureInfo, out System.DateTimeOffset)", file="DateTimeUtils.cs", label="Exit Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffset(Newtonsoft.Json.Utilities.StringReference, string, System.Globalization.CultureInfo, out System.DateTimeOffset)", span="416-416"];
m13_390 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="DateTimeUtils.cs", label="return true;", span="843-843"];
m13_416 [cluster="string.FormatWith(System.IFormatProvider, object, object)", file="DateTimeUtils.cs", label="Entry string.FormatWith(System.IFormatProvider, object, object)", span="52-52"];
m13_417 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", file="DateTimeUtils.cs", label="type.IsGenericTypeDefinition() || !type.ContainsGenericParameters()", span="888-888"];
m13_418 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", file="DateTimeUtils.cs", label="return type.FullName;", span="889-889"];
m13_419 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", file="DateTimeUtils.cs", label="return string.Format(CultureInfo.InvariantCulture, ''{0}.{1}'', new object[] { type.Namespace, type.Name });", span="891-891"];
m13_429 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DateTimeUtils.cs", label="JsonProperty property = CreateProperty(member, memberSerialization)", span="910-910"];
m13_420 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", file="DateTimeUtils.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", span="886-886"];
m13_423 [cluster="string.Format(System.IFormatProvider, string, params object[])", file="DateTimeUtils.cs", label="Entry string.Format(System.IFormatProvider, string, params object[])", span="0-0"];
m13_421 [cluster="System.Type.IsGenericTypeDefinition()", file="DateTimeUtils.cs", label="Entry System.Type.IsGenericTypeDefinition()", span="134-134"];
m13_431 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DateTimeUtils.cs", label="properties.AddProperty(property)", span="913-913"];
m13_424 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DateTimeUtils.cs", label="List<MemberInfo> members = GetSerializableMembers(type)", span="902-902"];
m13_425 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DateTimeUtils.cs", label="members == null", span="903-903"];
m13_426 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DateTimeUtils.cs", label="throw new JsonSerializationException(''Null collection of seralizable members returned.'');", span="904-904"];
m13_430 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DateTimeUtils.cs", label="property != null", span="912-912"];
m13_427 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DateTimeUtils.cs", label="JsonPropertyCollection properties = new JsonPropertyCollection(type)", span="906-906"];
m13_428 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DateTimeUtils.cs", label=members, span="908-908"];
m13_433 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DateTimeUtils.cs", label="return orderedProperties;", span="917-917"];
m13_434 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DateTimeUtils.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", span="900-900"];
m13_437 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="DateTimeUtils.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m13_432 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DateTimeUtils.cs", label="IList<JsonProperty> orderedProperties = properties.OrderBy(p => p.Order ?? -1).ToList()", span="916-916"];
m13_435 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="52-52"];
m13_436 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", span="948-948"];
m13_438 [cluster="lambda expression", file="DateTimeUtils.cs", label="Entry lambda expression", span="916-916"];
m13_449 [cluster="Newtonsoft.Json.Serialization.ReflectionValueProvider.ReflectionValueProvider(System.Reflection.MemberInfo)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Serialization.ReflectionValueProvider.ReflectionValueProvider(System.Reflection.MemberInfo)", span="43-43"];
m13_33 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", span="224-224"];
m13_46 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DateTimeUtils.cs", label="return contract;", span="250-250"];
m13_48 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="DateTimeUtils.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m13_50 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="DateTimeUtils.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m13_52 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="DateTimeUtils.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m13_54 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", span="258-258"];
m13_47 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DateTimeUtils.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", span="224-224"];
m13_49 [cluster="object.GetType()", file="DateTimeUtils.cs", label="Entry object.GetType()", span="0-0"];
m13_53 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="DateTimeUtils.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m13_84 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.UniversialTicksToJavaScriptTicks(long)", file="DateTimeUtils.cs", label="long javaScriptTicks = (universialTicks - InitialJavaScriptDateTicks) / 10000", span="200-200"];
m13_139 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffsetIso(Newtonsoft.Json.Utilities.StringReference, out System.DateTimeOffset)", file="DateTimeUtils.cs", label="offset = new TimeSpan(dateTimeParser.ZoneHour, dateTimeParser.ZoneMinute, 0)", span="301-301"];
m13_126 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DateTimeUtils.cs", label="JsonTypeReflector.FullyTrusted", span="381-381"];
m13_127 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DateTimeUtils.cs", label="contract.DefaultCreator = contract.GetUninitializedObject", span="382-382"];
m13_128 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DateTimeUtils.cs", label="contract.DefaultCreator == null || contract.DefaultCreatorNonPublic", span="385-385"];
m13_129 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DateTimeUtils.cs", label="ConstructorInfo constructor = GetParametrizedConstructor(contract.NonNullableUnderlyingType)", span="387-387"];
m13_131 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DateTimeUtils.cs", label="contract.ParametrizedConstructor = constructor", span="390-390"];
m13_133 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DateTimeUtils.cs", label="return contract;", span="394-394"];
m13_137 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", span="900-900"];
m13_130 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DateTimeUtils.cs", label="constructor != null", span="388-388"];
m13_132 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DateTimeUtils.cs", label="contract.ConstructorParameters.AddRange(CreateConstructorParameters(constructor, contract.Properties))", span="391-391"];
m13_140 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", span="397-397"];
m13_145 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="DateTimeUtils.cs", label="throw new JsonException(''Multiple constructors with the JsonConstructorAttribute.'');", span="402-402"];
m13_134 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DateTimeUtils.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", span="349-349"];
m13_135 [cluster="Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", span="112-112"];
m13_143 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="DateTimeUtils.cs", label="IList<ConstructorInfo> markedConstructors = objectType.GetConstructors(BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).Where(c => c.IsDefined(typeof(JsonConstructorAttribute), true)).ToList()", span="399-399"];
m13_144 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="DateTimeUtils.cs", label="markedConstructors.Count > 1", span="401-401"];
m13_146 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="DateTimeUtils.cs", label="markedConstructors.Count == 1", span="403-403"];
m13_147 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="DateTimeUtils.cs", label="return markedConstructors[0];", span="404-404"];
m13_226 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffset(string, string, System.Globalization.CultureInfo, out System.DateTimeOffset)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffset(string, string, System.Globalization.CultureInfo, out System.DateTimeOffset)", span="452-452"];
m13_83 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ConvertDateTimeToJavaScriptTicks(System.DateTime, bool)", file="DateTimeUtils.cs", label="Exit Newtonsoft.Json.Utilities.DateTimeUtils.ConvertDateTimeToJavaScriptTicks(System.DateTime, bool)", span="191-191"];
m13_201 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(string, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out System.DateTime)", file="DateTimeUtils.cs", label="return false;", span="412-412"];
m13_111 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeIso(Newtonsoft.Json.Utilities.StringReference, Newtonsoft.Json.DateTimeZoneHandling, out System.DateTime)", file="DateTimeUtils.cs", label="TimeSpan offset = new TimeSpan(dateTimeParser.ZoneHour, dateTimeParser.ZoneMinute, 0)", span="254-254"];
m13_112 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeIso(Newtonsoft.Json.Utilities.StringReference, Newtonsoft.Json.DateTimeZoneHandling, out System.DateTime)", file="DateTimeUtils.cs", label="ticks = d.Ticks - offset.Ticks", span="255-255"];
m13_113 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeIso(Newtonsoft.Json.Utilities.StringReference, Newtonsoft.Json.DateTimeZoneHandling, out System.DateTime)", file="DateTimeUtils.cs", label="ticks >= DateTime.MinValue.Ticks", span="256-256"];
m13_115 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeIso(Newtonsoft.Json.Utilities.StringReference, Newtonsoft.Json.DateTimeZoneHandling, out System.DateTime)", file="DateTimeUtils.cs", label="ticks += d.GetUtcOffset().Ticks", span="262-262"];
m13_117 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeIso(Newtonsoft.Json.Utilities.StringReference, Newtonsoft.Json.DateTimeZoneHandling, out System.DateTime)", file="DateTimeUtils.cs", label="ticks = DateTime.MinValue.Ticks", span="265-265"];
m13_121 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeIso(Newtonsoft.Json.Utilities.StringReference, Newtonsoft.Json.DateTimeZoneHandling, out System.DateTime)", file="DateTimeUtils.cs", label="Exit Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeIso(Newtonsoft.Json.Utilities.StringReference, Newtonsoft.Json.DateTimeZoneHandling, out System.DateTime)", span="213-213"];
m13_124 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.CreateDateTime(Newtonsoft.Json.Utilities.DateTimeParser)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.CreateDateTime(Newtonsoft.Json.Utilities.DateTimeParser)", span="320-320"];
m13_116 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeIso(Newtonsoft.Json.Utilities.StringReference, Newtonsoft.Json.DateTimeZoneHandling, out System.DateTime)", file="DateTimeUtils.cs", label="ticks < DateTime.MinValue.Ticks", span="263-263"];
m13_118 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeIso(Newtonsoft.Json.Utilities.StringReference, Newtonsoft.Json.DateTimeZoneHandling, out System.DateTime)", file="DateTimeUtils.cs", label="d = new DateTime(ticks, DateTimeKind.Local)", span="268-268"];
m13_120 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeIso(Newtonsoft.Json.Utilities.StringReference, Newtonsoft.Json.DateTimeZoneHandling, out System.DateTime)", file="DateTimeUtils.cs", label="return true;", span="275-275"];
m13_123 [cluster="Newtonsoft.Json.Utilities.DateTimeParser.Parse(char[], int, int)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeParser.Parse(char[], int, int)", span="90-90"];
m13_125 [cluster="System.TimeSpan.TimeSpan(int, int, int)", file="DateTimeUtils.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int)", span="0-0"];
m13_114 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeIso(Newtonsoft.Json.Utilities.StringReference, Newtonsoft.Json.DateTimeZoneHandling, out System.DateTime)", file="DateTimeUtils.cs", label="d = new DateTime(ticks, DateTimeKind.Utc).ToLocalTime()", span="258-258"];
m13_119 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeIso(Newtonsoft.Json.Utilities.StringReference, Newtonsoft.Json.DateTimeZoneHandling, out System.DateTime)", file="DateTimeUtils.cs", label="dt = EnsureDateTime(d, dateTimeZoneHandling)", span="274-274"];
m13_122 [cluster="Newtonsoft.Json.Utilities.DateTimeParser.DateTimeParser()", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeParser.DateTimeParser()", span="37-37"];
m13_380 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDefaultIsoDate(char[], int, System.DateTime)", file="DateTimeUtils.cs", label="fraction != 0", span="719-719"];
m13_7 [cluster="System.TimeZoneInfo.GetUtcOffset(System.DateTime)", file="DateTimeUtils.cs", label="Entry System.TimeZoneInfo.GetUtcOffset(System.DateTime)", span="0-0"];
m13_82 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ConvertDateTimeToJavaScriptTicks(System.DateTime, bool)", file="DateTimeUtils.cs", label="return UniversialTicksToJavaScriptTicks(ticks);", span="195-195"];
m13_414 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeOffsetString(System.IO.TextWriter, System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", file="DateTimeUtils.cs", label="Exit Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeOffsetString(System.IO.TextWriter, System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", span="767-767"];
m13_339 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(char[], int, System.DateTime, System.TimeSpan?, System.DateTimeKind, Newtonsoft.Json.DateFormatHandling)", file="DateTimeUtils.cs", label="pos += 7", span="656-656"];
m13_276 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DateTimeUtils.cs", label="IsValidCallback(method, parameters, typeof(OnDeserializedAttribute), currentOnDeserialized, ref prevAttributeType)", span="634-634"];
m13_55 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DateTimeUtils.cs", label="bool ignoreSerializableAttribute", span="260-260"];
m13_179 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(Newtonsoft.Json.Utilities.StringReference, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out System.DateTime)", file="DateTimeUtils.cs", label="Exit Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(Newtonsoft.Json.Utilities.StringReference, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out System.DateTime)", span="343-343"];
m13_323 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(System.IO.TextWriter, System.DateTime, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(System.IO.TextWriter, System.DateTime, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", span="631-631"];
m13_378 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDefaultIsoDate(char[], int, System.DateTime)", file="DateTimeUtils.cs", label="CopyIntToCharArray(chars, start + 17, dt.Second, 2)", span="715-715"];
m13_318 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryReadOffset(Newtonsoft.Json.Utilities.StringReference, int, out System.TimeSpan)", file="DateTimeUtils.cs", label="Exit Newtonsoft.Json.Utilities.DateTimeUtils.TryReadOffset(Newtonsoft.Json.Utilities.StringReference, int, out System.TimeSpan)", span="599-599"];
m13_320 [cluster="System.TimeSpan.FromHours(double)", file="DateTimeUtils.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m13_322 [cluster="System.TimeSpan.Negate()", file="DateTimeUtils.cs", label="Entry System.TimeSpan.Negate()", span="0-0"];
m13_560 [cluster="System.Func<T, TResult>.Invoke(T)", file="DateTimeUtils.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m13_324 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(System.IO.TextWriter, System.DateTime, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", file="DateTimeUtils.cs", label="string.IsNullOrEmpty(formatString)", span="633-633"];
m13_326 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(System.IO.TextWriter, System.DateTime, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", file="DateTimeUtils.cs", label="int pos = WriteDateTimeString(chars, 0, value, null, value.Kind, format)", span="636-636"];
m13_325 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(System.IO.TextWriter, System.DateTime, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", file="DateTimeUtils.cs", label="char[] chars = new char[64]", span="635-635"];
m13_327 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(System.IO.TextWriter, System.DateTime, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", file="DateTimeUtils.cs", label="writer.Write(chars, 0, pos)", span="637-637"];
m13_330 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(char[], int, System.DateTime, System.TimeSpan?, System.DateTimeKind, Newtonsoft.Json.DateFormatHandling)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(char[], int, System.DateTime, System.TimeSpan?, System.DateTimeKind, Newtonsoft.Json.DateFormatHandling)", span="645-645"];
m13_328 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(System.IO.TextWriter, System.DateTime, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", file="DateTimeUtils.cs", label="writer.Write(value.ToString(formatString, culture))", span="641-641"];
m13_329 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(System.IO.TextWriter, System.DateTime, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", file="DateTimeUtils.cs", label="Exit Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(System.IO.TextWriter, System.DateTime, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", span="631-631"];
m13_296 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="DateTimeUtils.cs", label="return ret;", span="667-667"];
m13_56 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ToUniversalTicks(System.DateTime)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.ToUniversalTicks(System.DateTime)", span="146-146"];
m13_75 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ConvertDateTimeToJavaScriptTicks(System.DateTime, System.TimeSpan)", file="DateTimeUtils.cs", label="Exit Newtonsoft.Json.Utilities.DateTimeUtils.ConvertDateTimeToJavaScriptTicks(System.DateTime, System.TimeSpan)", span="179-179"];
m13_58 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ToUniversalTicks(System.DateTime)", file="DateTimeUtils.cs", label="return dateTime.Ticks;", span="150-150"];
m13_57 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ToUniversalTicks(System.DateTime)", file="DateTimeUtils.cs", label="dateTime.Kind == DateTimeKind.Utc", span="148-148"];
m13_61 [cluster="System.DateTime.GetUtcOffset()", file="DateTimeUtils.cs", label="Entry System.DateTime.GetUtcOffset()", span="51-51"];
m13_74 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ConvertDateTimeToJavaScriptTicks(System.DateTime, System.TimeSpan)", file="DateTimeUtils.cs", label="return UniversialTicksToJavaScriptTicks(universialTicks);", span="183-183"];
m13_59 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ToUniversalTicks(System.DateTime)", file="DateTimeUtils.cs", label="return ToUniversalTicks(dateTime, dateTime.GetUtcOffset());", span="153-153"];
m13_80 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ConvertDateTimeToJavaScriptTicks(System.DateTime, bool)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.ConvertDateTimeToJavaScriptTicks(System.DateTime, bool)", span="191-191"];
m13_76 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.UniversialTicksToJavaScriptTicks(long)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.UniversialTicksToJavaScriptTicks(long)", span="198-198"];
m13_60 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ToUniversalTicks(System.DateTime)", file="DateTimeUtils.cs", label="Exit Newtonsoft.Json.Utilities.DateTimeUtils.ToUniversalTicks(System.DateTime)", span="146-146"];
m13_72 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ConvertDateTimeToJavaScriptTicks(System.DateTime, System.TimeSpan)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.ConvertDateTimeToJavaScriptTicks(System.DateTime, System.TimeSpan)", span="179-179"];
m13_73 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ConvertDateTimeToJavaScriptTicks(System.DateTime, System.TimeSpan)", file="DateTimeUtils.cs", label="long universialTicks = ToUniversalTicks(dateTime, offset)", span="181-181"];
m13_79 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ConvertDateTimeToJavaScriptTicks(System.DateTime)", file="DateTimeUtils.cs", label="Exit Newtonsoft.Json.Utilities.DateTimeUtils.ConvertDateTimeToJavaScriptTicks(System.DateTime)", span="186-186"];
m13_78 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ConvertDateTimeToJavaScriptTicks(System.DateTime)", file="DateTimeUtils.cs", label="return ConvertDateTimeToJavaScriptTicks(dateTime, true);", span="188-188"];
m13_77 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ConvertDateTimeToJavaScriptTicks(System.DateTime)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.ConvertDateTimeToJavaScriptTicks(System.DateTime)", span="186-186"];
m13_81 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ConvertDateTimeToJavaScriptTicks(System.DateTime, bool)", file="DateTimeUtils.cs", label="long ticks = (convertToUtc) ? ToUniversalTicks(dateTime) : dateTime.Ticks", span="193-193"];
m13_532 [cluster="Newtonsoft.Json.JsonConverterAttribute.CreateJsonConverterInstance(System.Type)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.JsonConverterAttribute.CreateJsonConverterInstance(System.Type)", span="60-60"];
m13_353 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(char[], int, System.DateTime, System.TimeSpan?, System.DateTimeKind, Newtonsoft.Json.DateFormatHandling)", file="DateTimeUtils.cs", label="DateTimeKind.Local", span="684-684"];
m13_377 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDefaultIsoDate(char[], int, System.DateTime)", file="DateTimeUtils.cs", label="chars[start + 16] = ':'", span="714-714"];
m13_37 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.SwitchToLocalTime(System.DateTime)", file="DateTimeUtils.cs", label="DateTimeKind.Unspecified", span="118-118"];
m13_38 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.SwitchToLocalTime(System.DateTime)", file="DateTimeUtils.cs", label="return new DateTime(value.Ticks, DateTimeKind.Local);", span="119-119"];
m13_40 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.SwitchToLocalTime(System.DateTime)", file="DateTimeUtils.cs", label="return value.ToLocalTime();", span="122-122"];
m13_42 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.SwitchToLocalTime(System.DateTime)", file="DateTimeUtils.cs", label="return value;", span="125-125"];
m13_36 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.SwitchToLocalTime(System.DateTime)", file="DateTimeUtils.cs", label="value.Kind", span="116-116"];
m13_39 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.SwitchToLocalTime(System.DateTime)", file="DateTimeUtils.cs", label="DateTimeKind.Utc", span="121-121"];
m13_44 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.SwitchToLocalTime(System.DateTime)", file="DateTimeUtils.cs", label="Exit Newtonsoft.Json.Utilities.DateTimeUtils.SwitchToLocalTime(System.DateTime)", span="114-114"];
m13_41 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.SwitchToLocalTime(System.DateTime)", file="DateTimeUtils.cs", label="DateTimeKind.Local", span="124-124"];
m13_43 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.SwitchToLocalTime(System.DateTime)", file="DateTimeUtils.cs", label="return value;", span="127-127"];
m13_35 [cluster="System.ArgumentException.ArgumentException(string)", file="DateTimeUtils.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m13_150 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="DateTimeUtils.cs", label="return null;", span="410-410"];
m13_151 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="DateTimeUtils.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", span="397-397"];
m13_155 [cluster="lambda expression", file="DateTimeUtils.cs", label="Entry lambda expression", span="399-399"];
m13_156 [cluster="lambda expression", file="DateTimeUtils.cs", label="c.IsDefined(typeof(JsonConstructorAttribute), true)", span="399-399"];
m13_154 [cluster="System.Type.GetConstructor(System.Type[])", file="DateTimeUtils.cs", label="Entry System.Type.GetConstructor(System.Type[])", span="0-0"];
m13_153 [cluster="Newtonsoft.Json.JsonException.JsonException(string)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.JsonException.JsonException(string)", span="54-54"];
m13_157 [cluster="lambda expression", file="DateTimeUtils.cs", label="Exit lambda expression", span="399-399"];
m13_299 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffsetExact(string, string, System.Globalization.CultureInfo, out System.DateTimeOffset)", file="DateTimeUtils.cs", label="dt = temp", span="590-590"];
m13_301 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffsetExact(string, string, System.Globalization.CultureInfo, out System.DateTimeOffset)", file="DateTimeUtils.cs", label="dt = default(DateTimeOffset)", span="594-594"];
m13_302 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffsetExact(string, string, System.Globalization.CultureInfo, out System.DateTimeOffset)", file="DateTimeUtils.cs", label="return false;", span="595-595"];
m13_300 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffsetExact(string, string, System.Globalization.CultureInfo, out System.DateTimeOffset)", file="DateTimeUtils.cs", label="return true;", span="591-591"];
m13_303 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffsetExact(string, string, System.Globalization.CultureInfo, out System.DateTimeOffset)", file="DateTimeUtils.cs", label="Exit Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffsetExact(string, string, System.Globalization.CultureInfo, out System.DateTimeOffset)", span="585-585"];
m13_304 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryReadOffset(Newtonsoft.Json.Utilities.StringReference, int, out System.TimeSpan)", file="DateTimeUtils.cs", label="bool negative = (offsetText[startIndex] == '-')", span="601-601"];
m13_109 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeIso(Newtonsoft.Json.Utilities.StringReference, Newtonsoft.Json.DateTimeZoneHandling, out System.DateTime)", file="DateTimeUtils.cs", label="d = new DateTime(ticks, DateTimeKind.Local)", span="248-248"];
m13_257 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DateTimeUtils.cs", label="MethodInfo currentOnDeserializing = null", span="602-602"];
m13_348 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(char[], int, System.DateTime, System.TimeSpan?, System.DateTimeKind, Newtonsoft.Json.DateFormatHandling)", file="DateTimeUtils.cs", label="pos = WriteDateTimeOffset(chars, pos, o, format)", span="671-671"];
m13_350 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(char[], int, System.DateTime, System.TimeSpan?, System.DateTimeKind, Newtonsoft.Json.DateFormatHandling)", file="DateTimeUtils.cs", label="pos += 3", span="676-676"];
m13_349 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(char[], int, System.DateTime, System.TimeSpan?, System.DateTimeKind, Newtonsoft.Json.DateFormatHandling)", file="DateTimeUtils.cs", label="@'')\/''.CopyTo(0, chars, pos, 3)", span="675-675"];
m13_351 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(char[], int, System.DateTime, System.TimeSpan?, System.DateTimeKind, Newtonsoft.Json.DateFormatHandling)", file="DateTimeUtils.cs", label="pos = WriteDefaultIsoDate(chars, pos, value)", span="680-680"];
m13_352 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(char[], int, System.DateTime, System.TimeSpan?, System.DateTimeKind, Newtonsoft.Json.DateFormatHandling)", file="DateTimeUtils.cs", label=kind, span="682-682"];
m13_258 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DateTimeUtils.cs", label="MethodInfo currentOnDeserialized = null", span="603-603"];
m13_306 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", span="690-690"];
m13_310 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="DateTimeUtils.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", span="690-690"];
m13_311 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", span="92-92"];
m13_315 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", file="DateTimeUtils.cs", label="return contract;", span="708-708"];
m13_307 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="DateTimeUtils.cs", label="JsonArrayContract contract = new JsonArrayContract(objectType)", span="692-692"];
m13_309 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="DateTimeUtils.cs", label="return contract;", span="695-695"];
m13_314 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", file="DateTimeUtils.cs", label="InitializeContract(contract)", span="706-706"];
m13_308 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="DateTimeUtils.cs", label="InitializeContract(contract)", span="693-693"];
m13_312 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", span="703-703"];
m13_313 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", file="DateTimeUtils.cs", label="JsonPrimitiveContract contract = new JsonPrimitiveContract(objectType)", span="705-705"];
m13_316 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", file="DateTimeUtils.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", span="703-703"];
m13_317 [cluster="Newtonsoft.Json.Serialization.JsonPrimitiveContract.JsonPrimitiveContract(System.Type)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Serialization.JsonPrimitiveContract.JsonPrimitiveContract(System.Type)", span="41-41"];
m13_87 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ConvertJavaScriptTicksToDateTime(long)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.ConvertJavaScriptTicksToDateTime(long)", span="205-205"];
m13_379 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDefaultIsoDate(char[], int, System.DateTime)", file="DateTimeUtils.cs", label="int fraction = (int)(dt.Ticks % 10000000L)", span="717-717"];
m13_8 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", span="61-61"];
m13_9 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", file="DateTimeUtils.cs", label=kind, span="63-63"];
m13_16 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", file="DateTimeUtils.cs", label="throw MiscellaneousUtils.CreateArgumentOutOfRangeException(nameof(kind), kind, ''Unexpected DateTimeKind value.'');", span="72-72"];
m13_10 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", file="DateTimeUtils.cs", label="DateTimeKind.Local", span="65-65"];
m13_12 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", file="DateTimeUtils.cs", label="DateTimeKind.Unspecified", span="67-67"];
m13_14 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", file="DateTimeUtils.cs", label="DateTimeKind.Utc", span="69-69"];
m13_11 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", file="DateTimeUtils.cs", label="return XmlDateTimeSerializationMode.Local;", span="66-66"];
m13_13 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", file="DateTimeUtils.cs", label="return XmlDateTimeSerializationMode.Unspecified;", span="68-68"];
m13_15 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", file="DateTimeUtils.cs", label="return XmlDateTimeSerializationMode.Utc;", span="70-70"];
m13_17 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", file="DateTimeUtils.cs", label="Exit Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", span="61-61"];
m13_453 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DateTimeUtils.cs", label="property.ValueProvider = CreateMemberValueProvider(member)", span="953-953"];
m13_455 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DateTimeUtils.cs", label="SetPropertySettingsFromAttributes(property, member.GetCustomAttributeProvider(), member.Name, member.DeclaringType, memberSerialization, out allowNonPublicAccess)", span="956-956"];
m13_461 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DateTimeUtils.cs", label="property.ShouldSerialize = CreateShouldSerializeTest(member)", span="969-969"];
m13_462 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DateTimeUtils.cs", label="SetIsSpecifiedActions(property, member, allowNonPublicAccess)", span="971-971"];
m13_450 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DateTimeUtils.cs", label="JsonProperty property = new JsonProperty()", span="950-950"];
m13_452 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DateTimeUtils.cs", label="property.DeclaringType = member.DeclaringType", span="952-952"];
m13_454 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DateTimeUtils.cs", label="bool allowNonPublicAccess", span="955-955"];
m13_456 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DateTimeUtils.cs", label="memberSerialization != MemberSerialization.Fields", span="958-958"];
m13_457 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DateTimeUtils.cs", label="property.Readable = ReflectionUtils.CanReadMemberValue(member, allowNonPublicAccess)", span="960-960"];
m13_458 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DateTimeUtils.cs", label="property.Writable = ReflectionUtils.CanSetMemberValue(member, allowNonPublicAccess, property.HasMemberAttribute)", span="961-961"];
m13_460 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DateTimeUtils.cs", label="property.Writable = true", span="967-967"];
m13_463 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DateTimeUtils.cs", label="return property;", span="973-973"];
m13_451 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DateTimeUtils.cs", label="property.PropertyType = ReflectionUtils.GetMemberUnderlyingType(member)", span="951-951"];
m13_459 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DateTimeUtils.cs", label="property.Readable = true", span="966-966"];
m13_464 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DateTimeUtils.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", span="948-948"];
m13_4 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.GetUtcOffset(System.DateTime)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.GetUtcOffset(System.DateTime)", span="51-51"];
m13_5 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.GetUtcOffset(System.DateTime)", file="DateTimeUtils.cs", label="return TimeZoneInfo.Local.GetUtcOffset(d);", span="56-56"];
m13_6 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.GetUtcOffset(System.DateTime)", file="DateTimeUtils.cs", label="Exit Newtonsoft.Json.Utilities.DateTimeUtils.GetUtcOffset(System.DateTime)", span="51-51"];
m13_176 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(Newtonsoft.Json.Utilities.StringReference, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out System.DateTime)", file="DateTimeUtils.cs", label="return true;", span="370-370"];
m13_98 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeIso(Newtonsoft.Json.Utilities.StringReference, Newtonsoft.Json.DateTimeZoneHandling, out System.DateTime)", file="DateTimeUtils.cs", label="dateTimeParser.Zone", span="226-226"];
m13_175 [cluster="System.Reflection.MethodBase.GetParameters()", file="DateTimeUtils.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m13_177 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty(string)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty(string)", span="113-113"];
m13_556 [cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateSet<T>(System.Reflection.MemberInfo)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateSet<T>(System.Reflection.MemberInfo)", span="50-50"];
m13_224 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonContainerAttribute(System.Type)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonContainerAttribute(System.Type)", span="90-90"];
m13_285 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", span="650-650"];
m13_288 [cluster="Newtonsoft.Json.Serialization.JsonContract.CreateSerializationCallback(System.Reflection.MethodInfo)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Serialization.JsonContract.CreateSerializationCallback(System.Reflection.MethodInfo)", span="315-315"];
m13_286 [cluster="System.Type.GetMethods(System.Reflection.BindingFlags)", file="DateTimeUtils.cs", label="Entry System.Type.GetMethods(System.Reflection.BindingFlags)", span="0-0"];
m13_287 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", span="853-853"];
m13_291 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="DateTimeUtils.cs", label="Type current = type", span="654-654"];
m13_292 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="DateTimeUtils.cs", label="current != null && current != typeof(object)", span="655-655"];
m13_290 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="DateTimeUtils.cs", label="List<Type> ret = new List<Type>()", span="652-652"];
m13_293 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="DateTimeUtils.cs", label="ret.Add(current)", span="657-657"];
m13_294 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="DateTimeUtils.cs", label="current = current.BaseType", span="661-661"];
m13_347 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(char[], int, System.DateTime, System.TimeSpan?, System.DateTimeKind, Newtonsoft.Json.DateFormatHandling)", file="DateTimeUtils.cs", label="DateTimeKind.Local", span="670-670"];
m13_208 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffset(Newtonsoft.Json.Utilities.StringReference, string, System.Globalization.CultureInfo, out System.DateTimeOffset)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffset(Newtonsoft.Json.Utilities.StringReference, string, System.Globalization.CultureInfo, out System.DateTimeOffset)", span="416-416"];
m13_209 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffset(Newtonsoft.Json.Utilities.StringReference, string, System.Globalization.CultureInfo, out System.DateTimeOffset)", file="DateTimeUtils.cs", label="s.Length > 0", span="418-418"];
m13_555 [cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateGet<T>(System.Reflection.MemberInfo)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateGet<T>(System.Reflection.MemberInfo)", span="37-37"];
m13_298 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffsetExact(string, string, System.Globalization.CultureInfo, out System.DateTimeOffset)", file="DateTimeUtils.cs", label="DateTimeOffset.TryParseExact(text, dateFormatString, culture, DateTimeStyles.RoundtripKind, out temp)", span="588-588"];
m13_228 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type)", span="269-269"];
m13_396 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DateTimeUtils.cs", label="return false;", span="856-856"];
m13_398 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DateTimeUtils.cs", label="throw new JsonException(''Invalid attribute. Both '{0}' and '{1}' in type '{2}' have '{3}'.''.FormatWith(CultureInfo.InvariantCulture, method, currentCallback, GetClrTypeFullName(method.DeclaringType), attributeType));", span="859-859"];
m13_400 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DateTimeUtils.cs", label="throw new JsonException(''Invalid Callback. Method '{3}' in type '{2}' has both '{0}' and '{1}'.''.FormatWith(CultureInfo.InvariantCulture, prevAttributeType, attributeType, GetClrTypeFullName(method.DeclaringType), method));", span="862-862"];
m13_401 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DateTimeUtils.cs", label="method.IsVirtual", span="864-864"];
m13_403 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DateTimeUtils.cs", label="method.ReturnType != typeof(void)", span="867-867"];
m13_397 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DateTimeUtils.cs", label="currentCallback != null", span="858-858"];
m13_399 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DateTimeUtils.cs", label="prevAttributeType != null", span="861-861"];
m13_402 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DateTimeUtils.cs", label="throw new JsonException(''Virtual Method '{0}' of type '{1}' cannot be marked with '{2}' attribute.''.FormatWith(CultureInfo.InvariantCulture, method, GetClrTypeFullName(method.DeclaringType), attributeType));", span="865-865"];
m13_404 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DateTimeUtils.cs", label="throw new JsonException(''Serialization Callback '{1}' in type '{0}' must return void.''.FormatWith(CultureInfo.InvariantCulture, GetClrTypeFullName(method.DeclaringType), method));", span="868-868"];
m13_405 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DateTimeUtils.cs", label="attributeType == typeof(OnErrorAttribute)", span="870-870"];
m13_406 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DateTimeUtils.cs", label="parameters == null || parameters.Length != 2 || parameters[0].ParameterType != typeof(StreamingContext) || parameters[1].ParameterType != typeof(ErrorContext)", span="872-872"];
m13_32 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.UpdateCache(System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.ResolverContractKey, Newtonsoft.Json.Serialization.JsonContract>)", file="DateTimeUtils.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.UpdateCache(System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.ResolverContractKey, Newtonsoft.Json.Serialization.JsonContract>)", span="211-211"];
m13_206 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(System.Reflection.ICustomAttributeProvider, System.Type)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(System.Reflection.ICustomAttributeProvider, System.Type)", span="194-194"];
m13_413 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeOffsetString(System.IO.TextWriter, System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", file="DateTimeUtils.cs", label="writer.Write(value.ToString(formatString, culture))", span="778-778"];
m13_148 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="DateTimeUtils.cs", label="objectType == typeof(Version)", span="407-407"];
m13_0 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.ResolverContractKey(System.Type, System.Type)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Serialization.ResolverContractKey.ResolverContractKey(System.Type, System.Type)", span="62-62"];
m13_1 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.ResolverContractKey(System.Type, System.Type)", file="DateTimeUtils.cs", label="_resolverType = resolverType", span="64-64"];
m13_2 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.ResolverContractKey(System.Type, System.Type)", file="DateTimeUtils.cs", label="_contractType = contractType", span="65-65"];
m13_3 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.ResolverContractKey(System.Type, System.Type)", file="DateTimeUtils.cs", label="Exit Newtonsoft.Json.Serialization.ResolverContractKey.ResolverContractKey(System.Type, System.Type)", span="62-62"];
m13_468 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", span="1094-1094"];
m13_533 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="DateTimeUtils.cs", label="MethodInfo shouldSerializeMethod = member.DeclaringType.GetMethod(JsonTypeReflector.ShouldSerializePrefix + member.Name, ReflectionUtils.EmptyTypes)", span="1096-1096"];
m13_535 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="DateTimeUtils.cs", label="return null;", span="1099-1099"];
m13_537 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="DateTimeUtils.cs", label="return o => (bool)shouldSerializeCall(o);", span="1104-1104"];
m13_534 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="DateTimeUtils.cs", label="shouldSerializeMethod == null || shouldSerializeMethod.ReturnType != typeof(bool)", span="1098-1098"];
m13_536 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="DateTimeUtils.cs", label="MethodCall<object, object> shouldSerializeCall =\r\n        JsonTypeReflector.ReflectionDelegateFactory.CreateMethodCall<object>(shouldSerializeMethod)", span="1101-1102"];
m13_538 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="DateTimeUtils.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", span="1094-1094"];
m13_260 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeMicrosoft(Newtonsoft.Json.Utilities.StringReference, Newtonsoft.Json.DateTimeZoneHandling, out System.DateTime)", file="DateTimeUtils.cs", label="long ticks", span="523-523"];
m13_281 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeExact(string, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out System.DateTime)", file="DateTimeUtils.cs", label="return true;", span="559-559"];
m13_280 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeExact(string, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out System.DateTime)", file="DateTimeUtils.cs", label="dt = temp", span="558-558"];
m13_261 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeMicrosoft(Newtonsoft.Json.Utilities.StringReference, Newtonsoft.Json.DateTimeZoneHandling, out System.DateTime)", file="DateTimeUtils.cs", label="TimeSpan offset", span="524-524"];
m13_283 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeExact(string, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out System.DateTime)", file="DateTimeUtils.cs", label="return false;", span="563-563"];
m13_263 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeMicrosoft(Newtonsoft.Json.Utilities.StringReference, Newtonsoft.Json.DateTimeZoneHandling, out System.DateTime)", file="DateTimeUtils.cs", label="!TryParseMicrosoftDate(text, out ticks, out offset, out kind)", span="527-527"];
m13_264 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeMicrosoft(Newtonsoft.Json.Utilities.StringReference, Newtonsoft.Json.DateTimeZoneHandling, out System.DateTime)", file="DateTimeUtils.cs", label="dt = default(DateTime)", span="529-529"];
m13_266 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeMicrosoft(Newtonsoft.Json.Utilities.StringReference, Newtonsoft.Json.DateTimeZoneHandling, out System.DateTime)", file="DateTimeUtils.cs", label="DateTime utcDateTime = ConvertJavaScriptTicksToDateTime(ticks)", span="533-533"];
m13_267 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeMicrosoft(Newtonsoft.Json.Utilities.StringReference, Newtonsoft.Json.DateTimeZoneHandling, out System.DateTime)", file="DateTimeUtils.cs", label=kind, span="535-535"];
m13_268 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeMicrosoft(Newtonsoft.Json.Utilities.StringReference, Newtonsoft.Json.DateTimeZoneHandling, out System.DateTime)", file="DateTimeUtils.cs", label="DateTimeKind.Unspecified", span="537-537"];
m13_270 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeMicrosoft(Newtonsoft.Json.Utilities.StringReference, Newtonsoft.Json.DateTimeZoneHandling, out System.DateTime)", file="DateTimeUtils.cs", label="DateTimeKind.Local", span="540-540"];
m13_271 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeMicrosoft(Newtonsoft.Json.Utilities.StringReference, Newtonsoft.Json.DateTimeZoneHandling, out System.DateTime)", file="DateTimeUtils.cs", label="dt = utcDateTime.ToLocalTime()", span="541-541"];
m13_272 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeMicrosoft(Newtonsoft.Json.Utilities.StringReference, Newtonsoft.Json.DateTimeZoneHandling, out System.DateTime)", file="DateTimeUtils.cs", label="dt = utcDateTime", span="544-544"];
m13_274 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeMicrosoft(Newtonsoft.Json.Utilities.StringReference, Newtonsoft.Json.DateTimeZoneHandling, out System.DateTime)", file="DateTimeUtils.cs", label="return true;", span="549-549"];
m13_275 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeMicrosoft(Newtonsoft.Json.Utilities.StringReference, Newtonsoft.Json.DateTimeZoneHandling, out System.DateTime)", file="DateTimeUtils.cs", label="Exit Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeMicrosoft(Newtonsoft.Json.Utilities.StringReference, Newtonsoft.Json.DateTimeZoneHandling, out System.DateTime)", span="521-521"];
m13_278 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeExact(string, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out System.DateTime)", file="DateTimeUtils.cs", label="DateTime.TryParseExact(text, dateFormatString, culture, DateTimeStyles.RoundtripKind, out temp)", span="555-555"];
m13_279 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeExact(string, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out System.DateTime)", file="DateTimeUtils.cs", label="temp = EnsureDateTime(temp, dateTimeZoneHandling)", span="557-557"];
m13_282 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeExact(string, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out System.DateTime)", file="DateTimeUtils.cs", label="dt = default(DateTime)", span="562-562"];
m13_265 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeMicrosoft(Newtonsoft.Json.Utilities.StringReference, Newtonsoft.Json.DateTimeZoneHandling, out System.DateTime)", file="DateTimeUtils.cs", label="return false;", span="530-530"];
m13_269 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeMicrosoft(Newtonsoft.Json.Utilities.StringReference, Newtonsoft.Json.DateTimeZoneHandling, out System.DateTime)", file="DateTimeUtils.cs", label="dt = DateTime.SpecifyKind(utcDateTime.ToLocalTime(), DateTimeKind.Unspecified)", span="538-538"];
m13_273 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeMicrosoft(Newtonsoft.Json.Utilities.StringReference, Newtonsoft.Json.DateTimeZoneHandling, out System.DateTime)", file="DateTimeUtils.cs", label="dt = EnsureDateTime(dt, dateTimeZoneHandling)", span="548-548"];
m13_277 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeExact(string, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out System.DateTime)", file="DateTimeUtils.cs", label="DateTime temp", span="554-554"];
m13_262 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeMicrosoft(Newtonsoft.Json.Utilities.StringReference, Newtonsoft.Json.DateTimeZoneHandling, out System.DateTime)", file="DateTimeUtils.cs", label="DateTimeKind kind", span="525-525"];
m13_284 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeExact(string, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out System.DateTime)", file="DateTimeUtils.cs", label="Exit Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeExact(string, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out System.DateTime)", span="552-552"];
m13_467 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", span="619-619"];
m13_210 [cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", span="64-64"];
m13_28 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.EnsureDateTime(System.DateTime, Newtonsoft.Json.DateTimeZoneHandling)", file="DateTimeUtils.cs", label="DateTimeZoneHandling.RoundtripKind", span="105-105"];
m13_29 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.EnsureDateTime(System.DateTime, Newtonsoft.Json.DateTimeZoneHandling)", file="DateTimeUtils.cs", label="throw new ArgumentException(''Invalid date time handling value.'');", span="108-108"];
m13_31 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.EnsureDateTime(System.DateTime, Newtonsoft.Json.DateTimeZoneHandling)", file="DateTimeUtils.cs", label="Exit Newtonsoft.Json.Utilities.DateTimeUtils.EnsureDateTime(System.DateTime, Newtonsoft.Json.DateTimeZoneHandling)", span="92-92"];
m13_30 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.EnsureDateTime(System.DateTime, Newtonsoft.Json.DateTimeZoneHandling)", file="DateTimeUtils.cs", label="return value;", span="111-111"];
m13_563 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(string)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(string)", span="1141-1141"];
m13_564 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(string)", file="DateTimeUtils.cs", label="return ResolvePropertyName(propertyName);", span="1145-1145"];
m13_565 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(string)", file="DateTimeUtils.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(string)", span="1141-1141"];
m13_385 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="DateTimeUtils.cs", label="TypeConverter converter = ConvertUtils.GetConverter(type)", span="827-827"];
m13_386 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="DateTimeUtils.cs", label="converter != null\r\n#if !SILVERLIGHT\r\n && !(converter is ComponentConverter)\r\n && !(converter is ReferenceConverter)\r\n#endif\r\n && converter.GetType() != typeof(TypeConverter)", span="830-835"];
m13_388 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="DateTimeUtils.cs", label="return true;", span="838-838"];
m13_387 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="DateTimeUtils.cs", label="converter.CanConvertTo(typeof(string))", span="837-837"];
m13_382 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", span="100-100"];
m13_384 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", span="824-824"];
m13_381 [cluster="System.Type.IsSubclassOf(System.Type)", file="DateTimeUtils.cs", label="Entry System.Type.IsSubclassOf(System.Type)", span="0-0"];
m13_383 [cluster="System.Type.IsAssignableFrom(System.Type)", file="DateTimeUtils.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m13_389 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="DateTimeUtils.cs", label="type == typeof(Type) || type.IsSubclassOf(typeof(Type))", span="842-842"];
m13_91 [cluster="object.GetCustomAttributeProvider()", file="DateTimeUtils.cs", label="Entry object.GetCustomAttributeProvider()", span="135-135"];
m13_92 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.ICustomAttributeProvider)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.ICustomAttributeProvider)", span="341-341"];
m13_93 [cluster="System.Reflection.MemberInfo.MemberType()", file="DateTimeUtils.cs", label="Entry System.Reflection.MemberInfo.MemberType()", span="89-89"];
m13_94 [cluster="System.Type.AssignableToTypeName(string, out System.Type)", file="DateTimeUtils.cs", label="Entry System.Type.AssignableToTypeName(string, out System.Type)", span="516-516"];
m13_96 [cluster="lambda expression", file="DateTimeUtils.cs", label="!ReflectionUtils.IsIndexedProperty(m)", span="270-270"];
m13_102 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", span="331-331"];
m13_95 [cluster="lambda expression", file="DateTimeUtils.cs", label="Entry lambda expression", span="270-270"];
m13_97 [cluster="lambda expression", file="DateTimeUtils.cs", label="Exit lambda expression", span="270-270"];
m13_100 [cluster="lambda expression", file="DateTimeUtils.cs", label="!ReflectionUtils.IsIndexedProperty(m)", span="281-281"];
m13_99 [cluster="lambda expression", file="DateTimeUtils.cs", label="Entry lambda expression", span="281-281"];
m13_101 [cluster="lambda expression", file="DateTimeUtils.cs", label="Exit lambda expression", span="281-281"];
m13_110 [cluster="System.Type.GetGenericTypeDefinition()", file="DateTimeUtils.cs", label="Entry System.Type.GetGenericTypeDefinition()", span="0-0"];
m13_103 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", file="DateTimeUtils.cs", label="PropertyInfo propertyInfo = memberInfo as PropertyInfo", span="333-333"];
m13_104 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", file="DateTimeUtils.cs", label="propertyInfo != null", span="334-334"];
m13_105 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", file="DateTimeUtils.cs", label="propertyInfo.PropertyType.IsGenericType() && propertyInfo.PropertyType.GetGenericTypeDefinition().FullName == ''System.Data.Objects.DataClasses.EntityReference`1''", span="336-336"];
m13_106 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", file="DateTimeUtils.cs", label="return false;", span="337-337"];
m13_107 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", file="DateTimeUtils.cs", label="return true;", span="340-340"];
m13_108 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", file="DateTimeUtils.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", span="331-331"];
m13_90 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ConvertJavaScriptTicksToDateTime(long)", file="DateTimeUtils.cs", label="Exit Newtonsoft.Json.Utilities.DateTimeUtils.ConvertJavaScriptTicksToDateTime(long)", span="205-205"];
m13_149 [cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", file="DateTimeUtils.cs", label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", span="0-0"];
m13_335 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(char[], int, System.DateTime, System.TimeSpan?, System.DateTimeKind, Newtonsoft.Json.DateFormatHandling)", file="DateTimeUtils.cs", label="format == DateFormatHandling.MicrosoftDateFormat", span="649-649"];
m13_531 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", span="1131-1131"];
m13_561 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", file="DateTimeUtils.cs", label="return propertyName;", span="1133-1133"];
m13_562 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", file="DateTimeUtils.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", span="1131-1131"];
m13_334 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(char[], int, System.DateTime, System.TimeSpan?, System.DateTimeKind, Newtonsoft.Json.DateFormatHandling)", file="DateTimeUtils.cs", label="int pos = start", span="647-647"];
m13_295 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="DateTimeUtils.cs", label="ret.Reverse()", span="666-666"];
m13_540 [cluster="lambda expression", file="DateTimeUtils.cs", label="Entry lambda expression", span="1104-1104"];
m13_440 [cluster="lambda expression", file="DateTimeUtils.cs", label="Exit lambda expression", span="916-916"];
m13_439 [cluster="lambda expression", file="DateTimeUtils.cs", label="p.Order ?? -1", span="916-916"];
m13_337 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(char[], int, System.DateTime, System.TimeSpan?, System.DateTimeKind, Newtonsoft.Json.DateFormatHandling)", file="DateTimeUtils.cs", label="long javaScriptTicks = ConvertDateTimeToJavaScriptTicks(value, o)", span="653-653"];
m13_558 [cluster="lambda expression", file="DateTimeUtils.cs", label="(bool)specifiedPropertyGet(o)", span="1120-1120"];
m13_336 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(char[], int, System.DateTime, System.TimeSpan?, System.DateTimeKind, Newtonsoft.Json.DateFormatHandling)", file="DateTimeUtils.cs", label="TimeSpan o = offset ?? value.GetUtcOffset()", span="651-651"];
m13_338 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(char[], int, System.DateTime, System.TimeSpan?, System.DateTimeKind, Newtonsoft.Json.DateFormatHandling)", file="DateTimeUtils.cs", label="@''\/Date(''.CopyTo(0, chars, pos, 7)", span="655-655"];
m13_541 [cluster="lambda expression", file="DateTimeUtils.cs", label="(bool)shouldSerializeCall(o)", span="1104-1104"];
m13_557 [cluster="lambda expression", file="DateTimeUtils.cs", label="Entry lambda expression", span="1120-1120"];
m13_559 [cluster="lambda expression", file="DateTimeUtils.cs", label="Exit lambda expression", span="1120-1120"];
m13_542 [cluster="lambda expression", file="DateTimeUtils.cs", label="Exit lambda expression", span="1104-1104"];
m13_23 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCache()", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetCache()", span="203-203"];
m13_24 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCache()", file="DateTimeUtils.cs", label=_sharedCache, span="205-205"];
m13_26 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCache()", file="DateTimeUtils.cs", label="return _instanceContractCache;", span="208-208"];
m13_25 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCache()", file="DateTimeUtils.cs", label="return _sharedContractCache;", span="206-206"];
m13_27 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCache()", file="DateTimeUtils.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetCache()", span="203-203"];
m13_407 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DateTimeUtils.cs", label="throw new JsonException(''Serialization Error Callback '{1}' in type '{0}' must have two parameters of type '{2}' and '{3}'.''.FormatWith(CultureInfo.InvariantCulture, GetClrTypeFullName(method.DeclaringType), method, typeof(StreamingContext), typeof(ErrorContext)));", span="873-873"];
m13_297 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="DateTimeUtils.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", span="650-650"];
m13_554 [cluster="System.Type.GetField(string)", file="DateTimeUtils.cs", label="Entry System.Type.GetField(string)", span="0-0"];
m13_86 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.UniversialTicksToJavaScriptTicks(long)", file="DateTimeUtils.cs", label="Exit Newtonsoft.Json.Utilities.DateTimeUtils.UniversialTicksToJavaScriptTicks(long)", span="198-198"];
m13_204 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", file="DateTimeUtils.cs", label="return JsonTypeReflector.GetJsonConverter(objectType.GetCustomAttributeProvider(), objectType);", span="502-502"];
m13_409 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeOffsetString(System.IO.TextWriter, System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", file="DateTimeUtils.cs", label="string.IsNullOrEmpty(formatString)", span="769-769"];
m13_408 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeOffsetString(System.IO.TextWriter, System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeOffsetString(System.IO.TextWriter, System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", span="767-767"];
m13_410 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeOffsetString(System.IO.TextWriter, System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", file="DateTimeUtils.cs", label="char[] chars = new char[64]", span="771-771"];
m13_411 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeOffsetString(System.IO.TextWriter, System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", file="DateTimeUtils.cs", label="int pos = WriteDateTimeString(chars, 0, (format == DateFormatHandling.IsoDateFormat) ? value.DateTime : value.UtcDateTime, value.Offset, DateTimeKind.Local, format)", span="772-772"];
m13_412 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeOffsetString(System.IO.TextWriter, System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", file="DateTimeUtils.cs", label="writer.Write(chars, 0, pos)", span="774-774"];
m13_448 [cluster="Newtonsoft.Json.Serialization.DynamicValueProvider.DynamicValueProvider(System.Reflection.MemberInfo)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Serialization.DynamicValueProvider.DynamicValueProvider(System.Reflection.MemberInfo)", span="51-51"];
m13_441 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", span="925-925"];
m13_443 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="DateTimeUtils.cs", label=DynamicCodeGeneration, span="931-931"];
m13_442 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="DateTimeUtils.cs", label="IValueProvider valueProvider", span="928-928"];
m13_444 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="DateTimeUtils.cs", label="valueProvider = new DynamicValueProvider(member)", span="932-932"];
m13_445 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="DateTimeUtils.cs", label="valueProvider = new ReflectionValueProvider(member)", span="934-934"];
m13_446 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="DateTimeUtils.cs", label="return valueProvider;", span="939-939"];
m13_447 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="DateTimeUtils.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", span="925-925"];
m13_415 [cluster="string.FormatWith(System.IFormatProvider, object, object, object)", file="DateTimeUtils.cs", label="Entry string.FormatWith(System.IFormatProvider, object, object, object)", span="57-57"];
m13_465 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", span="474-474"];
m13_89 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ConvertJavaScriptTicksToDateTime(long)", file="DateTimeUtils.cs", label="return dateTime;", span="209-209"];
m13_553 [cluster="System.Type.GetProperty(string)", file="DateTimeUtils.cs", label="Entry System.Type.GetProperty(string)", span="0-0"];
m13_569 [file="DateTimeUtils.cs", label="Newtonsoft.Json.Serialization.DefaultContractResolver", span=""];
m13_566 [file="DateTimeUtils.cs", label="out Newtonsoft.Json.Serialization.ResolverContractKey", span=""];
m13_570 [file="DateTimeUtils.cs", label=methodCall, span=""];
m13_572 [file="DateTimeUtils.cs", label=specifiedPropertyGet, span=""];
m13_571 [file="DateTimeUtils.cs", label=shouldSerializeCall, span=""];
m14_0 [cluster="Newtonsoft.Json.Linq.JTokenEqualityComparer.Equals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Linq.JTokenEqualityComparer.Equals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="42-42"];
m14_1 [cluster="Newtonsoft.Json.Linq.JTokenEqualityComparer.Equals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", color=green, community=0, file="DefaultContractResolver.cs", label="return JToken.DeepEquals(x, y);", prediction=2, span="44-44"];
m14_2 [cluster="Newtonsoft.Json.Linq.JTokenEqualityComparer.Equals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Linq.JTokenEqualityComparer.Equals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="42-42"];
m14_3 [cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="151-151"];
m14_4 [cluster="Newtonsoft.Json.Linq.JTokenEqualityComparer.GetHashCode(Newtonsoft.Json.Linq.JToken)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Linq.JTokenEqualityComparer.GetHashCode(Newtonsoft.Json.Linq.JToken)", span="53-53"];
m14_5 [cluster="Newtonsoft.Json.Linq.JTokenEqualityComparer.GetHashCode(Newtonsoft.Json.Linq.JToken)", file="DefaultContractResolver.cs", label="obj == null", span="55-55"];
m14_9 [cluster="Newtonsoft.Json.Linq.JToken.GetDeepHashCode()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Linq.JToken.GetDeepHashCode()", span="1642-1642"];
m14_7 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="525-525"];
m14_6 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="DefaultContractResolver.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m14_8 [cluster="System.Console.WriteLine(string)", file="DefaultContractResolver.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m15_7 [cluster="Newtonsoft.Json.Tests.DemoTests.JsonConverter()", file="DefaultSerializationBinder.cs", label="Assert.AreEqual(0, r2.Blue)", span="90-90"];
m15_452 [cluster="XmlDocument.cstr", file="DefaultSerializationBinder.cs", label="Entry XmlDocument.cstr", span=""];
m15_160 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.GetLocalName(string)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.GetLocalName(string)", span="136-136"];
m15_499 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", span="1223-1223"];
m15_501 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="DefaultSerializationBinder.cs", label="reader.TokenType == JsonToken.String", span="1225-1225"];
m15_502 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="DefaultSerializationBinder.cs", label="return reader.Value.ToString();", span="1227-1227"];
m15_503 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="DefaultSerializationBinder.cs", label="reader.TokenType == JsonToken.Integer", span="1229-1229"];
m15_504 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="DefaultSerializationBinder.cs", label="return XmlConvert.ToString(Convert.ToInt64(reader.Value, CultureInfo.InvariantCulture));", span="1231-1231"];
m15_505 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="DefaultSerializationBinder.cs", label="reader.TokenType == JsonToken.Float", span="1233-1233"];
m15_506 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="DefaultSerializationBinder.cs", label="return XmlConvert.ToString(Convert.ToDouble(reader.Value, CultureInfo.InvariantCulture));", span="1235-1235"];
m15_507 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="DefaultSerializationBinder.cs", label="reader.TokenType == JsonToken.Boolean", span="1237-1237"];
m15_508 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="DefaultSerializationBinder.cs", label="return XmlConvert.ToString(Convert.ToBoolean(reader.Value, CultureInfo.InvariantCulture));", span="1239-1239"];
m15_509 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="DefaultSerializationBinder.cs", label="reader.TokenType == JsonToken.Date", span="1241-1241"];
m15_510 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="DefaultSerializationBinder.cs", label="DateTime d = Convert.ToDateTime(reader.Value, CultureInfo.InvariantCulture)", span="1243-1243"];
m15_512 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="DefaultSerializationBinder.cs", label="reader.TokenType == JsonToken.Null", span="1250-1250"];
m15_514 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="DefaultSerializationBinder.cs", label="throw new Exception(''Cannot get an XML string value from token type '{0}'.''.FormatWith(CultureInfo.InvariantCulture, reader.TokenType));", span="1256-1256"];
m15_511 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="DefaultSerializationBinder.cs", label="return XmlConvert.ToString(d, DateTimeUtils.ToSerializationMode(d.Kind));", span="1245-1245"];
m15_513 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="DefaultSerializationBinder.cs", label="return null;", span="1252-1252"];
m15_515 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", span="1223-1223"];
m15_28 [cluster="string.TrimStart(params char[])", file="DefaultSerializationBinder.cs", label="Entry string.TrimStart(params char[])", span="0-0"];
m15_29 [cluster="string.Substring(int, int)", file="DefaultSerializationBinder.cs", label="Entry string.Substring(int, int)", span="0-0"];
m15_30 [cluster="System.Convert.ToInt32(string, int)", file="DefaultSerializationBinder.cs", label="Entry System.Convert.ToInt32(string, int)", span="0-0"];
m15_409 [cluster="Unk.All", file="DefaultSerializationBinder.cs", label="Entry Unk.All", span=""];
m15_105 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string)", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string)", span="284-284"];
m15_122 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.XDocumentWrapper(XDocument)", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.XDocumentWrapper(XDocument)", span="361-361"];
m15_90 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializeReferencesWithMetadata()", file="DefaultSerializationBinder.cs", label="Manager susan = new Manager { Name = ''Susan Supervisor'' }", span="340-340"];
m15_91 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializeReferencesWithMetadata()", file="DefaultSerializationBinder.cs", label="mike.Reportees = new[] { arnie, susan }", span="342-342"];
m15_102 [cluster="Newtonsoft.Json.Tests.DemoTests.RoundtripTypesAndReferences()", file="DefaultSerializationBinder.cs", label="Assert.IsTrue(ReferenceEquals(mike.Reportees[0], susan.Reportees[0]))", span="438-438"];
m15_103 [cluster="Newtonsoft.Json.Tests.DemoTests.RoundtripTypesAndReferences()", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Tests.DemoTests.RoundtripTypesAndReferences()", span="399-399"];
m15_474 [cluster="object.ToString()", file="DefaultSerializationBinder.cs", label="Entry object.ToString()", span="0-0"];
m15_656 [cluster="string.StartsWith(string, System.StringComparison)", file="DefaultSerializationBinder.cs", label="Entry string.StartsWith(string, System.StringComparison)", span="0-0"];
m15_189 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", span="574-574"];
m15_191 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="DefaultSerializationBinder.cs", label="return new XDocumentWrapper((XDocument)node);", span="577-577"];
m15_190 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="DefaultSerializationBinder.cs", label="node is XDocument", span="576-576"];
m15_192 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="DefaultSerializationBinder.cs", label="node is XElement", span="578-578"];
m15_193 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="DefaultSerializationBinder.cs", label="return new XElementWrapper((XElement)node);", span="579-579"];
m15_194 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="DefaultSerializationBinder.cs", label="node is XContainer", span="580-580"];
m15_195 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="DefaultSerializationBinder.cs", label="return new XContainerWrapper((XContainer)node);", span="581-581"];
m15_196 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="DefaultSerializationBinder.cs", label="node is XProcessingInstruction", span="582-582"];
m15_197 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="DefaultSerializationBinder.cs", label="return new XProcessingInstructionWrapper((XProcessingInstruction)node);", span="583-583"];
m15_198 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="DefaultSerializationBinder.cs", label="node is XText", span="584-584"];
m15_199 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="DefaultSerializationBinder.cs", label="return new XTextWrapper((XText)node);", span="585-585"];
m15_200 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="DefaultSerializationBinder.cs", label="node is XComment", span="586-586"];
m15_201 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="DefaultSerializationBinder.cs", label="return new XCommentWrapper((XComment)node);", span="587-587"];
m15_202 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="DefaultSerializationBinder.cs", label="node is XAttribute", span="588-588"];
m15_203 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="DefaultSerializationBinder.cs", label="return new XAttributeWrapper((XAttribute) node);", span="589-589"];
m15_204 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="DefaultSerializationBinder.cs", label="return new XObjectWrapper(node);", span="591-591"];
m15_205 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", span="574-574"];
m15_453 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", span="1172-1172"];
m15_485 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="IXmlNode attribute = (!string.IsNullOrEmpty(attributePrefix))\r\n                               ? document.CreateAttribute(nameValue.Key, manager.LookupNamespace(attributePrefix), nameValue.Value)\r\n                               : document.CreateAttribute(nameValue.Key, nameValue.Value)", span="1190-1192"];
m15_484 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="string attributePrefix = MiscellaneousUtils.GetPrefix(nameValue.Key)", span="1188-1188"];
m15_486 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="element.SetAttributeNode(attribute)", span="1194-1194"];
m15_477 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="string.IsNullOrEmpty(propertyName)", span="1174-1174"];
m15_479 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="Dictionary<string, string> attributeNameValues = ReadAttributeElements(reader, manager)", span="1177-1177"];
m15_480 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="string elementPrefix = MiscellaneousUtils.GetPrefix(propertyName)", span="1179-1179"];
m15_481 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="IXmlElement element = CreateElement(propertyName, document, elementPrefix, manager)", span="1181-1181"];
m15_482 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="currentNode.AppendChild(element)", span="1183-1183"];
m15_487 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="reader.TokenType == JsonToken.String\r\n        || reader.TokenType == JsonToken.Integer\r\n        || reader.TokenType == JsonToken.Float\r\n        || reader.TokenType == JsonToken.Boolean\r\n        || reader.TokenType == JsonToken.Date", span="1197-1201"];
m15_488 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="element.AppendChild(document.CreateTextNode(ConvertTokenToXmlValue(reader)))", span="1203-1203"];
m15_489 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="reader.TokenType == JsonToken.Null", span="1205-1205"];
m15_490 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="reader.TokenType != JsonToken.EndObject", span="1212-1212"];
m15_491 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="manager.PushScope()", span="1214-1214"];
m15_492 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="DeserializeNode(reader, document, manager, element)", span="1216-1216"];
m15_493 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="manager.PopScope()", span="1218-1218"];
m15_483 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label=attributeNameValues, span="1186-1186"];
m15_478 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="throw new JsonSerializationException(''XmlNodeConverter cannot convert JSON with an empty property name to XML.'');", span="1175-1175"];
m15_494 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", span="1172-1172"];
m15_156 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string, string)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string, string)", span="419-419"];
m15_158 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string, string)", file="DefaultSerializationBinder.cs", label="return new XElementWrapper(new XElement(XName.Get(localName, namespaceUri)));", span="422-422"];
m15_157 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string, string)", file="DefaultSerializationBinder.cs", label="string localName = MiscellaneousUtils.GetLocalName(qualifiedName)", span="421-421"];
m15_159 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string, string)", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string, string)", span="419-419"];
m15_16 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateWhitespace(string)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateWhitespace(string)", span="65-65"];
m15_17 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateWhitespace(string)", file="DefaultSerializationBinder.cs", label="return new XmlNodeWrapper(_document.CreateWhitespace(text));", span="67-67"];
m15_19 [cluster="Unk.CreateWhitespace", file="DefaultSerializationBinder.cs", label="Entry Unk.CreateWhitespace", span=""];
m15_18 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateWhitespace(string)", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateWhitespace(string)", span="65-65"];
m15_20 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateSignificantWhitespace(string)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateSignificantWhitespace(string)", span="70-70"];
m15_45 [cluster="System.DateTime.DateTime(int, int, int)", file="DefaultSerializationBinder.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m15_110 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializeAttributes()", file="DefaultSerializationBinder.cs", label="house.FloorArea = 100m", span="509-509"];
m15_111 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializeAttributes()", file="DefaultSerializationBinder.cs", label="house.BuildDate = new DateTime(1890, 1, 1)", span="510-510"];
m15_87 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="DefaultSerializationBinder.cs", label="return newChild;", span="258-258"];
m15_88 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="253-253"];
m15_89 [cluster="Unk.AppendChild", file="DefaultSerializationBinder.cs", label="Entry Unk.AppendChild", span=""];
m15_92 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateTextNode(string)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateTextNode(string)", span="278-278"];
m15_93 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateTextNode(string)", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateTextNode(string)", span="278-278"];
m15_94 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateCDataSection(string)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateCDataSection(string)", span="279-279"];
m15_95 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateCDataSection(string)", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateCDataSection(string)", span="279-279"];
m15_538 [cluster="System.Collections.IEnumerable.CastValid<T>()", file="DefaultSerializationBinder.cs", label="Entry System.Collections.IEnumerable.CastValid<T>()", span="38-38"];
m15_165 [cluster="Newtonsoft.Json.Converters.XAttributeWrapper.XAttributeWrapper(XAttribute)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Converters.XAttributeWrapper.XAttributeWrapper(XAttribute)", span="664-664"];
m15_217 [cluster="Newtonsoft.Json.Converters.XAttributeWrapper.XAttributeWrapper(XAttribute)", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Converters.XAttributeWrapper.XAttributeWrapper(XAttribute)", span="664-664"];
m15_306 [cluster="JsonSerializationException.cstr", file="DefaultSerializationBinder.cs", label="Entry JsonSerializationException.cstr", span=""];
m15_66 [cluster="Newtonsoft.Json.Tests.DemoTests.DeserializationBasics1()", file="DefaultSerializationBinder.cs", label="var s = JsonConvert.DeserializeObject<Session>(j, new JsonSerializerSettings\r\n            {\r\n                Converters = { new JavaScriptDateTimeConverter() }\r\n            })", span="248-251"];
m15_67 [cluster="Newtonsoft.Json.Tests.DemoTests.DeserializationBasics1()", file="DefaultSerializationBinder.cs", label="Assert.AreEqual(''Serialize All The Things'', s.Name)", span="255-255"];
m15_68 [cluster="Newtonsoft.Json.Tests.DemoTests.DeserializationBasics1()", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Tests.DemoTests.DeserializationBasics1()", span="241-241"];
m15_316 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", span="896-896"];
m15_321 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="string nodeName = GetPropertyName(childNode, manager)", span="904-904"];
m15_332 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="writeArray = IsArray(groupedNodes[0])", span="925-925"];
m15_335 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="SerializeNode(writer, groupedNodes[0], manager, writePropertyName)", span="934-934"];
m15_342 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="SerializeNode(writer, groupedNodes[i], manager, false)", span="947-947"];
m15_320 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="IXmlNode childNode = node.ChildNodes[i]", span="903-903"];
m15_322 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="List<IXmlNode> nodes", span="906-906"];
m15_323 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="!nodesGroupedByName.TryGetValue(nodeName, out nodes)", span="907-907"];
m15_325 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="nodesGroupedByName.Add(nodeName, nodes)", span="910-910"];
m15_329 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="List<IXmlNode> groupedNodes = nodeNameGroup.Value", span="920-920"];
m15_331 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="groupedNodes.Count == 1", span="923-923"];
m15_334 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="!writeArray", span="932-932"];
m15_328 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label=nodesGroupedByName, span="918-918"];
m15_341 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="i < groupedNodes.Count", span="945-945"];
m15_340 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="int i = 0", span="945-945"];
m15_343 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="i++", span="945-945"];
m15_317 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="Dictionary<string, List<IXmlNode>> nodesGroupedByName = new Dictionary<string, List<IXmlNode>>()", span="899-899"];
m15_319 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="i < node.ChildNodes.Count", span="901-901"];
m15_337 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label=writePropertyName, span="940-940"];
m15_338 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="writer.WritePropertyName(elementNames)", span="941-941"];
m15_339 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="writer.WriteStartArray()", span="943-943"];
m15_344 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="writer.WriteEndArray()", span="950-950"];
m15_318 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="int i = 0", span="901-901"];
m15_326 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="nodes.Add(childNode)", span="913-913"];
m15_324 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="nodes = new List<IXmlNode>()", span="909-909"];
m15_330 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="bool writeArray", span="921-921"];
m15_336 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="string elementNames = nodeNameGroup.Key", span="938-938"];
m15_333 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="writeArray = true", span="929-929"];
m15_327 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="i++", span="901-901"];
m15_345 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", span="896-896"];
m15_51 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializationBasics()", file="DefaultSerializationBinder.cs", label="string trace = traceWriter.ToString()", span="203-203"];
m15_52 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializationBasics()", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Tests.DemoTests.SerializationBasics()", span="187-187"];
m15_53 [cluster="Newtonsoft.Json.Serialization.MemoryTraceWriter.MemoryTraceWriter()", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Serialization.MemoryTraceWriter.MemoryTraceWriter()", span="29-29"];
m15_11 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="390-390"];
m15_73 [cluster="Newtonsoft.Json.Tests.DemoTests.DeserializationBasics2()", file="DefaultSerializationBinder.cs", label="JsonConvert.PopulateObject(j, s)", span="268-268"];
m15_79 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializeReferencesByValue()", file="DefaultSerializationBinder.cs", label="Manager susan = new Manager { Name = ''Susan Supervisor'' }", span="294-294"];
m15_74 [cluster="Newtonsoft.Json.Tests.DemoTests.DeserializationBasics2()", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Tests.DemoTests.DeserializationBasics2()", span="259-259"];
m15_76 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializeReferencesByValue()", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Tests.DemoTests.SerializeReferencesByValue()", span="290-290"];
m15_78 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializeReferencesByValue()", file="DefaultSerializationBinder.cs", label="Manager mike = new Manager { Name = ''Mike Manager'' }", span="293-293"];
m15_75 [cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", span="924-924"];
m15_77 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializeReferencesByValue()", file="DefaultSerializationBinder.cs", label="Employee arnie = new Employee { Name = ''Arnie Admin'' }", span="292-292"];
m15_80 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializeReferencesByValue()", file="DefaultSerializationBinder.cs", label="mike.Reportees = new[] { arnie, susan }", span="296-296"];
m15_588 [cluster="string.Substring(int)", file="DefaultSerializationBinder.cs", label="Entry string.Substring(int)", span="0-0"];
m15_47 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)", file="DefaultSerializationBinder.cs", label="XmlNodeWrapper attribute = new XmlNodeWrapper(_document.CreateAttribute(qualifiedName, namespaceUri))", span="105-105"];
m15_48 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)", file="DefaultSerializationBinder.cs", label="attribute.Value = value", span="106-106"];
m15_49 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)", file="DefaultSerializationBinder.cs", label="return attribute;", span="108-108"];
m15_63 [cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="331-331"];
m15_64 [cluster="Newtonsoft.Json.Tests.DemoTests.DeserializationBasics1()", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Tests.DemoTests.DeserializationBasics1()", span="241-241"];
m15_65 [cluster="Newtonsoft.Json.Tests.DemoTests.DeserializationBasics1()", file="DefaultSerializationBinder.cs", label="string j = @''{\r\n              'Name': 'Serialize All The Things',\r\n              'Date': new Date(1401796800000)\r\n            }''", span="243-246"];
m15_58 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializationBasics2()", file="DefaultSerializationBinder.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Name'''': ''''Serialize All The Things'''',\r\n  ''''Date'''': new Date(\r\n    1401840000000\r\n  )\r\n}'', j)", span="232-237"];
m15_171 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="447-447"];
m15_176 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="DefaultSerializationBinder.cs", label="return base.AppendChild(newChild);", span="457-457"];
m15_173 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="DefaultSerializationBinder.cs", label="declarationWrapper != null", span="450-450"];
m15_174 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="DefaultSerializationBinder.cs", label="Document.Declaration = declarationWrapper.Declaration", span="452-452"];
m15_172 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="DefaultSerializationBinder.cs", label="XDeclarationWrapper declarationWrapper = newChild as XDeclarationWrapper", span="449-449"];
m15_175 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="DefaultSerializationBinder.cs", label="return declarationWrapper;", span="453-453"];
m15_177 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="447-447"];
m15_520 [cluster="System.Convert.ToDateTime(object, System.IFormatProvider)", file="DefaultSerializationBinder.cs", label="Entry System.Convert.ToDateTime(object, System.IFormatProvider)", span="0-0"];
m15_660 [cluster="Unk.Where", file="DefaultSerializationBinder.cs", label="Entry Unk.Where", span=""];
m15_24 [cluster="Newtonsoft.Json.Tests.DemoTests.HtmlColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs", label="string hexString = (string)reader.Value", span="132-132"];
m15_25 [cluster="Newtonsoft.Json.Tests.DemoTests.HtmlColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs", label="hexString = hexString.TrimStart('#')", span="133-133"];
m15_26 [cluster="Newtonsoft.Json.Tests.DemoTests.HtmlColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs", label="return new HtmlColor\r\n                {\r\n                    Red = Convert.ToInt32(hexString.Substring(0, 2), 16),\r\n                    Green = Convert.ToInt32(hexString.Substring(2, 2), 16),\r\n                    Blue = Convert.ToInt32(hexString.Substring(4, 2), 16)\r\n                };", span="136-141"];
m15_167 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string, string)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string, string)", span="430-430"];
m15_169 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string, string)", file="DefaultSerializationBinder.cs", label="return new XAttributeWrapper(new XAttribute(XName.Get(localName, namespaceUri), value));", span="433-433"];
m15_168 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string, string)", file="DefaultSerializationBinder.cs", label="string localName = MiscellaneousUtils.GetLocalName(qualifiedName)", span="432-432"];
m15_170 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string, string)", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string, string)", span="430-430"];
m15_413 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", span="52-52"];
m15_210 [cluster="Unk.Add", file="DefaultSerializationBinder.cs", label="Entry Unk.Add", span=""];
m15_10 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateTextNode(string)", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateTextNode(string)", span="55-55"];
m15_522 [cluster="System.Exception.Exception(string)", file="DefaultSerializationBinder.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m15_516 [cluster="System.Convert.ToInt64(object, System.IFormatProvider)", file="DefaultSerializationBinder.cs", label="Entry System.Convert.ToInt64(object, System.IFormatProvider)", span="0-0"];
m15_523 [cluster="string.FormatWith(System.IFormatProvider, params object[])", file="DefaultSerializationBinder.cs", label="Entry string.FormatWith(System.IFormatProvider, params object[])", span="43-43"];
m15_54 [cluster="Newtonsoft.Json.Serialization.MemoryTraceWriter.ToString()", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Serialization.MemoryTraceWriter.ToString()", span="71-71"];
m15_56 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializationBasics2()", file="DefaultSerializationBinder.cs", label="var s = new Session\r\n            {\r\n                Name = ''Serialize All The Things'',\r\n                Date = new DateTime(2014, 6, 4, 0, 0, 0, DateTimeKind.Utc)\r\n            }", span="216-220"];
m15_55 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializationBasics2()", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Tests.DemoTests.SerializationBasics2()", span="214-214"];
m15_57 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializationBasics2()", file="DefaultSerializationBinder.cs", label="string j = JsonConvert.SerializeObject(s, new JsonSerializerSettings\r\n            {\r\n                Formatting = Formatting.Indented,\r\n                Converters = { new JavaScriptDateTimeConverter() }\r\n            })", span="222-226"];
m15_273 [cluster="Unk.AddNamespace", file="DefaultSerializationBinder.cs", label="Entry Unk.AddNamespace", span=""];
m15_475 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", span="1392-1392"];
m15_606 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="DefaultSerializationBinder.cs", label="throw new JsonSerializationException(''Unexpected property name encountered while deserializing XmlDeclaration: '' + reader.Value);", span="1416-1416"];
m15_595 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="DefaultSerializationBinder.cs", label="reader.Read() && reader.TokenType != JsonToken.EndObject", span="1399-1399"];
m15_598 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="DefaultSerializationBinder.cs", label="reader.Read()", span="1404-1404"];
m15_601 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="DefaultSerializationBinder.cs", label="reader.Read()", span="1408-1408"];
m15_604 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="DefaultSerializationBinder.cs", label="reader.Read()", span="1412-1412"];
m15_608 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="DefaultSerializationBinder.cs", label="currentNode.AppendChild(declaration)", span="1421-1421"];
m15_610 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="DefaultSerializationBinder.cs", label="currentNode.AppendChild(instruction)", span="1426-1426"];
m15_596 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="DefaultSerializationBinder.cs", label="reader.Value.ToString()", span="1401-1401"];
m15_591 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="DefaultSerializationBinder.cs", label="propertyName == DeclarationName", span="1394-1394"];
m15_599 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="DefaultSerializationBinder.cs", label="version = reader.Value.ToString()", span="1405-1405"];
m15_602 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="DefaultSerializationBinder.cs", label="encoding = reader.Value.ToString()", span="1409-1409"];
m15_605 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="DefaultSerializationBinder.cs", label="standalone = reader.Value.ToString()", span="1413-1413"];
m15_607 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="DefaultSerializationBinder.cs", label="IXmlNode declaration = document.CreateXmlDeclaration(version, encoding, standalone)", span="1420-1420"];
m15_609 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="DefaultSerializationBinder.cs", label="IXmlNode instruction = document.CreateProcessingInstruction(propertyName.Substring(1), reader.Value.ToString())", span="1425-1425"];
m15_594 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="DefaultSerializationBinder.cs", label="string standalone = null", span="1398-1398"];
m15_597 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="DefaultSerializationBinder.cs", label="''@version''", span="1403-1403"];
m15_600 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="DefaultSerializationBinder.cs", label="''@encoding''", span="1407-1407"];
m15_603 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="DefaultSerializationBinder.cs", label="''@standalone''", span="1411-1411"];
m15_592 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="DefaultSerializationBinder.cs", label="string version = null", span="1396-1396"];
m15_593 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="DefaultSerializationBinder.cs", label="string encoding = null", span="1397-1397"];
m15_611 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", span="1392-1392"];
m15_81 [cluster="lambda expression", file="DefaultSerializationBinder.cs", label="Entry lambda expression", span="228-228"];
m15_82 [cluster="lambda expression", file="DefaultSerializationBinder.cs", label="WrapNode(a)", span="228-228"];
m15_83 [cluster="lambda expression", file="DefaultSerializationBinder.cs", label="Exit lambda expression", span="228-228"];
m15_84 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="253-253"];
m15_8 [cluster="Newtonsoft.Json.Tests.DemoTests.JsonConverter()", file="DefaultSerializationBinder.cs", label="Assert.AreEqual(@''''''#FF0000'''''', json)", span="92-92"];
m15_9 [cluster="Newtonsoft.Json.Tests.DemoTests.JsonConverter()", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Tests.DemoTests.JsonConverter()", span="57-57"];
m15_115 [cluster="Newtonsoft.Json.Converters.IXmlElement.GetPrefixOfNamespace(string)", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Converters.IXmlElement.GetPrefixOfNamespace(string)", span="302-302"];
m15_116 [cluster="Newtonsoft.Json.Converters.IXmlNode.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Converters.IXmlNode.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="313-313"];
m15_117 [cluster="Newtonsoft.Json.Converters.IXmlNode.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Converters.IXmlNode.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="313-313"];
m15_118 [cluster="Newtonsoft.Json.Tests.DemoTests.MergeJson()", file="DefaultSerializationBinder.cs", label="o1.Merge(o2, new JsonMergeSettings\r\n            {\r\n                // union arrays together to avoid duplicates\r\n                MergeArrayHandling = MergeArrayHandling.Union\r\n            })", span="553-557"];
m15_119 [cluster="Newtonsoft.Json.Tests.DemoTests.MergeJson()", file="DefaultSerializationBinder.cs", label="string json = o1.ToString()", span="559-559"];
m15_120 [cluster="Newtonsoft.Json.Tests.DemoTests.MergeJson()", file="DefaultSerializationBinder.cs", label="StringAssert.AreEqual(@''{\r\n  ''''FirstName'''': ''''John'''',\r\n  ''''LastName'''': ''''Smith'''',\r\n  ''''Enabled'''': true,\r\n  ''''Roles'''': [\r\n    ''''User'''',\r\n    ''''Admin''''\r\n  ]\r\n}'', json)", span="570-578"];
m15_121 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.XDocumentWrapper(XDocument)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.XDocumentWrapper(XDocument)", span="361-361"];
m15_0 [cluster="Newtonsoft.Json.Tests.DemoTests.JsonConverter()", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Tests.DemoTests.JsonConverter()", span="57-57"];
m15_1 [cluster="Newtonsoft.Json.Tests.DemoTests.JsonConverter()", file="DefaultSerializationBinder.cs", label="HtmlColor red = new HtmlColor\r\n            {\r\n                Red = 255,\r\n                Green = 0,\r\n                Blue = 0\r\n            }", span="59-64"];
m15_2 [cluster="Newtonsoft.Json.Tests.DemoTests.JsonConverter()", file="DefaultSerializationBinder.cs", label="string json = JsonConvert.SerializeObject(red, new JsonSerializerSettings\r\n            {\r\n                Formatting = Formatting.Indented\r\n            })", span="66-69"];
m15_496 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.GetPrefix(string)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.GetPrefix(string)", span="127-127"];
m15_27 [cluster="Newtonsoft.Json.Tests.DemoTests.HtmlColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Tests.DemoTests.HtmlColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="128-128"];
m15_518 [cluster="System.Convert.ToDouble(object, System.IFormatProvider)", file="DefaultSerializationBinder.cs", label="Entry System.Convert.ToDouble(object, System.IFormatProvider)", span="0-0"];
m15_106 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializeAttributes()", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Tests.DemoTests.SerializeAttributes()", span="504-504"];
m15_107 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializeAttributes()", file="DefaultSerializationBinder.cs", label="var house = new House3()", span="506-506"];
m15_348 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="DefaultSerializationBinder.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m15_46 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)", span="103-103"];
m15_657 [cluster="string.Substring(int, int)", file="DefaultSerializationBinder.cs", label="Entry string.Substring(int, int)", span="0-0"];
m15_3 [cluster="Newtonsoft.Json.Tests.DemoTests.JsonConverter()", file="DefaultSerializationBinder.cs", label="json = JsonConvert.SerializeObject(red, new JsonSerializerSettings\r\n            {\r\n                Formatting = Formatting.Indented,\r\n                Converters = { new HtmlColorConverter() }\r\n            })", span="76-80"];
m15_4 [cluster="Newtonsoft.Json.Tests.DemoTests.JsonConverter()", file="DefaultSerializationBinder.cs", label="HtmlColor r2 = JsonConvert.DeserializeObject<HtmlColor>(json, new JsonSerializerSettings\r\n            {\r\n                Formatting = Formatting.Indented,\r\n                Converters = { new HtmlColorConverter() }\r\n            })", span="83-87"];
m15_5 [cluster="Newtonsoft.Json.Tests.DemoTests.JsonConverter()", file="DefaultSerializationBinder.cs", label="Assert.AreEqual(255, r2.Red)", span="88-88"];
m15_450 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="52-52"];
m15_21 [cluster="int.ToString(string)", color=green, community=0, file="DefaultSerializationBinder.cs", label="Entry int.ToString(string)", prediction=3, span="0-0"];
m15_22 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="873-873"];
m15_6 [cluster="Newtonsoft.Json.Tests.DemoTests.JsonConverter()", file="DefaultSerializationBinder.cs", label="Assert.AreEqual(0, r2.Green)", span="89-89"];
m15_104 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string)", span="284-284"];
m15_457 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", span="1133-1133"];
m15_472 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="DefaultSerializationBinder.cs", label="ReadElement(reader, document, currentNode, propertyName, manager)", span="1166-1166"];
m15_467 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="DefaultSerializationBinder.cs", label="!string.IsNullOrEmpty(propertyName) && propertyName[0] == '?'", span="1151-1151"];
m15_468 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="DefaultSerializationBinder.cs", label="CreateInstruction(reader, document, currentNode, propertyName)", span="1153-1153"];
m15_470 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="DefaultSerializationBinder.cs", label="ReadArrayElements(reader, document, propertyName, currentNode, manager)", span="1160-1160"];
m15_469 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="DefaultSerializationBinder.cs", label="reader.TokenType == JsonToken.StartArray", span="1157-1157"];
m15_458 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="DefaultSerializationBinder.cs", label=propertyName, span="1135-1135"];
m15_471 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="DefaultSerializationBinder.cs", label="return;", span="1161-1161"];
m15_460 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="DefaultSerializationBinder.cs", label="currentNode.AppendChild(document.CreateTextNode(reader.Value.ToString()))", span="1138-1138"];
m15_462 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="DefaultSerializationBinder.cs", label="currentNode.AppendChild(document.CreateCDataSection(reader.Value.ToString()))", span="1141-1141"];
m15_464 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="DefaultSerializationBinder.cs", label="currentNode.AppendChild(document.CreateWhitespace(reader.Value.ToString()))", span="1144-1144"];
m15_466 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="DefaultSerializationBinder.cs", label="currentNode.AppendChild(document.CreateSignificantWhitespace(reader.Value.ToString()))", span="1147-1147"];
m15_459 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="DefaultSerializationBinder.cs", label=TextName, span="1137-1137"];
m15_461 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="DefaultSerializationBinder.cs", label=CDataName, span="1140-1140"];
m15_463 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="DefaultSerializationBinder.cs", label=WhitespaceName, span="1143-1143"];
m15_465 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="DefaultSerializationBinder.cs", label=SignificantWhitespaceName, span="1146-1146"];
m15_473 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", span="1133-1133"];
m15_96 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateWhitespace(string)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateWhitespace(string)", span="280-280"];
m15_97 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateWhitespace(string)", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateWhitespace(string)", span="280-280"];
m15_98 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateSignificantWhitespace(string)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateSignificantWhitespace(string)", span="281-281"];
m15_99 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateSignificantWhitespace(string)", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateSignificantWhitespace(string)", span="281-281"];
m15_100 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDeclaration(string, string, string)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDeclaration(string, string, string)", span="282-282"];
m15_101 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDeclaration(string, string, string)", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDeclaration(string, string, string)", span="282-282"];
m15_60 [cluster="Newtonsoft.Json.Converters.XmlElementWrapper.GetPrefixOfNamespace(string)", file="DefaultSerializationBinder.cs", label="return _element.GetPrefixOfNamespace(namespaceUri);", span="142-142"];
m15_519 [cluster="System.Convert.ToBoolean(object, System.IFormatProvider)", file="DefaultSerializationBinder.cs", label="Entry System.Convert.ToBoolean(object, System.IFormatProvider)", span="0-0"];
m15_181 [cluster="Newtonsoft.Json.Converters.XCommentWrapper.XCommentWrapper(XComment)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Converters.XCommentWrapper.XCommentWrapper(XComment)", span="499-499"];
m15_182 [cluster="Newtonsoft.Json.Converters.XCommentWrapper.XCommentWrapper(XComment)", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Converters.XCommentWrapper.XCommentWrapper(XComment)", span="499-499"];
m15_312 [cluster="Unk.ToBoolean", file="DefaultSerializationBinder.cs", label="Entry Unk.ToBoolean", span=""];
m15_521 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", span="28-28"];
m15_154 [cluster="Newtonsoft.Json.Converters.XElementWrapper.XElementWrapper(XElement)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Converters.XElementWrapper.XElementWrapper(XElement)", span="704-704"];
m15_218 [cluster="Newtonsoft.Json.Converters.XElementWrapper.XElementWrapper(XElement)", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Converters.XElementWrapper.XElementWrapper(XElement)", span="704-704"];
m15_274 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="845-845"];
m15_276 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="!string.IsNullOrEmpty(prefix)", span="851-851"];
m15_275 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="string prefix = (node.NamespaceUri == null || (node.LocalName == ''xmlns'' && node.NamespaceUri == ''http://www.w3.org/2000/xmlns/''))\r\n                        ? null\r\n                        : manager.LookupPrefix(node.NamespaceUri)", span="847-849"];
m15_277 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="return prefix + '':'' + node.LocalName;", span="852-852"];
m15_278 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="return node.LocalName;", span="854-854"];
m15_279 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="845-845"];
m15_253 [cluster="System.ArgumentException.ArgumentException(string, string)", file="DefaultSerializationBinder.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m15_59 [cluster="Newtonsoft.Json.Converters.XmlElementWrapper.GetPrefixOfNamespace(string)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Converters.XmlElementWrapper.GetPrefixOfNamespace(string)", span="140-140"];
m15_414 [cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="716-716"];
m15_227 [cluster="Newtonsoft.Json.Converters.XElementWrapper.GetPrefixOfNamespace(string)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Converters.XElementWrapper.GetPrefixOfNamespace(string)", span="736-736"];
m15_228 [cluster="Newtonsoft.Json.Converters.XElementWrapper.GetPrefixOfNamespace(string)", file="DefaultSerializationBinder.cs", label="return Element.GetPrefixOfNamespace(namespaceUri);", span="738-738"];
m15_229 [cluster="Newtonsoft.Json.Converters.XElementWrapper.GetPrefixOfNamespace(string)", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Converters.XElementWrapper.GetPrefixOfNamespace(string)", span="736-736"];
m15_114 [cluster="Newtonsoft.Json.Converters.IXmlElement.GetPrefixOfNamespace(string)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Converters.IXmlElement.GetPrefixOfNamespace(string)", span="302-302"];
m15_14 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateCDataSection(string)", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateCDataSection(string)", span="60-60"];
m15_410 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Converters.IXmlNode>)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Converters.IXmlNode>)", span="1518-1518"];
m15_658 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Converters.IXmlNode>)", file="DefaultSerializationBinder.cs", label="return c.Where(a => a.NamespaceUri != JsonNamespaceUri);", span="1520-1520"];
m15_659 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Converters.IXmlNode>)", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Converters.IXmlNode>)", span="1518-1518"];
m15_271 [cluster="System.Collections.Generic.List<T>.Reverse()", file="DefaultSerializationBinder.cs", label="Entry System.Collections.Generic.List<T>.Reverse()", span="0-0"];
m15_12 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateCDataSection(string)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateCDataSection(string)", span="60-60"];
m15_178 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Converters.XContainerWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="594-594"];
m15_207 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="DefaultSerializationBinder.cs", label="Container.Add(newChild.WrappedNode)", span="596-596"];
m15_208 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="DefaultSerializationBinder.cs", label="return newChild;", span="597-597"];
m15_209 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Converters.XContainerWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="594-594"];
m15_307 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsArray(Newtonsoft.Json.Converters.IXmlNode)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.IsArray(Newtonsoft.Json.Converters.IXmlNode)", span="887-887"];
m15_308 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsArray(Newtonsoft.Json.Converters.IXmlNode)", file="DefaultSerializationBinder.cs", label="IXmlNode jsonArrayAttribute = (node.Attributes != null)\r\n                                      ? node.Attributes.SingleOrDefault(a => a.LocalName == ''Array'' && a.NamespaceUri == JsonNamespaceUri)\r\n                                      : null", span="889-891"];
m15_309 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsArray(Newtonsoft.Json.Converters.IXmlNode)", file="DefaultSerializationBinder.cs", label="return (jsonArrayAttribute != null && XmlConvert.ToBoolean(jsonArrayAttribute.Value));", span="893-893"];
m15_310 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsArray(Newtonsoft.Json.Converters.IXmlNode)", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.IsArray(Newtonsoft.Json.Converters.IXmlNode)", span="887-887"];
m15_146 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateProcessingInstruction(string, string)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateProcessingInstruction(string, string)", span="409-409"];
m15_147 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateProcessingInstruction(string, string)", file="DefaultSerializationBinder.cs", label="return new XProcessingInstructionWrapper(new XProcessingInstruction(target, data));", span="411-411"];
m15_148 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateProcessingInstruction(string, string)", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateProcessingInstruction(string, string)", span="409-409"];
m15_31 [cluster="Unk.CreateProcessingInstruction", file="DefaultSerializationBinder.cs", label="Entry Unk.CreateProcessingInstruction", span=""];
m15_32 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string)", span="85-85"];
m15_33 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string)", file="DefaultSerializationBinder.cs", label="return new XmlElementWrapper(_document.CreateElement(elementName));", span="87-87"];
m15_13 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateCDataSection(string)", file="DefaultSerializationBinder.cs", label="return new XmlNodeWrapper(_document.CreateCDataSection(data));", span="62-62"];
m15_72 [cluster="Newtonsoft.Json.Tests.DemoTests.DeserializationBasics2()", file="DefaultSerializationBinder.cs", label="string j = @''{\r\n              'Name': 'Serialize All The Things'\r\n            }''", span="264-266"];
m15_85 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="DefaultSerializationBinder.cs", label="XmlNodeWrapper xmlNodeWrapper = (XmlNodeWrapper) newChild", span="255-255"];
m15_23 [cluster="Newtonsoft.Json.Tests.DemoTests.HtmlColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Tests.DemoTests.HtmlColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="128-128"];
m15_35 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializationGuide()", file="DefaultSerializationBinder.cs", label="IList<string> roles = new List<string>\r\n            {\r\n                ''User'',\r\n                ''Admin''\r\n            }", span="153-157"];
m15_282 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="857-857"];
m15_287 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="return ''@'' + ResolveFullName(node, manager);", span="865-865"];
m15_293 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="return ResolveFullName(node, manager);", span="871-871"];
m15_295 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="return ''?'' + ResolveFullName(node, manager);", span="873-873"];
m15_285 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="node.NamespaceUri == JsonNamespaceUri", span="862-862"];
m15_292 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="XmlNodeType.Element", span="870-870"];
m15_294 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="XmlNodeType.ProcessingInstruction", span="872-872"];
m15_283 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="node.NodeType", span="859-859"];
m15_286 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="return ''$'' + node.LocalName;", span="863-863"];
m15_304 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="throw new JsonSerializationException(''Unexpected XmlNodeType when getting node name: '' + node.NodeType);", span="883-883"];
m15_284 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="XmlNodeType.Attribute", span="861-861"];
m15_289 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="return CDataName;", span="867-867"];
m15_291 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="return CommentName;", span="869-869"];
m15_297 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="return DeclarationName;", span="875-875"];
m15_299 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="return SignificantWhitespaceName;", span="877-877"];
m15_301 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="return TextName;", span="879-879"];
m15_303 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="return WhitespaceName;", span="881-881"];
m15_288 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="XmlNodeType.CDATA", span="866-866"];
m15_290 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="XmlNodeType.Comment", span="868-868"];
m15_296 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="XmlNodeType.XmlDeclaration", span="874-874"];
m15_298 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="XmlNodeType.SignificantWhitespace", span="876-876"];
m15_300 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="XmlNodeType.Text", span="878-878"];
m15_302 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="XmlNodeType.Whitespace", span="880-880"];
m15_305 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="857-857"];
m15_454 [cluster="Newtonsoft.Json.JsonReader.Read()", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.JsonReader.Read()", span="269-269"];
m15_125 [cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="414-414"];
m15_151 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string)", span="414-414"];
m15_152 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string)", file="DefaultSerializationBinder.cs", label="return new XElementWrapper(new XElement(elementName));", span="416-416"];
m15_153 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string)", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string)", span="414-414"];
m15_150 [cluster="XProcessingInstruction.cstr", file="DefaultSerializationBinder.cs", label="Entry XProcessingInstruction.cstr", span=""];
m15_419 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="1073-1073"];
m15_433 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs", label="document = new XmlDocumentWrapper(d)", span="1097-1097"];
m15_432 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs", label="XmlDocument d = new XmlDocument()", span="1096-1096"];
m15_434 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs", label="rootNode = document", span="1098-1098"];
m15_435 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs", label="document == null || rootNode == null", span="1102-1102"];
m15_440 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs", label="ReadElement(reader, document, rootNode, DeserializeRootElementName, manager)", span="1112-1112"];
m15_442 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs", label="DeserializeNode(reader, document, manager, rootNode)", span="1117-1117"];
m15_444 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs", label="XElement element = (XElement)document.DocumentElement.WrappedNode", span="1123-1123"];
m15_447 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs", label="return document.WrappedNode;", span="1130-1130"];
m15_430 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs", label="objectType != typeof (XmlDocument)", span="1093-1093"];
m15_429 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs", label="typeof(XmlNode).IsAssignableFrom(objectType)", span="1091-1091"];
m15_421 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs", label="IXmlDocument document = null", span="1076-1076"];
m15_422 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs", label="IXmlNode rootNode = null", span="1077-1077"];
m15_427 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs", label="document = new XDocumentWrapper(d)", span="1086-1086"];
m15_428 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs", label="rootNode = document", span="1087-1087"];
m15_436 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs", label="throw new JsonSerializationException(''Unexpected type when converting XML: '' + objectType);", span="1103-1103"];
m15_437 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs", label="reader.TokenType != JsonToken.StartObject", span="1105-1105"];
m15_420 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs", label="XmlNamespaceManager manager = new XmlNamespaceManager(new NameTable())", span="1075-1075"];
m15_439 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs", label="!string.IsNullOrEmpty(DeserializeRootElementName)", span="1108-1108"];
m15_443 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs", label="objectType == typeof(XElement)", span="1121-1121"];
m15_441 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs", label="reader.Read()", span="1116-1116"];
m15_445 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs", label="element.Remove()", span="1124-1124"];
m15_446 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs", label="return element;", span="1126-1126"];
m15_431 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs", label="throw new JsonSerializationException(''XmlNodeConverter only supports deserializing XmlDocuments'');", span="1094-1094"];
m15_423 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs", label="typeof(XObject).IsAssignableFrom(objectType)", span="1080-1080"];
m15_426 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs", label="XDocument d = new XDocument()", span="1085-1085"];
m15_438 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs", label="throw new JsonSerializationException(''XmlNodeConverter can only convert JSON that begins with an object.'');", span="1106-1106"];
m15_424 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs", label="objectType != typeof (XDocument) && objectType != typeof (XElement)", span="1082-1082"];
m15_425 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs", label="throw new JsonSerializationException(''XmlNodeConverter only supports deserializing XDocument or XElement.'');", span="1083-1083"];
m15_448 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="1073-1073"];
m15_69 [cluster="lambda expression", file="DefaultSerializationBinder.cs", label="Entry lambda expression", span="205-205"];
m15_70 [cluster="lambda expression", file="DefaultSerializationBinder.cs", label="WrapNode(n)", span="205-205"];
m15_71 [cluster="lambda expression", file="DefaultSerializationBinder.cs", label="Exit lambda expression", span="205-205"];
m15_500 [cluster="Unk.PopScope", file="DefaultSerializationBinder.cs", label="Entry Unk.PopScope", span=""];
m15_241 [cluster="XmlNamespaceManager.cstr", file="DefaultSerializationBinder.cs", label="Entry XmlNamespaceManager.cstr", span=""];
m15_270 [cluster="System.Collections.Generic.List<T>.Add(T)", file="DefaultSerializationBinder.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m15_415 [cluster="Newtonsoft.Json.JsonWriter.WriteComment(string)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteComment(string)", span="1256-1256"];
m15_162 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string)", span="425-425"];
m15_163 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string)", file="DefaultSerializationBinder.cs", label="return new XAttributeWrapper(new XAttribute(name, value));", span="427-427"];
m15_164 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string)", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string)", span="425-425"];
m15_412 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="752-752"];
m15_123 [cluster="Newtonsoft.Json.Linq.JsonMergeSettings.JsonMergeSettings()", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Linq.JsonMergeSettings.JsonMergeSettings()", span="7-7"];
m15_346 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="DefaultSerializationBinder.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m15_44 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", span="95-95"];
m15_476 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="1260-1260"];
m15_525 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="IXmlElement nestedArrayElement = CreateElement(propertyName, document, elementPrefix, manager)", span="1264-1264"];
m15_529 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="DeserializeValue(reader, document, manager, propertyName, nestedArrayElement)", span="1271-1271"];
m15_531 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label=WriteArrayAttribute, span="1275-1275"];
m15_532 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="AddJsonArrayAttribute(nestedArrayElement, document)", span="1277-1277"];
m15_533 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="count == 1 && WriteArrayAttribute", span="1280-1280"];
m15_535 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="AddJsonArrayAttribute(arrayElement, document)", span="1283-1283"];
m15_524 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="string elementPrefix = MiscellaneousUtils.GetPrefix(propertyName)", span="1262-1262"];
m15_526 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="currentNode.AppendChild(nestedArrayElement)", span="1266-1266"];
m15_534 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="IXmlElement arrayElement = nestedArrayElement.ChildNodes.CastValid<IXmlElement>().Single(n => n.LocalName == propertyName)", span="1282-1282"];
m15_528 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="reader.Read() && reader.TokenType != JsonToken.EndArray", span="1269-1269"];
m15_530 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="count++", span="1272-1272"];
m15_527 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="int count = 0", span="1268-1268"];
m15_536 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="1260-1260"];
m15_15 [cluster="Unk.CreateCDataSection", file="DefaultSerializationBinder.cs", label="Entry Unk.CreateCDataSection", span=""];
m15_349 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="371-371"];
m15_112 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializeAttributes()", file="DefaultSerializationBinder.cs", label="string json = JsonConvert.SerializeObject(house, Formatting.Indented)", span="512-512"];
m15_113 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializeAttributes()", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Tests.DemoTests.SerializeAttributes()", span="504-504"];
m15_149 [cluster="Newtonsoft.Json.Converters.XProcessingInstructionWrapper.XProcessingInstructionWrapper(XProcessingInstruction)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Converters.XProcessingInstructionWrapper.XProcessingInstructionWrapper(XProcessingInstruction)", span="529-529"];
m15_183 [cluster="Newtonsoft.Json.Converters.XProcessingInstructionWrapper.XProcessingInstructionWrapper(XProcessingInstruction)", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Converters.XProcessingInstructionWrapper.XProcessingInstructionWrapper(XProcessingInstruction)", span="529-529"];
m15_517 [cluster="Unk.ToString", file="DefaultSerializationBinder.cs", label="Entry Unk.ToString", span=""];
m15_589 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", span="1499-1499"];
m15_646 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="DefaultSerializationBinder.cs", label="attributeName.StartsWith(''xmlns'', StringComparison.Ordinal)", span="1501-1501"];
m15_647 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="DefaultSerializationBinder.cs", label="attributeName.Length == 5", span="1503-1503"];
m15_650 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="DefaultSerializationBinder.cs", label="attributeName[5] == ':'", span="1508-1508"];
m15_651 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="DefaultSerializationBinder.cs", label="prefix = attributeName.Substring(6, attributeName.Length - 6)", span="1510-1510"];
m15_653 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="DefaultSerializationBinder.cs", label="prefix = null", span="1514-1514"];
m15_649 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="DefaultSerializationBinder.cs", label="return true;", span="1506-1506"];
m15_652 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="DefaultSerializationBinder.cs", label="return true;", span="1511-1511"];
m15_654 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="DefaultSerializationBinder.cs", label="return false;", span="1515-1515"];
m15_648 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="DefaultSerializationBinder.cs", label="prefix = string.Empty", span="1505-1505"];
m15_655 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", span="1499-1499"];
m15_351 [cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="344-344"];
m15_166 [cluster="XAttribute.cstr", file="DefaultSerializationBinder.cs", label="Entry XAttribute.cstr", span=""];
m15_179 [cluster="Newtonsoft.Json.Converters.XTextWrapper.XTextWrapper(XText)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Converters.XTextWrapper.XTextWrapper(XText)", span="469-469"];
m15_180 [cluster="Newtonsoft.Json.Converters.XTextWrapper.XTextWrapper(XText)", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Converters.XTextWrapper.XTextWrapper(XText)", span="469-469"];
m15_86 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="DefaultSerializationBinder.cs", label="_node.AppendChild(xmlNodeWrapper._node)", span="256-256"];
m15_206 [cluster="Newtonsoft.Json.Converters.XObjectWrapper.XObjectWrapper(XObject)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Converters.XObjectWrapper.XObjectWrapper(XObject)", span="605-605"];
m15_211 [cluster="Newtonsoft.Json.Converters.XObjectWrapper.XObjectWrapper(XObject)", file="DefaultSerializationBinder.cs", label="_xmlObject = xmlObject", span="607-607"];
m15_212 [cluster="Newtonsoft.Json.Converters.XObjectWrapper.XObjectWrapper(XObject)", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Converters.XObjectWrapper.XObjectWrapper(XObject)", span="605-605"];
m15_664 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", span="1531-1531"];
m15_665 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", file="DefaultSerializationBinder.cs", label="typeof(XObject).IsAssignableFrom(valueType)", span="1534-1534"];
m15_667 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", file="DefaultSerializationBinder.cs", label="typeof(XmlNode).IsAssignableFrom(valueType)", span="1538-1538"];
m15_666 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", file="DefaultSerializationBinder.cs", label="return true;", span="1535-1535"];
m15_668 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", file="DefaultSerializationBinder.cs", label="return true;", span="1539-1539"];
m15_669 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", file="DefaultSerializationBinder.cs", label="return false;", span="1542-1542"];
m15_670 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", span="1531-1531"];
m15_449 [cluster="System.Type.IsAssignableFrom(System.Type)", file="DefaultSerializationBinder.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m15_537 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", span="1287-1287"];
m15_543 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", file="DefaultSerializationBinder.cs", label="element.SetAttributeNode(document.CreateAttribute(''json:Array'', JsonNamespaceUri, ''true''))", span="1289-1289"];
m15_546 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", file="DefaultSerializationBinder.cs", label="element.SetAttributeNode(document.CreateAttribute(''xmlns:json'', ''http://www.w3.org/2000/xmlns/'', JsonNamespaceUri))", span="1297-1297"];
m15_544 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", file="DefaultSerializationBinder.cs", label="element is XElementWrapper", span="1293-1293"];
m15_545 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", file="DefaultSerializationBinder.cs", label="element.GetPrefixOfNamespace(JsonNamespaceUri) == null", span="1295-1295"];
m15_547 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", span="1287-1287"];
m15_186 [cluster="lambda expression", file="DefaultSerializationBinder.cs", label="Entry lambda expression", span="560-560"];
m15_416 [cluster="lambda expression", file="DefaultSerializationBinder.cs", label="Entry lambda expression", span="964-964"];
m15_644 [cluster="lambda expression", file="DefaultSerializationBinder.cs", label="n.LocalName == propertyName", span="1463-1463"];
m15_643 [cluster="lambda expression", file="DefaultSerializationBinder.cs", label="Entry lambda expression", span="1463-1463"];
m15_417 [cluster="lambda expression", file="DefaultSerializationBinder.cs", label="n.LocalName == node.LocalName", span="964-964"];
m15_418 [cluster="lambda expression", file="DefaultSerializationBinder.cs", label="Exit lambda expression", span="964-964"];
m15_541 [cluster="lambda expression", file="DefaultSerializationBinder.cs", label="n.LocalName == propertyName", span="1282-1282"];
m15_540 [cluster="lambda expression", file="DefaultSerializationBinder.cs", label="Entry lambda expression", span="1282-1282"];
m15_645 [cluster="lambda expression", file="DefaultSerializationBinder.cs", label="Exit lambda expression", span="1463-1463"];
m15_313 [cluster="lambda expression", file="DefaultSerializationBinder.cs", label="Entry lambda expression", span="890-890"];
m15_661 [cluster="lambda expression", file="DefaultSerializationBinder.cs", label="Entry lambda expression", span="1520-1520"];
m15_542 [cluster="lambda expression", file="DefaultSerializationBinder.cs", label="Exit lambda expression", span="1282-1282"];
m15_315 [cluster="lambda expression", file="DefaultSerializationBinder.cs", label="Exit lambda expression", span="890-890"];
m15_314 [cluster="lambda expression", file="DefaultSerializationBinder.cs", label="a.LocalName == ''Array'' && a.NamespaceUri == JsonNamespaceUri", span="890-890"];
m15_663 [cluster="lambda expression", file="DefaultSerializationBinder.cs", label="Exit lambda expression", span="1520-1520"];
m15_662 [cluster="lambda expression", file="DefaultSerializationBinder.cs", label="a.NamespaceUri != JsonNamespaceUri", span="1520-1520"];
m15_187 [cluster="lambda expression", file="DefaultSerializationBinder.cs", label="WrapNode(n)", span="560-560"];
m15_188 [cluster="lambda expression", file="DefaultSerializationBinder.cs", label="Exit lambda expression", span="560-560"];
m15_451 [cluster="XDocument.cstr", file="DefaultSerializationBinder.cs", label="Entry XDocument.cstr", span=""];
m15_281 [cluster="string.IsNullOrEmpty(string)", file="DefaultSerializationBinder.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m15_411 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="DefaultSerializationBinder.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m15_37 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializationGuide()", file="DefaultSerializationBinder.cs", label="IDictionary<DateTime, int> dailyRegistrations = new Dictionary<DateTime, int>\r\n            {\r\n                { new DateTime(2014, 6, 1), 23 },\r\n                { new DateTime(2014, 6, 2), 50 }\r\n            }", span="165-169"];
m15_38 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializationGuide()", file="DefaultSerializationBinder.cs", label="string regJson = JsonConvert.SerializeObject(dailyRegistrations, Formatting.Indented)", span="171-171"];
m15_39 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializationGuide()", file="DefaultSerializationBinder.cs", label="City c = new City { Name = ''Oslo'', Population = 650000 }", span="177-177"];
m15_34 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string)", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string)", span="85-85"];
m15_36 [cluster="Unk.CreateElement", file="DefaultSerializationBinder.cs", label="Entry Unk.CreateElement", span=""];
m15_40 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", span="95-95"];
m15_41 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", file="DefaultSerializationBinder.cs", label="XmlNodeWrapper attribute = new XmlNodeWrapper(_document.CreateAttribute(name))", span="97-97"];
m15_244 [cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="318-318"];
m15_347 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="DefaultSerializationBinder.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m15_124 [cluster="Newtonsoft.Json.Linq.JContainer.Merge(object, Newtonsoft.Json.Linq.JsonMergeSettings)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Linq.JContainer.Merge(object, Newtonsoft.Json.Linq.JsonMergeSettings)", span="675-675"];
m15_539 [cluster="Unk.Single", file="DefaultSerializationBinder.cs", label="Entry Unk.Single", span=""];
m15_269 [cluster="System.Collections.Generic.List<T>.List()", file="DefaultSerializationBinder.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m15_42 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", file="DefaultSerializationBinder.cs", label="attribute.Value = value", span="98-98"];
m15_590 [cluster="System.Nullable<T>.GetValueOrDefault()", file="DefaultSerializationBinder.cs", label="Entry System.Nullable<T>.GetValueOrDefault()", span="0-0"];
m15_350 [cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="335-335"];
m15_184 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.XContainerWrapper(XContainer)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Converters.XContainerWrapper.XContainerWrapper(XContainer)", span="553-553"];
m15_185 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.XContainerWrapper(XContainer)", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Converters.XContainerWrapper.XContainerWrapper(XContainer)", span="553-553"];
m15_61 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="DefaultSerializationBinder.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m15_230 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="783-783"];
m15_231 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs", label="IXmlNode node = WrapXml(value)", span="785-785"];
m15_233 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs", label="PushParentNamespaces(node, manager)", span="788-788"];
m15_234 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs", label="!OmitRootObject", span="790-790"];
m15_236 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs", label="SerializeNode(writer, node, manager, !OmitRootObject)", span="793-793"];
m15_237 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs", label="!OmitRootObject", span="795-795"];
m15_232 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs", label="XmlNamespaceManager manager = new XmlNamespaceManager(new NameTable())", span="787-787"];
m15_235 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs", label="writer.WriteStartObject()", span="791-791"];
m15_238 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs", label="writer.WriteEndObject()", span="796-796"];
m15_239 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="783-783"];
m15_155 [cluster="XElement.cstr", file="DefaultSerializationBinder.cs", label="Entry XElement.cstr", span=""];
m15_219 [cluster="Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", span="709-709"];
m15_221 [cluster="Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="DefaultSerializationBinder.cs", label="Element.Add(wrapper.WrappedNode)", span="712-712"];
m15_220 [cluster="Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="DefaultSerializationBinder.cs", label="XObjectWrapper wrapper = (XObjectWrapper)attribute", span="711-711"];
m15_222 [cluster="Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", span="709-709"];
m15_242 [cluster="NameTable.cstr", file="DefaultSerializationBinder.cs", label="Entry NameTable.cstr", span=""];
m15_240 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", span="799-799"];
m15_247 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", file="DefaultSerializationBinder.cs", label="value is XObject", span="802-802"];
m15_248 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", file="DefaultSerializationBinder.cs", label="return XContainerWrapper.WrapNode((XObject)value);", span="803-803"];
m15_249 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", file="DefaultSerializationBinder.cs", label="value is XmlNode", span="806-806"];
m15_250 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", file="DefaultSerializationBinder.cs", label="return new XmlNodeWrapper((XmlNode)value);", span="807-807"];
m15_251 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", file="DefaultSerializationBinder.cs", label="throw new ArgumentException(''Value must be an XML object.'', ''value'');", span="810-810"];
m15_252 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", span="799-799"];
m15_246 [cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="327-327"];
m15_108 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializeAttributes()", file="DefaultSerializationBinder.cs", label="house.StreetAddress = ''221B Baker Street''", span="507-507"];
m15_109 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializeAttributes()", file="DefaultSerializationBinder.cs", label="house.Bedrooms = 2", span="508-508"];
m15_43 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="525-525"];
m15_161 [cluster="Unk.Get", file="DefaultSerializationBinder.cs", label="Entry Unk.Get", span=""];
m15_497 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)", span="1430-1430"];
m15_612 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="string ns = string.IsNullOrEmpty(elementPrefix) ? manager.DefaultNamespace : manager.LookupNamespace(elementPrefix)", span="1432-1432"];
m15_613 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="IXmlElement element = (!string.IsNullOrEmpty(ns)) ? document.CreateElement(elementName, ns) : document.CreateElement(elementName)", span="1434-1434"];
m15_614 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="return element;", span="1436-1436"];
m15_615 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)", span="1430-1430"];
m15_456 [cluster="Unk.Remove", file="DefaultSerializationBinder.cs", label="Entry Unk.Remove", span=""];
m15_62 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", span="34-34"];
m15_245 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", span="955-955"];
m15_397 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="!string.IsNullOrEmpty(declaration.Version)", span="1040-1040"];
m15_400 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="!string.IsNullOrEmpty(declaration.Encoding)", span="1045-1045"];
m15_403 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="!string.IsNullOrEmpty(declaration.Standalone)", span="1050-1050"];
m15_355 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="SerializeGroupedNodes(writer, node, manager, writePropertyName)", span="961-961"];
m15_357 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="IsArray(node) && node.ChildNodes.All(n => n.LocalName == node.LocalName) && node.ChildNodes.Count > 0", span="964-964"];
m15_358 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="SerializeGroupedNodes(writer, node, manager, false)", span="966-966"];
m15_364 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="writer.WritePropertyName(GetPropertyName(node, manager))", span="983-983"];
m15_365 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="!ValueAttributes(node.Attributes).Any() && node.ChildNodes.Count == 1\r\n                && node.ChildNodes[0].NodeType == XmlNodeType.Text", span="985-986"];
m15_372 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="SerializeNode(writer, node.Attributes[i], manager, true)", span="1002-1002"];
m15_374 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="SerializeGroupedNodes(writer, node, manager, true)", span="1005-1005"];
m15_391 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="writer.WritePropertyName(GetPropertyName(node, manager))", span="1032-1032"];
m15_395 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="writer.WritePropertyName(GetPropertyName(node, manager))", span="1037-1037"];
m15_394 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="IXmlDeclaration declaration = (IXmlDeclaration)node", span="1036-1036"];
m15_396 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="writer.WriteStartObject()", span="1038-1038"];
m15_398 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="writer.WritePropertyName(''@version'')", span="1042-1042"];
m15_399 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="writer.WriteValue(declaration.Version)", span="1043-1043"];
m15_401 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="writer.WritePropertyName(''@encoding'')", span="1047-1047"];
m15_402 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="writer.WriteValue(declaration.Encoding)", span="1048-1048"];
m15_404 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="writer.WritePropertyName(''@standalone'')", span="1052-1052"];
m15_406 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="writer.WriteEndObject()", span="1056-1056"];
m15_354 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="XmlNodeType.DocumentFragment", span="960-960"];
m15_356 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="XmlNodeType.Element", span="963-963"];
m15_359 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="node.Attributes", span="970-970"];
m15_363 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label=writePropertyName, span="982-982"];
m15_366 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="writer.WriteValue(node.ChildNodes[0].Value)", span="989-989"];
m15_367 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="node.ChildNodes.Count == 0 && CollectionUtils.IsNullOrEmpty(node.Attributes)", span="991-991"];
m15_371 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="i < node.Attributes.Count", span="1000-1000"];
m15_370 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="int i = 0", span="1000-1000"];
m15_373 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="i++", span="1000-1000"];
m15_375 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="writer.WriteEndObject()", span="1007-1007"];
m15_390 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label=writePropertyName, span="1031-1031"];
m15_392 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="writer.WriteValue(node.Value)", span="1033-1033"];
m15_393 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="XmlNodeType.XmlDeclaration", span="1035-1035"];
m15_405 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="writer.WriteValue(declaration.Standalone)", span="1053-1053"];
m15_352 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="node.NodeType", span="957-957"];
m15_362 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="manager.AddNamespace(prefix, attribute.Value)", span="978-978"];
m15_368 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="writer.WriteNull()", span="994-994"];
m15_369 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="writer.WriteStartObject()", span="998-998"];
m15_377 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label=writePropertyName, span="1013-1013"];
m15_378 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="writer.WriteComment(node.Value)", span="1014-1014"];
m15_385 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="node.NamespaceUri == ''http://www.w3.org/2000/xmlns/'' && node.Value == JsonNamespaceUri", span="1022-1022"];
m15_387 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="node.NamespaceUri == JsonNamespaceUri", span="1025-1025"];
m15_388 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="node.LocalName == ''Array''", span="1027-1027"];
m15_407 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="throw new JsonSerializationException(''Unexpected XmlNodeType when serializing nodes: '' + node.NodeType);", span="1059-1059"];
m15_353 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="XmlNodeType.Document", span="959-959"];
m15_386 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="return;", span="1023-1023"];
m15_389 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="return;", span="1028-1028"];
m15_360 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="attribute.NamespaceUri == ''http://www.w3.org/2000/xmlns/''", span="972-972"];
m15_361 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="string prefix = (attribute.LocalName != ''xmlns'')\r\n                                  ? attribute.LocalName\r\n                                  : string.Empty", span="974-976"];
m15_376 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="XmlNodeType.Comment", span="1012-1012"];
m15_379 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="XmlNodeType.Attribute", span="1016-1016"];
m15_384 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="XmlNodeType.SignificantWhitespace", span="1021-1021"];
m15_380 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="XmlNodeType.Text", span="1017-1017"];
m15_383 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="XmlNodeType.Whitespace", span="1020-1020"];
m15_381 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="XmlNodeType.CDATA", span="1018-1018"];
m15_382 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="XmlNodeType.ProcessingInstruction", span="1019-1019"];
m15_408 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", span="955-955"];
m15_243 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="813-813"];
m15_264 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="manager.PushScope()", span="835-835"];
m15_254 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="List<IXmlNode> parentElements = null", span="815-815"];
m15_255 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="IXmlNode parent = node", span="817-817"];
m15_267 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="manager.AddNamespace(attribute.LocalName, attribute.Value)", span="839-839"];
m15_263 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label=parentElements, span="833-833"];
m15_265 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="parentElement.Attributes", span="836-836"];
m15_261 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="parentElements != null", span="829-829"];
m15_258 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="parentElements == null", span="822-822"];
m15_260 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="parentElements.Add(parent)", span="825-825"];
m15_262 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="parentElements.Reverse()", span="831-831"];
m15_256 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="(parent = parent.ParentNode) != null", span="818-818"];
m15_266 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="attribute.NamespaceUri == ''http://www.w3.org/2000/xmlns/'' && attribute.LocalName != ''xmlns''", span="838-838"];
m15_259 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="parentElements = new List<IXmlNode>()", span="823-823"];
m15_257 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="parent.NodeType == XmlNodeType.Element", span="820-820"];
m15_268 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="813-813"];
m15_498 [cluster="Unk.LookupNamespace", file="DefaultSerializationBinder.cs", label="Entry Unk.LookupNamespace", span=""];
m15_495 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", span="1303-1303"];
m15_556 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="!string.IsNullOrEmpty(attributeName)", span="1326-1326"];
m15_575 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="manager.LookupNamespace(''json'' + i) != null", span="1357-1357"];
m15_563 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="attributeValue = ConvertTokenToXmlValue(reader)", span="1336-1336"];
m15_566 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="IsNamespaceAttribute(attributeName, out namespacePrefix)", span="1340-1340"];
m15_555 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="string attributeName = reader.Value.ToString()", span="1324-1324"];
m15_557 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="char firstChar = attributeName[0]", span="1328-1328"];
m15_582 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="finishedAttributes = true", span="1376-1376"];
m15_574 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="int? i = null", span="1356-1356"];
m15_576 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="i = i.GetValueOrDefault() + 1", span="1359-1359"];
m15_577 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="jsonPrefix = ''json'' + i", span="1361-1361"];
m15_585 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="throw new JsonSerializationException(''Unexpected JsonToken: '' + reader.TokenType);", span="1384-1384"];
m15_562 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="reader.Read()", span="1335-1335"];
m15_564 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="attributeNameValues.Add(attributeName, attributeValue)", span="1337-1337"];
m15_567 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="manager.AddNamespace(namespacePrefix, attributeValue)", span="1342-1342"];
m15_561 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="attributeName = attributeName.Substring(1)", span="1334-1334"];
m15_565 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="string namespacePrefix", span="1339-1339"];
m15_552 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="!finishedAttributes && !finishedElement && reader.Read()", span="1319-1319"];
m15_570 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="reader.Read()", span="1347-1347"];
m15_548 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="Dictionary<string, string> attributeNameValues = new Dictionary<string, string>()", span="1305-1305"];
m15_551 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="reader.TokenType != JsonToken.String\r\n          && reader.TokenType != JsonToken.Null\r\n          && reader.TokenType != JsonToken.Boolean\r\n          && reader.TokenType != JsonToken.Integer\r\n          && reader.TokenType != JsonToken.Float\r\n          && reader.TokenType != JsonToken.Date\r\n          && reader.TokenType != JsonToken.StartConstructor", span="1310-1316"];
m15_553 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="reader.TokenType", span="1321-1321"];
m15_571 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="attributeValue = reader.Value.ToString()", span="1348-1348"];
m15_572 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="string jsonPrefix = manager.LookupPrefix(JsonNamespaceUri)", span="1352-1352"];
m15_579 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="manager.AddNamespace(jsonPrefix, JsonNamespaceUri)", span="1364-1364"];
m15_554 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="JsonToken.PropertyName", span="1323-1323"];
m15_558 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="string attributeValue", span="1329-1329"];
m15_559 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label=firstChar, span="1331-1331"];
m15_573 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="jsonPrefix == null", span="1353-1353"];
m15_578 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="attributeNameValues.Add(''xmlns:'' + jsonPrefix, JsonNamespaceUri)", span="1363-1363"];
m15_580 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="attributeNameValues.Add(jsonPrefix + '':'' + attributeName, attributeValue)", span="1367-1367"];
m15_560 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="'@'", span="1333-1333"];
m15_569 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="attributeName = attributeName.Substring(1)", span="1346-1346"];
m15_549 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="bool finishedAttributes = false", span="1306-1306"];
m15_550 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="bool finishedElement = false", span="1307-1307"];
m15_581 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="finishedAttributes = true", span="1370-1370"];
m15_584 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="finishedElement = true", span="1381-1381"];
m15_586 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="return attributeNameValues;", span="1389-1389"];
m15_583 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="JsonToken.EndObject", span="1380-1380"];
m15_568 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="'$'", span="1345-1345"];
m15_587 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", span="1303-1303"];
m15_311 [cluster="Unk.SingleOrDefault", file="DefaultSerializationBinder.cs", label="Entry Unk.SingleOrDefault", span=""];
m15_280 [cluster="Unk.LookupPrefix", file="DefaultSerializationBinder.cs", label="Entry Unk.LookupPrefix", span=""];
m15_455 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", span="1439-1439"];
m15_625 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="DefaultSerializationBinder.cs", label="DeserializeValue(reader, document, manager, propertyName, currentNode)", span="1457-1457"];
m15_627 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="DefaultSerializationBinder.cs", label="count == 1 && WriteArrayAttribute", span="1461-1461"];
m15_629 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="DefaultSerializationBinder.cs", label="AddJsonArrayAttribute(arrayElement, document)", span="1464-1464"];
m15_630 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="DefaultSerializationBinder.cs", label="DeserializeValue(reader, document, manager, propertyName, currentNode)", span="1469-1469"];
m15_634 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="DefaultSerializationBinder.cs", label="DeserializeValue(reader, document, manager, constructorName, currentNode)", span="1477-1477"];
m15_641 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="DefaultSerializationBinder.cs", label="reader.TokenType == JsonToken.PropertyName || reader.Read()", span="1489-1489"];
m15_616 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="DefaultSerializationBinder.cs", label="reader.TokenType", span="1443-1443"];
m15_618 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="DefaultSerializationBinder.cs", label="currentNode.NodeType == XmlNodeType.Document && document.DocumentElement != null", span="1446-1446"];
m15_620 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="DefaultSerializationBinder.cs", label="string propertyName = reader.Value.ToString()", span="1449-1449"];
m15_621 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="DefaultSerializationBinder.cs", label="reader.Read()", span="1450-1450"];
m15_622 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="DefaultSerializationBinder.cs", label="reader.TokenType == JsonToken.StartArray", span="1452-1452"];
m15_624 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="DefaultSerializationBinder.cs", label="reader.Read() && reader.TokenType != JsonToken.EndArray", span="1455-1455"];
m15_628 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="DefaultSerializationBinder.cs", label="IXmlElement arrayElement = currentNode.ChildNodes.CastValid<IXmlElement>().Single(n => n.LocalName == propertyName)", span="1463-1463"];
m15_632 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="DefaultSerializationBinder.cs", label="string constructorName = reader.Value.ToString()", span="1473-1473"];
m15_633 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="DefaultSerializationBinder.cs", label="reader.Read() && reader.TokenType != JsonToken.EndConstructor", span="1475-1475"];
m15_636 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="DefaultSerializationBinder.cs", label="currentNode.AppendChild(document.CreateComment((string)reader.Value))", span="1481-1481"];
m15_640 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="DefaultSerializationBinder.cs", label="throw new JsonSerializationException(''Unexpected JsonToken when deserializing node: '' + reader.TokenType);", span="1487-1487"];
m15_619 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="DefaultSerializationBinder.cs", label="throw new JsonSerializationException(''JSON root object has multiple properties. The root object must have a single property in order to create a valid XML document. Consider specifing a DeserializeRootElementName.'');", span="1447-1447"];
m15_626 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="DefaultSerializationBinder.cs", label="count++", span="1458-1458"];
m15_623 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="DefaultSerializationBinder.cs", label="int count = 0", span="1454-1454"];
m15_639 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="DefaultSerializationBinder.cs", label="return;", span="1485-1485"];
m15_617 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="DefaultSerializationBinder.cs", label="JsonToken.PropertyName", span="1445-1445"];
m15_631 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="DefaultSerializationBinder.cs", label="JsonToken.StartConstructor", span="1472-1472"];
m15_635 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="DefaultSerializationBinder.cs", label="JsonToken.Comment", span="1480-1480"];
m15_637 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="DefaultSerializationBinder.cs", label="JsonToken.EndObject", span="1483-1483"];
m15_638 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="DefaultSerializationBinder.cs", label="JsonToken.EndArray", span="1484-1484"];
m15_642 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", span="1439-1439"];
m15_272 [cluster="Unk.PushScope", file="DefaultSerializationBinder.cs", label="Entry Unk.PushScope", span=""];
m15_671 [file="DefaultSerializationBinder.cs", label="Newtonsoft.Json.Converters.XmlDocumentWrapper", span=""];
m15_680 [file="DefaultSerializationBinder.cs", label="Newtonsoft.Json.Converters.XmlNodeConverter", span=""];
m15_683 [file="DefaultSerializationBinder.cs", label=propertyName, span=""];
m15_681 [file="DefaultSerializationBinder.cs", label="Newtonsoft.Json.Converters.IXmlNode", span=""];
m15_682 [file="DefaultSerializationBinder.cs", label=string, span=""];
m15_674 [file="DefaultSerializationBinder.cs", label="Newtonsoft.Json.Converters.XmlNodeWrapper", span=""];
m15_678 [file="DefaultSerializationBinder.cs", label="Newtonsoft.Json.Converters.XObjectWrapper", span=""];
m15_672 [file="DefaultSerializationBinder.cs", label="Newtonsoft.Json.Converters.XmlElementWrapper", span=""];
m15_673 [file="DefaultSerializationBinder.cs", label="Newtonsoft.Json.Converters.XmlDeclarationWrapper", span=""];
m15_677 [file="DefaultSerializationBinder.cs", label="Newtonsoft.Json.Converters.XContainerWrapper", span=""];
m15_679 [file="DefaultSerializationBinder.cs", label="Newtonsoft.Json.Converters.XElementWrapper", span=""];
m15_676 [file="DefaultSerializationBinder.cs", label="Newtonsoft.Json.Converters.XDocumentWrapper", span=""];
m16_287 [cluster="Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader)", file="DiagnosticsTraceWriter.cs", label="Entry Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader)", span="323-323"];
m16_4 [cluster="System.Collections.Generic.Stack<T>.Stack()", file="DiagnosticsTraceWriter.cs", label="Entry System.Collections.Generic.Stack<T>.Stack()", span="0-0"];
m16_148 [cluster="System.Convert.ToDateTime(object)", file="DiagnosticsTraceWriter.cs", label="Entry System.Convert.ToDateTime(object)", span="0-0"];
m16_284 [cluster="System.IO.StringReader.StringReader(string)", file="DiagnosticsTraceWriter.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m16_126 [cluster="System.Convert.ToInt32(object)", file="DiagnosticsTraceWriter.cs", label="Entry System.Convert.ToInt32(object)", span="0-0"];
m16_89 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="DiagnosticsTraceWriter.cs", label="Entry Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", span="849-849"];
m16_84 [cluster="System.Collections.Generic.Stack<T>.Push(T)", file="DiagnosticsTraceWriter.cs", label="Entry System.Collections.Generic.Stack<T>.Push(T)", span="0-0"];
m16_79 [cluster="Unk.Read", file="DiagnosticsTraceWriter.cs", label="Entry Unk.Read", span=""];
m16_127 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.ReadAsString()", file="DiagnosticsTraceWriter.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.ReadAsString()", span="205-205"];
m16_128 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.ReadAsString()", file="DiagnosticsTraceWriter.cs", label="!Read()", span="207-207"];
m16_129 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.ReadAsString()", file="DiagnosticsTraceWriter.cs", label="return null;", span="208-208"];
m16_130 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.ReadAsString()", file="DiagnosticsTraceWriter.cs", label="return (string)Value;", span="210-210"];
m16_131 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.ReadAsString()", file="DiagnosticsTraceWriter.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.ReadAsString()", span="205-205"];
m16_86 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken)", file="DiagnosticsTraceWriter.cs", label="Entry Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken)", span="839-839"];
m16_285 [cluster="XmlReaderSettings.cstr", file="DiagnosticsTraceWriter.cs", label="Entry XmlReaderSettings.cstr", span=""];
m16_288 [cluster="Unk.IsTrue", file="DiagnosticsTraceWriter.cs", label="Entry Unk.IsTrue", span=""];
m16_292 [cluster="Unk.IsFalse", file="DiagnosticsTraceWriter.cs", label="Entry Unk.IsFalse", span=""];
m16_132 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.ReadAsBytes()", file="DiagnosticsTraceWriter.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.ReadAsBytes()", span="213-213"];
m16_133 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.ReadAsBytes()", file="DiagnosticsTraceWriter.cs", label="!Read()", span="215-215"];
m16_134 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.ReadAsBytes()", file="DiagnosticsTraceWriter.cs", label="return null;", span="216-216"];
m16_135 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.ReadAsBytes()", file="DiagnosticsTraceWriter.cs", label="return (byte[])Value;", span="218-218"];
m16_136 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.ReadAsBytes()", file="DiagnosticsTraceWriter.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.ReadAsBytes()", span="213-213"];
m16_82 [cluster="System.Enum.Parse(System.Type, string, bool)", file="DiagnosticsTraceWriter.cs", label="Entry System.Enum.Parse(System.Type, string, bool)", span="0-0"];
m16_88 [cluster="Unk.ToInt64", file="DiagnosticsTraceWriter.cs", label="Entry Unk.ToInt64", span=""];
m16_87 [cluster="System.Collections.Generic.Stack<T>.Pop()", file="DiagnosticsTraceWriter.cs", label="Entry System.Collections.Generic.Stack<T>.Pop()", span="0-0"];
m16_85 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", file="DiagnosticsTraceWriter.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", span="0-0"];
m16_78 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.HandleValueType()", file="DiagnosticsTraceWriter.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.HandleValueType()", span="163-163"];
m16_94 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.HandleValueType()", file="DiagnosticsTraceWriter.cs", label=_valueType, span="165-165"];
m16_95 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.HandleValueType()", file="DiagnosticsTraceWriter.cs", label="JTokenType.Null", span="167-167"];
m16_101 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.HandleValueType()", file="DiagnosticsTraceWriter.cs", label="JTokenType.Object", span="174-174"];
m16_106 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.HandleValueType()", file="DiagnosticsTraceWriter.cs", label="JTokenType.Array", span="179-179"];
m16_111 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.HandleValueType()", file="DiagnosticsTraceWriter.cs", label="JTokenType.Constructor", span="184-184"];
m16_96 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.HandleValueType()", file="DiagnosticsTraceWriter.cs", label="SetToken(JsonToken.Null)", span="168-168"];
m16_97 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.HandleValueType()", file="DiagnosticsTraceWriter.cs", label="_valueType = null", span="169-169"];
m16_98 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.HandleValueType()", file="DiagnosticsTraceWriter.cs", label="PeekState() == JTokenType.Property", span="171-171"];
m16_99 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.HandleValueType()", file="DiagnosticsTraceWriter.cs", label="_stateStack.Pop()", span="172-172"];
m16_100 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.HandleValueType()", file="DiagnosticsTraceWriter.cs", label="return true;", span="173-173"];
m16_102 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.HandleValueType()", file="DiagnosticsTraceWriter.cs", label="SetToken(JsonToken.StartObject)", span="175-175"];
m16_103 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.HandleValueType()", file="DiagnosticsTraceWriter.cs", label="_stateStack.Push(JTokenType.Object)", span="176-176"];
m16_104 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.HandleValueType()", file="DiagnosticsTraceWriter.cs", label="_valueType = null", span="177-177"];
m16_105 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.HandleValueType()", file="DiagnosticsTraceWriter.cs", label="return true;", span="178-178"];
m16_107 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.HandleValueType()", file="DiagnosticsTraceWriter.cs", label="SetToken(JsonToken.StartArray)", span="180-180"];
m16_108 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.HandleValueType()", file="DiagnosticsTraceWriter.cs", label="_stateStack.Push(JTokenType.Array)", span="181-181"];
m16_109 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.HandleValueType()", file="DiagnosticsTraceWriter.cs", label="_valueType = null", span="182-182"];
m16_110 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.HandleValueType()", file="DiagnosticsTraceWriter.cs", label="return true;", span="183-183"];
m16_112 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.HandleValueType()", file="DiagnosticsTraceWriter.cs", label="string constructorName = _reader.GetAttribute(''name'')", span="185-185"];
m16_113 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.HandleValueType()", file="DiagnosticsTraceWriter.cs", label="constructorName == null", span="186-186"];
m16_115 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.HandleValueType()", file="DiagnosticsTraceWriter.cs", label="SetToken(JsonToken.StartConstructor, constructorName)", span="189-189"];
m16_114 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.HandleValueType()", file="DiagnosticsTraceWriter.cs", label="throw new Exception(''No constructor name specified.'');", span="187-187"];
m16_116 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.HandleValueType()", file="DiagnosticsTraceWriter.cs", label="_stateStack.Push(JTokenType.Constructor)", span="190-190"];
m16_117 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.HandleValueType()", file="DiagnosticsTraceWriter.cs", label="_valueType = null", span="191-191"];
m16_118 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.HandleValueType()", file="DiagnosticsTraceWriter.cs", label="return true;", span="192-192"];
m16_120 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.HandleValueType()", file="DiagnosticsTraceWriter.cs", label="return false;", span="194-194"];
m16_119 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.HandleValueType()", file="DiagnosticsTraceWriter.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.HandleValueType()", span="163-163"];
m16_143 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.ReadAsDateTime()", file="DiagnosticsTraceWriter.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.ReadAsDateTime()", span="229-229"];
m16_144 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.ReadAsDateTime()", file="DiagnosticsTraceWriter.cs", label="!Read()", span="231-231"];
m16_145 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.ReadAsDateTime()", file="DiagnosticsTraceWriter.cs", label="return null;", span="232-232"];
m16_146 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.ReadAsDateTime()", file="DiagnosticsTraceWriter.cs", label="return (Value != null) ? (DateTime?)Convert.ToDateTime(Value) : null;", span="234-234"];
m16_147 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.ReadAsDateTime()", file="DiagnosticsTraceWriter.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.ReadAsDateTime()", span="229-229"];
m16_9 [cluster="System.Collections.Generic.Stack<T>.Peek()", file="DiagnosticsTraceWriter.cs", label="Entry System.Collections.Generic.Stack<T>.Peek()", span="0-0"];
m16_92 [cluster="Unk.ToDateTime", file="DiagnosticsTraceWriter.cs", label="Entry Unk.ToDateTime", span=""];
m16_289 [cluster="Unk.AreEqual", file="DiagnosticsTraceWriter.cs", label="Entry Unk.AreEqual", span=""];
m16_137 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.ReadAsDecimal()", file="DiagnosticsTraceWriter.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.ReadAsDecimal()", span="221-221"];
m16_138 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.ReadAsDecimal()", file="DiagnosticsTraceWriter.cs", label="!Read()", span="223-223"];
m16_139 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.ReadAsDecimal()", file="DiagnosticsTraceWriter.cs", label="return null;", span="224-224"];
m16_140 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.ReadAsDecimal()", file="DiagnosticsTraceWriter.cs", label="return (Value != null) ? (decimal?)Convert.ToDecimal(Value) : null;", span="226-226"];
m16_141 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.ReadAsDecimal()", file="DiagnosticsTraceWriter.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.ReadAsDecimal()", span="221-221"];
m16_290 [cluster="System.DateTime.Parse(string)", file="DiagnosticsTraceWriter.cs", label="Entry System.DateTime.Parse(string)", span="0-0"];
m16_91 [cluster="Unk.ToBoolean", file="DiagnosticsTraceWriter.cs", label="Entry Unk.ToBoolean", span=""];
m16_83 [cluster="Unk.SetToken", file="DiagnosticsTraceWriter.cs", label="Entry Unk.SetToken", span=""];
m16_142 [cluster="System.Convert.ToDecimal(object)", file="DiagnosticsTraceWriter.cs", label="Entry System.Convert.ToDecimal(object)", span="0-0"];
m16_149 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.ReadAsDateTimeOffset()", file="DiagnosticsTraceWriter.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.ReadAsDateTimeOffset()", span="237-237"];
m16_150 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.ReadAsDateTimeOffset()", file="DiagnosticsTraceWriter.cs", label="!Read()", span="239-239"];
m16_151 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.ReadAsDateTimeOffset()", file="DiagnosticsTraceWriter.cs", label="return null;", span="240-240"];
m16_152 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.ReadAsDateTimeOffset()", file="DiagnosticsTraceWriter.cs", label="return (Value != null) ? (DateTimeOffset?)Convert.ToDateTime(Value) : null;", span="242-242"];
m16_153 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.ReadAsDateTimeOffset()", file="DiagnosticsTraceWriter.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.ReadAsDateTimeOffset()", span="237-237"];
m16_121 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.ReadAsInt32()", file="DiagnosticsTraceWriter.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.ReadAsInt32()", span="197-197"];
m16_122 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.ReadAsInt32()", file="DiagnosticsTraceWriter.cs", label="!Read()", span="199-199"];
m16_123 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.ReadAsInt32()", file="DiagnosticsTraceWriter.cs", label="return null;", span="200-200"];
m16_124 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.ReadAsInt32()", file="DiagnosticsTraceWriter.cs", label="return (Value != null) ? (int?)Convert.ToInt32(Value) : null;", span="202-202"];
m16_125 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.ReadAsInt32()", file="DiagnosticsTraceWriter.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.ReadAsInt32()", span="197-197"];
m16_10 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.Read()", file="DiagnosticsTraceWriter.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.Read()", span="66-66"];
m16_11 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.Read()", file="DiagnosticsTraceWriter.cs", label="HandleValueType()", span="68-68"];
m16_12 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.Read()", file="DiagnosticsTraceWriter.cs", label="return true;", span="69-69"];
m16_13 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.Read()", file="DiagnosticsTraceWriter.cs", label="_reader.Read()", span="71-71"];
m16_14 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.Read()", file="DiagnosticsTraceWriter.cs", label="_reader.NodeType", span="73-73"];
m16_76 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.Read()", file="DiagnosticsTraceWriter.cs", label="return false;", span="160-160"];
m16_15 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.Read()", file="DiagnosticsTraceWriter.cs", label="XmlNodeType.Element", span="75-75"];
m16_31 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.Read()", file="DiagnosticsTraceWriter.cs", label="XmlNodeType.EndElement", span="97-97"];
m16_54 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.Read()", file="DiagnosticsTraceWriter.cs", label="XmlNodeType.Text", span="125-125"];
m16_75 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.Read()", file="DiagnosticsTraceWriter.cs", label="throw new ArgumentOutOfRangeException();", span="156-156"];
m16_16 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.Read()", file="DiagnosticsTraceWriter.cs", label="string typeName = _reader.GetAttribute(''type'')", span="76-76"];
m16_17 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.Read()", file="DiagnosticsTraceWriter.cs", label="typeName == null", span="77-77"];
m16_19 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.Read()", file="DiagnosticsTraceWriter.cs", label="_valueType = (JTokenType)Enum.Parse(typeof(JTokenType), typeName, true)", span="80-80"];
m16_18 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.Read()", file="DiagnosticsTraceWriter.cs", label="throw new Exception(''No type specified.'');", span="78-78"];
m16_20 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.Read()", file="DiagnosticsTraceWriter.cs", label="PeekState()", span="82-82"];
m16_21 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.Read()", file="DiagnosticsTraceWriter.cs", label="JTokenType.None", span="84-84"];
m16_24 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.Read()", file="DiagnosticsTraceWriter.cs", label="JTokenType.Object", span="87-87"];
m16_28 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.Read()", file="DiagnosticsTraceWriter.cs", label="JTokenType.Array", span="91-91"];
m16_30 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.Read()", file="DiagnosticsTraceWriter.cs", label="throw new ArgumentOutOfRangeException();", span="95-95"];
m16_22 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.Read()", file="DiagnosticsTraceWriter.cs", label="HandleValueType()", span="85-85"];
m16_23 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.Read()", file="DiagnosticsTraceWriter.cs", label="return true;", span="86-86"];
m16_25 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.Read()", file="DiagnosticsTraceWriter.cs", label="SetToken(JsonToken.PropertyName, _reader.LocalName)", span="88-88"];
m16_26 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.Read()", file="DiagnosticsTraceWriter.cs", label="_stateStack.Push(JTokenType.Property)", span="89-89"];
m16_27 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.Read()", file="DiagnosticsTraceWriter.cs", label="return true;", span="90-90"];
m16_29 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.Read()", file="DiagnosticsTraceWriter.cs", label="JTokenType.Constructor", span="92-92"];
m16_32 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.Read()", file="DiagnosticsTraceWriter.cs", label="_stateStack.Peek()", span="98-98"];
m16_33 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.Read()", file="DiagnosticsTraceWriter.cs", label="JTokenType.Object", span="100-100"];
m16_39 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.Read()", file="DiagnosticsTraceWriter.cs", label="JTokenType.Array", span="106-106"];
m16_45 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.Read()", file="DiagnosticsTraceWriter.cs", label="JTokenType.Constructor", span="112-112"];
m16_34 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.Read()", file="DiagnosticsTraceWriter.cs", label="SetToken(JsonToken.EndObject)", span="101-101"];
m16_35 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.Read()", file="DiagnosticsTraceWriter.cs", label="_stateStack.Pop()", span="102-102"];
m16_36 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.Read()", file="DiagnosticsTraceWriter.cs", label="PeekState() == JTokenType.Property", span="103-103"];
m16_37 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.Read()", file="DiagnosticsTraceWriter.cs", label="_stateStack.Pop()", span="104-104"];
m16_38 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.Read()", file="DiagnosticsTraceWriter.cs", label="return true;", span="105-105"];
m16_40 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.Read()", file="DiagnosticsTraceWriter.cs", label="SetToken(JsonToken.EndArray)", span="107-107"];
m16_41 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.Read()", file="DiagnosticsTraceWriter.cs", label="_stateStack.Pop()", span="108-108"];
m16_42 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.Read()", file="DiagnosticsTraceWriter.cs", label="PeekState() == JTokenType.Property", span="109-109"];
m16_43 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.Read()", file="DiagnosticsTraceWriter.cs", label="_stateStack.Pop()", span="110-110"];
m16_44 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.Read()", file="DiagnosticsTraceWriter.cs", label="return true;", span="111-111"];
m16_46 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.Read()", file="DiagnosticsTraceWriter.cs", label="SetToken(JsonToken.EndConstructor)", span="113-113"];
m16_47 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.Read()", file="DiagnosticsTraceWriter.cs", label="_stateStack.Pop()", span="114-114"];
m16_48 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.Read()", file="DiagnosticsTraceWriter.cs", label="PeekState() == JTokenType.Property", span="115-115"];
m16_49 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.Read()", file="DiagnosticsTraceWriter.cs", label="_stateStack.Pop()", span="116-116"];
m16_50 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.Read()", file="DiagnosticsTraceWriter.cs", label="return true;", span="117-117"];
m16_51 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.Read()", file="DiagnosticsTraceWriter.cs", label="_stateStack.Pop()", span="120-120"];
m16_52 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.Read()", file="DiagnosticsTraceWriter.cs", label="PeekState() == JTokenType.Property", span="121-121"];
m16_53 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.Read()", file="DiagnosticsTraceWriter.cs", label="_stateStack.Pop()", span="122-122"];
m16_55 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.Read()", file="DiagnosticsTraceWriter.cs", label="XmlNodeType.CDATA", span="126-126"];
m16_56 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.Read()", file="DiagnosticsTraceWriter.cs", label=_valueType, span="127-127"];
m16_57 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.Read()", file="DiagnosticsTraceWriter.cs", label="JTokenType.Integer", span="129-129"];
m16_59 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.Read()", file="DiagnosticsTraceWriter.cs", label="JTokenType.Float", span="132-132"];
m16_61 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.Read()", file="DiagnosticsTraceWriter.cs", label="JTokenType.String", span="135-135"];
m16_66 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.Read()", file="DiagnosticsTraceWriter.cs", label="JTokenType.Boolean", span="141-141"];
m16_68 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.Read()", file="DiagnosticsTraceWriter.cs", label="JTokenType.Date", span="144-144"];
m16_70 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.Read()", file="DiagnosticsTraceWriter.cs", label="JTokenType.Bytes", span="147-147"];
m16_72 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.Read()", file="DiagnosticsTraceWriter.cs", label="throw new ArgumentOutOfRangeException();", span="151-151"];
m16_58 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.Read()", file="DiagnosticsTraceWriter.cs", label="SetToken(JsonToken.Integer, Convert.ToInt64(_reader.Value))", span="130-130"];
m16_60 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.Read()", file="DiagnosticsTraceWriter.cs", label="SetToken(JsonToken.Float, Convert.ToDouble(_reader.Value))", span="133-133"];
m16_62 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.Read()", file="DiagnosticsTraceWriter.cs", label="JTokenType.Uri", span="136-136"];
m16_63 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.Read()", file="DiagnosticsTraceWriter.cs", label="JTokenType.TimeSpan", span="137-137"];
m16_64 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.Read()", file="DiagnosticsTraceWriter.cs", label="JTokenType.Guid", span="138-138"];
m16_65 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.Read()", file="DiagnosticsTraceWriter.cs", label="SetToken(JsonToken.String, _reader.Value)", span="139-139"];
m16_67 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.Read()", file="DiagnosticsTraceWriter.cs", label="SetToken(JsonToken.Boolean, Convert.ToBoolean(_reader.Value))", span="142-142"];
m16_69 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.Read()", file="DiagnosticsTraceWriter.cs", label="SetToken(JsonToken.Date, Convert.ToDateTime(_reader.Value))", span="145-145"];
m16_71 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.Read()", file="DiagnosticsTraceWriter.cs", label="SetToken(JsonToken.Bytes, Convert.FromBase64String(_reader.Value))", span="148-148"];
m16_73 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.Read()", file="DiagnosticsTraceWriter.cs", label="_stateStack.Push(_valueType.Value)", span="153-153"];
m16_74 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.Read()", file="DiagnosticsTraceWriter.cs", label="return true;", span="154-154"];
m16_77 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.Read()", file="DiagnosticsTraceWriter.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.Read()", span="66-66"];
m16_286 [cluster="Unk.Create", file="DiagnosticsTraceWriter.cs", label="Entry Unk.Create", span=""];
m16_154 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", span="249-249"];
m16_155 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="string xml = @''<Root type=''''Object''''>\r\n              <Null type=''''Null'''' />\r\n              <String type=''''String''''>This is a string!</String>\r\n              <Char type=''''String''''>!</Char>\r\n              <Integer type=''''Integer''''>123</Integer>\r\n              <DateTime type=''''Date''''>2001-02-22T20:59:59Z</DateTime>\r\n              <DateTimeOffset type=''''Date''''>2001-02-22T20:59:59+12:00</DateTimeOffset>\r\n              <Float type=''''Float''''>1.1</Float>\r\n              <Double type=''''Float''''>3.14</Double>\r\n              <Decimal type=''''Float''''>19.95</Decimal>\r\n              <Guid type=''''Guid''''>d66eab59-3715-4b35-9e06-fa61c1216eaa</Guid>\r\n              <Uri type=''''Uri''''>http://james.newtonking.com</Uri>\r\n              <Array type=''''Array''''>\r\n                <Item type=''''Integer''''>1</Item>\r\n                <Item type=''''Bytes''''>SGVsbG8gd29ybGQh</Item>\r\n                <Item type=''''Boolean''''>True</Item>\r\n              </Array>\r\n              <Object type=''''Object''''>\r\n                <String type=''''String''''>This is a string!</String>\r\n                <Null type=''''Null'''' />\r\n              </Object>\r\n              <Constructor type=''''Constructor'''' name=''''Date''''>\r\n                <Item type=''''Integer''''>2000</Item>\r\n                <Item type=''''Integer''''>12</Item>\r\n                <Item type=''''Integer''''>30</Item>\r\n              </Constructor>\r\n            </Root>''", span="252-278"];
m16_156 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="StringReader sr = new StringReader(xml)", span="280-280"];
m16_160 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="XmlReader xmlReader = XmlReader.Create(new StringReader(xml), new XmlReaderSettings { IgnoreWhitespace = true })", span="312-312"];
m16_157 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="XmlReader xmlReader = XmlReader.Create(sr, new XmlReaderSettings { IgnoreWhitespace = true })", span="282-282"];
m16_158 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="XmlJsonReader reader = new XmlJsonReader(xmlReader)", span="283-283"];
m16_159 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="JObject o = JObject.Load(reader)", span="285-285"];
m16_161 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="XmlJsonReader reader = new XmlJsonReader(xmlReader)", span="313-313"];
m16_162 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.IsTrue(reader.Read())", span="315-315"];
m16_163 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="316-316"];
m16_164 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.IsTrue(reader.Read())", span="318-318"];
m16_165 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="319-319"];
m16_166 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(''Null'', reader.Value)", span="320-320"];
m16_167 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.IsTrue(reader.Read())", span="322-322"];
m16_168 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="323-323"];
m16_169 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.IsTrue(reader.Read())", span="325-325"];
m16_170 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="326-326"];
m16_171 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(''String'', reader.Value)", span="327-327"];
m16_172 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.IsTrue(reader.Read())", span="329-329"];
m16_173 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="330-330"];
m16_174 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(''This is a string!'', reader.Value)", span="331-331"];
m16_175 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.IsTrue(reader.Read())", span="333-333"];
m16_176 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="334-334"];
m16_177 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(''Char'', reader.Value)", span="335-335"];
m16_178 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.IsTrue(reader.Read())", span="337-337"];
m16_179 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="338-338"];
m16_180 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(''!'', reader.Value)", span="339-339"];
m16_181 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.IsTrue(reader.Read())", span="341-341"];
m16_182 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="342-342"];
m16_183 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(''Integer'', reader.Value)", span="343-343"];
m16_184 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.IsTrue(reader.Read())", span="345-345"];
m16_185 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="346-346"];
m16_186 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(123, reader.Value)", span="347-347"];
m16_187 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.IsTrue(reader.Read())", span="349-349"];
m16_188 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="350-350"];
m16_189 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(''DateTime'', reader.Value)", span="351-351"];
m16_190 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.IsTrue(reader.Read())", span="353-353"];
m16_191 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="354-354"];
m16_192 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(DateTime.Parse(''2001-02-22T20:59:59Z''), reader.Value)", span="355-355"];
m16_193 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.IsTrue(reader.Read())", span="357-357"];
m16_194 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="358-358"];
m16_195 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(''DateTimeOffset'', reader.Value)", span="359-359"];
m16_196 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.IsTrue(reader.Read())", span="361-361"];
m16_197 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="362-362"];
m16_198 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(DateTime.Parse(''2001-02-22T20:59:59+12:00''), reader.Value)", span="363-363"];
m16_199 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.IsTrue(reader.Read())", span="365-365"];
m16_200 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="366-366"];
m16_201 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(''Float'', reader.Value)", span="367-367"];
m16_202 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.IsTrue(reader.Read())", span="369-369"];
m16_203 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="370-370"];
m16_204 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(1.1d, reader.Value)", span="371-371"];
m16_205 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.IsTrue(reader.Read())", span="373-373"];
m16_206 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="374-374"];
m16_207 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(''Double'', reader.Value)", span="375-375"];
m16_208 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.IsTrue(reader.Read())", span="377-377"];
m16_209 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="378-378"];
m16_210 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(3.14d, reader.Value)", span="379-379"];
m16_211 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.IsTrue(reader.Read())", span="381-381"];
m16_212 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="382-382"];
m16_213 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(''Decimal'', reader.Value)", span="383-383"];
m16_214 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.IsTrue(reader.Read())", span="385-385"];
m16_215 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="386-386"];
m16_216 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(19.95d, reader.Value)", span="387-387"];
m16_217 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.IsTrue(reader.Read())", span="389-389"];
m16_218 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="390-390"];
m16_219 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(''Guid'', reader.Value)", span="391-391"];
m16_220 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.IsTrue(reader.Read())", span="393-393"];
m16_221 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="394-394"];
m16_222 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(''d66eab59-3715-4b35-9e06-fa61c1216eaa'', reader.Value)", span="395-395"];
m16_223 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.IsTrue(reader.Read())", span="397-397"];
m16_224 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="398-398"];
m16_225 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(''Uri'', reader.Value)", span="399-399"];
m16_226 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.IsTrue(reader.Read())", span="401-401"];
m16_227 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="402-402"];
m16_228 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(''http://james.newtonking.com'', reader.Value)", span="403-403"];
m16_229 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.IsTrue(reader.Read())", span="405-405"];
m16_230 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="406-406"];
m16_231 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(''Array'', reader.Value)", span="407-407"];
m16_232 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.IsTrue(reader.Read())", span="409-409"];
m16_233 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="410-410"];
m16_234 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(1, reader.ReadAsInt32())", span="412-412"];
m16_235 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="413-413"];
m16_236 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(1, reader.Value)", span="414-414"];
m16_237 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.IsTrue(reader.Read())", span="416-416"];
m16_238 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(JsonToken.Bytes, reader.TokenType)", span="417-417"];
m16_239 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(Encoding.UTF8.GetBytes(''Hello world!''), reader.Value)", span="418-418"];
m16_240 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.IsTrue(reader.Read())", span="420-420"];
m16_241 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="421-421"];
m16_242 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(true, reader.Value)", span="422-422"];
m16_243 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.IsTrue(reader.Read())", span="424-424"];
m16_244 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="425-425"];
m16_245 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.IsTrue(reader.Read())", span="427-427"];
m16_246 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="428-428"];
m16_247 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(''Object'', reader.Value)", span="429-429"];
m16_248 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.IsTrue(reader.Read())", span="431-431"];
m16_249 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="432-432"];
m16_250 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.IsTrue(reader.Read())", span="434-434"];
m16_251 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="435-435"];
m16_252 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(''String'', reader.Value)", span="436-436"];
m16_253 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(''This is a string!'', reader.ReadAsString())", span="438-438"];
m16_254 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="439-439"];
m16_255 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(''This is a string!'', reader.Value)", span="440-440"];
m16_256 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.IsTrue(reader.Read())", span="442-442"];
m16_257 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="443-443"];
m16_258 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(''Null'', reader.Value)", span="444-444"];
m16_259 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.IsTrue(reader.Read())", span="446-446"];
m16_260 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="447-447"];
m16_261 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.IsTrue(reader.Read())", span="449-449"];
m16_262 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="450-450"];
m16_263 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.IsTrue(reader.Read())", span="452-452"];
m16_264 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="453-453"];
m16_265 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(''Constructor'', reader.Value)", span="454-454"];
m16_266 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.IsTrue(reader.Read())", span="456-456"];
m16_267 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="457-457"];
m16_268 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="458-458"];
m16_269 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.IsTrue(reader.Read())", span="460-460"];
m16_270 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="461-461"];
m16_271 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(2000, reader.Value)", span="462-462"];
m16_272 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.IsTrue(reader.Read())", span="464-464"];
m16_273 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="465-465"];
m16_274 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(12, reader.Value)", span="466-466"];
m16_275 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.IsTrue(reader.Read())", span="468-468"];
m16_276 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="469-469"];
m16_277 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(30, reader.Value)", span="470-470"];
m16_278 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.IsTrue(reader.Read())", span="472-472"];
m16_279 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="473-473"];
m16_280 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.IsTrue(reader.Read())", span="475-475"];
m16_281 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="476-476"];
m16_282 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Assert.IsFalse(reader.Read())", span="478-478"];
m16_283 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", file="DiagnosticsTraceWriter.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader.Example()", span="249-249"];
m16_93 [cluster="Unk.FromBase64String", file="DiagnosticsTraceWriter.cs", label="Entry Unk.FromBase64String", span=""];
m16_80 [cluster="Unk.GetAttribute", file="DiagnosticsTraceWriter.cs", label="Entry Unk.GetAttribute", span=""];
m16_5 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.PeekState()", file="DiagnosticsTraceWriter.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.PeekState()", span="60-60"];
m16_6 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.PeekState()", file="DiagnosticsTraceWriter.cs", label="JTokenType current = (_stateStack.Count > 0) ? _stateStack.Peek() : JTokenType.None", span="62-62"];
m16_7 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.PeekState()", file="DiagnosticsTraceWriter.cs", label="return current;", span="63-63"];
m16_8 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.PeekState()", file="DiagnosticsTraceWriter.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.PeekState()", span="60-60"];
m16_291 [cluster="System.Text.Encoding.GetBytes(string)", file="DiagnosticsTraceWriter.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m16_0 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.XmlJsonReader(XmlReader)", file="DiagnosticsTraceWriter.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.XmlJsonReader(XmlReader)", span="54-54"];
m16_1 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.XmlJsonReader(XmlReader)", file="DiagnosticsTraceWriter.cs", label="_reader = reader", span="56-56"];
m16_2 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.XmlJsonReader(XmlReader)", file="DiagnosticsTraceWriter.cs", label="_stateStack = new Stack<JTokenType>()", span="57-57"];
m16_3 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.XmlJsonReader(XmlReader)", file="DiagnosticsTraceWriter.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader.XmlJsonReader(XmlReader)", span="54-54"];
m16_81 [cluster="System.Exception.Exception(string)", file="DiagnosticsTraceWriter.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m16_90 [cluster="Unk.ToDouble", file="DiagnosticsTraceWriter.cs", label="Entry Unk.ToDouble", span=""];
m16_293 [file="DiagnosticsTraceWriter.cs", label="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader", span=""];
m17_20 [cluster="System.Enum.ToString()", file="DictionaryWrapper.cs", label="Entry System.Enum.ToString()", span="0-0"];
m17_16 [cluster="Unk.Join", file="DictionaryWrapper.cs", label="Entry Unk.Join", span=""];
m17_14 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", file="DictionaryWrapper.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", span="787-787"];
m17_15 [cluster="Unk.Select", file="DictionaryWrapper.cs", label="Entry Unk.Select", span=""];
m17_10 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="DictionaryWrapper.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="512-512"];
m17_17 [cluster="lambda expression", file="DictionaryWrapper.cs", label="Entry lambda expression", span="33-33"];
m17_18 [cluster="lambda expression", file="DictionaryWrapper.cs", label="c.ToString()", span="33-33"];
m17_19 [cluster="lambda expression", file="DictionaryWrapper.cs", label="Exit lambda expression", span="33-33"];
m17_0 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeWithJsonConverters.Example()", file="DictionaryWrapper.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeWithJsonConverters.Example()", span="10-10"];
m17_1 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeWithJsonConverters.Example()", file="DictionaryWrapper.cs", label="List<StringComparison> stringComparisons = new List<StringComparison>\r\n            {\r\n                StringComparison.CurrentCulture,\r\n                StringComparison.InvariantCulture\r\n            }", span="13-17"];
m17_2 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeWithJsonConverters.Example()", file="DictionaryWrapper.cs", label="string jsonWithoutConverter = JsonConvert.SerializeObject(stringComparisons)", span="19-19"];
m17_4 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeWithJsonConverters.Example()", file="DictionaryWrapper.cs", label="string jsonWithConverter = JsonConvert.SerializeObject(stringComparisons, new StringEnumConverter())", span="24-24"];
m17_3 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeWithJsonConverters.Example()", file="DictionaryWrapper.cs", label="Console.WriteLine(jsonWithoutConverter)", span="21-21"];
m17_5 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeWithJsonConverters.Example()", file="DictionaryWrapper.cs", label="Console.WriteLine(jsonWithConverter)", span="26-26"];
m17_7 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeWithJsonConverters.Example()", file="DictionaryWrapper.cs", label="Console.WriteLine(string.Join('', '', newStringComparsions.Select(c => c.ToString())))", span="33-33"];
m17_8 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeWithJsonConverters.Example()", file="DictionaryWrapper.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeWithJsonConverters.Example()", span="10-10"];
m17_13 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", file="DictionaryWrapper.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", span="536-536"];
m17_9 [cluster="System.Collections.Generic.List<T>.List()", file="DictionaryWrapper.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m17_11 [cluster="System.Console.WriteLine(string)", file="DictionaryWrapper.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m17_12 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter()", file="DictionaryWrapper.cs", label="Entry Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter()", span="59-59"];
m18_13 [cluster="Unk.AreEqual", file="DiscriminatedUnionConverter.cs", label="Entry Unk.AreEqual", span=""];
m18_11 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="DiscriminatedUnionConverter.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="525-525"];
m18_9 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonPropertyItemLevelSetting.Business.Business()", file="DiscriminatedUnionConverter.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonPropertyItemLevelSetting.Business.Business()", span="42-42"];
m18_0 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonPropertyItemLevelSetting.Example()", file="DiscriminatedUnionConverter.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonPropertyItemLevelSetting.Example()", span="60-60"];
m18_1 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonPropertyItemLevelSetting.Example()", file="DiscriminatedUnionConverter.cs", label="Employee manager = new Employee\r\n            {\r\n                Name = ''George-Michael''\r\n            }", span="63-66"];
m18_2 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonPropertyItemLevelSetting.Example()", file="DiscriminatedUnionConverter.cs", label="Employee worker = new Employee\r\n            {\r\n                Name = ''Maeby'',\r\n                Manager = manager\r\n            }", span="67-71"];
m18_3 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonPropertyItemLevelSetting.Example()", file="DiscriminatedUnionConverter.cs", label="Business business = new Business\r\n            {\r\n                Name = ''Acme Ltd.'',\r\n                Employees = new List<Employee>\r\n                {\r\n                    manager,\r\n                    worker\r\n                }\r\n            }", span="73-81"];
m18_4 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonPropertyItemLevelSetting.Example()", file="DiscriminatedUnionConverter.cs", label="string json = JsonConvert.SerializeObject(business, Formatting.Indented)", span="83-83"];
m18_5 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonPropertyItemLevelSetting.Example()", file="DiscriminatedUnionConverter.cs", label="Console.WriteLine(json)", span="85-85"];
m18_6 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonPropertyItemLevelSetting.Example()", file="DiscriminatedUnionConverter.cs", label="Assert.AreEqual(@''{\r\n  ''''Name'''': ''''Acme Ltd.'''',\r\n  ''''Employees'''': [\r\n    {\r\n      ''''$id'''': ''''1'''',\r\n      ''''Name'''': ''''George-Michael'''',\r\n      ''''Manager'''': null\r\n    },\r\n    {\r\n      ''''$id'''': ''''2'''',\r\n      ''''Name'''': ''''Maeby'''',\r\n      ''''Manager'''': {\r\n        ''''$ref'''': ''''1''''\r\n      }\r\n    }\r\n  ]\r\n}'', json)", span="105-121"];
m18_7 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonPropertyItemLevelSetting.Example()", file="DiscriminatedUnionConverter.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonPropertyItemLevelSetting.Example()", span="60-60"];
m18_10 [cluster="System.Collections.Generic.List<T>.List()", file="DiscriminatedUnionConverter.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m18_12 [cluster="System.Console.WriteLine(string)", file="DiscriminatedUnionConverter.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m18_8 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonPropertyItemLevelSetting.Employee.Employee()", file="DiscriminatedUnionConverter.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonPropertyItemLevelSetting.Employee.Employee()", span="50-50"];
m19_59 [cluster="decimal.CompareTo(decimal)", file="DynamicProxy.cs", label="Entry decimal.CompareTo(decimal)", span="0-0"];
m19_139 [cluster="System.Convert.ToDecimal(object, System.IFormatProvider)", file="DynamicProxy.cs", label="Entry System.Convert.ToDecimal(object, System.IFormatProvider)", span="0-0"];
m19_472 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", span="987-987"];
m19_473 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="DynamicProxy.cs", label="JValue value = arg as JValue", span="989-989"];
m19_474 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="DynamicProxy.cs", label="object compareValue = value != null ? value.Value : arg", span="990-990"];
m19_475 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="DynamicProxy.cs", label="binder.Operation", span="992-992"];
m19_477 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="DynamicProxy.cs", label="result = (Compare(instance.Type, instance.Value, compareValue) == 0)", span="995-995"];
m19_480 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="DynamicProxy.cs", label="result = (Compare(instance.Type, instance.Value, compareValue) != 0)", span="998-998"];
m19_483 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="DynamicProxy.cs", label="result = (Compare(instance.Type, instance.Value, compareValue) > 0)", span="1001-1001"];
m19_486 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="DynamicProxy.cs", label="result = (Compare(instance.Type, instance.Value, compareValue) >= 0)", span="1004-1004"];
m19_489 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="DynamicProxy.cs", label="result = (Compare(instance.Type, instance.Value, compareValue) < 0)", span="1007-1007"];
m19_492 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="DynamicProxy.cs", label="result = (Compare(instance.Type, instance.Value, compareValue) <= 0)", span="1010-1010"];
m19_502 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="DynamicProxy.cs", label="Operation(binder.Operation, instance.Value, compareValue, out result)", span="1020-1020"];
m19_476 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="DynamicProxy.cs", label="ExpressionType.Equal", span="994-994"];
m19_479 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="DynamicProxy.cs", label="ExpressionType.NotEqual", span="997-997"];
m19_482 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="DynamicProxy.cs", label="ExpressionType.GreaterThan", span="1000-1000"];
m19_485 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="DynamicProxy.cs", label="ExpressionType.GreaterThanOrEqual", span="1003-1003"];
m19_488 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="DynamicProxy.cs", label="ExpressionType.LessThan", span="1006-1006"];
m19_491 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="DynamicProxy.cs", label="ExpressionType.LessThanOrEqual", span="1009-1009"];
m19_494 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="DynamicProxy.cs", label="ExpressionType.Add", span="1012-1012"];
m19_478 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="DynamicProxy.cs", label="return true;", span="996-996"];
m19_481 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="DynamicProxy.cs", label="return true;", span="999-999"];
m19_484 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="DynamicProxy.cs", label="return true;", span="1002-1002"];
m19_487 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="DynamicProxy.cs", label="return true;", span="1005-1005"];
m19_490 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="DynamicProxy.cs", label="return true;", span="1008-1008"];
m19_493 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="DynamicProxy.cs", label="return true;", span="1011-1011"];
m19_495 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="DynamicProxy.cs", label="ExpressionType.AddAssign", span="1013-1013"];
m19_496 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="DynamicProxy.cs", label="ExpressionType.Subtract", span="1014-1014"];
m19_497 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="DynamicProxy.cs", label="ExpressionType.SubtractAssign", span="1015-1015"];
m19_498 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="DynamicProxy.cs", label="ExpressionType.Multiply", span="1016-1016"];
m19_499 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="DynamicProxy.cs", label="ExpressionType.MultiplyAssign", span="1017-1017"];
m19_500 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="DynamicProxy.cs", label="ExpressionType.Divide", span="1018-1018"];
m19_501 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="DynamicProxy.cs", label="ExpressionType.DivideAssign", span="1019-1019"];
m19_503 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="DynamicProxy.cs", label="result = new JValue(result)", span="1022-1022"];
m19_505 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="DynamicProxy.cs", label="result = null", span="1028-1028"];
m19_504 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="DynamicProxy.cs", label="return true;", span="1023-1023"];
m19_506 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="DynamicProxy.cs", label="return false;", span="1029-1029"];
m19_507 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="DynamicProxy.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", span="987-987"];
m19_550 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt32(System.IFormatProvider)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt32(System.IFormatProvider)", span="1128-1128"];
m19_551 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt32(System.IFormatProvider)", file="DynamicProxy.cs", label="return (uint)this;", span="1130-1130"];
m19_552 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt32(System.IFormatProvider)", file="DynamicProxy.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt32(System.IFormatProvider)", span="1128-1128"];
m19_532 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToChar(System.IFormatProvider)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToChar(System.IFormatProvider)", span="1098-1098"];
m19_533 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToChar(System.IFormatProvider)", file="DynamicProxy.cs", label="return (char)this;", span="1100-1100"];
m19_534 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToChar(System.IFormatProvider)", file="DynamicProxy.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToChar(System.IFormatProvider)", span="1098-1098"];
m19_275 [cluster="Newtonsoft.Json.Linq.JValue.CreateString(string)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.Linq.JValue.CreateString(string)", span="580-580"];
m19_276 [cluster="Newtonsoft.Json.Linq.JValue.CreateString(string)", file="DynamicProxy.cs", label="return new JValue(value, JTokenType.String);", span="582-582"];
m19_277 [cluster="Newtonsoft.Json.Linq.JValue.CreateString(string)", file="DynamicProxy.cs", label="Exit Newtonsoft.Json.Linq.JValue.CreateString(string)", span="580-580"];
m19_412 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.Uri)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.Uri)", span="1378-1378"];
m19_154 [cluster="System.Guid.CompareTo(System.Guid)", file="DynamicProxy.cs", label="Entry System.Guid.CompareTo(System.Guid)", span="0-0"];
m19_395 [cluster="Newtonsoft.Json.JsonWriter.WriteRawValue(string)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteRawValue(string)", span="904-904"];
m19_418 [cluster="int.GetHashCode()", file="DynamicProxy.cs", label="Entry int.GetHashCode()", span="0-0"];
m19_402 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(decimal)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(decimal)", span="1037-1037"];
m19_391 [cluster="Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type)", span="1159-1159"];
m19_556 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt64(System.IFormatProvider)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt64(System.IFormatProvider)", span="1138-1138"];
m19_557 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt64(System.IFormatProvider)", file="DynamicProxy.cs", label="return (ulong)this;", span="1140-1140"];
m19_558 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt64(System.IFormatProvider)", file="DynamicProxy.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt64(System.IFormatProvider)", span="1138-1138"];
m19_404 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(float)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(float)", span="963-963"];
m19_520 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.GetTypeCode()", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.GetTypeCode()", span="1076-1076"];
m19_521 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.GetTypeCode()", file="DynamicProxy.cs", label="_value == null", span="1078-1078"];
m19_522 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.GetTypeCode()", file="DynamicProxy.cs", label="return TypeCode.Empty;", span="1080-1080"];
m19_523 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.GetTypeCode()", file="DynamicProxy.cs", label="IConvertible convertable = _value as IConvertible", span="1083-1083"];
m19_524 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.GetTypeCode()", file="DynamicProxy.cs", label="convertable == null", span="1085-1085"];
m19_526 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.GetTypeCode()", file="DynamicProxy.cs", label="return convertable.GetTypeCode();", span="1090-1090"];
m19_525 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.GetTypeCode()", file="DynamicProxy.cs", label="return TypeCode.Object;", span="1087-1087"];
m19_527 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.GetTypeCode()", file="DynamicProxy.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.GetTypeCode()", span="1076-1076"];
m19_4 [cluster="Newtonsoft.Json.Linq.JValue.JValue(Newtonsoft.Json.Linq.JValue)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(Newtonsoft.Json.Linq.JValue)", span="62-62"];
m19_5 [cluster="Newtonsoft.Json.Linq.JValue.JValue(Newtonsoft.Json.Linq.JValue)", file="DynamicProxy.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValue(Newtonsoft.Json.Linq.JValue)", span="62-62"];
m19_268 [cluster="object.ToString()", file="DynamicProxy.cs", label="Entry object.ToString()", span="0-0"];
m19_140 [cluster="Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", span="398-398"];
m19_161 [cluster="Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", file="DynamicProxy.cs", label="double d1 = Convert.ToDouble(objA, CultureInfo.InvariantCulture)", span="400-400"];
m19_162 [cluster="Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", file="DynamicProxy.cs", label="double d2 = Convert.ToDouble(objB, CultureInfo.InvariantCulture)", span="401-401"];
m19_163 [cluster="Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", file="DynamicProxy.cs", label="MathUtils.ApproxEquals(d1, d2)", span="404-404"];
m19_165 [cluster="Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", file="DynamicProxy.cs", label="return d1.CompareTo(d2);", span="409-409"];
m19_164 [cluster="Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", file="DynamicProxy.cs", label="return 0;", span="406-406"];
m19_166 [cluster="Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", file="DynamicProxy.cs", label="Exit Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", span="398-398"];
m19_18 [cluster="Newtonsoft.Json.Linq.JValue.JValue(System.DateTime)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.DateTime)", span="126-126"];
m19_19 [cluster="Newtonsoft.Json.Linq.JValue.JValue(System.DateTime)", file="DynamicProxy.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValue(System.DateTime)", span="126-126"];
m19_26 [cluster="Newtonsoft.Json.Linq.JValue.JValue(System.Guid)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.Guid)", span="164-164"];
m19_27 [cluster="Newtonsoft.Json.Linq.JValue.JValue(System.Guid)", file="DynamicProxy.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValue(System.Guid)", span="164-164"];
m19_30 [cluster="Newtonsoft.Json.Linq.JValue.JValue(System.TimeSpan)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.TimeSpan)", span="182-182"];
m19_31 [cluster="Newtonsoft.Json.Linq.JValue.JValue(System.TimeSpan)", file="DynamicProxy.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValue(System.TimeSpan)", span="182-182"];
m19_142 [cluster="long.CompareTo(long)", file="DynamicProxy.cs", label="Entry long.CompareTo(long)", span="0-0"];
m19_562 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDouble(System.IFormatProvider)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDouble(System.IFormatProvider)", span="1148-1148"];
m19_563 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDouble(System.IFormatProvider)", file="DynamicProxy.cs", label="return (double)this;", span="1150-1150"];
m19_564 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDouble(System.IFormatProvider)", file="DynamicProxy.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDouble(System.IFormatProvider)", span="1148-1148"];
m19_421 [cluster="Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)", span="848-848"];
m19_422 [cluster="Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)", file="DynamicProxy.cs", label="other == null", span="850-850"];
m19_424 [cluster="Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)", file="DynamicProxy.cs", label="return ValuesEquals(this, other);", span="855-855"];
m19_423 [cluster="Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)", file="DynamicProxy.cs", label="return false;", span="852-852"];
m19_425 [cluster="Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)", file="DynamicProxy.cs", label="Exit Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)", span="848-848"];
m19_147 [cluster="System.Convert.ToDateTime(object, System.IFormatProvider)", file="DynamicProxy.cs", label="Entry System.Convert.ToDateTime(object, System.IFormatProvider)", span="0-0"];
m19_559 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSingle(System.IFormatProvider)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSingle(System.IFormatProvider)", span="1143-1143"];
m19_560 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSingle(System.IFormatProvider)", file="DynamicProxy.cs", label="return (float)this;", span="1145-1145"];
m19_561 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSingle(System.IFormatProvider)", file="DynamicProxy.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSingle(System.IFormatProvider)", span="1143-1143"];
m19_61 [cluster="System.Math.Truncate(double)", file="DynamicProxy.cs", label="Entry System.Math.Truncate(double)", span="0-0"];
m19_20 [cluster="Newtonsoft.Json.Linq.JValue.JValue(System.DateTimeOffset)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.DateTimeOffset)", span="136-136"];
m19_21 [cluster="Newtonsoft.Json.Linq.JValue.JValue(System.DateTimeOffset)", file="DynamicProxy.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValue(System.DateTimeOffset)", span="136-136"];
m19_399 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(long)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(long)", span="944-944"];
m19_400 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(ulong)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(ulong)", span="954-954"];
m19_547 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt32(System.IFormatProvider)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt32(System.IFormatProvider)", span="1123-1123"];
m19_548 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt32(System.IFormatProvider)", file="DynamicProxy.cs", label="return (int)this;", span="1125-1125"];
m19_549 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt32(System.IFormatProvider)", file="DynamicProxy.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt32(System.IFormatProvider)", span="1123-1123"];
m19_284 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", span="603-603"];
m19_285 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="DynamicProxy.cs", label="value == null", span="605-605"];
m19_287 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="DynamicProxy.cs", label="value == DBNull.Value", span="610-610"];
m19_289 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="DynamicProxy.cs", label="value is string", span="615-615"];
m19_290 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="DynamicProxy.cs", label="return GetStringValueType(current);", span="617-617"];
m19_291 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="DynamicProxy.cs", label="value is long || value is int || value is short || value is sbyte\r\n                     || value is ulong || value is uint || value is ushort || value is byte", span="619-620"];
m19_293 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="DynamicProxy.cs", label="value is Enum", span="624-624"];
m19_295 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="DynamicProxy.cs", label="value is BigInteger", span="629-629"];
m19_297 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="DynamicProxy.cs", label="value is double || value is float || value is decimal", span="634-634"];
m19_299 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="DynamicProxy.cs", label="value is DateTime", span="638-638"];
m19_301 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="DynamicProxy.cs", label="value is DateTimeOffset", span="643-643"];
m19_303 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="DynamicProxy.cs", label="value is byte[]", span="648-648"];
m19_305 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="DynamicProxy.cs", label="value is bool", span="652-652"];
m19_307 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="DynamicProxy.cs", label="value is Guid", span="656-656"];
m19_309 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="DynamicProxy.cs", label="value is Uri", span="660-660"];
m19_311 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="DynamicProxy.cs", label="value is TimeSpan", span="664-664"];
m19_313 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="DynamicProxy.cs", label="throw new ArgumentException(''Could not determine JSON object type for type {0}.''.FormatWith(CultureInfo.InvariantCulture, value.GetType()));", span="669-669"];
m19_286 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="DynamicProxy.cs", label="return JTokenType.Null;", span="607-607"];
m19_288 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="DynamicProxy.cs", label="return JTokenType.Null;", span="612-612"];
m19_292 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="DynamicProxy.cs", label="return JTokenType.Integer;", span="622-622"];
m19_294 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="DynamicProxy.cs", label="return JTokenType.Integer;", span="626-626"];
m19_296 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="DynamicProxy.cs", label="return JTokenType.Integer;", span="631-631"];
m19_298 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="DynamicProxy.cs", label="return JTokenType.Float;", span="636-636"];
m19_300 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="DynamicProxy.cs", label="return JTokenType.Date;", span="640-640"];
m19_302 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="DynamicProxy.cs", label="return JTokenType.Date;", span="645-645"];
m19_304 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="DynamicProxy.cs", label="return JTokenType.Bytes;", span="650-650"];
m19_306 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="DynamicProxy.cs", label="return JTokenType.Boolean;", span="654-654"];
m19_308 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="DynamicProxy.cs", label="return JTokenType.Guid;", span="658-658"];
m19_310 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="DynamicProxy.cs", label="return JTokenType.Uri;", span="662-662"];
m19_312 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="DynamicProxy.cs", label="return JTokenType.TimeSpan;", span="666-666"];
m19_314 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="DynamicProxy.cs", label="Exit Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", span="603-603"];
m19_64 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", span="249-249"];
m19_65 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="objA == objB", span="251-251"];
m19_67 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="objB == null", span="255-255"];
m19_69 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="objA == null", span="259-259"];
m19_71 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label=valueType, span="264-264"];
m19_73 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="objA is BigInteger", span="268-268"];
m19_74 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="return CompareBigInteger((BigInteger)objA, objB);", span="270-270"];
m19_75 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="objB is BigInteger", span="272-272"];
m19_76 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="return -CompareBigInteger((BigInteger)objB, objA);", span="274-274"];
m19_77 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="objA is ulong || objB is ulong || objA is decimal || objB is decimal", span="277-277"];
m19_78 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="return Convert.ToDecimal(objA, CultureInfo.InvariantCulture).CompareTo(Convert.ToDecimal(objB, CultureInfo.InvariantCulture));", span="279-279"];
m19_79 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="objA is float || objB is float || objA is double || objB is double", span="281-281"];
m19_80 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="return CompareFloat(objA, objB);", span="283-283"];
m19_81 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="return Convert.ToInt64(objA, CultureInfo.InvariantCulture).CompareTo(Convert.ToInt64(objB, CultureInfo.InvariantCulture));", span="287-287"];
m19_83 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="objA is BigInteger", span="291-291"];
m19_84 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="return CompareBigInteger((BigInteger)objA, objB);", span="293-293"];
m19_85 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="objB is BigInteger", span="295-295"];
m19_86 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="return -CompareBigInteger((BigInteger)objB, objA);", span="297-297"];
m19_87 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="return CompareFloat(objA, objB);", span="300-300"];
m19_91 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="string s1 = Convert.ToString(objA, CultureInfo.InvariantCulture)", span="304-304"];
m19_92 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="string s2 = Convert.ToString(objB, CultureInfo.InvariantCulture)", span="305-305"];
m19_95 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="bool b1 = Convert.ToBoolean(objA, CultureInfo.InvariantCulture)", span="309-309"];
m19_96 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="bool b2 = Convert.ToBoolean(objB, CultureInfo.InvariantCulture)", span="310-310"];
m19_99 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="objA is DateTime", span="315-315"];
m19_100 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="DateTime date1 = (DateTime)objA", span="318-318"];
m19_102 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="objB is DateTimeOffset", span="322-322"];
m19_103 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="date2 = ((DateTimeOffset)objB).DateTime", span="324-324"];
m19_104 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="date2 = Convert.ToDateTime(objB, CultureInfo.InvariantCulture)", span="329-329"];
m19_106 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="DateTimeOffset date1 = (DateTimeOffset)objA", span="337-337"];
m19_108 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="objB is DateTimeOffset", span="340-340"];
m19_109 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="date2 = (DateTimeOffset)objB", span="342-342"];
m19_110 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="date2 = new DateTimeOffset(Convert.ToDateTime(objB, CultureInfo.InvariantCulture))", span="346-346"];
m19_113 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="byte[] bytes2 = objB as byte[]", span="353-353"];
m19_116 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="byte[] bytes1 = objA as byte[]", span="359-359"];
m19_120 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="!(objB is Guid)", span="364-364"];
m19_122 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="Guid guid1 = (Guid)objA", span="369-369"];
m19_123 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="Guid guid2 = (Guid)objB", span="370-370"];
m19_126 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="Uri uri2 = objB as Uri", span="374-374"];
m19_129 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="Uri uri1 = (Uri)objA", span="380-380"];
m19_132 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="!(objB is TimeSpan)", span="384-384"];
m19_134 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="TimeSpan ts1 = (TimeSpan)objA", span="389-389"];
m19_135 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="TimeSpan ts2 = (TimeSpan)objB", span="390-390"];
m19_137 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="throw MiscellaneousUtils.CreateArgumentOutOfRangeException(nameof(valueType), valueType, ''Unexpected value type: {0}''.FormatWith(CultureInfo.InvariantCulture, valueType));", span="394-394"];
m19_66 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="return 0;", span="253-253"];
m19_68 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="return 1;", span="257-257"];
m19_70 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="return -1;", span="261-261"];
m19_72 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="JTokenType.Integer", span="266-266"];
m19_82 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="JTokenType.Float", span="289-289"];
m19_88 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="JTokenType.Comment", span="301-301"];
m19_94 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="JTokenType.Boolean", span="308-308"];
m19_98 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="JTokenType.Date", span="313-313"];
m19_112 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="JTokenType.Bytes", span="352-352"];
m19_119 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="JTokenType.Guid", span="363-363"];
m19_125 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="JTokenType.Uri", span="373-373"];
m19_131 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="JTokenType.TimeSpan", span="383-383"];
m19_89 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="JTokenType.String", span="302-302"];
m19_90 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="JTokenType.Raw", span="303-303"];
m19_93 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="return string.CompareOrdinal(s1, s2);", span="307-307"];
m19_97 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="return b1.CompareTo(b2);", span="312-312"];
m19_101 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="DateTime date2", span="319-319"];
m19_105 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="return date1.CompareTo(date2);", span="332-332"];
m19_107 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="DateTimeOffset date2", span="338-338"];
m19_111 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="return date1.CompareTo(date2);", span="349-349"];
m19_114 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="bytes2 == null", span="354-354"];
m19_118 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="return MiscellaneousUtils.ByteArrayCompare(bytes1, bytes2);", span="362-362"];
m19_115 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="throw new ArgumentException(''Object must be of type byte[].'');", span="356-356"];
m19_117 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="Debug.Assert(bytes1 != null)", span="360-360"];
m19_121 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="throw new ArgumentException(''Object must be of type Guid.'');", span="366-366"];
m19_124 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="return guid1.CompareTo(guid2);", span="372-372"];
m19_127 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="uri2 == null", span="375-375"];
m19_130 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="return Comparer<string>.Default.Compare(uri1.ToString(), uri2.ToString());", span="382-382"];
m19_128 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="throw new ArgumentException(''Object must be of type Uri.'');", span="377-377"];
m19_133 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="throw new ArgumentException(''Object must be of type TimeSpan.'');", span="386-386"];
m19_136 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="return ts1.CompareTo(ts2);", span="392-392"];
m19_138 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="DynamicProxy.cs", label="Exit Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", span="249-249"];
m19_453 [cluster="System.IFormattable.ToString(string, System.IFormatProvider)", file="DynamicProxy.cs", label="Entry System.IFormattable.ToString(string, System.IFormatProvider)", span="0-0"];
m19_141 [cluster="System.Convert.ToInt64(object, System.IFormatProvider)", file="DynamicProxy.cs", label="Entry System.Convert.ToInt64(object, System.IFormatProvider)", span="0-0"];
m19_442 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", span="934-934"];
m19_446 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", file="DynamicProxy.cs", label="_value == null", span="936-936"];
m19_450 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", file="DynamicProxy.cs", label="return formattable.ToString(format, formatProvider);", span="944-944"];
m19_447 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", file="DynamicProxy.cs", label="return string.Empty;", span="938-938"];
m19_448 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", file="DynamicProxy.cs", label="IFormattable formattable = _value as IFormattable", span="941-941"];
m19_449 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", file="DynamicProxy.cs", label="formattable != null", span="942-942"];
m19_451 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", file="DynamicProxy.cs", label="return _value.ToString();", span="948-948"];
m19_452 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", file="DynamicProxy.cs", label="Exit Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", span="934-934"];
m19_565 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDecimal(System.IFormatProvider)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDecimal(System.IFormatProvider)", span="1153-1153"];
m19_566 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDecimal(System.IFormatProvider)", file="DynamicProxy.cs", label="return (decimal)this;", span="1155-1155"];
m19_567 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDecimal(System.IFormatProvider)", file="DynamicProxy.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDecimal(System.IFormatProvider)", span="1153-1153"];
m19_12 [cluster="Newtonsoft.Json.Linq.JValue.JValue(ulong)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(ulong)", span="99-99"];
m19_13 [cluster="Newtonsoft.Json.Linq.JValue.JValue(ulong)", file="DynamicProxy.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValue(ulong)", span="99-99"];
m19_315 [cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", span="672-672"];
m19_317 [cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="DynamicProxy.cs", label="current == null", span="674-674"];
m19_319 [cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="DynamicProxy.cs", label="current.GetValueOrDefault()", span="679-679"];
m19_323 [cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="DynamicProxy.cs", label="return current.GetValueOrDefault();", span="684-684"];
m19_318 [cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="DynamicProxy.cs", label="return JTokenType.String;", span="676-676"];
m19_320 [cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="DynamicProxy.cs", label="JTokenType.Comment", span="681-681"];
m19_324 [cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="DynamicProxy.cs", label="return JTokenType.String;", span="686-686"];
m19_321 [cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="DynamicProxy.cs", label="JTokenType.String", span="682-682"];
m19_322 [cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="DynamicProxy.cs", label="JTokenType.Raw", span="683-683"];
m19_325 [cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="DynamicProxy.cs", label="Exit Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", span="672-672"];
m19_407 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTimeOffset)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.DateTimeOffset)", span="1056-1056"];
m19_157 [cluster="System.TimeSpan.CompareTo(System.TimeSpan)", file="DynamicProxy.cs", label="Entry System.TimeSpan.CompareTo(System.TimeSpan)", span="0-0"];
m19_149 [cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime)", file="DynamicProxy.cs", label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime)", span="0-0"];
m19_60 [cluster="System.Convert.ToDouble(object, System.IFormatProvider)", file="DynamicProxy.cs", label="Entry System.Convert.ToDouble(object, System.IFormatProvider)", span="0-0"];
m19_429 [cluster="Newtonsoft.Json.Linq.JValue.GetHashCode()", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.Linq.JValue.GetHashCode()", span="876-876"];
m19_430 [cluster="Newtonsoft.Json.Linq.JValue.GetHashCode()", file="DynamicProxy.cs", label="_value == null", span="878-878"];
m19_431 [cluster="Newtonsoft.Json.Linq.JValue.GetHashCode()", file="DynamicProxy.cs", label="return 0;", span="880-880"];
m19_432 [cluster="Newtonsoft.Json.Linq.JValue.GetHashCode()", file="DynamicProxy.cs", label="return _value.GetHashCode();", span="883-883"];
m19_433 [cluster="Newtonsoft.Json.Linq.JValue.GetHashCode()", file="DynamicProxy.cs", label="Exit Newtonsoft.Json.Linq.JValue.GetHashCode()", span="876-876"];
m19_153 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.ByteArrayCompare(byte[], byte[])", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.ByteArrayCompare(byte[], byte[])", span="88-88"];
m19_148 [cluster="System.DateTime.CompareTo(System.DateTime)", file="DynamicProxy.cs", label="Entry System.DateTime.CompareTo(System.DateTime)", span="0-0"];
m19_158 [cluster="Unk.nameof", file="DynamicProxy.cs", label="Entry Unk.nameof", span=""];
m19_42 [cluster="Newtonsoft.Json.Linq.JValue.ValuesEquals(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.Linq.JValue.ValuesEquals(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", span="836-836"];
m19_419 [cluster="Newtonsoft.Json.Linq.JValue.ValuesEquals(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="DynamicProxy.cs", label="return (v1 == v2 || (v1._valueType == v2._valueType && Compare(v1._valueType, v1._value, v2._value) == 0));", span="838-838"];
m19_420 [cluster="Newtonsoft.Json.Linq.JValue.ValuesEquals(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="DynamicProxy.cs", label="Exit Newtonsoft.Json.Linq.JValue.ValuesEquals(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", span="836-836"];
m19_454 [cluster="Newtonsoft.Json.Linq.JValue.GetMetaObject(System.Linq.Expressions.Expression)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.Linq.JValue.GetMetaObject(System.Linq.Expressions.Expression)", span="960-960"];
m19_455 [cluster="Newtonsoft.Json.Linq.JValue.GetMetaObject(System.Linq.Expressions.Expression)", file="DynamicProxy.cs", label="return new DynamicProxyMetaObject<JValue>(parameter, this, new JValueDynamicProxy());", span="962-962"];
m19_456 [cluster="Newtonsoft.Json.Linq.JValue.GetMetaObject(System.Linq.Expressions.Expression)", file="DynamicProxy.cs", label="Exit Newtonsoft.Json.Linq.JValue.GetMetaObject(System.Linq.Expressions.Expression)", span="960-960"];
m19_16 [cluster="Newtonsoft.Json.Linq.JValue.JValue(float)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(float)", span="117-117"];
m19_17 [cluster="Newtonsoft.Json.Linq.JValue.JValue(float)", file="DynamicProxy.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValue(float)", span="117-117"];
m19_145 [cluster="System.Convert.ToBoolean(object, System.IFormatProvider)", file="DynamicProxy.cs", label="Entry System.Convert.ToBoolean(object, System.IFormatProvider)", span="0-0"];
m19_155 [cluster="System.Uri.ToString()", file="DynamicProxy.cs", label="Entry System.Uri.ToString()", span="0-0"];
m19_568 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDateTime(System.IFormatProvider)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDateTime(System.IFormatProvider)", span="1158-1158"];
m19_569 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDateTime(System.IFormatProvider)", file="DynamicProxy.cs", label="return (DateTime)this;", span="1160-1160"];
m19_570 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDateTime(System.IFormatProvider)", file="DynamicProxy.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDateTime(System.IFormatProvider)", span="1158-1158"];
m19_146 [cluster="bool.CompareTo(bool)", file="DynamicProxy.cs", label="Entry bool.CompareTo(bool)", span="0-0"];
m19_396 [cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="878-878"];
m19_401 [cluster="Unk.WriteValue", file="DynamicProxy.cs", label="Entry Unk.WriteValue", span=""];
m19_457 [cluster="Newtonsoft.Json.Utilities.DynamicProxyMetaObject<T>.DynamicProxyMetaObject(System.Linq.Expressions.Expression, T, Newtonsoft.Json.Utilities.DynamicProxy<T>)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.Utilities.DynamicProxyMetaObject<T>.DynamicProxyMetaObject(System.Linq.Expressions.Expression, T, Newtonsoft.Json.Utilities.DynamicProxy<T>)", span="38-38"];
m19_56 [cluster="Unk.CompareTo", file="DynamicProxy.cs", label="Entry Unk.CompareTo", span=""];
m19_152 [cluster="System.Diagnostics.Debug.Assert(bool)", file="DynamicProxy.cs", label="Entry System.Diagnostics.Debug.Assert(bool)", span="0-0"];
m19_406 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(bool)", span="981-981"];
m19_6 [cluster="Newtonsoft.Json.Linq.JValue.JValue(long)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(long)", span="71-71"];
m19_7 [cluster="Newtonsoft.Json.Linq.JValue.JValue(long)", file="DynamicProxy.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValue(long)", span="71-71"];
m19_159 [cluster="string.FormatWith(System.IFormatProvider, object)", file="DynamicProxy.cs", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
m19_544 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt16(System.IFormatProvider)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt16(System.IFormatProvider)", span="1118-1118"];
m19_545 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt16(System.IFormatProvider)", file="DynamicProxy.cs", label="return (ushort)this;", span="1120-1120"];
m19_546 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt16(System.IFormatProvider)", file="DynamicProxy.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt16(System.IFormatProvider)", span="1118-1118"];
m19_529 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToBoolean(System.IFormatProvider)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToBoolean(System.IFormatProvider)", span="1093-1093"];
m19_530 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToBoolean(System.IFormatProvider)", file="DynamicProxy.cs", label="return (bool)this;", span="1095-1095"];
m19_531 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToBoolean(System.IFormatProvider)", file="DynamicProxy.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToBoolean(System.IFormatProvider)", span="1093-1093"];
m19_458 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.JValueDynamicProxy()", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.JValueDynamicProxy()", span="965-965"];
m19_32 [cluster="Newtonsoft.Json.Linq.JValue.JValue(object)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(object)", span="191-191"];
m19_33 [cluster="Newtonsoft.Json.Linq.JValue.JValue(object)", file="DynamicProxy.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValue(object)", span="191-191"];
m19_168 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", span="413-413"];
m19_169 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="objA is string || objB is string", span="415-415"];
m19_170 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="operation == ExpressionType.Add || operation == ExpressionType.AddAssign", span="417-417"];
m19_171 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="result = objA?.ToString() + objB?.ToString()", span="419-419"];
m19_173 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="objA is BigInteger || objB is BigInteger", span="425-425"];
m19_174 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="objA == null || objB == null", span="427-427"];
m19_177 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="BigInteger i1 = ConvertUtils.ToBigInteger(objA)", span="435-435"];
m19_178 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="BigInteger i2 = ConvertUtils.ToBigInteger(objB)", span="436-436"];
m19_179 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label=operation, span="438-438"];
m19_196 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="objA is ulong || objB is ulong || objA is decimal || objB is decimal", span="460-460"];
m19_197 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="objA == null || objB == null", span="462-462"];
m19_200 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="decimal d1 = Convert.ToDecimal(objA, CultureInfo.InvariantCulture)", span="468-468"];
m19_201 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="decimal d2 = Convert.ToDecimal(objB, CultureInfo.InvariantCulture)", span="469-469"];
m19_202 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label=operation, span="471-471"];
m19_219 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="objA is float || objB is float || objA is double || objB is double", span="491-491"];
m19_220 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="objA == null || objB == null", span="493-493"];
m19_223 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="double d1 = Convert.ToDouble(objA, CultureInfo.InvariantCulture)", span="499-499"];
m19_224 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="double d2 = Convert.ToDouble(objB, CultureInfo.InvariantCulture)", span="500-500"];
m19_225 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label=operation, span="502-502"];
m19_242 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="objA is int || objA is uint || objA is long || objA is short || objA is ushort || objA is sbyte || objA is byte ||\r\n                         objB is int || objB is uint || objB is long || objB is short || objB is ushort || objB is sbyte || objB is byte", span="522-523"];
m19_243 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="objA == null || objB == null", span="525-525"];
m19_246 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="long l1 = Convert.ToInt64(objA, CultureInfo.InvariantCulture)", span="531-531"];
m19_247 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="long l2 = Convert.ToInt64(objB, CultureInfo.InvariantCulture)", span="532-532"];
m19_248 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label=operation, span="534-534"];
m19_172 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="return true;", span="420-420"];
m19_175 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="result = null", span="429-429"];
m19_176 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="return true;", span="430-430"];
m19_182 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="result = i1 + i2", span="442-442"];
m19_186 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="result = i1 - i2", span="446-446"];
m19_190 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="result = i1 * i2", span="450-450"];
m19_194 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="result = i1 / i2", span="454-454"];
m19_180 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="ExpressionType.Add", span="440-440"];
m19_184 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="ExpressionType.Subtract", span="444-444"];
m19_188 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="ExpressionType.Multiply", span="448-448"];
m19_192 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="ExpressionType.Divide", span="452-452"];
m19_181 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="ExpressionType.AddAssign", span="441-441"];
m19_183 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="return true;", span="443-443"];
m19_185 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="ExpressionType.SubtractAssign", span="445-445"];
m19_187 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="return true;", span="447-447"];
m19_189 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="ExpressionType.MultiplyAssign", span="449-449"];
m19_191 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="return true;", span="451-451"];
m19_193 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="ExpressionType.DivideAssign", span="453-453"];
m19_195 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="return true;", span="455-455"];
m19_198 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="result = null", span="464-464"];
m19_199 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="return true;", span="465-465"];
m19_205 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="result = d1 + d2", span="475-475"];
m19_209 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="result = d1 - d2", span="479-479"];
m19_213 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="result = d1 * d2", span="483-483"];
m19_217 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="result = d1 / d2", span="487-487"];
m19_203 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="ExpressionType.Add", span="473-473"];
m19_207 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="ExpressionType.Subtract", span="477-477"];
m19_211 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="ExpressionType.Multiply", span="481-481"];
m19_215 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="ExpressionType.Divide", span="485-485"];
m19_204 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="ExpressionType.AddAssign", span="474-474"];
m19_206 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="return true;", span="476-476"];
m19_208 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="ExpressionType.SubtractAssign", span="478-478"];
m19_210 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="return true;", span="480-480"];
m19_212 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="ExpressionType.MultiplyAssign", span="482-482"];
m19_214 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="return true;", span="484-484"];
m19_216 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="ExpressionType.DivideAssign", span="486-486"];
m19_218 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="return true;", span="488-488"];
m19_221 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="result = null", span="495-495"];
m19_222 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="return true;", span="496-496"];
m19_228 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="result = d1 + d2", span="506-506"];
m19_232 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="result = d1 - d2", span="510-510"];
m19_236 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="result = d1 * d2", span="514-514"];
m19_240 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="result = d1 / d2", span="518-518"];
m19_226 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="ExpressionType.Add", span="504-504"];
m19_230 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="ExpressionType.Subtract", span="508-508"];
m19_234 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="ExpressionType.Multiply", span="512-512"];
m19_238 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="ExpressionType.Divide", span="516-516"];
m19_227 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="ExpressionType.AddAssign", span="505-505"];
m19_229 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="return true;", span="507-507"];
m19_231 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="ExpressionType.SubtractAssign", span="509-509"];
m19_233 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="return true;", span="511-511"];
m19_235 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="ExpressionType.MultiplyAssign", span="513-513"];
m19_237 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="return true;", span="515-515"];
m19_239 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="ExpressionType.DivideAssign", span="517-517"];
m19_241 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="return true;", span="519-519"];
m19_265 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="result = null", span="555-555"];
m19_244 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="result = null", span="527-527"];
m19_245 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="return true;", span="528-528"];
m19_251 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="result = l1 + l2", span="538-538"];
m19_255 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="result = l1 - l2", span="542-542"];
m19_259 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="result = l1 * l2", span="546-546"];
m19_263 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="result = l1 / l2", span="550-550"];
m19_249 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="ExpressionType.Add", span="536-536"];
m19_253 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="ExpressionType.Subtract", span="540-540"];
m19_257 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="ExpressionType.Multiply", span="544-544"];
m19_261 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="ExpressionType.Divide", span="548-548"];
m19_250 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="ExpressionType.AddAssign", span="537-537"];
m19_252 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="return true;", span="539-539"];
m19_254 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="ExpressionType.SubtractAssign", span="541-541"];
m19_256 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="return true;", span="543-543"];
m19_258 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="ExpressionType.MultiplyAssign", span="545-545"];
m19_260 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="return true;", span="547-547"];
m19_262 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="ExpressionType.DivideAssign", span="549-549"];
m19_264 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="return true;", span="551-551"];
m19_266 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="return false;", span="556-556"];
m19_267 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="DynamicProxy.cs", label="Exit Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", span="413-413"];
m19_55 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", span="314-314"];
m19_393 [cluster="Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="44-44"];
m19_574 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", span="1942-1942"];
m19_57 [cluster="System.Math.Truncate(decimal)", file="DynamicProxy.cs", label="Entry System.Math.Truncate(decimal)", span="0-0"];
m19_151 [cluster="System.ArgumentException.ArgumentException(string)", file="DynamicProxy.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m19_269 [cluster="Newtonsoft.Json.Linq.JValue.CloneToken()", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.Linq.JValue.CloneToken()", span="560-560"];
m19_270 [cluster="Newtonsoft.Json.Linq.JValue.CloneToken()", file="DynamicProxy.cs", label="return new JValue(this);", span="562-562"];
m19_271 [cluster="Newtonsoft.Json.Linq.JValue.CloneToken()", file="DynamicProxy.cs", label="Exit Newtonsoft.Json.Linq.JValue.CloneToken()", span="560-560"];
m19_392 [cluster="Newtonsoft.Json.JsonSerializer.CreateDefault()", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.JsonSerializer.CreateDefault()", span="596-596"];
m19_160 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.CreateArgumentOutOfRangeException(string, object, string)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.CreateArgumentOutOfRangeException(string, object, string)", span="71-71"];
m19_459 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", span="967-967"];
m19_460 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="DynamicProxy.cs", label="binder.Type == typeof(JValue) || binder.Type == typeof(JToken)", span="969-969"];
m19_461 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="DynamicProxy.cs", label="result = instance", span="971-971"];
m19_463 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="DynamicProxy.cs", label="object value = instance.Value", span="975-975"];
m19_466 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="DynamicProxy.cs", label="return ReflectionUtils.IsNullable(binder.Type);", span="980-980"];
m19_467 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="DynamicProxy.cs", label="result = ConvertUtils.Convert(value, CultureInfo.InvariantCulture, binder.Type)", span="983-983"];
m19_462 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="DynamicProxy.cs", label="return true;", span="972-972"];
m19_464 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="DynamicProxy.cs", label="value == null", span="977-977"];
m19_465 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="DynamicProxy.cs", label="result = null", span="979-979"];
m19_468 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="DynamicProxy.cs", label="return true;", span="984-984"];
m19_469 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="DynamicProxy.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", span="967-967"];
m19_24 [cluster="Newtonsoft.Json.Linq.JValue.JValue(string)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(string)", span="155-155"];
m19_25 [cluster="Newtonsoft.Json.Linq.JValue.JValue(string)", file="DynamicProxy.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValue(string)", span="155-155"];
m19_535 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSByte(System.IFormatProvider)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSByte(System.IFormatProvider)", span="1103-1103"];
m19_536 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSByte(System.IFormatProvider)", file="DynamicProxy.cs", label="return (sbyte)this;", span="1105-1105"];
m19_537 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSByte(System.IFormatProvider)", file="DynamicProxy.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSByte(System.IFormatProvider)", span="1103-1103"];
m19_394 [cluster="Newtonsoft.Json.JsonWriter.WriteComment(string)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteComment(string)", span="1421-1421"];
m19_397 [cluster="Newtonsoft.Json.JsonWriter.WriteUndefined()", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteUndefined()", span="886-886"];
m19_405 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="916-916"];
m19_409 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(byte[])", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(byte[])", span="1362-1362"];
m19_28 [cluster="Newtonsoft.Json.Linq.JValue.JValue(System.Uri)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.Uri)", span="173-173"];
m19_29 [cluster="Newtonsoft.Json.Linq.JValue.JValue(System.Uri)", file="DynamicProxy.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValue(System.Uri)", span="173-173"];
m19_408 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime)", span="1046-1046"];
m19_439 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.Linq.JValue.ToString(string)", span="909-909"];
m19_440 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string)", file="DynamicProxy.cs", label="return ToString(format, CultureInfo.CurrentCulture);", span="911-911"];
m19_441 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string)", file="DynamicProxy.cs", label="Exit Newtonsoft.Json.Linq.JValue.ToString(string)", span="909-909"];
m19_553 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt64(System.IFormatProvider)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt64(System.IFormatProvider)", span="1133-1133"];
m19_554 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt64(System.IFormatProvider)", file="DynamicProxy.cs", label="return (long)this;", span="1135-1135"];
m19_555 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt64(System.IFormatProvider)", file="DynamicProxy.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt64(System.IFormatProvider)", span="1133-1133"];
m19_327 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="725-725"];
m19_328 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="DynamicProxy.cs", label="converters != null && converters.Length > 0 && _value != null", span="727-727"];
m19_329 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="DynamicProxy.cs", label="JsonConverter matchingConverter = JsonSerializer.GetMatchingConverter(converters, _value.GetType())", span="729-729"];
m19_331 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="DynamicProxy.cs", label="matchingConverter.WriteJson(writer, _value, JsonSerializer.CreateDefault())", span="732-732"];
m19_335 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="DynamicProxy.cs", label="writer.WriteComment(_value?.ToString())", span="740-740"];
m19_338 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="DynamicProxy.cs", label="writer.WriteRawValue(_value?.ToString())", span="743-743"];
m19_341 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="DynamicProxy.cs", label="writer.WriteNull()", span="746-746"];
m19_344 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="DynamicProxy.cs", label="writer.WriteUndefined()", span="749-749"];
m19_348 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="DynamicProxy.cs", label="writer.WriteValue((int)_value)", span="754-754"];
m19_350 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="DynamicProxy.cs", label="writer.WriteValue((long)_value)", span="758-758"];
m19_352 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="DynamicProxy.cs", label="writer.WriteValue((ulong)_value)", span="762-762"];
m19_354 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="DynamicProxy.cs", label="writer.WriteValue((BigInteger)_value)", span="767-767"];
m19_355 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="DynamicProxy.cs", label="writer.WriteValue(Convert.ToInt64(_value, CultureInfo.InvariantCulture))", span="772-772"];
m19_359 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="DynamicProxy.cs", label="writer.WriteValue((decimal)_value)", span="778-778"];
m19_361 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="DynamicProxy.cs", label="writer.WriteValue((double)_value)", span="782-782"];
m19_363 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="DynamicProxy.cs", label="writer.WriteValue((float)_value)", span="786-786"];
m19_364 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="DynamicProxy.cs", label="writer.WriteValue(Convert.ToDouble(_value, CultureInfo.InvariantCulture))", span="790-790"];
m19_367 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="DynamicProxy.cs", label="writer.WriteValue(_value?.ToString())", span="794-794"];
m19_370 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="DynamicProxy.cs", label="writer.WriteValue(Convert.ToBoolean(_value, CultureInfo.InvariantCulture))", span="797-797"];
m19_374 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="DynamicProxy.cs", label="writer.WriteValue((DateTimeOffset)_value)", span="803-803"];
m19_375 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="DynamicProxy.cs", label="writer.WriteValue(Convert.ToDateTime(_value, CultureInfo.InvariantCulture))", span="808-808"];
m19_378 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="DynamicProxy.cs", label="writer.WriteValue((byte[])_value)", span="812-812"];
m19_381 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="DynamicProxy.cs", label="writer.WriteValue((_value != null) ? (Guid?)_value : null)", span="815-815"];
m19_384 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="DynamicProxy.cs", label="writer.WriteValue((_value != null) ? (TimeSpan?)_value : null)", span="818-818"];
m19_387 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="DynamicProxy.cs", label="writer.WriteValue((Uri)_value)", span="821-821"];
m19_333 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="DynamicProxy.cs", label=_valueType, span="737-737"];
m19_330 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="DynamicProxy.cs", label="matchingConverter != null && matchingConverter.CanWrite", span="730-730"];
m19_332 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="DynamicProxy.cs", label="return;", span="733-733"];
m19_334 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="DynamicProxy.cs", label="JTokenType.Comment", span="739-739"];
m19_337 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="DynamicProxy.cs", label="JTokenType.Raw", span="742-742"];
m19_340 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="DynamicProxy.cs", label="JTokenType.Null", span="745-745"];
m19_343 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="DynamicProxy.cs", label="JTokenType.Undefined", span="748-748"];
m19_346 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="DynamicProxy.cs", label="JTokenType.Integer", span="751-751"];
m19_357 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="DynamicProxy.cs", label="JTokenType.Float", span="775-775"];
m19_366 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="DynamicProxy.cs", label="JTokenType.String", span="793-793"];
m19_369 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="DynamicProxy.cs", label="JTokenType.Boolean", span="796-796"];
m19_372 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="DynamicProxy.cs", label="JTokenType.Date", span="799-799"];
m19_377 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="DynamicProxy.cs", label="JTokenType.Bytes", span="811-811"];
m19_380 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="DynamicProxy.cs", label="JTokenType.Guid", span="814-814"];
m19_383 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="DynamicProxy.cs", label="JTokenType.TimeSpan", span="817-817"];
m19_386 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="DynamicProxy.cs", label="JTokenType.Uri", span="820-820"];
m19_336 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="DynamicProxy.cs", label="return;", span="741-741"];
m19_339 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="DynamicProxy.cs", label="return;", span="744-744"];
m19_342 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="DynamicProxy.cs", label="return;", span="747-747"];
m19_345 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="DynamicProxy.cs", label="return;", span="750-750"];
m19_347 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="DynamicProxy.cs", label="_value is int", span="752-752"];
m19_349 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="DynamicProxy.cs", label="_value is long", span="756-756"];
m19_351 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="DynamicProxy.cs", label="_value is ulong", span="760-760"];
m19_353 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="DynamicProxy.cs", label="_value is BigInteger", span="765-765"];
m19_356 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="DynamicProxy.cs", label="return;", span="774-774"];
m19_358 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="DynamicProxy.cs", label="_value is decimal", span="776-776"];
m19_360 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="DynamicProxy.cs", label="_value is double", span="780-780"];
m19_362 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="DynamicProxy.cs", label="_value is float", span="784-784"];
m19_365 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="DynamicProxy.cs", label="return;", span="792-792"];
m19_368 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="DynamicProxy.cs", label="return;", span="795-795"];
m19_371 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="DynamicProxy.cs", label="return;", span="798-798"];
m19_373 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="DynamicProxy.cs", label="_value is DateTimeOffset", span="801-801"];
m19_376 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="DynamicProxy.cs", label="return;", span="810-810"];
m19_379 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="DynamicProxy.cs", label="return;", span="813-813"];
m19_382 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="DynamicProxy.cs", label="return;", span="816-816"];
m19_385 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="DynamicProxy.cs", label="return;", span="819-819"];
m19_388 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="DynamicProxy.cs", label="return;", span="822-822"];
m19_390 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="DynamicProxy.cs", label="throw MiscellaneousUtils.CreateArgumentOutOfRangeException(nameof(Type), _valueType, ''Unexpected token type.'');", span="825-825"];
m19_389 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="DynamicProxy.cs", label="Exit Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="725-725"];
m19_470 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", span="255-255"];
m19_22 [cluster="Newtonsoft.Json.Linq.JValue.JValue(bool)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(bool)", span="146-146"];
m19_23 [cluster="Newtonsoft.Json.Linq.JValue.JValue(bool)", file="DynamicProxy.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValue(bool)", span="146-146"];
m19_528 [cluster="System.IConvertible.GetTypeCode()", file="DynamicProxy.cs", label="Entry System.IConvertible.GetTypeCode()", span="0-0"];
m19_62 [cluster="System.Math.Abs(double)", file="DynamicProxy.cs", label="Entry System.Math.Abs(double)", span="0-0"];
m19_316 [cluster="object.GetType()", file="DynamicProxy.cs", label="Entry object.GetType()", span="0-0"];
m19_43 [cluster="Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", span="223-223"];
m19_44 [cluster="Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", file="DynamicProxy.cs", label="int result = i1.CompareTo(ConvertUtils.ToBigInteger(i2))", span="225-225"];
m19_47 [cluster="Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", file="DynamicProxy.cs", label="i2 is decimal", span="234-234"];
m19_48 [cluster="Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", file="DynamicProxy.cs", label="decimal d = (decimal)i2", span="236-236"];
m19_50 [cluster="Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", file="DynamicProxy.cs", label="i2 is double || i2 is float", span="239-239"];
m19_51 [cluster="Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", file="DynamicProxy.cs", label="double d = Convert.ToDouble(i2, CultureInfo.InvariantCulture)", span="241-241"];
m19_45 [cluster="Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", file="DynamicProxy.cs", label="result != 0", span="227-227"];
m19_46 [cluster="Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", file="DynamicProxy.cs", label="return result;", span="229-229"];
m19_53 [cluster="Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", file="DynamicProxy.cs", label="return result;", span="245-245"];
m19_49 [cluster="Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", file="DynamicProxy.cs", label="return (0m).CompareTo(Math.Abs(d - Math.Truncate(d)));", span="237-237"];
m19_52 [cluster="Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", file="DynamicProxy.cs", label="return (0d).CompareTo(Math.Abs(d - Math.Truncate(d)));", span="242-242"];
m19_54 [cluster="Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", file="DynamicProxy.cs", label="Exit Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", span="223-223"];
m19_411 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.TimeSpan?)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.TimeSpan?)", span="1346-1346"];
m19_10 [cluster="Newtonsoft.Json.Linq.JValue.JValue(char)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(char)", span="89-89"];
m19_11 [cluster="Newtonsoft.Json.Linq.JValue.JValue(char)", file="DynamicProxy.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValue(char)", span="89-89"];
m19_167 [cluster="Newtonsoft.Json.Utilities.MathUtils.ApproxEquals(double, double)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.Utilities.MathUtils.ApproxEquals(double, double)", span="171-171"];
m19_63 [cluster="double.CompareTo(double)", file="DynamicProxy.cs", label="Entry double.CompareTo(double)", span="0-0"];
m19_144 [cluster="string.CompareOrdinal(string, string)", file="DynamicProxy.cs", label="Entry string.CompareOrdinal(string, string)", span="0-0"];
m19_410 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.Guid?)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.Guid?)", span="1330-1330"];
m19_14 [cluster="Newtonsoft.Json.Linq.JValue.JValue(double)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(double)", span="108-108"];
m19_15 [cluster="Newtonsoft.Json.Linq.JValue.JValue(double)", file="DynamicProxy.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValue(double)", span="108-108"];
m19_326 [cluster="System.Nullable<T>.GetValueOrDefault()", file="DynamicProxy.cs", label="Entry System.Nullable<T>.GetValueOrDefault()", span="0-0"];
m19_58 [cluster="System.Math.Abs(decimal)", file="DynamicProxy.cs", label="Entry System.Math.Abs(decimal)", span="0-0"];
m19_0 [cluster="Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", span="52-52"];
m19_1 [cluster="Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", file="DynamicProxy.cs", label="_value = value", span="54-54"];
m19_2 [cluster="Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", file="DynamicProxy.cs", label="_valueType = type", span="55-55"];
m19_3 [cluster="Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", file="DynamicProxy.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", span="52-52"];
m19_143 [cluster="System.Convert.ToString(object, System.IFormatProvider)", file="DynamicProxy.cs", label="Entry System.Convert.ToString(object, System.IFormatProvider)", span="0-0"];
m19_417 [cluster="object.GetHashCode()", file="DynamicProxy.cs", label="Entry object.GetHashCode()", span="0-0"];
m19_541 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt16(System.IFormatProvider)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt16(System.IFormatProvider)", span="1113-1113"];
m19_542 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt16(System.IFormatProvider)", file="DynamicProxy.cs", label="return (short)this;", span="1115-1115"];
m19_543 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt16(System.IFormatProvider)", file="DynamicProxy.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt16(System.IFormatProvider)", span="1113-1113"];
m19_272 [cluster="Newtonsoft.Json.Linq.JValue.CreateComment(string)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.Linq.JValue.CreateComment(string)", span="570-570"];
m19_273 [cluster="Newtonsoft.Json.Linq.JValue.CreateComment(string)", file="DynamicProxy.cs", label="return new JValue(value, JTokenType.Comment);", span="572-572"];
m19_274 [cluster="Newtonsoft.Json.Linq.JValue.CreateComment(string)", file="DynamicProxy.cs", label="Exit Newtonsoft.Json.Linq.JValue.CreateComment(string)", span="570-570"];
m19_443 [cluster="Newtonsoft.Json.Linq.JValue.ToString(System.IFormatProvider)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.Linq.JValue.ToString(System.IFormatProvider)", span="921-921"];
m19_444 [cluster="Newtonsoft.Json.Linq.JValue.ToString(System.IFormatProvider)", file="DynamicProxy.cs", label="return ToString(null, formatProvider);", span="923-923"];
m19_445 [cluster="Newtonsoft.Json.Linq.JValue.ToString(System.IFormatProvider)", file="DynamicProxy.cs", label="Exit Newtonsoft.Json.Linq.JValue.ToString(System.IFormatProvider)", span="921-921"];
m19_413 [cluster="Newtonsoft.Json.Linq.JValue.GetDeepHashCode()", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.Linq.JValue.GetDeepHashCode()", span="828-828"];
m19_414 [cluster="Newtonsoft.Json.Linq.JValue.GetDeepHashCode()", file="DynamicProxy.cs", label="int valueHashCode = (_value != null) ? _value.GetHashCode() : 0", span="830-830"];
m19_415 [cluster="Newtonsoft.Json.Linq.JValue.GetDeepHashCode()", file="DynamicProxy.cs", label="return ((int)_valueType).GetHashCode() ^ valueHashCode;", span="833-833"];
m19_416 [cluster="Newtonsoft.Json.Linq.JValue.GetDeepHashCode()", file="DynamicProxy.cs", label="Exit Newtonsoft.Json.Linq.JValue.GetDeepHashCode()", span="828-828"];
m19_571 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToType(System.Type, System.IFormatProvider)", span="1163-1163"];
m19_572 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="DynamicProxy.cs", label="return ToObject(conversionType);", span="1165-1165"];
m19_573 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="DynamicProxy.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToType(System.Type, System.IFormatProvider)", span="1163-1163"];
m19_538 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToByte(System.IFormatProvider)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToByte(System.IFormatProvider)", span="1108-1108"];
m19_539 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToByte(System.IFormatProvider)", file="DynamicProxy.cs", label="return (byte)this;", span="1110-1110"];
m19_540 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToByte(System.IFormatProvider)", file="DynamicProxy.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToByte(System.IFormatProvider)", span="1108-1108"];
m19_156 [cluster="System.Collections.Generic.Comparer<T>.Compare(T, T)", file="DynamicProxy.cs", label="Entry System.Collections.Generic.Comparer<T>.Compare(T, T)", span="0-0"];
m19_515 [cluster="Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", span="1065-1065"];
m19_516 [cluster="Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", file="DynamicProxy.cs", label="obj == null", span="1067-1067"];
m19_518 [cluster="Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", file="DynamicProxy.cs", label="return Compare(_valueType, _value, obj._value);", span="1072-1072"];
m19_517 [cluster="Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", file="DynamicProxy.cs", label="return 1;", span="1069-1069"];
m19_519 [cluster="Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", file="DynamicProxy.cs", label="Exit Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", span="1065-1065"];
m19_403 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(double)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(double)", span="972-972"];
m19_34 [cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="196-196"];
m19_35 [cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="DynamicProxy.cs", label="JValue other = node as JValue", span="198-198"];
m19_36 [cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="DynamicProxy.cs", label="other == null", span="199-199"];
m19_38 [cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="DynamicProxy.cs", label="other == this", span="203-203"];
m19_40 [cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="DynamicProxy.cs", label="return ValuesEquals(this, other);", span="208-208"];
m19_37 [cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="DynamicProxy.cs", label="return false;", span="201-201"];
m19_39 [cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="DynamicProxy.cs", label="return true;", span="205-205"];
m19_41 [cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="DynamicProxy.cs", label="Exit Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="196-196"];
m19_278 [cluster="Newtonsoft.Json.Linq.JValue.CreateNull()", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.Linq.JValue.CreateNull()", span="589-589"];
m19_279 [cluster="Newtonsoft.Json.Linq.JValue.CreateNull()", file="DynamicProxy.cs", label="return new JValue(null, JTokenType.Null);", span="591-591"];
m19_280 [cluster="Newtonsoft.Json.Linq.JValue.CreateNull()", file="DynamicProxy.cs", label="Exit Newtonsoft.Json.Linq.JValue.CreateNull()", span="589-589"];
m19_150 [cluster="System.DateTimeOffset.CompareTo(System.DateTimeOffset)", file="DynamicProxy.cs", label="Entry System.DateTimeOffset.CompareTo(System.DateTimeOffset)", span="0-0"];
m19_426 [cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.Linq.JValue.Equals(object)", span="865-865"];
m19_427 [cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", file="DynamicProxy.cs", label="return Equals(obj as JValue);", span="867-867"];
m19_428 [cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", file="DynamicProxy.cs", label="Exit Newtonsoft.Json.Linq.JValue.Equals(object)", span="865-865"];
m19_8 [cluster="Newtonsoft.Json.Linq.JValue.JValue(decimal)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(decimal)", span="80-80"];
m19_9 [cluster="Newtonsoft.Json.Linq.JValue.JValue(decimal)", file="DynamicProxy.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValue(decimal)", span="80-80"];
m19_434 [cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.Linq.JValue.ToString()", span="892-892"];
m19_435 [cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="DynamicProxy.cs", label="_value == null", span="894-894"];
m19_436 [cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="DynamicProxy.cs", label="return string.Empty;", span="896-896"];
m19_437 [cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="DynamicProxy.cs", label="return _value.ToString();", span="899-899"];
m19_438 [cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="DynamicProxy.cs", label="Exit Newtonsoft.Json.Linq.JValue.ToString()", span="892-892"];
m19_471 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", span="408-408"];
m19_508 [cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", span="1034-1034"];
m19_509 [cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="DynamicProxy.cs", label="obj == null", span="1036-1036"];
m19_511 [cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="DynamicProxy.cs", label="JValue value = obj as JValue", span="1041-1041"];
m19_512 [cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="DynamicProxy.cs", label="object otherValue = value != null ? value.Value : obj", span="1042-1042"];
m19_510 [cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="DynamicProxy.cs", label="return 1;", span="1038-1038"];
m19_513 [cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="DynamicProxy.cs", label="return Compare(_valueType, _value, otherValue);", span="1044-1044"];
m19_514 [cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="DynamicProxy.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", span="1034-1034"];
m19_398 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(int)", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(int)", span="925-925"];
m19_281 [cluster="Newtonsoft.Json.Linq.JValue.CreateUndefined()", file="DynamicProxy.cs", label="Entry Newtonsoft.Json.Linq.JValue.CreateUndefined()", span="598-598"];
m19_282 [cluster="Newtonsoft.Json.Linq.JValue.CreateUndefined()", file="DynamicProxy.cs", label="return new JValue(null, JTokenType.Undefined);", span="600-600"];
m19_283 [cluster="Newtonsoft.Json.Linq.JValue.CreateUndefined()", file="DynamicProxy.cs", label="Exit Newtonsoft.Json.Linq.JValue.CreateUndefined()", span="598-598"];
m19_575 [file="DynamicProxy.cs", label="Newtonsoft.Json.Linq.JValue", span=""];
m20_7 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="DynamicProxyMetaObject.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="525-525"];
m20_5 [cluster="System.Collections.Generic.List<T>.List()", file="DynamicProxyMetaObject.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m20_8 [cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="DynamicProxyMetaObject.cs", label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="327-327"];
m20_0 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeImmutableCollections.Example()", file="DynamicProxyMetaObject.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeImmutableCollections.Example()", span="44-44"];
m20_1 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeImmutableCollections.Example()", file="DynamicProxyMetaObject.cs", label="ImmutableList<string> l = ImmutableList.CreateRange(new List<string>\r\n            {\r\n                ''One'',\r\n                ''II'',\r\n                ''3''\r\n            })", span="47-52"];
m20_2 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeImmutableCollections.Example()", file="DynamicProxyMetaObject.cs", label="string json = JsonConvert.SerializeObject(l, Formatting.Indented)", span="54-54"];
m20_3 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeImmutableCollections.Example()", file="DynamicProxyMetaObject.cs", label="StringAssert.AreEqual(@''[\r\n  ''''One'''',\r\n  ''''II'''',\r\n  ''''3''''\r\n]'', json)", span="62-66"];
m20_4 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeImmutableCollections.Example()", file="DynamicProxyMetaObject.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeImmutableCollections.Example()", span="44-44"];
m20_6 [cluster="Unk.CreateRange", file="DynamicProxyMetaObject.cs", label="Entry Unk.CreateRange", span=""];
m21_6 [cluster="Newtonsoft.Json.JsonException.JsonException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DynamicReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.JsonException.JsonException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="78-78"];
m21_7 [cluster="Newtonsoft.Json.JsonException.JsonException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DynamicReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.JsonException.JsonException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="78-78"];
m21_8 [cluster="Newtonsoft.Json.JsonException.Create(Newtonsoft.Json.IJsonLineInfo, string, string)", file="DynamicReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.JsonException.Create(Newtonsoft.Json.IJsonLineInfo, string, string)", span="84-84"];
m21_9 [cluster="Newtonsoft.Json.JsonException.Create(Newtonsoft.Json.IJsonLineInfo, string, string)", file="DynamicReflectionDelegateFactory.cs", label="message = JsonPosition.FormatMessage(lineInfo, path, message)", span="86-86"];
m21_10 [cluster="Newtonsoft.Json.JsonException.Create(Newtonsoft.Json.IJsonLineInfo, string, string)", file="DynamicReflectionDelegateFactory.cs", label="return new JsonException(message);", span="88-88"];
m21_11 [cluster="Newtonsoft.Json.JsonException.Create(Newtonsoft.Json.IJsonLineInfo, string, string)", file="DynamicReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.JsonException.Create(Newtonsoft.Json.IJsonLineInfo, string, string)", span="84-84"];
m21_0 [cluster="Newtonsoft.Json.JsonException.JsonException()", file="DynamicReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.JsonException.JsonException()", span="45-45"];
m21_1 [cluster="Newtonsoft.Json.JsonException.JsonException()", file="DynamicReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.JsonException.JsonException()", span="45-45"];
m21_2 [cluster="Newtonsoft.Json.JsonException.JsonException(string)", file="DynamicReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.JsonException.JsonException(string)", span="54-54"];
m21_3 [cluster="Newtonsoft.Json.JsonException.JsonException(string)", file="DynamicReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.JsonException.JsonException(string)", span="54-54"];
m21_4 [cluster="Newtonsoft.Json.JsonException.JsonException(string, System.Exception)", file="DynamicReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.JsonException.JsonException(string, System.Exception)", span="65-65"];
m21_5 [cluster="Newtonsoft.Json.JsonException.JsonException(string, System.Exception)", file="DynamicReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.JsonException.JsonException(string, System.Exception)", span="65-65"];
m21_12 [cluster="Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", file="DynamicReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", span="104-104"];
m23_5 [cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="DynamicValueProvider.cs", label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="31-31"];
m23_15 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string, System.Exception)", file="DynamicValueProvider.cs", label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string, System.Exception)", span="63-63"];
m23_13 [cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateSet<T>(System.Reflection.MemberInfo)", file="DynamicValueProvider.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateSet<T>(System.Reflection.MemberInfo)", span="55-55"];
m23_14 [cluster="System.Action<T1, T2>.Invoke(T1, T2)", file="DynamicValueProvider.cs", label="Entry System.Action<T1, T2>.Invoke(T1, T2)", span="0-0"];
m23_25 [cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateGet<T>(System.Reflection.MemberInfo)", file="DynamicValueProvider.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateGet<T>(System.Reflection.MemberInfo)", span="38-38"];
m23_16 [cluster="object.GetType()", file="DynamicValueProvider.cs", label="Entry object.GetType()", span="0-0"];
m23_18 [cluster="Newtonsoft.Json.Serialization.DynamicValueProvider.GetValue(object)", file="DynamicValueProvider.cs", label="Entry Newtonsoft.Json.Serialization.DynamicValueProvider.GetValue(object)", span="100-100"];
m23_19 [cluster="Newtonsoft.Json.Serialization.DynamicValueProvider.GetValue(object)", file="DynamicValueProvider.cs", label="_getter == null", span="104-104"];
m23_21 [cluster="Newtonsoft.Json.Serialization.DynamicValueProvider.GetValue(object)", file="DynamicValueProvider.cs", label="return _getter(target);", span="109-109"];
m23_23 [cluster="Newtonsoft.Json.Serialization.DynamicValueProvider.GetValue(object)", file="DynamicValueProvider.cs", label="throw new JsonSerializationException(''Error getting value from '{0}' on '{1}'.''.FormatWith(CultureInfo.InvariantCulture, _memberInfo.Name, target.GetType()), ex);", span="113-113"];
m23_20 [cluster="Newtonsoft.Json.Serialization.DynamicValueProvider.GetValue(object)", file="DynamicValueProvider.cs", label="_getter = DynamicReflectionDelegateFactory.Instance.CreateGet<object>(_memberInfo)", span="106-106"];
m23_22 [cluster="Newtonsoft.Json.Serialization.DynamicValueProvider.GetValue(object)", file="DynamicValueProvider.cs", label=Exception, span="111-111"];
m23_24 [cluster="Newtonsoft.Json.Serialization.DynamicValueProvider.GetValue(object)", file="DynamicValueProvider.cs", label="Exit Newtonsoft.Json.Serialization.DynamicValueProvider.GetValue(object)", span="100-100"];
m23_6 [cluster="Newtonsoft.Json.Serialization.DynamicValueProvider.SetValue(object, object)", file="DynamicValueProvider.cs", label="Entry Newtonsoft.Json.Serialization.DynamicValueProvider.SetValue(object, object)", span="62-62"];
m23_7 [cluster="Newtonsoft.Json.Serialization.DynamicValueProvider.SetValue(object, object)", file="DynamicValueProvider.cs", label="_setter == null", span="66-66"];
m23_9 [cluster="Newtonsoft.Json.Serialization.DynamicValueProvider.SetValue(object, object)", file="DynamicValueProvider.cs", label="_setter(target, value)", span="87-87"];
m23_11 [cluster="Newtonsoft.Json.Serialization.DynamicValueProvider.SetValue(object, object)", file="DynamicValueProvider.cs", label="throw new JsonSerializationException(''Error setting value to '{0}' on '{1}'.''.FormatWith(CultureInfo.InvariantCulture, _memberInfo.Name, target.GetType()), ex);", span="91-91"];
m23_8 [cluster="Newtonsoft.Json.Serialization.DynamicValueProvider.SetValue(object, object)", file="DynamicValueProvider.cs", label="_setter = DynamicReflectionDelegateFactory.Instance.CreateSet<object>(_memberInfo)", span="68-68"];
m23_10 [cluster="Newtonsoft.Json.Serialization.DynamicValueProvider.SetValue(object, object)", file="DynamicValueProvider.cs", label=Exception, span="89-89"];
m23_12 [cluster="Newtonsoft.Json.Serialization.DynamicValueProvider.SetValue(object, object)", file="DynamicValueProvider.cs", label="Exit Newtonsoft.Json.Serialization.DynamicValueProvider.SetValue(object, object)", span="62-62"];
m23_26 [cluster="System.Func<T, TResult>.Invoke(T)", file="DynamicValueProvider.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m23_17 [cluster="string.FormatWith(System.IFormatProvider, object, object)", file="DynamicValueProvider.cs", label="Entry string.FormatWith(System.IFormatProvider, object, object)", span="52-52"];
m23_4 [cluster="Unk.nameof", file="DynamicValueProvider.cs", label="Entry Unk.nameof", span=""];
m23_0 [cluster="Newtonsoft.Json.Serialization.DynamicValueProvider.DynamicValueProvider(System.Reflection.MemberInfo)", file="DynamicValueProvider.cs", label="Entry Newtonsoft.Json.Serialization.DynamicValueProvider.DynamicValueProvider(System.Reflection.MemberInfo)", span="51-51"];
m23_1 [cluster="Newtonsoft.Json.Serialization.DynamicValueProvider.DynamicValueProvider(System.Reflection.MemberInfo)", file="DynamicValueProvider.cs", label="ValidationUtils.ArgumentNotNull(memberInfo, nameof(memberInfo))", span="53-53"];
m23_2 [cluster="Newtonsoft.Json.Serialization.DynamicValueProvider.DynamicValueProvider(System.Reflection.MemberInfo)", file="DynamicValueProvider.cs", label="_memberInfo = memberInfo", span="54-54"];
m23_3 [cluster="Newtonsoft.Json.Serialization.DynamicValueProvider.DynamicValueProvider(System.Reflection.MemberInfo)", file="DynamicValueProvider.cs", label="Exit Newtonsoft.Json.Serialization.DynamicValueProvider.DynamicValueProvider(System.Reflection.MemberInfo)", span="51-51"];
m23_27 [file="DynamicValueProvider.cs", label="Newtonsoft.Json.Serialization.DynamicValueProvider", span=""];
m24_974 [cluster="Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="54-54"];
m24_39 [cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper(object)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper(object)", span="179-179"];
m24_558 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.ValueEquals(object, object)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.ValueEquals(object, object)", span="39-39"];
m24_742 [cluster="Newtonsoft.Json.JsonReader.GetPosition(int)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.JsonReader.GetPosition(int)", span="291-291"];
m24_878 [cluster="Newtonsoft.Json.Serialization.JsonDynamicContract.TrySetMember(System.Dynamic.IDynamicMetaObjectProvider, string, object)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonDynamicContract.TrySetMember(System.Dynamic.IDynamicMetaObjectProvider, string, object)", span="105-105"];
m24_102 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", span="215-215"];
m24_103 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="EntityKeyMemberConverter.cs", label="ValidationUtils.ArgumentNotNull(reader, ''reader'')", span="217-217"];
m24_106 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="EntityKeyMemberConverter.cs", label="reader.TokenType == JsonToken.PropertyName", span="226-226"];
m24_107 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="EntityKeyMemberConverter.cs", label="string propertyName = (string)reader.Value", span="228-228"];
m24_108 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="EntityKeyMemberConverter.cs", label="!reader.Read()", span="231-231"];
m24_109 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="EntityKeyMemberConverter.cs", label="reader.TokenType == JsonToken.Comment", span="233-233"];
m24_110 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="EntityKeyMemberConverter.cs", label="CheckPropertyName(reader, propertyName)", span="235-235"];
m24_112 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="EntityKeyMemberConverter.cs", label="writer.WriteToken(reader, true, true)", span="239-239"];
m24_113 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="EntityKeyMemberConverter.cs", label="reader.TokenType == JsonToken.Comment", span="241-241"];
m24_116 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="EntityKeyMemberConverter.cs", label="reader.Read()", span="250-250"];
m24_117 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="EntityKeyMemberConverter.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected end when deserializing object.'');", span="252-252"];
m24_104 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="EntityKeyMemberConverter.cs", label="JTokenWriter writer = new JTokenWriter()", span="220-220"];
m24_105 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="EntityKeyMemberConverter.cs", label="writer.WriteStartObject()", span="222-222"];
m24_111 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="EntityKeyMemberConverter.cs", label="writer.WritePropertyName(propertyName)", span="238-238"];
m24_114 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="EntityKeyMemberConverter.cs", label="writer.WriteEndObject()", span="247-247"];
m24_115 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="EntityKeyMemberConverter.cs", label="return writer.Token;", span="248-248"];
m24_118 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="EntityKeyMemberConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", span="215-215"];
m24_73 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", span="1826-1826"];
m24_1013 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="EntityKeyMemberConverter.cs", label=hasConverter, span="1830-1830"];
m24_1014 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="EntityKeyMemberConverter.cs", label="return reader.Read();", span="1831-1831"];
m24_1015 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="EntityKeyMemberConverter.cs", label="ReadType t = (contract != null) ? contract.InternalReadType : ReadType.Read", span="1833-1833"];
m24_1018 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="EntityKeyMemberConverter.cs", label="!reader.Read()", span="1840-1840"];
m24_1020 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="EntityKeyMemberConverter.cs", label="reader.TokenType == JsonToken.Comment", span="1842-1842"];
m24_1023 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="EntityKeyMemberConverter.cs", label="reader.ReadAsInt32()", span="1846-1846"];
m24_1025 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="EntityKeyMemberConverter.cs", label="reader.ReadAsDecimal()", span="1849-1849"];
m24_1027 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="EntityKeyMemberConverter.cs", label="reader.ReadAsBytes()", span="1852-1852"];
m24_1029 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="EntityKeyMemberConverter.cs", label="reader.ReadAsString()", span="1855-1855"];
m24_1031 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="EntityKeyMemberConverter.cs", label="reader.ReadAsDateTime()", span="1858-1858"];
m24_1033 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="EntityKeyMemberConverter.cs", label="reader.ReadAsDateTimeOffset()", span="1862-1862"];
m24_1035 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="EntityKeyMemberConverter.cs", label="return (reader.TokenType != JsonToken.None);", span="1869-1869"];
m24_1016 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="EntityKeyMemberConverter.cs", label=t, span="1835-1835"];
m24_1017 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="EntityKeyMemberConverter.cs", label="ReadType.Read", span="1837-1837"];
m24_1022 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="EntityKeyMemberConverter.cs", label="ReadType.ReadAsInt32", span="1845-1845"];
m24_1024 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="EntityKeyMemberConverter.cs", label="ReadType.ReadAsDecimal", span="1848-1848"];
m24_1026 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="EntityKeyMemberConverter.cs", label="ReadType.ReadAsBytes", span="1851-1851"];
m24_1028 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="EntityKeyMemberConverter.cs", label="ReadType.ReadAsString", span="1854-1854"];
m24_1030 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="EntityKeyMemberConverter.cs", label="ReadType.ReadAsDateTime", span="1857-1857"];
m24_1032 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="EntityKeyMemberConverter.cs", label="ReadType.ReadAsDateTimeOffset", span="1861-1861"];
m24_1034 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="EntityKeyMemberConverter.cs", label="throw new ArgumentOutOfRangeException();", span="1866-1866"];
m24_1019 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="EntityKeyMemberConverter.cs", label="return false;", span="1841-1841"];
m24_1021 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="EntityKeyMemberConverter.cs", label="return true;", span="1844-1844"];
m24_1036 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="EntityKeyMemberConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", span="1826-1826"];
m24_938 [cluster="Unk.ToDictionary", file="EntityKeyMemberConverter.cs", label="Entry Unk.ToDictionary", span=""];
m24_47 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", span="132-132"];
m24_48 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="EntityKeyMemberConverter.cs", label="reader == null", span="134-134"];
m24_50 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="EntityKeyMemberConverter.cs", label="JsonContract contract = GetContractSafe(objectType)", span="137-137"];
m24_52 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="EntityKeyMemberConverter.cs", label="reader.TokenType == JsonToken.None && !ReadForType(reader, contract, converter != null)", span="143-143"];
m24_54 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="EntityKeyMemberConverter.cs", label="throw JsonSerializationException.Create(reader, ''No JSON content found and type '{0}' is not nullable.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="146-146"];
m24_58 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="EntityKeyMemberConverter.cs", label="deserializedValue = DeserializeConvertable(converter, reader, objectType, null)", span="154-154"];
m24_59 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="EntityKeyMemberConverter.cs", label="deserializedValue = CreateValueInternal(reader, objectType, contract, null, null, null, null)", span="156-156"];
m24_60 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="EntityKeyMemberConverter.cs", label=checkAdditionalContent, span="158-158"];
m24_61 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="EntityKeyMemberConverter.cs", label="reader.Read() && reader.TokenType != JsonToken.Comment", span="160-160"];
m24_65 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="EntityKeyMemberConverter.cs", label="IsErrorHandled(null, contract, null, reader as IJsonLineInfo, reader.Path, ex)", span="168-168"];
m24_66 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="EntityKeyMemberConverter.cs", label="HandleError(reader, false, 0)", span="170-170"];
m24_49 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="EntityKeyMemberConverter.cs", label="throw new ArgumentNullException(''reader'');", span="135-135"];
m24_51 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="EntityKeyMemberConverter.cs", label="JsonConverter converter = GetConverter(contract, null, null, null)", span="141-141"];
m24_53 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="EntityKeyMemberConverter.cs", label="contract != null && !contract.IsNullable", span="145-145"];
m24_57 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="EntityKeyMemberConverter.cs", label="converter != null && converter.CanRead", span="153-153"];
m24_56 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="EntityKeyMemberConverter.cs", label="object deserializedValue", span="151-151"];
m24_55 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="EntityKeyMemberConverter.cs", label="return null;", span="148-148"];
m24_63 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="EntityKeyMemberConverter.cs", label="return deserializedValue;", span="164-164"];
m24_62 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="EntityKeyMemberConverter.cs", label="throw new JsonSerializationException(''Additional text found in JSON string after finishing deserializing object.'');", span="161-161"];
m24_64 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="EntityKeyMemberConverter.cs", label=Exception, span="166-166"];
m24_68 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="EntityKeyMemberConverter.cs", label="ClearErrorContext()", span="178-178"];
m24_67 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="EntityKeyMemberConverter.cs", label="return null;", span="171-171"];
m24_69 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="EntityKeyMemberConverter.cs", label="throw;", span="179-179"];
m24_70 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="EntityKeyMemberConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", span="132-132"];
m24_38 [cluster="string.Equals(string, string, System.StringComparison)", file="EntityKeyMemberConverter.cs", label="Entry string.Equals(string, string, System.StringComparison)", span="0-0"];
m24_74 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", span="1735-1735"];
m24_967 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", file="EntityKeyMemberConverter.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="1737-1737"];
m24_968 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", file="EntityKeyMemberConverter.cs", label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Started deserializing {0} with converter {1}.''.FormatWith(CultureInfo.InvariantCulture, objectType, converter.GetType())), null)", span="1738-1738"];
m24_969 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", file="EntityKeyMemberConverter.cs", label="object value = converter.ReadJson(reader, objectType, existingValue, GetInternalSerializer())", span="1740-1740"];
m24_971 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", file="EntityKeyMemberConverter.cs", label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Finished deserializing {0} with converter {1}.''.FormatWith(CultureInfo.InvariantCulture, objectType, converter.GetType())), null)", span="1743-1743"];
m24_970 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", file="EntityKeyMemberConverter.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="1742-1742"];
m24_972 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", file="EntityKeyMemberConverter.cs", label="return value;", span="1745-1745"];
m24_973 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", file="EntityKeyMemberConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", span="1735-1735"];
m24_342 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", span="92-92"];
m24_738 [cluster="System.Collections.Generic.Stack<T>.Push(T)", file="EntityKeyMemberConverter.cs", label="Entry System.Collections.Generic.Stack<T>.Push(T)", span="0-0"];
m24_85 [cluster="Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalReader)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalReader)", span="214-214"];
m24_492 [cluster="System.Enum.ToObject(System.Type, object)", file="EntityKeyMemberConverter.cs", label="Entry System.Enum.ToObject(System.Type, object)", span="0-0"];
m24_1103 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", span="2086-2086"];
m24_1149 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="EntityKeyMemberConverter.cs", label="property != null && requiredProperties != null", span="2088-2088"];
m24_1150 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="EntityKeyMemberConverter.cs", label="requiredProperties[property] = (reader.TokenType == JsonToken.Null || reader.TokenType == JsonToken.Undefined)\r\n                    ? PropertyPresence.Null\r\n                    : PropertyPresence.Value", span="2090-2092"];
m24_1151 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="EntityKeyMemberConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", span="2086-2086"];
m24_557 [cluster="Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", span="170-170"];
m24_554 [cluster="System.Type.IsValueType()", file="EntityKeyMemberConverter.cs", label="Entry System.Type.IsValueType()", span="539-539"];
m24_37 [cluster="object.ToString()", file="EntityKeyMemberConverter.cs", label="Entry object.ToString()", span="0-0"];
m24_553 [cluster="System.Nullable<T>.GetValueOrDefault(T)", file="EntityKeyMemberConverter.cs", label="Entry System.Nullable<T>.GetValueOrDefault(T)", span="0-0"];
m24_566 [cluster="Newtonsoft.Json.Serialization.IReferenceResolver.AddReference(object, string, object)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Serialization.IReferenceResolver.AddReference(object, string, object)", span="64-64"];
m24_559 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.AddReference(Newtonsoft.Json.JsonReader, string, object)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.AddReference(Newtonsoft.Json.JsonReader, string, object)", span="991-991"];
m24_560 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.AddReference(Newtonsoft.Json.JsonReader, string, object)", file="EntityKeyMemberConverter.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="995-995"];
m24_561 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.AddReference(Newtonsoft.Json.JsonReader, string, object)", file="EntityKeyMemberConverter.cs", label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Read object reference Id '{0}' for {1}.''.FormatWith(CultureInfo.InvariantCulture, id, value.GetType())), null)", span="996-996"];
m24_562 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.AddReference(Newtonsoft.Json.JsonReader, string, object)", file="EntityKeyMemberConverter.cs", label="Serializer.GetReferenceResolver().AddReference(this, id, value)", span="998-998"];
m24_564 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.AddReference(Newtonsoft.Json.JsonReader, string, object)", file="EntityKeyMemberConverter.cs", label="throw JsonSerializationException.Create(reader, ''Error reading object reference '{0}'.''.FormatWith(CultureInfo.InvariantCulture, id), ex);", span="1002-1002"];
m24_563 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.AddReference(Newtonsoft.Json.JsonReader, string, object)", file="EntityKeyMemberConverter.cs", label=Exception, span="1000-1000"];
m24_565 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.AddReference(Newtonsoft.Json.JsonReader, string, object)", file="EntityKeyMemberConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.AddReference(Newtonsoft.Json.JsonReader, string, object)", span="991-991"];
m24_740 [cluster="System.Collections.Generic.Stack<T>.Peek()", file="EntityKeyMemberConverter.cs", label="Entry System.Collections.Generic.Stack<T>.Peek()", span="0-0"];
m24_344 [cluster="Newtonsoft.Json.Serialization.IReferenceResolver.ResolveReference(object, string)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Serialization.IReferenceResolver.ResolveReference(object, string)", span="38-38"];
m24_820 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.JsonFormatterConverter(Newtonsoft.Json.Serialization.JsonSerializerInternalReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonFormatterConverter.JsonFormatterConverter(Newtonsoft.Json.Serialization.JsonSerializerInternalReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty)", span="40-40"];
m24_287 [cluster="Newtonsoft.Json.Serialization.ObjectConstructor<T>.Invoke(params object[])", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Serialization.ObjectConstructor<T>.Invoke(params object[])", span="31-31"];
m24_555 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", span="1006-1006"];
m24_567 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", file="EntityKeyMemberConverter.cs", label="return ((value & flag) == flag);", span="1008-1008"];
m24_568 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", file="EntityKeyMemberConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", span="1006-1006"];
m24_36 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckedRead(Newtonsoft.Json.JsonReader)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckedRead(Newtonsoft.Json.JsonReader)", span="749-749"];
m24_422 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckedRead(Newtonsoft.Json.JsonReader)", file="EntityKeyMemberConverter.cs", label="!reader.Read()", span="751-751"];
m24_423 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckedRead(Newtonsoft.Json.JsonReader)", file="EntityKeyMemberConverter.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected end when deserializing object.'');", span="752-752"];
m24_424 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckedRead(Newtonsoft.Json.JsonReader)", file="EntityKeyMemberConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckedRead(Newtonsoft.Json.JsonReader)", span="749-749"];
m24_28 [cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="52-52"];
m24_493 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)", span="333-333"];
m24_164 [cluster="Newtonsoft.Json.Linq.JRaw.JRaw(object)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Linq.JRaw.JRaw(object)", span="48-48"];
m24_1041 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTime()", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsDateTime()", span="395-395"];
m24_290 [cluster="string.FormatWith(System.IFormatProvider, object, object)", file="EntityKeyMemberConverter.cs", label="Entry string.FormatWith(System.IFormatProvider, object, object)", span="52-52"];
m24_72 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="338-338"];
m24_181 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="EntityKeyMemberConverter.cs", label="JsonConverter converter = null", span="340-340"];
m24_182 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="EntityKeyMemberConverter.cs", label="memberConverter != null", span="341-341"];
m24_183 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="EntityKeyMemberConverter.cs", label="converter = memberConverter", span="344-344"];
m24_184 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="EntityKeyMemberConverter.cs", label="containerProperty != null && containerProperty.ItemConverter != null", span="346-346"];
m24_185 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="EntityKeyMemberConverter.cs", label="converter = containerProperty.ItemConverter", span="348-348"];
m24_186 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="EntityKeyMemberConverter.cs", label="containerContract != null && containerContract.ItemConverter != null", span="350-350"];
m24_187 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="EntityKeyMemberConverter.cs", label="converter = containerContract.ItemConverter", span="352-352"];
m24_188 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="EntityKeyMemberConverter.cs", label="contract != null", span="354-354"];
m24_190 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="EntityKeyMemberConverter.cs", label="contract.Converter != null", span="357-357"];
m24_191 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="EntityKeyMemberConverter.cs", label="converter = contract.Converter", span="359-359"];
m24_192 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="EntityKeyMemberConverter.cs", label="(matchingConverter = Serializer.GetMatchingConverter(contract.UnderlyingType)) != null", span="360-360"];
m24_194 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="EntityKeyMemberConverter.cs", label="contract.InternalConverter != null", span="363-363"];
m24_195 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="EntityKeyMemberConverter.cs", label="converter = contract.InternalConverter", span="365-365"];
m24_196 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="EntityKeyMemberConverter.cs", label="return converter;", span="367-367"];
m24_189 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="EntityKeyMemberConverter.cs", label="JsonConverter matchingConverter", span="356-356"];
m24_193 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="EntityKeyMemberConverter.cs", label="converter = matchingConverter", span="362-362"];
m24_197 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="EntityKeyMemberConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="338-338"];
m24_86 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", span="192-192"];
m24_87 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="EntityKeyMemberConverter.cs", label="ValidationUtils.ArgumentNotNull(reader, ''reader'')", span="194-194"];
m24_88 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="EntityKeyMemberConverter.cs", label="contract != null", span="196-196"];
m24_89 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="EntityKeyMemberConverter.cs", label="contract.UnderlyingType == typeof(JRaw)", span="198-198"];
m24_90 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="EntityKeyMemberConverter.cs", label="return JRaw.Create(reader);", span="199-199"];
m24_91 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="EntityKeyMemberConverter.cs", label="reader.TokenType == JsonToken.Null\r\n                    && !(contract.UnderlyingType == typeof(JValue) || contract.UnderlyingType == typeof(JToken))", span="200-201"];
m24_95 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="EntityKeyMemberConverter.cs", label="writer.WriteToken(reader)", span="208-208"];
m24_93 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="EntityKeyMemberConverter.cs", label="JToken token", span="205-205"];
m24_92 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="EntityKeyMemberConverter.cs", label="return null;", span="202-202"];
m24_94 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="EntityKeyMemberConverter.cs", label="JTokenWriter writer = new JTokenWriter()", span="206-206"];
m24_96 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="EntityKeyMemberConverter.cs", label="token = writer.Token", span="209-209"];
m24_97 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="EntityKeyMemberConverter.cs", label="return token;", span="212-212"];
m24_98 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="EntityKeyMemberConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", span="192-192"];
m24_489 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", span="136-136"];
m24_288 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1520-1520"];
m24_833 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="IDynamicMetaObjectProvider newObject", span="1522-1522"];
m24_834 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="!contract.IsInstantiable", span="1524-1524"];
m24_835 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="throw JsonSerializationException.Create(reader, ''Could not create an instance of type {0}. Type is an interface or abstract class and cannot be instantiated.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="1525-1525"];
m24_836 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="contract.DefaultCreator != null &&\r\n                (!contract.DefaultCreatorNonPublic || Serializer._constructorHandling == ConstructorHandling.AllowNonPublicDefaultConstructor)", span="1527-1528"];
m24_837 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="newObject = (IDynamicMetaObjectProvider)contract.DefaultCreator()", span="1529-1529"];
m24_838 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="throw JsonSerializationException.Create(reader, ''Unable to find a default constructor to use for type {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="1531-1531"];
m24_839 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="id != null", span="1533-1533"];
m24_840 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="AddReference(reader, id, newObject)", span="1534-1534"];
m24_841 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="OnDeserializing(reader, contract, newObject)", span="1536-1536"];
m24_842 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="int initialDepth = reader.Depth", span="1538-1538"];
m24_844 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="reader.TokenType", span="1543-1543"];
m24_846 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="string memberName = reader.Value.ToString()", span="1546-1546"];
m24_847 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="!reader.Read()", span="1550-1550"];
m24_848 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected end when setting {0}'s value.''.FormatWith(CultureInfo.InvariantCulture, memberName));", span="1551-1551"];
m24_849 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="JsonProperty property = contract.Properties.GetClosestMatchProperty(memberName)", span="1554-1554"];
m24_854 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="!SetPropertyValue(property, propertyConverter, null, member, reader, newObject)", span="1563-1563"];
m24_855 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="reader.Skip()", span="1564-1564"];
m24_856 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="Type t = (JsonTokenUtils.IsPrimitiveToken(reader.TokenType)) ? reader.ValueType : typeof(IDynamicMetaObjectProvider)", span="1568-1568"];
m24_858 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="JsonConverter dynamicMemberConverter = GetConverter(dynamicMemberContract, null, null, member)", span="1571-1571"];
m24_861 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="value = DeserializeConvertable(dynamicMemberConverter, reader, t, null)", span="1575-1575"];
m24_862 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="value = CreateValueInternal(reader, t, dynamicMemberContract, null, null, member, null)", span="1577-1577"];
m24_863 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="contract.TrySetMember(newObject, memberName, value)", span="1579-1579"];
m24_865 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="IsErrorHandled(newObject, contract, memberName, reader as IJsonLineInfo, reader.Path, ex)", span="1584-1584"];
m24_866 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="HandleError(reader, true, initialDepth)", span="1585-1585"];
m24_870 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected token when deserializing object: '' + reader.TokenType);", span="1594-1594"];
m24_871 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="!finished && reader.Read()", span="1596-1596"];
m24_873 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="ThrowUnexpectedEndException(reader, contract, newObject, ''Unexpected end when deserializing object.'')", span="1599-1599"];
m24_874 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="OnDeserialized(reader, contract, newObject)", span="1601-1601"];
m24_875 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="return newObject;", span="1603-1603"];
m24_843 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="bool finished = false", span="1540-1540"];
m24_845 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="JsonToken.PropertyName", span="1545-1545"];
m24_868 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="JsonToken.EndObject", span="1590-1590"];
m24_850 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="property != null && property.Writable && !property.Ignored", span="1556-1556"];
m24_851 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="property.PropertyContract == null", span="1558-1558"];
m24_852 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="property.PropertyContract = GetContractSafe(property.PropertyType)", span="1559-1559"];
m24_853 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="JsonConverter propertyConverter = GetConverter(property.PropertyContract, property.MemberConverter, null, null)", span="1561-1561"];
m24_864 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label=Exception, span="1582-1582"];
m24_857 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="JsonContract dynamicMemberContract = GetContractSafe(t)", span="1570-1570"];
m24_859 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="object value", span="1573-1573"];
m24_860 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="dynamicMemberConverter != null && dynamicMemberConverter.CanRead", span="1574-1574"];
m24_867 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="throw;", span="1587-1587"];
m24_869 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="finished = true", span="1591-1591"];
m24_872 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="!finished", span="1598-1598"];
m24_876 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1520-1520"];
m24_78 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, bool, int)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, bool, int)", span="2096-2096"];
m24_1152 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, bool, int)", file="EntityKeyMemberConverter.cs", label="ClearErrorContext()", span="2098-2098"];
m24_1153 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, bool, int)", file="EntityKeyMemberConverter.cs", label=readPastError, span="2100-2100"];
m24_1154 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, bool, int)", file="EntityKeyMemberConverter.cs", label="reader.Skip()", span="2102-2102"];
m24_1155 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, bool, int)", file="EntityKeyMemberConverter.cs", label="reader.Depth > (initialDepth + 1)", span="2104-2104"];
m24_1156 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, bool, int)", file="EntityKeyMemberConverter.cs", label="!reader.Read()", span="2106-2106"];
m24_1157 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, bool, int)", file="EntityKeyMemberConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, bool, int)", span="2096-2096"];
m24_822 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializableItem(Newtonsoft.Json.Linq.JToken, System.Type, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializableItem(Newtonsoft.Json.Linq.JToken, System.Type, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty)", span="1501-1501"];
m24_823 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializableItem(Newtonsoft.Json.Linq.JToken, System.Type, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty)", file="EntityKeyMemberConverter.cs", label="JsonContract itemContract = GetContractSafe(type)", span="1503-1503"];
m24_824 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializableItem(Newtonsoft.Json.Linq.JToken, System.Type, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty)", file="EntityKeyMemberConverter.cs", label="JsonConverter itemConverter = GetConverter(itemContract, null, contract, member)", span="1504-1504"];
m24_825 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializableItem(Newtonsoft.Json.Linq.JToken, System.Type, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty)", file="EntityKeyMemberConverter.cs", label="JsonReader tokenReader = token.CreateReader()", span="1506-1506"];
m24_829 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializableItem(Newtonsoft.Json.Linq.JToken, System.Type, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty)", file="EntityKeyMemberConverter.cs", label="result = DeserializeConvertable(itemConverter, tokenReader, type, null)", span="1511-1511"];
m24_830 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializableItem(Newtonsoft.Json.Linq.JToken, System.Type, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty)", file="EntityKeyMemberConverter.cs", label="result = CreateValueInternal(tokenReader, type, itemContract, null, contract, member, null)", span="1513-1513"];
m24_828 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializableItem(Newtonsoft.Json.Linq.JToken, System.Type, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty)", file="EntityKeyMemberConverter.cs", label="itemConverter != null && itemConverter.CanRead", span="1510-1510"];
m24_826 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializableItem(Newtonsoft.Json.Linq.JToken, System.Type, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty)", file="EntityKeyMemberConverter.cs", label="CheckedRead(tokenReader)", span="1507-1507"];
m24_827 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializableItem(Newtonsoft.Json.Linq.JToken, System.Type, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty)", file="EntityKeyMemberConverter.cs", label="object result", span="1509-1509"];
m24_831 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializableItem(Newtonsoft.Json.Linq.JToken, System.Type, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty)", file="EntityKeyMemberConverter.cs", label="return result;", span="1515-1515"];
m24_832 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializableItem(Newtonsoft.Json.Linq.JToken, System.Type, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty)", file="EntityKeyMemberConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializableItem(Newtonsoft.Json.Linq.JToken, System.Type, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty)", span="1501-1501"];
m24_33 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1353-1353"];
m24_750 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="IWrappedCollection wrappedCollection = list as IWrappedCollection", span="1355-1355"];
m24_751 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="object underlyingList = wrappedCollection != null ? wrappedCollection.UnderlyingCollection : list", span="1356-1356"];
m24_752 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="id != null", span="1358-1358"];
m24_753 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="AddReference(reader, id, underlyingList)", span="1359-1359"];
m24_754 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="list.IsFixedSize", span="1362-1362"];
m24_755 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="reader.Skip()", span="1364-1364"];
m24_757 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="OnDeserializing(reader, contract, underlyingList)", span="1368-1368"];
m24_758 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="int initialDepth = reader.Depth", span="1370-1370"];
m24_759 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="contract.ItemContract == null", span="1372-1372"];
m24_760 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="contract.ItemContract = GetContractSafe(contract.CollectionItemType)", span="1373-1373"];
m24_761 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="JsonConverter collectionItemConverter = GetConverter(contract.ItemContract, null, contract, containerProperty)", span="1375-1375"];
m24_764 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="ReadForType(reader, contract.ItemContract, collectionItemConverter != null)", span="1384-1384"];
m24_765 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="reader.TokenType", span="1386-1386"];
m24_771 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="value = DeserializeConvertable(collectionItemConverter, reader, contract.CollectionItemType, null)", span="1397-1397"];
m24_772 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="value = CreateValueInternal(reader, contract.CollectionItemType, contract.ItemContract, null, contract, containerProperty, null)", span="1399-1399"];
m24_773 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="list.Add(value)", span="1401-1401"];
m24_775 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="JsonPosition errorPosition = reader.GetPosition(initialDepth)", span="1412-1412"];
m24_776 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="IsErrorHandled(underlyingList, contract, errorPosition.Position, reader as IJsonLineInfo, reader.Path, ex)", span="1414-1414"];
m24_777 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="HandleError(reader, true, initialDepth)", span="1416-1416"];
m24_779 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="throw JsonSerializationException.Create(reader, ''Infinite loop detected from error handling.'', ex);", span="1422-1422"];
m24_784 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="ThrowUnexpectedEndException(reader, contract, underlyingList, ''Unexpected end when deserializing array.'')", span="1437-1437"];
m24_785 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="OnDeserialized(reader, contract, underlyingList)", span="1439-1439"];
m24_756 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="return underlyingList;", span="1365-1365"];
m24_786 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="return underlyingList;", span="1440-1440"];
m24_762 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="int? previousErrorIndex = null", span="1377-1377"];
m24_770 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="collectionItemConverter != null && collectionItemConverter.CanRead", span="1396-1396"];
m24_763 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="bool finished = false", span="1379-1379"];
m24_778 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="previousErrorIndex != null && previousErrorIndex == errorPosition.Position", span="1418-1418"];
m24_782 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="!finished", span="1434-1434"];
m24_783 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="!finished", span="1436-1436"];
m24_766 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="JsonToken.EndArray", span="1388-1388"];
m24_768 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="JsonToken.Comment", span="1391-1391"];
m24_769 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="object value", span="1394-1394"];
m24_767 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="finished = true", span="1389-1389"];
m24_774 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label=Exception, span="1410-1410"];
m24_780 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="previousErrorIndex = errorPosition.Position", span="1426-1426"];
m24_781 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="throw;", span="1431-1431"];
m24_787 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1353-1353"];
m24_412 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", span="731-731"];
m24_413 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="EntityKeyMemberConverter.cs", label="contract == null", span="733-733"];
m24_414 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="EntityKeyMemberConverter.cs", label="throw JsonSerializationException.Create(reader, ''Could not resolve type '{0}' to a JsonContract.''.FormatWith(CultureInfo.InvariantCulture, objectType));", span="734-734"];
m24_415 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="EntityKeyMemberConverter.cs", label="JsonArrayContract arrayContract = contract as JsonArrayContract", span="736-736"];
m24_418 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="EntityKeyMemberConverter.cs", label="message = message.FormatWith(CultureInfo.InvariantCulture, objectType, GetExpectedDescription(contract))", span="741-741"];
m24_419 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="EntityKeyMemberConverter.cs", label="throw JsonSerializationException.Create(reader, message);", span="743-743"];
m24_416 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="EntityKeyMemberConverter.cs", label="arrayContract == null", span="737-737"];
m24_420 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="EntityKeyMemberConverter.cs", label="return arrayContract;", span="746-746"];
m24_417 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="EntityKeyMemberConverter.cs", label="string message = @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type '{0}' because the type requires a {1} to deserialize correctly.'' + Environment.NewLine +\r\n                                 @''To fix this error either change the JSON to a {1} or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.'' + Environment.NewLine", span="739-740"];
m24_421 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="EntityKeyMemberConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", span="731-731"];
m24_101 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", span="434-434"];
m24_42 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetContractSafe(System.Type)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetContractSafe(System.Type)", span="124-124"];
m24_43 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetContractSafe(System.Type)", file="EntityKeyMemberConverter.cs", label="type == null", span="126-126"];
m24_45 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetContractSafe(System.Type)", file="EntityKeyMemberConverter.cs", label="return Serializer._contractResolver.ResolveContract(type);", span="129-129"];
m24_44 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetContractSafe(System.Type)", file="EntityKeyMemberConverter.cs", label="return null;", span="127-127"];
m24_46 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetContractSafe(System.Type)", file="EntityKeyMemberConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetContractSafe(System.Type)", span="124-124"];
m24_281 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", span="521-521"];
m24_291 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="id = null", span="523-523"];
m24_293 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="reader.TokenType == JsonToken.StartObject", span="526-526"];
m24_294 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="JObject current = (JObject)reader.CurrentToken", span="528-528"];
m24_311 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Resolved object reference '{0}' to {1}.''.FormatWith(CultureInfo.InvariantCulture, reference, newValue.GetType())), null)", span="553-553"];
m24_312 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="reader.Skip()", span="555-555"];
m24_319 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="ResolveTypeName(typeTokenReader, ref objectType, ref contract, member, containerContract, containerMember, qualifiedTypeName)", span="565-565"];
m24_323 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="CheckedRead(reader)", span="572-572"];
m24_324 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="reader.TokenType == JsonToken.PropertyName", span="573-573"];
m24_325 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="(string)reader.Value == JsonTypeReflector.ValuePropertyName", span="575-575"];
m24_327 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="CheckedRead(reader)", span="579-579"];
m24_328 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="reader.Skip()", span="580-580"];
m24_336 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="newValue = CreateList(listReader, objectType, contract, member, existingValue, id)", span="594-594"];
m24_337 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="reader.Skip()", span="596-596"];
m24_339 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="CheckedRead(reader)", span="601-601"];
m24_292 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="newValue = null", span="524-524"];
m24_295 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="JToken refToken = current[JsonTypeReflector.RefPropertyName]", span="530-530"];
m24_314 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="JToken typeToken = current[JsonTypeReflector.TypePropertyName]", span="559-559"];
m24_320 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="JToken valueToken = current[JsonTypeReflector.ValuePropertyName]", span="567-567"];
m24_329 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="JToken idToken = current[JsonTypeReflector.IdPropertyName]", span="584-584"];
m24_332 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="JToken valuesToken = current[JsonTypeReflector.ArrayValuesPropertyName]", span="589-589"];
m24_296 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="refToken != null", span="531-531"];
m24_297 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="refToken.Type != JTokenType.String && refToken.Type != JTokenType.Null", span="533-533"];
m24_298 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="throw JsonSerializationException.Create(refToken, refToken.Path, ''JSON reference {0} property must have a string or null value.''.FormatWith(CultureInfo.InvariantCulture, JsonTypeReflector.RefPropertyName), null);", span="534-534"];
m24_299 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="JToken property = refToken.Parent", span="536-536"];
m24_305 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="string reference = (string)refToken", span="543-543"];
m24_300 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="JToken additionalContent = null", span="537-537"];
m24_301 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="property.Next != null", span="538-538"];
m24_302 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="additionalContent = property.Next", span="539-539"];
m24_303 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="property.Previous != null", span="540-540"];
m24_304 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="additionalContent = property.Previous", span="541-541"];
m24_307 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="additionalContent != null", span="547-547"];
m24_308 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="throw JsonSerializationException.Create(additionalContent, additionalContent.Path, ''Additional content found in JSON reference object. A JSON reference object should only have a {0} property.''.FormatWith(CultureInfo.InvariantCulture, JsonTypeReflector.RefPropertyName), null);", span="548-548"];
m24_306 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="reference != null", span="545-545"];
m24_309 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="newValue = Serializer.GetReferenceResolver().ResolveReference(this, reference)", span="550-550"];
m24_310 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="552-552"];
m24_313 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="return true;", span="556-556"];
m24_315 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="typeToken != null", span="560-560"];
m24_316 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="string qualifiedTypeName = (string)typeToken", span="562-562"];
m24_317 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="JsonReader typeTokenReader = typeToken.CreateReader()", span="563-563"];
m24_318 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="CheckedRead(typeTokenReader)", span="564-564"];
m24_321 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="valueToken != null", span="568-568"];
m24_322 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label=true, span="570-570"];
m24_326 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="return false;", span="576-576"];
m24_330 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="idToken != null", span="585-585"];
m24_331 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="id = (string)idToken", span="587-587"];
m24_333 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="valuesToken != null", span="590-590"];
m24_334 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="JsonReader listReader = valuesToken.CreateReader()", span="592-592"];
m24_335 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="CheckedRead(listReader)", span="593-593"];
m24_338 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="return true;", span="597-597"];
m24_340 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="return false;", span="602-602"];
m24_341 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", span="521-521"];
m24_628 [cluster="Newtonsoft.Json.Serialization.JsonContract.InvokeOnDeserialized(object, System.Runtime.Serialization.StreamingContext)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonContract.InvokeOnDeserialized(object, System.Runtime.Serialization.StreamingContext)", span="378-378"];
m24_1037 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32()", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsInt32()", span="371-371"];
m24_951 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", span="2041-2041"];
m24_1127 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="EntityKeyMemberConverter.cs", label="propertiesPresence != null", span="2043-2043"];
m24_1128 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="EntityKeyMemberConverter.cs", label=propertiesPresence, span="2045-2045"];
m24_1132 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="EntityKeyMemberConverter.cs", label="Required resolvedRequired = property._required ?? contract.ItemRequired ?? Required.Default", span="2054-2054"];
m24_1136 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="EntityKeyMemberConverter.cs", label="throw JsonSerializationException.Create(reader, ''Required property '{0}' not found in JSON.''.FormatWith(CultureInfo.InvariantCulture, property.PropertyName));", span="2060-2060"];
m24_1140 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="EntityKeyMemberConverter.cs", label="property.ValueProvider.SetValue(newObject, EnsureType(reader, property.GetResolvedDefaultValue(), CultureInfo.InvariantCulture, property.PropertyContract, property.PropertyType))", span="2066-2066"];
m24_1143 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="EntityKeyMemberConverter.cs", label="throw JsonSerializationException.Create(reader, ''Required property '{0}' expects a value but got null.''.FormatWith(CultureInfo.InvariantCulture, property.PropertyName));", span="2070-2070"];
m24_1145 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="EntityKeyMemberConverter.cs", label="IsErrorHandled(newObject, contract, property.PropertyName, reader as IJsonLineInfo, reader.Path, ex)", span="2076-2076"];
m24_1146 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="EntityKeyMemberConverter.cs", label="HandleError(reader, true, initialDepth)", span="2077-2077"];
m24_1129 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="EntityKeyMemberConverter.cs", label="JsonProperty property = propertyPresence.Key", span="2047-2047"];
m24_1130 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="EntityKeyMemberConverter.cs", label="PropertyPresence presence = propertyPresence.Value", span="2048-2048"];
m24_1137 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="EntityKeyMemberConverter.cs", label="property.PropertyContract == null", span="2062-2062"];
m24_1138 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="EntityKeyMemberConverter.cs", label="property.PropertyContract = GetContractSafe(property.PropertyType)", span="2063-2063"];
m24_1139 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="EntityKeyMemberConverter.cs", label="HasFlag(property.DefaultValueHandling.GetValueOrDefault(Serializer._defaultValueHandling), DefaultValueHandling.Populate) && property.Writable && !property.Ignored", span="2065-2065"];
m24_1131 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="EntityKeyMemberConverter.cs", label="presence == PropertyPresence.None || presence == PropertyPresence.Null", span="2050-2050"];
m24_1133 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="EntityKeyMemberConverter.cs", label=presence, span="2056-2056"];
m24_1135 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="EntityKeyMemberConverter.cs", label="resolvedRequired == Required.AllowNull || resolvedRequired == Required.Always", span="2059-2059"];
m24_1142 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="EntityKeyMemberConverter.cs", label="resolvedRequired == Required.Always", span="2069-2069"];
m24_1134 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="EntityKeyMemberConverter.cs", label="PropertyPresence.None", span="2058-2058"];
m24_1141 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="EntityKeyMemberConverter.cs", label="PropertyPresence.Null", span="2068-2068"];
m24_1144 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="EntityKeyMemberConverter.cs", label=Exception, span="2074-2074"];
m24_1147 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="EntityKeyMemberConverter.cs", label="throw;", span="2079-2079"];
m24_1148 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="EntityKeyMemberConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", span="2041-2041"];
m24_520 [cluster="Newtonsoft.Json.Serialization.IValueProvider.GetValue(object)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Serialization.IValueProvider.GetValue(object)", span="44-44"];
m24_163 [cluster="System.Convert.FromBase64String(string)", file="EntityKeyMemberConverter.cs", label="Entry System.Convert.FromBase64String(string)", span="0-0"];
m24_623 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserialized(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserialized(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", span="1106-1106"];
m24_624 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserialized(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="EntityKeyMemberConverter.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="1108-1108"];
m24_625 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserialized(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="EntityKeyMemberConverter.cs", label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Finished deserializing {0}''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType)), null)", span="1109-1109"];
m24_626 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserialized(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="EntityKeyMemberConverter.cs", label="contract.InvokeOnDeserialized(value, Serializer._context)", span="1111-1111"];
m24_627 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserialized(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="EntityKeyMemberConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserialized(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", span="1106-1106"];
m24_598 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateTemporaryCollection()", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonArrayContract.CreateTemporaryCollection()", span="248-248"];
m24_71 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="EntityKeyMemberConverter.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m24_819 [cluster="System.Runtime.Serialization.SerializationInfo.SerializationInfo(System.Type, System.Runtime.Serialization.IFormatterConverter)", file="EntityKeyMemberConverter.cs", label="Entry System.Runtime.Serialization.SerializationInfo.SerializationInfo(System.Type, System.Runtime.Serialization.IFormatterConverter)", span="0-0"];
m24_491 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", span="628-628"];
m24_460 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", span="1027-1027"];
m24_577 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="EntityKeyMemberConverter.cs", label="!contract.CanDeserialize", span="1030-1030"];
m24_578 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="EntityKeyMemberConverter.cs", label="throw JsonSerializationException.Create(reader, ''Cannot create and populate list type {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.CreatedType));", span="1031-1031"];
m24_579 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="EntityKeyMemberConverter.cs", label="contract.IsReadOnlyOrFixedSize", span="1033-1033"];
m24_581 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="EntityKeyMemberConverter.cs", label="IList list = contract.CreateTemporaryCollection()", span="1036-1036"];
m24_582 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="EntityKeyMemberConverter.cs", label="contract.ShouldCreateWrapper", span="1038-1038"];
m24_583 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="EntityKeyMemberConverter.cs", label="list = contract.CreateWrapper(list)", span="1039-1039"];
m24_585 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="EntityKeyMemberConverter.cs", label="contract.DefaultCreator != null && (!contract.DefaultCreatorNonPublic || Serializer._constructorHandling == ConstructorHandling.AllowNonPublicDefaultConstructor)", span="1043-1043"];
m24_586 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="EntityKeyMemberConverter.cs", label="object list = contract.DefaultCreator()", span="1045-1045"];
m24_587 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="EntityKeyMemberConverter.cs", label="contract.ShouldCreateWrapper", span="1047-1047"];
m24_588 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="EntityKeyMemberConverter.cs", label="list = contract.CreateWrapper(list)", span="1048-1048"];
m24_591 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="EntityKeyMemberConverter.cs", label="contract.HasParametrizedCreator", span="1053-1053"];
m24_593 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="EntityKeyMemberConverter.cs", label="return contract.CreateTemporaryCollection();", span="1056-1056"];
m24_594 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="EntityKeyMemberConverter.cs", label="!contract.IsInstantiable", span="1060-1060"];
m24_595 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="EntityKeyMemberConverter.cs", label="throw JsonSerializationException.Create(reader, ''Could not create an instance of type {0}. Type is an interface or abstract class and cannot be instantiated.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="1061-1061"];
m24_596 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="EntityKeyMemberConverter.cs", label="throw JsonSerializationException.Create(reader, ''Unable to find a constructor to use for type {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="1063-1063"];
m24_580 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="EntityKeyMemberConverter.cs", label="createdFromNonDefaultCreator = true", span="1035-1035"];
m24_584 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="EntityKeyMemberConverter.cs", label="return list;", span="1041-1041"];
m24_590 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="EntityKeyMemberConverter.cs", label="return (IList)list;", span="1051-1051"];
m24_589 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="EntityKeyMemberConverter.cs", label="createdFromNonDefaultCreator = false", span="1050-1050"];
m24_592 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="EntityKeyMemberConverter.cs", label="createdFromNonDefaultCreator = true", span="1055-1055"];
m24_597 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="EntityKeyMemberConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", span="1027-1027"];
m24_940 [cluster="Unk.ToArray", file="EntityKeyMemberConverter.cs", label="Entry Unk.ToArray", span=""];
m24_161 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", span="834-834"];
m24_468 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="EntityKeyMemberConverter.cs", label="targetType == null", span="836-836"];
m24_469 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="EntityKeyMemberConverter.cs", label="return value;", span="837-837"];
m24_470 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="EntityKeyMemberConverter.cs", label="Type valueType = ReflectionUtils.GetObjectType(value)", span="839-839"];
m24_471 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="EntityKeyMemberConverter.cs", label="valueType != targetType", span="843-843"];
m24_472 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="EntityKeyMemberConverter.cs", label="value == null && contract.IsNullable", span="845-845"];
m24_474 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="EntityKeyMemberConverter.cs", label="contract.IsConvertable", span="850-850"];
m24_475 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="EntityKeyMemberConverter.cs", label="JsonPrimitiveContract primitiveContract = (JsonPrimitiveContract)contract", span="852-852"];
m24_476 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="EntityKeyMemberConverter.cs", label="contract.IsEnum", span="854-854"];
m24_477 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="EntityKeyMemberConverter.cs", label="value is string", span="856-856"];
m24_478 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="EntityKeyMemberConverter.cs", label="return Enum.Parse(contract.NonNullableUnderlyingType, value.ToString(), true);", span="857-857"];
m24_480 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="EntityKeyMemberConverter.cs", label="return Enum.ToObject(contract.NonNullableUnderlyingType, value);", span="859-859"];
m24_481 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="EntityKeyMemberConverter.cs", label="value is BigInteger", span="863-863"];
m24_482 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="EntityKeyMemberConverter.cs", label="return ConvertUtils.FromBigInteger((BigInteger)value, contract.NonNullableUnderlyingType);", span="864-864"];
m24_483 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="EntityKeyMemberConverter.cs", label="return Convert.ChangeType(value, contract.NonNullableUnderlyingType, culture);", span="868-868"];
m24_484 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="EntityKeyMemberConverter.cs", label="return ConvertUtils.ConvertOrCast(value, culture, contract.NonNullableUnderlyingType);", span="871-871"];
m24_486 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="EntityKeyMemberConverter.cs", label="throw JsonSerializationException.Create(reader, ''Error converting value {0} to type '{1}'.''.FormatWith(CultureInfo.InvariantCulture, MiscellaneousUtils.FormatValueForPrint(value), targetType), ex);", span="875-875"];
m24_487 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="EntityKeyMemberConverter.cs", label="return value;", span="879-879"];
m24_473 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="EntityKeyMemberConverter.cs", label="return null;", span="846-846"];
m24_479 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="EntityKeyMemberConverter.cs", label="ConvertUtils.IsInteger(primitiveContract.TypeCode)", span="858-858"];
m24_485 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="EntityKeyMemberConverter.cs", label=Exception, span="873-873"];
m24_488 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="EntityKeyMemberConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", span="834-834"];
m24_411 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", span="87-87"];
m24_409 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string, out string, out string)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string, out string, out string)", span="786-786"];
m24_949 [cluster="System.Collections.IDictionary.Add(object, object)", file="EntityKeyMemberConverter.cs", label="Entry System.Collections.IDictionary.Add(object, object)", span="0-0"];
m24_739 [cluster="System.Collections.Generic.Stack<T>.Pop()", file="EntityKeyMemberConverter.cs", label="Entry System.Collections.Generic.Stack<T>.Pop()", span="0-0"];
m24_821 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", file="EntityKeyMemberConverter.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", span="0-0"];
m24_80 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetInternalSerializer()", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetInternalSerializer()", span="184-184"];
m24_81 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetInternalSerializer()", file="EntityKeyMemberConverter.cs", label="_internalSerializer == null", span="186-186"];
m24_82 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetInternalSerializer()", file="EntityKeyMemberConverter.cs", label="_internalSerializer = new JsonSerializerProxy(this)", span="187-187"];
m24_83 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetInternalSerializer()", file="EntityKeyMemberConverter.cs", label="return _internalSerializer;", span="189-189"];
m24_84 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetInternalSerializer()", file="EntityKeyMemberConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetInternalSerializer()", span="184-184"];
m24_76 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="52-52"];
m24_495 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", span="562-562"];
m24_463 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)", span="282-282"];
m24_523 [cluster="System.Action<T1, T2>.Invoke(T1, T2)", file="EntityKeyMemberConverter.cs", label="Entry System.Action<T1, T2>.Invoke(T1, T2)", span="0-0"];
m24_122 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, bool, bool)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, bool, bool)", span="473-473"];
m24_346 [cluster="Newtonsoft.Json.Serialization.ITraceWriter.Trace(System.Diagnostics.TraceLevel, string, System.Exception)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Serialization.ITraceWriter.Trace(System.Diagnostics.TraceLevel, string, System.Exception)", span="25-25"];
m24_682 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(string, Newtonsoft.Json.DateParseHandling, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out object)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(string, Newtonsoft.Json.DateParseHandling, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out object)", span="286-286"];
m24_159 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", span="370-370"];
m24_199 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="string id", span="372-372"];
m24_200 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="Type resolvedObjectType = objectType", span="373-373"];
m24_202 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="CheckedRead(reader)", span="378-378"];
m24_205 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="var tokenReader = reader as JTokenReader", span="383-383"];
m24_207 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="JToken t = JToken.ReadFrom(reader)", span="386-386"];
m24_209 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="tokenReader.Culture = reader.Culture", span="388-388"];
m24_210 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="tokenReader.DateFormatString = reader.DateFormatString", span="389-389"];
m24_211 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="tokenReader.DateParseHandling = reader.DateParseHandling", span="390-390"];
m24_212 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="tokenReader.DateTimeZoneHandling = reader.DateTimeZoneHandling", span="391-391"];
m24_213 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="tokenReader.FloatParseHandling = reader.FloatParseHandling", span="392-392"];
m24_214 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="tokenReader.SupportMultipleContent = reader.SupportMultipleContent", span="393-393"];
m24_218 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="ReadMetadataPropertiesToken(tokenReader, ref resolvedObjectType, ref contract, member, containerContract, containerMember, existingValue, out newValue, out id)", span="402-402"];
m24_220 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="CheckedRead(reader)", span="407-407"];
m24_222 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="ReadMetadataProperties(reader, ref resolvedObjectType, ref contract, member, containerContract, containerMember, existingValue, out newValue, out id)", span="409-409"];
m24_224 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="HasNoDefinedType(contract)", span="413-413"];
m24_225 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="return CreateJObject(reader);", span="414-414"];
m24_226 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="contract.ContractType", span="416-416"];
m24_229 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="JsonObjectContract objectContract = (JsonObjectContract)contract", span="421-421"];
m24_231 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="existingValue != null && (resolvedObjectType == objectType || resolvedObjectType.IsAssignableFrom(existingValue.GetType()))", span="424-424"];
m24_232 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="targetObject = existingValue", span="425-425"];
m24_233 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="targetObject = CreateNewObject(reader, objectContract, member, containerMember, id, out createdFromNonDefaultCreator)", span="427-427"];
m24_236 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="return PopulateObject(targetObject, reader, objectContract, member, id);", span="433-433"];
m24_238 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="JsonPrimitiveContract primitiveContract = (JsonPrimitiveContract)contract", span="437-437"];
m24_239 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="Serializer.MetadataPropertyHandling != MetadataPropertyHandling.Ignore\r\n                        && reader.TokenType == JsonToken.PropertyName\r\n                        && string.Equals(reader.Value.ToString(), JsonTypeReflector.ValuePropertyName, StringComparison.Ordinal)", span="439-441"];
m24_240 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="CheckedRead(reader)", span="443-443"];
m24_241 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="reader.TokenType == JsonToken.StartObject", span="447-447"];
m24_242 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected token when deserializing primitive value: '' + reader.TokenType);", span="448-448"];
m24_243 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="object value = CreateValueInternal(reader, resolvedObjectType, primitiveContract, member, null, null, existingValue)", span="450-450"];
m24_244 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="CheckedRead(reader)", span="452-452"];
m24_247 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="JsonDictionaryContract dictionaryContract = (JsonDictionaryContract)contract", span="459-459"];
m24_249 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="existingValue == null", span="462-462"];
m24_251 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="IDictionary dictionary = CreateNewDictionary(reader, dictionaryContract, out createdFromNonDefaultCreator)", span="465-465"];
m24_254 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="throw JsonSerializationException.Create(reader, ''Cannot preserve reference to readonly dictionary, or dictionary created from a non-default constructor: {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="470-470"];
m24_255 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="contract.OnSerializingCallbacks.Count > 0", span="472-472"];
m24_256 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="throw JsonSerializationException.Create(reader, ''Cannot call OnSerializing on readonly dictionary, or dictionary created from a non-default constructor: {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="473-473"];
m24_257 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="contract.OnErrorCallbacks.Count > 0", span="475-475"];
m24_258 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="throw JsonSerializationException.Create(reader, ''Cannot call OnError on readonly list, or dictionary created from a non-default constructor: {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="476-476"];
m24_260 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="throw JsonSerializationException.Create(reader, ''Cannot deserialize readonly or fixed size dictionary: {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="479-479"];
m24_261 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="PopulateDictionary(dictionary, reader, dictionaryContract, member, id)", span="482-482"];
m24_267 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="targetDictionary = PopulateDictionary(dictionaryContract.ShouldCreateWrapper ? dictionaryContract.CreateWrapper(existingValue) : (IDictionary)existingValue, reader, dictionaryContract, member, id)", span="497-497"];
m24_270 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="JsonDynamicContract dynamicContract = (JsonDynamicContract)contract", span="504-504"];
m24_271 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="return CreateDynamic(reader, dynamicContract, member, id);", span="505-505"];
m24_273 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="JsonISerializableContract serializableContract = (JsonISerializableContract)contract", span="509-509"];
m24_274 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="return CreateISerializable(reader, serializableContract, member, id);", span="510-510"];
m24_276 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="message = message.FormatWith(CultureInfo.InvariantCulture, resolvedObjectType, GetExpectedDescription(contract))", span="516-516"];
m24_277 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="throw JsonSerializationException.Create(reader, message);", span="518-518"];
m24_201 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="Serializer.MetadataPropertyHandling == MetadataPropertyHandling.Ignore", span="375-375"];
m24_204 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="Serializer.MetadataPropertyHandling == MetadataPropertyHandling.ReadAhead", span="381-381"];
m24_203 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="id = null", span="379-379"];
m24_206 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="tokenReader == null", span="384-384"];
m24_217 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="object newValue", span="401-401"];
m24_208 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="tokenReader = (JTokenReader)t.CreateReader()", span="387-387"];
m24_215 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="CheckedRead(tokenReader)", span="396-396"];
m24_216 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="reader = tokenReader", span="398-398"];
m24_219 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="return newValue;", span="403-403"];
m24_253 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="id != null", span="469-469"];
m24_221 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="object newValue", span="408-408"];
m24_223 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="return newValue;", span="410-410"];
m24_227 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="JsonContractType.Object", span="418-418"];
m24_237 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="JsonContractType.Primitive", span="435-435"];
m24_246 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="JsonContractType.Dictionary", span="457-457"];
m24_269 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="JsonContractType.Dynamic", span="503-503"];
m24_272 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="JsonContractType.Serializable", span="508-508"];
m24_228 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="bool createdFromNonDefaultCreator = false", span="420-420"];
m24_234 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label=createdFromNonDefaultCreator, span="430-430"];
m24_230 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="object targetObject", span="422-422"];
m24_235 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="return targetObject;", span="431-431"];
m24_275 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="string message = @''Cannot deserialize the current JSON object (e.g. {{''''name'''':''''value''''}}) into type '{0}' because the type requires a {1} to deserialize correctly.'' + Environment.NewLine +\r\n                             @''To fix this error either change the JSON to a {1} or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.'' + Environment.NewLine", span="514-515"];
m24_245 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="return value;", span="453-453"];
m24_248 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="object targetDictionary", span="460-460"];
m24_259 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="!dictionaryContract.HasParametrizedCreator", span="478-478"];
m24_263 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="return dictionaryContract.ParametrizedCreator(dictionary);", span="486-486"];
m24_250 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="bool createdFromNonDefaultCreator", span="464-464"];
m24_252 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label=createdFromNonDefaultCreator, span="467-467"];
m24_262 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label=createdFromNonDefaultCreator, span="484-484"];
m24_264 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="dictionary is IWrappedDictionary", span="488-488"];
m24_265 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="return ((IWrappedDictionary)dictionary).UnderlyingDictionary;", span="490-490"];
m24_266 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="targetDictionary = dictionary", span="493-493"];
m24_268 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="return targetDictionary;", span="500-500"];
m24_278 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", span="370-370"];
m24_347 [cluster="Newtonsoft.Json.JsonReader.Skip()", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.JsonReader.Skip()", span="820-820"];
m24_683 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ThrowUnexpectedEndException(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object, string)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ThrowUnexpectedEndException(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object, string)", span="1338-1338"];
m24_744 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ThrowUnexpectedEndException(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object, string)", file="EntityKeyMemberConverter.cs", label="throw JsonSerializationException.Create(reader, message);", span="1342-1342"];
m24_746 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ThrowUnexpectedEndException(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object, string)", file="EntityKeyMemberConverter.cs", label="IsErrorHandled(currentObject, contract, null, reader as IJsonLineInfo, reader.Path, ex)", span="1346-1346"];
m24_747 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ThrowUnexpectedEndException(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object, string)", file="EntityKeyMemberConverter.cs", label="HandleError(reader, false, 0)", span="1347-1347"];
m24_745 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ThrowUnexpectedEndException(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object, string)", file="EntityKeyMemberConverter.cs", label=Exception, span="1344-1344"];
m24_748 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ThrowUnexpectedEndException(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object, string)", file="EntityKeyMemberConverter.cs", label="throw;", span="1349-1349"];
m24_749 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ThrowUnexpectedEndException(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object, string)", file="EntityKeyMemberConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ThrowUnexpectedEndException(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object, string)", span="1338-1338"];
m24_497 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", span="882-882"];
m24_498 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="EntityKeyMemberConverter.cs", label="object currentValue", span="884-884"];
m24_502 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="EntityKeyMemberConverter.cs", label="CalculatePropertyDetails(property, ref propertyConverter, containerContract, containerProperty, reader, target, out useExistingValue, out currentValue, out propertyContract, out gottenCurrentValue)", span="889-889"];
m24_506 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="EntityKeyMemberConverter.cs", label="!gottenCurrentValue && target != null && property.Readable", span="896-896"];
m24_507 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="EntityKeyMemberConverter.cs", label="currentValue = property.ValueProvider.GetValue(target)", span="897-897"];
m24_508 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="EntityKeyMemberConverter.cs", label="value = DeserializeConvertable(propertyConverter, reader, property.PropertyType, currentValue)", span="899-899"];
m24_509 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="EntityKeyMemberConverter.cs", label="value = CreateValueInternal(reader, property.PropertyType, propertyContract, property, containerContract, containerProperty, (useExistingValue) ? currentValue : null)", span="903-903"];
m24_510 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="EntityKeyMemberConverter.cs", label="(!useExistingValue || value != currentValue)\r\n                && ShouldSetPropertyValue(property, value)", span="909-910"];
m24_511 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="EntityKeyMemberConverter.cs", label="property.ValueProvider.SetValue(target, value)", span="912-912"];
m24_512 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="EntityKeyMemberConverter.cs", label="property.SetIsSpecified != null", span="914-914"];
m24_514 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="EntityKeyMemberConverter.cs", label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''IsSpecified for property '{0}' on {1} set to true.''.FormatWith(CultureInfo.InvariantCulture, property.PropertyName, property.DeclaringType)), null)", span="917-917"];
m24_515 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="EntityKeyMemberConverter.cs", label="property.SetIsSpecified(target, true)", span="919-919"];
m24_499 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="EntityKeyMemberConverter.cs", label="bool useExistingValue", span="885-885"];
m24_500 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="EntityKeyMemberConverter.cs", label="JsonContract propertyContract", span="886-886"];
m24_501 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="EntityKeyMemberConverter.cs", label="bool gottenCurrentValue", span="887-887"];
m24_503 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="EntityKeyMemberConverter.cs", label="return false;", span="890-890"];
m24_504 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="EntityKeyMemberConverter.cs", label="object value", span="892-892"];
m24_505 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="EntityKeyMemberConverter.cs", label="propertyConverter != null && propertyConverter.CanRead", span="894-894"];
m24_517 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="EntityKeyMemberConverter.cs", label="return useExistingValue;", span="926-926"];
m24_513 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="EntityKeyMemberConverter.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="916-916"];
m24_516 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="EntityKeyMemberConverter.cs", label="return true;", span="922-922"];
m24_518 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="EntityKeyMemberConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", span="882-882"];
m24_35 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", span="82-82"];
m24_345 [cluster="Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", span="104-104"];
m24_34 [cluster="string.FormatWith(System.IFormatProvider, object)", file="EntityKeyMemberConverter.cs", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
m24_348 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="689-689"];
m24_391 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="TypeNameHandling resolvedTypeNameHandling =\r\n                ((member != null) ? member.TypeNameHandling : null)\r\n                ?? ((containerContract != null) ? containerContract.ItemTypeNameHandling : null)\r\n                ?? ((containerMember != null) ? containerMember.ItemTypeNameHandling : null)\r\n                ?? Serializer._typeNameHandling", span="691-695"];
m24_395 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="ReflectionUtils.SplitFullyQualifiedTypeName(qualifiedTypeName, out typeName, out assemblyName)", span="701-701"];
m24_399 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="throw JsonSerializationException.Create(reader, ''Error resolving type specified in JSON '{0}'.''.FormatWith(CultureInfo.InvariantCulture, qualifiedTypeName), ex);", span="710-710"];
m24_401 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="throw JsonSerializationException.Create(reader, ''Type specified in JSON '{0}' was not resolved.''.FormatWith(CultureInfo.InvariantCulture, qualifiedTypeName));", span="714-714"];
m24_403 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Resolved type '{0}' to {1}.''.FormatWith(CultureInfo.InvariantCulture, qualifiedTypeName, specifiedType)), null)", span="717-717"];
m24_404 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="objectType != null\r\n#if !(NET35 || NET20 || PORTABLE40)\r\n                    && objectType != typeof(IDynamicMetaObjectProvider)\r\n#endif\r\n                    && !objectType.IsAssignableFrom(specifiedType)", span="719-723"];
m24_405 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="throw JsonSerializationException.Create(reader, ''Type specified in JSON '{0}' is not compatible with '{1}'.''.FormatWith(CultureInfo.InvariantCulture, specifiedType.AssemblyQualifiedName, objectType.AssemblyQualifiedName));", span="724-724"];
m24_392 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="resolvedTypeNameHandling != TypeNameHandling.None", span="697-697"];
m24_393 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="string typeName", span="699-699"];
m24_394 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="string assemblyName", span="700-700"];
m24_396 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="Type specifiedType", span="703-703"];
m24_397 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="specifiedType = Serializer._binder.BindToType(assemblyName, typeName)", span="706-706"];
m24_398 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label=Exception, span="708-708"];
m24_400 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="specifiedType == null", span="713-713"];
m24_406 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="objectType = specifiedType", span="726-726"];
m24_407 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="contract = GetContractSafe(specifiedType)", span="727-727"];
m24_402 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="716-716"];
m24_408 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="689-689"];
m24_464 [cluster="System.Array.CreateInstance(System.Type, int)", file="EntityKeyMemberConverter.cs", label="Entry System.Array.CreateInstance(System.Type, int)", span="0-0"];
m24_737 [cluster="System.Collections.Generic.Stack<T>.Stack()", file="EntityKeyMemberConverter.cs", label="Entry System.Collections.Generic.Stack<T>.Stack()", span="0-0"];
m24_946 [cluster="System.Collections.ObjectModel.Collection<T>.IndexOf(T)", file="EntityKeyMemberConverter.cs", label="Entry System.Collections.ObjectModel.Collection<T>.IndexOf(T)", span="0-0"];
m24_939 [cluster="Unk.Select", file="EntityKeyMemberConverter.cs", label="Entry Unk.Select", span=""];
m24_32 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", span="227-227"];
m24_522 [cluster="Newtonsoft.Json.Serialization.IValueProvider.SetValue(object, object)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Serialization.IValueProvider.SetValue(object, object)", span="37-37"];
m24_617 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserializing(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserializing(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", span="1098-1098"];
m24_618 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserializing(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="EntityKeyMemberConverter.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="1100-1100"];
m24_619 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserializing(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="EntityKeyMemberConverter.cs", label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Started deserializing {0}''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType)), null)", span="1101-1101"];
m24_620 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserializing(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="EntityKeyMemberConverter.cs", label="contract.InvokeOnDeserializing(value, Serializer._context)", span="1103-1103"];
m24_621 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserializing(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="EntityKeyMemberConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserializing(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", span="1098-1098"];
m24_198 [cluster="Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Type)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Type)", span="954-954"];
m24_31 [cluster="Newtonsoft.Json.JsonReader.Read()", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.JsonReader.Read()", span="365-365"];
m24_160 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", span="755-755"];
m24_425 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="EntityKeyMemberConverter.cs", label="object value", span="757-757"];
m24_426 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="EntityKeyMemberConverter.cs", label="HasNoDefinedType(contract)", span="759-759"];
m24_427 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="EntityKeyMemberConverter.cs", label="return CreateJToken(reader, contract);", span="760-760"];
m24_428 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="EntityKeyMemberConverter.cs", label="JsonArrayContract arrayContract = EnsureArrayContract(reader, objectType, contract)", span="762-762"];
m24_429 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="EntityKeyMemberConverter.cs", label="existingValue == null", span="764-764"];
m24_431 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="EntityKeyMemberConverter.cs", label="IList list = CreateNewList(reader, arrayContract, out createdFromNonDefaultCreator)", span="767-767"];
m24_433 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="EntityKeyMemberConverter.cs", label="id != null", span="771-771"];
m24_434 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="EntityKeyMemberConverter.cs", label="throw JsonSerializationException.Create(reader, ''Cannot preserve reference to array or readonly list, or list created from a non-default constructor: {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="772-772"];
m24_435 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="EntityKeyMemberConverter.cs", label="contract.OnSerializingCallbacks.Count > 0", span="774-774"];
m24_436 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="EntityKeyMemberConverter.cs", label="throw JsonSerializationException.Create(reader, ''Cannot call OnSerializing on an array or readonly list, or list created from a non-default constructor: {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="775-775"];
m24_437 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="EntityKeyMemberConverter.cs", label="contract.OnErrorCallbacks.Count > 0", span="777-777"];
m24_438 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="EntityKeyMemberConverter.cs", label="throw JsonSerializationException.Create(reader, ''Cannot call OnError on an array or readonly list, or list created from a non-default constructor: {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="778-778"];
m24_440 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="EntityKeyMemberConverter.cs", label="throw JsonSerializationException.Create(reader, ''Cannot deserialize readonly or fixed size list: {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="781-781"];
m24_442 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="EntityKeyMemberConverter.cs", label="PopulateList(list, reader, arrayContract, member, id)", span="785-785"];
m24_443 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="EntityKeyMemberConverter.cs", label="PopulateMultidimensionalArray(list, reader, arrayContract, member, id)", span="787-787"];
m24_446 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="EntityKeyMemberConverter.cs", label="list = CollectionUtils.ToMultidimensionalArray(list, arrayContract.CollectionItemType, contract.CreatedType.GetArrayRank())", span="793-793"];
m24_456 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="EntityKeyMemberConverter.cs", label="throw JsonSerializationException.Create(reader, ''Cannot populate list type {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.CreatedType));", span="817-817"];
m24_457 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="EntityKeyMemberConverter.cs", label="value = PopulateList((arrayContract.ShouldCreateWrapper) ? arrayContract.CreateWrapper(existingValue) : (IList)existingValue, reader, arrayContract, member, id)", span="819-819"];
m24_439 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="EntityKeyMemberConverter.cs", label="!arrayContract.HasParametrizedCreator && !arrayContract.IsArray", span="780-780"];
m24_441 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="EntityKeyMemberConverter.cs", label="!arrayContract.IsMultidimensionalArray", span="784-784"];
m24_445 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="EntityKeyMemberConverter.cs", label="arrayContract.IsMultidimensionalArray", span="791-791"];
m24_447 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="EntityKeyMemberConverter.cs", label="arrayContract.IsArray", span="795-795"];
m24_448 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="EntityKeyMemberConverter.cs", label="Array a = Array.CreateInstance(arrayContract.CollectionItemType, list.Count)", span="797-797"];
m24_451 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="EntityKeyMemberConverter.cs", label="return arrayContract.ParametrizedCreator(list);", span="804-804"];
m24_455 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="EntityKeyMemberConverter.cs", label="!arrayContract.CanDeserialize", span="816-816"];
m24_430 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="EntityKeyMemberConverter.cs", label="bool createdFromNonDefaultCreator", span="766-766"];
m24_432 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="EntityKeyMemberConverter.cs", label=createdFromNonDefaultCreator, span="769-769"];
m24_444 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="EntityKeyMemberConverter.cs", label=createdFromNonDefaultCreator, span="789-789"];
m24_449 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="EntityKeyMemberConverter.cs", label="list.CopyTo(a, 0)", span="798-798"];
m24_452 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="EntityKeyMemberConverter.cs", label="list is IWrappedCollection", span="807-807"];
m24_453 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="EntityKeyMemberConverter.cs", label="return ((IWrappedCollection)list).UnderlyingCollection;", span="809-809"];
m24_454 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="EntityKeyMemberConverter.cs", label="value = list", span="812-812"];
m24_450 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="EntityKeyMemberConverter.cs", label="list = a", span="799-799"];
m24_458 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="EntityKeyMemberConverter.cs", label="return value;", span="822-822"];
m24_459 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="EntityKeyMemberConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", span="755-755"];
m24_283 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasNoDefinedType(Newtonsoft.Json.Serialization.JsonContract)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasNoDefinedType(Newtonsoft.Json.Serialization.JsonContract)", span="825-825"];
m24_466 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasNoDefinedType(Newtonsoft.Json.Serialization.JsonContract)", file="EntityKeyMemberConverter.cs", label="return (contract == null || contract.UnderlyingType == typeof(object) || contract.ContractType == JsonContractType.Linq\r\n#if !(NET35 || NET20 || PORTABLE40)\r\n                    || contract.UnderlyingType == typeof(IDynamicMetaObjectProvider)\r\n#endif\r\n                );", span="827-831"];
m24_467 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasNoDefinedType(Newtonsoft.Json.Serialization.JsonContract)", file="EntityKeyMemberConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasNoDefinedType(Newtonsoft.Json.Serialization.JsonContract)", span="825-825"];
m24_280 [cluster="Newtonsoft.Json.Linq.JToken.CreateReader()", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Linq.JToken.CreateReader()", span="1649-1649"];
m24_490 [cluster="System.Enum.Parse(System.Type, string, bool)", file="EntityKeyMemberConverter.cs", label="Entry System.Enum.Parse(System.Type, string, bool)", span="0-0"];
m24_77 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.IsErrorHandled(object, Newtonsoft.Json.Serialization.JsonContract, object, Newtonsoft.Json.IJsonLineInfo, string, System.Exception)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalBase.IsErrorHandled(object, Newtonsoft.Json.Serialization.JsonContract, object, Newtonsoft.Json.IJsonLineInfo, string, System.Exception)", span="109-109"];
m24_943 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="EntityKeyMemberConverter.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m24_521 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", span="1011-1011"];
m24_569 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="property.NullValueHandling.GetValueOrDefault(Serializer._nullValueHandling) == NullValueHandling.Ignore && value == null", span="1013-1013"];
m24_571 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="HasFlag(property.DefaultValueHandling.GetValueOrDefault(Serializer._defaultValueHandling), DefaultValueHandling.Ignore)\r\n                && !HasFlag(property.DefaultValueHandling.GetValueOrDefault(Serializer._defaultValueHandling), DefaultValueHandling.Populate)\r\n                && MiscellaneousUtils.ValueEquals(value, property.GetResolvedDefaultValue())", span="1016-1018"];
m24_573 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="!property.Writable", span="1021-1021"];
m24_570 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="return false;", span="1014-1014"];
m24_572 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="return false;", span="1019-1019"];
m24_574 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="return false;", span="1022-1022"];
m24_575 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="return true;", span="1024-1024"];
m24_576 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", span="1011-1011"];
m24_79 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.ClearErrorContext()", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalBase.ClearErrorContext()", span="101-101"];
m24_948 [cluster="Unk.FirstOrDefault", file="EntityKeyMemberConverter.cs", label="Entry Unk.FirstOrDefault", span=""];
m24_947 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="EntityKeyMemberConverter.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m24_942 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", span="1748-1748"];
m24_975 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="EntityKeyMemberConverter.cs", label="extensionData = (contract.ExtensionDataSetter != null) ? new Dictionary<string, object>() : null", span="1750-1750"];
m24_978 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="EntityKeyMemberConverter.cs", label="reader.TokenType", span="1756-1756"];
m24_980 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="EntityKeyMemberConverter.cs", label="string memberName = reader.Value.ToString()", span="1759-1759"];
m24_981 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="EntityKeyMemberConverter.cs", label="JsonProperty property = contract.CreatorParameters.GetClosestMatchProperty(memberName) ??\r\n                                                contract.Properties.GetClosestMatchProperty(memberName)", span="1763-1764"];
m24_985 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="EntityKeyMemberConverter.cs", label="JsonConverter propertyConverter = GetConverter(property.PropertyContract, property.MemberConverter, contract, containerProperty)", span="1771-1771"];
m24_986 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="EntityKeyMemberConverter.cs", label="!ReadForType(reader, property.PropertyContract, propertyConverter != null)", span="1773-1773"];
m24_987 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="EntityKeyMemberConverter.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected end when setting {0}'s value.''.FormatWith(CultureInfo.InvariantCulture, memberName));", span="1774-1774"];
m24_993 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="EntityKeyMemberConverter.cs", label="propertyValue = DeserializeConvertable(propertyConverter, reader, property.PropertyType, null)", span="1783-1783"];
m24_994 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="EntityKeyMemberConverter.cs", label="propertyValue = CreateValueInternal(reader, property.PropertyType, property.PropertyContract, property, contract, containerProperty, null)", span="1785-1785"];
m24_996 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="EntityKeyMemberConverter.cs", label="!reader.Read()", span="1793-1793"];
m24_997 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="EntityKeyMemberConverter.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected end when setting {0}'s value.''.FormatWith(CultureInfo.InvariantCulture, memberName));", span="1794-1794"];
m24_999 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="EntityKeyMemberConverter.cs", label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Could not find member '{0}' on {1}.''.FormatWith(CultureInfo.InvariantCulture, memberName, contract.UnderlyingType)), null)", span="1797-1797"];
m24_1001 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="EntityKeyMemberConverter.cs", label="throw JsonSerializationException.Create(reader, ''Could not find member '{0}' on object of type '{1}'''.FormatWith(CultureInfo.InvariantCulture, memberName, objectType.Name));", span="1800-1800"];
m24_1003 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="EntityKeyMemberConverter.cs", label="object value = CreateValueInternal(reader, null, null, null, contract, containerProperty, null)", span="1805-1805"];
m24_1005 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="EntityKeyMemberConverter.cs", label="reader.Skip()", span="1810-1810"];
m24_1009 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="EntityKeyMemberConverter.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected token when deserializing object: '' + reader.TokenType);", span="1819-1819"];
m24_1010 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="EntityKeyMemberConverter.cs", label="!exit && reader.Read()", span="1821-1821"];
m24_976 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="EntityKeyMemberConverter.cs", label="IDictionary<JsonProperty, object> propertyValues = new Dictionary<JsonProperty, object>()", span="1752-1752"];
m24_1002 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="EntityKeyMemberConverter.cs", label="extensionData != null", span="1803-1803"];
m24_1004 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="EntityKeyMemberConverter.cs", label="extensionData[memberName] = value", span="1806-1806"];
m24_977 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="EntityKeyMemberConverter.cs", label="bool exit = false", span="1753-1753"];
m24_995 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="EntityKeyMemberConverter.cs", label="propertyValues[property] = propertyValue", span="1787-1787"];
m24_1011 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="EntityKeyMemberConverter.cs", label="return propertyValues;", span="1823-1823"];
m24_979 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="EntityKeyMemberConverter.cs", label="JsonToken.PropertyName", span="1758-1758"];
m24_1006 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="EntityKeyMemberConverter.cs", label="JsonToken.Comment", span="1813-1813"];
m24_1007 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="EntityKeyMemberConverter.cs", label="JsonToken.EndObject", span="1815-1815"];
m24_982 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="EntityKeyMemberConverter.cs", label="property != null", span="1766-1766"];
m24_983 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="EntityKeyMemberConverter.cs", label="property.PropertyContract == null", span="1768-1768"];
m24_984 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="EntityKeyMemberConverter.cs", label="property.PropertyContract = GetContractSafe(property.PropertyType)", span="1769-1769"];
m24_988 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="EntityKeyMemberConverter.cs", label="!property.Ignored", span="1776-1776"];
m24_989 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="EntityKeyMemberConverter.cs", label="property.PropertyContract == null", span="1778-1778"];
m24_990 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="EntityKeyMemberConverter.cs", label="property.PropertyContract = GetContractSafe(property.PropertyType)", span="1779-1779"];
m24_992 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="EntityKeyMemberConverter.cs", label="propertyConverter != null && propertyConverter.CanRead", span="1782-1782"];
m24_991 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="EntityKeyMemberConverter.cs", label="object propertyValue", span="1781-1781"];
m24_998 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="EntityKeyMemberConverter.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="1796-1796"];
m24_1000 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="EntityKeyMemberConverter.cs", label="Serializer._missingMemberHandling == MissingMemberHandling.Error", span="1799-1799"];
m24_1008 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="EntityKeyMemberConverter.cs", label="exit = true", span="1816-1816"];
m24_1012 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="EntityKeyMemberConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", span="1748-1748"];
m24_286 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", span="1067-1067"];
m24_600 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="EntityKeyMemberConverter.cs", label="contract.IsReadOnlyOrFixedSize", span="1069-1069"];
m24_602 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="EntityKeyMemberConverter.cs", label="return contract.CreateTemporaryDictionary();", span="1072-1072"];
m24_603 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="EntityKeyMemberConverter.cs", label="contract.DefaultCreator != null && (!contract.DefaultCreatorNonPublic || Serializer._constructorHandling == ConstructorHandling.AllowNonPublicDefaultConstructor)", span="1074-1074"];
m24_604 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="EntityKeyMemberConverter.cs", label="object dictionary = contract.DefaultCreator()", span="1076-1076"];
m24_605 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="EntityKeyMemberConverter.cs", label="contract.ShouldCreateWrapper", span="1078-1078"];
m24_606 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="EntityKeyMemberConverter.cs", label="dictionary = contract.CreateWrapper(dictionary)", span="1079-1079"];
m24_609 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="EntityKeyMemberConverter.cs", label="contract.HasParametrizedCreator", span="1084-1084"];
m24_611 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="EntityKeyMemberConverter.cs", label="return contract.CreateTemporaryDictionary();", span="1087-1087"];
m24_612 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="EntityKeyMemberConverter.cs", label="!contract.IsInstantiable", span="1091-1091"];
m24_613 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="EntityKeyMemberConverter.cs", label="throw JsonSerializationException.Create(reader, ''Could not create an instance of type {0}. Type is an interface or abstract class and cannot be instantiated.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="1092-1092"];
m24_614 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="EntityKeyMemberConverter.cs", label="throw JsonSerializationException.Create(reader, ''Unable to find a default constructor to use for type {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="1094-1094"];
m24_601 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="EntityKeyMemberConverter.cs", label="createdFromNonDefaultCreator = true", span="1071-1071"];
m24_608 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="EntityKeyMemberConverter.cs", label="return (IDictionary)dictionary;", span="1082-1082"];
m24_607 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="EntityKeyMemberConverter.cs", label="createdFromNonDefaultCreator = false", span="1081-1081"];
m24_610 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="EntityKeyMemberConverter.cs", label="createdFromNonDefaultCreator = true", span="1086-1086"];
m24_615 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="EntityKeyMemberConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", span="1067-1067"];
m24_285 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", span="1872-1872"];
m24_1043 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="EntityKeyMemberConverter.cs", label="object newObject = null", span="1874-1874"];
m24_1044 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="EntityKeyMemberConverter.cs", label="objectContract.OverrideCreator != null", span="1876-1876"];
m24_1045 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="EntityKeyMemberConverter.cs", label="objectContract.CreatorParameters.Count > 0", span="1878-1878"];
m24_1047 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="EntityKeyMemberConverter.cs", label="return CreateObjectUsingCreatorWithParameters(reader, objectContract, containerMember, objectContract.OverrideCreator, id);", span="1881-1881"];
m24_1048 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="EntityKeyMemberConverter.cs", label="newObject = objectContract.OverrideCreator(new object[0])", span="1884-1884"];
m24_1049 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="EntityKeyMemberConverter.cs", label="objectContract.DefaultCreator != null &&\r\n                     (!objectContract.DefaultCreatorNonPublic || Serializer._constructorHandling == ConstructorHandling.AllowNonPublicDefaultConstructor || objectContract.ParametrizedCreator == null)", span="1886-1887"];
m24_1050 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="EntityKeyMemberConverter.cs", label="newObject = objectContract.DefaultCreator()", span="1893-1893"];
m24_1051 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="EntityKeyMemberConverter.cs", label="objectContract.ParametrizedCreator != null", span="1895-1895"];
m24_1053 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="EntityKeyMemberConverter.cs", label="return CreateObjectUsingCreatorWithParameters(reader, objectContract, containerMember, objectContract.ParametrizedCreator, id);", span="1898-1898"];
m24_1055 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="EntityKeyMemberConverter.cs", label="!objectContract.IsInstantiable", span="1903-1903"];
m24_1056 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="EntityKeyMemberConverter.cs", label="throw JsonSerializationException.Create(reader, ''Could not create an instance of type {0}. Type is an interface or abstract class and cannot be instantiated.''.FormatWith(CultureInfo.InvariantCulture, objectContract.UnderlyingType));", span="1904-1904"];
m24_1057 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="EntityKeyMemberConverter.cs", label="throw JsonSerializationException.Create(reader, ''Unable to find a constructor to use for type {0}. A class should either have a default constructor, one constructor with arguments or a constructor marked with the JsonConstructor attribute.''.FormatWith(CultureInfo.InvariantCulture, objectContract.UnderlyingType));", span="1906-1906"];
m24_1054 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="EntityKeyMemberConverter.cs", label="newObject == null", span="1901-1901"];
m24_1059 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="EntityKeyMemberConverter.cs", label="return newObject;", span="1910-1910"];
m24_1046 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="EntityKeyMemberConverter.cs", label="createdFromNonDefaultCreator = true", span="1880-1880"];
m24_1052 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="EntityKeyMemberConverter.cs", label="createdFromNonDefaultCreator = true", span="1897-1897"];
m24_1058 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="EntityKeyMemberConverter.cs", label="createdFromNonDefaultCreator = false", span="1909-1909"];
m24_1060 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="EntityKeyMemberConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", span="1872-1872"];
m24_284 [cluster="System.Type.IsAssignableFrom(System.Type)", file="EntityKeyMemberConverter.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m24_1107 [cluster="lambda expression", file="EntityKeyMemberConverter.cs", label="Entry lambda expression", span="1919-1919"];
m24_952 [cluster="lambda expression", file="EntityKeyMemberConverter.cs", label="Entry lambda expression", span="1613-1613"];
m24_955 [cluster="lambda expression", file="EntityKeyMemberConverter.cs", label="Entry lambda expression", span="1613-1613"];
m24_958 [cluster="lambda expression", file="EntityKeyMemberConverter.cs", label="Entry lambda expression", span="1620-1620"];
m24_965 [cluster="lambda expression", file="EntityKeyMemberConverter.cs", label="p.PropertyName == property.PropertyName", span="1658-1658"];
m24_961 [cluster="lambda expression", file="EntityKeyMemberConverter.cs", label="Entry lambda expression", span="1642-1642"];
m24_964 [cluster="lambda expression", file="EntityKeyMemberConverter.cs", label="Entry lambda expression", span="1658-1658"];
m24_953 [cluster="lambda expression", file="EntityKeyMemberConverter.cs", label=m, span="1613-1613"];
m24_954 [cluster="lambda expression", file="EntityKeyMemberConverter.cs", label="Exit lambda expression", span="1613-1613"];
m24_956 [cluster="lambda expression", file="EntityKeyMemberConverter.cs", label="PropertyPresence.None", span="1613-1613"];
m24_957 [cluster="lambda expression", file="EntityKeyMemberConverter.cs", label="Exit lambda expression", span="1613-1613"];
m24_959 [cluster="lambda expression", file="EntityKeyMemberConverter.cs", label="p.PropertyName", span="1620-1620"];
m24_960 [cluster="lambda expression", file="EntityKeyMemberConverter.cs", label="Exit lambda expression", span="1620-1620"];
m24_962 [cluster="lambda expression", file="EntityKeyMemberConverter.cs", label="p.PropertyName", span="1642-1642"];
m24_963 [cluster="lambda expression", file="EntityKeyMemberConverter.cs", label="Exit lambda expression", span="1642-1642"];
m24_966 [cluster="lambda expression", file="EntityKeyMemberConverter.cs", label="Exit lambda expression", span="1658-1658"];
m24_1104 [cluster="lambda expression", file="EntityKeyMemberConverter.cs", label="Entry lambda expression", span="1919-1919"];
m24_1105 [cluster="lambda expression", file="EntityKeyMemberConverter.cs", label=m, span="1919-1919"];
m24_1106 [cluster="lambda expression", file="EntityKeyMemberConverter.cs", label="Exit lambda expression", span="1919-1919"];
m24_1108 [cluster="lambda expression", file="EntityKeyMemberConverter.cs", label="PropertyPresence.None", span="1919-1919"];
m24_1109 [cluster="lambda expression", file="EntityKeyMemberConverter.cs", label="Exit lambda expression", span="1919-1919"];
m24_29 [cluster="object.GetType()", file="EntityKeyMemberConverter.cs", label="Entry object.GetType()", span="0-0"];
m24_279 [cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", span="1849-1849"];
m24_162 [cluster="string.IsNullOrEmpty(string)", file="EntityKeyMemberConverter.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m24_461 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1215-1215"];
m24_684 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="int rank = contract.UnderlyingType.GetArrayRank()", span="1217-1217"];
m24_685 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="id != null", span="1219-1219"];
m24_686 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="AddReference(reader, id, list)", span="1220-1220"];
m24_687 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="OnDeserializing(reader, contract, list)", span="1222-1222"];
m24_688 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="JsonContract collectionItemContract = GetContractSafe(contract.CollectionItemType)", span="1224-1224"];
m24_689 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="JsonConverter collectionItemConverter = GetConverter(collectionItemContract, null, contract, containerProperty)", span="1225-1225"];
m24_692 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="listStack.Push(list)", span="1229-1229"];
m24_693 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="IList currentList = list", span="1230-1230"];
m24_695 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="int initialDepth = reader.Depth", span="1235-1235"];
m24_697 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="ReadForType(reader, collectionItemContract, collectionItemConverter != null)", span="1241-1241"];
m24_698 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="reader.TokenType", span="1243-1243"];
m24_706 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="value = DeserializeConvertable(collectionItemConverter, reader, contract.CollectionItemType, null)", span="1256-1256"];
m24_707 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="value = CreateValueInternal(reader, contract.CollectionItemType, collectionItemContract, null, contract, containerProperty, null)", span="1258-1258"];
m24_710 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="JsonPosition errorPosition = reader.GetPosition(initialDepth)", span="1271-1271"];
m24_711 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="IsErrorHandled(list, contract, errorPosition.Position, reader as IJsonLineInfo, reader.Path, ex)", span="1273-1273"];
m24_712 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="HandleError(reader, true, initialDepth)", span="1275-1275"];
m24_714 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="throw JsonSerializationException.Create(reader, ''Infinite loop detected from error handling.'', ex);", span="1281-1281"];
m24_717 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="reader.Read()", span="1296-1296"];
m24_718 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="reader.TokenType", span="1298-1298"];
m24_730 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected token when deserializing multidimensional array: '' + reader.TokenType);", span="1321-1321"];
m24_733 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="ThrowUnexpectedEndException(reader, contract, list, ''Unexpected end when deserializing array.'')", span="1332-1332"];
m24_734 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="OnDeserialized(reader, contract, list)", span="1334-1334"];
m24_735 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="return list;", span="1335-1335"];
m24_696 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="listStack.Count == rank", span="1237-1237"];
m24_690 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="int? previousErrorIndex = null", span="1227-1227"];
m24_705 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="collectionItemConverter != null && collectionItemConverter.CanRead", span="1255-1255"];
m24_691 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="Stack<IList> listStack = new Stack<IList>()", span="1228-1228"];
m24_713 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="previousErrorIndex != null && previousErrorIndex == errorPosition.Position", span="1277-1277"];
m24_700 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="listStack.Pop()", span="1246-1246"];
m24_701 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="currentList = listStack.Peek()", span="1247-1247"];
m24_722 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="listStack.Push(newList)", span="1303-1303"];
m24_725 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="listStack.Pop()", span="1307-1307"];
m24_726 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="listStack.Count > 0", span="1309-1309"];
m24_727 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="currentList = listStack.Peek()", span="1311-1311"];
m24_694 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="bool finished = false", span="1232-1232"];
m24_721 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="currentList.Add(newList)", span="1302-1302"];
m24_731 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="!finished", span="1329-1329"];
m24_732 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="!finished", span="1331-1331"];
m24_699 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="JsonToken.EndArray", span="1245-1245"];
m24_703 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="JsonToken.Comment", span="1250-1250"];
m24_704 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="object value", span="1253-1253"];
m24_702 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="previousErrorIndex = null", span="1248-1248"];
m24_708 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="currentList.Add(value)", span="1260-1260"];
m24_709 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label=Exception, span="1269-1269"];
m24_715 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="previousErrorIndex = errorPosition.Position", span="1285-1285"];
m24_716 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="throw;", span="1290-1290"];
m24_719 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="JsonToken.StartArray", span="1300-1300"];
m24_724 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="JsonToken.EndArray", span="1306-1306"];
m24_729 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="JsonToken.Comment", span="1318-1318"];
m24_720 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="IList newList = new List<object>()", span="1301-1301"];
m24_723 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="currentList = newList", span="1304-1304"];
m24_728 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="finished = true", span="1315-1315"];
m24_736 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1215-1215"];
m24_75 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", span="256-256"];
m24_124 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="contract != null && contract.ContractType == JsonContractType.Linq", span="258-258"];
m24_125 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="return CreateJToken(reader, contract);", span="259-259"];
m24_126 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="reader.TokenType", span="263-263"];
m24_128 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="return CreateObject(reader, objectType, contract, member, containerContract, containerMember, existingValue);", span="268-268"];
m24_130 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="return CreateList(reader, objectType, contract, member, existingValue, null);", span="270-270"];
m24_136 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="return EnsureType(reader, reader.Value, CultureInfo.InvariantCulture, contract, objectType);", span="276-276"];
m24_138 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="string s = (string)reader.Value", span="278-278"];
m24_139 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="string.IsNullOrEmpty(s) && objectType != null && objectType != typeof(string) && objectType != typeof(object) && contract != null && contract.IsNullable", span="281-281"];
m24_141 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="objectType == typeof(byte[])", span="285-285"];
m24_143 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="return EnsureType(reader, s, CultureInfo.InvariantCulture, contract, objectType);", span="288-288"];
m24_145 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="string constructorName = reader.Value.ToString()", span="290-290"];
m24_146 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="return EnsureType(reader, constructorName, CultureInfo.InvariantCulture, contract, objectType);", span="292-292"];
m24_149 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="objectType == typeof(DBNull)", span="296-296"];
m24_151 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="return EnsureType(reader, reader.Value, CultureInfo.InvariantCulture, contract, objectType);", span="300-300"];
m24_153 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="return new JRaw((string)reader.Value);", span="302-302"];
m24_155 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected token while deserializing object: '' + reader.TokenType);", span="307-307"];
m24_156 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="reader.Read()", span="309-309"];
m24_157 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected end when deserializing object.'');", span="311-311"];
m24_127 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="JsonToken.StartObject", span="267-267"];
m24_129 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="JsonToken.StartArray", span="269-269"];
m24_131 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="JsonToken.Integer", span="271-271"];
m24_137 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="JsonToken.String", span="277-277"];
m24_144 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="JsonToken.StartConstructor", span="289-289"];
m24_147 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="JsonToken.Null", span="293-293"];
m24_152 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="JsonToken.Raw", span="301-301"];
m24_154 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="JsonToken.Comment", span="303-303"];
m24_132 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="JsonToken.Float", span="272-272"];
m24_133 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="JsonToken.Boolean", span="273-273"];
m24_134 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="JsonToken.Date", span="274-274"];
m24_135 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="JsonToken.Bytes", span="275-275"];
m24_142 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="return Convert.FromBase64String(s);", span="286-286"];
m24_140 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="return null;", span="282-282"];
m24_148 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="JsonToken.Undefined", span="294-294"];
m24_150 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="return DBNull.Value;", span="297-297"];
m24_158 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="EntityKeyMemberConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", span="256-256"];
m24_599 [cluster="System.Func<TResult>.Invoke()", file="EntityKeyMemberConverter.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m24_2 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", span="66-66"];
m24_3 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="EntityKeyMemberConverter.cs", label="ValidationUtils.ArgumentNotNull(target, ''target'')", span="68-68"];
m24_4 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="EntityKeyMemberConverter.cs", label="Type objectType = target.GetType()", span="70-70"];
m24_6 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="EntityKeyMemberConverter.cs", label="reader.TokenType == JsonToken.None", span="74-74"];
m24_7 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="EntityKeyMemberConverter.cs", label="reader.Read()", span="75-75"];
m24_8 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="EntityKeyMemberConverter.cs", label="reader.TokenType == JsonToken.StartArray", span="77-77"];
m24_11 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="EntityKeyMemberConverter.cs", label="PopulateList((arrayContract.ShouldCreateWrapper) ? arrayContract.CreateWrapper(target) : (IList)target, reader, arrayContract, null, null)", span="83-83"];
m24_12 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="EntityKeyMemberConverter.cs", label="throw JsonSerializationException.Create(reader, ''Cannot populate JSON array onto type '{0}'.''.FormatWith(CultureInfo.InvariantCulture, objectType));", span="87-87"];
m24_13 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="EntityKeyMemberConverter.cs", label="reader.TokenType == JsonToken.StartObject", span="90-90"];
m24_14 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="EntityKeyMemberConverter.cs", label="CheckedRead(reader)", span="92-92"];
m24_16 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="EntityKeyMemberConverter.cs", label="Serializer.MetadataPropertyHandling != MetadataPropertyHandling.Ignore\r\n                    && reader.TokenType == JsonToken.PropertyName\r\n                    && string.Equals(reader.Value.ToString(), JsonTypeReflector.IdPropertyName, StringComparison.Ordinal)", span="95-97"];
m24_17 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="EntityKeyMemberConverter.cs", label="CheckedRead(reader)", span="99-99"];
m24_18 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="EntityKeyMemberConverter.cs", label="id = (reader.Value != null) ? reader.Value.ToString() : null", span="100-100"];
m24_19 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="EntityKeyMemberConverter.cs", label="CheckedRead(reader)", span="101-101"];
m24_22 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="EntityKeyMemberConverter.cs", label="PopulateDictionary((dictionaryContract.ShouldCreateWrapper) ? dictionaryContract.CreateWrapper(target) : (IDictionary)target, reader, dictionaryContract, null, id)", span="107-107"];
m24_24 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="EntityKeyMemberConverter.cs", label="PopulateObject(target, reader, (JsonObjectContract)contract, null, id)", span="111-111"];
m24_25 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="EntityKeyMemberConverter.cs", label="throw JsonSerializationException.Create(reader, ''Cannot populate JSON object onto type '{0}'.''.FormatWith(CultureInfo.InvariantCulture, objectType));", span="115-115"];
m24_26 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="EntityKeyMemberConverter.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected initial token '{0}' when populating object. Expected JSON object or array.''.FormatWith(CultureInfo.InvariantCulture, reader.TokenType));", span="120-120"];
m24_5 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="EntityKeyMemberConverter.cs", label="JsonContract contract = Serializer._contractResolver.ResolveContract(objectType)", span="72-72"];
m24_9 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="EntityKeyMemberConverter.cs", label="contract.ContractType == JsonContractType.Array", span="79-79"];
m24_10 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="EntityKeyMemberConverter.cs", label="JsonArrayContract arrayContract = (JsonArrayContract)contract", span="81-81"];
m24_20 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="EntityKeyMemberConverter.cs", label="contract.ContractType == JsonContractType.Dictionary", span="104-104"];
m24_21 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="EntityKeyMemberConverter.cs", label="JsonDictionaryContract dictionaryContract = (JsonDictionaryContract)contract", span="106-106"];
m24_23 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="EntityKeyMemberConverter.cs", label="contract.ContractType == JsonContractType.Object", span="109-109"];
m24_15 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="EntityKeyMemberConverter.cs", label="string id = null", span="94-94"];
m24_27 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="EntityKeyMemberConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", span="66-66"];
m24_465 [cluster="System.Collections.ICollection.CopyTo(System.Array, int)", file="EntityKeyMemberConverter.cs", label="Entry System.Collections.ICollection.CopyTo(System.Array, int)", span="0-0"];
m24_556 [cluster="Newtonsoft.Json.Utilities.JsonTokenUtils.IsPrimitiveToken(Newtonsoft.Json.JsonToken)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Utilities.JsonTokenUtils.IsPrimitiveToken(Newtonsoft.Json.JsonToken)", span="58-58"];
m24_941 [cluster="Unk.Join", file="EntityKeyMemberConverter.cs", label="Entry Unk.Join", span=""];
m24_494 [cluster="System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", file="EntityKeyMemberConverter.cs", label="Entry System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", span="0-0"];
m24_944 [cluster="System.Collections.ObjectModel.Collection<T>.Contains(T)", file="EntityKeyMemberConverter.cs", label="Entry System.Collections.ObjectModel.Collection<T>.Contains(T)", span="0-0"];
m24_743 [cluster="System.Collections.Generic.List<T>.List()", file="EntityKeyMemberConverter.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m24_41 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1913-1913"];
m24_1061 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="OnDeserializing(reader, contract, newObject)", span="1915-1915"];
m24_1062 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="Dictionary<JsonProperty, PropertyPresence> propertiesPresence = (contract.HasRequiredOrDefaultValueProperties || HasFlag(Serializer._defaultValueHandling, DefaultValueHandling.Populate))\r\n                ? contract.Properties.ToDictionary(m => m, m => PropertyPresence.None)\r\n                : null", span="1918-1920"];
m24_1063 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="id != null", span="1922-1922"];
m24_1064 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="AddReference(reader, id, newObject)", span="1923-1923"];
m24_1065 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="int initialDepth = reader.Depth", span="1925-1925"];
m24_1067 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="reader.TokenType", span="1930-1930"];
m24_1069 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="string memberName = reader.Value.ToString()", span="1934-1934"];
m24_1070 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="CheckPropertyName(reader, memberName)", span="1936-1936"];
m24_1071 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="JsonProperty property = contract.Properties.GetClosestMatchProperty(memberName)", span="1943-1943"];
m24_1074 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Could not find member '{0}' on {1}''.FormatWith(CultureInfo.InvariantCulture, memberName, contract.UnderlyingType)), null)", span="1948-1948"];
m24_1076 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="throw JsonSerializationException.Create(reader, ''Could not find member '{0}' on object of type '{1}'''.FormatWith(CultureInfo.InvariantCulture, memberName, contract.UnderlyingType.Name));", span="1951-1951"];
m24_1077 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="!reader.Read()", span="1953-1953"];
m24_1078 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="SetExtensionData(contract, member, reader, memberName, newObject)", span="1956-1956"];
m24_1081 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="JsonConverter propertyConverter = GetConverter(property.PropertyContract, property.MemberConverter, contract, member)", span="1963-1963"];
m24_1082 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="!ReadForType(reader, property.PropertyContract, propertyConverter != null)", span="1965-1965"];
m24_1083 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected end when setting {0}'s value.''.FormatWith(CultureInfo.InvariantCulture, memberName));", span="1966-1966"];
m24_1084 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="SetPropertyPresence(reader, property, propertiesPresence)", span="1968-1968"];
m24_1085 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="!SetPropertyValue(property, propertyConverter, contract, member, reader, newObject)", span="1971-1971"];
m24_1086 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="SetExtensionData(contract, member, reader, memberName, newObject)", span="1972-1972"];
m24_1088 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="IsErrorHandled(newObject, contract, memberName, reader as IJsonLineInfo, reader.Path, ex)", span="1976-1976"];
m24_1089 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="HandleError(reader, true, initialDepth)", span="1977-1977"];
m24_1094 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected token when deserializing object: '' + reader.TokenType);", span="1990-1990"];
m24_1095 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="!finished && reader.Read()", span="1992-1992"];
m24_1097 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="ThrowUnexpectedEndException(reader, contract, newObject, ''Unexpected end when deserializing object.'')", span="1995-1995"];
m24_1098 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="EndObject(newObject, reader, contract, initialDepth, propertiesPresence)", span="1997-1997"];
m24_1099 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="OnDeserialized(reader, contract, newObject)", span="1999-1999"];
m24_1100 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="return newObject;", span="2000-2000"];
m24_1066 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="bool finished = false", span="1927-1927"];
m24_1068 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="JsonToken.PropertyName", span="1932-1932"];
m24_1091 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="JsonToken.EndObject", span="1983-1983"];
m24_1093 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="JsonToken.Comment", span="1986-1986"];
m24_1072 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="property == null", span="1945-1945"];
m24_1079 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="property.PropertyContract == null", span="1960-1960"];
m24_1080 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="property.PropertyContract = GetContractSafe(property.PropertyType)", span="1961-1961"];
m24_1073 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="1947-1947"];
m24_1075 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="Serializer._missingMemberHandling == MissingMemberHandling.Error", span="1950-1950"];
m24_1087 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label=Exception, span="1974-1974"];
m24_1090 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="throw;", span="1979-1979"];
m24_1092 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="finished = true", span="1984-1984"];
m24_1096 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="!finished", span="1994-1994"];
m24_1101 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1913-1913"];
m24_0 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.JsonSerializerInternalReader(Newtonsoft.Json.JsonSerializer)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.JsonSerializerInternalReader(Newtonsoft.Json.JsonSerializer)", span="61-61"];
m24_1 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.JsonSerializerInternalReader(Newtonsoft.Json.JsonSerializer)", file="EntityKeyMemberConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.JsonSerializerInternalReader(Newtonsoft.Json.JsonSerializer)", span="61-61"];
m24_99 [cluster="Newtonsoft.Json.Linq.JRaw.Create(Newtonsoft.Json.JsonReader)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Linq.JRaw.Create(Newtonsoft.Json.JsonReader)", span="58-58"];
m24_1038 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimal()", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsDecimal()", span="389-389"];
m24_119 [cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteStartObject()", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteStartObject()", span="105-105"];
m24_877 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty(string)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty(string)", span="115-115"];
m24_121 [cluster="Newtonsoft.Json.Linq.JTokenWriter.WritePropertyName(string)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Linq.JTokenWriter.WritePropertyName(string)", span="166-166"];
m24_1102 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, string, object)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, string, object)", span="2020-2020"];
m24_1120 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, string, object)", file="EntityKeyMemberConverter.cs", label="contract.ExtensionDataSetter != null", span="2022-2022"];
m24_1121 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, string, object)", file="EntityKeyMemberConverter.cs", label="object value = CreateValueInternal(reader, null, null, null, contract, member, null)", span="2026-2026"];
m24_1122 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, string, object)", file="EntityKeyMemberConverter.cs", label="contract.ExtensionDataSetter(o, memberName, value)", span="2028-2028"];
m24_1124 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, string, object)", file="EntityKeyMemberConverter.cs", label="throw JsonSerializationException.Create(reader, ''Error setting value in extension data for type '{0}'.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType), ex);", span="2032-2032"];
m24_1125 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, string, object)", file="EntityKeyMemberConverter.cs", label="reader.Skip()", span="2037-2037"];
m24_1123 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, string, object)", file="EntityKeyMemberConverter.cs", label=Exception, span="2030-2030"];
m24_1126 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, string, object)", file="EntityKeyMemberConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, string, object)", span="2020-2020"];
m24_180 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", file="EntityKeyMemberConverter.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", span="0-0"];
m24_120 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", span="2003-2003"];
m24_1110 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", file="EntityKeyMemberConverter.cs", label="Serializer.MetadataPropertyHandling == MetadataPropertyHandling.ReadAhead", span="2005-2005"];
m24_1111 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", file="EntityKeyMemberConverter.cs", label=memberName, span="2007-2007"];
m24_1116 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", file="EntityKeyMemberConverter.cs", label="reader.Skip()", span="2013-2013"];
m24_1118 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", file="EntityKeyMemberConverter.cs", label="return false;", span="2017-2017"];
m24_1112 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", file="EntityKeyMemberConverter.cs", label="JsonTypeReflector.IdPropertyName", span="2009-2009"];
m24_1113 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", file="EntityKeyMemberConverter.cs", label="JsonTypeReflector.RefPropertyName", span="2010-2010"];
m24_1114 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", file="EntityKeyMemberConverter.cs", label="JsonTypeReflector.TypePropertyName", span="2011-2011"];
m24_1115 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", file="EntityKeyMemberConverter.cs", label="JsonTypeReflector.ArrayValuesPropertyName", span="2012-2012"];
m24_1117 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", file="EntityKeyMemberConverter.cs", label="return true;", span="2014-2014"];
m24_1119 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", file="EntityKeyMemberConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", span="2003-2003"];
m24_123 [cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="365-365"];
m24_165 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", span="314-314"];
m24_166 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="EntityKeyMemberConverter.cs", label="contract.ContractType", span="316-316"];
m24_167 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="EntityKeyMemberConverter.cs", label="JsonContractType.Object", span="318-318"];
m24_172 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="EntityKeyMemberConverter.cs", label="JsonContractType.Array", span="327-327"];
m24_174 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="EntityKeyMemberConverter.cs", label="JsonContractType.Primitive", span="329-329"];
m24_176 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="EntityKeyMemberConverter.cs", label="JsonContractType.String", span="331-331"];
m24_178 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="EntityKeyMemberConverter.cs", label="throw new ArgumentOutOfRangeException();", span="334-334"];
m24_168 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="EntityKeyMemberConverter.cs", label="JsonContractType.Dictionary", span="319-319"];
m24_169 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="EntityKeyMemberConverter.cs", label="JsonContractType.Serializable", span="321-321"];
m24_170 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="EntityKeyMemberConverter.cs", label="JsonContractType.Dynamic", span="324-324"];
m24_171 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="EntityKeyMemberConverter.cs", label="return @''JSON object (e.g. {''''name'''':''''value''''})'';", span="326-326"];
m24_173 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="EntityKeyMemberConverter.cs", label="return @''JSON array (e.g. [1,2,3])'';", span="328-328"];
m24_175 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="EntityKeyMemberConverter.cs", label="return @''JSON primitive value (e.g. string, number, boolean, null)'';", span="330-330"];
m24_177 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="EntityKeyMemberConverter.cs", label="return @''JSON string value'';", span="332-332"];
m24_179 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="EntityKeyMemberConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", span="314-314"];
m24_1039 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsBytes()", span="383-383"];
m24_289 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1444-1444"];
m24_788 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="Type objectType = contract.UnderlyingType", span="1446-1446"];
m24_792 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="throw JsonSerializationException.Create(reader, message);", span="1454-1454"];
m24_794 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Deserializing {0} using ISerializable constructor.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType)), null)", span="1458-1458"];
m24_795 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="SerializationInfo serializationInfo = new SerializationInfo(contract.UnderlyingType, new JsonFormatterConverter(this, contract, member))", span="1460-1460"];
m24_797 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="reader.TokenType", span="1465-1465"];
m24_799 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="string memberName = reader.Value.ToString()", span="1468-1468"];
m24_800 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="!reader.Read()", span="1469-1469"];
m24_801 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected end when setting {0}'s value.''.FormatWith(CultureInfo.InvariantCulture, memberName));", span="1470-1470"];
m24_802 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="serializationInfo.AddValue(memberName, JToken.ReadFrom(reader))", span="1471-1471"];
m24_806 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected token when deserializing object: '' + reader.TokenType);", span="1479-1479"];
m24_807 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="!finished && reader.Read()", span="1481-1481"];
m24_809 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="ThrowUnexpectedEndException(reader, contract, serializationInfo, ''Unexpected end when deserializing object.'')", span="1484-1484"];
m24_810 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="contract.ISerializableCreator == null", span="1486-1486"];
m24_811 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="throw JsonSerializationException.Create(reader, ''ISerializable type '{0}' does not have a valid constructor. To correctly implement ISerializable a constructor that takes SerializationInfo and StreamingContext parameters should be present.''.FormatWith(CultureInfo.InvariantCulture, objectType));", span="1487-1487"];
m24_812 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="object createdObject = contract.ISerializableCreator(serializationInfo, Serializer._context)", span="1489-1489"];
m24_813 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="id != null", span="1491-1491"];
m24_814 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="AddReference(reader, id, createdObject)", span="1492-1492"];
m24_815 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="OnDeserializing(reader, contract, createdObject)", span="1495-1495"];
m24_816 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="OnDeserialized(reader, contract, createdObject)", span="1496-1496"];
m24_789 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="!JsonTypeReflector.FullyTrusted", span="1448-1448"];
m24_791 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="message = message.FormatWith(CultureInfo.InvariantCulture, objectType)", span="1452-1452"];
m24_790 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="string message = @''Type '{0}' implements ISerializable but cannot be deserialized using the ISerializable interface because the current application is not fully trusted and ISerializable can expose secure data.'' + Environment.NewLine +\r\n                                 @''To fix this error either change the environment to be fully trusted, change the application to not deserialize the type, add JsonObjectAttribute to the type or change the JsonSerializer setting ContractResolver to use a new DefaultContractResolver with IgnoreSerializableInterface set to true.'' + Environment.NewLine", span="1450-1451"];
m24_793 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="1457-1457"];
m24_796 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="bool finished = false", span="1462-1462"];
m24_798 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="JsonToken.PropertyName", span="1467-1467"];
m24_803 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="JsonToken.Comment", span="1473-1473"];
m24_804 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="JsonToken.EndObject", span="1475-1475"];
m24_805 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="finished = true", span="1476-1476"];
m24_808 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="!finished", span="1483-1483"];
m24_817 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="return createdObject;", span="1498-1498"];
m24_818 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1444-1444"];
m24_519 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", span="929-929"];
m24_524 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="EntityKeyMemberConverter.cs", label="currentValue = null", span="931-931"];
m24_528 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="EntityKeyMemberConverter.cs", label="property.Ignored", span="936-936"];
m24_530 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="EntityKeyMemberConverter.cs", label="JsonToken tokenType = reader.TokenType", span="939-939"];
m24_531 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="EntityKeyMemberConverter.cs", label="property.PropertyContract == null", span="941-941"];
m24_532 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="EntityKeyMemberConverter.cs", label="property.PropertyContract = GetContractSafe(property.PropertyType)", span="942-942"];
m24_533 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="EntityKeyMemberConverter.cs", label="ObjectCreationHandling objectCreationHandling =\r\n                property.ObjectCreationHandling.GetValueOrDefault(Serializer._objectCreationHandling)", span="944-945"];
m24_534 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="EntityKeyMemberConverter.cs", label="(objectCreationHandling != ObjectCreationHandling.Replace)\r\n                && (tokenType == JsonToken.StartArray || tokenType == JsonToken.StartObject)\r\n                && property.Readable", span="947-949"];
m24_535 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="EntityKeyMemberConverter.cs", label="currentValue = property.ValueProvider.GetValue(target)", span="951-951"];
m24_540 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="EntityKeyMemberConverter.cs", label="!property.Writable && !useExistingValue", span="962-962"];
m24_542 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="EntityKeyMemberConverter.cs", label="property.NullValueHandling.GetValueOrDefault(Serializer._nullValueHandling) == NullValueHandling.Ignore && tokenType == JsonToken.Null", span="966-966"];
m24_544 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="EntityKeyMemberConverter.cs", label="HasFlag(property.DefaultValueHandling.GetValueOrDefault(Serializer._defaultValueHandling), DefaultValueHandling.Ignore)\r\n                && !HasFlag(property.DefaultValueHandling.GetValueOrDefault(Serializer._defaultValueHandling), DefaultValueHandling.Populate)\r\n                && JsonTokenUtils.IsPrimitiveToken(tokenType)\r\n                && MiscellaneousUtils.ValueEquals(reader.Value, property.GetResolvedDefaultValue())", span="970-973"];
m24_547 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="EntityKeyMemberConverter.cs", label="propertyContract = property.PropertyContract", span="978-978"];
m24_549 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="EntityKeyMemberConverter.cs", label="propertyContract != property.PropertyContract", span="984-984"];
m24_550 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="EntityKeyMemberConverter.cs", label="propertyConverter = GetConverter(propertyContract, property.MemberConverter, containerContract, containerProperty)", span="985-985"];
m24_525 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="EntityKeyMemberConverter.cs", label="useExistingValue = false", span="932-932"];
m24_546 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="EntityKeyMemberConverter.cs", label="currentValue == null", span="976-976"];
m24_548 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="EntityKeyMemberConverter.cs", label="propertyContract = GetContractSafe(currentValue.GetType())", span="982-982"];
m24_526 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="EntityKeyMemberConverter.cs", label="propertyContract = null", span="933-933"];
m24_527 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="EntityKeyMemberConverter.cs", label="gottenCurrentValue = false", span="934-934"];
m24_529 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="EntityKeyMemberConverter.cs", label="return true;", span="937-937"];
m24_536 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="EntityKeyMemberConverter.cs", label="gottenCurrentValue = true", span="952-952"];
m24_537 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="EntityKeyMemberConverter.cs", label="currentValue != null", span="954-954"];
m24_538 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="EntityKeyMemberConverter.cs", label="propertyContract = GetContractSafe(currentValue.GetType())", span="956-956"];
m24_539 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="EntityKeyMemberConverter.cs", label="useExistingValue = (!propertyContract.IsReadOnlyOrFixedSize && !propertyContract.UnderlyingType.IsValueType())", span="958-958"];
m24_541 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="EntityKeyMemberConverter.cs", label="return true;", span="963-963"];
m24_543 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="EntityKeyMemberConverter.cs", label="return true;", span="967-967"];
m24_545 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="EntityKeyMemberConverter.cs", label="return true;", span="974-974"];
m24_551 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="EntityKeyMemberConverter.cs", label="return false;", span="988-988"];
m24_552 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="EntityKeyMemberConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", span="929-929"];
m24_496 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.FormatValueForPrint(object)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.FormatValueForPrint(object)", span="128-128"];
m24_622 [cluster="Newtonsoft.Json.Serialization.JsonContract.InvokeOnDeserializing(object, System.Runtime.Serialization.StreamingContext)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonContract.InvokeOnDeserializing(object, System.Runtime.Serialization.StreamingContext)", span="367-367"];
m24_1042 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffset()", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsDateTimeOffset()", span="402-402"];
m24_950 [cluster="Newtonsoft.Json.Serialization.ExtensionDataSetter.Invoke(object, string, object)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Serialization.ExtensionDataSetter.Invoke(object, string, object)", span="69-69"];
m24_410 [cluster="System.Runtime.Serialization.SerializationBinder.BindToType(string, string)", file="EntityKeyMemberConverter.cs", label="Entry System.Runtime.Serialization.SerializationBinder.BindToType(string, string)", span="0-0"];
m24_343 [cluster="Newtonsoft.Json.JsonSerializer.GetReferenceResolver()", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.JsonSerializer.GetReferenceResolver()", span="946-946"];
m24_1040 [cluster="Newtonsoft.Json.JsonReader.ReadAsString()", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsString()", span="377-377"];
m24_879 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", span="1607-1607"];
m24_880 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="EntityKeyMemberConverter.cs", label="ValidationUtils.ArgumentNotNull(creator, ''creator'')", span="1609-1609"];
m24_881 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="EntityKeyMemberConverter.cs", label="Dictionary<JsonProperty, PropertyPresence> propertiesPresence = (contract.HasRequiredOrDefaultValueProperties || HasFlag(Serializer._defaultValueHandling, DefaultValueHandling.Populate))\r\n                ? contract.Properties.ToDictionary(m => m, m => PropertyPresence.None)\r\n                : null", span="1612-1614"];
m24_882 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="EntityKeyMemberConverter.cs", label="Type objectType = contract.UnderlyingType", span="1616-1616"];
m24_884 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="EntityKeyMemberConverter.cs", label="string parameters = string.Join('', '', contract.CreatorParameters.Select(p => p.PropertyName).ToArray())", span="1620-1620"];
m24_885 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="EntityKeyMemberConverter.cs", label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Deserializing {0} using creator with parameters: {1}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType, parameters)), null)", span="1621-1621"];
m24_887 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="EntityKeyMemberConverter.cs", label="IDictionary<JsonProperty, object> propertyValues = ResolvePropertyAndCreatorValues(contract, containerProperty, reader, objectType, out extensionData)", span="1625-1625"];
m24_888 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="EntityKeyMemberConverter.cs", label="object[] creatorParameterValues = new object[contract.CreatorParameters.Count]", span="1627-1627"];
m24_893 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="EntityKeyMemberConverter.cs", label="contract.CreatorParameters.Contains(property)", span="1635-1635"];
m24_895 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="EntityKeyMemberConverter.cs", label="matchingCreatorParameter = contract.CreatorParameters.ForgivingCaseSensitiveFind(p => p.PropertyName, property.UnderlyingName)", span="1642-1642"];
m24_897 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="EntityKeyMemberConverter.cs", label="int i = contract.CreatorParameters.IndexOf(matchingCreatorParameter)", span="1647-1647"];
m24_904 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="EntityKeyMemberConverter.cs", label="object createdObject = creator(creatorParameterValues)", span="1664-1664"];
m24_905 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="EntityKeyMemberConverter.cs", label="id != null", span="1666-1666"];
m24_906 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="EntityKeyMemberConverter.cs", label="AddReference(reader, id, createdObject)", span="1667-1667"];
m24_907 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="EntityKeyMemberConverter.cs", label="OnDeserializing(reader, contract, createdObject)", span="1669-1669"];
m24_933 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="EntityKeyMemberConverter.cs", label="contract.ExtensionDataSetter(createdObject, e.Key, e.Value)", span="1725-1725"];
m24_934 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="EntityKeyMemberConverter.cs", label="EndObject(createdObject, reader, contract, reader.Depth, propertiesPresence)", span="1729-1729"];
m24_935 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="EntityKeyMemberConverter.cs", label="OnDeserialized(reader, contract, createdObject)", span="1731-1731"];
m24_900 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="EntityKeyMemberConverter.cs", label="propertiesPresence != null", span="1655-1655"];
m24_901 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="EntityKeyMemberConverter.cs", label="JsonProperty presenceProperty = propertiesPresence.Keys.FirstOrDefault(p => p.PropertyName == property.PropertyName)", span="1658-1658"];
m24_903 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="EntityKeyMemberConverter.cs", label="propertiesPresence[presenceProperty] = (propertyValue.Value == null) ? PropertyPresence.Null : PropertyPresence.Value", span="1660-1660"];
m24_883 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="EntityKeyMemberConverter.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="1618-1618"];
m24_886 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="EntityKeyMemberConverter.cs", label="IDictionary<string, object> extensionData", span="1624-1624"];
m24_890 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="EntityKeyMemberConverter.cs", label=propertyValues, span="1630-1630"];
m24_931 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="EntityKeyMemberConverter.cs", label="extensionData != null", span="1721-1721"];
m24_932 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="EntityKeyMemberConverter.cs", label=extensionData, span="1723-1723"];
m24_889 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="EntityKeyMemberConverter.cs", label="IDictionary<JsonProperty, object> remainingPropertyValues = new Dictionary<JsonProperty, object>()", span="1628-1628"];
m24_898 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="EntityKeyMemberConverter.cs", label="creatorParameterValues[i] = propertyValue.Value", span="1648-1648"];
m24_899 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="EntityKeyMemberConverter.cs", label="remainingPropertyValues.Add(propertyValue)", span="1652-1652"];
m24_908 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="EntityKeyMemberConverter.cs", label=remainingPropertyValues, span="1672-1672"];
m24_891 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="EntityKeyMemberConverter.cs", label="JsonProperty property = propertyValue.Key", span="1632-1632"];
m24_892 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="EntityKeyMemberConverter.cs", label="JsonProperty matchingCreatorParameter", span="1634-1634"];
m24_894 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="EntityKeyMemberConverter.cs", label="matchingCreatorParameter = property", span="1637-1637"];
m24_896 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="EntityKeyMemberConverter.cs", label="matchingCreatorParameter != null", span="1645-1645"];
m24_902 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="EntityKeyMemberConverter.cs", label="presenceProperty != null", span="1659-1659"];
m24_912 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="EntityKeyMemberConverter.cs", label="property.ValueProvider.SetValue(createdObject, value)", span="1679-1679"];
m24_917 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="EntityKeyMemberConverter.cs", label="object createdObjectCollection = property.ValueProvider.GetValue(createdObject)", span="1690-1690"];
m24_925 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="EntityKeyMemberConverter.cs", label="object createdObjectDictionary = property.ValueProvider.GetValue(createdObject)", span="1706-1706"];
m24_936 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="EntityKeyMemberConverter.cs", label="return createdObject;", span="1732-1732"];
m24_909 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="EntityKeyMemberConverter.cs", label="JsonProperty property = remainingPropertyValue.Key", span="1674-1674"];
m24_910 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="EntityKeyMemberConverter.cs", label="object value = remainingPropertyValue.Value", span="1675-1675"];
m24_911 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="EntityKeyMemberConverter.cs", label="ShouldSetPropertyValue(property, value)", span="1677-1677"];
m24_913 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="EntityKeyMemberConverter.cs", label="!property.Writable && value != null", span="1681-1681"];
m24_914 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="EntityKeyMemberConverter.cs", label="JsonContract propertyContract = Serializer._contractResolver.ResolveContract(property.PropertyType)", span="1684-1684"];
m24_920 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="EntityKeyMemberConverter.cs", label="IWrappedCollection newValues = propertyArrayContract.CreateWrapper(value)", span="1694-1694"];
m24_928 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="EntityKeyMemberConverter.cs", label="IDictionary newValues = (dictionaryContract.ShouldCreateWrapper) ? dictionaryContract.CreateWrapper(value) : (IDictionary)value", span="1710-1710"];
m24_915 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="EntityKeyMemberConverter.cs", label="propertyContract.ContractType == JsonContractType.Array", span="1686-1686"];
m24_916 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="EntityKeyMemberConverter.cs", label="JsonArrayContract propertyArrayContract = (JsonArrayContract)propertyContract", span="1688-1688"];
m24_923 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="EntityKeyMemberConverter.cs", label="propertyContract.ContractType == JsonContractType.Dictionary", span="1702-1702"];
m24_924 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="EntityKeyMemberConverter.cs", label="JsonDictionaryContract dictionaryContract = (JsonDictionaryContract)propertyContract", span="1704-1704"];
m24_919 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="EntityKeyMemberConverter.cs", label="IWrappedCollection createdObjectCollectionWrapper = propertyArrayContract.CreateWrapper(createdObjectCollection)", span="1693-1693"];
m24_918 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="EntityKeyMemberConverter.cs", label="createdObjectCollection != null", span="1691-1691"];
m24_922 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="EntityKeyMemberConverter.cs", label="createdObjectCollectionWrapper.Add(newValue)", span="1698-1698"];
m24_921 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="EntityKeyMemberConverter.cs", label=newValues, span="1696-1696"];
m24_927 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="EntityKeyMemberConverter.cs", label="IDictionary targetDictionary = (dictionaryContract.ShouldCreateWrapper) ? dictionaryContract.CreateWrapper(createdObjectDictionary) : (IDictionary)createdObjectDictionary", span="1709-1709"];
m24_926 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="EntityKeyMemberConverter.cs", label="createdObjectDictionary != null", span="1707-1707"];
m24_930 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="EntityKeyMemberConverter.cs", label="targetDictionary.Add(newValue.Key, newValue.Value)", span="1714-1714"];
m24_929 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="EntityKeyMemberConverter.cs", label=newValues, span="1712-1712"];
m24_937 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="EntityKeyMemberConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", span="1607-1607"];
m24_282 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", span="605-605"];
m24_349 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="id = null", span="607-607"];
m24_351 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="reader.TokenType == JsonToken.PropertyName", span="610-610"];
m24_352 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="string propertyName = reader.Value.ToString()", span="612-612"];
m24_355 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="propertyName = reader.Value.ToString()", span="622-622"];
m24_357 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="CheckedRead(reader)", span="626-626"];
m24_358 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="reader.TokenType != JsonToken.String && reader.TokenType != JsonToken.Null", span="627-627"];
m24_359 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="throw JsonSerializationException.Create(reader, ''JSON reference {0} property must have a string or null value.''.FormatWith(CultureInfo.InvariantCulture, JsonTypeReflector.RefPropertyName));", span="628-628"];
m24_360 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="string reference = (reader.Value != null) ? reader.Value.ToString() : null", span="630-630"];
m24_361 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="CheckedRead(reader)", span="632-632"];
m24_363 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="reader.TokenType == JsonToken.PropertyName", span="636-636"];
m24_364 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="throw JsonSerializationException.Create(reader, ''Additional content found in JSON reference object. A JSON reference object should only have a {0} property.''.FormatWith(CultureInfo.InvariantCulture, JsonTypeReflector.RefPropertyName));", span="637-637"];
m24_367 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Resolved object reference '{0}' to {1}.''.FormatWith(CultureInfo.InvariantCulture, reference, newValue.GetType())), null)", span="642-642"];
m24_371 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="CheckedRead(reader)", span="653-653"];
m24_372 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="string qualifiedTypeName = reader.Value.ToString()", span="654-654"];
m24_373 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="ResolveTypeName(reader, ref objectType, ref contract, member, containerContract, containerMember, qualifiedTypeName)", span="656-656"];
m24_374 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="CheckedRead(reader)", span="658-658"];
m24_377 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="CheckedRead(reader)", span="664-664"];
m24_378 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="id = (reader.Value != null) ? reader.Value.ToString() : null", span="666-666"];
m24_379 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="CheckedRead(reader)", span="668-668"];
m24_382 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="CheckedRead(reader)", span="673-673"];
m24_383 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="object list = CreateList(reader, objectType, contract, member, existingValue, id)", span="674-674"];
m24_384 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="CheckedRead(reader)", span="675-675"];
m24_388 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="metadataProperty && reader.TokenType == JsonToken.PropertyName", span="683-683"];
m24_350 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="newValue = null", span="608-608"];
m24_389 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="return false;", span="686-686"];
m24_353 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="propertyName.Length > 0 && propertyName[0] == '$'", span="614-614"];
m24_354 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="bool metadataProperty", span="618-618"];
m24_356 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="string.Equals(propertyName, JsonTypeReflector.RefPropertyName, StringComparison.Ordinal)", span="624-624"];
m24_370 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="string.Equals(propertyName, JsonTypeReflector.TypePropertyName, StringComparison.Ordinal)", span="651-651"];
m24_376 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="string.Equals(propertyName, JsonTypeReflector.IdPropertyName, StringComparison.Ordinal)", span="662-662"];
m24_381 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="string.Equals(propertyName, JsonTypeReflector.ArrayValuesPropertyName, StringComparison.Ordinal)", span="671-671"];
m24_362 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="reference != null", span="634-634"];
m24_365 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="newValue = Serializer.GetReferenceResolver().ResolveReference(this, reference)", span="639-639"];
m24_369 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="metadataProperty = true", span="648-648"];
m24_366 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="641-641"];
m24_368 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="return true;", span="644-644"];
m24_375 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="metadataProperty = true", span="660-660"];
m24_380 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="metadataProperty = true", span="669-669"];
m24_387 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="metadataProperty = false", span="681-681"];
m24_385 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="newValue = list", span="676-676"];
m24_386 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="return true;", span="677-677"];
m24_390 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="EntityKeyMemberConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", span="605-605"];
m24_100 [cluster="Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", span="83-83"];
m24_462 [cluster="System.Type.GetArrayRank()", file="EntityKeyMemberConverter.cs", label="Entry System.Type.GetArrayRank()", span="0-0"];
m24_945 [cluster="System.Collections.Generic.IEnumerable<TSource>.ForgivingCaseSensitiveFind<TSource>(System.Func<TSource, string>, string)", file="EntityKeyMemberConverter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ForgivingCaseSensitiveFind<TSource>(System.Func<TSource, string>, string)", span="136-136"];
m24_30 [cluster="Newtonsoft.Json.Serialization.IContractResolver.ResolveContract(System.Type)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Serialization.IContractResolver.ResolveContract(System.Type)", span="43-43"];
m24_40 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1114-1114"];
m24_629 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="IWrappedDictionary wrappedDictionary = dictionary as IWrappedDictionary", span="1116-1116"];
m24_630 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="object underlyingDictionary = wrappedDictionary != null ? wrappedDictionary.UnderlyingDictionary : dictionary", span="1117-1117"];
m24_631 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="id != null", span="1119-1119"];
m24_632 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="AddReference(reader, id, underlyingDictionary)", span="1120-1120"];
m24_633 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="OnDeserializing(reader, contract, underlyingDictionary)", span="1122-1122"];
m24_634 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="int initialDepth = reader.Depth", span="1124-1124"];
m24_635 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="contract.KeyContract == null", span="1126-1126"];
m24_636 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="contract.KeyContract = GetContractSafe(contract.DictionaryKeyType)", span="1127-1127"];
m24_637 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="contract.ItemContract == null", span="1129-1129"];
m24_638 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="contract.ItemContract = GetContractSafe(contract.DictionaryValueType)", span="1130-1130"];
m24_639 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="JsonConverter dictionaryValueConverter = contract.ItemConverter ?? GetConverter(contract.ItemContract, null, contract, containerProperty)", span="1132-1132"];
m24_640 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="PrimitiveTypeCode keyTypeCode = (contract.KeyContract is JsonPrimitiveContract) ? ((JsonPrimitiveContract)contract.KeyContract).TypeCode : PrimitiveTypeCode.Empty", span="1133-1133"];
m24_642 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="reader.TokenType", span="1138-1138"];
m24_644 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="object keyValue = reader.Value", span="1141-1141"];
m24_645 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="CheckPropertyName(reader, keyValue.ToString())", span="1142-1142"];
m24_656 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="dateParseHandling != DateParseHandling.None && DateTimeUtils.TryParseDateTime(keyValue.ToString(), dateParseHandling, reader.DateTimeZoneHandling, reader.DateFormatString, reader.Culture, out dt)", span="1169-1169"];
m24_658 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="keyValue = EnsureType(reader, keyValue, CultureInfo.InvariantCulture, contract.KeyContract, contract.DictionaryKeyType)", span="1172-1172"];
m24_660 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="throw JsonSerializationException.Create(reader, ''Could not convert string '{0}' to dictionary key type '{1}'. Create a TypeConverter to convert from the string to the key type object.''.FormatWith(CultureInfo.InvariantCulture, reader.Value, contract.DictionaryKeyType), ex);", span="1176-1176"];
m24_661 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="!ReadForType(reader, contract.ItemContract, dictionaryValueConverter != null)", span="1179-1179"];
m24_662 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected end when deserializing object.'');", span="1180-1180"];
m24_665 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="itemValue = DeserializeConvertable(dictionaryValueConverter, reader, contract.DictionaryValueType, null)", span="1184-1184"];
m24_666 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="itemValue = CreateValueInternal(reader, contract.DictionaryValueType, contract.ItemContract, null, contract, containerProperty, null)", span="1186-1186"];
m24_667 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="dictionary[keyValue] = itemValue", span="1188-1188"];
m24_669 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="IsErrorHandled(underlyingDictionary, contract, keyValue, reader as IJsonLineInfo, reader.Path, ex)", span="1192-1192"];
m24_670 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="HandleError(reader, true, initialDepth)", span="1193-1193"];
m24_675 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected token when deserializing object: '' + reader.TokenType);", span="1204-1204"];
m24_676 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="!finished && reader.Read()", span="1206-1206"];
m24_678 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="ThrowUnexpectedEndException(reader, contract, underlyingDictionary, ''Unexpected end when deserializing object.'')", span="1209-1209"];
m24_679 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="OnDeserialized(reader, contract, underlyingDictionary)", span="1211-1211"];
m24_680 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="return underlyingDictionary;", span="1212-1212"];
m24_664 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="dictionaryValueConverter != null && dictionaryValueConverter.CanRead", span="1183-1183"];
m24_641 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="bool finished = false", span="1135-1135"];
m24_647 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label=keyTypeCode, span="1150-1150"];
m24_643 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="JsonToken.PropertyName", span="1140-1140"];
m24_672 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="JsonToken.Comment", span="1198-1198"];
m24_673 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="JsonToken.EndObject", span="1200-1200"];
m24_646 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="DateParseHandling dateParseHandling", span="1149-1149"];
m24_648 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="PrimitiveTypeCode.DateTime", span="1152-1152"];
m24_651 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="PrimitiveTypeCode.DateTimeOffset", span="1157-1157"];
m24_654 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="dateParseHandling = DateParseHandling.None", span="1163-1163"];
m24_649 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="PrimitiveTypeCode.DateTimeNullable", span="1153-1153"];
m24_650 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="dateParseHandling = DateParseHandling.DateTime", span="1154-1154"];
m24_652 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="PrimitiveTypeCode.DateTimeOffsetNullable", span="1158-1158"];
m24_653 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="dateParseHandling = DateParseHandling.DateTimeOffset", span="1159-1159"];
m24_655 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="object dt", span="1168-1168"];
m24_657 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="keyValue = dt", span="1170-1170"];
m24_659 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label=Exception, span="1174-1174"];
m24_663 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="object itemValue", span="1182-1182"];
m24_668 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label=Exception, span="1190-1190"];
m24_671 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="throw;", span="1195-1195"];
m24_674 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="finished = true", span="1201-1201"];
m24_677 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="!finished", span="1208-1208"];
m24_681 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="EntityKeyMemberConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1114-1114"];
m24_741 [cluster="System.Collections.IList.Add(object)", file="EntityKeyMemberConverter.cs", label="Entry System.Collections.IList.Add(object)", span="0-0"];
m24_616 [cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateTemporaryDictionary()", file="EntityKeyMemberConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateTemporaryDictionary()", span="192-192"];
m24_1158 [file="EntityKeyMemberConverter.cs", label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", span=""];
m24_1159 [file="EntityKeyMemberConverter.cs", label=property, span=""];
m25_6 [cluster="Newtonsoft.Json.JsonException.JsonException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="EnumUtils.cs", label="Entry Newtonsoft.Json.JsonException.JsonException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="78-78"];
m25_7 [cluster="Newtonsoft.Json.JsonException.JsonException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="EnumUtils.cs", label="Exit Newtonsoft.Json.JsonException.JsonException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="78-78"];
m25_8 [cluster="Newtonsoft.Json.JsonException.Create(Newtonsoft.Json.IJsonLineInfo, string, string)", file="EnumUtils.cs", label="Entry Newtonsoft.Json.JsonException.Create(Newtonsoft.Json.IJsonLineInfo, string, string)", span="84-84"];
m25_9 [cluster="Newtonsoft.Json.JsonException.Create(Newtonsoft.Json.IJsonLineInfo, string, string)", file="EnumUtils.cs", label="message = JsonPosition.FormatMessage(lineInfo, path, message)", span="86-86"];
m25_10 [cluster="Newtonsoft.Json.JsonException.Create(Newtonsoft.Json.IJsonLineInfo, string, string)", file="EnumUtils.cs", label="return new JsonException(message);", span="88-88"];
m25_11 [cluster="Newtonsoft.Json.JsonException.Create(Newtonsoft.Json.IJsonLineInfo, string, string)", file="EnumUtils.cs", label="Exit Newtonsoft.Json.JsonException.Create(Newtonsoft.Json.IJsonLineInfo, string, string)", span="84-84"];
m25_0 [cluster="Newtonsoft.Json.JsonException.JsonException()", file="EnumUtils.cs", label="Entry Newtonsoft.Json.JsonException.JsonException()", span="45-45"];
m25_1 [cluster="Newtonsoft.Json.JsonException.JsonException()", file="EnumUtils.cs", label="Exit Newtonsoft.Json.JsonException.JsonException()", span="45-45"];
m25_2 [cluster="Newtonsoft.Json.JsonException.JsonException(string)", file="EnumUtils.cs", label="Entry Newtonsoft.Json.JsonException.JsonException(string)", span="54-54"];
m25_3 [cluster="Newtonsoft.Json.JsonException.JsonException(string)", file="EnumUtils.cs", label="Exit Newtonsoft.Json.JsonException.JsonException(string)", span="54-54"];
m25_4 [cluster="Newtonsoft.Json.JsonException.JsonException(string, System.Exception)", file="EnumUtils.cs", label="Entry Newtonsoft.Json.JsonException.JsonException(string, System.Exception)", span="65-65"];
m25_5 [cluster="Newtonsoft.Json.JsonException.JsonException(string, System.Exception)", file="EnumUtils.cs", label="Exit Newtonsoft.Json.JsonException.JsonException(string, System.Exception)", span="65-65"];
m25_12 [cluster="Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", file="EnumUtils.cs", label="Entry Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", span="104-104"];
m26_181 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SerializeDataTableWithNullAndIgnoreNullHandling()", file="ExpandoObjectConverter.cs", label="Entry Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SerializeDataTableWithNullAndIgnoreNullHandling()", span="340-340"];
m26_182 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SerializeDataTableWithNullAndIgnoreNullHandling()", file="ExpandoObjectConverter.cs", label="var table = new DataTable()", span="342-342"];
m26_183 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SerializeDataTableWithNullAndIgnoreNullHandling()", file="ExpandoObjectConverter.cs", label="table.Columns.Add(''item'')", span="343-343"];
m26_184 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SerializeDataTableWithNullAndIgnoreNullHandling()", file="ExpandoObjectConverter.cs", label="table.Columns.Add(''price'', typeof(double))", span="344-344"];
m26_185 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SerializeDataTableWithNullAndIgnoreNullHandling()", file="ExpandoObjectConverter.cs", label="table.Rows.Add(''shirt'', 49.99)", span="345-345"];
m26_186 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SerializeDataTableWithNullAndIgnoreNullHandling()", file="ExpandoObjectConverter.cs", label="table.Rows.Add(''pants'', 54.99)", span="346-346"];
m26_187 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SerializeDataTableWithNullAndIgnoreNullHandling()", file="ExpandoObjectConverter.cs", label="table.Rows.Add(''shoes'')", span="347-347"];
m26_188 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SerializeDataTableWithNullAndIgnoreNullHandling()", file="ExpandoObjectConverter.cs", label="var json = JsonConvert.SerializeObject(table, Formatting.None, new JsonSerializerSettings\r\n            {\r\n                NullValueHandling = NullValueHandling.Ignore\r\n            })", span="349-352"];
m26_189 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SerializeDataTableWithNullAndIgnoreNullHandling()", file="ExpandoObjectConverter.cs", label="Assert.AreEqual(@''[''\r\n                            + @''{''''item'''':''''shirt'''',''''price'''':49.99},''\r\n                            + @''{''''item'''':''''pants'''',''''price'''':54.99},''\r\n                            + @''{''''item'''':''''shoes''''}]'', json)", span="353-356"];
m26_190 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SerializeDataTableWithNullAndIgnoreNullHandling()", file="ExpandoObjectConverter.cs", label="Exit Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SerializeDataTableWithNullAndIgnoreNullHandling()", span="340-340"];
m26_52 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="ExpandoObjectConverter.cs", label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="390-390"];
m26_171 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SerializeDataTableWithNull()", file="ExpandoObjectConverter.cs", label="Entry Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SerializeDataTableWithNull()", span="323-323"];
m26_172 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SerializeDataTableWithNull()", file="ExpandoObjectConverter.cs", label="var table = new DataTable()", span="325-325"];
m26_173 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SerializeDataTableWithNull()", file="ExpandoObjectConverter.cs", label="table.Columns.Add(''item'')", span="326-326"];
m26_174 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SerializeDataTableWithNull()", file="ExpandoObjectConverter.cs", label="table.Columns.Add(''price'', typeof(double))", span="327-327"];
m26_175 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SerializeDataTableWithNull()", file="ExpandoObjectConverter.cs", label="table.Rows.Add(''shirt'', 49.99)", span="328-328"];
m26_176 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SerializeDataTableWithNull()", file="ExpandoObjectConverter.cs", label="table.Rows.Add(''pants'', 54.99)", span="329-329"];
m26_177 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SerializeDataTableWithNull()", file="ExpandoObjectConverter.cs", label="table.Rows.Add(''shoes'')", span="330-330"];
m26_178 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SerializeDataTableWithNull()", file="ExpandoObjectConverter.cs", label="var json = JsonConvert.SerializeObject(table)", span="332-332"];
m26_179 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SerializeDataTableWithNull()", file="ExpandoObjectConverter.cs", label="Assert.AreEqual(@''[''\r\n                            + @''{''''item'''':''''shirt'''',''''price'''':49.99},''\r\n                            + @''{''''item'''':''''pants'''',''''price'''':54.99},''\r\n                            + @''{''''item'''':''''shoes'''',''''price'''':null}]'', json)", span="333-336"];
m26_180 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SerializeDataTableWithNull()", file="ExpandoObjectConverter.cs", label="Exit Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SerializeDataTableWithNull()", span="323-323"];
m26_231 [cluster="Unk.EndEdit", file="ExpandoObjectConverter.cs", label="Entry Unk.EndEdit", span=""];
m26_282 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SqlDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ExpandoObjectConverter.cs", label="Entry Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SqlDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="531-531"];
m26_283 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SqlDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ExpandoObjectConverter.cs", label="((System.Data.SqlTypes.SqlDateTime)value).IsNull", span="533-533"];
m26_284 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SqlDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ExpandoObjectConverter.cs", label="writer.WriteNull()", span="534-534"];
m26_285 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SqlDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ExpandoObjectConverter.cs", label="writer.WriteValue(((System.Data.SqlTypes.SqlDateTime)value).Value)", span="536-536"];
m26_286 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SqlDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ExpandoObjectConverter.cs", label="Exit Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SqlDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="531-531"];
m26_166 [cluster="System.IO.MemoryStream.ToArray()", file="ExpandoObjectConverter.cs", label="Entry System.IO.MemoryStream.ToArray()", span="0-0"];
m26_34 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.DeserializeParseHandling()", file="ExpandoObjectConverter.cs", label="Entry Newtonsoft.Json.Tests.Converters.DataTableConverterTests.DeserializeParseHandling()", span="119-119"];
m26_35 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.DeserializeParseHandling()", file="ExpandoObjectConverter.cs", label="string json = @''[\r\n  {\r\n    ''''DateCol'''': ''''2000-12-29T00:00:00Z'''',\r\n    ''''FloatCol'''': 99.9999999999999999999\r\n  },\r\n  {\r\n    ''''DateCol'''': ''''2000-12-29T00:00:00Z'''',\r\n    ''''FloatCol'''': 99.9999999999999999999\r\n  }\r\n]''", span="121-130"];
m26_36 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.DeserializeParseHandling()", file="ExpandoObjectConverter.cs", label="DataTable deserializedDataTable = JsonConvert.DeserializeObject<DataTable>(json, new JsonSerializerSettings\r\n            {\r\n                DateParseHandling = DateParseHandling.DateTimeOffset,\r\n                FloatParseHandling = FloatParseHandling.Decimal\r\n            })", span="132-136"];
m26_37 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.DeserializeParseHandling()", file="ExpandoObjectConverter.cs", label="Assert.IsNotNull(deserializedDataTable)", span="137-137"];
m26_38 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.DeserializeParseHandling()", file="ExpandoObjectConverter.cs", label="Assert.AreEqual(string.Empty, deserializedDataTable.TableName)", span="139-139"];
m26_39 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.DeserializeParseHandling()", file="ExpandoObjectConverter.cs", label="Assert.AreEqual(2, deserializedDataTable.Columns.Count)", span="140-140"];
m26_40 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.DeserializeParseHandling()", file="ExpandoObjectConverter.cs", label="Assert.AreEqual(''DateCol'', deserializedDataTable.Columns[0].ColumnName)", span="141-141"];
m26_41 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.DeserializeParseHandling()", file="ExpandoObjectConverter.cs", label="Assert.AreEqual(typeof(DateTimeOffset), deserializedDataTable.Columns[0].DataType)", span="142-142"];
m26_42 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.DeserializeParseHandling()", file="ExpandoObjectConverter.cs", label="Assert.AreEqual(''FloatCol'', deserializedDataTable.Columns[1].ColumnName)", span="143-143"];
m26_43 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.DeserializeParseHandling()", file="ExpandoObjectConverter.cs", label="Assert.AreEqual(typeof(decimal), deserializedDataTable.Columns[1].DataType)", span="144-144"];
m26_44 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.DeserializeParseHandling()", file="ExpandoObjectConverter.cs", label="Assert.AreEqual(2, deserializedDataTable.Rows.Count)", span="146-146"];
m26_45 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.DeserializeParseHandling()", file="ExpandoObjectConverter.cs", label="DataRow dr1 = deserializedDataTable.Rows[0]", span="148-148"];
m26_48 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.DeserializeParseHandling()", file="ExpandoObjectConverter.cs", label="DataRow dr2 = deserializedDataTable.Rows[1]", span="152-152"];
m26_46 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.DeserializeParseHandling()", file="ExpandoObjectConverter.cs", label="Assert.AreEqual(new DateTimeOffset(2000, 12, 29, 0, 0, 0, TimeSpan.Zero), dr1[''DateCol''])", span="149-149"];
m26_47 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.DeserializeParseHandling()", file="ExpandoObjectConverter.cs", label="Assert.AreEqual(99.9999999999999999999m, dr1[''FloatCol''])", span="150-150"];
m26_49 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.DeserializeParseHandling()", file="ExpandoObjectConverter.cs", label="Assert.AreEqual(new DateTimeOffset(2000, 12, 29, 0, 0, 0, TimeSpan.Zero), dr2[''DateCol''])", span="153-153"];
m26_50 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.DeserializeParseHandling()", file="ExpandoObjectConverter.cs", label="Assert.AreEqual(99.9999999999999999999m, dr2[''FloatCol''])", span="154-154"];
m26_51 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.DeserializeParseHandling()", file="ExpandoObjectConverter.cs", label="Exit Newtonsoft.Json.Tests.Converters.DataTableConverterTests.DeserializeParseHandling()", span="119-119"];
m26_159 [cluster="System.Guid.Guid(string)", file="ExpandoObjectConverter.cs", label="Entry System.Guid.Guid(string)", span="0-0"];
m26_134 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", file="ExpandoObjectConverter.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", span="787-787"];
m26_164 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", file="ExpandoObjectConverter.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", span="125-125"];
m26_234 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type)", file="ExpandoObjectConverter.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type)", span="728-728"];
m26_242 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.AddCustomersRow(string)", file="ExpandoObjectConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.AddCustomersRow(string)", span="408-408"];
m26_276 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SqlDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExpandoObjectConverter.cs", label="Entry Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SqlDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="523-523"];
m26_277 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SqlDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExpandoObjectConverter.cs", label="reader.Value == null || reader.Value == DBNull.Value", span="525-525"];
m26_279 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SqlDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExpandoObjectConverter.cs", label="return new System.Data.SqlTypes.SqlDateTime((DateTime)serializer.Deserialize(reader));", span="528-528"];
m26_278 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SqlDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExpandoObjectConverter.cs", label="return System.Data.SqlTypes.SqlDateTime.Null;", span="526-526"];
m26_280 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SqlDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExpandoObjectConverter.cs", label="Exit Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SqlDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="523-523"];
m26_235 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SerializedTypedDataTable()", file="ExpandoObjectConverter.cs", label="Entry Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SerializedTypedDataTable()", span="428-428"];
m26_236 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SerializedTypedDataTable()", file="ExpandoObjectConverter.cs", label="CustomerDataSet.CustomersDataTable dt = new CustomerDataSet.CustomersDataTable()", span="430-430"];
m26_237 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SerializedTypedDataTable()", file="ExpandoObjectConverter.cs", label="dt.AddCustomersRow(''432'')", span="431-431"];
m26_238 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SerializedTypedDataTable()", file="ExpandoObjectConverter.cs", label="string json = JsonConvert.SerializeObject(dt, Formatting.Indented)", span="433-433"];
m26_239 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SerializedTypedDataTable()", file="ExpandoObjectConverter.cs", label="StringAssert.AreEqual(@''[\r\n  {\r\n    ''''CustomerID'''': ''''432''''\r\n  }\r\n]'', json)", span="435-439"];
m26_240 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SerializedTypedDataTable()", file="ExpandoObjectConverter.cs", label="Exit Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SerializedTypedDataTable()", span="428-428"];
m26_126 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.PassedInJsonConverterOverridesInternalConverter()", file="ExpandoObjectConverter.cs", label="Entry Newtonsoft.Json.Tests.Converters.DataTableConverterTests.PassedInJsonConverterOverridesInternalConverter()", span="270-270"];
m26_127 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.PassedInJsonConverterOverridesInternalConverter()", file="ExpandoObjectConverter.cs", label="DataTable t1 = new DataTable(''Custom'')", span="272-272"];
m26_128 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.PassedInJsonConverterOverridesInternalConverter()", file="ExpandoObjectConverter.cs", label="string json = JsonConvert.SerializeObject(t1, Formatting.Indented, new TestDataTableConverter())", span="274-274"];
m26_131 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.PassedInJsonConverterOverridesInternalConverter()", file="ExpandoObjectConverter.cs", label="Assert.AreEqual(t1.TableName, t2.TableName)", span="278-278"];
m26_129 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.PassedInJsonConverterOverridesInternalConverter()", file="ExpandoObjectConverter.cs", label="Assert.AreEqual(@''''''Custom'''''', json)", span="275-275"];
m26_130 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.PassedInJsonConverterOverridesInternalConverter()", file="ExpandoObjectConverter.cs", label="DataTable t2 = JsonConvert.DeserializeObject<DataTable>(json, new TestDataTableConverter())", span="277-277"];
m26_132 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.PassedInJsonConverterOverridesInternalConverter()", file="ExpandoObjectConverter.cs", label="Exit Newtonsoft.Json.Tests.Converters.DataTableConverterTests.PassedInJsonConverterOverridesInternalConverter()", span="270-270"];
m26_256 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SerializeNullRoot()", file="ExpandoObjectConverter.cs", label="Entry Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SerializeNullRoot()", span="481-481"];
m26_257 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SerializeNullRoot()", file="ExpandoObjectConverter.cs", label="string json = JsonConvert.SerializeObject(null, typeof(DataTable), new JsonSerializerSettings\r\n            {\r\n                Formatting = Formatting.Indented\r\n            })", span="483-486"];
m26_258 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SerializeNullRoot()", file="ExpandoObjectConverter.cs", label="StringAssert.AreEqual(@''null'', json)", span="488-488"];
m26_259 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SerializeNullRoot()", file="ExpandoObjectConverter.cs", label="Exit Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SerializeNullRoot()", span="481-481"];
m26_241 [cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.CustomersDataTable()", file="ExpandoObjectConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.CustomersDataTable()", span="328-328"];
m26_168 [cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="ExpandoObjectConverter.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="414-414"];
m26_202 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.DerializeDataTableWithExplicitNull()", file="ExpandoObjectConverter.cs", label="Entry Newtonsoft.Json.Tests.Converters.DataTableConverterTests.DerializeDataTableWithExplicitNull()", span="376-376"];
m26_203 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.DerializeDataTableWithExplicitNull()", file="ExpandoObjectConverter.cs", label="string json = @''[''\r\n                                + @''{''''item'''':''''shirt'''',''''price'''':49.99},''\r\n                                + @''{''''item'''':''''pants'''',''''price'''':54.99},''\r\n                                + @''{''''item'''':''''shoes'''',''''price'''':null}]''", span="378-381"];
m26_204 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.DerializeDataTableWithExplicitNull()", file="ExpandoObjectConverter.cs", label="var table = JsonConvert.DeserializeObject<DataTable>(json)", span="382-382"];
m26_205 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.DerializeDataTableWithExplicitNull()", file="ExpandoObjectConverter.cs", label="Assert.AreEqual(''shirt'', table.Rows[0][''item''])", span="383-383"];
m26_206 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.DerializeDataTableWithExplicitNull()", file="ExpandoObjectConverter.cs", label="Assert.AreEqual(''pants'', table.Rows[1][''item''])", span="384-384"];
m26_207 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.DerializeDataTableWithExplicitNull()", file="ExpandoObjectConverter.cs", label="Assert.AreEqual(''shoes'', table.Rows[2][''item''])", span="385-385"];
m26_208 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.DerializeDataTableWithExplicitNull()", file="ExpandoObjectConverter.cs", label="Assert.AreEqual(49.99, (double)table.Rows[0][''price''], 0.01)", span="386-386"];
m26_209 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.DerializeDataTableWithExplicitNull()", file="ExpandoObjectConverter.cs", label="Assert.AreEqual(54.99, (double)table.Rows[1][''price''], 0.01)", span="387-387"];
m26_210 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.DerializeDataTableWithExplicitNull()", file="ExpandoObjectConverter.cs", label="CustomAssert.IsInstanceOfType(typeof(System.DBNull), table.Rows[2][''price''])", span="388-388"];
m26_211 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.DerializeDataTableWithExplicitNull()", file="ExpandoObjectConverter.cs", label="Exit Newtonsoft.Json.Tests.Converters.DataTableConverterTests.DerializeDataTableWithExplicitNull()", span="376-376"];
m26_107 [cluster="DataColumn.cstr", file="ExpandoObjectConverter.cs", label="Entry DataColumn.cstr", span=""];
m26_109 [cluster="Unk.NewRow", file="ExpandoObjectConverter.cs", label="Entry Unk.NewRow", span=""];
m26_112 [cluster="Unk.SerializeObject", file="ExpandoObjectConverter.cs", label="Entry Unk.SerializeObject", span=""];
m26_243 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.DeserializedTypedDataTable()", file="ExpandoObjectConverter.cs", label="Entry Newtonsoft.Json.Tests.Converters.DataTableConverterTests.DeserializedTypedDataTable()", span="443-443"];
m26_244 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.DeserializedTypedDataTable()", file="ExpandoObjectConverter.cs", label="string json = @''[\r\n  {\r\n    ''''CustomerID'''': ''''432''''\r\n  }\r\n]''", span="445-449"];
m26_245 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.DeserializedTypedDataTable()", file="ExpandoObjectConverter.cs", label="var dt = JsonConvert.DeserializeObject<CustomerDataSet.CustomersDataTable>(json)", span="451-451"];
m26_246 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.DeserializedTypedDataTable()", file="ExpandoObjectConverter.cs", label="Assert.AreEqual(''432'', dt[0].CustomerID)", span="453-453"];
m26_247 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.DeserializedTypedDataTable()", file="ExpandoObjectConverter.cs", label="Exit Newtonsoft.Json.Tests.Converters.DataTableConverterTests.DeserializedTypedDataTable()", span="443-443"];
m26_123 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.TestDataTableConverter.CanConvert(System.Type)", file="ExpandoObjectConverter.cs", label="Entry Newtonsoft.Json.Tests.Converters.DataTableConverterTests.TestDataTableConverter.CanConvert(System.Type)", span="263-263"];
m26_124 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.TestDataTableConverter.CanConvert(System.Type)", file="ExpandoObjectConverter.cs", label="return (objectType == typeof(DataTable));", span="265-265"];
m26_125 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.TestDataTableConverter.CanConvert(System.Type)", file="ExpandoObjectConverter.cs", label="Exit Newtonsoft.Json.Tests.Converters.DataTableConverterTests.TestDataTableConverter.CanConvert(System.Type)", span="263-263"];
m26_160 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="ExpandoObjectConverter.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="445-445"];
m26_55 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Serialize()", file="ExpandoObjectConverter.cs", label="Entry Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Serialize()", span="159-159"];
m26_56 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Serialize()", file="ExpandoObjectConverter.cs", label="DataTable myTable = new DataTable(''blah'')", span="162-162"];
m26_57 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Serialize()", file="ExpandoObjectConverter.cs", label="DataColumn colString = new DataColumn(''StringCol'')", span="165-165"];
m26_59 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Serialize()", file="ExpandoObjectConverter.cs", label="myTable.Columns.Add(colString)", span="167-167"];
m26_62 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Serialize()", file="ExpandoObjectConverter.cs", label="myTable.Columns.Add(colInt32)", span="171-171"];
m26_65 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Serialize()", file="ExpandoObjectConverter.cs", label="myTable.Columns.Add(colBoolean)", span="175-175"];
m26_68 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Serialize()", file="ExpandoObjectConverter.cs", label="myTable.Columns.Add(colTimeSpan)", span="179-179"];
m26_72 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Serialize()", file="ExpandoObjectConverter.cs", label="myTable.Columns.Add(colDateTime)", span="184-184"];
m26_75 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Serialize()", file="ExpandoObjectConverter.cs", label="myTable.Columns.Add(colDecimal)", span="188-188"];
m26_78 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Serialize()", file="ExpandoObjectConverter.cs", label="myTable.Columns.Add(colDataTable)", span="192-192"];
m26_81 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Serialize()", file="ExpandoObjectConverter.cs", label="myTable.Columns.Add(colArray)", span="196-196"];
m26_84 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Serialize()", file="ExpandoObjectConverter.cs", label="myTable.Columns.Add(colBytes)", span="200-200"];
m26_85 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Serialize()", file="ExpandoObjectConverter.cs", label="DataRow myNewRow = myTable.NewRow()", span="203-203"];
m26_102 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Serialize()", file="ExpandoObjectConverter.cs", label="myTable.Rows.Add(myNewRow)", span="223-223"];
m26_103 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Serialize()", file="ExpandoObjectConverter.cs", label="string json = JsonConvert.SerializeObject(myTable, Formatting.Indented)", span="225-225"];
m26_58 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Serialize()", file="ExpandoObjectConverter.cs", label="colString.DataType = typeof(string)", span="166-166"];
m26_60 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Serialize()", file="ExpandoObjectConverter.cs", label="DataColumn colInt32 = new DataColumn(''Int32Col'')", span="169-169"];
m26_61 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Serialize()", file="ExpandoObjectConverter.cs", label="colInt32.DataType = typeof(int)", span="170-170"];
m26_63 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Serialize()", file="ExpandoObjectConverter.cs", label="DataColumn colBoolean = new DataColumn(''BooleanCol'')", span="173-173"];
m26_64 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Serialize()", file="ExpandoObjectConverter.cs", label="colBoolean.DataType = typeof(bool)", span="174-174"];
m26_66 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Serialize()", file="ExpandoObjectConverter.cs", label="DataColumn colTimeSpan = new DataColumn(''TimeSpanCol'')", span="177-177"];
m26_67 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Serialize()", file="ExpandoObjectConverter.cs", label="colTimeSpan.DataType = typeof(TimeSpan)", span="178-178"];
m26_69 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Serialize()", file="ExpandoObjectConverter.cs", label="DataColumn colDateTime = new DataColumn(''DateTimeCol'')", span="181-181"];
m26_70 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Serialize()", file="ExpandoObjectConverter.cs", label="colDateTime.DataType = typeof(DateTime)", span="182-182"];
m26_71 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Serialize()", file="ExpandoObjectConverter.cs", label="colDateTime.DateTimeMode = DataSetDateTime.Utc", span="183-183"];
m26_73 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Serialize()", file="ExpandoObjectConverter.cs", label="DataColumn colDecimal = new DataColumn(''DecimalCol'')", span="186-186"];
m26_74 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Serialize()", file="ExpandoObjectConverter.cs", label="colDecimal.DataType = typeof(decimal)", span="187-187"];
m26_76 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Serialize()", file="ExpandoObjectConverter.cs", label="DataColumn colDataTable = new DataColumn(''DataTableCol'')", span="190-190"];
m26_77 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Serialize()", file="ExpandoObjectConverter.cs", label="colDataTable.DataType = typeof(DataTable)", span="191-191"];
m26_79 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Serialize()", file="ExpandoObjectConverter.cs", label="DataColumn colArray = new DataColumn(''ArrayCol'')", span="194-194"];
m26_80 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Serialize()", file="ExpandoObjectConverter.cs", label="colArray.DataType = typeof(int[])", span="195-195"];
m26_82 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Serialize()", file="ExpandoObjectConverter.cs", label="DataColumn colBytes = new DataColumn(''BytesCol'')", span="198-198"];
m26_83 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Serialize()", file="ExpandoObjectConverter.cs", label="colBytes.DataType = typeof(byte[])", span="199-199"];
m26_86 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Serialize()", file="ExpandoObjectConverter.cs", label="myNewRow[''StringCol''] = ''Item Name''", span="205-205"];
m26_87 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Serialize()", file="ExpandoObjectConverter.cs", label="myNewRow[''Int32Col''] = 2147483647", span="206-206"];
m26_88 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Serialize()", file="ExpandoObjectConverter.cs", label="myNewRow[''BooleanCol''] = true", span="207-207"];
m26_89 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Serialize()", file="ExpandoObjectConverter.cs", label="myNewRow[''TimeSpanCol''] = new TimeSpan(10, 22, 10, 15, 100)", span="208-208"];
m26_90 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Serialize()", file="ExpandoObjectConverter.cs", label="myNewRow[''DateTimeCol''] = new DateTime(2000, 12, 29, 0, 0, 0, DateTimeKind.Utc)", span="209-209"];
m26_91 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Serialize()", file="ExpandoObjectConverter.cs", label="myNewRow[''DecimalCol''] = 64.0021", span="210-210"];
m26_92 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Serialize()", file="ExpandoObjectConverter.cs", label="myNewRow[''ArrayCol''] = new[] { 1 }", span="211-211"];
m26_93 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Serialize()", file="ExpandoObjectConverter.cs", label="myNewRow[''BytesCol''] = Encoding.UTF8.GetBytes(''Hello world'')", span="212-212"];
m26_101 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Serialize()", file="ExpandoObjectConverter.cs", label="myNewRow[''DataTableCol''] = nestedTable", span="222-222"];
m26_94 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Serialize()", file="ExpandoObjectConverter.cs", label="DataTable nestedTable = new DataTable(''Nested'')", span="214-214"];
m26_95 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Serialize()", file="ExpandoObjectConverter.cs", label="DataColumn nestedColString = new DataColumn(''NestedStringCol'')", span="215-215"];
m26_97 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Serialize()", file="ExpandoObjectConverter.cs", label="nestedTable.Columns.Add(nestedColString)", span="217-217"];
m26_98 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Serialize()", file="ExpandoObjectConverter.cs", label="DataRow myNewNestedRow = nestedTable.NewRow()", span="218-218"];
m26_100 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Serialize()", file="ExpandoObjectConverter.cs", label="nestedTable.Rows.Add(myNewNestedRow)", span="220-220"];
m26_96 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Serialize()", file="ExpandoObjectConverter.cs", label="nestedColString.DataType = typeof(string)", span="216-216"];
m26_99 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Serialize()", file="ExpandoObjectConverter.cs", label="myNewNestedRow[''NestedStringCol''] = ''Nested!''", span="219-219"];
m26_104 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Serialize()", file="ExpandoObjectConverter.cs", label="StringAssert.AreEqual(@''[\r\n  {\r\n    ''''StringCol'''': ''''Item Name'''',\r\n    ''''Int32Col'''': 2147483647,\r\n    ''''BooleanCol'''': true,\r\n    ''''TimeSpanCol'''': ''''10.22:10:15.1000000'''',\r\n    ''''DateTimeCol'''': ''''2000-12-29T00:00:00Z'''',\r\n    ''''DecimalCol'''': 64.0021,\r\n    ''''DataTableCol'''': [\r\n      {\r\n        ''''NestedStringCol'''': ''''Nested!''''\r\n      }\r\n    ],\r\n    ''''ArrayCol'''': [\r\n      1\r\n    ],\r\n    ''''BytesCol'''': ''''SGVsbG8gd29ybGQ=''''\r\n  }\r\n]'', json)", span="226-244"];
m26_105 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Serialize()", file="ExpandoObjectConverter.cs", label="Exit Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Serialize()", span="159-159"];
m26_260 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="ExpandoObjectConverter.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, System.Type, Newtonsoft.Json.JsonSerializerSettings)", span="589-589"];
m26_271 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", file="ExpandoObjectConverter.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", span="552-552"];
m26_272 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SqlDateTimeConverter.CanConvert(System.Type)", file="ExpandoObjectConverter.cs", label="Entry Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SqlDateTimeConverter.CanConvert(System.Type)", span="518-518"];
m26_273 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SqlDateTimeConverter.CanConvert(System.Type)", file="ExpandoObjectConverter.cs", label="return typeof(System.Data.SqlTypes.SqlDateTime).IsAssignableFrom(objectType);", span="520-520"];
m26_274 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SqlDateTimeConverter.CanConvert(System.Type)", file="ExpandoObjectConverter.cs", label="Exit Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SqlDateTimeConverter.CanConvert(System.Type)", span="518-518"];
m26_281 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", file="ExpandoObjectConverter.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", span="672-672"];
m26_191 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.DerializeDataTableWithImplicitNull()", file="ExpandoObjectConverter.cs", label="Entry Newtonsoft.Json.Tests.Converters.DataTableConverterTests.DerializeDataTableWithImplicitNull()", span="360-360"];
m26_192 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.DerializeDataTableWithImplicitNull()", file="ExpandoObjectConverter.cs", label="string json = @''[''\r\n                                + @''{''''item'''':''''shirt'''',''''price'''':49.99},''\r\n                                + @''{''''item'''':''''pants'''',''''price'''':54.99},''\r\n                                + @''{''''item'''':''''shoes''''}]''", span="362-365"];
m26_193 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.DerializeDataTableWithImplicitNull()", file="ExpandoObjectConverter.cs", label="var table = JsonConvert.DeserializeObject<DataTable>(json)", span="366-366"];
m26_194 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.DerializeDataTableWithImplicitNull()", file="ExpandoObjectConverter.cs", label="Assert.AreEqual(''shirt'', table.Rows[0][''item''])", span="367-367"];
m26_195 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.DerializeDataTableWithImplicitNull()", file="ExpandoObjectConverter.cs", label="Assert.AreEqual(''pants'', table.Rows[1][''item''])", span="368-368"];
m26_196 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.DerializeDataTableWithImplicitNull()", file="ExpandoObjectConverter.cs", label="Assert.AreEqual(''shoes'', table.Rows[2][''item''])", span="369-369"];
m26_197 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.DerializeDataTableWithImplicitNull()", file="ExpandoObjectConverter.cs", label="Assert.AreEqual(49.99, (double)table.Rows[0][''price''], 0.01)", span="370-370"];
m26_198 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.DerializeDataTableWithImplicitNull()", file="ExpandoObjectConverter.cs", label="Assert.AreEqual(54.99, (double)table.Rows[1][''price''], 0.01)", span="371-371"];
m26_199 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.DerializeDataTableWithImplicitNull()", file="ExpandoObjectConverter.cs", label="CustomAssert.IsInstanceOfType(typeof(System.DBNull), table.Rows[2][''price''])", span="372-372"];
m26_200 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.DerializeDataTableWithImplicitNull()", file="ExpandoObjectConverter.cs", label="Exit Newtonsoft.Json.Tests.Converters.DataTableConverterTests.DerializeDataTableWithImplicitNull()", span="360-360"];
m26_114 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.TestDataTableConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ExpandoObjectConverter.cs", label="Entry Newtonsoft.Json.Tests.Converters.DataTableConverterTests.TestDataTableConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="249-249"];
m26_115 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.TestDataTableConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ExpandoObjectConverter.cs", label="DataTable d = (DataTable)value", span="251-251"];
m26_116 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.TestDataTableConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ExpandoObjectConverter.cs", label="writer.WriteValue(d.TableName)", span="252-252"];
m26_117 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.TestDataTableConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ExpandoObjectConverter.cs", label="Exit Newtonsoft.Json.Tests.Converters.DataTableConverterTests.TestDataTableConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="249-249"];
m26_269 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SqlDateTimeConverter.SqlDateTimeConverter()", file="ExpandoObjectConverter.cs", label="Entry Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SqlDateTimeConverter.SqlDateTimeConverter()", span="516-516"];
m26_32 [cluster="Unk.AreEqual", file="ExpandoObjectConverter.cs", label="Entry Unk.AreEqual", span=""];
m26_161 [cluster="System.IO.MemoryStream.MemoryStream()", file="ExpandoObjectConverter.cs", label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0"];
m26_232 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="ExpandoObjectConverter.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m26_170 [cluster="Unk.AreEquivalent", file="ExpandoObjectConverter.cs", label="Entry Unk.AreEquivalent", span=""];
m26_233 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="ExpandoObjectConverter.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="525-525"];
m26_30 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="ExpandoObjectConverter.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="739-739"];
m26_31 [cluster="Unk.IsNotNull", file="ExpandoObjectConverter.cs", label="Entry Unk.IsNotNull", span=""];
m26_169 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", file="ExpandoObjectConverter.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", span="696-696"];
m26_0 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Deserialize()", file="ExpandoObjectConverter.cs", label="Entry Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Deserialize()", span="53-53"];
m26_1 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Deserialize()", file="ExpandoObjectConverter.cs", label="string json = @''[\r\n  {\r\n    ''''id'''': 0,\r\n    ''''item'''': ''''item 0'''',\r\n    ''''DataTableCol'''': [\r\n      {\r\n        ''''NestedStringCol'''': ''''0!''''\r\n      }\r\n    ],\r\n    ''''ArrayCol'''': [\r\n      0\r\n    ],\r\n    ''''DateCol'''': ''''2000-12-29T00:00:00Z''''\r\n  },\r\n  {\r\n    ''''id'''': 1,\r\n    ''''item'''': ''''item 1'''',\r\n    ''''DataTableCol'''': [\r\n      {\r\n        ''''NestedStringCol'''': ''''1!''''\r\n      }\r\n    ],\r\n    ''''ArrayCol'''': [\r\n      1\r\n    ],\r\n    ''''DateCol'''': ''''2000-12-29T00:00:00Z''''\r\n  }\r\n]''", span="55-82"];
m26_2 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Deserialize()", file="ExpandoObjectConverter.cs", label="DataTable deserializedDataTable = JsonConvert.DeserializeObject<DataTable>(json)", span="84-84"];
m26_3 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Deserialize()", file="ExpandoObjectConverter.cs", label="Assert.IsNotNull(deserializedDataTable)", span="85-85"];
m26_4 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Deserialize()", file="ExpandoObjectConverter.cs", label="Assert.AreEqual(string.Empty, deserializedDataTable.TableName)", span="87-87"];
m26_5 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Deserialize()", file="ExpandoObjectConverter.cs", label="Assert.AreEqual(5, deserializedDataTable.Columns.Count)", span="88-88"];
m26_6 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Deserialize()", file="ExpandoObjectConverter.cs", label="Assert.AreEqual(''id'', deserializedDataTable.Columns[0].ColumnName)", span="89-89"];
m26_7 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Deserialize()", file="ExpandoObjectConverter.cs", label="Assert.AreEqual(typeof(long), deserializedDataTable.Columns[0].DataType)", span="90-90"];
m26_8 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Deserialize()", file="ExpandoObjectConverter.cs", label="Assert.AreEqual(''item'', deserializedDataTable.Columns[1].ColumnName)", span="91-91"];
m26_9 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Deserialize()", file="ExpandoObjectConverter.cs", label="Assert.AreEqual(typeof(string), deserializedDataTable.Columns[1].DataType)", span="92-92"];
m26_10 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Deserialize()", file="ExpandoObjectConverter.cs", label="Assert.AreEqual(''DataTableCol'', deserializedDataTable.Columns[2].ColumnName)", span="93-93"];
m26_11 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Deserialize()", file="ExpandoObjectConverter.cs", label="Assert.AreEqual(typeof(DataTable), deserializedDataTable.Columns[2].DataType)", span="94-94"];
m26_12 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Deserialize()", file="ExpandoObjectConverter.cs", label="Assert.AreEqual(''ArrayCol'', deserializedDataTable.Columns[3].ColumnName)", span="95-95"];
m26_13 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Deserialize()", file="ExpandoObjectConverter.cs", label="Assert.AreEqual(typeof(long[]), deserializedDataTable.Columns[3].DataType)", span="96-96"];
m26_14 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Deserialize()", file="ExpandoObjectConverter.cs", label="Assert.AreEqual(''DateCol'', deserializedDataTable.Columns[4].ColumnName)", span="97-97"];
m26_15 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Deserialize()", file="ExpandoObjectConverter.cs", label="Assert.AreEqual(typeof(DateTime), deserializedDataTable.Columns[4].DataType)", span="98-98"];
m26_16 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Deserialize()", file="ExpandoObjectConverter.cs", label="Assert.AreEqual(2, deserializedDataTable.Rows.Count)", span="100-100"];
m26_17 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Deserialize()", file="ExpandoObjectConverter.cs", label="DataRow dr1 = deserializedDataTable.Rows[0]", span="102-102"];
m26_23 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Deserialize()", file="ExpandoObjectConverter.cs", label="DataRow dr2 = deserializedDataTable.Rows[1]", span="109-109"];
m26_18 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Deserialize()", file="ExpandoObjectConverter.cs", label="Assert.AreEqual(0L, dr1[''id''])", span="103-103"];
m26_19 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Deserialize()", file="ExpandoObjectConverter.cs", label="Assert.AreEqual(''item 0'', dr1[''item''])", span="104-104"];
m26_20 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Deserialize()", file="ExpandoObjectConverter.cs", label="Assert.AreEqual(''0!'', ((DataTable)dr1[''DataTableCol'']).Rows[0][''NestedStringCol''])", span="105-105"];
m26_21 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Deserialize()", file="ExpandoObjectConverter.cs", label="Assert.AreEqual(0L, ((long[])dr1[''ArrayCol''])[0])", span="106-106"];
m26_22 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Deserialize()", file="ExpandoObjectConverter.cs", label="Assert.AreEqual(new DateTime(2000, 12, 29, 0, 0, 0, DateTimeKind.Utc), dr1[''DateCol''])", span="107-107"];
m26_24 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Deserialize()", file="ExpandoObjectConverter.cs", label="Assert.AreEqual(1L, dr2[''id''])", span="110-110"];
m26_25 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Deserialize()", file="ExpandoObjectConverter.cs", label="Assert.AreEqual(''item 1'', dr2[''item''])", span="111-111"];
m26_26 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Deserialize()", file="ExpandoObjectConverter.cs", label="Assert.AreEqual(''1!'', ((DataTable)dr2[''DataTableCol'']).Rows[0][''NestedStringCol''])", span="112-112"];
m26_27 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Deserialize()", file="ExpandoObjectConverter.cs", label="Assert.AreEqual(1L, ((long[])dr2[''ArrayCol''])[0])", span="113-113"];
m26_28 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Deserialize()", file="ExpandoObjectConverter.cs", label="Assert.AreEqual(new DateTime(2000, 12, 29, 0, 0, 0, DateTimeKind.Utc), dr2[''DateCol''])", span="114-114"];
m26_29 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Deserialize()", file="ExpandoObjectConverter.cs", label="Exit Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Deserialize()", span="53-53"];
m26_162 [cluster="Newtonsoft.Json.Bson.BsonWriter.BsonWriter(System.IO.Stream)", file="ExpandoObjectConverter.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.BsonWriter(System.IO.Stream)", span="65-65"];
m26_106 [cluster="DataTable.cstr", file="ExpandoObjectConverter.cs", label="Entry DataTable.cstr", span=""];
m26_135 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.RoundtripBsonBytes()", file="ExpandoObjectConverter.cs", label="Entry Newtonsoft.Json.Tests.Converters.DataTableConverterTests.RoundtripBsonBytes()", span="282-282"];
m26_136 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.RoundtripBsonBytes()", file="ExpandoObjectConverter.cs", label="Guid g = new Guid(''EDE9A599-A7D9-44A9-9243-7C287049DD20'')", span="284-284"];
m26_137 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.RoundtripBsonBytes()", file="ExpandoObjectConverter.cs", label="var table = new DataTable()", span="286-286"];
m26_140 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.RoundtripBsonBytes()", file="ExpandoObjectConverter.cs", label="table.Rows.Add(Encoding.UTF8.GetBytes(''Hello world!''), g)", span="289-289"];
m26_157 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.RoundtripBsonBytes()", file="ExpandoObjectConverter.cs", label="Assert.AreEqual(g, (Guid)dr1[''id''])", span="319-319"];
m26_138 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.RoundtripBsonBytes()", file="ExpandoObjectConverter.cs", label="table.Columns.Add(''data'', typeof(byte[]))", span="287-287"];
m26_139 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.RoundtripBsonBytes()", file="ExpandoObjectConverter.cs", label="table.Columns.Add(''id'', typeof(Guid))", span="288-288"];
m26_144 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.RoundtripBsonBytes()", file="ExpandoObjectConverter.cs", label="serializer.Serialize(bw, table)", span="296-296"];
m26_141 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.RoundtripBsonBytes()", file="ExpandoObjectConverter.cs", label="JsonSerializer serializer = new JsonSerializer()", span="291-291"];
m26_142 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.RoundtripBsonBytes()", file="ExpandoObjectConverter.cs", label="MemoryStream ms = new MemoryStream()", span="293-293"];
m26_147 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.RoundtripBsonBytes()", file="ExpandoObjectConverter.cs", label="DataTable deserializedDataTable = serializer.Deserialize<DataTable>(new BsonReader(new MemoryStream(ms.ToArray())) { ReadRootValueAsArray = true })", span="306-306"];
m26_143 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.RoundtripBsonBytes()", file="ExpandoObjectConverter.cs", label="BsonWriter bw = new BsonWriter(ms)", span="294-294"];
m26_145 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.RoundtripBsonBytes()", file="ExpandoObjectConverter.cs", label="JToken o = JToken.ReadFrom(new BsonReader(new MemoryStream(ms.ToArray())) { ReadRootValueAsArray = true })", span="298-298"];
m26_146 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.RoundtripBsonBytes()", file="ExpandoObjectConverter.cs", label="StringAssert.AreEqual(@''[\r\n  {\r\n    ''''data'''': ''''SGVsbG8gd29ybGQh'''',\r\n    ''''id'''': ''''ede9a599-a7d9-44a9-9243-7c287049dd20''''\r\n  }\r\n]'', o.ToString())", span="299-304"];
m26_148 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.RoundtripBsonBytes()", file="ExpandoObjectConverter.cs", label="Assert.AreEqual(string.Empty, deserializedDataTable.TableName)", span="308-308"];
m26_149 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.RoundtripBsonBytes()", file="ExpandoObjectConverter.cs", label="Assert.AreEqual(2, deserializedDataTable.Columns.Count)", span="309-309"];
m26_150 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.RoundtripBsonBytes()", file="ExpandoObjectConverter.cs", label="Assert.AreEqual(''data'', deserializedDataTable.Columns[0].ColumnName)", span="310-310"];
m26_151 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.RoundtripBsonBytes()", file="ExpandoObjectConverter.cs", label="Assert.AreEqual(typeof(byte[]), deserializedDataTable.Columns[0].DataType)", span="311-311"];
m26_152 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.RoundtripBsonBytes()", file="ExpandoObjectConverter.cs", label="Assert.AreEqual(''id'', deserializedDataTable.Columns[1].ColumnName)", span="312-312"];
m26_153 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.RoundtripBsonBytes()", file="ExpandoObjectConverter.cs", label="Assert.AreEqual(typeof(Guid), deserializedDataTable.Columns[1].DataType)", span="313-313"];
m26_154 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.RoundtripBsonBytes()", file="ExpandoObjectConverter.cs", label="Assert.AreEqual(1, deserializedDataTable.Rows.Count)", span="315-315"];
m26_155 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.RoundtripBsonBytes()", file="ExpandoObjectConverter.cs", label="DataRow dr1 = deserializedDataTable.Rows[0]", span="317-317"];
m26_156 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.RoundtripBsonBytes()", file="ExpandoObjectConverter.cs", label="CollectionAssert.AreEquivalent(Encoding.UTF8.GetBytes(''Hello world!''), (byte[])dr1[''data''])", span="318-318"];
m26_158 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.RoundtripBsonBytes()", file="ExpandoObjectConverter.cs", label="Exit Newtonsoft.Json.Tests.Converters.DataTableConverterTests.RoundtripBsonBytes()", span="282-282"];
m26_248 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SerializeNull()", file="ExpandoObjectConverter.cs", label="Entry Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SerializeNull()", span="462-462"];
m26_249 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SerializeNull()", file="ExpandoObjectConverter.cs", label="DataTableTestClass c1 = new DataTableTestClass\r\n            {\r\n                Table = null\r\n            }", span="464-467"];
m26_250 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SerializeNull()", file="ExpandoObjectConverter.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="469-469"];
m26_251 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SerializeNull()", file="ExpandoObjectConverter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Table'''': null\r\n}'', json)", span="471-473"];
m26_252 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SerializeNull()", file="ExpandoObjectConverter.cs", label="DataTableTestClass c2 = JsonConvert.DeserializeObject<DataTableTestClass>(json)", span="475-475"];
m26_253 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SerializeNull()", file="ExpandoObjectConverter.cs", label="Assert.AreEqual(null, c2.Table)", span="477-477"];
m26_254 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SerializeNull()", file="ExpandoObjectConverter.cs", label="Exit Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SerializeNull()", span="462-462"];
m26_255 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.DataTableTestClass.DataTableTestClass()", file="ExpandoObjectConverter.cs", label="Entry Newtonsoft.Json.Tests.Converters.DataTableConverterTests.DataTableTestClass.DataTableTestClass()", span="456-456"];
m26_261 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.DeserializedTypedDataTableWithConverter()", file="ExpandoObjectConverter.cs", label="Entry Newtonsoft.Json.Tests.Converters.DataTableConverterTests.DeserializedTypedDataTableWithConverter()", span="493-493"];
m26_262 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.DeserializedTypedDataTableWithConverter()", file="ExpandoObjectConverter.cs", label="string json = @''{\r\n  ''''TestTable'''': [\r\n    {\r\n      ''''DateTimeValue'''': ''''2015-11-28T00:00:00''''\r\n    },\r\n    {\r\n      ''''DateTimeValue'''': null\r\n    }\r\n  ]\r\n}''", span="495-504"];
m26_263 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.DeserializedTypedDataTableWithConverter()", file="ExpandoObjectConverter.cs", label="SqlTypesDataSet ds = JsonConvert.DeserializeObject<SqlTypesDataSet>(json, new SqlDateTimeConverter())", span="506-506"];
m26_267 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.DeserializedTypedDataTableWithConverter()", file="ExpandoObjectConverter.cs", label="StringAssert.AreEqual(json, json2)", span="513-513"];
m26_264 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.DeserializedTypedDataTableWithConverter()", file="ExpandoObjectConverter.cs", label="Assert.AreEqual(new System.Data.SqlTypes.SqlDateTime(2015, 11, 28), ds.TestTable[0].DateTimeValue)", span="508-508"];
m26_265 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.DeserializedTypedDataTableWithConverter()", file="ExpandoObjectConverter.cs", label="Assert.AreEqual(System.Data.SqlTypes.SqlDateTime.Null, ds.TestTable[1].DateTimeValue)", span="509-509"];
m26_266 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.DeserializedTypedDataTableWithConverter()", file="ExpandoObjectConverter.cs", label="string json2 = JsonConvert.SerializeObject(ds, Formatting.Indented, new SqlDateTimeConverter())", span="511-511"];
m26_268 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.DeserializedTypedDataTableWithConverter()", file="ExpandoObjectConverter.cs", label="Exit Newtonsoft.Json.Tests.Converters.DataTableConverterTests.DeserializedTypedDataTableWithConverter()", span="493-493"];
m26_287 [cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="ExpandoObjectConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="835-835"];
m26_33 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="ExpandoObjectConverter.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m26_110 [cluster="System.TimeSpan.TimeSpan(int, int, int, int, int)", file="ExpandoObjectConverter.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int, int, int)", span="0-0"];
m26_118 [cluster="Unk.WriteValue", file="ExpandoObjectConverter.cs", label="Entry Unk.WriteValue", span=""];
m26_212 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SerializeKeyValuePairWithDataTableKey()", file="ExpandoObjectConverter.cs", label="Entry Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SerializeKeyValuePairWithDataTableKey()", span="392-392"];
m26_213 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SerializeKeyValuePairWithDataTableKey()", file="ExpandoObjectConverter.cs", label="DataTable table = new DataTable()", span="394-394"];
m26_214 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SerializeKeyValuePairWithDataTableKey()", file="ExpandoObjectConverter.cs", label="DataColumn idColumn = new DataColumn(''id'', typeof(int))", span="395-395"];
m26_217 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SerializeKeyValuePairWithDataTableKey()", file="ExpandoObjectConverter.cs", label="table.Columns.Add(idColumn)", span="399-399"];
m26_218 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SerializeKeyValuePairWithDataTableKey()", file="ExpandoObjectConverter.cs", label="table.Columns.Add(itemColumn)", span="400-400"];
m26_219 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SerializeKeyValuePairWithDataTableKey()", file="ExpandoObjectConverter.cs", label="DataRow r = table.NewRow()", span="402-402"];
m26_222 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SerializeKeyValuePairWithDataTableKey()", file="ExpandoObjectConverter.cs", label="table.Rows.Add(r)", span="405-405"];
m26_223 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SerializeKeyValuePairWithDataTableKey()", file="ExpandoObjectConverter.cs", label="KeyValuePair<DataTable, int> pair = new KeyValuePair<DataTable, int>(table, 1)", span="407-407"];
m26_215 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SerializeKeyValuePairWithDataTableKey()", file="ExpandoObjectConverter.cs", label="idColumn.AutoIncrement = true", span="396-396"];
m26_216 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SerializeKeyValuePairWithDataTableKey()", file="ExpandoObjectConverter.cs", label="DataColumn itemColumn = new DataColumn(''item'')", span="398-398"];
m26_220 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SerializeKeyValuePairWithDataTableKey()", file="ExpandoObjectConverter.cs", label="r[''item''] = ''item!''", span="403-403"];
m26_221 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SerializeKeyValuePairWithDataTableKey()", file="ExpandoObjectConverter.cs", label="r.EndEdit()", span="404-404"];
m26_224 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SerializeKeyValuePairWithDataTableKey()", file="ExpandoObjectConverter.cs", label="string serializedpair = JsonConvert.SerializeObject(pair, Formatting.Indented)", span="408-408"];
m26_225 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SerializeKeyValuePairWithDataTableKey()", file="ExpandoObjectConverter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Key'''': [\r\n    {\r\n      ''''id'''': 0,\r\n      ''''item'''': ''''item!''''\r\n    }\r\n  ],\r\n  ''''Value'''': 1\r\n}'', serializedpair)", span="410-418"];
m26_226 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SerializeKeyValuePairWithDataTableKey()", file="ExpandoObjectConverter.cs", label="var pair2 = (KeyValuePair<DataTable, int>)JsonConvert.DeserializeObject(serializedpair, typeof(KeyValuePair<DataTable, int>))", span="420-420"];
m26_227 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SerializeKeyValuePairWithDataTableKey()", file="ExpandoObjectConverter.cs", label="Assert.AreEqual(1, pair2.Value)", span="422-422"];
m26_228 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SerializeKeyValuePairWithDataTableKey()", file="ExpandoObjectConverter.cs", label="Assert.AreEqual(1, pair2.Key.Rows.Count)", span="423-423"];
m26_229 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SerializeKeyValuePairWithDataTableKey()", file="ExpandoObjectConverter.cs", label="Assert.AreEqual(''item!'', pair2.Key.Rows[0][''item''])", span="424-424"];
m26_230 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SerializeKeyValuePairWithDataTableKey()", file="ExpandoObjectConverter.cs", label="Exit Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SerializeKeyValuePairWithDataTableKey()", span="392-392"];
m26_54 [cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", file="ExpandoObjectConverter.cs", label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", span="0-0"];
m26_275 [cluster="System.Type.IsAssignableFrom(System.Type)", file="ExpandoObjectConverter.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m26_53 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="ExpandoObjectConverter.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="802-802"];
m26_113 [cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="ExpandoObjectConverter.cs", label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="331-331"];
m26_133 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.TestDataTableConverter.TestDataTableConverter()", file="ExpandoObjectConverter.cs", label="Entry Newtonsoft.Json.Tests.Converters.DataTableConverterTests.TestDataTableConverter.TestDataTableConverter()", span="247-247"];
m26_108 [cluster="Unk.Add", file="ExpandoObjectConverter.cs", label="Entry Unk.Add", span=""];
m26_163 [cluster="Unk.Serialize", file="ExpandoObjectConverter.cs", label="Entry Unk.Serialize", span=""];
m26_165 [cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="ExpandoObjectConverter.cs", label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0"];
m26_111 [cluster="System.Text.Encoding.GetBytes(string)", file="ExpandoObjectConverter.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m26_167 [cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="ExpandoObjectConverter.cs", label="Entry Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", span="1862-1862"];
m26_270 [cluster="System.Data.SqlTypes.SqlDateTime.cstr", file="ExpandoObjectConverter.cs", label="Entry System.Data.SqlTypes.SqlDateTime.cstr", span=""];
m26_119 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.TestDataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExpandoObjectConverter.cs", label="Entry Newtonsoft.Json.Tests.Converters.DataTableConverterTests.TestDataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="255-255"];
m26_120 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.TestDataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExpandoObjectConverter.cs", label="DataTable d = new DataTable((string)reader.Value)", span="258-258"];
m26_121 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.TestDataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExpandoObjectConverter.cs", label="return d;", span="260-260"];
m26_122 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.TestDataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExpandoObjectConverter.cs", label="Exit Newtonsoft.Json.Tests.Converters.DataTableConverterTests.TestDataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="255-255"];
m26_201 [cluster="Unk.IsInstanceOfType", file="ExpandoObjectConverter.cs", label="Entry Unk.IsInstanceOfType", span=""];
m27_50 [cluster="Newtonsoft.Json.JsonReader.Read()", file="ExpressionReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.JsonReader.Read()", span="405-405"];
m27_22 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExpressionReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="78-78"];
m27_23 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExpressionReflectionDelegateFactory.cs", label="Type t = (ReflectionUtils.IsNullableType(objectType))\r\n                ? Nullable.GetUnderlyingType(objectType)\r\n                : objectType", span="81-83"];
m27_24 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExpressionReflectionDelegateFactory.cs", label="reader.TokenType == JsonToken.Null", span="86-86"];
m27_25 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExpressionReflectionDelegateFactory.cs", label="!ReflectionUtils.IsNullable(objectType)", span="88-88"];
m27_26 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExpressionReflectionDelegateFactory.cs", label="throw JsonSerializationException.Create(reader, ''Cannot convert null value to {0}.''.FormatWith(CultureInfo.InvariantCulture, objectType));", span="89-89"];
m27_28 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExpressionReflectionDelegateFactory.cs", label="reader.TokenType != JsonToken.StartConstructor || !string.Equals(reader.Value.ToString(), ''Date'', StringComparison.Ordinal)", span="94-94"];
m27_29 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExpressionReflectionDelegateFactory.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected token or value when parsing date. Token: {0}, Value: {1}''.FormatWith(CultureInfo.InvariantCulture, reader.TokenType, reader.Value));", span="95-95"];
m27_30 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExpressionReflectionDelegateFactory.cs", label="reader.Read()", span="97-97"];
m27_31 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExpressionReflectionDelegateFactory.cs", label="reader.TokenType != JsonToken.Integer", span="99-99"];
m27_32 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExpressionReflectionDelegateFactory.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected token parsing date. Expected Integer, got {0}.''.FormatWith(CultureInfo.InvariantCulture, reader.TokenType));", span="100-100"];
m27_33 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExpressionReflectionDelegateFactory.cs", label="long ticks = (long)reader.Value", span="102-102"];
m27_35 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExpressionReflectionDelegateFactory.cs", label="reader.Read()", span="106-106"];
m27_36 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExpressionReflectionDelegateFactory.cs", label="reader.TokenType != JsonToken.EndConstructor", span="108-108"];
m27_37 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExpressionReflectionDelegateFactory.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected token parsing date. Expected EndConstructor, got {0}.''.FormatWith(CultureInfo.InvariantCulture, reader.TokenType));", span="109-109"];
m27_38 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExpressionReflectionDelegateFactory.cs", label="t == typeof(DateTimeOffset)", span="112-112"];
m27_27 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExpressionReflectionDelegateFactory.cs", label="return null;", span="91-91"];
m27_34 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExpressionReflectionDelegateFactory.cs", label="DateTime d = DateTimeUtils.ConvertJavaScriptTicksToDateTime(ticks)", span="104-104"];
m27_39 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExpressionReflectionDelegateFactory.cs", label="return new DateTimeOffset(d);", span="113-113"];
m27_40 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExpressionReflectionDelegateFactory.cs", label="return d;", span="116-116"];
m27_41 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExpressionReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="78-78"];
m27_52 [cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime)", file="ExpressionReflectionDelegateFactory.cs", label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime)", span="0-0"];
m27_42 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", file="ExpressionReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", span="247-247"];
m27_0 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ExpressionReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="42-42"];
m27_1 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ExpressionReflectionDelegateFactory.cs", label="long ticks", span="44-44"];
m27_2 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ExpressionReflectionDelegateFactory.cs", label="value is DateTime", span="46-46"];
m27_3 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ExpressionReflectionDelegateFactory.cs", label="DateTime dateTime = (DateTime)value", span="48-48"];
m27_6 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ExpressionReflectionDelegateFactory.cs", label="value is DateTimeOffset", span="53-53"];
m27_7 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ExpressionReflectionDelegateFactory.cs", label="DateTimeOffset dateTimeOffset = (DateTimeOffset)value", span="55-55"];
m27_11 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ExpressionReflectionDelegateFactory.cs", label="writer.WriteStartConstructor(''Date'')", span="65-65"];
m27_12 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ExpressionReflectionDelegateFactory.cs", label="writer.WriteValue(ticks)", span="66-66"];
m27_13 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ExpressionReflectionDelegateFactory.cs", label="writer.WriteEndConstructor()", span="67-67"];
m27_4 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ExpressionReflectionDelegateFactory.cs", label="DateTime utcDateTime = dateTime.ToUniversalTime()", span="49-49"];
m27_5 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ExpressionReflectionDelegateFactory.cs", label="ticks = DateTimeUtils.ConvertDateTimeToJavaScriptTicks(utcDateTime)", span="50-50"];
m27_10 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ExpressionReflectionDelegateFactory.cs", label="throw new JsonSerializationException(''Expected date object value.'');", span="62-62"];
m27_8 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ExpressionReflectionDelegateFactory.cs", label="DateTimeOffset utcDateTimeOffset = dateTimeOffset.ToUniversalTime()", span="56-56"];
m27_9 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ExpressionReflectionDelegateFactory.cs", label="ticks = DateTimeUtils.ConvertDateTimeToJavaScriptTicks(utcDateTimeOffset.UtcDateTime)", span="57-57"];
m27_14 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ExpressionReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="42-42"];
m27_17 [cluster="System.DateTimeOffset.ToUniversalTime()", file="ExpressionReflectionDelegateFactory.cs", label="Entry System.DateTimeOffset.ToUniversalTime()", span="0-0"];
m27_15 [cluster="System.DateTime.ToUniversalTime()", file="ExpressionReflectionDelegateFactory.cs", label="Entry System.DateTime.ToUniversalTime()", span="0-0"];
m27_47 [cluster="object.ToString()", file="ExpressionReflectionDelegateFactory.cs", label="Entry object.ToString()", span="0-0"];
m27_51 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ConvertJavaScriptTicksToDateTime(long)", file="ExpressionReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.ConvertJavaScriptTicksToDateTime(long)", span="190-190"];
m27_44 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", file="ExpressionReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", span="237-237"];
m27_21 [cluster="Newtonsoft.Json.JsonWriter.WriteEndConstructor()", file="ExpressionReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndConstructor()", span="445-445"];
m27_20 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(long)", file="ExpressionReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(long)", span="901-901"];
m27_49 [cluster="string.FormatWith(System.IFormatProvider, object, object)", file="ExpressionReflectionDelegateFactory.cs", label="Entry string.FormatWith(System.IFormatProvider, object, object)", span="52-52"];
m27_16 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ConvertDateTimeToJavaScriptTicks(System.DateTime)", file="ExpressionReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.ConvertDateTimeToJavaScriptTicks(System.DateTime)", span="171-171"];
m27_48 [cluster="string.Equals(string, string, System.StringComparison)", file="ExpressionReflectionDelegateFactory.cs", label="Entry string.Equals(string, string, System.StringComparison)", span="0-0"];
m27_43 [cluster="System.Nullable.GetUnderlyingType(System.Type)", file="ExpressionReflectionDelegateFactory.cs", label="Entry System.Nullable.GetUnderlyingType(System.Type)", span="0-0"];
m27_19 [cluster="Newtonsoft.Json.JsonWriter.WriteStartConstructor(string)", file="ExpressionReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartConstructor(string)", span="437-437"];
m27_46 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", file="ExpressionReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", span="82-82"];
m27_18 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", file="ExpressionReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="52-52"];
m27_45 [cluster="string.FormatWith(System.IFormatProvider, object)", file="ExpressionReflectionDelegateFactory.cs", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
m28_0 [cluster="Newtonsoft.Json.Serialization.ExpressionValueProvider.ExpressionValueProvider(System.Reflection.MemberInfo)", file="ExpressionValueProvider.cs", label="Entry Newtonsoft.Json.Serialization.ExpressionValueProvider.ExpressionValueProvider(System.Reflection.MemberInfo)", span="51-51"];
m28_1 [cluster="Newtonsoft.Json.Serialization.ExpressionValueProvider.ExpressionValueProvider(System.Reflection.MemberInfo)", file="ExpressionValueProvider.cs", label="ValidationUtils.ArgumentNotNull(memberInfo, nameof(memberInfo))", span="53-53"];
m28_2 [cluster="Newtonsoft.Json.Serialization.ExpressionValueProvider.ExpressionValueProvider(System.Reflection.MemberInfo)", file="ExpressionValueProvider.cs", label="_memberInfo = memberInfo", span="54-54"];
m28_3 [cluster="Newtonsoft.Json.Serialization.ExpressionValueProvider.ExpressionValueProvider(System.Reflection.MemberInfo)", file="ExpressionValueProvider.cs", label="Exit Newtonsoft.Json.Serialization.ExpressionValueProvider.ExpressionValueProvider(System.Reflection.MemberInfo)", span="51-51"];
m28_5 [cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="ExpressionValueProvider.cs", label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="31-31"];
m28_6 [cluster="Newtonsoft.Json.Serialization.ExpressionValueProvider.SetValue(object, object)", file="ExpressionValueProvider.cs", label="Entry Newtonsoft.Json.Serialization.ExpressionValueProvider.SetValue(object, object)", span="62-62"];
m28_7 [cluster="Newtonsoft.Json.Serialization.ExpressionValueProvider.SetValue(object, object)", file="ExpressionValueProvider.cs", label="_setter == null", span="66-66"];
m28_9 [cluster="Newtonsoft.Json.Serialization.ExpressionValueProvider.SetValue(object, object)", file="ExpressionValueProvider.cs", label="_setter(target, value)", span="87-87"];
m28_11 [cluster="Newtonsoft.Json.Serialization.ExpressionValueProvider.SetValue(object, object)", file="ExpressionValueProvider.cs", label="throw new JsonSerializationException(''Error setting value to '{0}' on '{1}'.''.FormatWith(CultureInfo.InvariantCulture, _memberInfo.Name, target.GetType()), ex);", span="91-91"];
m28_8 [cluster="Newtonsoft.Json.Serialization.ExpressionValueProvider.SetValue(object, object)", file="ExpressionValueProvider.cs", label="_setter = ExpressionReflectionDelegateFactory.Instance.CreateSet<object>(_memberInfo)", span="68-68"];
m28_10 [cluster="Newtonsoft.Json.Serialization.ExpressionValueProvider.SetValue(object, object)", file="ExpressionValueProvider.cs", label=Exception, span="89-89"];
m28_12 [cluster="Newtonsoft.Json.Serialization.ExpressionValueProvider.SetValue(object, object)", file="ExpressionValueProvider.cs", label="Exit Newtonsoft.Json.Serialization.ExpressionValueProvider.SetValue(object, object)", span="62-62"];
m28_15 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string, System.Exception)", file="ExpressionValueProvider.cs", label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string, System.Exception)", span="63-63"];
m28_13 [cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateSet<T>(System.Reflection.MemberInfo)", file="ExpressionValueProvider.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateSet<T>(System.Reflection.MemberInfo)", span="55-55"];
m28_14 [cluster="System.Action<T1, T2>.Invoke(T1, T2)", file="ExpressionValueProvider.cs", label="Entry System.Action<T1, T2>.Invoke(T1, T2)", span="0-0"];
m28_18 [cluster="Newtonsoft.Json.Serialization.ExpressionValueProvider.GetValue(object)", file="ExpressionValueProvider.cs", label="Entry Newtonsoft.Json.Serialization.ExpressionValueProvider.GetValue(object)", span="100-100"];
m28_19 [cluster="Newtonsoft.Json.Serialization.ExpressionValueProvider.GetValue(object)", file="ExpressionValueProvider.cs", label="_getter == null", span="104-104"];
m28_21 [cluster="Newtonsoft.Json.Serialization.ExpressionValueProvider.GetValue(object)", file="ExpressionValueProvider.cs", label="return _getter(target);", span="109-109"];
m28_23 [cluster="Newtonsoft.Json.Serialization.ExpressionValueProvider.GetValue(object)", file="ExpressionValueProvider.cs", label="throw new JsonSerializationException(''Error getting value from '{0}' on '{1}'.''.FormatWith(CultureInfo.InvariantCulture, _memberInfo.Name, target.GetType()), ex);", span="113-113"];
m28_20 [cluster="Newtonsoft.Json.Serialization.ExpressionValueProvider.GetValue(object)", file="ExpressionValueProvider.cs", label="_getter = ExpressionReflectionDelegateFactory.Instance.CreateGet<object>(_memberInfo)", span="106-106"];
m28_22 [cluster="Newtonsoft.Json.Serialization.ExpressionValueProvider.GetValue(object)", file="ExpressionValueProvider.cs", label=Exception, span="111-111"];
m28_24 [cluster="Newtonsoft.Json.Serialization.ExpressionValueProvider.GetValue(object)", file="ExpressionValueProvider.cs", label="Exit Newtonsoft.Json.Serialization.ExpressionValueProvider.GetValue(object)", span="100-100"];
m28_16 [cluster="object.GetType()", file="ExpressionValueProvider.cs", label="Entry object.GetType()", span="0-0"];
m28_25 [cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateGet<T>(System.Reflection.MemberInfo)", file="ExpressionValueProvider.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateGet<T>(System.Reflection.MemberInfo)", span="38-38"];
m28_26 [cluster="System.Func<T, TResult>.Invoke(T)", file="ExpressionValueProvider.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m28_17 [cluster="string.FormatWith(System.IFormatProvider, object, object)", file="ExpressionValueProvider.cs", label="Entry string.FormatWith(System.IFormatProvider, object, object)", span="52-52"];
m28_4 [cluster="Unk.nameof", file="ExpressionValueProvider.cs", label="Entry Unk.nameof", span=""];
m28_27 [file="ExpressionValueProvider.cs", label="Newtonsoft.Json.Serialization.ExpressionValueProvider", span=""];
m30_16 [cluster="Unk.Join", file="FieldMultipleFilter.cs", label="Entry Unk.Join", span=""];
m30_15 [cluster="Unk.Select", file="FieldMultipleFilter.cs", label="Entry Unk.Select", span=""];
m30_19 [cluster="lambda expression", file="FieldMultipleFilter.cs", label="Entry lambda expression", span="41-41"];
m30_20 [cluster="lambda expression", file="FieldMultipleFilter.cs", label="''''' + n + '''''", span="41-41"];
m30_21 [cluster="lambda expression", file="FieldMultipleFilter.cs", label="Exit lambda expression", span="41-41"];
m30_17 [cluster="object.GetType()", file="FieldMultipleFilter.cs", label="Entry object.GetType()", span="0-0"];
m30_0 [cluster="Newtonsoft.Json.Linq.JsonPath.FieldMultipleFilter.ExecuteFilter(Newtonsoft.Json.Linq.JToken, System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="FieldMultipleFilter.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.FieldMultipleFilter.ExecuteFilter(Newtonsoft.Json.Linq.JToken, System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", span="15-15"];
m30_1 [cluster="Newtonsoft.Json.Linq.JsonPath.FieldMultipleFilter.ExecuteFilter(Newtonsoft.Json.Linq.JToken, System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="FieldMultipleFilter.cs", label=current, span="17-17"];
m30_7 [cluster="Newtonsoft.Json.Linq.JsonPath.FieldMultipleFilter.ExecuteFilter(Newtonsoft.Json.Linq.JToken, System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="FieldMultipleFilter.cs", label="yield return v;", span="28-28"];
m30_8 [cluster="Newtonsoft.Json.Linq.JsonPath.FieldMultipleFilter.ExecuteFilter(Newtonsoft.Json.Linq.JToken, System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="FieldMultipleFilter.cs", label=errorWhenNoMatch, span="31-31"];
m30_10 [cluster="Newtonsoft.Json.Linq.JsonPath.FieldMultipleFilter.ExecuteFilter(Newtonsoft.Json.Linq.JToken, System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="FieldMultipleFilter.cs", label=errorWhenNoMatch, span="39-39"];
m30_2 [cluster="Newtonsoft.Json.Linq.JsonPath.FieldMultipleFilter.ExecuteFilter(Newtonsoft.Json.Linq.JToken, System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="FieldMultipleFilter.cs", label="JObject o = t as JObject", span="19-19"];
m30_3 [cluster="Newtonsoft.Json.Linq.JsonPath.FieldMultipleFilter.ExecuteFilter(Newtonsoft.Json.Linq.JToken, System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="FieldMultipleFilter.cs", label="o != null", span="20-20"];
m30_5 [cluster="Newtonsoft.Json.Linq.JsonPath.FieldMultipleFilter.ExecuteFilter(Newtonsoft.Json.Linq.JToken, System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="FieldMultipleFilter.cs", label="JToken v = o[name]", span="24-24"];
m30_4 [cluster="Newtonsoft.Json.Linq.JsonPath.FieldMultipleFilter.ExecuteFilter(Newtonsoft.Json.Linq.JToken, System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="FieldMultipleFilter.cs", label=Names, span="22-22"];
m30_9 [cluster="Newtonsoft.Json.Linq.JsonPath.FieldMultipleFilter.ExecuteFilter(Newtonsoft.Json.Linq.JToken, System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="FieldMultipleFilter.cs", label="throw new JsonException(''Property '{0}' does not exist on JObject.''.FormatWith(CultureInfo.InvariantCulture, name));", span="33-33"];
m30_6 [cluster="Newtonsoft.Json.Linq.JsonPath.FieldMultipleFilter.ExecuteFilter(Newtonsoft.Json.Linq.JToken, System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="FieldMultipleFilter.cs", label="v != null", span="26-26"];
m30_12 [cluster="Newtonsoft.Json.Linq.JsonPath.FieldMultipleFilter.ExecuteFilter(Newtonsoft.Json.Linq.JToken, System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="FieldMultipleFilter.cs", label="Exit Newtonsoft.Json.Linq.JsonPath.FieldMultipleFilter.ExecuteFilter(Newtonsoft.Json.Linq.JToken, System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", span="15-15"];
m30_18 [cluster="string.FormatWith(System.IFormatProvider, object, object)", file="FieldMultipleFilter.cs", label="Entry string.FormatWith(System.IFormatProvider, object, object)", span="52-52"];
m30_13 [cluster="Newtonsoft.Json.JsonException.JsonException(string)", file="FieldMultipleFilter.cs", label="Entry Newtonsoft.Json.JsonException.JsonException(string)", span="54-54"];
m30_14 [cluster="string.FormatWith(System.IFormatProvider, object)", file="FieldMultipleFilter.cs", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
m30_22 [file="FieldMultipleFilter.cs", label="Newtonsoft.Json.Linq.JsonPath.FieldMultipleFilter", span=""];
m34_30 [cluster="System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode, System.Reflection.MethodInfo)", file="ILGeneratorExtensions.cs", label="Entry System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode, System.Reflection.MethodInfo)", span="0-0"];
m34_20 [cluster="Newtonsoft.Json.Utilities.ILGeneratorExtensions.UnboxIfNeeded(System.Reflection.Emit.ILGenerator, System.Type)", file="ILGeneratorExtensions.cs", label="Entry Newtonsoft.Json.Utilities.ILGeneratorExtensions.UnboxIfNeeded(System.Reflection.Emit.ILGenerator, System.Type)", span="66-66"];
m34_21 [cluster="Newtonsoft.Json.Utilities.ILGeneratorExtensions.UnboxIfNeeded(System.Reflection.Emit.ILGenerator, System.Type)", file="ILGeneratorExtensions.cs", label="type.IsValueType()", span="68-68"];
m34_22 [cluster="Newtonsoft.Json.Utilities.ILGeneratorExtensions.UnboxIfNeeded(System.Reflection.Emit.ILGenerator, System.Type)", file="ILGeneratorExtensions.cs", label="generator.Emit(OpCodes.Unbox_Any, type)", span="70-70"];
m34_23 [cluster="Newtonsoft.Json.Utilities.ILGeneratorExtensions.UnboxIfNeeded(System.Reflection.Emit.ILGenerator, System.Type)", file="ILGeneratorExtensions.cs", label="generator.Emit(OpCodes.Castclass, type)", span="74-74"];
m34_24 [cluster="Newtonsoft.Json.Utilities.ILGeneratorExtensions.UnboxIfNeeded(System.Reflection.Emit.ILGenerator, System.Type)", file="ILGeneratorExtensions.cs", label="Exit Newtonsoft.Json.Utilities.ILGeneratorExtensions.UnboxIfNeeded(System.Reflection.Emit.ILGenerator, System.Type)", span="66-66"];
m34_9 [cluster="Newtonsoft.Json.Utilities.ILGeneratorExtensions.PushArrayInstance(System.Reflection.Emit.ILGenerator, int, int)", file="ILGeneratorExtensions.cs", label="Entry Newtonsoft.Json.Utilities.ILGeneratorExtensions.PushArrayInstance(System.Reflection.Emit.ILGenerator, int, int)", span="47-47"];
m34_10 [cluster="Newtonsoft.Json.Utilities.ILGeneratorExtensions.PushArrayInstance(System.Reflection.Emit.ILGenerator, int, int)", file="ILGeneratorExtensions.cs", label="generator.Emit(OpCodes.Ldarg, argsIndex)", span="49-49"];
m34_11 [cluster="Newtonsoft.Json.Utilities.ILGeneratorExtensions.PushArrayInstance(System.Reflection.Emit.ILGenerator, int, int)", file="ILGeneratorExtensions.cs", label="generator.Emit(OpCodes.Ldc_I4, arrayIndex)", span="50-50"];
m34_12 [cluster="Newtonsoft.Json.Utilities.ILGeneratorExtensions.PushArrayInstance(System.Reflection.Emit.ILGenerator, int, int)", file="ILGeneratorExtensions.cs", label="generator.Emit(OpCodes.Ldelem_Ref)", span="51-51"];
m34_13 [cluster="Newtonsoft.Json.Utilities.ILGeneratorExtensions.PushArrayInstance(System.Reflection.Emit.ILGenerator, int, int)", file="ILGeneratorExtensions.cs", label="Exit Newtonsoft.Json.Utilities.ILGeneratorExtensions.PushArrayInstance(System.Reflection.Emit.ILGenerator, int, int)", span="47-47"];
m34_31 [cluster="Newtonsoft.Json.Utilities.ILGeneratorExtensions.Return(System.Reflection.Emit.ILGenerator)", file="ILGeneratorExtensions.cs", label="Entry Newtonsoft.Json.Utilities.ILGeneratorExtensions.Return(System.Reflection.Emit.ILGenerator)", span="90-90"];
m34_32 [cluster="Newtonsoft.Json.Utilities.ILGeneratorExtensions.Return(System.Reflection.Emit.ILGenerator)", file="ILGeneratorExtensions.cs", label="generator.Emit(OpCodes.Ret)", span="92-92"];
m34_33 [cluster="Newtonsoft.Json.Utilities.ILGeneratorExtensions.Return(System.Reflection.Emit.ILGenerator)", file="ILGeneratorExtensions.cs", label="Exit Newtonsoft.Json.Utilities.ILGeneratorExtensions.Return(System.Reflection.Emit.ILGenerator)", span="90-90"];
m34_25 [cluster="Newtonsoft.Json.Utilities.ILGeneratorExtensions.CallMethod(System.Reflection.Emit.ILGenerator, System.Reflection.MethodInfo)", file="ILGeneratorExtensions.cs", label="Entry Newtonsoft.Json.Utilities.ILGeneratorExtensions.CallMethod(System.Reflection.Emit.ILGenerator, System.Reflection.MethodInfo)", span="78-78"];
m34_26 [cluster="Newtonsoft.Json.Utilities.ILGeneratorExtensions.CallMethod(System.Reflection.Emit.ILGenerator, System.Reflection.MethodInfo)", file="ILGeneratorExtensions.cs", label="methodInfo.IsFinal || !methodInfo.IsVirtual", span="80-80"];
m34_27 [cluster="Newtonsoft.Json.Utilities.ILGeneratorExtensions.CallMethod(System.Reflection.Emit.ILGenerator, System.Reflection.MethodInfo)", file="ILGeneratorExtensions.cs", label="generator.Emit(OpCodes.Call, methodInfo)", span="82-82"];
m34_28 [cluster="Newtonsoft.Json.Utilities.ILGeneratorExtensions.CallMethod(System.Reflection.Emit.ILGenerator, System.Reflection.MethodInfo)", file="ILGeneratorExtensions.cs", label="generator.Emit(OpCodes.Callvirt, methodInfo)", span="86-86"];
m34_29 [cluster="Newtonsoft.Json.Utilities.ILGeneratorExtensions.CallMethod(System.Reflection.Emit.ILGenerator, System.Reflection.MethodInfo)", file="ILGeneratorExtensions.cs", label="Exit Newtonsoft.Json.Utilities.ILGeneratorExtensions.CallMethod(System.Reflection.Emit.ILGenerator, System.Reflection.MethodInfo)", span="78-78"];
m34_7 [cluster="System.Type.IsValueType()", file="ILGeneratorExtensions.cs", label="Entry System.Type.IsValueType()", span="535-535"];
m34_15 [cluster="Newtonsoft.Json.Utilities.ILGeneratorExtensions.BoxIfNeeded(System.Reflection.Emit.ILGenerator, System.Type)", file="ILGeneratorExtensions.cs", label="Entry Newtonsoft.Json.Utilities.ILGeneratorExtensions.BoxIfNeeded(System.Reflection.Emit.ILGenerator, System.Type)", span="54-54"];
m34_16 [cluster="Newtonsoft.Json.Utilities.ILGeneratorExtensions.BoxIfNeeded(System.Reflection.Emit.ILGenerator, System.Type)", file="ILGeneratorExtensions.cs", label="type.IsValueType()", span="56-56"];
m34_17 [cluster="Newtonsoft.Json.Utilities.ILGeneratorExtensions.BoxIfNeeded(System.Reflection.Emit.ILGenerator, System.Type)", file="ILGeneratorExtensions.cs", label="generator.Emit(OpCodes.Box, type)", span="58-58"];
m34_18 [cluster="Newtonsoft.Json.Utilities.ILGeneratorExtensions.BoxIfNeeded(System.Reflection.Emit.ILGenerator, System.Type)", file="ILGeneratorExtensions.cs", label="generator.Emit(OpCodes.Castclass, type)", span="62-62"];
m34_19 [cluster="Newtonsoft.Json.Utilities.ILGeneratorExtensions.BoxIfNeeded(System.Reflection.Emit.ILGenerator, System.Type)", file="ILGeneratorExtensions.cs", label="Exit Newtonsoft.Json.Utilities.ILGeneratorExtensions.BoxIfNeeded(System.Reflection.Emit.ILGenerator, System.Type)", span="54-54"];
m34_14 [cluster="System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode, int)", file="ILGeneratorExtensions.cs", label="Entry System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode, int)", span="0-0"];
m34_8 [cluster="System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode, System.Type)", file="ILGeneratorExtensions.cs", label="Entry System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode, System.Type)", span="0-0"];
m34_6 [cluster="System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)", file="ILGeneratorExtensions.cs", label="Entry System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)", span="0-0"];
m34_0 [cluster="Newtonsoft.Json.Utilities.ILGeneratorExtensions.PushInstance(System.Reflection.Emit.ILGenerator, System.Type)", file="ILGeneratorExtensions.cs", label="Entry Newtonsoft.Json.Utilities.ILGeneratorExtensions.PushInstance(System.Reflection.Emit.ILGenerator, System.Type)", span="34-34"];
m34_1 [cluster="Newtonsoft.Json.Utilities.ILGeneratorExtensions.PushInstance(System.Reflection.Emit.ILGenerator, System.Type)", file="ILGeneratorExtensions.cs", label="generator.Emit(OpCodes.Ldarg_0)", span="36-36"];
m34_2 [cluster="Newtonsoft.Json.Utilities.ILGeneratorExtensions.PushInstance(System.Reflection.Emit.ILGenerator, System.Type)", file="ILGeneratorExtensions.cs", label="type.IsValueType()", span="37-37"];
m34_3 [cluster="Newtonsoft.Json.Utilities.ILGeneratorExtensions.PushInstance(System.Reflection.Emit.ILGenerator, System.Type)", file="ILGeneratorExtensions.cs", label="generator.Emit(OpCodes.Unbox, type)", span="39-39"];
m34_4 [cluster="Newtonsoft.Json.Utilities.ILGeneratorExtensions.PushInstance(System.Reflection.Emit.ILGenerator, System.Type)", file="ILGeneratorExtensions.cs", label="generator.Emit(OpCodes.Castclass, type)", span="43-43"];
m34_5 [cluster="Newtonsoft.Json.Utilities.ILGeneratorExtensions.PushInstance(System.Reflection.Emit.ILGenerator, System.Type)", file="ILGeneratorExtensions.cs", label="Exit Newtonsoft.Json.Utilities.ILGeneratorExtensions.PushInstance(System.Reflection.Emit.ILGenerator, System.Type)", span="34-34"];
m35_9 [cluster="Newtonsoft.Json.Linq.JToken.ToObject<T>()", file="IsoDateTimeConverter.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToObject<T>()", span="1695-1695"];
m35_8 [cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="IsoDateTimeConverter.cs", label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="359-359"];
m35_10 [cluster="System.Console.WriteLine(string)", file="IsoDateTimeConverter.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m35_0 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.ToObjectComplex.Example()", file="IsoDateTimeConverter.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Linq.ToObjectComplex.Example()", span="42-42"];
m35_1 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.ToObjectComplex.Example()", file="IsoDateTimeConverter.cs", label="string json = @''{\r\n              'd': [\r\n                {\r\n                  'Name': 'John Smith'\r\n                },\r\n                {\r\n                  'Name': 'Mike Smith'\r\n                }\r\n              ]\r\n            }''", span="45-54"];
m35_2 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.ToObjectComplex.Example()", file="IsoDateTimeConverter.cs", label="JObject o = JObject.Parse(json)", span="56-56"];
m35_3 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.ToObjectComplex.Example()", file="IsoDateTimeConverter.cs", label="JArray a = (JArray)o[''d'']", span="58-58"];
m35_4 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.ToObjectComplex.Example()", file="IsoDateTimeConverter.cs", label="IList<Person> person = a.ToObject<IList<Person>>()", span="60-60"];
m35_5 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.ToObjectComplex.Example()", file="IsoDateTimeConverter.cs", label="Console.WriteLine(person[0].Name)", span="62-62"];
m35_6 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.ToObjectComplex.Example()", file="IsoDateTimeConverter.cs", label="Console.WriteLine(person[1].Name)", span="65-65"];
m35_7 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.ToObjectComplex.Example()", file="IsoDateTimeConverter.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Linq.ToObjectComplex.Example()", span="42-42"];
m36_31 [cluster="string.FormatWith(System.IFormatProvider, object)", file="JArray.Async.cs", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
m36_29 [cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", file="JArray.Async.cs", label="Entry Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", span="108-108"];
m36_8 [cluster="Newtonsoft.Json.JsonWriter.WriteStartArrayAsync(System.Threading.CancellationToken)", file="JArray.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartArrayAsync(System.Threading.CancellationToken)", span="434-434"];
m36_30 [cluster="Newtonsoft.Json.JsonReader.MoveToContentAsync(System.Threading.CancellationToken)", file="JArray.Async.cs", label="Entry Newtonsoft.Json.JsonReader.MoveToContentAsync(System.Threading.CancellationToken)", span="212-212"];
m36_34 [cluster="Newtonsoft.Json.Linq.JContainer.ReadTokenFromAsync(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings, System.Threading.CancellationToken)", file="JArray.Async.cs", label="Entry Newtonsoft.Json.Linq.JContainer.ReadTokenFromAsync(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings, System.Threading.CancellationToken)", span="37-37"];
m36_0 [cluster="Newtonsoft.Json.Linq.JArray.WriteToAsync(Newtonsoft.Json.JsonWriter, System.Threading.CancellationToken, params Newtonsoft.Json.JsonConverter[])", file="JArray.Async.cs", label="Entry Newtonsoft.Json.Linq.JArray.WriteToAsync(Newtonsoft.Json.JsonWriter, System.Threading.CancellationToken, params Newtonsoft.Json.JsonConverter[])", span="43-43"];
m36_1 [cluster="Newtonsoft.Json.Linq.JArray.WriteToAsync(Newtonsoft.Json.JsonWriter, System.Threading.CancellationToken, params Newtonsoft.Json.JsonConverter[])", file="JArray.Async.cs", label="await writer.WriteStartArrayAsync(cancellationToken).ConfigureAwait(false)", span="45-45"];
m36_4 [cluster="Newtonsoft.Json.Linq.JArray.WriteToAsync(Newtonsoft.Json.JsonWriter, System.Threading.CancellationToken, params Newtonsoft.Json.JsonConverter[])", file="JArray.Async.cs", label="await _values[i].WriteToAsync(writer, cancellationToken, converters).ConfigureAwait(false)", span="49-49"];
m36_6 [cluster="Newtonsoft.Json.Linq.JArray.WriteToAsync(Newtonsoft.Json.JsonWriter, System.Threading.CancellationToken, params Newtonsoft.Json.JsonConverter[])", file="JArray.Async.cs", label="await writer.WriteEndArrayAsync(cancellationToken).ConfigureAwait(false)", span="52-52"];
m36_2 [cluster="Newtonsoft.Json.Linq.JArray.WriteToAsync(Newtonsoft.Json.JsonWriter, System.Threading.CancellationToken, params Newtonsoft.Json.JsonConverter[])", file="JArray.Async.cs", label="int i = 0", span="47-47"];
m36_3 [cluster="Newtonsoft.Json.Linq.JArray.WriteToAsync(Newtonsoft.Json.JsonWriter, System.Threading.CancellationToken, params Newtonsoft.Json.JsonConverter[])", file="JArray.Async.cs", label="i < _values.Count", span="47-47"];
m36_5 [cluster="Newtonsoft.Json.Linq.JArray.WriteToAsync(Newtonsoft.Json.JsonWriter, System.Threading.CancellationToken, params Newtonsoft.Json.JsonConverter[])", file="JArray.Async.cs", label="i++", span="47-47"];
m36_7 [cluster="Newtonsoft.Json.Linq.JArray.WriteToAsync(Newtonsoft.Json.JsonWriter, System.Threading.CancellationToken, params Newtonsoft.Json.JsonConverter[])", file="JArray.Async.cs", label="Exit Newtonsoft.Json.Linq.JArray.WriteToAsync(Newtonsoft.Json.JsonWriter, System.Threading.CancellationToken, params Newtonsoft.Json.JsonConverter[])", span="43-43"];
m36_15 [cluster="Newtonsoft.Json.Linq.JArray.LoadAsync(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings, System.Threading.CancellationToken)", file="JArray.Async.cs", label="Entry Newtonsoft.Json.Linq.JArray.LoadAsync(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings, System.Threading.CancellationToken)", span="75-75"];
m36_16 [cluster="Newtonsoft.Json.Linq.JArray.LoadAsync(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings, System.Threading.CancellationToken)", file="JArray.Async.cs", label="reader.TokenType == JsonToken.None", span="77-77"];
m36_17 [cluster="Newtonsoft.Json.Linq.JArray.LoadAsync(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings, System.Threading.CancellationToken)", file="JArray.Async.cs", label="!await reader.ReadAsync(cancellationToken).ConfigureAwait(false)", span="79-79"];
m36_18 [cluster="Newtonsoft.Json.Linq.JArray.LoadAsync(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings, System.Threading.CancellationToken)", file="JArray.Async.cs", label="throw JsonReaderException.Create(reader, ''Error reading JArray from JsonReader.'');", span="81-81"];
m36_19 [cluster="Newtonsoft.Json.Linq.JArray.LoadAsync(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings, System.Threading.CancellationToken)", file="JArray.Async.cs", label="await reader.MoveToContentAsync(cancellationToken).ConfigureAwait(false)", span="85-85"];
m36_20 [cluster="Newtonsoft.Json.Linq.JArray.LoadAsync(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings, System.Threading.CancellationToken)", file="JArray.Async.cs", label="reader.TokenType != JsonToken.StartArray", span="87-87"];
m36_21 [cluster="Newtonsoft.Json.Linq.JArray.LoadAsync(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings, System.Threading.CancellationToken)", file="JArray.Async.cs", label="throw JsonReaderException.Create(reader, ''Error reading JArray from JsonReader. Current JsonReader item is not an array: {0}''.FormatWith(CultureInfo.InvariantCulture, reader.TokenType));", span="89-89"];
m36_23 [cluster="Newtonsoft.Json.Linq.JArray.LoadAsync(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings, System.Threading.CancellationToken)", file="JArray.Async.cs", label="a.SetLineInfo(reader as IJsonLineInfo, settings)", span="93-93"];
m36_24 [cluster="Newtonsoft.Json.Linq.JArray.LoadAsync(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings, System.Threading.CancellationToken)", file="JArray.Async.cs", label="await a.ReadTokenFromAsync(reader, settings, cancellationToken).ConfigureAwait(false)", span="95-95"];
m36_22 [cluster="Newtonsoft.Json.Linq.JArray.LoadAsync(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings, System.Threading.CancellationToken)", file="JArray.Async.cs", label="JArray a = new JArray()", span="92-92"];
m36_25 [cluster="Newtonsoft.Json.Linq.JArray.LoadAsync(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings, System.Threading.CancellationToken)", file="JArray.Async.cs", label="return a;", span="97-97"];
m36_26 [cluster="Newtonsoft.Json.Linq.JArray.LoadAsync(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings, System.Threading.CancellationToken)", file="JArray.Async.cs", label="Exit Newtonsoft.Json.Linq.JArray.LoadAsync(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings, System.Threading.CancellationToken)", span="75-75"];
m36_27 [cluster="Newtonsoft.Json.JsonReader.ReadAsync(System.Threading.CancellationToken)", file="JArray.Async.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsync(System.Threading.CancellationToken)", span="46-46"];
m36_28 [cluster="System.Threading.Tasks.Task<TResult>.ConfigureAwait(bool)", file="JArray.Async.cs", label="Entry System.Threading.Tasks.Task<TResult>.ConfigureAwait(bool)", span="0-0"];
m36_32 [cluster="Newtonsoft.Json.Linq.JArray.JArray()", file="JArray.Async.cs", label="Entry Newtonsoft.Json.Linq.JArray.JArray()", span="65-65"];
m36_11 [cluster="Newtonsoft.Json.JsonWriter.WriteEndArrayAsync(System.Threading.CancellationToken)", file="JArray.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndArrayAsync(System.Threading.CancellationToken)", span="312-312"];
m36_12 [cluster="Newtonsoft.Json.Linq.JArray.LoadAsync(Newtonsoft.Json.JsonReader, System.Threading.CancellationToken)", file="JArray.Async.cs", label="Entry Newtonsoft.Json.Linq.JArray.LoadAsync(Newtonsoft.Json.JsonReader, System.Threading.CancellationToken)", span="62-62"];
m36_13 [cluster="Newtonsoft.Json.Linq.JArray.LoadAsync(Newtonsoft.Json.JsonReader, System.Threading.CancellationToken)", file="JArray.Async.cs", label="return LoadAsync(reader, null, cancellationToken);", span="64-64"];
m36_14 [cluster="Newtonsoft.Json.Linq.JArray.LoadAsync(Newtonsoft.Json.JsonReader, System.Threading.CancellationToken)", file="JArray.Async.cs", label="Exit Newtonsoft.Json.Linq.JArray.LoadAsync(Newtonsoft.Json.JsonReader, System.Threading.CancellationToken)", span="62-62"];
m36_33 [cluster="Newtonsoft.Json.Linq.JToken.SetLineInfo(Newtonsoft.Json.IJsonLineInfo, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JArray.Async.cs", label="Entry Newtonsoft.Json.Linq.JToken.SetLineInfo(Newtonsoft.Json.IJsonLineInfo, Newtonsoft.Json.Linq.JsonLoadSettings)", span="2228-2228"];
m36_10 [cluster="Newtonsoft.Json.Linq.JToken.WriteToAsync(Newtonsoft.Json.JsonWriter, System.Threading.CancellationToken, params Newtonsoft.Json.JsonConverter[])", file="JArray.Async.cs", label="Entry Newtonsoft.Json.Linq.JToken.WriteToAsync(Newtonsoft.Json.JsonWriter, System.Threading.CancellationToken, params Newtonsoft.Json.JsonConverter[])", span="44-44"];
m36_9 [cluster="System.Threading.Tasks.Task.ConfigureAwait(bool)", file="JArray.Async.cs", label="Entry System.Threading.Tasks.Task.ConfigureAwait(bool)", span="0-0"];
m36_35 [file="JArray.Async.cs", label="Newtonsoft.Json.Linq.JArray", span=""];
m37_136 [cluster="Newtonsoft.Json.Linq.JTokenReader.SafeToString(object)", file="JavaScriptDateTimeConverter.cs", label="Entry Newtonsoft.Json.Linq.JTokenReader.SafeToString(object)", span="292-292"];
m37_137 [cluster="Newtonsoft.Json.Linq.JTokenReader.SafeToString(object)", file="JavaScriptDateTimeConverter.cs", label="return (value != null) ? value.ToString() : null;", span="294-294"];
m37_138 [cluster="Newtonsoft.Json.Linq.JTokenReader.SafeToString(object)", file="JavaScriptDateTimeConverter.cs", label="Exit Newtonsoft.Json.Linq.JTokenReader.SafeToString(object)", span="292-292"];
m37_11 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JavaScriptDateTimeConverter.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", span="475-475"];
m37_135 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="JavaScriptDateTimeConverter.cs", label="Entry Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", span="849-849"];
m37_28 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadAsDateTimeOffset()", file="JavaScriptDateTimeConverter.cs", label="Entry Newtonsoft.Json.Linq.JTokenReader.ReadAsDateTimeOffset()", span="117-117"];
m37_29 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadAsDateTimeOffset()", file="JavaScriptDateTimeConverter.cs", label="return ReadAsDateTimeOffsetInternal();", span="119-119"];
m37_30 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadAsDateTimeOffset()", file="JavaScriptDateTimeConverter.cs", label="Exit Newtonsoft.Json.Linq.JTokenReader.ReadAsDateTimeOffset()", span="117-117"];
m37_0 [cluster="Newtonsoft.Json.Linq.JTokenReader.JTokenReader(Newtonsoft.Json.Linq.JToken)", file="JavaScriptDateTimeConverter.cs", label="Entry Newtonsoft.Json.Linq.JTokenReader.JTokenReader(Newtonsoft.Json.Linq.JToken)", span="52-52"];
m37_1 [cluster="Newtonsoft.Json.Linq.JTokenReader.JTokenReader(Newtonsoft.Json.Linq.JToken)", file="JavaScriptDateTimeConverter.cs", label="ValidationUtils.ArgumentNotNull(token, ''token'')", span="54-54"];
m37_2 [cluster="Newtonsoft.Json.Linq.JTokenReader.JTokenReader(Newtonsoft.Json.Linq.JToken)", file="JavaScriptDateTimeConverter.cs", label="_root = token", span="56-56"];
m37_3 [cluster="Newtonsoft.Json.Linq.JTokenReader.JTokenReader(Newtonsoft.Json.Linq.JToken)", file="JavaScriptDateTimeConverter.cs", label="Exit Newtonsoft.Json.Linq.JTokenReader.JTokenReader(Newtonsoft.Json.Linq.JToken)", span="52-52"];
m37_46 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JavaScriptDateTimeConverter.cs", label="Entry Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", span="232-232"];
m37_98 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JavaScriptDateTimeConverter.cs", label="token.Type", span="234-234"];
m37_104 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JavaScriptDateTimeConverter.cs", label="SetToken(JsonToken.StartConstructor, ((JConstructor)token).Name)", span="243-243"];
m37_106 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JavaScriptDateTimeConverter.cs", label="SetToken(JsonToken.PropertyName, ((JProperty)token).Name)", span="246-246"];
m37_108 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JavaScriptDateTimeConverter.cs", label="SetToken(JsonToken.Comment, ((JValue)token).Value)", span="249-249"];
m37_110 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JavaScriptDateTimeConverter.cs", label="SetToken(JsonToken.Integer, ((JValue)token).Value)", span="252-252"];
m37_112 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JavaScriptDateTimeConverter.cs", label="SetToken(JsonToken.Float, ((JValue)token).Value)", span="255-255"];
m37_114 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JavaScriptDateTimeConverter.cs", label="SetToken(JsonToken.String, ((JValue)token).Value)", span="258-258"];
m37_116 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JavaScriptDateTimeConverter.cs", label="SetToken(JsonToken.Boolean, ((JValue)token).Value)", span="261-261"];
m37_118 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JavaScriptDateTimeConverter.cs", label="SetToken(JsonToken.Null, ((JValue)token).Value)", span="264-264"];
m37_120 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JavaScriptDateTimeConverter.cs", label="SetToken(JsonToken.Undefined, ((JValue)token).Value)", span="267-267"];
m37_122 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JavaScriptDateTimeConverter.cs", label="SetToken(JsonToken.Date, ((JValue)token).Value)", span="270-270"];
m37_124 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JavaScriptDateTimeConverter.cs", label="SetToken(JsonToken.Raw, ((JValue)token).Value)", span="273-273"];
m37_126 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JavaScriptDateTimeConverter.cs", label="SetToken(JsonToken.Bytes, ((JValue)token).Value)", span="276-276"];
m37_128 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JavaScriptDateTimeConverter.cs", label="SetToken(JsonToken.String, SafeToString(((JValue)token).Value))", span="279-279"];
m37_130 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JavaScriptDateTimeConverter.cs", label="SetToken(JsonToken.String, SafeToString(((JValue)token).Value))", span="282-282"];
m37_132 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JavaScriptDateTimeConverter.cs", label="SetToken(JsonToken.String, SafeToString(((JValue)token).Value))", span="285-285"];
m37_133 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JavaScriptDateTimeConverter.cs", label="throw MiscellaneousUtils.CreateArgumentOutOfRangeException(''Type'', token.Type, ''Unexpected JTokenType.'');", span="288-288"];
m37_99 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JavaScriptDateTimeConverter.cs", label="JTokenType.Object", span="236-236"];
m37_101 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JavaScriptDateTimeConverter.cs", label="JTokenType.Array", span="239-239"];
m37_103 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JavaScriptDateTimeConverter.cs", label="JTokenType.Constructor", span="242-242"];
m37_105 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JavaScriptDateTimeConverter.cs", label="JTokenType.Property", span="245-245"];
m37_107 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JavaScriptDateTimeConverter.cs", label="JTokenType.Comment", span="248-248"];
m37_109 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JavaScriptDateTimeConverter.cs", label="JTokenType.Integer", span="251-251"];
m37_111 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JavaScriptDateTimeConverter.cs", label="JTokenType.Float", span="254-254"];
m37_113 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JavaScriptDateTimeConverter.cs", label="JTokenType.String", span="257-257"];
m37_115 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JavaScriptDateTimeConverter.cs", label="JTokenType.Boolean", span="260-260"];
m37_117 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JavaScriptDateTimeConverter.cs", label="JTokenType.Null", span="263-263"];
m37_119 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JavaScriptDateTimeConverter.cs", label="JTokenType.Undefined", span="266-266"];
m37_121 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JavaScriptDateTimeConverter.cs", label="JTokenType.Date", span="269-269"];
m37_123 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JavaScriptDateTimeConverter.cs", label="JTokenType.Raw", span="272-272"];
m37_125 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JavaScriptDateTimeConverter.cs", label="JTokenType.Bytes", span="275-275"];
m37_127 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JavaScriptDateTimeConverter.cs", label="JTokenType.Guid", span="278-278"];
m37_129 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JavaScriptDateTimeConverter.cs", label="JTokenType.Uri", span="281-281"];
m37_131 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JavaScriptDateTimeConverter.cs", label="JTokenType.TimeSpan", span="284-284"];
m37_100 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JavaScriptDateTimeConverter.cs", label="SetToken(JsonToken.StartObject)", span="237-237"];
m37_102 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JavaScriptDateTimeConverter.cs", label="SetToken(JsonToken.StartArray)", span="240-240"];
m37_134 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", file="JavaScriptDateTimeConverter.cs", label="Exit Newtonsoft.Json.Linq.JTokenReader.SetToken(Newtonsoft.Json.Linq.JToken)", span="232-232"];
m37_68 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken)", file="JavaScriptDateTimeConverter.cs", label="Entry Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken)", span="839-839"];
m37_27 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", file="JavaScriptDateTimeConverter.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", span="735-735"];
m37_8 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadAsBytes()", file="JavaScriptDateTimeConverter.cs", label="Entry Newtonsoft.Json.Linq.JTokenReader.ReadAsBytes()", span="71-71"];
m37_9 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadAsBytes()", file="JavaScriptDateTimeConverter.cs", label="return ReadAsBytesInternal();", span="73-73"];
m37_10 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadAsBytes()", file="JavaScriptDateTimeConverter.cs", label="Exit Newtonsoft.Json.Linq.JTokenReader.ReadAsBytes()", span="71-71"];
m37_45 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadOver(Newtonsoft.Json.Linq.JToken)", file="JavaScriptDateTimeConverter.cs", label="Entry Newtonsoft.Json.Linq.JTokenReader.ReadOver(Newtonsoft.Json.Linq.JToken)", span="155-155"];
m37_51 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadOver(Newtonsoft.Json.Linq.JToken)", file="JavaScriptDateTimeConverter.cs", label="t == _root", span="157-157"];
m37_53 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadOver(Newtonsoft.Json.Linq.JToken)", file="JavaScriptDateTimeConverter.cs", label="JToken next = t.Next", span="160-160"];
m37_54 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadOver(Newtonsoft.Json.Linq.JToken)", file="JavaScriptDateTimeConverter.cs", label="(next == null || next == t) || t == t.Parent.Last", span="161-161"];
m37_55 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadOver(Newtonsoft.Json.Linq.JToken)", file="JavaScriptDateTimeConverter.cs", label="t.Parent == null", span="163-163"];
m37_57 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadOver(Newtonsoft.Json.Linq.JToken)", file="JavaScriptDateTimeConverter.cs", label="return SetEnd(t.Parent);", span="166-166"];
m37_52 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadOver(Newtonsoft.Json.Linq.JToken)", file="JavaScriptDateTimeConverter.cs", label="return ReadToEnd();", span="158-158"];
m37_58 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadOver(Newtonsoft.Json.Linq.JToken)", file="JavaScriptDateTimeConverter.cs", label="_current = next", span="170-170"];
m37_56 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadOver(Newtonsoft.Json.Linq.JToken)", file="JavaScriptDateTimeConverter.cs", label="return ReadToEnd();", span="164-164"];
m37_59 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadOver(Newtonsoft.Json.Linq.JToken)", file="JavaScriptDateTimeConverter.cs", label="SetToken(_current)", span="171-171"];
m37_60 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadOver(Newtonsoft.Json.Linq.JToken)", file="JavaScriptDateTimeConverter.cs", label="return true;", span="172-172"];
m37_61 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadOver(Newtonsoft.Json.Linq.JToken)", file="JavaScriptDateTimeConverter.cs", label="Exit Newtonsoft.Json.Linq.JTokenReader.ReadOver(Newtonsoft.Json.Linq.JToken)", span="155-155"];
m37_81 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.CreateArgumentOutOfRangeException(string, object, string)", file="JavaScriptDateTimeConverter.cs", label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.CreateArgumentOutOfRangeException(string, object, string)", span="63-63"];
m37_62 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadToEnd()", file="JavaScriptDateTimeConverter.cs", label="Entry Newtonsoft.Json.Linq.JTokenReader.ReadToEnd()", span="176-176"];
m37_64 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadToEnd()", file="JavaScriptDateTimeConverter.cs", label="_current = null", span="178-178"];
m37_65 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadToEnd()", file="JavaScriptDateTimeConverter.cs", label="SetToken(JsonToken.None)", span="179-179"];
m37_66 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadToEnd()", file="JavaScriptDateTimeConverter.cs", label="return false;", span="180-180"];
m37_67 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadToEnd()", file="JavaScriptDateTimeConverter.cs", label="Exit Newtonsoft.Json.Linq.JTokenReader.ReadToEnd()", span="176-176"];
m37_139 [cluster="object.ToString()", file="JavaScriptDateTimeConverter.cs", label="Entry object.ToString()", span="0-0"];
m37_12 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadAsDecimal()", file="JavaScriptDateTimeConverter.cs", label="Entry Newtonsoft.Json.Linq.JTokenReader.ReadAsDecimal()", span="80-80"];
m37_13 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadAsDecimal()", file="JavaScriptDateTimeConverter.cs", label="return ReadAsDecimalInternal();", span="82-82"];
m37_14 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadAsDecimal()", file="JavaScriptDateTimeConverter.cs", label="Exit Newtonsoft.Json.Linq.JTokenReader.ReadAsDecimal()", span="80-80"];
m37_63 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetEnd(Newtonsoft.Json.Linq.JContainer)", file="JavaScriptDateTimeConverter.cs", label="Entry Newtonsoft.Json.Linq.JTokenReader.SetEnd(Newtonsoft.Json.Linq.JContainer)", span="216-216"];
m37_90 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetEnd(Newtonsoft.Json.Linq.JContainer)", file="JavaScriptDateTimeConverter.cs", label="JsonToken? endToken = GetEndToken(c)", span="218-218"];
m37_93 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetEnd(Newtonsoft.Json.Linq.JContainer)", file="JavaScriptDateTimeConverter.cs", label="_current = c", span="222-222"];
m37_94 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetEnd(Newtonsoft.Json.Linq.JContainer)", file="JavaScriptDateTimeConverter.cs", label="_parent = c", span="223-223"];
m37_96 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetEnd(Newtonsoft.Json.Linq.JContainer)", file="JavaScriptDateTimeConverter.cs", label="return ReadOver(c);", span="228-228"];
m37_91 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetEnd(Newtonsoft.Json.Linq.JContainer)", file="JavaScriptDateTimeConverter.cs", label="endToken != null", span="219-219"];
m37_92 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetEnd(Newtonsoft.Json.Linq.JContainer)", file="JavaScriptDateTimeConverter.cs", label="SetToken(endToken.Value)", span="221-221"];
m37_95 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetEnd(Newtonsoft.Json.Linq.JContainer)", file="JavaScriptDateTimeConverter.cs", label="return true;", span="224-224"];
m37_97 [cluster="Newtonsoft.Json.Linq.JTokenReader.SetEnd(Newtonsoft.Json.Linq.JContainer)", file="JavaScriptDateTimeConverter.cs", label="Exit Newtonsoft.Json.Linq.JTokenReader.SetEnd(Newtonsoft.Json.Linq.JContainer)", span="216-216"];
m37_146 [cluster="Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", file="JavaScriptDateTimeConverter.cs", label="Entry Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", span="38-38"];
m37_15 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JavaScriptDateTimeConverter.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", span="575-575"];
m37_32 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadInternal()", file="JavaScriptDateTimeConverter.cs", label="Entry Newtonsoft.Json.Linq.JTokenReader.ReadInternal()", span="123-123"];
m37_33 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadInternal()", file="JavaScriptDateTimeConverter.cs", label="CurrentState != State.Start", span="125-125"];
m37_34 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadInternal()", file="JavaScriptDateTimeConverter.cs", label="_current == null", span="127-127"];
m37_40 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadInternal()", file="JavaScriptDateTimeConverter.cs", label="_current = _root", span="137-137"];
m37_35 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadInternal()", file="JavaScriptDateTimeConverter.cs", label="return false;", span="128-128"];
m37_36 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadInternal()", file="JavaScriptDateTimeConverter.cs", label="JContainer container = _current as JContainer", span="130-130"];
m37_37 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadInternal()", file="JavaScriptDateTimeConverter.cs", label="container != null && _parent != container", span="131-131"];
m37_38 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadInternal()", file="JavaScriptDateTimeConverter.cs", label="return ReadInto(container);", span="132-132"];
m37_39 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadInternal()", file="JavaScriptDateTimeConverter.cs", label="return ReadOver(_current);", span="134-134"];
m37_41 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadInternal()", file="JavaScriptDateTimeConverter.cs", label="SetToken(_current)", span="138-138"];
m37_42 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadInternal()", file="JavaScriptDateTimeConverter.cs", label="return true;", span="139-139"];
m37_43 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadInternal()", file="JavaScriptDateTimeConverter.cs", label="Exit Newtonsoft.Json.Linq.JTokenReader.ReadInternal()", span="123-123"];
m37_44 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadInto(Newtonsoft.Json.Linq.JContainer)", file="JavaScriptDateTimeConverter.cs", label="Entry Newtonsoft.Json.Linq.JTokenReader.ReadInto(Newtonsoft.Json.Linq.JContainer)", span="200-200"];
m37_82 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadInto(Newtonsoft.Json.Linq.JContainer)", file="JavaScriptDateTimeConverter.cs", label="JToken firstChild = c.First", span="202-202"];
m37_84 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadInto(Newtonsoft.Json.Linq.JContainer)", file="JavaScriptDateTimeConverter.cs", label="return SetEnd(c);", span="205-205"];
m37_87 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadInto(Newtonsoft.Json.Linq.JContainer)", file="JavaScriptDateTimeConverter.cs", label="_parent = c", span="211-211"];
m37_83 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadInto(Newtonsoft.Json.Linq.JContainer)", file="JavaScriptDateTimeConverter.cs", label="firstChild == null", span="203-203"];
m37_85 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadInto(Newtonsoft.Json.Linq.JContainer)", file="JavaScriptDateTimeConverter.cs", label="SetToken(firstChild)", span="209-209"];
m37_86 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadInto(Newtonsoft.Json.Linq.JContainer)", file="JavaScriptDateTimeConverter.cs", label="_current = firstChild", span="210-210"];
m37_88 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadInto(Newtonsoft.Json.Linq.JContainer)", file="JavaScriptDateTimeConverter.cs", label="return true;", span="212-212"];
m37_89 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadInto(Newtonsoft.Json.Linq.JContainer)", file="JavaScriptDateTimeConverter.cs", label="Exit Newtonsoft.Json.Linq.JTokenReader.ReadInto(Newtonsoft.Json.Linq.JContainer)", span="200-200"];
m37_47 [cluster="Newtonsoft.Json.Linq.JTokenReader.Read()", file="JavaScriptDateTimeConverter.cs", label="Entry Newtonsoft.Json.Linq.JTokenReader.Read()", span="148-148"];
m37_48 [cluster="Newtonsoft.Json.Linq.JTokenReader.Read()", file="JavaScriptDateTimeConverter.cs", label="_readType = ReadType.Read", span="150-150"];
m37_49 [cluster="Newtonsoft.Json.Linq.JTokenReader.Read()", file="JavaScriptDateTimeConverter.cs", label="return ReadInternal();", span="152-152"];
m37_50 [cluster="Newtonsoft.Json.Linq.JTokenReader.Read()", file="JavaScriptDateTimeConverter.cs", label="Exit Newtonsoft.Json.Linq.JTokenReader.Read()", span="148-148"];
m37_19 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", file="JavaScriptDateTimeConverter.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", span="632-632"];
m37_16 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadAsInt32()", file="JavaScriptDateTimeConverter.cs", label="Entry Newtonsoft.Json.Linq.JTokenReader.ReadAsInt32()", span="89-89"];
m37_17 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadAsInt32()", file="JavaScriptDateTimeConverter.cs", label="return ReadAsInt32Internal();", span="91-91"];
m37_18 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadAsInt32()", file="JavaScriptDateTimeConverter.cs", label="Exit Newtonsoft.Json.Linq.JTokenReader.ReadAsInt32()", span="89-89"];
m37_69 [cluster="Newtonsoft.Json.Linq.JTokenReader.GetEndToken(Newtonsoft.Json.Linq.JContainer)", file="JavaScriptDateTimeConverter.cs", label="Entry Newtonsoft.Json.Linq.JTokenReader.GetEndToken(Newtonsoft.Json.Linq.JContainer)", span="183-183"];
m37_70 [cluster="Newtonsoft.Json.Linq.JTokenReader.GetEndToken(Newtonsoft.Json.Linq.JContainer)", file="JavaScriptDateTimeConverter.cs", label="c.Type", span="185-185"];
m37_79 [cluster="Newtonsoft.Json.Linq.JTokenReader.GetEndToken(Newtonsoft.Json.Linq.JContainer)", file="JavaScriptDateTimeConverter.cs", label="throw MiscellaneousUtils.CreateArgumentOutOfRangeException(''Type'', c.Type, ''Unexpected JContainer type.'');", span="196-196"];
m37_71 [cluster="Newtonsoft.Json.Linq.JTokenReader.GetEndToken(Newtonsoft.Json.Linq.JContainer)", file="JavaScriptDateTimeConverter.cs", label="JTokenType.Object", span="187-187"];
m37_73 [cluster="Newtonsoft.Json.Linq.JTokenReader.GetEndToken(Newtonsoft.Json.Linq.JContainer)", file="JavaScriptDateTimeConverter.cs", label="JTokenType.Array", span="189-189"];
m37_75 [cluster="Newtonsoft.Json.Linq.JTokenReader.GetEndToken(Newtonsoft.Json.Linq.JContainer)", file="JavaScriptDateTimeConverter.cs", label="JTokenType.Constructor", span="191-191"];
m37_77 [cluster="Newtonsoft.Json.Linq.JTokenReader.GetEndToken(Newtonsoft.Json.Linq.JContainer)", file="JavaScriptDateTimeConverter.cs", label="JTokenType.Property", span="193-193"];
m37_72 [cluster="Newtonsoft.Json.Linq.JTokenReader.GetEndToken(Newtonsoft.Json.Linq.JContainer)", file="JavaScriptDateTimeConverter.cs", label="return JsonToken.EndObject;", span="188-188"];
m37_74 [cluster="Newtonsoft.Json.Linq.JTokenReader.GetEndToken(Newtonsoft.Json.Linq.JContainer)", file="JavaScriptDateTimeConverter.cs", label="return JsonToken.EndArray;", span="190-190"];
m37_76 [cluster="Newtonsoft.Json.Linq.JTokenReader.GetEndToken(Newtonsoft.Json.Linq.JContainer)", file="JavaScriptDateTimeConverter.cs", label="return JsonToken.EndConstructor;", span="192-192"];
m37_78 [cluster="Newtonsoft.Json.Linq.JTokenReader.GetEndToken(Newtonsoft.Json.Linq.JContainer)", file="JavaScriptDateTimeConverter.cs", label="return null;", span="194-194"];
m37_80 [cluster="Newtonsoft.Json.Linq.JTokenReader.GetEndToken(Newtonsoft.Json.Linq.JContainer)", file="JavaScriptDateTimeConverter.cs", label="Exit Newtonsoft.Json.Linq.JTokenReader.GetEndToken(Newtonsoft.Json.Linq.JContainer)", span="183-183"];
m37_20 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadAsString()", file="JavaScriptDateTimeConverter.cs", label="Entry Newtonsoft.Json.Linq.JTokenReader.ReadAsString()", span="98-98"];
m37_21 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadAsString()", file="JavaScriptDateTimeConverter.cs", label="return ReadAsStringInternal();", span="100-100"];
m37_22 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadAsString()", file="JavaScriptDateTimeConverter.cs", label="Exit Newtonsoft.Json.Linq.JTokenReader.ReadAsString()", span="98-98"];
m37_4 [cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="JavaScriptDateTimeConverter.cs", label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="52-52"];
m37_24 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadAsDateTime()", file="JavaScriptDateTimeConverter.cs", label="Entry Newtonsoft.Json.Linq.JTokenReader.ReadAsDateTime()", span="107-107"];
m37_25 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadAsDateTime()", file="JavaScriptDateTimeConverter.cs", label="return ReadAsDateTimeInternal();", span="109-109"];
m37_26 [cluster="Newtonsoft.Json.Linq.JTokenReader.ReadAsDateTime()", file="JavaScriptDateTimeConverter.cs", label="Exit Newtonsoft.Json.Linq.JTokenReader.ReadAsDateTime()", span="107-107"];
m37_140 [cluster="Newtonsoft.Json.Linq.JTokenReader.Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", file="JavaScriptDateTimeConverter.cs", label="Entry Newtonsoft.Json.Linq.JTokenReader.Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", span="297-297"];
m37_141 [cluster="Newtonsoft.Json.Linq.JTokenReader.Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", file="JavaScriptDateTimeConverter.cs", label="CurrentState == State.Start", span="299-299"];
m37_142 [cluster="Newtonsoft.Json.Linq.JTokenReader.Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", file="JavaScriptDateTimeConverter.cs", label="return false;", span="300-300"];
m37_143 [cluster="Newtonsoft.Json.Linq.JTokenReader.Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", file="JavaScriptDateTimeConverter.cs", label="IJsonLineInfo info = _current", span="302-302"];
m37_144 [cluster="Newtonsoft.Json.Linq.JTokenReader.Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", file="JavaScriptDateTimeConverter.cs", label="return (info != null && info.HasLineInfo());", span="303-303"];
m37_145 [cluster="Newtonsoft.Json.Linq.JTokenReader.Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", file="JavaScriptDateTimeConverter.cs", label="Exit Newtonsoft.Json.Linq.JTokenReader.Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", span="297-297"];
m37_5 [cluster="Newtonsoft.Json.Linq.JTokenReader.JTokenReader(Newtonsoft.Json.Linq.JToken, string)", file="JavaScriptDateTimeConverter.cs", label="Entry Newtonsoft.Json.Linq.JTokenReader.JTokenReader(Newtonsoft.Json.Linq.JToken, string)", span="59-59"];
m37_6 [cluster="Newtonsoft.Json.Linq.JTokenReader.JTokenReader(Newtonsoft.Json.Linq.JToken, string)", file="JavaScriptDateTimeConverter.cs", label="_initialPath = initialPath", span="62-62"];
m37_7 [cluster="Newtonsoft.Json.Linq.JTokenReader.JTokenReader(Newtonsoft.Json.Linq.JToken, string)", file="JavaScriptDateTimeConverter.cs", label="Exit Newtonsoft.Json.Linq.JTokenReader.JTokenReader(Newtonsoft.Json.Linq.JToken, string)", span="59-59"];
m37_31 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JavaScriptDateTimeConverter.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", span="411-411"];
m37_23 [cluster="Newtonsoft.Json.JsonReader.ReadAsStringInternal()", file="JavaScriptDateTimeConverter.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsStringInternal()", span="689-689"];
m37_147 [file="JavaScriptDateTimeConverter.cs", label="Newtonsoft.Json.Linq.JTokenReader", span=""];
m38_132 [cluster="System.Array.Copy(System.Array, System.Array, int)", file="JavaScriptUtils.cs", label="Entry System.Array.Copy(System.Array, System.Array, int)", span="0-0"];
m38_129 [cluster="System.IO.TextWriter.Write(char[], int, int)", file="JavaScriptUtils.cs", label="Entry System.IO.TextWriter.Write(char[], int, int)", span="0-0"];
m38_31 [cluster="System.Collections.Generic.List<T>.List()", file="JavaScriptUtils.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m38_169 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptStringWithDelimitersAsync(System.IO.TextWriter, string, char, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="Entry Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptStringWithDelimitersAsync(System.IO.TextWriter, string, char, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", span="379-379"];
m38_172 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptStringWithDelimitersAsync(System.IO.TextWriter, string, char, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="Task task = writer.WriteAsync(delimiter, cancellationToken)", span="382-382"];
m38_174 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptStringWithDelimitersAsync(System.IO.TextWriter, string, char, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="return WriteEscapedJavaScriptStringWithDelimitersAsync(task, writer, s, delimiter, charEscapeFlags, stringEscapeHandling, client, writeBuffer, cancellationToken);", span="385-385"];
m38_175 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptStringWithDelimitersAsync(System.IO.TextWriter, string, char, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="!string.IsNullOrEmpty(s)", span="388-388"];
m38_176 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptStringWithDelimitersAsync(System.IO.TextWriter, string, char, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="task = WriteEscapedJavaScriptStringWithoutDelimitersAsync(writer, s, charEscapeFlags, stringEscapeHandling, client, writeBuffer, cancellationToken)", span="390-390"];
m38_180 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptStringWithDelimitersAsync(System.IO.TextWriter, string, char, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="Exit Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptStringWithDelimitersAsync(System.IO.TextWriter, string, char, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", span="379-379"];
m38_198 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteDefinitelyEscapedJavaScriptStringWithoutDelimitersAsync(System.IO.TextWriter, string, int, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="Entry Newtonsoft.Json.Utilities.JavaScriptUtils.WriteDefinitelyEscapedJavaScriptStringWithoutDelimitersAsync(System.IO.TextWriter, string, int, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", span="429-429"];
m38_199 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteDefinitelyEscapedJavaScriptStringWithoutDelimitersAsync(System.IO.TextWriter, string, int, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="writeBuffer == null || writeBuffer.Length < lastWritePosition", span="434-434"];
m38_200 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteDefinitelyEscapedJavaScriptStringWithoutDelimitersAsync(System.IO.TextWriter, string, int, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="writeBuffer = client.EnsureWriteBuffer(lastWritePosition, UnicodeTextLength)", span="436-436"];
m38_201 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteDefinitelyEscapedJavaScriptStringWithoutDelimitersAsync(System.IO.TextWriter, string, int, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="lastWritePosition != 0", span="439-439"];
m38_202 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteDefinitelyEscapedJavaScriptStringWithoutDelimitersAsync(System.IO.TextWriter, string, int, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="s.CopyTo(0, writeBuffer, 0, lastWritePosition)", span="441-441"];
m38_203 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteDefinitelyEscapedJavaScriptStringWithoutDelimitersAsync(System.IO.TextWriter, string, int, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="await writer.WriteAsync(writeBuffer, 0, lastWritePosition, cancellationToken).ConfigureAwait(false)", span="444-444"];
m38_207 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteDefinitelyEscapedJavaScriptStringWithoutDelimitersAsync(System.IO.TextWriter, string, int, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="int i = lastWritePosition", span="451-451"];
m38_208 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteDefinitelyEscapedJavaScriptStringWithoutDelimitersAsync(System.IO.TextWriter, string, int, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="i < s.Length", span="451-451"];
m38_209 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteDefinitelyEscapedJavaScriptStringWithoutDelimitersAsync(System.IO.TextWriter, string, int, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="char c = s[i]", span="453-453"];
m38_210 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteDefinitelyEscapedJavaScriptStringWithoutDelimitersAsync(System.IO.TextWriter, string, int, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="c < charEscapeFlags.Length && !charEscapeFlags[c]", span="455-455"];
m38_230 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteDefinitelyEscapedJavaScriptStringWithoutDelimitersAsync(System.IO.TextWriter, string, int, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="c < charEscapeFlags.Length || stringEscapeHandling == StringEscapeHandling.EscapeNonAscii", span="490-490"];
m38_231 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteDefinitelyEscapedJavaScriptStringWithoutDelimitersAsync(System.IO.TextWriter, string, int, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="c == '\'' && stringEscapeHandling != StringEscapeHandling.EscapeHtml", span="492-492"];
m38_233 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteDefinitelyEscapedJavaScriptStringWithoutDelimitersAsync(System.IO.TextWriter, string, int, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="c == '''' && stringEscapeHandling != StringEscapeHandling.EscapeHtml", span="496-496"];
m38_235 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteDefinitelyEscapedJavaScriptStringWithoutDelimitersAsync(System.IO.TextWriter, string, int, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="writeBuffer.Length < UnicodeTextLength", span="502-502"];
m38_236 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteDefinitelyEscapedJavaScriptStringWithoutDelimitersAsync(System.IO.TextWriter, string, int, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="writeBuffer = client.EnsureWriteBuffer(UnicodeTextLength, 0)", span="504-504"];
m38_237 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteDefinitelyEscapedJavaScriptStringWithoutDelimitersAsync(System.IO.TextWriter, string, int, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="StringUtils.ToCharAsUnicode(c, writeBuffer)", span="507-507"];
m38_239 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteDefinitelyEscapedJavaScriptStringWithoutDelimitersAsync(System.IO.TextWriter, string, int, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="i > lastWritePosition", span="519-519"];
m38_240 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteDefinitelyEscapedJavaScriptStringWithoutDelimitersAsync(System.IO.TextWriter, string, int, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="length = i - lastWritePosition + (isEscapedUnicodeText ? UnicodeTextLength : 0)", span="521-521"];
m38_242 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteDefinitelyEscapedJavaScriptStringWithoutDelimitersAsync(System.IO.TextWriter, string, int, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="writeBuffer.Length < length", span="524-524"];
m38_243 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteDefinitelyEscapedJavaScriptStringWithoutDelimitersAsync(System.IO.TextWriter, string, int, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="writeBuffer = client.EnsureWriteBuffer(length, UnicodeTextLength)", span="526-526"];
m38_244 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteDefinitelyEscapedJavaScriptStringWithoutDelimitersAsync(System.IO.TextWriter, string, int, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="s.CopyTo(lastWritePosition, writeBuffer, start, length - start)", span="529-529"];
m38_245 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteDefinitelyEscapedJavaScriptStringWithoutDelimitersAsync(System.IO.TextWriter, string, int, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="await writer.WriteAsync(writeBuffer, start, length - start, cancellationToken).ConfigureAwait(false)", span="532-532"];
m38_248 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteDefinitelyEscapedJavaScriptStringWithoutDelimitersAsync(System.IO.TextWriter, string, int, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="await writer.WriteAsync(escapedValue, cancellationToken).ConfigureAwait(false)", span="538-538"];
m38_249 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteDefinitelyEscapedJavaScriptStringWithoutDelimitersAsync(System.IO.TextWriter, string, int, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="await writer.WriteAsync(writeBuffer, 0, UnicodeTextLength, cancellationToken).ConfigureAwait(false)", span="542-542"];
m38_252 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteDefinitelyEscapedJavaScriptStringWithoutDelimitersAsync(System.IO.TextWriter, string, int, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="length = s.Length - lastWritePosition", span="547-547"];
m38_254 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteDefinitelyEscapedJavaScriptStringWithoutDelimitersAsync(System.IO.TextWriter, string, int, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="writeBuffer.Length < length", span="551-551"];
m38_255 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteDefinitelyEscapedJavaScriptStringWithoutDelimitersAsync(System.IO.TextWriter, string, int, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="writeBuffer = client.EnsureWriteBuffer(length, 0)", span="553-553"];
m38_256 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteDefinitelyEscapedJavaScriptStringWithoutDelimitersAsync(System.IO.TextWriter, string, int, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="s.CopyTo(lastWritePosition, writeBuffer, 0, length)", span="556-556"];
m38_257 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteDefinitelyEscapedJavaScriptStringWithoutDelimitersAsync(System.IO.TextWriter, string, int, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="await writer.WriteAsync(writeBuffer, 0, length, cancellationToken).ConfigureAwait(false)", span="559-559"];
m38_204 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteDefinitelyEscapedJavaScriptStringWithoutDelimitersAsync(System.IO.TextWriter, string, int, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="int length", span="447-447"];
m38_205 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteDefinitelyEscapedJavaScriptStringWithoutDelimitersAsync(System.IO.TextWriter, string, int, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="bool isEscapedUnicodeText = false", span="448-448"];
m38_206 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteDefinitelyEscapedJavaScriptStringWithoutDelimitersAsync(System.IO.TextWriter, string, int, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="string escapedValue = null", span="449-449"];
m38_241 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteDefinitelyEscapedJavaScriptStringWithoutDelimitersAsync(System.IO.TextWriter, string, int, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="int start = isEscapedUnicodeText ? UnicodeTextLength : 0", span="522-522"];
m38_247 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteDefinitelyEscapedJavaScriptStringWithoutDelimitersAsync(System.IO.TextWriter, string, int, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="!isEscapedUnicodeText", span="536-536"];
m38_246 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteDefinitelyEscapedJavaScriptStringWithoutDelimitersAsync(System.IO.TextWriter, string, int, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="lastWritePosition = i + 1", span="535-535"];
m38_251 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteDefinitelyEscapedJavaScriptStringWithoutDelimitersAsync(System.IO.TextWriter, string, int, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="i++", span="451-451"];
m38_211 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteDefinitelyEscapedJavaScriptStringWithoutDelimitersAsync(System.IO.TextWriter, string, int, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label=c, span="460-460"];
m38_212 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteDefinitelyEscapedJavaScriptStringWithoutDelimitersAsync(System.IO.TextWriter, string, int, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="'\t'", span="462-462"];
m38_214 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteDefinitelyEscapedJavaScriptStringWithoutDelimitersAsync(System.IO.TextWriter, string, int, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="'\n'", span="465-465"];
m38_216 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteDefinitelyEscapedJavaScriptStringWithoutDelimitersAsync(System.IO.TextWriter, string, int, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="'\r'", span="468-468"];
m38_218 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteDefinitelyEscapedJavaScriptStringWithoutDelimitersAsync(System.IO.TextWriter, string, int, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="'\f'", span="471-471"];
m38_220 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteDefinitelyEscapedJavaScriptStringWithoutDelimitersAsync(System.IO.TextWriter, string, int, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="'\b'", span="474-474"];
m38_222 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteDefinitelyEscapedJavaScriptStringWithoutDelimitersAsync(System.IO.TextWriter, string, int, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="'\\'", span="477-477"];
m38_224 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteDefinitelyEscapedJavaScriptStringWithoutDelimitersAsync(System.IO.TextWriter, string, int, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="'\u0085'", span="480-480"];
m38_226 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteDefinitelyEscapedJavaScriptStringWithoutDelimitersAsync(System.IO.TextWriter, string, int, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="'\u2028'", span="483-483"];
m38_228 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteDefinitelyEscapedJavaScriptStringWithoutDelimitersAsync(System.IO.TextWriter, string, int, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="'\u2029'", span="486-486"];
m38_213 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteDefinitelyEscapedJavaScriptStringWithoutDelimitersAsync(System.IO.TextWriter, string, int, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="escapedValue = @''\t''", span="463-463"];
m38_215 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteDefinitelyEscapedJavaScriptStringWithoutDelimitersAsync(System.IO.TextWriter, string, int, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="escapedValue = @''\n''", span="466-466"];
m38_217 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteDefinitelyEscapedJavaScriptStringWithoutDelimitersAsync(System.IO.TextWriter, string, int, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="escapedValue = @''\r''", span="469-469"];
m38_219 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteDefinitelyEscapedJavaScriptStringWithoutDelimitersAsync(System.IO.TextWriter, string, int, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="escapedValue = @''\f''", span="472-472"];
m38_221 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteDefinitelyEscapedJavaScriptStringWithoutDelimitersAsync(System.IO.TextWriter, string, int, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="escapedValue = @''\b''", span="475-475"];
m38_223 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteDefinitelyEscapedJavaScriptStringWithoutDelimitersAsync(System.IO.TextWriter, string, int, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="escapedValue = @''\\''", span="478-478"];
m38_225 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteDefinitelyEscapedJavaScriptStringWithoutDelimitersAsync(System.IO.TextWriter, string, int, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="escapedValue = @''\u0085''", span="481-481"];
m38_227 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteDefinitelyEscapedJavaScriptStringWithoutDelimitersAsync(System.IO.TextWriter, string, int, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="escapedValue = @''\u2028''", span="484-484"];
m38_229 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteDefinitelyEscapedJavaScriptStringWithoutDelimitersAsync(System.IO.TextWriter, string, int, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="escapedValue = @''\u2029''", span="487-487"];
m38_232 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteDefinitelyEscapedJavaScriptStringWithoutDelimitersAsync(System.IO.TextWriter, string, int, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="escapedValue = @''\'''", span="494-494"];
m38_234 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteDefinitelyEscapedJavaScriptStringWithoutDelimitersAsync(System.IO.TextWriter, string, int, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="escapedValue = @''\''''''", span="498-498"];
m38_238 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteDefinitelyEscapedJavaScriptStringWithoutDelimitersAsync(System.IO.TextWriter, string, int, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="isEscapedUnicodeText = true", span="509-509"];
m38_250 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteDefinitelyEscapedJavaScriptStringWithoutDelimitersAsync(System.IO.TextWriter, string, int, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="isEscapedUnicodeText = false", span="543-543"];
m38_253 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteDefinitelyEscapedJavaScriptStringWithoutDelimitersAsync(System.IO.TextWriter, string, int, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="length != 0", span="549-549"];
m38_258 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteDefinitelyEscapedJavaScriptStringWithoutDelimitersAsync(System.IO.TextWriter, string, int, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="Exit Newtonsoft.Json.Utilities.JavaScriptUtils.WriteDefinitelyEscapedJavaScriptStringWithoutDelimitersAsync(System.IO.TextWriter, string, int, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", span="429-429"];
m38_11 [cluster="Newtonsoft.Json.Utilities.BufferUtils.EnsureBufferSize(Newtonsoft.Json.IArrayPool<char>, int, char[])", file="JavaScriptUtils.cs", label="Entry Newtonsoft.Json.Utilities.BufferUtils.EnsureBufferSize(Newtonsoft.Json.IArrayPool<char>, int, char[])", span="59-59"];
m38_12 [cluster="Newtonsoft.Json.Utilities.BufferUtils.EnsureBufferSize(Newtonsoft.Json.IArrayPool<char>, int, char[])", file="JavaScriptUtils.cs", label="bufferPool == null", span="61-61"];
m38_13 [cluster="Newtonsoft.Json.Utilities.BufferUtils.EnsureBufferSize(Newtonsoft.Json.IArrayPool<char>, int, char[])", file="JavaScriptUtils.cs", label="return new char[size];", span="63-63"];
m38_14 [cluster="Newtonsoft.Json.Utilities.BufferUtils.EnsureBufferSize(Newtonsoft.Json.IArrayPool<char>, int, char[])", file="JavaScriptUtils.cs", label="buffer != null", span="66-66"];
m38_15 [cluster="Newtonsoft.Json.Utilities.BufferUtils.EnsureBufferSize(Newtonsoft.Json.IArrayPool<char>, int, char[])", file="JavaScriptUtils.cs", label="bufferPool.Return(buffer)", span="68-68"];
m38_16 [cluster="Newtonsoft.Json.Utilities.BufferUtils.EnsureBufferSize(Newtonsoft.Json.IArrayPool<char>, int, char[])", file="JavaScriptUtils.cs", label="return bufferPool.Rent(size);", span="71-71"];
m38_17 [cluster="Newtonsoft.Json.Utilities.BufferUtils.EnsureBufferSize(Newtonsoft.Json.IArrayPool<char>, int, char[])", file="JavaScriptUtils.cs", label="Exit Newtonsoft.Json.Utilities.BufferUtils.EnsureBufferSize(Newtonsoft.Json.IArrayPool<char>, int, char[])", span="59-59"];
m38_141 [cluster="Newtonsoft.Json.Utilities.StringUtils.CreateStringWriter(int)", file="JavaScriptUtils.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.CreateStringWriter(int)", span="106-106"];
m38_181 [cluster="System.IO.TextWriter.WriteAsync(char, System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="Entry System.IO.TextWriter.WriteAsync(char, System.Threading.CancellationToken)", span="71-71"];
m38_183 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteCharAsync(System.Threading.Tasks.Task, System.IO.TextWriter, char, System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="Entry Newtonsoft.Json.Utilities.JavaScriptUtils.WriteCharAsync(System.Threading.Tasks.Task, System.IO.TextWriter, char, System.Threading.CancellationToken)", span="413-413"];
m38_191 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteCharAsync(System.Threading.Tasks.Task, System.IO.TextWriter, char, System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="await task.ConfigureAwait(false)", span="415-415"];
m38_192 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteCharAsync(System.Threading.Tasks.Task, System.IO.TextWriter, char, System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="await writer.WriteAsync(c, cancellationToken).ConfigureAwait(false)", span="416-416"];
m38_193 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteCharAsync(System.Threading.Tasks.Task, System.IO.TextWriter, char, System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="Exit Newtonsoft.Json.Utilities.JavaScriptUtils.WriteCharAsync(System.Threading.Tasks.Task, System.IO.TextWriter, char, System.Threading.CancellationToken)", span="413-413"];
m38_18 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs", label="Entry Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", span="83-83"];
m38_19 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs", label="IList<char> escapeChars = new List<char>\r\n            {\r\n                '\n', '\r', '\t', '\\', '\f', '\b',\r\n            }", span="85-88"];
m38_20 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs", label="int i = 0", span="89-89"];
m38_22 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs", label="escapeChars.Add((char)i)", span="91-91"];
m38_24 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs", label="escapeChars.Union(new[] { '\'' })", span="94-94"];
m38_26 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs", label="escapeChars.Union(new[] { '''' })", span="98-98"];
m38_28 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs", label="escapeChars.Union(new[] { '''', '\'', '<', '>', '&' })", span="102-102"];
m38_21 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs", label="i < ' '", span="89-89"];
m38_23 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs", label="i++", span="89-89"];
m38_25 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs", label="SingleQuoteCharEscapeFlags[escapeChar] = true", span="96-96"];
m38_27 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs", label="DoubleQuoteCharEscapeFlags[escapeChar] = true", span="100-100"];
m38_29 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs", label="HtmlCharEscapeFlags[escapeChar] = true", span="104-104"];
m38_30 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs", label="Exit Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", span="83-83"];
m38_190 [cluster="System.IO.TextWriter.WriteAsync(char)", file="JavaScriptUtils.cs", label="Entry System.IO.TextWriter.WriteAsync(char)", span="0-0"];
m38_189 [cluster="System.Threading.Tasks.Task.ConfigureAwait(bool)", file="JavaScriptUtils.cs", label="Entry System.Threading.Tasks.Task.ConfigureAwait(bool)", span="0-0"];
m38_126 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.FirstCharToEscape(string, bool[], Newtonsoft.Json.StringEscapeHandling)", file="JavaScriptUtils.cs", label="Entry Newtonsoft.Json.Utilities.JavaScriptUtils.FirstCharToEscape(string, bool[], Newtonsoft.Json.StringEscapeHandling)", span="326-326"];
m38_143 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.FirstCharToEscape(string, bool[], Newtonsoft.Json.StringEscapeHandling)", file="JavaScriptUtils.cs", label="int i = 0", span="328-328"];
m38_144 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.FirstCharToEscape(string, bool[], Newtonsoft.Json.StringEscapeHandling)", file="JavaScriptUtils.cs", label="i != s.Length", span="328-328"];
m38_145 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.FirstCharToEscape(string, bool[], Newtonsoft.Json.StringEscapeHandling)", file="JavaScriptUtils.cs", label="char c = s[i]", span="330-330"];
m38_146 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.FirstCharToEscape(string, bool[], Newtonsoft.Json.StringEscapeHandling)", file="JavaScriptUtils.cs", label="c < charEscapeFlags.Length", span="332-332"];
m38_147 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.FirstCharToEscape(string, bool[], Newtonsoft.Json.StringEscapeHandling)", file="JavaScriptUtils.cs", label="charEscapeFlags[c]", span="334-334"];
m38_149 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.FirstCharToEscape(string, bool[], Newtonsoft.Json.StringEscapeHandling)", file="JavaScriptUtils.cs", label="stringEscapeHandling == StringEscapeHandling.EscapeNonAscii", span="339-339"];
m38_148 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.FirstCharToEscape(string, bool[], Newtonsoft.Json.StringEscapeHandling)", file="JavaScriptUtils.cs", label="return i;", span="336-336"];
m38_150 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.FirstCharToEscape(string, bool[], Newtonsoft.Json.StringEscapeHandling)", file="JavaScriptUtils.cs", label="return i;", span="341-341"];
m38_155 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.FirstCharToEscape(string, bool[], Newtonsoft.Json.StringEscapeHandling)", file="JavaScriptUtils.cs", label="return i;", span="350-350"];
m38_156 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.FirstCharToEscape(string, bool[], Newtonsoft.Json.StringEscapeHandling)", file="JavaScriptUtils.cs", label="i++", span="328-328"];
m38_157 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.FirstCharToEscape(string, bool[], Newtonsoft.Json.StringEscapeHandling)", file="JavaScriptUtils.cs", label="return -1;", span="355-355"];
m38_151 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.FirstCharToEscape(string, bool[], Newtonsoft.Json.StringEscapeHandling)", file="JavaScriptUtils.cs", label=c, span="345-345"];
m38_152 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.FirstCharToEscape(string, bool[], Newtonsoft.Json.StringEscapeHandling)", file="JavaScriptUtils.cs", label="'\u0085'", span="347-347"];
m38_153 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.FirstCharToEscape(string, bool[], Newtonsoft.Json.StringEscapeHandling)", file="JavaScriptUtils.cs", label="'\u2028'", span="348-348"];
m38_154 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.FirstCharToEscape(string, bool[], Newtonsoft.Json.StringEscapeHandling)", file="JavaScriptUtils.cs", label="'\u2029'", span="349-349"];
m38_158 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.FirstCharToEscape(string, bool[], Newtonsoft.Json.StringEscapeHandling)", file="JavaScriptUtils.cs", label="Exit Newtonsoft.Json.Utilities.JavaScriptUtils.FirstCharToEscape(string, bool[], Newtonsoft.Json.StringEscapeHandling)", span="326-326"];
m38_170 [cluster="System.Threading.CancellationToken.CancelIfRequestedAsync()", file="JavaScriptUtils.cs", label="Entry System.Threading.CancellationToken.CancelIfRequestedAsync()", span="42-42"];
m38_131 [cluster="string.Equals(string, string)", file="JavaScriptUtils.cs", label="Entry string.Equals(string, string)", span="0-0"];
m38_34 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.GetCharEscapeFlags(Newtonsoft.Json.StringEscapeHandling, char)", file="JavaScriptUtils.cs", label="Entry Newtonsoft.Json.Utilities.JavaScriptUtils.GetCharEscapeFlags(Newtonsoft.Json.StringEscapeHandling, char)", span="110-110"];
m38_35 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.GetCharEscapeFlags(Newtonsoft.Json.StringEscapeHandling, char)", file="JavaScriptUtils.cs", label="stringEscapeHandling == StringEscapeHandling.EscapeHtml", span="112-112"];
m38_37 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.GetCharEscapeFlags(Newtonsoft.Json.StringEscapeHandling, char)", file="JavaScriptUtils.cs", label="quoteChar == ''''", span="117-117"];
m38_36 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.GetCharEscapeFlags(Newtonsoft.Json.StringEscapeHandling, char)", file="JavaScriptUtils.cs", label="return HtmlCharEscapeFlags;", span="114-114"];
m38_38 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.GetCharEscapeFlags(Newtonsoft.Json.StringEscapeHandling, char)", file="JavaScriptUtils.cs", label="return DoubleQuoteCharEscapeFlags;", span="119-119"];
m38_39 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.GetCharEscapeFlags(Newtonsoft.Json.StringEscapeHandling, char)", file="JavaScriptUtils.cs", label="return SingleQuoteCharEscapeFlags;", span="122-122"];
m38_40 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.GetCharEscapeFlags(Newtonsoft.Json.StringEscapeHandling, char)", file="JavaScriptUtils.cs", label="Exit Newtonsoft.Json.Utilities.JavaScriptUtils.GetCharEscapeFlags(Newtonsoft.Json.StringEscapeHandling, char)", span="110-110"];
m38_33 [cluster="System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="JavaScriptUtils.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m38_6 [cluster="Newtonsoft.Json.IArrayPool<T>.Rent(int)", file="JavaScriptUtils.cs", label="Entry Newtonsoft.Json.IArrayPool<T>.Rent(int)", span="13-13"];
m38_0 [cluster="Newtonsoft.Json.Utilities.BufferUtils.RentBuffer(Newtonsoft.Json.IArrayPool<char>, int)", file="JavaScriptUtils.cs", label="Entry Newtonsoft.Json.Utilities.BufferUtils.RentBuffer(Newtonsoft.Json.IArrayPool<char>, int)", span="43-43"];
m38_1 [cluster="Newtonsoft.Json.Utilities.BufferUtils.RentBuffer(Newtonsoft.Json.IArrayPool<char>, int)", file="JavaScriptUtils.cs", label="bufferPool == null", span="45-45"];
m38_2 [cluster="Newtonsoft.Json.Utilities.BufferUtils.RentBuffer(Newtonsoft.Json.IArrayPool<char>, int)", file="JavaScriptUtils.cs", label="return new char[minSize];", span="47-47"];
m38_3 [cluster="Newtonsoft.Json.Utilities.BufferUtils.RentBuffer(Newtonsoft.Json.IArrayPool<char>, int)", file="JavaScriptUtils.cs", label="char[] buffer = bufferPool.Rent(minSize)", span="50-50"];
m38_4 [cluster="Newtonsoft.Json.Utilities.BufferUtils.RentBuffer(Newtonsoft.Json.IArrayPool<char>, int)", file="JavaScriptUtils.cs", label="return buffer;", span="51-51"];
m38_5 [cluster="Newtonsoft.Json.Utilities.BufferUtils.RentBuffer(Newtonsoft.Json.IArrayPool<char>, int)", file="JavaScriptUtils.cs", label="Exit Newtonsoft.Json.Utilities.BufferUtils.RentBuffer(Newtonsoft.Json.IArrayPool<char>, int)", span="43-43"];
m38_10 [cluster="Newtonsoft.Json.IArrayPool<T>.Return(T[])", file="JavaScriptUtils.cs", label="Entry Newtonsoft.Json.IArrayPool<T>.Return(T[])", span="19-19"];
m38_168 [cluster="System.Threading.CancellationToken.FromCanceled()", file="JavaScriptUtils.cs", label="Entry System.Threading.CancellationToken.FromCanceled()", span="54-54"];
m38_171 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptStringWithoutDelimitersAsync(System.IO.TextWriter, string, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="Entry Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptStringWithoutDelimitersAsync(System.IO.TextWriter, string, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", span="419-419"];
m38_194 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptStringWithoutDelimitersAsync(System.IO.TextWriter, string, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="int i = FirstCharToEscape(s, charEscapeFlags, stringEscapeHandling)", span="423-423"];
m38_195 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptStringWithoutDelimitersAsync(System.IO.TextWriter, string, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="return i == -1\r\n                ? writer.WriteAsync(s, cancellationToken)\r\n                : WriteDefinitelyEscapedJavaScriptStringWithoutDelimitersAsync(writer, s, i, charEscapeFlags, stringEscapeHandling, client, writeBuffer, cancellationToken);", span="424-426"];
m38_196 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptStringWithoutDelimitersAsync(System.IO.TextWriter, string, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="Exit Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptStringWithoutDelimitersAsync(System.IO.TextWriter, string, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", span="419-419"];
m38_128 [cluster="string.CopyTo(int, char[], int, int)", file="JavaScriptUtils.cs", label="Entry string.CopyTo(int, char[], int, int)", span="0-0"];
m38_32 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="JavaScriptUtils.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m38_142 [cluster="System.IO.StringWriter.ToString()", file="JavaScriptUtils.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m38_134 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool, Newtonsoft.Json.StringEscapeHandling)", file="JavaScriptUtils.cs", label="Entry Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool, Newtonsoft.Json.StringEscapeHandling)", span="314-314"];
m38_135 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool, Newtonsoft.Json.StringEscapeHandling)", file="JavaScriptUtils.cs", label="bool[] charEscapeFlags = GetCharEscapeFlags(stringEscapeHandling, delimiter)", span="316-316"];
m38_136 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool, Newtonsoft.Json.StringEscapeHandling)", file="JavaScriptUtils.cs", label="StringWriter w = StringUtils.CreateStringWriter(value?.Length ?? 16)", span="318-318"];
m38_138 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool, Newtonsoft.Json.StringEscapeHandling)", file="JavaScriptUtils.cs", label="WriteEscapedJavaScriptString(w, value, delimiter, appendDelimiters, charEscapeFlags, stringEscapeHandling, null, ref buffer)", span="321-321"];
m38_137 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool, Newtonsoft.Json.StringEscapeHandling)", file="JavaScriptUtils.cs", label="char[] buffer = null", span="320-320"];
m38_139 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool, Newtonsoft.Json.StringEscapeHandling)", file="JavaScriptUtils.cs", label="return w.ToString();", span="322-322"];
m38_140 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool, Newtonsoft.Json.StringEscapeHandling)", file="JavaScriptUtils.cs", label="Exit Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool, Newtonsoft.Json.StringEscapeHandling)", span="314-314"];
m38_159 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptStringAsync(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="Entry Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptStringAsync(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", span="359-359"];
m38_160 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptStringAsync(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="cancellationToken.IsCancellationRequested", span="361-361"];
m38_162 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptStringAsync(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label=appendDelimiters, span="366-366"];
m38_163 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptStringAsync(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="return WriteEscapedJavaScriptStringWithDelimitersAsync(writer, s, delimiter, charEscapeFlags, stringEscapeHandling, client, writeBuffer, cancellationToken);", span="368-368"];
m38_164 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptStringAsync(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="string.IsNullOrEmpty(s)", span="371-371"];
m38_166 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptStringAsync(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="return WriteEscapedJavaScriptStringWithoutDelimitersAsync(writer, s, charEscapeFlags, stringEscapeHandling, client, writeBuffer, cancellationToken);", span="376-376"];
m38_161 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptStringAsync(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="return cancellationToken.FromCanceled();", span="363-363"];
m38_165 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptStringAsync(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="return cancellationToken.CancelIfRequestedAsync() ?? AsyncUtils.CompletedTask;", span="373-373"];
m38_167 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptStringAsync(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="Exit Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptStringAsync(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", span="359-359"];
m38_259 [cluster="Newtonsoft.Json.JsonTextWriter.EnsureWriteBuffer(int, int)", file="JavaScriptUtils.cs", label="Entry Newtonsoft.Json.JsonTextWriter.EnsureWriteBuffer(int, int)", span="1326-1326"];
m38_133 [cluster="System.Diagnostics.Debug.Assert(bool)", file="JavaScriptUtils.cs", label="Entry System.Diagnostics.Debug.Assert(bool)", span="0-0"];
m38_41 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ShouldEscapeJavaScriptString(string, bool[])", file="JavaScriptUtils.cs", label="Entry Newtonsoft.Json.Utilities.JavaScriptUtils.ShouldEscapeJavaScriptString(string, bool[])", span="125-125"];
m38_42 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ShouldEscapeJavaScriptString(string, bool[])", file="JavaScriptUtils.cs", label="s == null", span="127-127"];
m38_44 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ShouldEscapeJavaScriptString(string, bool[])", file="JavaScriptUtils.cs", label=s, span="132-132"];
m38_45 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ShouldEscapeJavaScriptString(string, bool[])", file="JavaScriptUtils.cs", label="c >= charEscapeFlags.Length || charEscapeFlags[c]", span="134-134"];
m38_43 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ShouldEscapeJavaScriptString(string, bool[])", file="JavaScriptUtils.cs", label="return false;", span="129-129"];
m38_47 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ShouldEscapeJavaScriptString(string, bool[])", file="JavaScriptUtils.cs", label="return false;", span="140-140"];
m38_46 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ShouldEscapeJavaScriptString(string, bool[])", file="JavaScriptUtils.cs", label="return true;", span="136-136"];
m38_48 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ShouldEscapeJavaScriptString(string, bool[])", file="JavaScriptUtils.cs", label="Exit Newtonsoft.Json.Utilities.JavaScriptUtils.ShouldEscapeJavaScriptString(string, bool[])", span="125-125"];
m38_260 [cluster="System.IO.TextWriter.WriteAsync(char[], int, int, System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="Entry System.IO.TextWriter.WriteAsync(char[], int, int, System.Threading.CancellationToken)", span="89-89"];
m38_7 [cluster="Newtonsoft.Json.Utilities.BufferUtils.ReturnBuffer(Newtonsoft.Json.IArrayPool<char>, char[])", file="JavaScriptUtils.cs", label="Entry Newtonsoft.Json.Utilities.BufferUtils.ReturnBuffer(Newtonsoft.Json.IArrayPool<char>, char[])", span="54-54"];
m38_8 [cluster="Newtonsoft.Json.Utilities.BufferUtils.ReturnBuffer(Newtonsoft.Json.IArrayPool<char>, char[])", file="JavaScriptUtils.cs", label="bufferPool?.Return(buffer)", span="56-56"];
m38_9 [cluster="Newtonsoft.Json.Utilities.BufferUtils.ReturnBuffer(Newtonsoft.Json.IArrayPool<char>, char[])", file="JavaScriptUtils.cs", label="Exit Newtonsoft.Json.Utilities.BufferUtils.ReturnBuffer(Newtonsoft.Json.IArrayPool<char>, char[])", span="54-54"];
m38_49 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="Entry Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", span="143-143"];
m38_50 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label=appendDelimiters, span="147-147"];
m38_51 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="writer.Write(delimiter)", span="149-149"];
m38_52 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="!string.IsNullOrEmpty(s)", span="152-152"];
m38_53 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="int lastWritePosition = FirstCharToEscape(s, charEscapeFlags, stringEscapeHandling)", span="154-154"];
m38_55 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="writer.Write(s)", span="157-157"];
m38_57 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="writeBuffer == null || writeBuffer.Length < lastWritePosition", span="163-163"];
m38_58 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="writeBuffer = BufferUtils.EnsureBufferSize(bufferPool, lastWritePosition, writeBuffer)", span="165-165"];
m38_59 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="s.CopyTo(0, writeBuffer, 0, lastWritePosition)", span="169-169"];
m38_60 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="writer.Write(writeBuffer, 0, lastWritePosition)", span="170-170"];
m38_63 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="i < s.Length", span="174-174"];
m38_64 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="char c = s[i]", span="176-176"];
m38_65 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="c < charEscapeFlags.Length && !charEscapeFlags[c]", span="178-178"];
m38_86 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="c < charEscapeFlags.Length || stringEscapeHandling == StringEscapeHandling.EscapeNonAscii", span="215-215"];
m38_87 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="c == '\'' && stringEscapeHandling != StringEscapeHandling.EscapeHtml", span="217-217"];
m38_89 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="c == '''' && stringEscapeHandling != StringEscapeHandling.EscapeHtml", span="221-221"];
m38_91 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="writeBuffer == null || writeBuffer.Length < UnicodeTextLength", span="227-227"];
m38_92 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="writeBuffer = BufferUtils.EnsureBufferSize(bufferPool, UnicodeTextLength, writeBuffer)", span="229-229"];
m38_93 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="StringUtils.ToCharAsUnicode(c, writeBuffer)", span="232-232"];
m38_101 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="writeBuffer == null || writeBuffer.Length < length", span="257-257"];
m38_102 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="char[] newBuffer = BufferUtils.RentBuffer(bufferPool, length)", span="259-259"];
m38_104 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="Array.Copy(writeBuffer, newBuffer, UnicodeTextLength)", span="265-265"];
m38_105 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="BufferUtils.ReturnBuffer(bufferPool, writeBuffer)", span="268-268"];
m38_107 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="s.CopyTo(lastWritePosition, writeBuffer, start, length - start)", span="273-273"];
m38_108 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="writer.Write(writeBuffer, start, length - start)", span="276-276"];
m38_111 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="writer.Write(escapedValue)", span="282-282"];
m38_112 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="writer.Write(writeBuffer, 0, UnicodeTextLength)", span="286-286"];
m38_115 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="length = s.Length - lastWritePosition", span="291-291"];
m38_117 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="writeBuffer == null || writeBuffer.Length < length", span="294-294"];
m38_118 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="writeBuffer = BufferUtils.EnsureBufferSize(bufferPool, length, writeBuffer)", span="296-296"];
m38_119 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="s.CopyTo(lastWritePosition, writeBuffer, 0, length)", span="299-299"];
m38_120 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="writer.Write(writeBuffer, 0, length)", span="302-302"];
m38_121 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label=appendDelimiters, span="308-308"];
m38_122 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="writer.Write(delimiter)", span="310-310"];
m38_54 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="lastWritePosition == -1", span="155-155"];
m38_56 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="lastWritePosition != 0", span="161-161"];
m38_62 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="int i = lastWritePosition", span="174-174"];
m38_98 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="i > lastWritePosition", span="252-252"];
m38_99 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="length = i - lastWritePosition + ((isEscapedUnicodeText) ? UnicodeTextLength : 0)", span="254-254"];
m38_114 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="Debug.Assert(lastWritePosition != 0)", span="290-290"];
m38_61 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="int length", span="173-173"];
m38_109 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="lastWritePosition = i + 1", span="279-279"];
m38_113 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="i++", span="174-174"];
m38_67 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label=c, span="185-185"];
m38_66 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="string escapedValue", span="183-183"];
m38_68 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="'\t'", span="187-187"];
m38_70 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="'\n'", span="190-190"];
m38_72 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="'\r'", span="193-193"];
m38_74 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="'\f'", span="196-196"];
m38_76 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="'\b'", span="199-199"];
m38_78 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="'\\'", span="202-202"];
m38_80 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="'\u0085'", span="205-205"];
m38_82 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="'\u2028'", span="208-208"];
m38_84 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="'\u2029'", span="211-211"];
m38_69 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="escapedValue = @''\t''", span="188-188"];
m38_71 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="escapedValue = @''\n''", span="191-191"];
m38_73 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="escapedValue = @''\r''", span="194-194"];
m38_75 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="escapedValue = @''\f''", span="197-197"];
m38_77 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="escapedValue = @''\b''", span="200-200"];
m38_79 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="escapedValue = @''\\''", span="203-203"];
m38_81 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="escapedValue = @''\u0085''", span="206-206"];
m38_83 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="escapedValue = @''\u2028''", span="209-209"];
m38_85 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="escapedValue = @''\u2029''", span="212-212"];
m38_95 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="escapedValue = null", span="240-240"];
m38_88 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="escapedValue = @''\'''", span="219-219"];
m38_90 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="escapedValue = @''\''''''", span="223-223"];
m38_94 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="escapedValue = EscapedUnicodeText", span="235-235"];
m38_96 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="escapedValue == null", span="245-245"];
m38_97 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="bool isEscapedUnicodeText = string.Equals(escapedValue, EscapedUnicodeText)", span="250-250"];
m38_100 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="int start = (isEscapedUnicodeText) ? UnicodeTextLength : 0", span="255-255"];
m38_103 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label=isEscapedUnicodeText, span="263-263"];
m38_110 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="!isEscapedUnicodeText", span="280-280"];
m38_106 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="writeBuffer = newBuffer", span="270-270"];
m38_116 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="length > 0", span="292-292"];
m38_123 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JavaScriptUtils.cs", label="Exit Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", span="143-143"];
m38_125 [cluster="string.IsNullOrEmpty(string)", file="JavaScriptUtils.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m38_130 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode(char, char[])", file="JavaScriptUtils.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode(char, char[])", span="114-114"];
m38_127 [cluster="System.IO.TextWriter.Write(string)", file="JavaScriptUtils.cs", label="Entry System.IO.TextWriter.Write(string)", span="0-0"];
m38_124 [cluster="System.IO.TextWriter.Write(char)", file="JavaScriptUtils.cs", label="Entry System.IO.TextWriter.Write(char)", span="0-0"];
m38_197 [cluster="System.IO.TextWriter.WriteAsync(string, System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="Entry System.IO.TextWriter.WriteAsync(string, System.Threading.CancellationToken)", span="77-77"];
m38_182 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptStringWithDelimitersAsync(System.Threading.Tasks.Task, System.IO.TextWriter, string, char, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="Entry Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptStringWithDelimitersAsync(System.Threading.Tasks.Task, System.IO.TextWriter, string, char, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", span="400-400"];
m38_184 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptStringWithDelimitersAsync(System.Threading.Tasks.Task, System.IO.TextWriter, string, char, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="await task.ConfigureAwait(false)", span="403-403"];
m38_185 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptStringWithDelimitersAsync(System.Threading.Tasks.Task, System.IO.TextWriter, string, char, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="!string.IsNullOrEmpty(s)", span="405-405"];
m38_186 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptStringWithDelimitersAsync(System.Threading.Tasks.Task, System.IO.TextWriter, string, char, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="await WriteEscapedJavaScriptStringWithoutDelimitersAsync(writer, s, charEscapeFlags, stringEscapeHandling, client, writeBuffer, cancellationToken).ConfigureAwait(false)", span="407-407"];
m38_187 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptStringWithDelimitersAsync(System.Threading.Tasks.Task, System.IO.TextWriter, string, char, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="await writer.WriteAsync(delimiter).ConfigureAwait(false)", span="410-410"];
m38_188 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptStringWithDelimitersAsync(System.Threading.Tasks.Task, System.IO.TextWriter, string, char, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JavaScriptUtils.cs", label="Exit Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptStringWithDelimitersAsync(System.Threading.Tasks.Task, System.IO.TextWriter, string, char, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", span="400-400"];
m39_0 [cluster="Newtonsoft.Json.Schema.JsonSchemaResolver.JsonSchemaResolver()", file="JConstructor.Async.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaResolver.JsonSchemaResolver()", span="49-49"];
m39_1 [cluster="Newtonsoft.Json.Schema.JsonSchemaResolver.JsonSchemaResolver()", file="JConstructor.Async.cs", label="LoadedSchemas = new List<JsonSchema>()", span="51-51"];
m39_2 [cluster="Newtonsoft.Json.Schema.JsonSchemaResolver.JsonSchemaResolver()", file="JConstructor.Async.cs", label="Exit Newtonsoft.Json.Schema.JsonSchemaResolver.JsonSchemaResolver()", span="49-49"];
m39_8 [cluster="Unk.SingleOrDefault", file="JConstructor.Async.cs", label="Entry Unk.SingleOrDefault", span=""];
m39_9 [cluster="lambda expression", file="JConstructor.Async.cs", label="Entry lambda expression", span="61-61"];
m39_10 [cluster="lambda expression", file="JConstructor.Async.cs", label="s.Id == id", span="61-61"];
m39_11 [cluster="lambda expression", file="JConstructor.Async.cs", label="Exit lambda expression", span="61-61"];
m39_4 [cluster="Newtonsoft.Json.Schema.JsonSchemaResolver.GetSchema(string)", file="JConstructor.Async.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaResolver.GetSchema(string)", span="59-59"];
m39_5 [cluster="Newtonsoft.Json.Schema.JsonSchemaResolver.GetSchema(string)", file="JConstructor.Async.cs", label="JsonSchema schema = LoadedSchemas.SingleOrDefault(s => s.Id == id)", span="61-61"];
m39_6 [cluster="Newtonsoft.Json.Schema.JsonSchemaResolver.GetSchema(string)", file="JConstructor.Async.cs", label="return schema;", span="62-62"];
m39_7 [cluster="Newtonsoft.Json.Schema.JsonSchemaResolver.GetSchema(string)", file="JConstructor.Async.cs", label="Exit Newtonsoft.Json.Schema.JsonSchemaResolver.GetSchema(string)", span="59-59"];
m39_3 [cluster="System.Collections.Generic.List<T>.List()", file="JConstructor.Async.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m39_12 [file="JConstructor.Async.cs", label="Newtonsoft.Json.Schema.JsonSchemaResolver", span=""];
m39_13 [file="JConstructor.Async.cs", label=string, span=""];
m40_7 [cluster="Unk.>", file="JContainer.Async.cs", label="Entry Unk.>", span=""];
m40_100 [cluster="System.Array.CreateInstance(System.Type, int)", file="JContainer.Async.cs", label="Entry System.Array.CreateInstance(System.Type, int)", span="0-0"];
m40_5 [cluster="System.Collections.IEnumerable.Cast<TResult>()", file="JContainer.Async.cs", label="Entry System.Collections.IEnumerable.Cast<TResult>()", span="0-0"];
m40_31 [cluster="Newtonsoft.Json.Utilities.ListWrapper<T>.ListWrapper(System.Collections.IList)", file="JContainer.Async.cs", label="Entry Newtonsoft.Json.Utilities.ListWrapper<T>.ListWrapper(System.Collections.IList)", span="39-39"];
m40_106 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T, System.Collections.Generic.IEqualityComparer<T>)", file="JContainer.Async.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T, System.Collections.Generic.IEqualityComparer<T>)", span="188-188"];
m40_107 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T, System.Collections.Generic.IEqualityComparer<T>)", file="JContainer.Async.cs", label="list.ContainsValue(value, comparer)", span="190-190"];
m40_109 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T, System.Collections.Generic.IEqualityComparer<T>)", file="JContainer.Async.cs", label="list.Add(value)", span="193-193"];
m40_108 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T, System.Collections.Generic.IEqualityComparer<T>)", file="JContainer.Async.cs", label="return false;", span="191-191"];
m40_110 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T, System.Collections.Generic.IEqualityComparer<T>)", file="JContainer.Async.cs", label="return true;", span="194-194"];
m40_111 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T, System.Collections.Generic.IEqualityComparer<T>)", file="JContainer.Async.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T, System.Collections.Generic.IEqualityComparer<T>)", span="188-188"];
m40_123 [cluster="System.Collections.Generic.IEqualityComparer<T>.Equals(T, T)", file="JContainer.Async.cs", label="Entry System.Collections.Generic.IEqualityComparer<T>.Equals(T, T)", span="0-0"];
m40_50 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateCollectionWrapper(object)", file="JContainer.Async.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.CreateCollectionWrapper(object)", span="116-116"];
m40_51 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateCollectionWrapper(object)", file="JContainer.Async.cs", label="ValidationUtils.ArgumentNotNull(list, ''list'')", span="118-118"];
m40_53 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateCollectionWrapper(object)", file="JContainer.Async.cs", label="ReflectionUtils.ImplementsGenericDefinition(list.GetType(), typeof(ICollection<>), out collectionDefinition)", span="121-121"];
m40_55 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateCollectionWrapper(object)", file="JContainer.Async.cs", label="Func<Type, IList<object>, object> instanceCreator = (t, a) =>\r\n        {\r\n          ConstructorInfo c = t.GetConstructor(new[] { collectionDefinition });\r\n          return c.Invoke(new[] { list });\r\n        }", span="126-130"];
m40_56 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateCollectionWrapper(object)", file="JContainer.Async.cs", label="return (IWrappedCollection)ReflectionUtils.CreateGeneric(typeof(CollectionWrapper<>), new[] { collectionItemType }, instanceCreator, list);", span="132-132"];
m40_57 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateCollectionWrapper(object)", file="JContainer.Async.cs", label="list is IList", span="134-134"];
m40_58 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateCollectionWrapper(object)", file="JContainer.Async.cs", label="return new CollectionWrapper<object>((IList)list);", span="136-136"];
m40_59 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateCollectionWrapper(object)", file="JContainer.Async.cs", label="throw new ArgumentException(''Can not create ListWrapper for type {0}.''.FormatWith(CultureInfo.InvariantCulture, list.GetType()), ''list'');", span="140-140"];
m40_52 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateCollectionWrapper(object)", file="JContainer.Async.cs", label="Type collectionDefinition", span="120-120"];
m40_54 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateCollectionWrapper(object)", file="JContainer.Async.cs", label="Type collectionItemType = ReflectionUtils.GetCollectionItemType(collectionDefinition)", span="123-123"];
m40_60 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateCollectionWrapper(object)", file="JContainer.Async.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.CreateCollectionWrapper(object)", span="116-116"];
m40_86 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyType(System.Type)", file="JContainer.Async.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyType(System.Type)", span="460-460"];
m40_93 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ToArray(System.Array, System.Type)", file="JContainer.Async.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.ToArray(System.Array, System.Type)", span="173-173"];
m40_94 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ToArray(System.Array, System.Type)", file="JContainer.Async.cs", label="type == null", span="175-175"];
m40_96 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ToArray(System.Array, System.Type)", file="JContainer.Async.cs", label="Array destinationArray = Array.CreateInstance(type, initial.Length)", span="178-178"];
m40_97 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ToArray(System.Array, System.Type)", file="JContainer.Async.cs", label="Array.Copy(initial, 0, destinationArray, 0, initial.Length)", span="179-179"];
m40_95 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ToArray(System.Array, System.Type)", file="JContainer.Async.cs", label="throw new ArgumentNullException(''type'');", span="176-176"];
m40_98 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ToArray(System.Array, System.Type)", file="JContainer.Async.cs", label="return destinationArray;", span="180-180"];
m40_99 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ToArray(System.Array, System.Type)", file="JContainer.Async.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.ToArray(System.Array, System.Type)", span="173-173"];
m40_183 [cluster="System.Array.GetLength(int)", file="JContainer.Async.cs", label="Entry System.Array.GetLength(int)", span="0-0"];
m40_113 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ContainsValue<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="JContainer.Async.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.ContainsValue<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", span="198-198"];
m40_114 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ContainsValue<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="JContainer.Async.cs", label="comparer == null", span="200-200"];
m40_116 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ContainsValue<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="JContainer.Async.cs", label="source == null", span="203-203"];
m40_118 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ContainsValue<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="JContainer.Async.cs", label=source, span="206-206"];
m40_119 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ContainsValue<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="JContainer.Async.cs", label="comparer.Equals(local, value)", span="208-208"];
m40_115 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ContainsValue<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="JContainer.Async.cs", label="comparer = EqualityComparer<TSource>.Default", span="201-201"];
m40_117 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ContainsValue<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="JContainer.Async.cs", label="throw new ArgumentNullException(''source'');", span="204-204"];
m40_121 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ContainsValue<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="JContainer.Async.cs", label="return false;", span="212-212"];
m40_120 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ContainsValue<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="JContainer.Async.cs", label="return true;", span="209-209"];
m40_122 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ContainsValue<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="JContainer.Async.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.ContainsValue<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", span="198-198"];
m40_139 [cluster="System.Func<T, TResult>.Invoke(T)", file="JContainer.Async.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m40_24 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JContainer.Async.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m40_159 [cluster="System.Collections.Generic.List<T>.List()", file="JContainer.Async.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m40_65 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.CollectionWrapper(System.Collections.IList)", file="JContainer.Async.cs", label="Entry Newtonsoft.Json.Utilities.CollectionWrapper<T>.CollectionWrapper(System.Collections.IList)", span="49-49"];
m40_203 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="JContainer.Async.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m40_67 [cluster="string.FormatWith(System.IFormatProvider, object)", file="JContainer.Async.cs", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
m40_38 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", file="JContainer.Async.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", span="100-100"];
m40_39 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", file="JContainer.Async.cs", label="ValidationUtils.ArgumentNotNull(type, ''type'')", span="102-102"];
m40_40 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", file="JContainer.Async.cs", label="typeof(IDictionary).IsAssignableFrom(type)", span="104-104"];
m40_42 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", file="JContainer.Async.cs", label="ReflectionUtils.ImplementsGenericDefinition(type, typeof(IDictionary<,>))", span="106-106"];
m40_44 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", file="JContainer.Async.cs", label="ReflectionUtils.ImplementsGenericDefinition(type, typeof(IReadOnlyDictionary<,>))", span="109-109"];
m40_41 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", file="JContainer.Async.cs", label="return true;", span="105-105"];
m40_43 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", file="JContainer.Async.cs", label="return true;", span="107-107"];
m40_45 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", file="JContainer.Async.cs", label="return true;", span="110-110"];
m40_46 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", file="JContainer.Async.cs", label="return false;", span="113-113"];
m40_47 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", file="JContainer.Async.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", span="100-100"];
m40_87 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryValueType(System.Type)", file="JContainer.Async.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryValueType(System.Type)", span="451-451"];
m40_148 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList)", file="JContainer.Async.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList)", span="263-263"];
m40_149 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList)", file="JContainer.Async.cs", label="IList<int> dimensions = new List<int>()", span="265-265"];
m40_150 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList)", file="JContainer.Async.cs", label="IList currentArray = values", span="267-267"];
m40_152 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList)", file="JContainer.Async.cs", label="dimensions.Add(currentArray.Count)", span="270-270"];
m40_157 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList)", file="JContainer.Async.cs", label="return dimensions;", span="281-281"];
m40_151 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList)", file="JContainer.Async.cs", label=true, span="268-268"];
m40_153 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList)", file="JContainer.Async.cs", label="currentArray.Count == 0", span="271-271"];
m40_154 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList)", file="JContainer.Async.cs", label="object v = currentArray[0]", span="274-274"];
m40_155 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList)", file="JContainer.Async.cs", label="v is IList", span="275-275"];
m40_156 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList)", file="JContainer.Async.cs", label="currentArray = (IList)v", span="276-276"];
m40_158 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList)", file="JContainer.Async.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList)", span="263-263"];
m40_37 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateGeneric(System.Type, System.Type, params object[])", file="JContainer.Async.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.CreateGeneric(System.Type, System.Type, params object[])", span="786-786"];
m40_160 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="JContainer.Async.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", span="284-284"];
m40_161 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="JContainer.Async.cs", label="int dimension = indices.Length", span="286-286"];
m40_162 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="JContainer.Async.cs", label="dimension == multidimensionalArray.Rank", span="287-287"];
m40_163 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="JContainer.Async.cs", label="multidimensionalArray.SetValue(JaggedArrayGetValue(values, indices), indices)", span="289-289"];
m40_165 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="JContainer.Async.cs", label="int dimensionLength = multidimensionalArray.GetLength(dimension)", span="293-293"];
m40_166 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="JContainer.Async.cs", label="IList list = (IList)JaggedArrayGetValue(values, indices)", span="294-294"];
m40_173 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="JContainer.Async.cs", label="newIndices[i] = indices[i]", span="302-302"];
m40_176 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="JContainer.Async.cs", label="i < multidimensionalArray.GetLength(dimension)", span="305-305"];
m40_178 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="JContainer.Async.cs", label="CopyFromJaggedToMultidimensionalArray(values, multidimensionalArray, newIndices)", span="308-308"];
m40_170 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="JContainer.Async.cs", label="int[] newIndices = new int[dimension + 1]", span="299-299"];
m40_172 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="JContainer.Async.cs", label="i < dimension", span="300-300"];
m40_177 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="JContainer.Async.cs", label="newIndices[dimension] = i", span="307-307"];
m40_164 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="JContainer.Async.cs", label="return;", span="290-290"];
m40_168 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="JContainer.Async.cs", label="currentValuesLength != dimensionLength", span="296-296"];
m40_167 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="JContainer.Async.cs", label="int currentValuesLength = list.Count", span="295-295"];
m40_169 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="JContainer.Async.cs", label="throw new Exception(''Cannot deserialize non-cubical array as multidimensional array.'');", span="297-297"];
m40_171 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="JContainer.Async.cs", label="int i = 0", span="300-300"];
m40_174 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="JContainer.Async.cs", label="i++", span="300-300"];
m40_175 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="JContainer.Async.cs", label="int i = 0", span="305-305"];
m40_179 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="JContainer.Async.cs", label="i++", span="305-305"];
m40_180 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", file="JContainer.Async.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", span="284-284"];
m40_112 [cluster="System.Collections.Generic.IEnumerable<TSource>.ContainsValue<TSource>(TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="JContainer.Async.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ContainsValue<TSource>(TSource, System.Collections.Generic.IEqualityComparer<TSource>)", span="198-198"];
m40_32 [cluster="System.Collections.Generic.IList<T>.AddRange<T>(System.Collections.Generic.IEnumerable<T>)", file="JContainer.Async.cs", label="Entry System.Collections.Generic.IList<T>.AddRange<T>(System.Collections.Generic.IEnumerable<T>)", span="71-71"];
m40_0 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CastValid<T>(System.Collections.IEnumerable)", file="JContainer.Async.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.CastValid<T>(System.Collections.IEnumerable)", span="43-43"];
m40_1 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CastValid<T>(System.Collections.IEnumerable)", file="JContainer.Async.cs", label="ValidationUtils.ArgumentNotNull(enumerable, ''enumerable'')", span="45-45"];
m40_2 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CastValid<T>(System.Collections.IEnumerable)", file="JContainer.Async.cs", label="return enumerable.Cast<object>().Where(o => o is T).Cast<T>();", span="47-47"];
m40_3 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CastValid<T>(System.Collections.IEnumerable)", file="JContainer.Async.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.CastValid<T>(System.Collections.IEnumerable)", span="43-43"];
m40_182 [cluster="System.Array.SetValue(object, params int[])", file="JContainer.Async.cs", label="Entry System.Array.SetValue(object, params int[])", span="0-0"];
m40_49 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type)", file="JContainer.Async.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type)", span="307-307"];
m40_195 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)", file="JContainer.Async.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)", span="326-326"];
m40_196 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)", file="JContainer.Async.cs", label="IList<int> dimensions = GetDimensions(values)", span="328-328"];
m40_197 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)", file="JContainer.Async.cs", label="dimensions.Count < rank", span="330-330"];
m40_199 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)", file="JContainer.Async.cs", label="Array multidimensionalArray = Array.CreateInstance(type, dimensions.ToArray())", span="335-335"];
m40_200 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)", file="JContainer.Async.cs", label="CopyFromJaggedToMultidimensionalArray(values, multidimensionalArray, new int[0])", span="336-336"];
m40_198 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)", file="JContainer.Async.cs", label="dimensions.Add(0)", span="332-332"];
m40_201 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)", file="JContainer.Async.cs", label="return multidimensionalArray;", span="338-338"];
m40_202 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)", file="JContainer.Async.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)", span="326-326"];
m40_64 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateGeneric(System.Type, System.Collections.Generic.IList<System.Type>, System.Func<System.Type, System.Collections.Generic.IList<object>, object>, params object[])", file="JContainer.Async.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.CreateGeneric(System.Type, System.Collections.Generic.IList<System.Type>, System.Func<System.Type, System.Collections.Generic.IList<object>, object>, params object[])", span="796-796"];
m40_73 [cluster="System.Reflection.ConstructorInfo.Invoke(object[])", file="JContainer.Async.cs", label="Entry System.Reflection.ConstructorInfo.Invoke(object[])", span="0-0"];
m40_181 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])", file="JContainer.Async.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])", span="312-312"];
m40_185 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])", file="JContainer.Async.cs", label="IList currentList = values", span="314-314"];
m40_187 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])", file="JContainer.Async.cs", label="i < indices.Length", span="315-315"];
m40_188 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])", file="JContainer.Async.cs", label="int index = indices[i]", span="317-317"];
m40_189 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])", file="JContainer.Async.cs", label="i == indices.Length - 1", span="318-318"];
m40_186 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])", file="JContainer.Async.cs", label="int i = 0", span="315-315"];
m40_190 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])", file="JContainer.Async.cs", label="return currentList[index];", span="319-319"];
m40_191 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])", file="JContainer.Async.cs", label="currentList = (IList)currentList[index]", span="321-321"];
m40_193 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])", file="JContainer.Async.cs", label="return currentList;", span="323-323"];
m40_192 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])", file="JContainer.Async.cs", label="i++", span="315-315"];
m40_194 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])", file="JContainer.Async.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])", span="312-312"];
m40_204 [cluster="System.Array.CreateInstance(System.Type, params int[])", file="JContainer.Async.cs", label="Entry System.Array.CreateInstance(System.Type, params int[])", span="0-0"];
m40_25 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="JContainer.Async.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m40_72 [cluster="System.Type.GetConstructor(System.Type[])", file="JContainer.Async.cs", label="Entry System.Type.GetConstructor(System.Type[])", span="0-0"];
m40_140 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="JContainer.Async.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", span="249-249"];
m40_141 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="JContainer.Async.cs", label="int index = 0", span="251-251"];
m40_142 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="JContainer.Async.cs", label=list, span="252-252"];
m40_143 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="JContainer.Async.cs", label="comparer.Equals(item, value)", span="254-254"];
m40_144 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="JContainer.Async.cs", label="return index;", span="256-256"];
m40_145 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="JContainer.Async.cs", label="index++", span="258-258"];
m40_146 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="JContainer.Async.cs", label="return -1;", span="260-260"];
m40_147 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="JContainer.Async.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", span="249-249"];
m40_66 [cluster="System.ArgumentException.ArgumentException(string, string)", file="JContainer.Async.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m40_131 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, bool>)", file="JContainer.Async.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, bool>)", span="227-227"];
m40_132 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, bool>)", file="JContainer.Async.cs", label="int index = 0", span="229-229"];
m40_133 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, bool>)", file="JContainer.Async.cs", label=collection, span="230-230"];
m40_134 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, bool>)", file="JContainer.Async.cs", label="predicate(value)", span="232-232"];
m40_135 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, bool>)", file="JContainer.Async.cs", label="return index;", span="233-233"];
m40_136 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, bool>)", file="JContainer.Async.cs", label="index++", span="235-235"];
m40_137 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, bool>)", file="JContainer.Async.cs", label="return -1;", span="238-238"];
m40_138 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, bool>)", file="JContainer.Async.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, bool>)", span="227-227"];
m40_74 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateDictionaryWrapper(object)", file="JContainer.Async.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.CreateDictionaryWrapper(object)", span="144-144"];
m40_75 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateDictionaryWrapper(object)", file="JContainer.Async.cs", label="ValidationUtils.ArgumentNotNull(dictionary, ''dictionary'')", span="146-146"];
m40_77 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateDictionaryWrapper(object)", file="JContainer.Async.cs", label="ReflectionUtils.ImplementsGenericDefinition(dictionary.GetType(), typeof(IDictionary<,>), out dictionaryDefinition)", span="149-149"];
m40_80 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateDictionaryWrapper(object)", file="JContainer.Async.cs", label="Func<Type, IList<object>, object> instanceCreator = (t, a) =>\r\n        {\r\n          ConstructorInfo c = t.GetConstructor(new[] { dictionaryDefinition });\r\n          return c.Invoke(new[] { dictionary });\r\n        }", span="155-159"];
m40_81 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateDictionaryWrapper(object)", file="JContainer.Async.cs", label="return (IWrappedDictionary)ReflectionUtils.CreateGeneric(typeof(DictionaryWrapper<,>), new[] { dictionaryKeyType, dictionaryValueType }, instanceCreator, dictionary);", span="161-161"];
m40_82 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateDictionaryWrapper(object)", file="JContainer.Async.cs", label="dictionary is IDictionary", span="163-163"];
m40_83 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateDictionaryWrapper(object)", file="JContainer.Async.cs", label="return new DictionaryWrapper<object, object>((IDictionary)dictionary);", span="165-165"];
m40_84 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateDictionaryWrapper(object)", file="JContainer.Async.cs", label="throw new ArgumentException(''Can not create DictionaryWrapper for type {0}.''.FormatWith(CultureInfo.InvariantCulture, dictionary.GetType()), ''dictionary'');", span="169-169"];
m40_76 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateDictionaryWrapper(object)", file="JContainer.Async.cs", label="Type dictionaryDefinition", span="148-148"];
m40_78 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateDictionaryWrapper(object)", file="JContainer.Async.cs", label="Type dictionaryKeyType = ReflectionUtils.GetDictionaryKeyType(dictionaryDefinition)", span="151-151"];
m40_79 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateDictionaryWrapper(object)", file="JContainer.Async.cs", label="Type dictionaryValueType = ReflectionUtils.GetDictionaryValueType(dictionaryDefinition)", span="152-152"];
m40_85 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateDictionaryWrapper(object)", file="JContainer.Async.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.CreateDictionaryWrapper(object)", span="144-144"];
m40_88 [cluster="Newtonsoft.Json.Utilities.DictionaryWrapper<TKey, TValue>.DictionaryWrapper(System.Collections.IDictionary)", file="JContainer.Async.cs", label="Entry Newtonsoft.Json.Utilities.DictionaryWrapper<TKey, TValue>.DictionaryWrapper(System.Collections.IDictionary)", span="52-52"];
m40_101 [cluster="System.Array.Copy(System.Array, int, System.Array, int, int)", file="JContainer.Async.cs", label="Entry System.Array.Copy(System.Array, int, System.Array, int, int)", span="0-0"];
m40_4 [cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="JContainer.Async.cs", label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="66-66"];
m40_102 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T)", file="JContainer.Async.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T)", span="183-183"];
m40_103 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T)", file="JContainer.Async.cs", label="return list.AddDistinct(value, EqualityComparer<T>.Default);", span="185-185"];
m40_104 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T)", file="JContainer.Async.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T)", span="183-183"];
m40_124 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRangeDistinct<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)", file="JContainer.Async.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.AddRangeDistinct<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)", span="215-215"];
m40_125 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRangeDistinct<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)", file="JContainer.Async.cs", label="bool allAdded = true", span="217-217"];
m40_126 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRangeDistinct<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)", file="JContainer.Async.cs", label=values, span="218-218"];
m40_127 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRangeDistinct<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)", file="JContainer.Async.cs", label="!list.AddDistinct(value, comparer)", span="220-220"];
m40_129 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRangeDistinct<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)", file="JContainer.Async.cs", label="return allAdded;", span="224-224"];
m40_128 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRangeDistinct<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)", file="JContainer.Async.cs", label="allAdded = false", span="221-221"];
m40_130 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRangeDistinct<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)", file="JContainer.Async.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.AddRangeDistinct<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)", span="215-215"];
m40_26 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange(System.Collections.IList, System.Collections.IEnumerable)", file="JContainer.Async.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.AddRange(System.Collections.IList, System.Collections.IEnumerable)", span="85-85"];
m40_27 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange(System.Collections.IList, System.Collections.IEnumerable)", file="JContainer.Async.cs", label="ValidationUtils.ArgumentNotNull(initial, ''initial'')", span="87-87"];
m40_28 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange(System.Collections.IList, System.Collections.IEnumerable)", file="JContainer.Async.cs", label="ListWrapper<object> wrapper = new ListWrapper<object>(initial)", span="89-89"];
m40_29 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange(System.Collections.IList, System.Collections.IEnumerable)", file="JContainer.Async.cs", label="wrapper.AddRange(collection.Cast<object>())", span="90-90"];
m40_30 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange(System.Collections.IList, System.Collections.IEnumerable)", file="JContainer.Async.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.AddRange(System.Collections.IList, System.Collections.IEnumerable)", span="85-85"];
m40_48 [cluster="System.Type.IsAssignableFrom(System.Type)", file="JContainer.Async.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m40_62 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="JContainer.Async.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", span="313-313"];
m40_6 [cluster="Unk.Where", file="JContainer.Async.cs", label="Entry Unk.Where", span=""];
m40_89 [cluster="lambda expression", file="JContainer.Async.cs", label="Entry lambda expression", span="155-159"];
m40_8 [cluster="lambda expression", file="JContainer.Async.cs", label="Entry lambda expression", span="47-47"];
m40_9 [cluster="lambda expression", file="JContainer.Async.cs", label="o is T", span="47-47"];
m40_10 [cluster="lambda expression", file="JContainer.Async.cs", label="Exit lambda expression", span="47-47"];
m40_70 [cluster="lambda expression", file="JContainer.Async.cs", label="return c.Invoke(new[] { list });", span="129-129"];
m40_69 [cluster="lambda expression", file="JContainer.Async.cs", label="ConstructorInfo c = t.GetConstructor(new[] { collectionDefinition })", span="128-128"];
m40_68 [cluster="lambda expression", file="JContainer.Async.cs", label="Entry lambda expression", span="126-130"];
m40_71 [cluster="lambda expression", file="JContainer.Async.cs", label="Exit lambda expression", span="126-130"];
m40_91 [cluster="lambda expression", file="JContainer.Async.cs", label="return c.Invoke(new[] { dictionary });", span="158-158"];
m40_90 [cluster="lambda expression", file="JContainer.Async.cs", label="ConstructorInfo c = t.GetConstructor(new[] { dictionaryDefinition })", span="157-157"];
m40_92 [cluster="lambda expression", file="JContainer.Async.cs", label="Exit lambda expression", span="155-159"];
m40_16 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)", file="JContainer.Async.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)", span="71-71"];
m40_17 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)", file="JContainer.Async.cs", label="initial == null", span="73-73"];
m40_19 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)", file="JContainer.Async.cs", label="collection == null", span="76-76"];
m40_21 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)", file="JContainer.Async.cs", label=collection, span="79-79"];
m40_22 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)", file="JContainer.Async.cs", label="initial.Add(value)", span="81-81"];
m40_18 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)", file="JContainer.Async.cs", label="throw new ArgumentNullException(''initial'');", span="74-74"];
m40_20 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)", file="JContainer.Async.cs", label="return;", span="77-77"];
m40_23 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)", file="JContainer.Async.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)", span="71-71"];
m40_61 [cluster="object.GetType()", file="JContainer.Async.cs", label="Entry object.GetType()", span="0-0"];
m40_11 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", file="JContainer.Async.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", span="57-57"];
m40_12 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", file="JContainer.Async.cs", label="collection != null", span="59-59"];
m40_13 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", file="JContainer.Async.cs", label="return (collection.Count == 0);", span="61-61"];
m40_14 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", file="JContainer.Async.cs", label="return true;", span="63-63"];
m40_15 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", file="JContainer.Async.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", span="57-57"];
m40_63 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="JContainer.Async.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", span="397-397"];
m40_184 [cluster="System.Exception.Exception(string)", file="JContainer.Async.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m40_105 [cluster="System.Collections.Generic.IList<T>.AddDistinct<T>(T, System.Collections.Generic.IEqualityComparer<T>)", file="JContainer.Async.cs", label="Entry System.Collections.Generic.IList<T>.AddDistinct<T>(T, System.Collections.Generic.IEqualityComparer<T>)", span="188-188"];
m40_33 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateGenericList(System.Type)", file="JContainer.Async.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.CreateGenericList(System.Type)", span="93-93"];
m40_34 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateGenericList(System.Type)", file="JContainer.Async.cs", label="ValidationUtils.ArgumentNotNull(listType, ''listType'')", span="95-95"];
m40_35 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateGenericList(System.Type)", file="JContainer.Async.cs", label="return (IList)ReflectionUtils.CreateGeneric(typeof(List<>), listType);", span="97-97"];
m40_36 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateGenericList(System.Type)", file="JContainer.Async.cs", label="Exit Newtonsoft.Json.Utilities.CollectionUtils.CreateGenericList(System.Type)", span="93-93"];
m40_205 [file="JContainer.Async.cs", label=collectionDefinition, span=""];
m40_206 [file="JContainer.Async.cs", label=object, span=""];
m40_207 [file="JContainer.Async.cs", label=dictionaryDefinition, span=""];
m40_208 [file="JContainer.Async.cs", label=object, span=""];
m41_18 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="JContainer.cs", label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="454-454"];
m41_12 [cluster="Newtonsoft.Json.Serialization.JsonProperty.WritePropertyName(Newtonsoft.Json.JsonWriter)", file="JContainer.cs", label="Entry Newtonsoft.Json.Serialization.JsonProperty.WritePropertyName(Newtonsoft.Json.JsonWriter)", span="291-291"];
m41_13 [cluster="Newtonsoft.Json.Serialization.JsonProperty.WritePropertyName(Newtonsoft.Json.JsonWriter)", file="JContainer.cs", label=_skipPropertyNameEscape, span="293-293"];
m41_14 [cluster="Newtonsoft.Json.Serialization.JsonProperty.WritePropertyName(Newtonsoft.Json.JsonWriter)", file="JContainer.cs", label="writer.WritePropertyName(PropertyName, false)", span="294-294"];
m41_15 [cluster="Newtonsoft.Json.Serialization.JsonProperty.WritePropertyName(Newtonsoft.Json.JsonWriter)", file="JContainer.cs", label="writer.WritePropertyName(PropertyName)", span="296-296"];
m41_16 [cluster="Newtonsoft.Json.Serialization.JsonProperty.WritePropertyName(Newtonsoft.Json.JsonWriter)", file="JContainer.cs", label="Exit Newtonsoft.Json.Serialization.JsonProperty.WritePropertyName(Newtonsoft.Json.JsonWriter)", span="291-291"];
m41_9 [cluster="Newtonsoft.Json.Serialization.JsonProperty.ToString()", file="JContainer.cs", label="Entry Newtonsoft.Json.Serialization.JsonProperty.ToString()", span="262-262"];
m41_10 [cluster="Newtonsoft.Json.Serialization.JsonProperty.ToString()", file="JContainer.cs", label="return PropertyName;", span="264-264"];
m41_11 [cluster="Newtonsoft.Json.Serialization.JsonProperty.ToString()", file="JContainer.cs", label="Exit Newtonsoft.Json.Serialization.JsonProperty.ToString()", span="262-262"];
m41_0 [cluster="Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", file="JContainer.cs", label="Entry Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", span="170-170"];
m41_1 [cluster="Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", file="JContainer.cs", label="_propertyType == null", span="172-172"];
m41_2 [cluster="Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", file="JContainer.cs", label="return null;", span="173-173"];
m41_3 [cluster="Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", file="JContainer.cs", label="!_hasExplicitDefaultValue && !_hasGeneratedDefaultValue", span="175-175"];
m41_4 [cluster="Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", file="JContainer.cs", label="_defaultValue = ReflectionUtils.GetDefaultValue(PropertyType)", span="177-177"];
m41_6 [cluster="Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", file="JContainer.cs", label="return _defaultValue;", span="181-181"];
m41_5 [cluster="Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", file="JContainer.cs", label="_hasGeneratedDefaultValue = true", span="178-178"];
m41_7 [cluster="Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", file="JContainer.cs", label="Exit Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", span="170-170"];
m41_17 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string, bool)", file="JContainer.cs", label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string, bool)", span="464-464"];
m41_8 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="JContainer.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", span="992-992"];
m41_19 [file="JContainer.cs", label="Newtonsoft.Json.Serialization.JsonProperty", span=""];
m42_10 [cluster="Newtonsoft.Json.Linq.JEnumerable<T>.System.Collections.IEnumerable.GetEnumerator()", file="JEnumerable.cs", label="Entry Newtonsoft.Json.Linq.JEnumerable<T>.System.Collections.IEnumerable.GetEnumerator()", span="72-72"];
m42_11 [cluster="Newtonsoft.Json.Linq.JEnumerable<T>.System.Collections.IEnumerable.GetEnumerator()", file="JEnumerable.cs", label="return GetEnumerator();", span="74-74"];
m42_12 [cluster="Newtonsoft.Json.Linq.JEnumerable<T>.System.Collections.IEnumerable.GetEnumerator()", file="JEnumerable.cs", label="Exit Newtonsoft.Json.Linq.JEnumerable<T>.System.Collections.IEnumerable.GetEnumerator()", span="72-72"];
m42_5 [cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="JEnumerable.cs", label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="31-31"];
m42_22 [cluster="Newtonsoft.Json.Linq.JEnumerable<T>.GetHashCode()", file="JEnumerable.cs", label="Entry Newtonsoft.Json.Linq.JEnumerable<T>.GetHashCode()", span="129-129"];
m42_23 [cluster="Newtonsoft.Json.Linq.JEnumerable<T>.GetHashCode()", file="JEnumerable.cs", label="_enumerable == null", span="131-131"];
m42_24 [cluster="Newtonsoft.Json.Linq.JEnumerable<T>.GetHashCode()", file="JEnumerable.cs", label="return 0;", span="133-133"];
m42_25 [cluster="Newtonsoft.Json.Linq.JEnumerable<T>.GetHashCode()", file="JEnumerable.cs", label="return _enumerable.GetHashCode();", span="136-136"];
m42_26 [cluster="Newtonsoft.Json.Linq.JEnumerable<T>.GetHashCode()", file="JEnumerable.cs", label="Exit Newtonsoft.Json.Linq.JEnumerable<T>.GetHashCode()", span="129-129"];
m42_17 [cluster="Newtonsoft.Json.Linq.JEnumerable<T>.Equals(object)", file="JEnumerable.cs", label="Entry Newtonsoft.Json.Linq.JEnumerable<T>.Equals(object)", span="113-113"];
m42_18 [cluster="Newtonsoft.Json.Linq.JEnumerable<T>.Equals(object)", file="JEnumerable.cs", label="obj is JEnumerable<T>", span="115-115"];
m42_19 [cluster="Newtonsoft.Json.Linq.JEnumerable<T>.Equals(object)", file="JEnumerable.cs", label="return Equals((JEnumerable<T>)obj);", span="117-117"];
m42_20 [cluster="Newtonsoft.Json.Linq.JEnumerable<T>.Equals(object)", file="JEnumerable.cs", label="return false;", span="120-120"];
m42_21 [cluster="Newtonsoft.Json.Linq.JEnumerable<T>.Equals(object)", file="JEnumerable.cs", label="Exit Newtonsoft.Json.Linq.JEnumerable<T>.Equals(object)", span="113-113"];
m42_16 [cluster="object.Equals(object, object)", file="JEnumerable.cs", label="Entry object.Equals(object, object)", span="0-0"];
m42_13 [cluster="Newtonsoft.Json.Linq.JEnumerable<T>.Equals(Newtonsoft.Json.Linq.JEnumerable<T>)", file="JEnumerable.cs", label="Entry Newtonsoft.Json.Linq.JEnumerable<T>.Equals(Newtonsoft.Json.Linq.JEnumerable<T>)", span="101-101"];
m42_14 [cluster="Newtonsoft.Json.Linq.JEnumerable<T>.Equals(Newtonsoft.Json.Linq.JEnumerable<T>)", file="JEnumerable.cs", label="return Equals(_enumerable, other._enumerable);", span="103-103"];
m42_15 [cluster="Newtonsoft.Json.Linq.JEnumerable<T>.Equals(Newtonsoft.Json.Linq.JEnumerable<T>)", file="JEnumerable.cs", label="Exit Newtonsoft.Json.Linq.JEnumerable<T>.Equals(Newtonsoft.Json.Linq.JEnumerable<T>)", span="101-101"];
m42_6 [cluster="Newtonsoft.Json.Linq.JEnumerable<T>.GetEnumerator()", file="JEnumerable.cs", label="Entry Newtonsoft.Json.Linq.JEnumerable<T>.GetEnumerator()", span="67-67"];
m42_7 [cluster="Newtonsoft.Json.Linq.JEnumerable<T>.GetEnumerator()", file="JEnumerable.cs", label="return (_enumerable ?? Empty).GetEnumerator();", span="69-69"];
m42_8 [cluster="Newtonsoft.Json.Linq.JEnumerable<T>.GetEnumerator()", file="JEnumerable.cs", label="Exit Newtonsoft.Json.Linq.JEnumerable<T>.GetEnumerator()", span="67-67"];
m42_27 [cluster="object.GetHashCode()", file="JEnumerable.cs", label="Entry object.GetHashCode()", span="0-0"];
m42_4 [cluster="Unk.nameof", file="JEnumerable.cs", label="Entry Unk.nameof", span=""];
m42_9 [cluster="System.Collections.Generic.IEnumerable<T>.GetEnumerator()", file="JEnumerable.cs", label="Entry System.Collections.Generic.IEnumerable<T>.GetEnumerator()", span="0-0"];
m42_0 [cluster="Newtonsoft.Json.Linq.JEnumerable<T>.JEnumerable(System.Collections.Generic.IEnumerable<T>)", file="JEnumerable.cs", label="Entry Newtonsoft.Json.Linq.JEnumerable<T>.JEnumerable(System.Collections.Generic.IEnumerable<T>)", span="54-54"];
m42_1 [cluster="Newtonsoft.Json.Linq.JEnumerable<T>.JEnumerable(System.Collections.Generic.IEnumerable<T>)", file="JEnumerable.cs", label="ValidationUtils.ArgumentNotNull(enumerable, nameof(enumerable))", span="56-56"];
m42_2 [cluster="Newtonsoft.Json.Linq.JEnumerable<T>.JEnumerable(System.Collections.Generic.IEnumerable<T>)", file="JEnumerable.cs", label="_enumerable = enumerable", span="58-58"];
m42_3 [cluster="Newtonsoft.Json.Linq.JEnumerable<T>.JEnumerable(System.Collections.Generic.IEnumerable<T>)", file="JEnumerable.cs", label="Exit Newtonsoft.Json.Linq.JEnumerable<T>.JEnumerable(System.Collections.Generic.IEnumerable<T>)", span="54-54"];
m42_28 [file="JEnumerable.cs", label="out Newtonsoft.Json.Linq.JEnumerable<T>", span=""];
m42_29 [file="JEnumerable.cs", label="Newtonsoft.Json.Linq.JEnumerable<T>", span=""];
m42_30 [file="JEnumerable.cs", label="ref Newtonsoft.Json.Linq.JEnumerable<T>", span=""];
m42_31 [file="JEnumerable.cs", label="ref Newtonsoft.Json.Linq.JEnumerable<T>", span=""];
m43_370 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Success()", file="JObject.Async.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Success()", span="614-614"];
m43_371 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Success()", file="JObject.Async.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''array'''',\r\n  ''''items'''':{\r\n    ''''type'''':''''number'''',\r\n    ''''divisibleBy'''':2\r\n  }\r\n}''", span="616-622"];
m43_372 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Success()", file="JObject.Async.cs", label="string json = ''[999999999999999999999999999999999999999999999999999999998]''", span="624-624"];
m43_376 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Success()", file="JObject.Async.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="630-630"];
m43_373 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Success()", file="JObject.Async.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="626-626"];
m43_374 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Success()", file="JObject.Async.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="628-628"];
m43_375 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Success()", file="JObject.Async.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="629-629"];
m43_377 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Success()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="632-632"];
m43_378 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Success()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="633-633"];
m43_379 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Success()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="635-635"];
m43_380 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Success()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="636-636"];
m43_382 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Success()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="639-639"];
m43_383 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Success()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="640-640"];
m43_381 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Success()", file="JObject.Async.cs", label="Assert.IsNull(validationEventArgs)", span="637-637"];
m43_384 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Success()", file="JObject.Async.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Success()", span="614-614"];
m43_62 [cluster="Newtonsoft.Json.JsonValidatingReader.Read()", file="JObject.Async.cs", label="Entry Newtonsoft.Json.JsonValidatingReader.Read()", span="448-448"];
m43_243 [cluster="Unk.>", file="JObject.Async.cs", label="Entry Unk.>", span=""];
m43_882 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.JsonSchemaModelBuilder()", file="JObject.Async.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaModelBuilder.JsonSchemaModelBuilder()", span="37-37"];
m43_901 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsBytes()", file="JObject.Async.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsBytes()", span="1595-1595"];
m43_902 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsBytes()", file="JObject.Async.cs", label="JsonSchema s = new JsonSchemaGenerator().Generate(typeof(byte[]))", span="1597-1597"];
m43_903 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsBytes()", file="JObject.Async.cs", label="byte[] data = Encoding.UTF8.GetBytes(''Hello world'')", span="1599-1599"];
m43_904 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsBytes()", file="JObject.Async.cs", label="JsonReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(@'''''''' + Convert.ToBase64String(data) + @'''''''')))\r\n            {\r\n                Schema = s\r\n            }", span="1601-1604"];
m43_906 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsBytes()", file="JObject.Async.cs", label="CollectionAssert.AreEquivalent(data, bytes)", span="1607-1607"];
m43_905 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsBytes()", file="JObject.Async.cs", label="byte[] bytes = reader.ReadAsBytes()", span="1605-1605"];
m43_907 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsBytes()", file="JObject.Async.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsBytes()", span="1595-1595"];
m43_7 [cluster="System.IO.StringReader.StringReader(string)", file="JObject.Async.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m43_250 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerLessThanMinimumValue()", file="JObject.Async.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerLessThanMinimumValue()", span="422-422"];
m43_251 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerLessThanMinimumValue()", file="JObject.Async.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''integer'''',\r\n  ''''minimum'''':5\r\n}''", span="424-427"];
m43_252 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerLessThanMinimumValue()", file="JObject.Async.cs", label="string json = ''1''", span="429-429"];
m43_256 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerLessThanMinimumValue()", file="JObject.Async.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="435-435"];
m43_253 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerLessThanMinimumValue()", file="JObject.Async.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="431-431"];
m43_254 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerLessThanMinimumValue()", file="JObject.Async.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="433-433"];
m43_255 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerLessThanMinimumValue()", file="JObject.Async.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="434-434"];
m43_257 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerLessThanMinimumValue()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="437-437"];
m43_258 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerLessThanMinimumValue()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="438-438"];
m43_259 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerLessThanMinimumValue()", file="JObject.Async.cs", label="Assert.AreEqual(''Integer 1 is less than minimum value of 5. Line 1, position 1.'', validationEventArgs.Message)", span="439-439"];
m43_260 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerLessThanMinimumValue()", file="JObject.Async.cs", label="Assert.IsNotNull(validationEventArgs)", span="441-441"];
m43_261 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerLessThanMinimumValue()", file="JObject.Async.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerLessThanMinimumValue()", span="422-422"];
m43_152 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringIsNotInEnum()", file="JObject.Async.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringIsNotInEnum()", span="271-271"];
m43_153 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringIsNotInEnum()", file="JObject.Async.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''array'''',\r\n  ''''items'''':{\r\n    ''''type'''':''''string'''',\r\n    ''''enum'''':[''''one'''',''''two'''']\r\n  },\r\n  ''''maxItems'''':3\r\n}''", span="273-280"];
m43_154 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringIsNotInEnum()", file="JObject.Async.cs", label="string json = ''['one','two','THREE']''", span="282-282"];
m43_158 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringIsNotInEnum()", file="JObject.Async.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="288-288"];
m43_155 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringIsNotInEnum()", file="JObject.Async.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="284-284"];
m43_156 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringIsNotInEnum()", file="JObject.Async.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="286-286"];
m43_157 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringIsNotInEnum()", file="JObject.Async.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="287-287"];
m43_159 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringIsNotInEnum()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="290-290"];
m43_160 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringIsNotInEnum()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="291-291"];
m43_161 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringIsNotInEnum()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="293-293"];
m43_162 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringIsNotInEnum()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="294-294"];
m43_163 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringIsNotInEnum()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="296-296"];
m43_164 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringIsNotInEnum()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="297-297"];
m43_166 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringIsNotInEnum()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="300-300"];
m43_167 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringIsNotInEnum()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="301-301"];
m43_170 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringIsNotInEnum()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="305-305"];
m43_171 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringIsNotInEnum()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="306-306"];
m43_165 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringIsNotInEnum()", file="JObject.Async.cs", label="Assert.AreEqual(null, validationEventArgs)", span="298-298"];
m43_168 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringIsNotInEnum()", file="JObject.Async.cs", label="Assert.AreEqual(@''Value ''''THREE'''' is not defined in enum. Line 1, position 20.'', validationEventArgs.Message)", span="302-302"];
m43_169 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringIsNotInEnum()", file="JObject.Async.cs", label="Assert.AreEqual(''[2]'', validationEventArgs.Path)", span="303-303"];
m43_172 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringIsNotInEnum()", file="JObject.Async.cs", label="Assert.IsNotNull(validationEventArgs)", span="308-308"];
m43_173 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringIsNotInEnum()", file="JObject.Async.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringIsNotInEnum()", span="271-271"];
m43_305 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatLessThanMinimumValue()", file="JObject.Async.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatLessThanMinimumValue()", span="509-509"];
m43_306 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatLessThanMinimumValue()", file="JObject.Async.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''number'''',\r\n  ''''minimum'''':5\r\n}''", span="511-514"];
m43_307 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatLessThanMinimumValue()", file="JObject.Async.cs", label="string json = ''1.1''", span="516-516"];
m43_311 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatLessThanMinimumValue()", file="JObject.Async.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="522-522"];
m43_308 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatLessThanMinimumValue()", file="JObject.Async.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="518-518"];
m43_309 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatLessThanMinimumValue()", file="JObject.Async.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="520-520"];
m43_310 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatLessThanMinimumValue()", file="JObject.Async.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="521-521"];
m43_312 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatLessThanMinimumValue()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="524-524"];
m43_313 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatLessThanMinimumValue()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="525-525"];
m43_314 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatLessThanMinimumValue()", file="JObject.Async.cs", label="Assert.AreEqual(''Float 1.1 is less than minimum value of 5. Line 1, position 3.'', validationEventArgs.Message)", span="526-526"];
m43_315 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatLessThanMinimumValue()", file="JObject.Async.cs", label="Assert.IsNotNull(validationEventArgs)", span="528-528"];
m43_316 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatLessThanMinimumValue()", file="JObject.Async.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatLessThanMinimumValue()", span="509-509"];
m43_345 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatDivisibleBy()", file="JObject.Async.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatDivisibleBy()", span="573-573"];
m43_346 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatDivisibleBy()", file="JObject.Async.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''array'''',\r\n  ''''items'''':{\r\n    ''''type'''':''''number'''',\r\n    ''''divisibleBy'''':0.1\r\n  }\r\n}''", span="575-581"];
m43_347 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatDivisibleBy()", file="JObject.Async.cs", label="string json = ''[1.1,2.2,4.001]''", span="583-583"];
m43_351 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatDivisibleBy()", file="JObject.Async.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="589-589"];
m43_348 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatDivisibleBy()", file="JObject.Async.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="585-585"];
m43_349 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatDivisibleBy()", file="JObject.Async.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="587-587"];
m43_350 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatDivisibleBy()", file="JObject.Async.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="588-588"];
m43_352 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatDivisibleBy()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="591-591"];
m43_353 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatDivisibleBy()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="592-592"];
m43_354 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatDivisibleBy()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="594-594"];
m43_355 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatDivisibleBy()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="595-595"];
m43_356 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatDivisibleBy()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="597-597"];
m43_357 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatDivisibleBy()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="598-598"];
m43_359 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatDivisibleBy()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="601-601"];
m43_360 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatDivisibleBy()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="602-602"];
m43_363 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatDivisibleBy()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="606-606"];
m43_364 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatDivisibleBy()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="607-607"];
m43_358 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatDivisibleBy()", file="JObject.Async.cs", label="Assert.AreEqual(null, validationEventArgs)", span="599-599"];
m43_361 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatDivisibleBy()", file="JObject.Async.cs", label="Assert.AreEqual(@''Float 4.001 is not evenly divisible by 0.1. Line 1, position 14.'', validationEventArgs.Message)", span="603-603"];
m43_362 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatDivisibleBy()", file="JObject.Async.cs", label="Assert.AreEqual(''[2]'', validationEventArgs.Path)", span="604-604"];
m43_365 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatDivisibleBy()", file="JObject.Async.cs", label="Assert.IsNotNull(validationEventArgs)", span="609-609"];
m43_366 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatDivisibleBy()", file="JObject.Async.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatDivisibleBy()", span="573-573"];
m43_10 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JObject.Async.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", span="70-70"];
m43_11 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JObject.Async.cs", label="string schemaJson = @''{\r\n  ''''description'''':''''A person'''',\r\n  ''''type'''':''''object'''',\r\n  ''''properties'''':\r\n  {\r\n    ''''name'''':{''''type'''':''''string''''},\r\n    ''''hobbies'''':\r\n    {\r\n      ''''type'''':''''array'''',\r\n      ''''items'''': {''''type'''':''''string''''}\r\n    }\r\n  }\r\n}''", span="72-84"];
m43_12 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JObject.Async.cs", label="string json = @''{'name':''''James'''','hobbies':[''''pie'''','cake']}''", span="86-86"];
m43_16 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JObject.Async.cs", label="JsonSchema schema = JsonSchema.Parse(schemaJson)", span="92-92"];
m43_13 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JObject.Async.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="88-88"];
m43_14 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JObject.Async.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="90-90"];
m43_15 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JObject.Async.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="91-91"];
m43_17 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JObject.Async.cs", label="reader.Schema = schema", span="93-93"];
m43_18 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JObject.Async.cs", label="Assert.AreEqual(schema, reader.Schema)", span="94-94"];
m43_19 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JObject.Async.cs", label="Assert.AreEqual(0, reader.Depth)", span="95-95"];
m43_20 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JObject.Async.cs", label="Assert.AreEqual('''', reader.Path)", span="96-96"];
m43_21 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="98-98"];
m43_22 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="99-99"];
m43_23 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JObject.Async.cs", label="Assert.AreEqual('''', reader.Path)", span="100-100"];
m43_24 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="102-102"];
m43_25 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="103-103"];
m43_26 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JObject.Async.cs", label="Assert.AreEqual(''name'', reader.Value.ToString())", span="104-104"];
m43_27 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JObject.Async.cs", label="Assert.AreEqual(''name'', reader.Path)", span="105-105"];
m43_28 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JObject.Async.cs", label="Assert.AreEqual(1, reader.Depth)", span="106-106"];
m43_29 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="108-108"];
m43_30 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="109-109"];
m43_31 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JObject.Async.cs", label="Assert.AreEqual(''James'', reader.Value.ToString())", span="110-110"];
m43_32 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JObject.Async.cs", label="Assert.AreEqual(typeof(string), reader.ValueType)", span="111-111"];
m43_33 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JObject.Async.cs", label="Assert.AreEqual('''', reader.QuoteChar)", span="112-112"];
m43_34 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JObject.Async.cs", label="Assert.AreEqual(''name'', reader.Path)", span="113-113"];
m43_35 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="115-115"];
m43_36 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="116-116"];
m43_37 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JObject.Async.cs", label="Assert.AreEqual(''hobbies'', reader.Value.ToString())", span="117-117"];
m43_38 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JObject.Async.cs", label="Assert.AreEqual('\'', reader.QuoteChar)", span="118-118"];
m43_39 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JObject.Async.cs", label="Assert.AreEqual(''hobbies'', reader.Path)", span="119-119"];
m43_40 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="121-121"];
m43_41 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="122-122"];
m43_42 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JObject.Async.cs", label="Assert.AreEqual(''hobbies'', reader.Path)", span="123-123"];
m43_43 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="125-125"];
m43_44 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="126-126"];
m43_45 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JObject.Async.cs", label="Assert.AreEqual(''pie'', reader.Value.ToString())", span="127-127"];
m43_46 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JObject.Async.cs", label="Assert.AreEqual('''', reader.QuoteChar)", span="128-128"];
m43_47 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JObject.Async.cs", label="Assert.AreEqual(''hobbies[0]'', reader.Path)", span="129-129"];
m43_48 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="131-131"];
m43_49 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="132-132"];
m43_50 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JObject.Async.cs", label="Assert.AreEqual(''cake'', reader.Value.ToString())", span="133-133"];
m43_51 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JObject.Async.cs", label="Assert.AreEqual(''hobbies[1]'', reader.Path)", span="134-134"];
m43_52 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="136-136"];
m43_53 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="137-137"];
m43_54 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JObject.Async.cs", label="Assert.AreEqual(''hobbies'', reader.Path)", span="138-138"];
m43_55 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="140-140"];
m43_56 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="141-141"];
m43_57 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JObject.Async.cs", label="Assert.AreEqual('''', reader.Path)", span="142-142"];
m43_58 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JObject.Async.cs", label="Assert.IsFalse(reader.Read())", span="144-144"];
m43_59 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JObject.Async.cs", label="Assert.IsNull(validationEventArgs)", span="146-146"];
m43_60 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JObject.Async.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", span="70-70"];
m43_121 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringLessThanMinimumLength()", file="JObject.Async.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringLessThanMinimumLength()", span="223-223"];
m43_122 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringLessThanMinimumLength()", file="JObject.Async.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''string'''',\r\n  ''''minLength'''':5,\r\n  ''''maxLength'''':50,\r\n}''", span="225-229"];
m43_123 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringLessThanMinimumLength()", file="JObject.Async.cs", label="string json = '''pie'''", span="231-231"];
m43_127 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringLessThanMinimumLength()", file="JObject.Async.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="237-237"];
m43_124 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringLessThanMinimumLength()", file="JObject.Async.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="233-233"];
m43_125 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringLessThanMinimumLength()", file="JObject.Async.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="235-235"];
m43_126 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringLessThanMinimumLength()", file="JObject.Async.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="236-236"];
m43_128 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringLessThanMinimumLength()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="239-239"];
m43_129 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringLessThanMinimumLength()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="240-240"];
m43_130 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringLessThanMinimumLength()", file="JObject.Async.cs", label="Assert.AreEqual(''String 'pie' is less than minimum length of 5. Line 1, position 5.'', validationEventArgs.Message)", span="241-241"];
m43_131 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringLessThanMinimumLength()", file="JObject.Async.cs", label="Assert.IsNotNull(validationEventArgs)", span="243-243"];
m43_132 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringLessThanMinimumLength()", file="JObject.Async.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringLessThanMinimumLength()", span="223-223"];
m43_914 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32()", file="JObject.Async.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32()", span="1611-1611"];
m43_915 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32()", file="JObject.Async.cs", label="JsonSchema s = new JsonSchemaGenerator().Generate(typeof(int))", span="1613-1613"];
m43_916 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32()", file="JObject.Async.cs", label="JsonReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(@''1'')))\r\n            {\r\n                Schema = s\r\n            }", span="1615-1618"];
m43_917 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32()", file="JObject.Async.cs", label="int? i = reader.ReadAsInt32()", span="1619-1619"];
m43_918 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32()", file="JObject.Async.cs", label="Assert.AreEqual(1, i)", span="1621-1621"];
m43_919 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32()", file="JObject.Async.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32()", span="1611-1611"];
m43_920 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32()", file="JObject.Async.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsInt32()", span="411-411"];
m43_666 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsStringGreaterThanMaximumLength()", file="JObject.Async.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsStringGreaterThanMaximumLength()", span="1098-1098"];
m43_667 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsStringGreaterThanMaximumLength()", file="JObject.Async.cs", label="string schemaJson = @''{\r\n  ''''extends'''':{\r\n    ''''type'''':''''string'''',\r\n    ''''minLength'''':5,\r\n    ''''maxLength'''':10\r\n  },\r\n  ''''maxLength'''':9\r\n}''", span="1100-1107"];
m43_668 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsStringGreaterThanMaximumLength()", file="JObject.Async.cs", label="List<string> errors = new List<string>()", span="1109-1109"];
m43_673 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsStringGreaterThanMaximumLength()", file="JObject.Async.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="1120-1120"];
m43_669 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsStringGreaterThanMaximumLength()", file="JObject.Async.cs", label="string json = '''The quick brown fox jumps over the lazy dog.'''", span="1110-1110"];
m43_672 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsStringGreaterThanMaximumLength()", file="JObject.Async.cs", label="reader.ValidationEventHandler += (sender, args) =>\r\n            {\r\n                validationEventArgs = args;\r\n                errors.Add(validationEventArgs.Message);\r\n            }", span="1115-1119"];
m43_676 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsStringGreaterThanMaximumLength()", file="JObject.Async.cs", label="Assert.AreEqual(1, errors.Count)", span="1124-1124"];
m43_677 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsStringGreaterThanMaximumLength()", file="JObject.Async.cs", label="Assert.AreEqual(''String 'The quick brown fox jumps over the lazy dog.' exceeds maximum length of 9. Line 1, position 46.'', errors[0])", span="1125-1125"];
m43_670 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsStringGreaterThanMaximumLength()", file="JObject.Async.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="1112-1112"];
m43_671 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsStringGreaterThanMaximumLength()", file="JObject.Async.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="1114-1114"];
m43_674 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsStringGreaterThanMaximumLength()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="1122-1122"];
m43_675 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsStringGreaterThanMaximumLength()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1123-1123"];
m43_678 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsStringGreaterThanMaximumLength()", file="JObject.Async.cs", label="Assert.IsNotNull(validationEventArgs)", span="1127-1127"];
m43_679 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsStringGreaterThanMaximumLength()", file="JObject.Async.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsStringGreaterThanMaximumLength()", span="1098-1098"];
m43_66 [cluster="Unk.IsNull", file="JObject.Async.cs", label="Entry Unk.IsNull", span=""];
m43_695 [cluster="Newtonsoft.Json.Schema.JsonSchema.Parse(string, Newtonsoft.Json.Schema.JsonSchemaResolver)", file="JObject.Async.cs", label="Entry Newtonsoft.Json.Schema.JsonSchema.Parse(string, Newtonsoft.Json.Schema.JsonSchemaResolver)", span="305-305"];
m43_680 [cluster="System.Collections.Generic.List<T>.List()", file="JObject.Async.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m43_911 [cluster="System.Convert.ToBase64String(byte[])", file="JObject.Async.cs", label="Entry System.Convert.ToBase64String(byte[])", span="0-0"];
m43_947 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32FromSerializer()", file="JObject.Async.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32FromSerializer()", span="1671-1671"];
m43_948 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32FromSerializer()", file="JObject.Async.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(''[1,2,3]'')))", span="1673-1673"];
m43_949 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32FromSerializer()", file="JObject.Async.cs", label="reader.Schema = new JsonSchemaGenerator().Generate(typeof(int[]))", span="1674-1674"];
m43_950 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32FromSerializer()", file="JObject.Async.cs", label="int[] values = new JsonSerializer().Deserialize<int[]>(reader)", span="1675-1675"];
m43_951 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32FromSerializer()", file="JObject.Async.cs", label="Assert.AreEqual(3, values.Length)", span="1677-1677"];
m43_952 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32FromSerializer()", file="JObject.Async.cs", label="Assert.AreEqual(1, values[0])", span="1678-1678"];
m43_953 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32FromSerializer()", file="JObject.Async.cs", label="Assert.AreEqual(2, values[1])", span="1679-1679"];
m43_954 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32FromSerializer()", file="JObject.Async.cs", label="Assert.AreEqual(3, values[2])", span="1680-1680"];
m43_955 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32FromSerializer()", file="JObject.Async.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32FromSerializer()", span="1671-1671"];
m43_525 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountLessThanMinimumItems()", file="JObject.Async.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountLessThanMinimumItems()", span="868-868"];
m43_526 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountLessThanMinimumItems()", file="JObject.Async.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''array'''',\r\n  ''''minItems'''':2,\r\n  ''''maxItems'''':3\r\n}''", span="870-874"];
m43_527 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountLessThanMinimumItems()", file="JObject.Async.cs", label="string json = ''[null]''", span="876-876"];
m43_531 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountLessThanMinimumItems()", file="JObject.Async.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="882-882"];
m43_528 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountLessThanMinimumItems()", file="JObject.Async.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="878-878"];
m43_529 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountLessThanMinimumItems()", file="JObject.Async.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="880-880"];
m43_530 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountLessThanMinimumItems()", file="JObject.Async.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="881-881"];
m43_532 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountLessThanMinimumItems()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="884-884"];
m43_533 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountLessThanMinimumItems()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="885-885"];
m43_534 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountLessThanMinimumItems()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="887-887"];
m43_535 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountLessThanMinimumItems()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="888-888"];
m43_536 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountLessThanMinimumItems()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="890-890"];
m43_537 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountLessThanMinimumItems()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="891-891"];
m43_538 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountLessThanMinimumItems()", file="JObject.Async.cs", label="Assert.AreEqual(''Array item count 1 is less than minimum count of 2. Line 1, position 6.'', validationEventArgs.Message)", span="892-892"];
m43_539 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountLessThanMinimumItems()", file="JObject.Async.cs", label="Assert.IsNotNull(validationEventArgs)", span="894-894"];
m43_540 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountLessThanMinimumItems()", file="JObject.Async.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountLessThanMinimumItems()", span="868-868"];
m43_938 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsDecimalFailure()", file="JObject.Async.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsDecimalFailure()", span="1655-1655"];
m43_939 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsDecimalFailure()", file="JObject.Async.cs", label="ExceptionAssert.Throws<JsonSchemaException>(() =>\r\n            {\r\n                JsonSchema s = new JsonSchemaGenerator().Generate(typeof(decimal));\r\n                s.DivisibleBy = 1;\r\n\r\n                JsonReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(@''5.5'')))\r\n                {\r\n                    Schema = s\r\n                };\r\n                reader.ReadAsDecimal();\r\n            }, ''Float 5.5 is not evenly divisible by 1. Line 1, position 3.'')", span="1657-1667"];
m43_940 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsDecimalFailure()", file="JObject.Async.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsDecimalFailure()", span="1655-1655"];
m43_741 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsMissingRequiredProperties()", file="JObject.Async.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsMissingRequiredProperties()", span="1219-1219"];
m43_742 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsMissingRequiredProperties()", file="JObject.Async.cs", label="string json = ''{}''", span="1221-1221"];
m43_743 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsMissingRequiredProperties()", file="JObject.Async.cs", label="List<string> errors = new List<string>()", span="1223-1223"];
m43_744 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsMissingRequiredProperties()", file="JObject.Async.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="1225-1225"];
m43_745 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsMissingRequiredProperties()", file="JObject.Async.cs", label="reader.ValidationEventHandler += (sender, args) => { errors.Add(args.Message); }", span="1226-1226"];
m43_751 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsMissingRequiredProperties()", file="JObject.Async.cs", label="Assert.AreEqual(1, errors.Count)", span="1235-1235"];
m43_752 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsMissingRequiredProperties()", file="JObject.Async.cs", label="Assert.AreEqual(''Required properties are missing from object: secondproperty, firstproperty. Line 1, position 2.'', errors[0])", span="1236-1236"];
m43_746 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsMissingRequiredProperties()", file="JObject.Async.cs", label="reader.Schema = GetExtendedSchema()", span="1227-1227"];
m43_747 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsMissingRequiredProperties()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="1229-1229"];
m43_748 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsMissingRequiredProperties()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1230-1230"];
m43_749 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsMissingRequiredProperties()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="1232-1232"];
m43_750 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsMissingRequiredProperties()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1233-1233"];
m43_753 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsMissingRequiredProperties()", file="JObject.Async.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsMissingRequiredProperties()", span="1219-1219"];
m43_629 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="JObject.Async.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", span="1041-1041"];
m43_630 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="JObject.Async.cs", label="string schemaJson = @''{\r\n  ''''description'''':''''A person'''',\r\n  ''''type'''':''''object'''',\r\n  ''''properties'''':\r\n  {\r\n    ''''name'''':{''''type'''':''''string''''}\r\n  },\r\n  ''''additionalProperties'''':false\r\n}''", span="1043-1051"];
m43_631 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="JObject.Async.cs", label="string json = ''{'name':'James','additionalProperty1':null,'additionalProperty2':null}''", span="1053-1053"];
m43_635 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="JObject.Async.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="1059-1059"];
m43_632 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="JObject.Async.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="1055-1055"];
m43_633 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="JObject.Async.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="1057-1057"];
m43_634 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="JObject.Async.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="1058-1058"];
m43_636 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="1061-1061"];
m43_637 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1062-1062"];
m43_638 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="1064-1064"];
m43_639 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1065-1065"];
m43_640 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="JObject.Async.cs", label="Assert.AreEqual(''name'', reader.Value.ToString())", span="1066-1066"];
m43_641 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="1068-1068"];
m43_642 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1069-1069"];
m43_643 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="JObject.Async.cs", label="Assert.AreEqual(''James'', reader.Value.ToString())", span="1070-1070"];
m43_645 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="1073-1073"];
m43_646 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1074-1074"];
m43_647 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="JObject.Async.cs", label="Assert.AreEqual(''additionalProperty1'', reader.Value.ToString())", span="1075-1075"];
m43_648 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="1077-1077"];
m43_649 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="1078-1078"];
m43_650 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="JObject.Async.cs", label="Assert.AreEqual(null, reader.Value)", span="1079-1079"];
m43_652 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="1082-1082"];
m43_653 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1083-1083"];
m43_654 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="JObject.Async.cs", label="Assert.AreEqual(''additionalProperty2'', reader.Value.ToString())", span="1084-1084"];
m43_655 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="1086-1086"];
m43_656 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="1087-1087"];
m43_657 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="JObject.Async.cs", label="Assert.AreEqual(null, reader.Value)", span="1088-1088"];
m43_659 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="1091-1091"];
m43_660 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1092-1092"];
m43_644 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="JObject.Async.cs", label="Assert.AreEqual(null, validationEventArgs)", span="1071-1071"];
m43_651 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="JObject.Async.cs", label="Assert.AreEqual(''Property 'additionalProperty1' has not been defined and the schema does not allow additional properties. Line 1, position 38.'', validationEventArgs.Message)", span="1080-1080"];
m43_658 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="JObject.Async.cs", label="Assert.AreEqual(''Property 'additionalProperty2' has not been defined and the schema does not allow additional properties. Line 1, position 65.'', validationEventArgs.Message)", span="1089-1089"];
m43_661 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="JObject.Async.cs", label="Assert.IsNotNull(validationEventArgs)", span="1094-1094"];
m43_662 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="JObject.Async.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", span="1041-1041"];
m43_428 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_FractionWithZeroValue()", file="JObject.Async.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_FractionWithZeroValue()", span="709-709"];
m43_429 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_FractionWithZeroValue()", file="JObject.Async.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''array'''',\r\n  ''''items'''':{\r\n    ''''type'''':''''number'''',\r\n    ''''divisibleBy'''':1.1\r\n  }\r\n}''", span="711-717"];
m43_430 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_FractionWithZeroValue()", file="JObject.Async.cs", label="JArray a = new JArray(new JValue(new BigInteger(0)))", span="719-719"];
m43_432 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_FractionWithZeroValue()", file="JObject.Async.cs", label="a.Validate(JsonSchema.Parse(schemaJson), (sender, args) => { validationEventArgs = args; })", span="723-723"];
m43_431 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_FractionWithZeroValue()", file="JObject.Async.cs", label="ValidationEventArgs validationEventArgs = null", span="721-721"];
m43_433 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_FractionWithZeroValue()", file="JObject.Async.cs", label="Assert.IsNull(validationEventArgs)", span="725-725"];
m43_434 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_FractionWithZeroValue()", file="JObject.Async.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_FractionWithZeroValue()", span="709-709"];
m43_694 [cluster="Newtonsoft.Json.Schema.JsonSchemaResolver.JsonSchemaResolver()", file="JObject.Async.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaResolver.JsonSchemaResolver()", span="56-56"];
m43_63 [cluster="Unk.IsTrue", file="JObject.Async.cs", label="Entry Unk.IsTrue", span=""];
m43_177 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDoesNotMatchPattern()", file="JObject.Async.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDoesNotMatchPattern()", span="312-312"];
m43_178 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDoesNotMatchPattern()", file="JObject.Async.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''string'''',\r\n  ''''pattern'''':''''foo''''\r\n}''", span="314-317"];
m43_179 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDoesNotMatchPattern()", file="JObject.Async.cs", label="string json = '''The quick brown fox jumps over the lazy dog.'''", span="319-319"];
m43_183 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDoesNotMatchPattern()", file="JObject.Async.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="325-325"];
m43_180 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDoesNotMatchPattern()", file="JObject.Async.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="321-321"];
m43_181 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDoesNotMatchPattern()", file="JObject.Async.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="323-323"];
m43_182 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDoesNotMatchPattern()", file="JObject.Async.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="324-324"];
m43_184 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDoesNotMatchPattern()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="327-327"];
m43_185 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDoesNotMatchPattern()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="328-328"];
m43_186 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDoesNotMatchPattern()", file="JObject.Async.cs", label="Assert.AreEqual(''String 'The quick brown fox jumps over the lazy dog.' does not match regex pattern 'foo'. Line 1, position 46.'', validationEventArgs.Message)", span="329-329"];
m43_187 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDoesNotMatchPattern()", file="JObject.Async.cs", label="Assert.AreEqual('''', validationEventArgs.Path)", span="330-330"];
m43_188 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDoesNotMatchPattern()", file="JObject.Async.cs", label="Assert.IsNotNull(validationEventArgs)", span="332-332"];
m43_189 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDoesNotMatchPattern()", file="JObject.Async.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDoesNotMatchPattern()", span="312-312"];
m43_956 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JObject.Async.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="445-445"];
m43_937 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimal()", file="JObject.Async.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsDecimal()", span="429-429"];
m43_8 [cluster="Newtonsoft.Json.JsonValidatingReader.JsonValidatingReader(Newtonsoft.Json.JsonReader)", file="JObject.Async.cs", label="Entry Newtonsoft.Json.JsonValidatingReader.JsonValidatingReader(Newtonsoft.Json.JsonReader)", span="297-297"];
m43_65 [cluster="Unk.IsFalse", file="JObject.Async.cs", label="Entry Unk.IsFalse", span=""];
m43_320 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatIsNotInEnum()", file="JObject.Async.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatIsNotInEnum()", span="532-532"];
m43_321 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatIsNotInEnum()", file="JObject.Async.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''array'''',\r\n  ''''items'''':{\r\n    ''''type'''':''''number'''',\r\n    ''''enum'''':[1.1,2.2]\r\n  },\r\n  ''''maxItems'''':3\r\n}''", span="534-541"];
m43_322 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatIsNotInEnum()", file="JObject.Async.cs", label="string json = ''[1.1,2.2,3.0]''", span="543-543"];
m43_326 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatIsNotInEnum()", file="JObject.Async.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="549-549"];
m43_323 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatIsNotInEnum()", file="JObject.Async.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="545-545"];
m43_324 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatIsNotInEnum()", file="JObject.Async.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="547-547"];
m43_325 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatIsNotInEnum()", file="JObject.Async.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="548-548"];
m43_327 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatIsNotInEnum()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="551-551"];
m43_328 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatIsNotInEnum()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="552-552"];
m43_329 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatIsNotInEnum()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="554-554"];
m43_330 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatIsNotInEnum()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="555-555"];
m43_331 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatIsNotInEnum()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="557-557"];
m43_332 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatIsNotInEnum()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="558-558"];
m43_334 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatIsNotInEnum()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="561-561"];
m43_335 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatIsNotInEnum()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="562-562"];
m43_338 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatIsNotInEnum()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="566-566"];
m43_339 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatIsNotInEnum()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="567-567"];
m43_333 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatIsNotInEnum()", file="JObject.Async.cs", label="Assert.AreEqual(null, validationEventArgs)", span="559-559"];
m43_336 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatIsNotInEnum()", file="JObject.Async.cs", label="Assert.AreEqual(@''Value 3.0 is not defined in enum. Line 1, position 12.'', validationEventArgs.Message)", span="563-563"];
m43_337 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatIsNotInEnum()", file="JObject.Async.cs", label="Assert.AreEqual(''[2]'', validationEventArgs.Path)", span="564-564"];
m43_340 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatIsNotInEnum()", file="JObject.Async.cs", label="Assert.IsNotNull(validationEventArgs)", span="569-569"];
m43_341 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatIsNotInEnum()", file="JObject.Async.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatIsNotInEnum()", span="532-532"];
m43_235 [cluster="BigInteger.cstr", file="JObject.Async.cs", label="Entry BigInteger.cstr", span=""];
m43_685 [cluster="System.Collections.Generic.List<T>.Add(T)", file="JObject.Async.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m43_500 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountGreaterThanMaximumItems()", file="JObject.Async.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountGreaterThanMaximumItems()", span="832-832"];
m43_501 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountGreaterThanMaximumItems()", file="JObject.Async.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''array'''',\r\n  ''''minItems'''':2,\r\n  ''''maxItems'''':3\r\n}''", span="834-838"];
m43_502 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountGreaterThanMaximumItems()", file="JObject.Async.cs", label="string json = ''[null,null,null,null]''", span="840-840"];
m43_506 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountGreaterThanMaximumItems()", file="JObject.Async.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="846-846"];
m43_503 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountGreaterThanMaximumItems()", file="JObject.Async.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="842-842"];
m43_504 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountGreaterThanMaximumItems()", file="JObject.Async.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="844-844"];
m43_505 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountGreaterThanMaximumItems()", file="JObject.Async.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="845-845"];
m43_507 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountGreaterThanMaximumItems()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="848-848"];
m43_508 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountGreaterThanMaximumItems()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="849-849"];
m43_509 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountGreaterThanMaximumItems()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="851-851"];
m43_510 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountGreaterThanMaximumItems()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="852-852"];
m43_511 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountGreaterThanMaximumItems()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="853-853"];
m43_512 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountGreaterThanMaximumItems()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="854-854"];
m43_513 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountGreaterThanMaximumItems()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="855-855"];
m43_514 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountGreaterThanMaximumItems()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="856-856"];
m43_515 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountGreaterThanMaximumItems()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="857-857"];
m43_516 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountGreaterThanMaximumItems()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="858-858"];
m43_517 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountGreaterThanMaximumItems()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="860-860"];
m43_518 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountGreaterThanMaximumItems()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="861-861"];
m43_519 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountGreaterThanMaximumItems()", file="JObject.Async.cs", label="Assert.AreEqual(''Array item count 4 exceeds maximum count of 3. Line 1, position 21.'', validationEventArgs.Message)", span="862-862"];
m43_520 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountGreaterThanMaximumItems()", file="JObject.Async.cs", label="Assert.IsNotNull(validationEventArgs)", span="864-864"];
m43_521 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountGreaterThanMaximumItems()", file="JObject.Async.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountGreaterThanMaximumItems()", span="832-832"];
m43_782 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="JObject.Async.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", span="1278-1278"];
m43_783 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="JObject.Async.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''object'''',\r\n  ''''patternProperties'''': {\r\n     ''''hi'''': {''''type'''':''''string''''},\r\n     ''''ho'''': {''''type'''':''''string''''}\r\n  },\r\n  ''''additionalProperties'''': false\r\n}''", span="1280-1287"];
m43_784 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="JObject.Async.cs", label="string json = @''{\r\n  ''''hi'''': ''''A string!'''',\r\n  ''''hide'''': ''''A string!'''',\r\n  ''''ho'''': 1,\r\n  ''''hey'''': ''''A string!''''\r\n}''", span="1289-1294"];
m43_788 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="JObject.Async.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="1300-1300"];
m43_785 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="JObject.Async.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="1296-1296"];
m43_786 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="JObject.Async.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="1298-1298"];
m43_787 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="JObject.Async.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="1299-1299"];
m43_789 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="1302-1302"];
m43_790 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1303-1303"];
m43_791 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="1305-1305"];
m43_792 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1306-1306"];
m43_794 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="1309-1309"];
m43_795 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1310-1310"];
m43_796 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="1312-1312"];
m43_797 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1313-1313"];
m43_799 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="1316-1316"];
m43_800 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1317-1317"];
m43_801 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="1319-1319"];
m43_802 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1320-1320"];
m43_804 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="1323-1323"];
m43_805 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1324-1324"];
m43_807 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="1327-1327"];
m43_808 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1328-1328"];
m43_810 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="1331-1331"];
m43_811 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1332-1332"];
m43_812 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="1334-1334"];
m43_813 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1335-1335"];
m43_814 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="JObject.Async.cs", label="Assert.IsFalse(reader.Read())", span="1337-1337"];
m43_793 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="JObject.Async.cs", label="Assert.AreEqual(null, validationEventArgs)", span="1307-1307"];
m43_798 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="JObject.Async.cs", label="Assert.AreEqual(null, validationEventArgs)", span="1314-1314"];
m43_803 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="JObject.Async.cs", label="Assert.AreEqual(null, validationEventArgs)", span="1321-1321"];
m43_806 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="JObject.Async.cs", label="Assert.AreEqual(''Invalid type. Expected String but got Integer. Line 4, position 9.'', validationEventArgs.Message)", span="1325-1325"];
m43_809 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="JObject.Async.cs", label="Assert.AreEqual(''Property 'hey' has not been defined and the schema does not allow additional properties. Line 5, position 8.'', validationEventArgs.Message)", span="1329-1329"];
m43_815 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="JObject.Async.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", span="1278-1278"];
m43_64 [cluster="object.ToString()", file="JObject.Async.cs", label="Entry object.ToString()", span="0-0"];
m43_209 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue_BigInteger()", file="JObject.Async.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue_BigInteger()", span="361-361"];
m43_210 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue_BigInteger()", file="JObject.Async.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''integer'''',\r\n  ''''maximum'''':5\r\n}''", span="363-366"];
m43_211 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue_BigInteger()", file="JObject.Async.cs", label="string json = ''99999999999999999999999999999999999999999999999999999999999999999999''", span="368-368"];
m43_215 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue_BigInteger()", file="JObject.Async.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="374-374"];
m43_212 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue_BigInteger()", file="JObject.Async.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="370-370"];
m43_213 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue_BigInteger()", file="JObject.Async.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="372-372"];
m43_214 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue_BigInteger()", file="JObject.Async.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="373-373"];
m43_216 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue_BigInteger()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="376-376"];
m43_217 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue_BigInteger()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="377-377"];
m43_218 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue_BigInteger()", file="JObject.Async.cs", label="Assert.AreEqual(''Integer 99999999999999999999999999999999999999999999999999999999999999999999 exceeds maximum value of 5. Line 1, position 68.'', validationEventArgs.Message)", span="378-378"];
m43_219 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue_BigInteger()", file="JObject.Async.cs", label="Assert.AreEqual('''', validationEventArgs.Path)", span="379-379"];
m43_220 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue_BigInteger()", file="JObject.Async.cs", label="Assert.IsNotNull(validationEventArgs)", span="381-381"];
m43_221 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue_BigInteger()", file="JObject.Async.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue_BigInteger()", span="361-361"];
m43_236 [cluster="Newtonsoft.Json.Linq.JToken.Validate(Newtonsoft.Json.Schema.JsonSchema, Newtonsoft.Json.Schema.ValidationEventHandler)", file="JObject.Async.cs", label="Entry Newtonsoft.Json.Linq.JToken.Validate(Newtonsoft.Json.Schema.JsonSchema, Newtonsoft.Json.Schema.ValidationEventHandler)", span="117-117"];
m43_290 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatGreaterThanMaximumValue()", file="JObject.Async.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatGreaterThanMaximumValue()", span="486-486"];
m43_291 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatGreaterThanMaximumValue()", file="JObject.Async.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''number'''',\r\n  ''''maximum'''':5\r\n}''", span="488-491"];
m43_292 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatGreaterThanMaximumValue()", file="JObject.Async.cs", label="string json = ''10.0''", span="493-493"];
m43_296 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatGreaterThanMaximumValue()", file="JObject.Async.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="499-499"];
m43_293 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatGreaterThanMaximumValue()", file="JObject.Async.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="495-495"];
m43_294 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatGreaterThanMaximumValue()", file="JObject.Async.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="497-497"];
m43_295 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatGreaterThanMaximumValue()", file="JObject.Async.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="498-498"];
m43_297 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatGreaterThanMaximumValue()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="501-501"];
m43_298 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatGreaterThanMaximumValue()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="502-502"];
m43_299 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatGreaterThanMaximumValue()", file="JObject.Async.cs", label="Assert.AreEqual(''Float 10.0 exceeds maximum value of 5. Line 1, position 4.'', validationEventArgs.Message)", span="503-503"];
m43_300 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatGreaterThanMaximumValue()", file="JObject.Async.cs", label="Assert.IsNotNull(validationEventArgs)", span="505-505"];
m43_301 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatGreaterThanMaximumValue()", file="JObject.Async.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatGreaterThanMaximumValue()", span="486-486"];
m43_819 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JObject.Async.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", span="1341-1341"];
m43_820 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JObject.Async.cs", label="string first = @''{\r\n  ''''id'''':''''first'''',\r\n  ''''type'''':''''object'''',\r\n  ''''properties'''':\r\n  {\r\n    ''''firstproperty'''':{''''type'''':''''string''''},\r\n    ''''secondproperty'''':{''''type'''':''''string'''',''''maxLength'''':10},\r\n    ''''thirdproperty'''':{\r\n      ''''type'''':''''object'''',\r\n      ''''properties'''':\r\n      {\r\n        ''''thirdproperty_firstproperty'''':{''''type'''':''''string'''',''''maxLength'''':10,''''minLength'''':7}\r\n      }\r\n    }\r\n  },\r\n  ''''additionalProperties'''':{}\r\n}''", span="1343-1359"];
m43_821 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JObject.Async.cs", label="string second = @''{\r\n  ''''id'''':''''second'''',\r\n  ''''type'''':''''object'''',\r\n  ''''extends'''':{''''$ref'''':''''first''''},\r\n  ''''properties'''':\r\n  {\r\n    ''''secondproperty'''':{''''type'''':''''any''''},\r\n    ''''thirdproperty'''':{\r\n      ''''extends'''':{\r\n        ''''properties'''':\r\n        {\r\n          ''''thirdproperty_firstproperty'''':{''''maxLength'''':9,''''minLength'''':6,''''pattern'''':''''hi2u''''}\r\n        },\r\n        ''''additionalProperties'''':{''''maxLength'''':9,''''minLength'''':6,''''enum'''':[''''one'''',''''two'''']}\r\n      },\r\n      ''''type'''':''''object'''',\r\n      ''''properties'''':\r\n      {\r\n        ''''thirdproperty_firstproperty'''':{''''pattern'''':''''hi''''}\r\n      },\r\n      ''''additionalProperties'''':{''''type'''':''''string'''',''''enum'''':[''''two'''',''''three'''']}\r\n    },\r\n    ''''fourthproperty'''':{''''type'''':''''string''''}\r\n  },\r\n  ''''additionalProperties'''':false\r\n}''", span="1361-1386"];
m43_823 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JObject.Async.cs", label="JsonSchema firstSchema = JsonSchema.Parse(first, resolver)", span="1389-1389"];
m43_822 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JObject.Async.cs", label="JsonSchemaResolver resolver = new JsonSchemaResolver()", span="1388-1388"];
m43_824 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JObject.Async.cs", label="JsonSchema secondSchema = JsonSchema.Parse(second, resolver)", span="1390-1390"];
m43_825 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JObject.Async.cs", label="JsonSchemaModelBuilder modelBuilder = new JsonSchemaModelBuilder()", span="1392-1392"];
m43_831 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JObject.Async.cs", label="reader.Schema = secondSchema", span="1412-1412"];
m43_826 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JObject.Async.cs", label="string json = @''{\r\n  'firstproperty':'blahblahblahblahblahblah',\r\n  'secondproperty':'secasecasecasecaseca',\r\n  'thirdproperty':{\r\n    'thirdproperty_firstproperty':'aaa',\r\n    'additional':'three'\r\n  }\r\n}''", span="1394-1401"];
m43_827 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JObject.Async.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="1403-1403"];
m43_829 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JObject.Async.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="1406-1406"];
m43_828 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JObject.Async.cs", label="List<string> errors = new List<string>()", span="1404-1404"];
m43_830 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JObject.Async.cs", label="reader.ValidationEventHandler += (sender, args) =>\r\n            {\r\n                validationEventArgs = args;\r\n                errors.Add(validationEventArgs.Path + '' - '' + validationEventArgs.Message);\r\n            }", span="1407-1411"];
m43_847 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JObject.Async.cs", label="Assert.AreEqual(1, errors.Count)", span="1433-1433"];
m43_848 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JObject.Async.cs", label="Assert.AreEqual(''secondproperty - String 'secasecasecasecaseca' exceeds maximum length of 10. Line 3, position 41.'', errors[0])", span="1434-1434"];
m43_852 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JObject.Async.cs", label="Assert.AreEqual(1, errors.Count)", span="1439-1439"];
m43_855 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JObject.Async.cs", label="Assert.AreEqual(1, errors.Count)", span="1443-1443"];
m43_859 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JObject.Async.cs", label="Assert.AreEqual(1, errors.Count)", span="1448-1448"];
m43_863 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JObject.Async.cs", label="Assert.AreEqual(4, errors.Count)", span="1453-1453"];
m43_864 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JObject.Async.cs", label="Assert.AreEqual(''thirdproperty.thirdproperty_firstproperty - String 'aaa' is less than minimum length of 7. Line 5, position 39.'', errors[1])", span="1454-1454"];
m43_865 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JObject.Async.cs", label="Assert.AreEqual(''thirdproperty.thirdproperty_firstproperty - String 'aaa' does not match regex pattern 'hi'. Line 5, position 39.'', errors[2])", span="1455-1455"];
m43_866 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JObject.Async.cs", label="Assert.AreEqual(''thirdproperty.thirdproperty_firstproperty - String 'aaa' does not match regex pattern 'hi2u'. Line 5, position 39.'', errors[3])", span="1456-1456"];
m43_870 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JObject.Async.cs", label="Assert.AreEqual(4, errors.Count)", span="1461-1461"];
m43_874 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JObject.Async.cs", label="Assert.AreEqual(5, errors.Count)", span="1466-1466"];
m43_875 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JObject.Async.cs", label="Assert.AreEqual(''thirdproperty.additional - String 'three' is less than minimum length of 6. Line 6, position 24.'', errors[4])", span="1467-1467"];
m43_832 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="1414-1414"];
m43_833 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1415-1415"];
m43_834 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="1417-1417"];
m43_835 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1418-1418"];
m43_836 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JObject.Async.cs", label="Assert.AreEqual(''firstproperty'', reader.Value.ToString())", span="1419-1419"];
m43_838 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="1422-1422"];
m43_839 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1423-1423"];
m43_840 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JObject.Async.cs", label="Assert.AreEqual(''blahblahblahblahblahblah'', reader.Value.ToString())", span="1424-1424"];
m43_841 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="1426-1426"];
m43_842 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1427-1427"];
m43_843 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JObject.Async.cs", label="Assert.AreEqual(''secondproperty'', reader.Value.ToString())", span="1428-1428"];
m43_844 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="1430-1430"];
m43_845 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1431-1431"];
m43_846 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JObject.Async.cs", label="Assert.AreEqual(''secasecasecasecaseca'', reader.Value.ToString())", span="1432-1432"];
m43_849 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="1436-1436"];
m43_850 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1437-1437"];
m43_851 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JObject.Async.cs", label="Assert.AreEqual(''thirdproperty'', reader.Value.ToString())", span="1438-1438"];
m43_853 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="1441-1441"];
m43_854 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1442-1442"];
m43_856 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="1445-1445"];
m43_857 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1446-1446"];
m43_858 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JObject.Async.cs", label="Assert.AreEqual(''thirdproperty_firstproperty'', reader.Value.ToString())", span="1447-1447"];
m43_860 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="1450-1450"];
m43_861 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1451-1451"];
m43_862 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JObject.Async.cs", label="Assert.AreEqual(''aaa'', reader.Value.ToString())", span="1452-1452"];
m43_867 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="1458-1458"];
m43_868 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1459-1459"];
m43_869 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JObject.Async.cs", label="Assert.AreEqual(''additional'', reader.Value.ToString())", span="1460-1460"];
m43_871 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="1463-1463"];
m43_872 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1464-1464"];
m43_873 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JObject.Async.cs", label="Assert.AreEqual(''three'', reader.Value.ToString())", span="1465-1465"];
m43_876 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="1469-1469"];
m43_877 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1470-1470"];
m43_878 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="1472-1472"];
m43_879 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1473-1473"];
m43_880 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JObject.Async.cs", label="Assert.IsFalse(reader.Read())", span="1475-1475"];
m43_837 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JObject.Async.cs", label="Assert.AreEqual(null, validationEventArgs)", span="1420-1420"];
m43_881 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JObject.Async.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", span="1341-1341"];
m43_958 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArray()", file="JObject.Async.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArray()", span="1684-1684"];
m43_959 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArray()", file="JObject.Async.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''array'''',\r\n  ''''items'''':{\r\n    ''''type'''':''''integer''''\r\n  },\r\n  ''''maxItems'''':1\r\n}''", span="1686-1692"];
m43_960 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArray()", file="JObject.Async.cs", label="string json = ''[1,2]''", span="1694-1694"];
m43_964 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArray()", file="JObject.Async.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="1700-1700"];
m43_961 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArray()", file="JObject.Async.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="1696-1696"];
m43_962 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArray()", file="JObject.Async.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="1698-1698"];
m43_963 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArray()", file="JObject.Async.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="1699-1699"];
m43_965 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArray()", file="JObject.Async.cs", label="reader.Read()", span="1702-1702"];
m43_966 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArray()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="1703-1703"];
m43_967 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArray()", file="JObject.Async.cs", label="reader.ReadAsInt32()", span="1705-1705"];
m43_968 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArray()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1706-1706"];
m43_970 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArray()", file="JObject.Async.cs", label="reader.ReadAsInt32()", span="1709-1709"];
m43_971 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArray()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1710-1710"];
m43_973 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArray()", file="JObject.Async.cs", label="reader.ReadAsInt32()", span="1713-1713"];
m43_974 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArray()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="1714-1714"];
m43_969 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArray()", file="JObject.Async.cs", label="Assert.AreEqual(null, validationEventArgs)", span="1707-1707"];
m43_972 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArray()", file="JObject.Async.cs", label="Assert.AreEqual(null, validationEventArgs)", span="1711-1711"];
m43_975 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArray()", file="JObject.Async.cs", label="Assert.AreEqual(''Array item count 2 exceeds maximum count of 1. Line 1, position 5.'', validationEventArgs.Message)", span="1715-1715"];
m43_976 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArray()", file="JObject.Async.cs", label="Assert.AreEqual('''', validationEventArgs.Path)", span="1716-1716"];
m43_977 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArray()", file="JObject.Async.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArray()", span="1684-1684"];
m43_606 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingNonRequiredProperties()", file="JObject.Async.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingNonRequiredProperties()", span="1001-1001"];
m43_607 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingNonRequiredProperties()", file="JObject.Async.cs", label="string schemaJson = @''{\r\n  ''''description'''':''''A person'''',\r\n  ''''type'''':''''object'''',\r\n  ''''properties'''':\r\n  {\r\n    ''''name'''':{''''type'''':''''string'''',''''required'''':true},\r\n    ''''hobbies'''':{''''type'''':''''string'''',''''required'''':false},\r\n    ''''age'''':{''''type'''':''''integer''''}\r\n  }\r\n}''", span="1003-1012"];
m43_608 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingNonRequiredProperties()", file="JObject.Async.cs", label="string json = ''{'name':'James'}''", span="1014-1014"];
m43_612 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingNonRequiredProperties()", file="JObject.Async.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="1020-1020"];
m43_609 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingNonRequiredProperties()", file="JObject.Async.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="1016-1016"];
m43_610 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingNonRequiredProperties()", file="JObject.Async.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="1018-1018"];
m43_611 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingNonRequiredProperties()", file="JObject.Async.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="1019-1019"];
m43_613 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingNonRequiredProperties()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="1022-1022"];
m43_614 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingNonRequiredProperties()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1023-1023"];
m43_615 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingNonRequiredProperties()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="1025-1025"];
m43_616 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingNonRequiredProperties()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1026-1026"];
m43_617 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingNonRequiredProperties()", file="JObject.Async.cs", label="Assert.AreEqual(''name'', reader.Value.ToString())", span="1027-1027"];
m43_618 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingNonRequiredProperties()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="1029-1029"];
m43_619 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingNonRequiredProperties()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1030-1030"];
m43_620 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingNonRequiredProperties()", file="JObject.Async.cs", label="Assert.AreEqual(''James'', reader.Value.ToString())", span="1031-1031"];
m43_622 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingNonRequiredProperties()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="1034-1034"];
m43_623 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingNonRequiredProperties()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1035-1035"];
m43_621 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingNonRequiredProperties()", file="JObject.Async.cs", label="Assert.IsNull(validationEventArgs)", span="1032-1032"];
m43_624 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingNonRequiredProperties()", file="JObject.Async.cs", label="Assert.IsNull(validationEventArgs)", span="1037-1037"];
m43_625 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingNonRequiredProperties()", file="JObject.Async.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingNonRequiredProperties()", span="1001-1001"];
m43_439 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntValidForNumber()", file="JObject.Async.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntValidForNumber()", span="730-730"];
m43_440 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntValidForNumber()", file="JObject.Async.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''array'''',\r\n  ''''items'''':{\r\n    ''''type'''':''''number''''\r\n  }\r\n}''", span="732-737"];
m43_441 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntValidForNumber()", file="JObject.Async.cs", label="string json = ''[1]''", span="739-739"];
m43_445 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntValidForNumber()", file="JObject.Async.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="745-745"];
m43_442 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntValidForNumber()", file="JObject.Async.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="741-741"];
m43_443 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntValidForNumber()", file="JObject.Async.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="743-743"];
m43_444 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntValidForNumber()", file="JObject.Async.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="744-744"];
m43_446 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntValidForNumber()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="747-747"];
m43_447 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntValidForNumber()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="748-748"];
m43_448 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntValidForNumber()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="750-750"];
m43_449 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntValidForNumber()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="751-751"];
m43_450 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntValidForNumber()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="753-753"];
m43_451 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntValidForNumber()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="754-754"];
m43_452 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntValidForNumber()", file="JObject.Async.cs", label="Assert.IsNull(validationEventArgs)", span="756-756"];
m43_453 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntValidForNumber()", file="JObject.Async.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntValidForNumber()", span="730-730"];
m43_912 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JObject.Async.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsBytes()", span="423-423"];
m43_9 [cluster="Unk.AreEqual", file="JObject.Async.cs", label="Entry Unk.AreEqual", span=""];
m43_70 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JObject.Async.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", span="150-150"];
m43_71 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JObject.Async.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''array''''\r\n}''", span="152-154"];
m43_72 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JObject.Async.cs", label="string json = ''['pie','cake',['nested1','nested2'],{'nestedproperty1':1.1,'nestedproperty2':[null]}]''", span="156-156"];
m43_76 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JObject.Async.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="162-162"];
m43_73 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JObject.Async.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="158-158"];
m43_74 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JObject.Async.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="160-160"];
m43_75 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JObject.Async.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="161-161"];
m43_77 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="164-164"];
m43_78 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="165-165"];
m43_79 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="167-167"];
m43_80 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="168-168"];
m43_81 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JObject.Async.cs", label="Assert.AreEqual(''pie'', reader.Value.ToString())", span="169-169"];
m43_82 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="171-171"];
m43_83 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="172-172"];
m43_84 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JObject.Async.cs", label="Assert.AreEqual(''cake'', reader.Value.ToString())", span="173-173"];
m43_85 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="175-175"];
m43_86 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="176-176"];
m43_87 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="178-178"];
m43_88 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="179-179"];
m43_89 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JObject.Async.cs", label="Assert.AreEqual(''nested1'', reader.Value.ToString())", span="180-180"];
m43_90 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="182-182"];
m43_91 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="183-183"];
m43_92 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JObject.Async.cs", label="Assert.AreEqual(''nested2'', reader.Value.ToString())", span="184-184"];
m43_93 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="186-186"];
m43_94 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="187-187"];
m43_95 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="189-189"];
m43_96 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="190-190"];
m43_97 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="192-192"];
m43_98 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="193-193"];
m43_99 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JObject.Async.cs", label="Assert.AreEqual(''nestedproperty1'', reader.Value.ToString())", span="194-194"];
m43_100 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="196-196"];
m43_101 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="197-197"];
m43_102 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JObject.Async.cs", label="Assert.AreEqual(1.1, reader.Value)", span="198-198"];
m43_103 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="200-200"];
m43_104 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="201-201"];
m43_105 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JObject.Async.cs", label="Assert.AreEqual(''nestedproperty2'', reader.Value.ToString())", span="202-202"];
m43_106 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="204-204"];
m43_107 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="205-205"];
m43_108 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="207-207"];
m43_109 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="208-208"];
m43_110 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="210-210"];
m43_111 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="211-211"];
m43_112 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="213-213"];
m43_113 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="214-214"];
m43_114 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="216-216"];
m43_115 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="217-217"];
m43_116 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JObject.Async.cs", label="Assert.IsNull(validationEventArgs)", span="219-219"];
m43_117 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JObject.Async.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", span="150-150"];
m43_408 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Fraction()", file="JObject.Async.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Fraction()", span="677-677"];
m43_409 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Fraction()", file="JObject.Async.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''array'''',\r\n  ''''items'''':{\r\n    ''''type'''':''''number'''',\r\n    ''''divisibleBy'''':1.1\r\n  }\r\n}''", span="679-685"];
m43_410 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Fraction()", file="JObject.Async.cs", label="string json = ''[999999999999999999999999999999999999999999999999999999999]''", span="687-687"];
m43_414 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Fraction()", file="JObject.Async.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="693-693"];
m43_411 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Fraction()", file="JObject.Async.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="689-689"];
m43_412 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Fraction()", file="JObject.Async.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="691-691"];
m43_413 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Fraction()", file="JObject.Async.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="692-692"];
m43_415 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Fraction()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="695-695"];
m43_416 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Fraction()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="696-696"];
m43_417 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Fraction()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="698-698"];
m43_418 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Fraction()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="699-699"];
m43_422 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Fraction()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="704-704"];
m43_423 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Fraction()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="705-705"];
m43_419 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Fraction()", file="JObject.Async.cs", label="Assert.IsNotNull(validationEventArgs)", span="700-700"];
m43_420 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Fraction()", file="JObject.Async.cs", label="Assert.AreEqual(@''Integer 999999999999999999999999999999999999999999999999999999999 is not evenly divisible by 1.1. Line 1, position 58.'', validationEventArgs.Message)", span="701-701"];
m43_421 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Fraction()", file="JObject.Async.cs", label="Assert.AreEqual(''[0]'', validationEventArgs.Path)", span="702-702"];
m43_424 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Fraction()", file="JObject.Async.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Fraction()", span="677-677"];
m43_225 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerLessThanMaximumValue_BigInteger()", file="JObject.Async.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerLessThanMaximumValue_BigInteger()", span="385-385"];
m43_226 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerLessThanMaximumValue_BigInteger()", file="JObject.Async.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''integer'''',\r\n  ''''minimum'''':5\r\n}''", span="387-390"];
m43_227 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerLessThanMaximumValue_BigInteger()", file="JObject.Async.cs", label="JValue v = new JValue(new BigInteger(1))", span="392-392"];
m43_229 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerLessThanMaximumValue_BigInteger()", file="JObject.Async.cs", label="v.Validate(JsonSchema.Parse(schemaJson), (sender, args) => { validationEventArgs = args; })", span="396-396"];
m43_228 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerLessThanMaximumValue_BigInteger()", file="JObject.Async.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="394-394"];
m43_230 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerLessThanMaximumValue_BigInteger()", file="JObject.Async.cs", label="Assert.IsNotNull(validationEventArgs)", span="398-398"];
m43_231 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerLessThanMaximumValue_BigInteger()", file="JObject.Async.cs", label="Assert.AreEqual(''Integer 1 is less than minimum value of 5.'', validationEventArgs.Message)", span="399-399"];
m43_232 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerLessThanMaximumValue_BigInteger()", file="JObject.Async.cs", label="Assert.AreEqual('''', validationEventArgs.Path)", span="400-400"];
m43_233 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerLessThanMaximumValue_BigInteger()", file="JObject.Async.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerLessThanMaximumValue_BigInteger()", span="385-385"];
m43_193 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue()", file="JObject.Async.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue()", span="336-336"];
m43_194 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue()", file="JObject.Async.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''integer'''',\r\n  ''''maximum'''':5\r\n}''", span="338-341"];
m43_195 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue()", file="JObject.Async.cs", label="string json = ''10''", span="343-343"];
m43_199 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue()", file="JObject.Async.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="349-349"];
m43_196 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue()", file="JObject.Async.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="345-345"];
m43_197 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue()", file="JObject.Async.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="347-347"];
m43_198 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue()", file="JObject.Async.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="348-348"];
m43_200 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="351-351"];
m43_201 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="352-352"];
m43_202 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue()", file="JObject.Async.cs", label="Assert.AreEqual(''Integer 10 exceeds maximum value of 5. Line 1, position 2.'', validationEventArgs.Message)", span="353-353"];
m43_203 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue()", file="JObject.Async.cs", label="Assert.AreEqual('''', validationEventArgs.Path)", span="354-354"];
m43_204 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue()", file="JObject.Async.cs", label="Assert.IsNotNull(validationEventArgs)", span="356-356"];
m43_205 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue()", file="JObject.Async.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue()", span="336-336"];
m43_581 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingRequiredProperties()", file="JObject.Async.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingRequiredProperties()", span="959-959"];
m43_582 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingRequiredProperties()", file="JObject.Async.cs", label="string schemaJson = @''{\r\n  ''''description'''':''''A person'''',\r\n  ''''type'''':''''object'''',\r\n  ''''properties'''':\r\n  {\r\n    ''''name'''':{''''type'''':''''string''''},\r\n    ''''hobbies'''':{''''type'''':''''string'''',''''required'''':true},\r\n    ''''age'''':{''''type'''':''''integer'''',''''required'''':true}\r\n  }\r\n}''", span="961-970"];
m43_583 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingRequiredProperties()", file="JObject.Async.cs", label="string json = ''{'name':'James'}''", span="972-972"];
m43_587 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingRequiredProperties()", file="JObject.Async.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="978-978"];
m43_584 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingRequiredProperties()", file="JObject.Async.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="974-974"];
m43_585 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingRequiredProperties()", file="JObject.Async.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="976-976"];
m43_586 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingRequiredProperties()", file="JObject.Async.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="977-977"];
m43_588 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingRequiredProperties()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="980-980"];
m43_589 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingRequiredProperties()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="981-981"];
m43_590 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingRequiredProperties()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="983-983"];
m43_591 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingRequiredProperties()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="984-984"];
m43_592 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingRequiredProperties()", file="JObject.Async.cs", label="Assert.AreEqual(''name'', reader.Value.ToString())", span="985-985"];
m43_593 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingRequiredProperties()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="987-987"];
m43_594 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingRequiredProperties()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="988-988"];
m43_595 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingRequiredProperties()", file="JObject.Async.cs", label="Assert.AreEqual(''James'', reader.Value.ToString())", span="989-989"];
m43_597 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingRequiredProperties()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="992-992"];
m43_598 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingRequiredProperties()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="993-993"];
m43_596 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingRequiredProperties()", file="JObject.Async.cs", label="Assert.AreEqual(null, validationEventArgs)", span="990-990"];
m43_599 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingRequiredProperties()", file="JObject.Async.cs", label="Assert.AreEqual(''Required properties are missing from object: hobbies, age. Line 1, position 16.'', validationEventArgs.Message)", span="994-994"];
m43_600 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingRequiredProperties()", file="JObject.Async.cs", label="Assert.AreEqual('''', validationEventArgs.Path)", span="995-995"];
m43_601 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingRequiredProperties()", file="JObject.Async.cs", label="Assert.IsNotNull(validationEventArgs)", span="997-997"];
m43_602 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingRequiredProperties()", file="JObject.Async.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingRequiredProperties()", span="959-959"];
m43_137 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringGreaterThanMaximumLength()", file="JObject.Async.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringGreaterThanMaximumLength()", span="247-247"];
m43_138 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringGreaterThanMaximumLength()", file="JObject.Async.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''string'''',\r\n  ''''minLength'''':5,\r\n  ''''maxLength'''':10\r\n}''", span="249-253"];
m43_139 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringGreaterThanMaximumLength()", file="JObject.Async.cs", label="string json = '''The quick brown fox jumps over the lazy dog.'''", span="255-255"];
m43_143 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringGreaterThanMaximumLength()", file="JObject.Async.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="261-261"];
m43_140 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringGreaterThanMaximumLength()", file="JObject.Async.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="257-257"];
m43_141 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringGreaterThanMaximumLength()", file="JObject.Async.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="259-259"];
m43_142 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringGreaterThanMaximumLength()", file="JObject.Async.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="260-260"];
m43_144 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringGreaterThanMaximumLength()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="263-263"];
m43_145 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringGreaterThanMaximumLength()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="264-264"];
m43_146 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringGreaterThanMaximumLength()", file="JObject.Async.cs", label="Assert.AreEqual(''String 'The quick brown fox jumps over the lazy dog.' exceeds maximum length of 10. Line 1, position 46.'', validationEventArgs.Message)", span="265-265"];
m43_147 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringGreaterThanMaximumLength()", file="JObject.Async.cs", label="Assert.IsNotNull(validationEventArgs)", span="267-267"];
m43_148 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringGreaterThanMaximumLength()", file="JObject.Async.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringGreaterThanMaximumLength()", span="247-247"];
m43_913 [cluster="Unk.AreEquivalent", file="JObject.Async.cs", label="Entry Unk.AreEquivalent", span=""];
m43_544 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.InvalidDataType()", file="JObject.Async.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.InvalidDataType()", span="898-898"];
m43_545 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.InvalidDataType()", file="JObject.Async.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''string'''',\r\n  ''''minItems'''':2,\r\n  ''''maxItems'''':3,\r\n  ''''items'''':{}\r\n}''", span="900-905"];
m43_546 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.InvalidDataType()", file="JObject.Async.cs", label="string json = ''[null,null,null,null]''", span="907-907"];
m43_550 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.InvalidDataType()", file="JObject.Async.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="913-913"];
m43_547 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.InvalidDataType()", file="JObject.Async.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="909-909"];
m43_548 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.InvalidDataType()", file="JObject.Async.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="911-911"];
m43_549 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.InvalidDataType()", file="JObject.Async.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="912-912"];
m43_551 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.InvalidDataType()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="915-915"];
m43_552 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.InvalidDataType()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="916-916"];
m43_553 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.InvalidDataType()", file="JObject.Async.cs", label="Assert.AreEqual(@''Invalid type. Expected String but got Array. Line 1, position 1.'', validationEventArgs.Message)", span="917-917"];
m43_554 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.InvalidDataType()", file="JObject.Async.cs", label="Assert.IsNotNull(validationEventArgs)", span="919-919"];
m43_555 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.InvalidDataType()", file="JObject.Async.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.InvalidDataType()", span="898-898"];
m43_234 [cluster="JValue.cstr", file="JObject.Async.cs", label="Entry JValue.cstr", span=""];
m43_133 [cluster="Unk.IsNotNull", file="JObject.Async.cs", label="Entry Unk.IsNotNull", span=""];
m43_921 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32Failure()", file="JObject.Async.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32Failure()", span="1625-1625"];
m43_922 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32Failure()", file="JObject.Async.cs", label="ExceptionAssert.Throws<JsonSchemaException>(() =>\r\n            {\r\n                JsonSchema s = new JsonSchemaGenerator().Generate(typeof(int));\r\n                s.Maximum = 2;\r\n\r\n                JsonReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(@''5'')))\r\n                {\r\n                    Schema = s\r\n                };\r\n                reader.ReadAsInt32();\r\n            }, ''Integer 5 exceeds maximum value of 2. Line 1, position 1.'')", span="1627-1637"];
m43_923 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32Failure()", file="JObject.Async.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32Failure()", span="1625-1625"];
m43_908 [cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.JsonSchemaGenerator()", file="JObject.Async.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaGenerator.JsonSchemaGenerator()", span="50-50"];
m43_957 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", file="JObject.Async.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", span="696-696"];
m43_240 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ThrowExceptionWhenNoValidationEventHandler()", file="JObject.Async.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.ThrowExceptionWhenNoValidationEventHandler()", span="405-405"];
m43_241 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ThrowExceptionWhenNoValidationEventHandler()", file="JObject.Async.cs", label="ExceptionAssert.Throws<JsonSchemaException>(() =>\r\n            {\r\n                string schemaJson = @''{\r\n  ''''type'''':''''integer'''',\r\n  ''''maximum'''':5\r\n}'';\r\n\r\n                JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(''10'')));\r\n                reader.Schema = JsonSchema.Parse(schemaJson);\r\n\r\n                Assert.IsTrue(reader.Read());\r\n            }, ''Integer 10 exceeds maximum value of 5. Line 1, position 2.'')", span="407-418"];
m43_242 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ThrowExceptionWhenNoValidationEventHandler()", file="JObject.Async.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.ThrowExceptionWhenNoValidationEventHandler()", span="405-405"];
m43_757 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NoAdditionalItems()", file="JObject.Async.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.NoAdditionalItems()", span="1240-1240"];
m43_758 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NoAdditionalItems()", file="JObject.Async.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''array'''',\r\n  ''''items'''': [{''''type'''':''''string''''},{''''type'''':''''integer''''}],\r\n  ''''additionalItems'''': false\r\n}''", span="1242-1246"];
m43_759 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NoAdditionalItems()", file="JObject.Async.cs", label="string json = @''[1, 'a', null]''", span="1248-1248"];
m43_763 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NoAdditionalItems()", file="JObject.Async.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="1254-1254"];
m43_760 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NoAdditionalItems()", file="JObject.Async.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="1250-1250"];
m43_761 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NoAdditionalItems()", file="JObject.Async.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="1252-1252"];
m43_762 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NoAdditionalItems()", file="JObject.Async.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="1253-1253"];
m43_764 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NoAdditionalItems()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="1256-1256"];
m43_765 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NoAdditionalItems()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="1257-1257"];
m43_766 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NoAdditionalItems()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="1259-1259"];
m43_767 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NoAdditionalItems()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1260-1260"];
m43_769 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NoAdditionalItems()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="1263-1263"];
m43_770 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NoAdditionalItems()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1264-1264"];
m43_772 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NoAdditionalItems()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="1267-1267"];
m43_773 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NoAdditionalItems()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="1268-1268"];
m43_775 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NoAdditionalItems()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="1271-1271"];
m43_776 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NoAdditionalItems()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="1272-1272"];
m43_777 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NoAdditionalItems()", file="JObject.Async.cs", label="Assert.IsFalse(reader.Read())", span="1274-1274"];
m43_768 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NoAdditionalItems()", file="JObject.Async.cs", label="Assert.AreEqual(''Invalid type. Expected String but got Integer. Line 1, position 2.'', validationEventArgs.Message)", span="1261-1261"];
m43_771 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NoAdditionalItems()", file="JObject.Async.cs", label="Assert.AreEqual(''Invalid type. Expected Integer but got String. Line 1, position 7.'', validationEventArgs.Message)", span="1265-1265"];
m43_774 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NoAdditionalItems()", file="JObject.Async.cs", label="Assert.AreEqual(''Index 3 has not been defined and the schema does not allow additional items. Line 1, position 13.'', validationEventArgs.Message)", span="1269-1269"];
m43_778 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NoAdditionalItems()", file="JObject.Async.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.NoAdditionalItems()", span="1240-1240"];
m43_388 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Failure()", file="JObject.Async.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Failure()", span="644-644"];
m43_389 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Failure()", file="JObject.Async.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''array'''',\r\n  ''''items'''':{\r\n    ''''type'''':''''number'''',\r\n    ''''divisibleBy'''':2\r\n  }\r\n}''", span="646-652"];
m43_390 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Failure()", file="JObject.Async.cs", label="string json = ''[999999999999999999999999999999999999999999999999999999999]''", span="654-654"];
m43_394 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Failure()", file="JObject.Async.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="660-660"];
m43_391 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Failure()", file="JObject.Async.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="656-656"];
m43_392 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Failure()", file="JObject.Async.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="658-658"];
m43_393 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Failure()", file="JObject.Async.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="659-659"];
m43_395 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Failure()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="662-662"];
m43_396 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Failure()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="663-663"];
m43_397 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Failure()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="665-665"];
m43_398 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Failure()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="666-666"];
m43_401 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Failure()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="670-670"];
m43_402 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Failure()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="671-671"];
m43_399 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Failure()", file="JObject.Async.cs", label="Assert.AreEqual(@''Integer 999999999999999999999999999999999999999999999999999999999 is not evenly divisible by 2. Line 1, position 58.'', validationEventArgs.Message)", span="667-667"];
m43_400 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Failure()", file="JObject.Async.cs", label="Assert.AreEqual(''[0]'', validationEventArgs.Path)", span="668-668"];
m43_403 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Failure()", file="JObject.Async.cs", label="Assert.IsNotNull(validationEventArgs)", span="673-673"];
m43_404 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Failure()", file="JObject.Async.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Failure()", span="644-644"];
m43_696 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JObject.Async.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", span="1161-1161"];
m43_697 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JObject.Async.cs", label="string json = ''{'firstproperty':'blah','secondproperty':'blah2','additional':'blah3','additional2':'blah4'}''", span="1163-1163"];
m43_698 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JObject.Async.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="1165-1165"];
m43_699 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JObject.Async.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="1167-1167"];
m43_700 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JObject.Async.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="1168-1168"];
m43_701 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JObject.Async.cs", label="reader.Schema = GetExtendedSchema()", span="1169-1169"];
m43_702 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="1171-1171"];
m43_703 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1172-1172"];
m43_704 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="1174-1174"];
m43_705 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1175-1175"];
m43_706 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JObject.Async.cs", label="Assert.AreEqual(''firstproperty'', reader.Value.ToString())", span="1176-1176"];
m43_708 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="1179-1179"];
m43_709 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1180-1180"];
m43_710 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JObject.Async.cs", label="Assert.AreEqual(''blah'', reader.Value.ToString())", span="1181-1181"];
m43_712 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="1184-1184"];
m43_713 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1185-1185"];
m43_714 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JObject.Async.cs", label="Assert.AreEqual(''secondproperty'', reader.Value.ToString())", span="1186-1186"];
m43_716 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="1189-1189"];
m43_717 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1190-1190"];
m43_718 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JObject.Async.cs", label="Assert.AreEqual(''blah2'', reader.Value.ToString())", span="1191-1191"];
m43_720 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="1194-1194"];
m43_721 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1195-1195"];
m43_722 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JObject.Async.cs", label="Assert.AreEqual(''additional'', reader.Value.ToString())", span="1196-1196"];
m43_724 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="1199-1199"];
m43_725 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1200-1200"];
m43_726 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JObject.Async.cs", label="Assert.AreEqual(''blah3'', reader.Value.ToString())", span="1201-1201"];
m43_727 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="1203-1203"];
m43_728 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1204-1204"];
m43_729 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JObject.Async.cs", label="Assert.AreEqual(''additional2'', reader.Value.ToString())", span="1205-1205"];
m43_731 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="1208-1208"];
m43_732 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1209-1209"];
m43_733 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JObject.Async.cs", label="Assert.AreEqual(''blah4'', reader.Value.ToString())", span="1210-1210"];
m43_734 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="1212-1212"];
m43_735 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1213-1213"];
m43_736 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JObject.Async.cs", label="Assert.IsFalse(reader.Read())", span="1215-1215"];
m43_707 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JObject.Async.cs", label="Assert.AreEqual(null, validationEventArgs)", span="1177-1177"];
m43_711 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JObject.Async.cs", label="Assert.AreEqual(null, validationEventArgs)", span="1182-1182"];
m43_715 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JObject.Async.cs", label="Assert.AreEqual(null, validationEventArgs)", span="1187-1187"];
m43_719 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JObject.Async.cs", label="Assert.AreEqual(null, validationEventArgs)", span="1192-1192"];
m43_723 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JObject.Async.cs", label="Assert.AreEqual(''Property 'additional' has not been defined and the schema does not allow additional properties. Line 1, position 62.'', validationEventArgs.Message)", span="1197-1197"];
m43_730 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JObject.Async.cs", label="Assert.AreEqual(''Property 'additional2' has not been defined and the schema does not allow additional properties. Line 1, position 84.'', validationEventArgs.Message)", span="1206-1206"];
m43_737 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JObject.Async.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", span="1161-1161"];
m43_887 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DuplicateErrorsTest()", file="JObject.Async.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.DuplicateErrorsTest()", span="1479-1479"];
m43_888 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DuplicateErrorsTest()", file="JObject.Async.cs", label="string schema = @''{\r\n  ''''id'''':''''ErrorDemo.Database'''',\r\n  ''''properties'''':{\r\n    ''''ErrorDemoDatabase'''':{\r\n      ''''type'''':''''object'''',\r\n      ''''required'''':true,\r\n      ''''properties'''':{\r\n        ''''URL'''':{\r\n          ''''type'''':''''string'''',\r\n          ''''required'''':true\r\n        },\r\n        ''''Version'''':{\r\n          ''''type'''':''''string'''',\r\n          ''''required'''':true\r\n        },\r\n        ''''Date'''':{\r\n          ''''type'''':''''string'''',\r\n          ''''format'''':''''date-time'''',\r\n          ''''required'''':true\r\n        },\r\n        ''''MACLevels'''':{\r\n          ''''type'''':''''object'''',\r\n          ''''required'''':true,\r\n          ''''properties'''':{\r\n            ''''MACLevel'''':{\r\n              ''''type'''':''''array'''',\r\n              ''''required'''':true,\r\n              ''''items'''':[\r\n                {\r\n                  ''''required'''':true,\r\n                  ''''properties'''':{\r\n                    ''''IDName'''':{\r\n                      ''''type'''':''''string'''',\r\n                      ''''required'''':true\r\n                    },\r\n                    ''''Order'''':{\r\n                      ''''type'''':''''string'''',\r\n                      ''''required'''':true\r\n                    },\r\n                    ''''IDDesc'''':{\r\n                      ''''type'''':''''string'''',\r\n                      ''''required'''':true\r\n                    },\r\n                    ''''IsActive'''':{\r\n                      ''''type'''':''''string'''',\r\n                      ''''required'''':true\r\n                    }\r\n                  }\r\n                }\r\n              ]\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}''", span="1481-1537"];
m43_889 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DuplicateErrorsTest()", file="JObject.Async.cs", label="string json = @''{\r\n  ''''ErrorDemoDatabase'''':{\r\n    ''''URL'''':''''localhost:3164'''',\r\n    ''''Version'''':''''1.0'''',\r\n    ''''Date'''':''''6.23.2010, 9:35:18.121'''',\r\n    ''''MACLevels'''':{\r\n      ''''MACLevel'''':[\r\n        {\r\n          ''''@IDName'''':''''Developer'''',\r\n          ''''Order'''':''''0'''',\r\n          ''''IDDesc'''':''''DeveloperDesc'''',\r\n          ''''IsActive'''':''''True''''\r\n        },\r\n        {\r\n          ''''IDName'''':''''Technician'''',\r\n          ''''Order'''':''''1'''',\r\n          ''''IDDesc'''':''''TechnicianDesc'''',\r\n          ''''IsActive'''':''''True''''\r\n        },\r\n        {\r\n          ''''IDName'''':''''Administrator'''',\r\n          ''''Order'''':''''2'''',\r\n          ''''IDDesc'''':''''AdministratorDesc'''',\r\n          ''''IsActive'''':''''True''''\r\n        },\r\n        {\r\n          ''''IDName'''':''''PowerUser'''',\r\n          ''''Order'''':''''3'''',\r\n          ''''IDDesc'''':''''PowerUserDesc'''',\r\n          ''''IsActive'''':''''True''''\r\n        },\r\n        {\r\n          ''''IDName'''':''''Operator'''',\r\n          ''''Order'''':''''4'''',\r\n          ''''IDDesc'''':''''OperatorDesc'''',\r\n          ''''IsActive'''':''''True''''\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}''", span="1539-1579"];
m43_893 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DuplicateErrorsTest()", file="JObject.Async.cs", label="reader.Schema = JsonSchema.Parse(schema)", span="1585-1585"];
m43_890 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DuplicateErrorsTest()", file="JObject.Async.cs", label="IList<ValidationEventArgs> validationEventArgs = new List<ValidationEventArgs>()", span="1581-1581"];
m43_891 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DuplicateErrorsTest()", file="JObject.Async.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="1583-1583"];
m43_892 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DuplicateErrorsTest()", file="JObject.Async.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs.Add(args); }", span="1584-1584"];
m43_895 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DuplicateErrorsTest()", file="JObject.Async.cs", label="Assert.AreEqual(1, validationEventArgs.Count)", span="1591-1591"];
m43_894 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DuplicateErrorsTest()", file="JObject.Async.cs", label="reader.Read()", span="1587-1587"];
m43_896 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DuplicateErrorsTest()", file="JObject.Async.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.DuplicateErrorsTest()", span="1479-1479"];
m43_900 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="JObject.Async.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m43_909 [cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.Generate(System.Type)", file="JObject.Async.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaGenerator.Generate(System.Type)", span="128-128"];
m43_477 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BooleanNotInEnum()", file="JObject.Async.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.BooleanNotInEnum()", span="794-794"];
m43_478 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BooleanNotInEnum()", file="JObject.Async.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''array'''',\r\n  ''''items'''':{\r\n    ''''type'''':''''boolean'''',\r\n    ''''enum'''':[true]\r\n  },\r\n  ''''maxItems'''':3\r\n}''", span="796-803"];
m43_479 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BooleanNotInEnum()", file="JObject.Async.cs", label="string json = ''[true,false]''", span="805-805"];
m43_483 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BooleanNotInEnum()", file="JObject.Async.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="811-811"];
m43_480 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BooleanNotInEnum()", file="JObject.Async.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="807-807"];
m43_481 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BooleanNotInEnum()", file="JObject.Async.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="809-809"];
m43_482 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BooleanNotInEnum()", file="JObject.Async.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="810-810"];
m43_484 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BooleanNotInEnum()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="813-813"];
m43_485 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BooleanNotInEnum()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="814-814"];
m43_486 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BooleanNotInEnum()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="816-816"];
m43_487 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BooleanNotInEnum()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="817-817"];
m43_489 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BooleanNotInEnum()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="820-820"];
m43_490 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BooleanNotInEnum()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="821-821"];
m43_493 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BooleanNotInEnum()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="825-825"];
m43_494 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BooleanNotInEnum()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="826-826"];
m43_488 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BooleanNotInEnum()", file="JObject.Async.cs", label="Assert.AreEqual(null, validationEventArgs)", span="818-818"];
m43_491 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BooleanNotInEnum()", file="JObject.Async.cs", label="Assert.AreEqual(@''Value false is not defined in enum. Line 1, position 11.'', validationEventArgs.Message)", span="822-822"];
m43_492 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BooleanNotInEnum()", file="JObject.Async.cs", label="Assert.AreEqual(''[1]'', validationEventArgs.Path)", span="823-823"];
m43_495 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BooleanNotInEnum()", file="JObject.Async.cs", label="Assert.IsNotNull(validationEventArgs)", span="828-828"];
m43_496 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BooleanNotInEnum()", file="JObject.Async.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.BooleanNotInEnum()", span="794-794"];
m43_686 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.GetExtendedSchema()", file="JObject.Async.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.GetExtendedSchema()", span="1130-1130"];
m43_687 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.GetExtendedSchema()", file="JObject.Async.cs", label="string first = @''{\r\n  ''''id'''':''''first'''',\r\n  ''''type'''':''''object'''',\r\n  ''''properties'''':\r\n  {\r\n    ''''firstproperty'''':{''''type'''':''''string'''',''''required'''':true}\r\n  },\r\n  ''''additionalProperties'''':{}\r\n}''", span="1132-1140"];
m43_688 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.GetExtendedSchema()", file="JObject.Async.cs", label="string second = @''{\r\n  ''''id'''':''''second'''',\r\n  ''''type'''':''''object'''',\r\n  ''''extends'''':{''''$ref'''':''''first''''},\r\n  ''''properties'''':\r\n  {\r\n    ''''secondproperty'''':{''''type'''':''''string'''',''''required'''':true}\r\n  },\r\n  ''''additionalProperties'''':false\r\n}''", span="1142-1151"];
m43_690 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.GetExtendedSchema()", file="JObject.Async.cs", label="JsonSchema firstSchema = JsonSchema.Parse(first, resolver)", span="1154-1154"];
m43_689 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.GetExtendedSchema()", file="JObject.Async.cs", label="JsonSchemaResolver resolver = new JsonSchemaResolver()", span="1153-1153"];
m43_691 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.GetExtendedSchema()", file="JObject.Async.cs", label="JsonSchema secondSchema = JsonSchema.Parse(second, resolver)", span="1155-1155"];
m43_692 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.GetExtendedSchema()", file="JObject.Async.cs", label="return secondSchema;", span="1157-1157"];
m43_693 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.GetExtendedSchema()", file="JObject.Async.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.GetExtendedSchema()", span="1130-1130"];
m43_6 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JObject.Async.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="73-73"];
m43_0 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.CheckInnerReader()", file="JObject.Async.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.CheckInnerReader()", span="60-60"];
m43_1 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.CheckInnerReader()", file="JObject.Async.cs", label="string json = ''{'name':'James','hobbies':['pie','cake']}''", span="62-62"];
m43_2 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.CheckInnerReader()", file="JObject.Async.cs", label="JsonReader reader = new JsonTextReader(new StringReader(json))", span="63-63"];
m43_3 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.CheckInnerReader()", file="JObject.Async.cs", label="JsonValidatingReader validatingReader = new JsonValidatingReader(reader)", span="65-65"];
m43_4 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.CheckInnerReader()", file="JObject.Async.cs", label="Assert.AreEqual(reader, validatingReader.Reader)", span="66-66"];
m43_5 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.CheckInnerReader()", file="JObject.Async.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.CheckInnerReader()", span="60-60"];
m43_559 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDisallowed()", file="JObject.Async.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDisallowed()", span="923-923"];
m43_560 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDisallowed()", file="JObject.Async.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''array'''',\r\n  ''''items'''':{\r\n    ''''disallow'''':[''''number'''']\r\n  },\r\n  ''''maxItems'''':3\r\n}''", span="925-931"];
m43_561 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDisallowed()", file="JObject.Async.cs", label="string json = ''['pie',1.1]''", span="933-933"];
m43_565 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDisallowed()", file="JObject.Async.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="939-939"];
m43_562 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDisallowed()", file="JObject.Async.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="935-935"];
m43_563 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDisallowed()", file="JObject.Async.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="937-937"];
m43_564 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDisallowed()", file="JObject.Async.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="938-938"];
m43_566 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDisallowed()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="941-941"];
m43_567 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDisallowed()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="942-942"];
m43_568 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDisallowed()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="944-944"];
m43_569 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDisallowed()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="945-945"];
m43_571 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDisallowed()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="948-948"];
m43_572 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDisallowed()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="949-949"];
m43_574 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDisallowed()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="952-952"];
m43_575 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDisallowed()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="953-953"];
m43_570 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDisallowed()", file="JObject.Async.cs", label="Assert.AreEqual(null, validationEventArgs)", span="946-946"];
m43_573 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDisallowed()", file="JObject.Async.cs", label="Assert.AreEqual(@''Type Float is disallowed. Line 1, position 10.'', validationEventArgs.Message)", span="950-950"];
m43_576 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDisallowed()", file="JObject.Async.cs", label="Assert.IsNotNull(validationEventArgs)", span="955-955"];
m43_577 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDisallowed()", file="JObject.Async.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDisallowed()", span="923-923"];
m43_61 [cluster="Newtonsoft.Json.Schema.JsonSchema.Parse(string)", file="JObject.Async.cs", label="Entry Newtonsoft.Json.Schema.JsonSchema.Parse(string)", span="294-294"];
m43_1001 [cluster="lambda expression", file="JObject.Async.cs", label="Entry lambda expression", span="1735-1735"];
m43_68 [cluster="lambda expression", file="JObject.Async.cs", label="validationEventArgs = args", span="91-91"];
m43_67 [cluster="lambda expression", file="JObject.Async.cs", label="Entry lambda expression", span="91-91"];
m43_69 [cluster="lambda expression", file="JObject.Async.cs", label="Exit lambda expression", span="91-91"];
m43_119 [cluster="lambda expression", file="JObject.Async.cs", label="validationEventArgs = args", span="161-161"];
m43_118 [cluster="lambda expression", file="JObject.Async.cs", label="Entry lambda expression", span="161-161"];
m43_120 [cluster="lambda expression", file="JObject.Async.cs", label="Exit lambda expression", span="161-161"];
m43_135 [cluster="lambda expression", file="JObject.Async.cs", label="validationEventArgs = args", span="236-236"];
m43_134 [cluster="lambda expression", file="JObject.Async.cs", label="Entry lambda expression", span="236-236"];
m43_136 [cluster="lambda expression", file="JObject.Async.cs", label="Exit lambda expression", span="236-236"];
m43_150 [cluster="lambda expression", file="JObject.Async.cs", label="validationEventArgs = args", span="260-260"];
m43_149 [cluster="lambda expression", file="JObject.Async.cs", label="Entry lambda expression", span="260-260"];
m43_151 [cluster="lambda expression", file="JObject.Async.cs", label="Exit lambda expression", span="260-260"];
m43_175 [cluster="lambda expression", file="JObject.Async.cs", label="validationEventArgs = args", span="287-287"];
m43_174 [cluster="lambda expression", file="JObject.Async.cs", label="Entry lambda expression", span="287-287"];
m43_176 [cluster="lambda expression", file="JObject.Async.cs", label="Exit lambda expression", span="287-287"];
m43_191 [cluster="lambda expression", file="JObject.Async.cs", label="validationEventArgs = args", span="324-324"];
m43_190 [cluster="lambda expression", file="JObject.Async.cs", label="Entry lambda expression", span="324-324"];
m43_192 [cluster="lambda expression", file="JObject.Async.cs", label="Exit lambda expression", span="324-324"];
m43_207 [cluster="lambda expression", file="JObject.Async.cs", label="validationEventArgs = args", span="348-348"];
m43_206 [cluster="lambda expression", file="JObject.Async.cs", label="Entry lambda expression", span="348-348"];
m43_208 [cluster="lambda expression", file="JObject.Async.cs", label="Exit lambda expression", span="348-348"];
m43_223 [cluster="lambda expression", file="JObject.Async.cs", label="validationEventArgs = args", span="373-373"];
m43_222 [cluster="lambda expression", file="JObject.Async.cs", label="Entry lambda expression", span="373-373"];
m43_224 [cluster="lambda expression", file="JObject.Async.cs", label="Exit lambda expression", span="373-373"];
m43_237 [cluster="lambda expression", file="JObject.Async.cs", label="Entry lambda expression", span="396-396"];
m43_238 [cluster="lambda expression", file="JObject.Async.cs", label="validationEventArgs = args", span="396-396"];
m43_239 [cluster="lambda expression", file="JObject.Async.cs", label="Exit lambda expression", span="396-396"];
m43_244 [cluster="lambda expression", file="JObject.Async.cs", label="Entry lambda expression", span="407-418"];
m43_245 [cluster="lambda expression", file="JObject.Async.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''integer'''',\r\n  ''''maximum'''':5\r\n}''", span="409-412"];
m43_246 [cluster="lambda expression", file="JObject.Async.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(''10'')))", span="414-414"];
m43_247 [cluster="lambda expression", file="JObject.Async.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="415-415"];
m43_248 [cluster="lambda expression", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="417-417"];
m43_249 [cluster="lambda expression", file="JObject.Async.cs", label="Exit lambda expression", span="407-418"];
m43_263 [cluster="lambda expression", file="JObject.Async.cs", label="validationEventArgs = args", span="434-434"];
m43_262 [cluster="lambda expression", file="JObject.Async.cs", label="Entry lambda expression", span="434-434"];
m43_264 [cluster="lambda expression", file="JObject.Async.cs", label="Exit lambda expression", span="434-434"];
m43_288 [cluster="lambda expression", file="JObject.Async.cs", label="validationEventArgs = args", span="461-461"];
m43_287 [cluster="lambda expression", file="JObject.Async.cs", label="Entry lambda expression", span="461-461"];
m43_289 [cluster="lambda expression", file="JObject.Async.cs", label="Exit lambda expression", span="461-461"];
m43_303 [cluster="lambda expression", file="JObject.Async.cs", label="validationEventArgs = args", span="498-498"];
m43_302 [cluster="lambda expression", file="JObject.Async.cs", label="Entry lambda expression", span="498-498"];
m43_304 [cluster="lambda expression", file="JObject.Async.cs", label="Exit lambda expression", span="498-498"];
m43_318 [cluster="lambda expression", file="JObject.Async.cs", label="validationEventArgs = args", span="521-521"];
m43_317 [cluster="lambda expression", file="JObject.Async.cs", label="Entry lambda expression", span="521-521"];
m43_319 [cluster="lambda expression", file="JObject.Async.cs", label="Exit lambda expression", span="521-521"];
m43_343 [cluster="lambda expression", file="JObject.Async.cs", label="validationEventArgs = args", span="548-548"];
m43_342 [cluster="lambda expression", file="JObject.Async.cs", label="Entry lambda expression", span="548-548"];
m43_344 [cluster="lambda expression", file="JObject.Async.cs", label="Exit lambda expression", span="548-548"];
m43_368 [cluster="lambda expression", file="JObject.Async.cs", label="validationEventArgs = args", span="588-588"];
m43_367 [cluster="lambda expression", file="JObject.Async.cs", label="Entry lambda expression", span="588-588"];
m43_369 [cluster="lambda expression", file="JObject.Async.cs", label="Exit lambda expression", span="588-588"];
m43_386 [cluster="lambda expression", file="JObject.Async.cs", label="validationEventArgs = args", span="629-629"];
m43_385 [cluster="lambda expression", file="JObject.Async.cs", label="Entry lambda expression", span="629-629"];
m43_387 [cluster="lambda expression", file="JObject.Async.cs", label="Exit lambda expression", span="629-629"];
m43_406 [cluster="lambda expression", file="JObject.Async.cs", label="validationEventArgs = args", span="659-659"];
m43_405 [cluster="lambda expression", file="JObject.Async.cs", label="Entry lambda expression", span="659-659"];
m43_407 [cluster="lambda expression", file="JObject.Async.cs", label="Exit lambda expression", span="659-659"];
m43_426 [cluster="lambda expression", file="JObject.Async.cs", label="validationEventArgs = args", span="692-692"];
m43_425 [cluster="lambda expression", file="JObject.Async.cs", label="Entry lambda expression", span="692-692"];
m43_427 [cluster="lambda expression", file="JObject.Async.cs", label="Exit lambda expression", span="692-692"];
m43_436 [cluster="lambda expression", file="JObject.Async.cs", label="Entry lambda expression", span="723-723"];
m43_437 [cluster="lambda expression", file="JObject.Async.cs", label="validationEventArgs = args", span="723-723"];
m43_438 [cluster="lambda expression", file="JObject.Async.cs", label="Exit lambda expression", span="723-723"];
m43_455 [cluster="lambda expression", file="JObject.Async.cs", label="validationEventArgs = args", span="744-744"];
m43_454 [cluster="lambda expression", file="JObject.Async.cs", label="Entry lambda expression", span="744-744"];
m43_456 [cluster="lambda expression", file="JObject.Async.cs", label="Exit lambda expression", span="744-744"];
m43_475 [cluster="lambda expression", file="JObject.Async.cs", label="validationEventArgs = args", span="776-776"];
m43_474 [cluster="lambda expression", file="JObject.Async.cs", label="Entry lambda expression", span="776-776"];
m43_476 [cluster="lambda expression", file="JObject.Async.cs", label="Exit lambda expression", span="776-776"];
m43_498 [cluster="lambda expression", file="JObject.Async.cs", label="validationEventArgs = args", span="810-810"];
m43_497 [cluster="lambda expression", file="JObject.Async.cs", label="Entry lambda expression", span="810-810"];
m43_499 [cluster="lambda expression", file="JObject.Async.cs", label="Exit lambda expression", span="810-810"];
m43_523 [cluster="lambda expression", file="JObject.Async.cs", label="validationEventArgs = args", span="845-845"];
m43_522 [cluster="lambda expression", file="JObject.Async.cs", label="Entry lambda expression", span="845-845"];
m43_524 [cluster="lambda expression", file="JObject.Async.cs", label="Exit lambda expression", span="845-845"];
m43_542 [cluster="lambda expression", file="JObject.Async.cs", label="validationEventArgs = args", span="881-881"];
m43_541 [cluster="lambda expression", file="JObject.Async.cs", label="Entry lambda expression", span="881-881"];
m43_543 [cluster="lambda expression", file="JObject.Async.cs", label="Exit lambda expression", span="881-881"];
m43_557 [cluster="lambda expression", file="JObject.Async.cs", label="validationEventArgs = args", span="912-912"];
m43_556 [cluster="lambda expression", file="JObject.Async.cs", label="Entry lambda expression", span="912-912"];
m43_558 [cluster="lambda expression", file="JObject.Async.cs", label="Exit lambda expression", span="912-912"];
m43_579 [cluster="lambda expression", file="JObject.Async.cs", label="validationEventArgs = args", span="938-938"];
m43_578 [cluster="lambda expression", file="JObject.Async.cs", label="Entry lambda expression", span="938-938"];
m43_580 [cluster="lambda expression", file="JObject.Async.cs", label="Exit lambda expression", span="938-938"];
m43_604 [cluster="lambda expression", file="JObject.Async.cs", label="validationEventArgs = args", span="977-977"];
m43_603 [cluster="lambda expression", file="JObject.Async.cs", label="Entry lambda expression", span="977-977"];
m43_605 [cluster="lambda expression", file="JObject.Async.cs", label="Exit lambda expression", span="977-977"];
m43_627 [cluster="lambda expression", file="JObject.Async.cs", label="validationEventArgs = args", span="1019-1019"];
m43_626 [cluster="lambda expression", file="JObject.Async.cs", label="Entry lambda expression", span="1019-1019"];
m43_628 [cluster="lambda expression", file="JObject.Async.cs", label="Exit lambda expression", span="1019-1019"];
m43_664 [cluster="lambda expression", file="JObject.Async.cs", label="validationEventArgs = args", span="1058-1058"];
m43_663 [cluster="lambda expression", file="JObject.Async.cs", label="Entry lambda expression", span="1058-1058"];
m43_665 [cluster="lambda expression", file="JObject.Async.cs", label="Exit lambda expression", span="1058-1058"];
m43_683 [cluster="lambda expression", file="JObject.Async.cs", label="errors.Add(validationEventArgs.Message)", span="1118-1118"];
m43_682 [cluster="lambda expression", file="JObject.Async.cs", label="validationEventArgs = args", span="1117-1117"];
m43_681 [cluster="lambda expression", file="JObject.Async.cs", label="Entry lambda expression", span="1115-1119"];
m43_684 [cluster="lambda expression", file="JObject.Async.cs", label="Exit lambda expression", span="1115-1119"];
m43_739 [cluster="lambda expression", file="JObject.Async.cs", label="validationEventArgs = args", span="1168-1168"];
m43_738 [cluster="lambda expression", file="JObject.Async.cs", label="Entry lambda expression", span="1168-1168"];
m43_740 [cluster="lambda expression", file="JObject.Async.cs", label="Exit lambda expression", span="1168-1168"];
m43_755 [cluster="lambda expression", file="JObject.Async.cs", label="errors.Add(args.Message)", span="1226-1226"];
m43_754 [cluster="lambda expression", file="JObject.Async.cs", label="Entry lambda expression", span="1226-1226"];
m43_756 [cluster="lambda expression", file="JObject.Async.cs", label="Exit lambda expression", span="1226-1226"];
m43_780 [cluster="lambda expression", file="JObject.Async.cs", label="validationEventArgs = args", span="1253-1253"];
m43_779 [cluster="lambda expression", file="JObject.Async.cs", label="Entry lambda expression", span="1253-1253"];
m43_781 [cluster="lambda expression", file="JObject.Async.cs", label="Exit lambda expression", span="1253-1253"];
m43_817 [cluster="lambda expression", file="JObject.Async.cs", label="validationEventArgs = args", span="1299-1299"];
m43_816 [cluster="lambda expression", file="JObject.Async.cs", label="Entry lambda expression", span="1299-1299"];
m43_818 [cluster="lambda expression", file="JObject.Async.cs", label="Exit lambda expression", span="1299-1299"];
m43_885 [cluster="lambda expression", file="JObject.Async.cs", label="errors.Add(validationEventArgs.Path + '' - '' + validationEventArgs.Message)", span="1410-1410"];
m43_884 [cluster="lambda expression", file="JObject.Async.cs", label="validationEventArgs = args", span="1409-1409"];
m43_883 [cluster="lambda expression", file="JObject.Async.cs", label="Entry lambda expression", span="1407-1411"];
m43_886 [cluster="lambda expression", file="JObject.Async.cs", label="Exit lambda expression", span="1407-1411"];
m43_898 [cluster="lambda expression", file="JObject.Async.cs", label="validationEventArgs.Add(args)", span="1584-1584"];
m43_897 [cluster="lambda expression", file="JObject.Async.cs", label="Entry lambda expression", span="1584-1584"];
m43_899 [cluster="lambda expression", file="JObject.Async.cs", label="Exit lambda expression", span="1584-1584"];
m43_925 [cluster="lambda expression", file="JObject.Async.cs", label="Entry lambda expression", span="1627-1637"];
m43_926 [cluster="lambda expression", file="JObject.Async.cs", label="JsonSchema s = new JsonSchemaGenerator().Generate(typeof(int))", span="1629-1629"];
m43_927 [cluster="lambda expression", file="JObject.Async.cs", label="s.Maximum = 2", span="1630-1630"];
m43_928 [cluster="lambda expression", file="JObject.Async.cs", label="JsonReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(@''5'')))\r\n                {\r\n                    Schema = s\r\n                }", span="1632-1635"];
m43_929 [cluster="lambda expression", file="JObject.Async.cs", label="reader.ReadAsInt32()", span="1636-1636"];
m43_930 [cluster="lambda expression", file="JObject.Async.cs", label="Exit lambda expression", span="1627-1637"];
m43_941 [cluster="lambda expression", file="JObject.Async.cs", label="Entry lambda expression", span="1657-1667"];
m43_942 [cluster="lambda expression", file="JObject.Async.cs", label="JsonSchema s = new JsonSchemaGenerator().Generate(typeof(decimal))", span="1659-1659"];
m43_943 [cluster="lambda expression", file="JObject.Async.cs", label="s.DivisibleBy = 1", span="1660-1660"];
m43_944 [cluster="lambda expression", file="JObject.Async.cs", label="JsonReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(@''5.5'')))\r\n                {\r\n                    Schema = s\r\n                }", span="1662-1665"];
m43_945 [cluster="lambda expression", file="JObject.Async.cs", label="reader.ReadAsDecimal()", span="1666-1666"];
m43_946 [cluster="lambda expression", file="JObject.Async.cs", label="Exit lambda expression", span="1657-1667"];
m43_980 [cluster="lambda expression", file="JObject.Async.cs", label="validationEventArgs = args", span="1699-1699"];
m43_979 [cluster="lambda expression", file="JObject.Async.cs", label="Entry lambda expression", span="1699-1699"];
m43_981 [cluster="lambda expression", file="JObject.Async.cs", label="Exit lambda expression", span="1699-1699"];
m43_1002 [cluster="lambda expression", file="JObject.Async.cs", label="validationEventArgs = args", span="1735-1735"];
m43_1003 [cluster="lambda expression", file="JObject.Async.cs", label="Exit lambda expression", span="1735-1735"];
m43_435 [cluster="Newtonsoft.Json.Linq.JArray.JArray(object)", file="JObject.Async.cs", label="Entry Newtonsoft.Json.Linq.JArray.JArray(object)", span="91-91"];
m43_265 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerIsNotInEnum()", file="JObject.Async.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerIsNotInEnum()", span="445-445"];
m43_266 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerIsNotInEnum()", file="JObject.Async.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''array'''',\r\n  ''''items'''':{\r\n    ''''type'''':''''integer'''',\r\n    ''''enum'''':[1,2]\r\n  },\r\n  ''''maxItems'''':3\r\n}''", span="447-454"];
m43_267 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerIsNotInEnum()", file="JObject.Async.cs", label="string json = ''[1,2,3]''", span="456-456"];
m43_271 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerIsNotInEnum()", file="JObject.Async.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="462-462"];
m43_268 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerIsNotInEnum()", file="JObject.Async.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="458-458"];
m43_269 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerIsNotInEnum()", file="JObject.Async.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="460-460"];
m43_270 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerIsNotInEnum()", file="JObject.Async.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="461-461"];
m43_272 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerIsNotInEnum()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="464-464"];
m43_273 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerIsNotInEnum()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="465-465"];
m43_274 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerIsNotInEnum()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="467-467"];
m43_275 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerIsNotInEnum()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="468-468"];
m43_276 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerIsNotInEnum()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="470-470"];
m43_277 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerIsNotInEnum()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="471-471"];
m43_279 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerIsNotInEnum()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="474-474"];
m43_280 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerIsNotInEnum()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="475-475"];
m43_283 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerIsNotInEnum()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="479-479"];
m43_284 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerIsNotInEnum()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="480-480"];
m43_278 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerIsNotInEnum()", file="JObject.Async.cs", label="Assert.AreEqual(null, validationEventArgs)", span="472-472"];
m43_281 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerIsNotInEnum()", file="JObject.Async.cs", label="Assert.AreEqual(@''Value 3 is not defined in enum. Line 1, position 6.'', validationEventArgs.Message)", span="476-476"];
m43_282 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerIsNotInEnum()", file="JObject.Async.cs", label="Assert.AreEqual(''[2]'', validationEventArgs.Path)", span="477-477"];
m43_285 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerIsNotInEnum()", file="JObject.Async.cs", label="Assert.IsNotNull(validationEventArgs)", span="482-482"];
m43_286 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerIsNotInEnum()", file="JObject.Async.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerIsNotInEnum()", span="445-445"];
m43_910 [cluster="System.Text.Encoding.GetBytes(string)", file="JObject.Async.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m43_982 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArrayIncomplete()", file="JObject.Async.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArrayIncomplete()", span="1720-1720"];
m43_983 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArrayIncomplete()", file="JObject.Async.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''array'''',\r\n  ''''items'''':{\r\n    ''''type'''':''''integer''''\r\n  },\r\n  ''''maxItems'''':1\r\n}''", span="1722-1728"];
m43_984 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArrayIncomplete()", file="JObject.Async.cs", label="string json = ''[1,2''", span="1730-1730"];
m43_988 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArrayIncomplete()", file="JObject.Async.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="1736-1736"];
m43_985 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArrayIncomplete()", file="JObject.Async.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="1732-1732"];
m43_986 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArrayIncomplete()", file="JObject.Async.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="1734-1734"];
m43_987 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArrayIncomplete()", file="JObject.Async.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="1735-1735"];
m43_989 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArrayIncomplete()", file="JObject.Async.cs", label="reader.Read()", span="1738-1738"];
m43_990 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArrayIncomplete()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="1739-1739"];
m43_991 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArrayIncomplete()", file="JObject.Async.cs", label="reader.ReadAsInt32()", span="1741-1741"];
m43_992 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArrayIncomplete()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1742-1742"];
m43_994 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArrayIncomplete()", file="JObject.Async.cs", label="reader.ReadAsInt32()", span="1745-1745"];
m43_995 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArrayIncomplete()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1746-1746"];
m43_997 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArrayIncomplete()", file="JObject.Async.cs", label="reader.ReadAsInt32()", span="1749-1749"];
m43_998 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArrayIncomplete()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1750-1750"];
m43_993 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArrayIncomplete()", file="JObject.Async.cs", label="Assert.AreEqual(null, validationEventArgs)", span="1743-1743"];
m43_996 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArrayIncomplete()", file="JObject.Async.cs", label="Assert.AreEqual(null, validationEventArgs)", span="1747-1747"];
m43_999 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArrayIncomplete()", file="JObject.Async.cs", label="Assert.AreEqual(null, validationEventArgs)", span="1751-1751"];
m43_1000 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArrayIncomplete()", file="JObject.Async.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArrayIncomplete()", span="1720-1720"];
m43_931 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsDecimal()", file="JObject.Async.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsDecimal()", span="1641-1641"];
m43_932 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsDecimal()", file="JObject.Async.cs", label="JsonSchema s = new JsonSchemaGenerator().Generate(typeof(decimal))", span="1643-1643"];
m43_933 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsDecimal()", file="JObject.Async.cs", label="JsonReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(@''1.5'')))\r\n            {\r\n                Schema = s\r\n            }", span="1645-1648"];
m43_934 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsDecimal()", file="JObject.Async.cs", label="decimal? d = reader.ReadAsDecimal()", span="1649-1649"];
m43_935 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsDecimal()", file="JObject.Async.cs", label="Assert.AreEqual(1.5m, d)", span="1651-1651"];
m43_936 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsDecimal()", file="JObject.Async.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsDecimal()", span="1641-1641"];
m43_924 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="JObject.Async.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="358-358"];
m43_457 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NullNotInEnum()", file="JObject.Async.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.NullNotInEnum()", span="760-760"];
m43_458 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NullNotInEnum()", file="JObject.Async.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''array'''',\r\n  ''''items'''':{\r\n    ''''type'''':''''null'''',\r\n    ''''enum'''':[]\r\n  },\r\n  ''''maxItems'''':3\r\n}''", span="762-769"];
m43_459 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NullNotInEnum()", file="JObject.Async.cs", label="string json = ''[null]''", span="771-771"];
m43_463 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NullNotInEnum()", file="JObject.Async.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="777-777"];
m43_460 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NullNotInEnum()", file="JObject.Async.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="773-773"];
m43_461 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NullNotInEnum()", file="JObject.Async.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="775-775"];
m43_462 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NullNotInEnum()", file="JObject.Async.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="776-776"];
m43_464 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NullNotInEnum()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="779-779"];
m43_465 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NullNotInEnum()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="780-780"];
m43_466 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NullNotInEnum()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="782-782"];
m43_467 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NullNotInEnum()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="783-783"];
m43_470 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NullNotInEnum()", file="JObject.Async.cs", label="Assert.IsTrue(reader.Read())", span="787-787"];
m43_471 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NullNotInEnum()", file="JObject.Async.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="788-788"];
m43_468 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NullNotInEnum()", file="JObject.Async.cs", label="Assert.AreEqual(@''Value null is not defined in enum. Line 1, position 5.'', validationEventArgs.Message)", span="784-784"];
m43_469 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NullNotInEnum()", file="JObject.Async.cs", label="Assert.AreEqual(''[0]'', validationEventArgs.Path)", span="785-785"];
m43_472 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NullNotInEnum()", file="JObject.Async.cs", label="Assert.IsNotNull(validationEventArgs)", span="790-790"];
m43_473 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NullNotInEnum()", file="JObject.Async.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.NullNotInEnum()", span="760-760"];
m43_978 [cluster="Newtonsoft.Json.JsonValidatingReader.ReadAsInt32()", file="JObject.Async.cs", label="Entry Newtonsoft.Json.JsonValidatingReader.ReadAsInt32()", span="370-370"];
m43_1004 [file="JObject.Async.cs", label=errors, span=""];
m43_1005 [file="JObject.Async.cs", label="Newtonsoft.Json.Tests.JsonValidatingReaderTests", span=""];
m43_1006 [file="JObject.Async.cs", label=errors, span=""];
m43_1007 [file="JObject.Async.cs", label=errors, span=""];
m43_1008 [file="JObject.Async.cs", label=validationEventArgs, span=""];
m44_179 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadLineInfo()", file="JObject.cs", label="jsonReader.Read()", span="283-283"];
m44_180 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadLineInfo()", file="JObject.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.EndObject)", span="284-284"];
m44_181 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadLineInfo()", file="JObject.cs", label="Assert.AreEqual(1, lineInfo.LineNumber)", span="285-285"];
m44_85 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetBadString()", file="JObject.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetBadString()", span="142-142"];
m44_442 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_ArrayBase_ArrayToken()", file="JObject.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_ArrayBase_ArrayToken()", span="702-702"];
m44_443 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_ArrayBase_ArrayToken()", color=green, community=0, file="JObject.cs", label="JArray a = new JArray\r\n            {\r\n                1, 2\r\n            }", prediction=4, span="704-707"];
m44_444 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_ArrayBase_ArrayToken()", file="JObject.cs", label="JTokenReader reader = new JTokenReader(a, ''[0]'')", span="709-709"];
m44_449 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_ArrayBase_ArrayToken()", color=green, community=0, file="JObject.cs", label="Assert.AreEqual(''[0][0]'', reader.Path)", prediction=5, span="717-717"];
m44_448 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_ArrayBase_ArrayToken()", file="JObject.cs", label="Assert.IsTrue(reader.Read())", span="716-716"];
m44_450 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_ArrayBase_ArrayToken()", file="JObject.cs", label="Assert.IsTrue(reader.Read())", span="719-719"];
m44_445 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_ArrayBase_ArrayToken()", file="JObject.cs", label="Assert.AreEqual(''[0]'', reader.Path)", span="711-711"];
m44_447 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_ArrayBase_ArrayToken()", file="JObject.cs", label="Assert.AreEqual(''[0]'', reader.Path)", span="714-714"];
m44_451 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_ArrayBase_ArrayToken()", file="JObject.cs", label="Assert.AreEqual(''[0][1]'', reader.Path)", span="720-720"];
m44_453 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_ArrayBase_ArrayToken()", file="JObject.cs", label="Assert.AreEqual(''[0]'', reader.Path)", span="723-723"];
m44_455 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_ArrayBase_ArrayToken()", file="JObject.cs", label="Assert.AreEqual(''[0]'', reader.Path)", span="726-726"];
m44_446 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_ArrayBase_ArrayToken()", file="JObject.cs", label="Assert.IsTrue(reader.Read())", span="713-713"];
m44_452 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_ArrayBase_ArrayToken()", file="JObject.cs", label="Assert.IsTrue(reader.Read())", span="722-722"];
m44_454 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_ArrayBase_ArrayToken()", file="JObject.cs", label="Assert.IsFalse(reader.Read())", span="725-725"];
m44_456 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_ArrayBase_ArrayToken()", file="JObject.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_ArrayBase_ArrayToken()", span="702-702"];
m44_282 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.DeserializeStringInt()", file="JObject.cs", label="Assert.AreEqual(-1, c.PostProperty)", span="454-454"];
m44_283 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.DeserializeStringInt()", file="JObject.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenReaderTest.DeserializeStringInt()", span="438-438"];
m44_284 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalInt()", file="JObject.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalInt()", span="459-459"];
m44_253 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsBytesNull()", file="JObject.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsBytesNull()", span="403-403"];
m44_254 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsBytesNull()", file="JObject.cs", label="JsonSerializer s = new JsonSerializer()", span="405-405"];
m44_255 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsBytesNull()", file="JObject.cs", label="JToken nullToken = JToken.ReadFrom(new JsonTextReader(new StringReader(''{ Data: null }'')))", span="407-407"];
m44_212 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadBytesFailure()", color=green, community=0, file="JObject.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                JObject o =\r\n                    new JObject(\r\n                        new JProperty(''Test1'', 1)\r\n                        );\r\n\r\n                using (JTokenReader jsonReader = new JTokenReader(o))\r\n                {\r\n                    jsonReader.Read();\r\n                    Assert.AreEqual(JsonToken.StartObject, jsonReader.TokenType);\r\n\r\n                    jsonReader.Read();\r\n                    Assert.AreEqual(JsonToken.PropertyName, jsonReader.TokenType);\r\n                    Assert.AreEqual(''Test1'', jsonReader.Value);\r\n\r\n                    jsonReader.ReadAsBytes();\r\n                }\r\n            }, ''Error reading bytes. Unexpected token: Integer. Path 'Test1'.'')", prediction=6, span="333-351"];
m44_213 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadBytesFailure()", file="JObject.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadBytesFailure()", span="331-331"];
m44_214 [cluster="Unk.>", file="JObject.cs", label="Entry Unk.>", span=""];
m44_215 [cluster="lambda expression", file="JObject.cs", label="Entry lambda expression", span="333-351"];
m44_216 [cluster="lambda expression", file="JObject.cs", label="JObject o =\r\n                    new JObject(\r\n                        new JProperty(''Test1'', 1)\r\n                        )", span="335-338"];
m44_217 [cluster="lambda expression", file="JObject.cs", label="JTokenReader jsonReader = new JTokenReader(o)", span="340-340"];
m44_219 [cluster="lambda expression", file="JObject.cs", label="Assert.AreEqual(JsonToken.StartObject, jsonReader.TokenType)", span="343-343"];
m44_223 [cluster="lambda expression", file="JObject.cs", label="jsonReader.ReadAsBytes()", span="349-349"];
m44_218 [cluster="lambda expression", file="JObject.cs", label="jsonReader.Read()", span="342-342"];
m44_220 [cluster="lambda expression", file="JObject.cs", label="jsonReader.Read()", span="345-345"];
m44_221 [cluster="lambda expression", file="JObject.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonReader.TokenType)", span="346-346"];
m44_222 [cluster="lambda expression", file="JObject.cs", label="Assert.AreEqual(''Test1'', jsonReader.Value)", span="347-347"];
m44_224 [cluster="lambda expression", file="JObject.cs", label="Exit lambda expression", span="333-351"];
m44_225 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadBytesFromString()", file="JObject.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadBytesFromString()", span="360-360"];
m44_202 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadBytes()", file="JObject.cs", label="Assert.AreEqual(data, readBytes)", span="320-320"];
m44_203 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadBytes()", file="JObject.cs", label="Assert.IsTrue(jsonReader.Read())", span="322-322"];
m44_204 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadBytes()", file="JObject.cs", label="Assert.AreEqual(JsonToken.EndObject, jsonReader.TokenType)", span="323-323"];
m44_205 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadBytes()", file="JObject.cs", label="Assert.IsFalse(jsonReader.Read())", span="325-325"];
m44_171 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadLineInfo()", file="JObject.cs", label="Assert.AreEqual(true, lineInfo.HasLineInfo())", span="273-273"];
m44_259 [cluster="Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetProperties(System.Attribute[])", file="JObject.cs", label=this, span="731-731"];
m44_26 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", file="JObject.cs", label="Assert.AreEqual(new DateTime(2000, 10, 15, 5, 5, 5, DateTimeKind.Utc), jsonReader.Value)", span="90-90"];
m44_240 [cluster="Newtonsoft.Json.Linq.JContainer.ContentsHashCode()", file="JObject.cs", label="Entry Newtonsoft.Json.Linq.JContainer.ContentsHashCode()", span="867-867"];
m44_210 [cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Contains(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", file="JObject.cs", label="return (property.Value == item.Value);", span="632-632"];
m44_72 [cluster="Newtonsoft.Json.Linq.JContainer.OnListChanged(System.ComponentModel.ListChangedEventArgs)", file="JObject.cs", label="Entry Newtonsoft.Json.Linq.JContainer.OnListChanged(System.ComponentModel.ListChangedEventArgs)", span="148-148"];
m44_78 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetBadString()", file="JObject.cs", label="JObject o = JObject.Parse(json)", span="146-146"];
m44_249 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadBytesFromEmptyString()", file="JObject.cs", label="var result2 = (HasBytes)JsonSerializer.Create(null)\r\n                .Deserialize(jsonReader, typeof(HasBytes))", span="391-392"];
m44_250 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadBytesFromEmptyString()", file="JObject.cs", label="CollectionAssert.AreEquivalent(new byte[0], result2.Bytes)", span="394-394"];
m44_5 [cluster="Newtonsoft.Json.Linq.JObject.JObject(params object[])", file="JObject.cs", label="Exit Newtonsoft.Json.Linq.JObject.JObject(params object[])", span="105-105"];
m44_4 [cluster="Newtonsoft.Json.Linq.JObject.JObject(params object[])", file="JObject.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject(params object[])", span="105-105"];
m44_122 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadLineInfo()", file="JObject.cs", label="Assert.AreEqual(0, lineInfo.LineNumber)", span="217-217"];
m44_123 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadLineInfo()", file="JObject.cs", label="Assert.AreEqual(0, lineInfo.LinePosition)", span="218-218"];
m44_124 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadLineInfo()", file="JObject.cs", label="Assert.AreEqual(false, lineInfo.HasLineInfo())", span="219-219"];
m44_138 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadLineInfo()", file="JObject.cs", label="Assert.AreEqual(o.Property(''CPU''), jsonReader.CurrentToken)", span="235-235"];
m44_139 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadLineInfo()", file="JObject.cs", label="jsonReader.Read()", span="237-237"];
m44_140 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadLineInfo()", file="JObject.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.String)", span="238-238"];
m44_141 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadLineInfo()", file="JObject.cs", label="Assert.AreEqual(jsonReader.Value, ''Intel'')", span="239-239"];
m44_142 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadLineInfo()", file="JObject.cs", label="Assert.AreEqual(2, lineInfo.LineNumber)", span="240-240"];
m44_143 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadLineInfo()", file="JObject.cs", label="Assert.AreEqual(15, lineInfo.LinePosition)", span="241-241"];
m44_182 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadLineInfo()", file="JObject.cs", label="Assert.AreEqual(1, lineInfo.LinePosition)", span="286-286"];
m44_44 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", file="JObject.cs", label="Assert.AreEqual(''Test4'', jsonReader.Value)", span="113-113"];
m44_236 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="JObject.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="512-512"];
m44_190 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadLineInfo()", file="JObject.cs", label="Assert.AreEqual(null, jsonReader.CurrentToken)", span="296-296"];
m44_252 [cluster="Unk.AreEquivalent", file="JObject.cs", label="Entry Unk.AreEquivalent", span=""];
m44_302 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32Int()", file="JObject.cs", label="Assert.IsTrue(reader.Read())", span="488-488"];
m44_303 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32Int()", file="JObject.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="489-489"];
m44_304 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32Int()", file="JObject.cs", label="Assert.AreEqual(o, reader.CurrentToken)", span="490-490"];
m44_305 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32Int()", file="JObject.cs", label="Assert.IsTrue(reader.Read())", span="492-492"];
m44_242 [cluster="Newtonsoft.Json.Linq.JObject.GetEnumerator()", file="JObject.cs", label=_properties, span="692-692"];
m44_248 [cluster="System.ComponentModel.PropertyChangedEventHandler.Invoke(object, System.ComponentModel.PropertyChangedEventArgs)", file="JObject.cs", label="Entry System.ComponentModel.PropertyChangedEventHandler.Invoke(object, System.ComponentModel.PropertyChangedEventArgs)", span="0-0"];
m44_247 [cluster="System.ComponentModel.PropertyChangedEventArgs.PropertyChangedEventArgs(string)", file="JObject.cs", label="Entry System.ComponentModel.PropertyChangedEventArgs.PropertyChangedEventArgs(string)", span="0-0"];
m44_246 [cluster="Newtonsoft.Json.Linq.JObject.OnPropertyChanged(string)", file="JObject.cs", label="Exit Newtonsoft.Json.Linq.JObject.OnPropertyChanged(string)", span="702-702"];
m44_245 [cluster="Newtonsoft.Json.Linq.JObject.OnPropertyChanged(string)", file="JObject.cs", label="PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName))", span="704-704"];
m44_244 [cluster="Newtonsoft.Json.Linq.JObject.GetEnumerator()", file="JObject.cs", label="Exit Newtonsoft.Json.Linq.JObject.GetEnumerator()", span="690-690"];
m44_243 [cluster="Newtonsoft.Json.Linq.JObject.GetEnumerator()", file="JObject.cs", label="yield return new KeyValuePair<string, JToken>(property.Name, property.Value);", span="694-694"];
m44_251 [cluster="System.ComponentModel.PropertyChangingEventArgs.PropertyChangingEventArgs(string)", file="JObject.cs", label="Entry System.ComponentModel.PropertyChangingEventArgs.PropertyChangingEventArgs(string)", span="0-0"];
m44_285 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalInt()", file="JObject.cs", label="string json = @''{''''Name'''':1}''", span="461-461"];
m44_286 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalInt()", file="JObject.cs", label="JObject o = JObject.Parse(json)", span="463-463"];
m44_287 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalInt()", file="JObject.cs", label="JsonReader reader = o.CreateReader()", span="465-465"];
m44_116 [cluster="Newtonsoft.Json.JsonReader.Read()", file="JObject.cs", label="Entry Newtonsoft.Json.JsonReader.Read()", span="409-409"];
m44_129 [cluster="Newtonsoft.Json.Linq.JObject.Parse(string, Newtonsoft.Json.Linq.JsonLoadSettings)", color=green, community=0, file="JObject.cs", label="throw JsonReaderException.Create(reader, ''Additional text found in JSON string after parsing content.'');", prediction=7, span="431-431"];
m44_120 [cluster="Newtonsoft.Json.Linq.JToken.SetLineInfo(Newtonsoft.Json.IJsonLineInfo, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JObject.cs", label="Entry Newtonsoft.Json.Linq.JToken.SetLineInfo(Newtonsoft.Json.IJsonLineInfo, Newtonsoft.Json.Linq.JsonLoadSettings)", span="2228-2228"];
m44_128 [cluster="Newtonsoft.Json.Linq.JObject.Parse(string, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JObject.cs", label="reader.Read() && reader.TokenType != JsonToken.Comment", span="429-429"];
m44_130 [cluster="Newtonsoft.Json.Linq.JObject.Parse(string, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JObject.cs", label="return o;", span="434-434"];
m44_119 [cluster="string.FormatWith(System.IFormatProvider, object)", file="JObject.cs", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
m44_121 [cluster="Newtonsoft.Json.Linq.JContainer.ReadTokenFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JObject.cs", label="Entry Newtonsoft.Json.Linq.JContainer.ReadTokenFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", span="730-730"];
m44_135 [cluster="Newtonsoft.Json.Linq.JObject.FromObject(object)", file="JObject.cs", label="return FromObject(o, JsonSerializer.CreateDefault());", span="445-445"];
m44_136 [cluster="Newtonsoft.Json.Linq.JObject.FromObject(object)", file="JObject.cs", label="Exit Newtonsoft.Json.Linq.JObject.FromObject(object)", span="443-443"];
m44_137 [cluster="Newtonsoft.Json.JsonSerializer.CreateDefault()", file="JObject.cs", label="Entry Newtonsoft.Json.JsonSerializer.CreateDefault()", span="596-596"];
m44_144 [cluster="Newtonsoft.Json.Linq.JToken.FromObjectInternal(object, Newtonsoft.Json.JsonSerializer)", file="JObject.cs", label="Entry Newtonsoft.Json.Linq.JToken.FromObjectInternal(object, Newtonsoft.Json.JsonSerializer)", span="1891-1891"];
m44_149 [cluster="Newtonsoft.Json.Linq.JObject.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JObject.cs", label="_properties[i].WriteTo(writer, converters)", span="477-477"];
m44_150 [cluster="Newtonsoft.Json.Linq.JObject.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JObject.cs", label="i++", span="475-475"];
m44_151 [cluster="Newtonsoft.Json.Linq.JObject.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JObject.cs", label="writer.WriteEndObject()", span="480-480"];
m44_155 [cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="JObject.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="413-413"];
m44_156 [cluster="Newtonsoft.Json.Linq.JObject.GetValue(string)", file="JObject.cs", label="Entry Newtonsoft.Json.Linq.JObject.GetValue(string)", span="488-488"];
m44_157 [cluster="Newtonsoft.Json.Linq.JObject.GetValue(string)", file="JObject.cs", label="return GetValue(propertyName, StringComparison.Ordinal);", span="490-490"];
m44_162 [cluster="Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", file="JObject.cs", label="JProperty property = Property(propertyName)", span="509-509"];
m44_163 [cluster="Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", file="JObject.cs", label="property != null", span="510-510"];
m44_164 [cluster="Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", file="JObject.cs", label="return property.Value;", span="512-512"];
m44_169 [cluster="Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", file="JObject.cs", label="return null;", span="527-527"];
m44_170 [cluster="Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", file="JObject.cs", label="Exit Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", span="501-501"];
m44_175 [cluster="Newtonsoft.Json.Linq.JObject.TryGetValue(string, System.StringComparison, out Newtonsoft.Json.Linq.JToken)", file="JObject.cs", label="Exit Newtonsoft.Json.Linq.JObject.TryGetValue(string, System.StringComparison, out Newtonsoft.Json.Linq.JToken)", span="539-539"];
m44_176 [cluster="Newtonsoft.Json.Linq.JObject.Add(string, Newtonsoft.Json.Linq.JToken)", file="JObject.cs", label="Add(new JProperty(propertyName, value))", span="553-553"];
m44_177 [cluster="Newtonsoft.Json.Linq.JObject.Add(string, Newtonsoft.Json.Linq.JToken)", file="JObject.cs", label="Exit Newtonsoft.Json.Linq.JObject.Add(string, Newtonsoft.Json.Linq.JToken)", span="551-551"];
m44_183 [cluster="Newtonsoft.Json.Linq.JObject.Remove(string)", file="JObject.cs", label="Entry Newtonsoft.Json.Linq.JObject.Remove(string)", span="572-572"];
m44_127 [cluster="Newtonsoft.Json.Linq.JObject.Parse(string, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JObject.cs", label="JObject o = Load(reader, settings)", span="427-427"];
m44_131 [cluster="Newtonsoft.Json.Linq.JObject.Parse(string, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JObject.cs", label="Exit Newtonsoft.Json.Linq.JObject.Parse(string, Newtonsoft.Json.Linq.JsonLoadSettings)", span="423-423"];
m44_145 [cluster="Newtonsoft.Json.Linq.JObject.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JObject.cs", label="Entry Newtonsoft.Json.Linq.JObject.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="471-471"];
m44_152 [cluster="Newtonsoft.Json.Linq.JObject.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JObject.cs", label="Exit Newtonsoft.Json.Linq.JObject.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="471-471"];
m44_158 [cluster="Newtonsoft.Json.Linq.JObject.GetValue(string)", file="JObject.cs", label="Exit Newtonsoft.Json.Linq.JObject.GetValue(string)", span="488-488"];
m44_165 [cluster="Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", file="JObject.cs", label="comparison != StringComparison.Ordinal", span="516-516"];
m44_172 [cluster="Newtonsoft.Json.Linq.JObject.TryGetValue(string, System.StringComparison, out Newtonsoft.Json.Linq.JToken)", file="JObject.cs", label="Entry Newtonsoft.Json.Linq.JObject.TryGetValue(string, System.StringComparison, out Newtonsoft.Json.Linq.JToken)", span="539-539"];
m44_178 [cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", file="JObject.cs", label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", span="316-316"];
m44_184 [cluster="Newtonsoft.Json.Linq.JObject.Remove(string)", file="JObject.cs", label="JProperty property = Property(propertyName)", span="574-574"];
m44_125 [cluster="Newtonsoft.Json.Linq.JObject.Parse(string, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JObject.cs", label="Entry Newtonsoft.Json.Linq.JObject.Parse(string, Newtonsoft.Json.Linq.JsonLoadSettings)", span="423-423"];
m44_133 [cluster="System.IO.StringReader.StringReader(string)", file="JObject.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m44_134 [cluster="Newtonsoft.Json.Linq.JObject.FromObject(object)", file="JObject.cs", label="Entry Newtonsoft.Json.Linq.JObject.FromObject(object)", span="443-443"];
m44_147 [cluster="Newtonsoft.Json.Linq.JObject.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JObject.cs", label="int i = 0", span="475-475"];
m44_148 [cluster="Newtonsoft.Json.Linq.JObject.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JObject.cs", label="i < _properties.Count", span="475-475"];
m44_154 [cluster="Newtonsoft.Json.Linq.JToken.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JObject.cs", label="Entry Newtonsoft.Json.Linq.JToken.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="414-414"];
m44_160 [cluster="Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", file="JObject.cs", label="propertyName == null", span="503-503"];
m44_161 [cluster="Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", file="JObject.cs", label="return null;", span="505-505"];
m44_167 [cluster="Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", file="JObject.cs", label="string.Equals(p.Name, propertyName, comparison)", span="520-520"];
m44_168 [cluster="Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", file="JObject.cs", label="return p.Value;", span="522-522"];
m44_174 [cluster="Newtonsoft.Json.Linq.JObject.TryGetValue(string, System.StringComparison, out Newtonsoft.Json.Linq.JToken)", file="JObject.cs", label="return (value != null);", span="542-542"];
m44_186 [cluster="Newtonsoft.Json.Linq.JObject.Remove(string)", file="JObject.cs", label="return false;", span="577-577"];
m44_187 [cluster="Newtonsoft.Json.Linq.JObject.Remove(string)", file="JObject.cs", label="property.Remove()", span="580-580"];
m44_189 [cluster="Newtonsoft.Json.Linq.JObject.Remove(string)", file="JObject.cs", label="Exit Newtonsoft.Json.Linq.JObject.Remove(string)", span="572-572"];
m44_118 [cluster="Newtonsoft.Json.JsonReader.MoveToContent()", file="JObject.cs", label="Entry Newtonsoft.Json.JsonReader.MoveToContent()", span="1153-1153"];
m44_126 [cluster="Newtonsoft.Json.Linq.JObject.Parse(string, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JObject.cs", label="JsonReader reader = new JsonTextReader(new StringReader(json))", span="425-425"];
m44_132 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JObject.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="75-75"];
m44_146 [cluster="Newtonsoft.Json.Linq.JObject.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JObject.cs", label="writer.WriteStartObject()", span="473-473"];
m44_153 [cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="JObject.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="405-405"];
m44_159 [cluster="Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", file="JObject.cs", label="Entry Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", span="501-501"];
m44_166 [cluster="Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", file="JObject.cs", label=_properties, span="518-518"];
m44_173 [cluster="Newtonsoft.Json.Linq.JObject.TryGetValue(string, System.StringComparison, out Newtonsoft.Json.Linq.JToken)", file="JObject.cs", label="value = GetValue(propertyName, comparison)", span="541-541"];
m44_185 [cluster="Newtonsoft.Json.Linq.JObject.Remove(string)", file="JObject.cs", label="property == null", span="575-575"];
m44_188 [cluster="Newtonsoft.Json.Linq.JObject.Remove(string)", file="JObject.cs", label="return true;", span="581-581"];
m44_117 [cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", file="JObject.cs", label="Entry Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", span="108-108"];
m44_191 [cluster="Newtonsoft.Json.Linq.JObject.TryGetValue(string, out Newtonsoft.Json.Linq.JToken)", file="JObject.cs", label="Entry Newtonsoft.Json.Linq.JObject.TryGetValue(string, out Newtonsoft.Json.Linq.JToken)", span="590-590"];
m44_62 [cluster="Newtonsoft.Json.Linq.JContainer.Merge(object, Newtonsoft.Json.Linq.JsonMergeSettings)", file="JObject.cs", label="Entry Newtonsoft.Json.Linq.JContainer.Merge(object, Newtonsoft.Json.Linq.JsonMergeSettings)", span="725-725"];
m44_314 [cluster="Newtonsoft.Json.Linq.JObject.JObjectDynamicProxy.GetDynamicMemberNames(Newtonsoft.Json.Linq.JObject)", file="JObject.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObjectDynamicProxy.GetDynamicMemberNames(Newtonsoft.Json.Linq.JObject)", span="828-828"];
m44_411 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_ArrayBase_PropertyToken()", file="JObject.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_ArrayBase_PropertyToken()", span="646-646"];
m44_414 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_ArrayBase_PropertyToken()", file="JObject.cs", label="Assert.AreEqual(''[0]'', reader.Path)", span="655-655"];
m44_416 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_ArrayBase_PropertyToken()", file="JObject.cs", label="Assert.AreEqual(''[0]'', reader.Path)", span="658-658"];
m44_418 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_ArrayBase_PropertyToken()", file="JObject.cs", label="Assert.AreEqual(''[0].prop1'', reader.Path)", span="661-661"];
m44_420 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_ArrayBase_PropertyToken()", file="JObject.cs", label="Assert.AreEqual(''[0].prop1'', reader.Path)", span="664-664"];
m44_422 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_ArrayBase_PropertyToken()", file="JObject.cs", label="Assert.AreEqual(''[0]'', reader.Path)", span="667-667"];
m44_424 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_ArrayBase_PropertyToken()", file="JObject.cs", label="Assert.AreEqual(''[0]'', reader.Path)", span="670-670"];
m44_415 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_ArrayBase_PropertyToken()", file="JObject.cs", label="Assert.IsTrue(reader.Read())", span="657-657"];
m44_417 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_ArrayBase_PropertyToken()", file="JObject.cs", label="Assert.IsTrue(reader.Read())", span="660-660"];
m44_419 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_ArrayBase_PropertyToken()", file="JObject.cs", label="Assert.IsTrue(reader.Read())", span="663-663"];
m44_421 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_ArrayBase_PropertyToken()", file="JObject.cs", label="Assert.IsTrue(reader.Read())", span="666-666"];
m44_423 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_ArrayBase_PropertyToken()", file="JObject.cs", label="Assert.IsFalse(reader.Read())", span="669-669"];
m44_413 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_ArrayBase_PropertyToken()", file="JObject.cs", label="JTokenReader reader = new JTokenReader(o, ''[0]'')", span="653-653"];
m44_412 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_ArrayBase_PropertyToken()", file="JObject.cs", label="JObject o = new JObject\r\n            {\r\n                { ''prop1'', true }\r\n            }", span="648-651"];
m44_425 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_ArrayBase_PropertyToken()", file="JObject.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_ArrayBase_PropertyToken()", span="646-646"];
m44_291 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalInt()", file="JObject.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="471-471"];
m44_292 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalInt()", file="JObject.cs", label="reader.ReadAsDecimal()", span="473-473"];
m44_293 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalInt()", file="JObject.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="474-474"];
m44_40 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", file="JObject.cs", label="Assert.AreEqual(JsonToken.String, jsonReader.TokenType)", span="108-108"];
m44_289 [cluster="Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetEvents(System.Attribute[])", file="JObject.cs", label="return EventDescriptorCollection.Empty;", span="776-776"];
m44_294 [cluster="Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)", file="JObject.cs", label="Entry Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)", span="784-784"];
m44_295 [cluster="Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)", file="JObject.cs", label="return null;", span="786-786"];
m44_288 [cluster="Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetEvents(System.Attribute[])", file="JObject.cs", label="Entry Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetEvents(System.Attribute[])", span="774-774"];
m44_290 [cluster="Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetEvents(System.Attribute[])", file="JObject.cs", label="Exit Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetEvents(System.Attribute[])", span="774-774"];
m44_296 [cluster="Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)", file="JObject.cs", label="Exit Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)", span="784-784"];
m44_75 [cluster="Newtonsoft.Json.JsonReader.Read()", file="JObject.cs", label="Entry Newtonsoft.Json.JsonReader.Read()", span="365-365"];
m44_76 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetBadString()", file="JObject.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetBadString()", span="142-142"];
m44_77 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetBadString()", file="JObject.cs", label="string json = @''{''''Offset'''':''''blablahbla''''}''", span="144-144"];
m44_209 [cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Contains(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", file="JObject.cs", label="return false;", span="629-629"];
m44_6 [cluster="lambda expression", file="JObject.cs", label="Entry lambda expression", span="55-60"];
m44_7 [cluster="lambda expression", color=green, community=0, file="JObject.cs", label="JsonSerializer serializer = new JsonSerializer()", prediction=8, span="57-57"];
m44_8 [cluster="lambda expression", file="JObject.cs", label="serializer.Deserialize<TraceTestObject>(json.CreateReader())", span="59-59"];
m44_211 [cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Contains(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", file="JObject.cs", label="Exit Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Contains(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", span="624-624"];
m44_241 [cluster="Newtonsoft.Json.Linq.JObject.GetEnumerator()", file="JObject.cs", label="Entry Newtonsoft.Json.Linq.JObject.GetEnumerator()", span="690-690"];
m44_43 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", file="JObject.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonReader.TokenType)", span="112-112"];
m44_297 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimal()", file="JObject.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsDecimal()", span="389-389"];
m44_298 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32Int()", file="JObject.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32Int()", span="480-480"];
m44_299 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32Int()", file="JObject.cs", label="string json = @''{''''Name'''':1}''", span="482-482"];
m44_272 [cluster="Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetComponentName()", file="JObject.cs", label="Entry Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetComponentName()", span="749-749"];
m44_61 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", file="JObject.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", span="65-65"];
m44_409 [cluster="Newtonsoft.Json.Linq.JObject.JObject()", file="JObject.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject()", span="87-87"];
m44_0 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ErrorTokenIndex()", file="JObject.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ErrorTokenIndex()", span="51-51"];
m44_1 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ErrorTokenIndex()", file="JObject.cs", label="JObject json = JObject.Parse(@''{''''IntList'''':[1, ''''two'''']}'')", span="53-53"];
m44_100 [cluster="lambda expression", file="JObject.cs", label="Entry lambda expression", span="174-174"];
m44_101 [cluster="lambda expression", file="JObject.cs", label="reader.ReadAsDateTimeOffset()", span="174-174"];
m44_102 [cluster="lambda expression", file="JObject.cs", label="Exit lambda expression", span="174-174"];
m44_103 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetString()", file="JObject.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetString()", span="178-178"];
m44_104 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetString()", file="JObject.cs", label="string json = @''{''''Offset'''':''''2012-01-24T03:50Z''''}''", span="180-180"];
m44_105 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetString()", file="JObject.cs", label="JObject o = JObject.Parse(json)", span="182-182"];
m44_106 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetString()", file="JObject.cs", label="JsonReader reader = o.CreateReader()", span="184-184"];
m44_107 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetString()", file="JObject.cs", label="Assert.IsTrue(reader.Read())", span="186-186"];
m44_108 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetString()", file="JObject.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="187-187"];
m44_109 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetString()", file="JObject.cs", label="Assert.IsTrue(reader.Read())", span="189-189"];
m44_110 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetString()", file="JObject.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="190-190"];
m44_112 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetString()", file="JObject.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="193-193"];
m44_113 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetString()", file="JObject.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="194-194"];
m44_111 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetString()", file="JObject.cs", label="reader.ReadAsDateTimeOffset()", span="192-192"];
m44_114 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetString()", file="JObject.cs", label="Assert.AreEqual(new DateTimeOffset(2012, 1, 24, 3, 50, 0, TimeSpan.Zero), reader.Value)", span="195-195"];
m44_115 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetString()", file="JObject.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetString()", span="178-178"];
m44_306 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32Int()", file="JObject.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="493-493"];
m44_307 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32Int()", file="JObject.cs", label="Assert.AreEqual(o.Property(''Name''), reader.CurrentToken)", span="494-494"];
m44_309 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32Int()", file="JObject.cs", label="Assert.AreEqual(o[''Name''], reader.CurrentToken)", span="497-497"];
m44_310 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32Int()", file="JObject.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="498-498"];
m44_308 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32Int()", file="JObject.cs", label="reader.ReadAsInt32()", span="496-496"];
m44_311 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32Int()", file="JObject.cs", label="Assert.AreEqual(typeof(int), reader.ValueType)", span="499-499"];
m44_312 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32Int()", file="JObject.cs", label="Assert.AreEqual(1, reader.Value)", span="500-500"];
m44_328 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32()", file="JObject.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsInt32()", span="371-371"];
m44_235 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.HasBytes.HasBytes()", file="JObject.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenReaderTest.HasBytes.HasBytes()", span="354-354"];
m44_278 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.DeserializeStringInt()", file="JObject.cs", label="JsonSerializer serializer = new JsonSerializer()", span="447-447"];
m44_226 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadBytesFromString()", file="JObject.cs", label="var bytes = new HasBytes { Bytes = new byte[] { 1, 2, 3, 4 } }", span="362-362"];
m44_71 [cluster="Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", file="JObject.cs", label="Entry Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", span="38-38"];
m44_300 [cluster="Newtonsoft.Json.Utilities.DynamicProxyMetaObject<T>.DynamicProxyMetaObject(System.Linq.Expressions.Expression, T, Newtonsoft.Json.Utilities.DynamicProxy<T>)", file="JObject.cs", label="Entry Newtonsoft.Json.Utilities.DynamicProxyMetaObject<T>.DynamicProxyMetaObject(System.Linq.Expressions.Expression, T, Newtonsoft.Json.Utilities.DynamicProxy<T>)", span="38-38"];
m44_301 [cluster="Newtonsoft.Json.Linq.JObject.JObjectDynamicProxy.JObjectDynamicProxy()", file="JObject.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObjectDynamicProxy.JObjectDynamicProxy()", span="805-805"];
m44_313 [cluster="Newtonsoft.Json.Linq.JValue.JValue(object)", file="JObject.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(object)", span="191-191"];
m44_73 [cluster="System.Collections.Specialized.NotifyCollectionChangedEventArgs.NotifyCollectionChangedEventArgs(System.Collections.Specialized.NotifyCollectionChangedAction, System.Collections.IList, System.Collections.IList, int)", file="JObject.cs", label="Entry System.Collections.Specialized.NotifyCollectionChangedEventArgs.NotifyCollectionChangedEventArgs(System.Collections.Specialized.NotifyCollectionChangedAction, System.Collections.IList, System.Collections.IList, int)", span="0-0"];
m44_39 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", file="JObject.cs", label="jsonReader.Read()", span="107-107"];
m44_63 [cluster="Newtonsoft.Json.Linq.JObject.InternalPropertyChanged(Newtonsoft.Json.Linq.JProperty)", file="JObject.cs", label="Entry Newtonsoft.Json.Linq.JObject.InternalPropertyChanged(Newtonsoft.Json.Linq.JProperty)", span="207-207"];
m44_95 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetBoolean()", file="JObject.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="169-169"];
m44_45 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", file="JObject.cs", label="jsonReader.Read()", span="115-115"];
m44_46 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", file="JObject.cs", label="Assert.AreEqual(JsonToken.Null, jsonReader.TokenType)", span="116-116"];
m44_56 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", file="JObject.cs", label="Assert.IsTrue(jsonReader.Read())", span="132-132"];
m44_58 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", file="JObject.cs", label="Assert.AreEqual(new DateTimeOffset(2000, 10, 15, 5, 5, 5, new TimeSpan(11, 11, 0)), jsonReader.Value)", span="134-134"];
m44_47 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", file="JObject.cs", label="Assert.AreEqual(null, jsonReader.Value)", span="117-117"];
m44_49 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", file="JObject.cs", label="Assert.AreEqual(JsonToken.EndObject, jsonReader.TokenType)", span="120-120"];
m44_48 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", file="JObject.cs", label="Assert.IsTrue(jsonReader.Read())", span="119-119"];
m44_50 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", file="JObject.cs", label="Assert.IsFalse(jsonReader.Read())", span="122-122"];
m44_51 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", file="JObject.cs", label="Assert.AreEqual(JsonToken.None, jsonReader.TokenType)", span="123-123"];
m44_52 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", file="JObject.cs", label="JsonReader jsonReader = new JTokenReader(o.Property(''Test2''))", span="126-126"];
m44_53 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", file="JObject.cs", label="Assert.IsTrue(jsonReader.Read())", span="128-128"];
m44_54 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", file="JObject.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonReader.TokenType)", span="129-129"];
m44_57 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", file="JObject.cs", label="Assert.AreEqual(JsonToken.Date, jsonReader.TokenType)", span="133-133"];
m44_55 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", file="JObject.cs", label="Assert.AreEqual(''Test2'', jsonReader.Value)", span="130-130"];
m44_59 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", file="JObject.cs", label="Assert.IsFalse(jsonReader.Read())", span="136-136"];
m44_12 [cluster="Newtonsoft.Json.Linq.JObject.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JObject.cs", label="t == null", span="122-122"];
m44_21 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", file="JObject.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonReader.TokenType)", span="84-84"];
m44_22 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", file="JObject.cs", label="Assert.AreEqual(''Test1'', jsonReader.Value)", span="85-85"];
m44_24 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", file="JObject.cs", label="jsonReader.Read()", span="88-88"];
m44_23 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", file="JObject.cs", label="Assert.AreEqual(false, lineInfo.HasLineInfo())", span="86-86"];
m44_25 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", file="JObject.cs", label="Assert.AreEqual(JsonToken.Date, jsonReader.TokenType)", span="89-89"];
m44_238 [cluster="Newtonsoft.Json.Linq.JObject.GetDeepHashCode()", file="JObject.cs", label="return ContentsHashCode();", span="681-681"];
m44_2 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ErrorTokenIndex()", color=green, community=0, file="JObject.cs", label="ExceptionAssert.Throws<Exception>(() =>\r\n            {\r\n                JsonSerializer serializer = new JsonSerializer();\r\n\r\n                serializer.Deserialize<TraceTestObject>(json.CreateReader());\r\n            }, ''Could not convert string to integer: two. Path 'IntList[1]', line 1, position 20.'')", prediction=9, span="55-60"];
m44_3 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ErrorTokenIndex()", file="JObject.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ErrorTokenIndex()", span="51-51"];
m44_271 [cluster="Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetClassName()", file="JObject.cs", label="Exit Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetClassName()", span="744-744"];
m44_275 [cluster="Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetConverter()", file="JObject.cs", label="Entry Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetConverter()", span="754-754"];
m44_281 [cluster="Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent()", file="JObject.cs", label="Exit Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent()", span="759-759"];
m44_277 [cluster="Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetConverter()", file="JObject.cs", label="Exit Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetConverter()", span="754-754"];
m44_279 [cluster="Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent()", file="JObject.cs", label="Entry Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent()", span="759-759"];
m44_280 [cluster="Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent()", file="JObject.cs", label="return null;", span="761-761"];
m44_276 [cluster="Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetConverter()", file="JObject.cs", label="return new TypeConverter();", span="756-756"];
m44_74 [cluster="Newtonsoft.Json.Linq.JObject.Property(string)", file="JObject.cs", label="Entry Newtonsoft.Json.Linq.JObject.Property(string)", span="239-239"];
m44_96 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetBoolean()", file="JObject.cs", label="Assert.IsTrue(reader.Read())", span="171-171"];
m44_82 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetBadString()", file="JObject.cs", label="Assert.IsTrue(reader.Read())", span="153-153"];
m44_83 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetBadString()", file="JObject.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="154-154"];
m44_84 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetBadString()", file="JObject.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDateTimeOffset(); }, ''Could not convert string to DateTimeOffset: blablahbla. Path 'Offset', line 1, position 22.'')", span="156-156"];
m44_315 [cluster="Newtonsoft.Json.Linq.JObject.JObjectDynamicProxy.GetDynamicMemberNames(Newtonsoft.Json.Linq.JObject)", file="JObject.cs", label="return instance.Properties().Select(p => p.Name);", span="830-830"];
m44_323 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32BadString()", file="JObject.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsInt32(); }, ''Could not convert string to integer: hi. Path 'Name', line 1, position 12.'')", span="518-518"];
m44_320 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32BadString()", file="JObject.cs", label="Newtonsoft.Json.Linq.JObject", span=""];
m44_322 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32BadString()", file="JObject.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="516-516"];
m44_317 [cluster="lambda expression", file="JObject.cs", label="Entry lambda expression", span="830-830"];
m44_318 [cluster="lambda expression", file="JObject.cs", label="p.Name", span="830-830"];
m44_319 [cluster="lambda expression", file="JObject.cs", label="Exit lambda expression", span="830-830"];
m44_321 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32BadString()", file="JObject.cs", label="Assert.IsTrue(reader.Read())", span="515-515"];
m44_316 [cluster="Newtonsoft.Json.Linq.JObject.JObjectDynamicProxy.GetDynamicMemberNames(Newtonsoft.Json.Linq.JObject)", file="JObject.cs", label="Exit Newtonsoft.Json.Linq.JObject.JObjectDynamicProxy.GetDynamicMemberNames(Newtonsoft.Json.Linq.JObject)", span="828-828"];
m44_324 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32BadString()", file="JObject.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32BadString()", span="504-504"];
m44_67 [cluster="Newtonsoft.Json.Linq.JObject.InternalPropertyChanged(Newtonsoft.Json.Linq.JProperty)", file="JObject.cs", label="_collectionChanged != null", span="217-217"];
m44_355 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalBadString()", file="JObject.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalBadString()", span="561-561"];
m44_363 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalBadString()", file="JObject.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDecimal(); }, ''Could not convert string to decimal: blah. Path 'Name', line 1, position 14.'')", span="575-575"];
m44_360 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalBadString()", file="JObject.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="570-570"];
m44_362 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalBadString()", file="JObject.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="573-573"];
m44_357 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalBadString()", file="JObject.cs", label="JObject o = JObject.Parse(json)", span="565-565"];
m44_358 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalBadString()", file="JObject.cs", label="JsonReader reader = o.CreateReader()", span="567-567"];
m44_359 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalBadString()", file="JObject.cs", label="Assert.IsTrue(reader.Read())", span="569-569"];
m44_361 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalBadString()", file="JObject.cs", label="Assert.IsTrue(reader.Read())", span="572-572"];
m44_356 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalBadString()", file="JObject.cs", label="string json = @''{''''Name'''':''''blah''''}''", span="563-563"];
m44_364 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalBadString()", file="JObject.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalBadString()", span="561-561"];
m44_273 [cluster="Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetComponentName()", file="JObject.cs", label="return null;", span="751-751"];
m44_13 [cluster="Newtonsoft.Json.Linq.JObject.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JObject.cs", label="return false;", span="124-124"];
m44_16 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Compare(Newtonsoft.Json.Linq.JPropertyKeyedCollection)", color=green, community=0, file="JObject.cs", label="Entry Newtonsoft.Json.Linq.JPropertyKeyedCollection.Compare(Newtonsoft.Json.Linq.JPropertyKeyedCollection)", prediction=10, span="226-226"];
m44_15 [cluster="Newtonsoft.Json.Linq.JObject.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JObject.cs", label="Exit Newtonsoft.Json.Linq.JObject.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="119-119"];
m44_17 [cluster="Newtonsoft.Json.Linq.JObject.IndexOfItem(Newtonsoft.Json.Linq.JToken)", file="JObject.cs", label="Entry Newtonsoft.Json.Linq.JObject.IndexOfItem(Newtonsoft.Json.Linq.JToken)", span="130-130"];
m44_19 [cluster="Newtonsoft.Json.Linq.JObject.IndexOfItem(Newtonsoft.Json.Linq.JToken)", file="JObject.cs", label="Exit Newtonsoft.Json.Linq.JObject.IndexOfItem(Newtonsoft.Json.Linq.JToken)", span="130-130"];
m44_27 [cluster="Newtonsoft.Json.Linq.JObject.ValidateToken(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JObject.cs", label="Entry Newtonsoft.Json.Linq.JObject.ValidateToken(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="146-146"];
m44_28 [cluster="Newtonsoft.Json.Linq.JObject.ValidateToken(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JObject.cs", label="ValidationUtils.ArgumentNotNull(o, nameof(o))", span="148-148"];
m44_29 [cluster="Newtonsoft.Json.Linq.JObject.ValidateToken(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JObject.cs", label="o.Type != JTokenType.Property", span="150-150"];
m44_14 [cluster="Newtonsoft.Json.Linq.JObject.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JObject.cs", label="return _properties.Compare(t._properties);", span="127-127"];
m44_18 [cluster="Newtonsoft.Json.Linq.JObject.IndexOfItem(Newtonsoft.Json.Linq.JToken)", file="JObject.cs", label="return _properties.IndexOfReference(item);", span="132-132"];
m44_20 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.IndexOfReference(Newtonsoft.Json.Linq.JToken)", file="JObject.cs", label="Entry Newtonsoft.Json.Linq.JPropertyKeyedCollection.IndexOfReference(Newtonsoft.Json.Linq.JToken)", span="221-221"];
m44_30 [cluster="Newtonsoft.Json.Linq.JObject.ValidateToken(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JObject.cs", label="throw new ArgumentException(''Can not add {0} to {1}.''.FormatWith(CultureInfo.InvariantCulture, o.GetType(), GetType()));", span="152-152"];
m44_31 [cluster="Newtonsoft.Json.Linq.JObject.ValidateToken(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JObject.cs", label="JProperty newProperty = (JProperty)o", span="155-155"];
m44_32 [cluster="Newtonsoft.Json.Linq.JObject.ValidateToken(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JObject.cs", label="existing != null", span="157-157"];
m44_33 [cluster="Newtonsoft.Json.Linq.JObject.ValidateToken(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JObject.cs", label="JProperty existingProperty = (JProperty)existing", span="159-159"];
m44_34 [cluster="Newtonsoft.Json.Linq.JObject.ValidateToken(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JObject.cs", label="newProperty.Name == existingProperty.Name", span="161-161"];
m44_35 [cluster="Newtonsoft.Json.Linq.JObject.ValidateToken(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JObject.cs", label="return;", span="163-163"];
m44_36 [cluster="Newtonsoft.Json.Linq.JObject.ValidateToken(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JObject.cs", label="_properties.TryGetValue(newProperty.Name, out existing)", span="167-167"];
m44_37 [cluster="Newtonsoft.Json.Linq.JObject.ValidateToken(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JObject.cs", label="throw new ArgumentException(''Can not add property {0} to {1}. Property with the same name already exists on object.''.FormatWith(CultureInfo.InvariantCulture, newProperty.Name, GetType()));", span="169-169"];
m44_38 [cluster="Newtonsoft.Json.Linq.JObject.ValidateToken(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JObject.cs", label="Exit Newtonsoft.Json.Linq.JObject.ValidateToken(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="146-146"];
m44_41 [cluster="System.ArgumentException.ArgumentException(string)", file="JObject.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m44_42 [cluster="object.GetType()", file="JObject.cs", label="Entry object.GetType()", span="0-0"];
m44_60 [cluster="Newtonsoft.Json.Linq.JObject.Property(string)", file="JObject.cs", label="Entry Newtonsoft.Json.Linq.JObject.Property(string)", span="259-259"];
m44_66 [cluster="Newtonsoft.Json.Linq.JObject.InternalPropertyChanged(Newtonsoft.Json.Linq.JProperty)", file="JObject.cs", label="OnListChanged(new ListChangedEventArgs(ListChangedType.ItemChanged, IndexOfItem(childProperty)))", span="213-213"];
m44_274 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", file="JObject.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", span="650-650"];
m44_368 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalBoolean()", file="JObject.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalBoolean()", span="579-579"];
m44_376 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalBoolean()", file="JObject.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDecimal(); }, ''Error reading decimal. Unexpected token: Boolean. Path 'Name', line 1, position 12.'')", span="593-593"];
m44_373 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalBoolean()", file="JObject.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="588-588"];
m44_375 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalBoolean()", file="JObject.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="591-591"];
m44_370 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalBoolean()", file="JObject.cs", label="JObject o = JObject.Parse(json)", span="583-583"];
m44_371 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalBoolean()", file="JObject.cs", label="JsonReader reader = o.CreateReader()", span="585-585"];
m44_372 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalBoolean()", file="JObject.cs", label="Assert.IsTrue(reader.Read())", span="587-587"];
m44_374 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalBoolean()", file="JObject.cs", label="Assert.IsTrue(reader.Read())", span="590-590"];
m44_369 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalBoolean()", file="JObject.cs", label="string json = @''{''''Name'''':true}''", span="581-581"];
m44_377 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalBoolean()", file="JObject.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalBoolean()", span="579-579"];
m44_233 [cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Remove(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", file="JObject.cs", label="return true;", span="675-675"];
m44_231 [cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Remove(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", file="JObject.cs", label="return false;", span="671-671"];
m44_232 [cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Remove(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", file="JObject.cs", label="((IDictionary<string, JToken>)this).Remove(item.Key)", span="674-674"];
m44_230 [cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Remove(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", file="JObject.cs", label="!((ICollection<KeyValuePair<string, JToken>>)this).Contains(item)", span="669-669"];
m44_229 [cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Remove(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", file="JObject.cs", label="Entry Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Remove(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", span="667-667"];
m44_228 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="JObject.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m44_227 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", file="JObject.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", span="0-0"];
m44_234 [cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Remove(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", file="JObject.cs", label="Exit Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Remove(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", span="667-667"];
m44_260 [cluster="Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetProperties(System.Attribute[])", file="JObject.cs", label="descriptors.Add(new JPropertyDescriptor(propertyValue.Key))", span="733-733"];
m44_264 [cluster="Newtonsoft.Json.Linq.JPropertyDescriptor.JPropertyDescriptor(string)", file="JObject.cs", label="Entry Newtonsoft.Json.Linq.JPropertyDescriptor.JPropertyDescriptor(string)", span="40-40"];
m44_268 [cluster="Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetAttributes()", file="JObject.cs", label="Exit Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetAttributes()", span="739-739"];
m44_263 [cluster="System.ComponentModel.PropertyDescriptorCollection.PropertyDescriptorCollection(System.ComponentModel.PropertyDescriptor[])", file="JObject.cs", label="Entry System.ComponentModel.PropertyDescriptorCollection.PropertyDescriptorCollection(System.ComponentModel.PropertyDescriptor[])", span="0-0"];
m44_266 [cluster="Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetAttributes()", file="JObject.cs", label="Entry Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetAttributes()", span="739-739"];
m44_265 [cluster="System.ComponentModel.PropertyDescriptorCollection.Add(System.ComponentModel.PropertyDescriptor)", file="JObject.cs", label="Entry System.ComponentModel.PropertyDescriptorCollection.Add(System.ComponentModel.PropertyDescriptor)", span="0-0"];
m44_267 [cluster="Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetAttributes()", file="JObject.cs", label="return AttributeCollection.Empty;", span="741-741"];
m44_269 [cluster="Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetClassName()", file="JObject.cs", label="Entry Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetClassName()", span="744-744"];
m44_262 [cluster="Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetProperties(System.Attribute[])", file="JObject.cs", label="Exit Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetProperties(System.Attribute[])", span="727-727"];
m44_261 [cluster="Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetProperties(System.Attribute[])", file="JObject.cs", label="return descriptors;", span="736-736"];
m44_270 [cluster="Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetClassName()", file="JObject.cs", label="return null;", span="746-746"];
m44_10 [cluster="Newtonsoft.Json.Linq.JObject.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JObject.cs", label="Entry Newtonsoft.Json.Linq.JObject.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="119-119"];
m44_11 [cluster="Newtonsoft.Json.Linq.JObject.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JObject.cs", label="JObject t = node as JObject", span="121-121"];
m44_426 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_PropertyBase_ArrayToken()", file="JObject.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_PropertyBase_ArrayToken()", span="674-674"];
m44_429 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_PropertyBase_ArrayToken()", file="JObject.cs", label="Assert.AreEqual(''baseprop'', reader.Path)", span="683-683"];
m44_431 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_PropertyBase_ArrayToken()", file="JObject.cs", label="Assert.AreEqual(''baseprop'', reader.Path)", span="686-686"];
m44_433 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_PropertyBase_ArrayToken()", file="JObject.cs", label="Assert.AreEqual(''baseprop[0]'', reader.Path)", span="689-689"];
m44_435 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_PropertyBase_ArrayToken()", file="JObject.cs", label="Assert.AreEqual(''baseprop[1]'', reader.Path)", span="692-692"];
m44_437 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_PropertyBase_ArrayToken()", file="JObject.cs", label="Assert.AreEqual(''baseprop'', reader.Path)", span="695-695"];
m44_439 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_PropertyBase_ArrayToken()", file="JObject.cs", label="Assert.AreEqual(''baseprop'', reader.Path)", span="698-698"];
m44_427 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_PropertyBase_ArrayToken()", file="JObject.cs", label="JArray a = new JArray\r\n            {\r\n                1, 2\r\n            }", span="676-679"];
m44_430 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_PropertyBase_ArrayToken()", file="JObject.cs", label="Assert.IsTrue(reader.Read())", span="685-685"];
m44_432 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_PropertyBase_ArrayToken()", file="JObject.cs", label="Assert.IsTrue(reader.Read())", span="688-688"];
m44_434 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_PropertyBase_ArrayToken()", file="JObject.cs", label="Assert.IsTrue(reader.Read())", span="691-691"];
m44_436 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_PropertyBase_ArrayToken()", file="JObject.cs", label="Assert.IsTrue(reader.Read())", span="694-694"];
m44_438 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_PropertyBase_ArrayToken()", file="JObject.cs", label="Assert.IsFalse(reader.Read())", span="697-697"];
m44_428 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_PropertyBase_ArrayToken()", file="JObject.cs", label="JTokenReader reader = new JTokenReader(a, ''baseprop'')", span="681-681"];
m44_440 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_PropertyBase_ArrayToken()", file="JObject.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_PropertyBase_ArrayToken()", span="674-674"];
m44_206 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadBytes()", file="JObject.cs", label="Assert.AreEqual(JsonToken.None, jsonReader.TokenType)", span="326-326"];
m44_207 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadBytes()", file="JObject.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadBytes()", span="301-301"];
m44_208 [cluster="System.Text.Encoding.GetBytes(string)", file="JObject.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m44_70 [cluster="Newtonsoft.Json.Linq.JObject.OnPropertyChanged(string)", file="JObject.cs", label="Entry Newtonsoft.Json.Linq.JObject.OnPropertyChanged(string)", span="702-702"];
m44_394 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_PropertyBase_PropertyToken()", file="JObject.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_PropertyBase_PropertyToken()", span="618-618"];
m44_397 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_PropertyBase_PropertyToken()", file="JObject.cs", label="Assert.AreEqual(''baseprop'', reader.Path)", span="627-627"];
m44_399 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_PropertyBase_PropertyToken()", file="JObject.cs", label="Assert.AreEqual(''baseprop'', reader.Path)", span="630-630"];
m44_401 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_PropertyBase_PropertyToken()", file="JObject.cs", label="Assert.AreEqual(''baseprop.prop1'', reader.Path)", span="633-633"];
m44_403 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_PropertyBase_PropertyToken()", file="JObject.cs", label="Assert.AreEqual(''baseprop.prop1'', reader.Path)", span="636-636"];
m44_405 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_PropertyBase_PropertyToken()", file="JObject.cs", label="Assert.AreEqual(''baseprop'', reader.Path)", span="639-639"];
m44_407 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_PropertyBase_PropertyToken()", file="JObject.cs", label="Assert.AreEqual(''baseprop'', reader.Path)", span="642-642"];
m44_398 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_PropertyBase_PropertyToken()", file="JObject.cs", label="Assert.IsTrue(reader.Read())", span="629-629"];
m44_400 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_PropertyBase_PropertyToken()", file="JObject.cs", label="Assert.IsTrue(reader.Read())", span="632-632"];
m44_402 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_PropertyBase_PropertyToken()", file="JObject.cs", label="Assert.IsTrue(reader.Read())", span="635-635"];
m44_404 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_PropertyBase_PropertyToken()", file="JObject.cs", label="Assert.IsTrue(reader.Read())", span="638-638"];
m44_406 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_PropertyBase_PropertyToken()", file="JObject.cs", label="Assert.IsFalse(reader.Read())", span="641-641"];
m44_396 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_PropertyBase_PropertyToken()", file="JObject.cs", label="JTokenReader reader = new JTokenReader(o, ''baseprop'')", span="625-625"];
m44_395 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_PropertyBase_PropertyToken()", file="JObject.cs", label="JObject o = new JObject\r\n            {\r\n                { ''prop1'', true }\r\n            }", span="620-623"];
m44_408 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_PropertyBase_PropertyToken()", file="JObject.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_PropertyBase_PropertyToken()", span="618-618"];
m44_79 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetBadString()", file="JObject.cs", label="JsonReader reader = o.CreateReader()", span="148-148"];
m44_80 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetBadString()", file="JObject.cs", label="Assert.IsTrue(reader.Read())", span="150-150"];
m44_81 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetBadString()", file="JObject.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="151-151"];
m44_192 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadBytes()", file="JObject.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadBytes()", span="301-301"];
m44_193 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadBytes()", file="JObject.cs", label="byte[] data = Encoding.UTF8.GetBytes(''Hello world!'')", span="303-303"];
m44_196 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadBytes()", file="JObject.cs", label="jsonReader.Read()", span="312-312"];
m44_194 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadBytes()", file="JObject.cs", label="JObject o =\r\n                new JObject(\r\n                    new JProperty(''Test1'', data)\r\n                    )", span="305-308"];
m44_195 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadBytes()", file="JObject.cs", label="JTokenReader jsonReader = new JTokenReader(o)", span="310-310"];
m44_197 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadBytes()", file="JObject.cs", label="Assert.AreEqual(JsonToken.StartObject, jsonReader.TokenType)", span="313-313"];
m44_198 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadBytes()", file="JObject.cs", label="jsonReader.Read()", span="315-315"];
m44_199 [cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Add(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", file="JObject.cs", label="Entry Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Add(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", span="614-614"];
m44_200 [cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Add(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", file="JObject.cs", label="Add(new JProperty(item.Key, item.Value))", span="616-616"];
m44_201 [cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Add(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", file="JObject.cs", label="Exit Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Add(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", span="614-614"];
m44_65 [cluster="Newtonsoft.Json.Linq.JObject.InternalPropertyChanged(Newtonsoft.Json.Linq.JProperty)", file="JObject.cs", label="_listChanged != null", span="211-211"];
m44_381 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalNull()", file="JObject.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalNull()", span="597-597"];
m44_386 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalNull()", file="JObject.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="606-606"];
m44_388 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalNull()", file="JObject.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="609-609"];
m44_390 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalNull()", file="JObject.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="612-612"];
m44_391 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalNull()", file="JObject.cs", label="Assert.AreEqual(null, reader.ValueType)", span="613-613"];
m44_392 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalNull()", file="JObject.cs", label="Assert.AreEqual(null, reader.Value)", span="614-614"];
m44_383 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalNull()", file="JObject.cs", label="JObject o = JObject.Parse(json)", span="601-601"];
m44_384 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalNull()", file="JObject.cs", label="JsonReader reader = o.CreateReader()", span="603-603"];
m44_385 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalNull()", file="JObject.cs", label="Assert.IsTrue(reader.Read())", span="605-605"];
m44_387 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalNull()", file="JObject.cs", label="Assert.IsTrue(reader.Read())", span="608-608"];
m44_389 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalNull()", file="JObject.cs", label="reader.ReadAsDecimal()", span="611-611"];
m44_382 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalNull()", file="JObject.cs", label="string json = @''{''''Name'''':null}''", span="599-599"];
m44_393 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalNull()", file="JObject.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalNull()", span="597-597"];
m44_378 [cluster="lambda expression", file="JObject.cs", label="Entry lambda expression", span="593-593"];
m44_97 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetBoolean()", file="JObject.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="172-172"];
m44_98 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetBoolean()", file="JObject.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDateTimeOffset(); }, ''Error reading date. Unexpected token: Boolean. Path 'Offset', line 1, position 14.'')", span="174-174"];
m44_99 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetBoolean()", file="JObject.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetBoolean()", span="160-160"];
m44_9 [cluster="Newtonsoft.Json.Linq.JContainer.Add(object)", file="JObject.cs", label="Entry Newtonsoft.Json.Linq.JContainer.Add(object)", span="631-631"];
m44_86 [cluster="Newtonsoft.Json.Linq.JObject.Property(string)", file="JObject.cs", label="name == null", span="261-261"];
m44_325 [cluster="lambda expression", file="JObject.cs", label="Entry lambda expression", span="518-518"];
m44_339 [cluster="lambda expression", file="JObject.cs", label="Entry lambda expression", span="536-536"];
m44_365 [cluster="lambda expression", file="JObject.cs", label="Entry lambda expression", span="575-575"];
m44_87 [cluster="Newtonsoft.Json.Linq.JObject.Property(string)", file="JObject.cs", label="return null;", span="263-263"];
m44_88 [cluster="Newtonsoft.Json.Linq.JObject.Property(string)", file="JObject.cs", label="JToken property", span="266-266"];
m44_326 [cluster="lambda expression", file="JObject.cs", label="reader.ReadAsInt32()", span="518-518"];
m44_327 [cluster="lambda expression", file="JObject.cs", label="Exit lambda expression", span="518-518"];
m44_340 [cluster="lambda expression", file="JObject.cs", label="reader.ReadAsInt32()", span="536-536"];
m44_341 [cluster="lambda expression", file="JObject.cs", label="Exit lambda expression", span="536-536"];
m44_366 [cluster="lambda expression", file="JObject.cs", label="reader.ReadAsDecimal()", span="575-575"];
m44_367 [cluster="lambda expression", file="JObject.cs", label="Exit lambda expression", span="575-575"];
m44_379 [cluster="lambda expression", file="JObject.cs", label="reader.ReadAsDecimal()", span="593-593"];
m44_380 [cluster="lambda expression", file="JObject.cs", label="Exit lambda expression", span="593-593"];
m44_410 [cluster="Newtonsoft.Json.Linq.JTokenReader.JTokenReader(Newtonsoft.Json.Linq.JToken, string)", file="JObject.cs", label="Entry Newtonsoft.Json.Linq.JTokenReader.JTokenReader(Newtonsoft.Json.Linq.JToken, string)", span="59-59"];
m44_239 [cluster="Newtonsoft.Json.Linq.JObject.GetDeepHashCode()", file="JObject.cs", label="Exit Newtonsoft.Json.Linq.JObject.GetDeepHashCode()", span="679-679"];
m44_441 [cluster="Newtonsoft.Json.Linq.JArray.JArray()", file="JObject.cs", label="Entry Newtonsoft.Json.Linq.JArray.JArray()", span="65-65"];
m44_237 [cluster="Newtonsoft.Json.Linq.JObject.GetDeepHashCode()", file="JObject.cs", label="Entry Newtonsoft.Json.Linq.JObject.GetDeepHashCode()", span="679-679"];
m44_257 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsBytesNull()", file="JObject.cs", label="Assert.IsNull(x.Data)", span="409-409"];
m44_258 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsBytesNull()", file="JObject.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsBytesNull()", span="403-403"];
m44_89 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffset()", file="JObject.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsDateTimeOffset()", span="402-402"];
m44_90 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetBoolean()", file="JObject.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetBoolean()", span="160-160"];
m44_91 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetBoolean()", file="JObject.cs", label="string json = @''{''''Offset'''':true}''", span="162-162"];
m44_68 [cluster="Newtonsoft.Json.Linq.JObject.InternalPropertyChanged(Newtonsoft.Json.Linq.JProperty)", file="JObject.cs", label="OnCollectionChanged(new NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Replace, childProperty, childProperty, IndexOfItem(childProperty)))", span="219-219"];
m44_256 [cluster="System.ComponentModel.ICustomTypeDescriptor.GetProperties(System.Attribute[])", file="JObject.cs", label="Entry System.ComponentModel.ICustomTypeDescriptor.GetProperties(System.Attribute[])", span="0-0"];
m44_69 [cluster="Newtonsoft.Json.Linq.JObject.InternalPropertyChanged(Newtonsoft.Json.Linq.JProperty)", file="JObject.cs", label="Exit Newtonsoft.Json.Linq.JObject.InternalPropertyChanged(Newtonsoft.Json.Linq.JProperty)", span="207-207"];
m44_92 [cluster="Newtonsoft.Json.Linq.JObject.PropertyValues()", file="JObject.cs", label="Entry Newtonsoft.Json.Linq.JObject.PropertyValues()", span="275-275"];
m44_93 [cluster="Newtonsoft.Json.Linq.JObject.PropertyValues()", file="JObject.cs", label="return new JEnumerable<JToken>(Properties().Select(p => p.Value));", span="277-277"];
m44_94 [cluster="Newtonsoft.Json.Linq.JObject.PropertyValues()", file="JObject.cs", label="Exit Newtonsoft.Json.Linq.JObject.PropertyValues()", span="275-275"];
m44_64 [cluster="Newtonsoft.Json.Linq.JObject.InternalPropertyChanged(Newtonsoft.Json.Linq.JProperty)", file="JObject.cs", label="OnPropertyChanged(childProperty.Name)", span="209-209"];
m44_342 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalString()", file="JObject.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalString()", span="540-540"];
m44_347 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalString()", file="JObject.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="549-549"];
m44_349 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalString()", file="JObject.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="552-552"];
m44_351 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalString()", file="JObject.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="555-555"];
m44_352 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalString()", file="JObject.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="556-556"];
m44_353 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalString()", file="JObject.cs", label="Assert.AreEqual(1.1m, reader.Value)", span="557-557"];
m44_344 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalString()", file="JObject.cs", label="JObject o = JObject.Parse(json)", span="544-544"];
m44_345 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalString()", file="JObject.cs", label="JsonReader reader = o.CreateReader()", span="546-546"];
m44_346 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalString()", file="JObject.cs", label="Assert.IsTrue(reader.Read())", span="548-548"];
m44_348 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalString()", file="JObject.cs", label="Assert.IsTrue(reader.Read())", span="551-551"];
m44_350 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalString()", file="JObject.cs", label="reader.ReadAsDecimal()", span="554-554"];
m44_343 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalString()", file="JObject.cs", label="string json = @''{''''Name'''':''''1.1''''}''", span="542-542"];
m44_354 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalString()", file="JObject.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalString()", span="540-540"];
m44_329 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32Boolean()", file="JObject.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32Boolean()", span="522-522"];
m44_337 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32Boolean()", file="JObject.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsInt32(); }, ''Error reading integer. Unexpected token: Boolean. Path 'Name', line 1, position 12.'')", span="536-536"];
m44_334 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32Boolean()", file="JObject.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="531-531"];
m44_336 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32Boolean()", file="JObject.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="534-534"];
m44_331 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32Boolean()", file="JObject.cs", label="JObject o = JObject.Parse(json)", span="526-526"];
m44_332 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32Boolean()", file="JObject.cs", label="JsonReader reader = o.CreateReader()", span="528-528"];
m44_333 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32Boolean()", file="JObject.cs", label="Assert.IsTrue(reader.Read())", span="530-530"];
m44_335 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32Boolean()", file="JObject.cs", label="Assert.IsTrue(reader.Read())", span="533-533"];
m44_330 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32Boolean()", file="JObject.cs", label="string json = @''{''''Name'''':true}''", span="524-524"];
m44_338 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32Boolean()", file="JObject.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32Boolean()", span="522-522"];
m44_457 [file="JObject.cs", label=json, span=""];
m44_458 [file="JObject.cs", label=reader, span=""];
m44_459 [file="JObject.cs", label=reader, span=""];
m44_460 [file="JObject.cs", label=reader, span=""];
m44_461 [file="JObject.cs", label=reader, span=""];
m44_462 [file="JObject.cs", label=reader, span=""];
m44_463 [file="JObject.cs", label=reader, span=""];
m45_8 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeExtensionData.DirectoryAccount.DirectoryAccount()", file="JProperty.Async.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeExtensionData.DirectoryAccount.DirectoryAccount()", span="62-62"];
m45_10 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeExtensionData.Example()", file="JProperty.Async.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeExtensionData.Example()", span="70-70"];
m45_9 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JProperty.Async.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m45_11 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeExtensionData.Example()", file="JProperty.Async.cs", label="string json = @''{\r\n              'DisplayName': 'John Smith',\r\n              'SAMAccountName': 'contoso\\johns'\r\n            }''", span="73-76"];
m45_36 [cluster="Newtonsoft.Json.JsonReader.MoveToContentAsync(System.Threading.CancellationToken)", file="JProperty.Async.cs", label="Entry Newtonsoft.Json.JsonReader.MoveToContentAsync(System.Threading.CancellationToken)", span="212-212"];
m45_33 [cluster="Newtonsoft.Json.JsonReader.ReadAsync(System.Threading.CancellationToken)", file="JProperty.Async.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsync(System.Threading.CancellationToken)", span="46-46"];
m45_18 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeExtensionData.Example()", file="JProperty.Async.cs", label="Assert.AreEqual(''johns'', account.UserName)", span="92-92"];
m45_19 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeExtensionData.Example()", file="JProperty.Async.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeExtensionData.Example()", span="70-70"];
m45_20 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="JProperty.Async.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="739-739"];
m45_21 [cluster="System.Console.WriteLine(string)", file="JProperty.Async.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m45_30 [cluster="Newtonsoft.Json.Linq.JProperty.LoadAsync(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings, System.Threading.CancellationToken)", file="JProperty.Async.cs", label="await p.ReadTokenFromAsync(reader, settings, cancellationToken).ConfigureAwait(false)", span="110-110"];
m45_28 [cluster="Newtonsoft.Json.Linq.JProperty.LoadAsync(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings, System.Threading.CancellationToken)", file="JProperty.Async.cs", label="JProperty p = new JProperty((string)reader.Value)", span="107-107"];
m45_29 [cluster="Newtonsoft.Json.Linq.JProperty.LoadAsync(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings, System.Threading.CancellationToken)", file="JProperty.Async.cs", label="p.SetLineInfo(reader as IJsonLineInfo, settings)", span="108-108"];
m45_31 [cluster="Newtonsoft.Json.Linq.JProperty.LoadAsync(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings, System.Threading.CancellationToken)", file="JProperty.Async.cs", label="return p;", span="112-112"];
m45_22 [cluster="Unk.AreEqual", file="JProperty.Async.cs", label="Entry Unk.AreEqual", span=""];
m45_23 [cluster="Newtonsoft.Json.Linq.JProperty.LoadAsync(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings, System.Threading.CancellationToken)", file="JProperty.Async.cs", label="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeExtensionData.DirectoryAccount", span=""];
m45_24 [cluster="Newtonsoft.Json.Linq.JProperty.LoadAsync(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings, System.Threading.CancellationToken)", file="JProperty.Async.cs", label="throw JsonReaderException.Create(reader, ''Error reading JProperty from JsonReader.'');", span="96-96"];
m45_25 [cluster="Newtonsoft.Json.Linq.JProperty.LoadAsync(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings, System.Threading.CancellationToken)", file="JProperty.Async.cs", label="await reader.MoveToContentAsync(cancellationToken).ConfigureAwait(false)", span="100-100"];
m45_26 [cluster="Newtonsoft.Json.Linq.JProperty.LoadAsync(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings, System.Threading.CancellationToken)", file="JProperty.Async.cs", label="reader.TokenType != JsonToken.PropertyName", span="102-102"];
m45_27 [cluster="Newtonsoft.Json.Linq.JProperty.LoadAsync(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings, System.Threading.CancellationToken)", file="JProperty.Async.cs", label="throw JsonReaderException.Create(reader, ''Error reading JProperty from JsonReader. Current JsonReader item is not a property: {0}''.FormatWith(CultureInfo.InvariantCulture, reader.TokenType));", span="104-104"];
m45_32 [cluster="Newtonsoft.Json.Linq.JProperty.LoadAsync(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings, System.Threading.CancellationToken)", file="JProperty.Async.cs", label="Exit Newtonsoft.Json.Linq.JProperty.LoadAsync(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings, System.Threading.CancellationToken)", span="90-90"];
m45_39 [cluster="Newtonsoft.Json.Linq.JToken.SetLineInfo(Newtonsoft.Json.IJsonLineInfo, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JProperty.Async.cs", label="Entry Newtonsoft.Json.Linq.JToken.SetLineInfo(Newtonsoft.Json.IJsonLineInfo, Newtonsoft.Json.Linq.JsonLoadSettings)", span="2228-2228"];
m45_38 [cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string)", file="JProperty.Async.cs", label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string)", span="293-293"];
m45_0 [cluster="Newtonsoft.Json.Linq.JProperty.WriteToAsync(Newtonsoft.Json.JsonWriter, System.Threading.CancellationToken, params Newtonsoft.Json.JsonConverter[])", file="JProperty.Async.cs", label="Entry Newtonsoft.Json.Linq.JProperty.WriteToAsync(Newtonsoft.Json.JsonWriter, System.Threading.CancellationToken, params Newtonsoft.Json.JsonConverter[])", span="43-43"];
m45_1 [cluster="Newtonsoft.Json.Linq.JProperty.WriteToAsync(Newtonsoft.Json.JsonWriter, System.Threading.CancellationToken, params Newtonsoft.Json.JsonConverter[])", file="JProperty.Async.cs", label="Task task = writer.WritePropertyNameAsync(_name, cancellationToken)", span="45-45"];
m45_2 [cluster="Newtonsoft.Json.Linq.JProperty.WriteToAsync(Newtonsoft.Json.JsonWriter, System.Threading.CancellationToken, params Newtonsoft.Json.JsonConverter[])", color=green, community=0, file="JProperty.Async.cs", label="task.Status == TaskStatus.RanToCompletion", prediction=11, span="46-46"];
m45_3 [cluster="Newtonsoft.Json.Linq.JProperty.WriteToAsync(Newtonsoft.Json.JsonWriter, System.Threading.CancellationToken, params Newtonsoft.Json.JsonConverter[])", color=green, community=0, file="JProperty.Async.cs", label="return WriteValueAsync(writer, cancellationToken, converters);", prediction=11, span="48-48"];
m45_4 [cluster="Newtonsoft.Json.Linq.JProperty.WriteToAsync(Newtonsoft.Json.JsonWriter, System.Threading.CancellationToken, params Newtonsoft.Json.JsonConverter[])", color=green, community=0, file="JProperty.Async.cs", label="return WriteToAsync(task, writer, cancellationToken, converters);", prediction=11, span="51-51"];
m45_12 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeExtensionData.Example()", file="JProperty.Async.cs", label="DirectoryAccount account = JsonConvert.DeserializeObject<DirectoryAccount>(json)", span="78-78"];
m45_5 [cluster="Newtonsoft.Json.Linq.JProperty.WriteToAsync(Newtonsoft.Json.JsonWriter, System.Threading.CancellationToken, params Newtonsoft.Json.JsonConverter[])", file="JProperty.Async.cs", label="Exit Newtonsoft.Json.Linq.JProperty.WriteToAsync(Newtonsoft.Json.JsonWriter, System.Threading.CancellationToken, params Newtonsoft.Json.JsonConverter[])", span="43-43"];
m45_6 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyNameAsync(string, System.Threading.CancellationToken)", file="JProperty.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.WritePropertyNameAsync(string, System.Threading.CancellationToken)", span="385-385"];
m45_7 [cluster="Newtonsoft.Json.Linq.JProperty.WriteValueAsync(Newtonsoft.Json.JsonWriter, System.Threading.CancellationToken, Newtonsoft.Json.JsonConverter[])", file="JProperty.Async.cs", label="Entry Newtonsoft.Json.Linq.JProperty.WriteValueAsync(Newtonsoft.Json.JsonWriter, System.Threading.CancellationToken, Newtonsoft.Json.JsonConverter[])", span="61-61"];
m45_40 [cluster="Newtonsoft.Json.Linq.JContainer.ReadTokenFromAsync(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings, System.Threading.CancellationToken)", file="JProperty.Async.cs", label="Entry Newtonsoft.Json.Linq.JContainer.ReadTokenFromAsync(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings, System.Threading.CancellationToken)", span="37-37"];
m45_34 [cluster="System.Threading.Tasks.Task<TResult>.ConfigureAwait(bool)", file="JProperty.Async.cs", label="Entry System.Threading.Tasks.Task<TResult>.ConfigureAwait(bool)", span="0-0"];
m45_16 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeExtensionData.Example()", file="JProperty.Async.cs", label="Assert.AreEqual(''John Smith'', account.DisplayName)", span="90-90"];
m45_13 [cluster="Newtonsoft.Json.Linq.JProperty.WriteValueAsync(Newtonsoft.Json.JsonWriter, System.Threading.CancellationToken, Newtonsoft.Json.JsonConverter[])", file="JProperty.Async.cs", label="JToken value = Value", span="63-63"];
m45_14 [cluster="Newtonsoft.Json.Linq.JProperty.WriteValueAsync(Newtonsoft.Json.JsonWriter, System.Threading.CancellationToken, Newtonsoft.Json.JsonConverter[])", file="JProperty.Async.cs", label="return value != null\r\n                ? value.WriteToAsync(writer, cancellationToken, converters)\r\n                : writer.WriteNullAsync(cancellationToken);", span="64-66"];
m45_15 [cluster="Newtonsoft.Json.Linq.JProperty.WriteValueAsync(Newtonsoft.Json.JsonWriter, System.Threading.CancellationToken, Newtonsoft.Json.JsonConverter[])", file="JProperty.Async.cs", label="Exit Newtonsoft.Json.Linq.JProperty.WriteValueAsync(Newtonsoft.Json.JsonWriter, System.Threading.CancellationToken, Newtonsoft.Json.JsonConverter[])", span="61-61"];
m45_17 [cluster="Newtonsoft.Json.JsonWriter.WriteNullAsync(System.Threading.CancellationToken)", file="JProperty.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteNullAsync(System.Threading.CancellationToken)", span="366-366"];
m45_35 [cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", file="JProperty.Async.cs", label="Entry Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", span="108-108"];
m45_37 [cluster="string.FormatWith(System.IFormatProvider, object)", file="JProperty.Async.cs", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
m45_41 [file="JProperty.Async.cs", label="Newtonsoft.Json.Linq.JProperty", span=""];
m46_12 [cluster="Newtonsoft.Json.Linq.JPropertyDescriptor.ResetValue(object)", file="JPropertyDescriptor.cs", label="Entry Newtonsoft.Json.Linq.JPropertyDescriptor.ResetValue(object)", span="80-80"];
m46_13 [cluster="Newtonsoft.Json.Linq.JPropertyDescriptor.ResetValue(object)", file="JPropertyDescriptor.cs", label="Exit Newtonsoft.Json.Linq.JPropertyDescriptor.ResetValue(object)", span="80-80"];
m46_8 [cluster="Newtonsoft.Json.Linq.JPropertyDescriptor.GetValue(object)", file="JPropertyDescriptor.cs", label="Entry Newtonsoft.Json.Linq.JPropertyDescriptor.GetValue(object)", span="69-69"];
m46_9 [cluster="Newtonsoft.Json.Linq.JPropertyDescriptor.GetValue(object)", file="JPropertyDescriptor.cs", label="JToken token = CastInstance(component)[Name]", span="71-71"];
m46_10 [cluster="Newtonsoft.Json.Linq.JPropertyDescriptor.GetValue(object)", file="JPropertyDescriptor.cs", label="return token;", span="73-73"];
m46_11 [cluster="Newtonsoft.Json.Linq.JPropertyDescriptor.GetValue(object)", file="JPropertyDescriptor.cs", label="Exit Newtonsoft.Json.Linq.JPropertyDescriptor.GetValue(object)", span="69-69"];
m46_0 [cluster="Newtonsoft.Json.Linq.JPropertyDescriptor.JPropertyDescriptor(string)", file="JPropertyDescriptor.cs", label="Entry Newtonsoft.Json.Linq.JPropertyDescriptor.JPropertyDescriptor(string)", span="40-40"];
m46_1 [cluster="Newtonsoft.Json.Linq.JPropertyDescriptor.JPropertyDescriptor(string)", file="JPropertyDescriptor.cs", label="Exit Newtonsoft.Json.Linq.JPropertyDescriptor.JPropertyDescriptor(string)", span="40-40"];
m46_18 [cluster="Newtonsoft.Json.Linq.JValue.JValue(object)", file="JPropertyDescriptor.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(object)", span="191-191"];
m46_14 [cluster="Newtonsoft.Json.Linq.JPropertyDescriptor.SetValue(object, object)", file="JPropertyDescriptor.cs", label="Entry Newtonsoft.Json.Linq.JPropertyDescriptor.SetValue(object, object)", span="89-89"];
m46_15 [cluster="Newtonsoft.Json.Linq.JPropertyDescriptor.SetValue(object, object)", file="JPropertyDescriptor.cs", label="JToken token = value as JToken ?? new JValue(value)", span="91-91"];
m46_16 [cluster="Newtonsoft.Json.Linq.JPropertyDescriptor.SetValue(object, object)", file="JPropertyDescriptor.cs", label="CastInstance(component)[Name] = token", span="93-93"];
m46_17 [cluster="Newtonsoft.Json.Linq.JPropertyDescriptor.SetValue(object, object)", file="JPropertyDescriptor.cs", label="Exit Newtonsoft.Json.Linq.JPropertyDescriptor.SetValue(object, object)", span="89-89"];
m46_5 [cluster="Newtonsoft.Json.Linq.JPropertyDescriptor.CanResetValue(object)", file="JPropertyDescriptor.cs", label="Entry Newtonsoft.Json.Linq.JPropertyDescriptor.CanResetValue(object)", span="57-57"];
m46_6 [cluster="Newtonsoft.Json.Linq.JPropertyDescriptor.CanResetValue(object)", file="JPropertyDescriptor.cs", label="return false;", span="59-59"];
m46_7 [cluster="Newtonsoft.Json.Linq.JPropertyDescriptor.CanResetValue(object)", file="JPropertyDescriptor.cs", label="Exit Newtonsoft.Json.Linq.JPropertyDescriptor.CanResetValue(object)", span="57-57"];
m46_2 [cluster="Newtonsoft.Json.Linq.JPropertyDescriptor.CastInstance(object)", file="JPropertyDescriptor.cs", label="Entry Newtonsoft.Json.Linq.JPropertyDescriptor.CastInstance(object)", span="45-45"];
m46_3 [cluster="Newtonsoft.Json.Linq.JPropertyDescriptor.CastInstance(object)", file="JPropertyDescriptor.cs", label="return (JObject)instance;", span="47-47"];
m46_4 [cluster="Newtonsoft.Json.Linq.JPropertyDescriptor.CastInstance(object)", file="JPropertyDescriptor.cs", label="Exit Newtonsoft.Json.Linq.JPropertyDescriptor.CastInstance(object)", span="45-45"];
m46_19 [cluster="Newtonsoft.Json.Linq.JPropertyDescriptor.ShouldSerializeValue(object)", file="JPropertyDescriptor.cs", label="Entry Newtonsoft.Json.Linq.JPropertyDescriptor.ShouldSerializeValue(object)", span="103-103"];
m46_20 [cluster="Newtonsoft.Json.Linq.JPropertyDescriptor.ShouldSerializeValue(object)", file="JPropertyDescriptor.cs", label="return false;", span="105-105"];
m46_21 [cluster="Newtonsoft.Json.Linq.JPropertyDescriptor.ShouldSerializeValue(object)", file="JPropertyDescriptor.cs", label="Exit Newtonsoft.Json.Linq.JPropertyDescriptor.ShouldSerializeValue(object)", span="103-103"];
m46_22 [file="JPropertyDescriptor.cs", label="Newtonsoft.Json.Linq.JPropertyDescriptor", span=""];
m47_7 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JRaw.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="149-149"];
m47_0 [cluster="Newtonsoft.Json.Linq.JRaw.CreateAsync(Newtonsoft.Json.JsonReader, System.Threading.CancellationToken)", file="JRaw.Async.cs", label="Entry Newtonsoft.Json.Linq.JRaw.CreateAsync(Newtonsoft.Json.JsonReader, System.Threading.CancellationToken)", span="43-43"];
m47_1 [cluster="Newtonsoft.Json.Linq.JRaw.CreateAsync(Newtonsoft.Json.JsonReader, System.Threading.CancellationToken)", file="JRaw.Async.cs", label="StringWriter sw = new StringWriter(CultureInfo.InvariantCulture)", span="45-45"];
m47_3 [cluster="Newtonsoft.Json.Linq.JRaw.CreateAsync(Newtonsoft.Json.JsonReader, System.Threading.CancellationToken)", file="JRaw.Async.cs", label="await jsonWriter.WriteTokenSyncReadingAsync(reader, cancellationToken).ConfigureAwait(false)", span="48-48"];
m47_2 [cluster="Newtonsoft.Json.Linq.JRaw.CreateAsync(Newtonsoft.Json.JsonReader, System.Threading.CancellationToken)", file="JRaw.Async.cs", label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="46-46"];
m47_4 [cluster="Newtonsoft.Json.Linq.JRaw.CreateAsync(Newtonsoft.Json.JsonReader, System.Threading.CancellationToken)", file="JRaw.Async.cs", label="return new JRaw(sw.ToString());", span="50-50"];
m47_5 [cluster="Newtonsoft.Json.Linq.JRaw.CreateAsync(Newtonsoft.Json.JsonReader, System.Threading.CancellationToken)", file="JRaw.Async.cs", label="Exit Newtonsoft.Json.Linq.JRaw.CreateAsync(Newtonsoft.Json.JsonReader, System.Threading.CancellationToken)", span="43-43"];
m47_6 [cluster="System.IO.StringWriter.StringWriter(System.IFormatProvider)", file="JRaw.Async.cs", label="Entry System.IO.StringWriter.StringWriter(System.IFormatProvider)", span="0-0"];
m47_10 [cluster="Newtonsoft.Json.Linq.JRaw.JRaw(object)", file="JRaw.Async.cs", label="Entry Newtonsoft.Json.Linq.JRaw.JRaw(object)", span="48-48"];
m47_11 [cluster="System.IO.StringWriter.ToString()", file="JRaw.Async.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m47_8 [cluster="Newtonsoft.Json.JsonWriter.WriteTokenSyncReadingAsync(Newtonsoft.Json.JsonReader, System.Threading.CancellationToken)", file="JRaw.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteTokenSyncReadingAsync(Newtonsoft.Json.JsonReader, System.Threading.CancellationToken)", span="703-703"];
m47_9 [cluster="System.Threading.Tasks.Task.ConfigureAwait(bool)", file="JRaw.Async.cs", label="Entry System.Threading.Tasks.Task.ConfigureAwait(bool)", span="0-0"];
m48_281 [cluster="Newtonsoft.Json.Linq.JContainer.Descendants()", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Linq.JContainer.Descendants()", span="242-242"];
m48_407 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DeepClone()", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.DeepClone()", span="681-681"];
m48_408 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DeepClone()", file="JsonArrayContract.cs", label="JArray a =\r\n        new JArray(\r\n          5,\r\n          new JArray(1),\r\n          new JArray(1, 2),\r\n          new JArray(1, 2, 3),\r\n          new JObject(\r\n            new JProperty(''First'', new JValue(Encoding.UTF8.GetBytes(''Hi''))),\r\n            new JProperty(''Second'', 1),\r\n            new JProperty(''Third'', null),\r\n            new JProperty(''Fourth'', new JConstructor(''Date'', 12345)),\r\n            new JProperty(''Fifth'', double.PositiveInfinity),\r\n            new JProperty(''Sixth'', double.NaN)\r\n            )\r\n        )", span="683-697"];
m48_409 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DeepClone()", file="JsonArrayContract.cs", label="JArray a2 = (JArray)a.DeepClone()", span="699-699"];
m48_411 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DeepClone()", file="JsonArrayContract.cs", label="Assert.IsTrue(a.DeepEquals(a2))", span="703-703"];
m48_410 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DeepClone()", file="JsonArrayContract.cs", label="Console.WriteLine(a2.ToString(Formatting.Indented))", span="701-701"];
m48_412 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DeepClone()", file="JsonArrayContract.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.DeepClone()", span="681-681"];
m48_38 [cluster="Newtonsoft.Json.Linq.JToken.Load(Newtonsoft.Json.JsonReader)", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Linq.JToken.Load(Newtonsoft.Json.JsonReader)", span="1247-1247"];
m48_12 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JsonArrayContract.cs", label="Assert.AreEqual(true, (bool)p.Value)", span="62-62"];
m48_64 [cluster="Newtonsoft.Json.Linq.JArray.JArray(params object[])", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Linq.JArray.JArray(params object[])", span="81-81"];
m48_367 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", span="9-9"];
m48_87 [cluster="Unk.IsNull", file="JsonArrayContract.cs", label="Entry Unk.IsNull", span=""];
m48_328 [cluster="Newtonsoft.Json.Linq.JContainer.RemoveAll()", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Linq.JContainer.RemoveAll()", span="586-586"];
m48_297 [cluster="Newtonsoft.Json.Linq.JContainer.CreateWriter()", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Linq.JContainer.CreateWriter()", span="568-568"];
m48_33 [cluster="Unk.IsTrue", file="JsonArrayContract.cs", label="Entry Unk.IsTrue", span=""];
m48_434 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ParseAdditionalContent()", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.ParseAdditionalContent()", span="757-757"];
m48_435 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ParseAdditionalContent()", file="JsonArrayContract.cs", label="ExceptionAssert.Throws<JsonReaderException>(''Additional text encountered after finished reading JSON content: ,. Line 5, position 2.'',\r\n        () =>\r\n        {\r\n          string json = @''[\r\n''''Small'''',\r\n''''Medium'''',\r\n''''Large''''\r\n],'';\r\n\r\n          JToken.Parse(json);\r\n        })", span="759-769"];
m48_436 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ParseAdditionalContent()", file="JsonArrayContract.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.ParseAdditionalContent()", span="757-757"];
m48_10 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JsonArrayContract.cs", label="JProperty p = (JProperty)JToken.ReadFrom(reader)", span="60-60"];
m48_387 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", span="647-647"];
m48_388 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JsonArrayContract.cs", label="JArray a =\r\n        new JArray(\r\n          5,\r\n          new JArray(1),\r\n          new JArray(1, 2),\r\n          new JArray(1, 2, 3)\r\n        )", span="649-655"];
m48_390 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JsonArrayContract.cs", label="Assert.AreEqual(5, (int)a[0])", span="659-659"];
m48_391 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JsonArrayContract.cs", label="Assert.AreEqual(''pie'', (string)a[1])", span="660-660"];
m48_392 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JsonArrayContract.cs", label="Assert.AreEqual(a, a[1].Parent)", span="661-661"];
m48_393 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JsonArrayContract.cs", label="Assert.AreEqual(a[2], a[1].Next)", span="662-662"];
m48_394 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JsonArrayContract.cs", label="Assert.AreEqual(5, a.Count())", span="663-663"];
m48_396 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JsonArrayContract.cs", label="Assert.AreEqual(''firstpie'', (string)a[0])", span="667-667"];
m48_397 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JsonArrayContract.cs", label="Assert.AreEqual(5, (int)a[1])", span="668-668"];
m48_398 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JsonArrayContract.cs", label="Assert.AreEqual(''pie'', (string)a[2])", span="669-669"];
m48_399 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JsonArrayContract.cs", label="Assert.AreEqual(a, a[0].Parent)", span="670-670"];
m48_400 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JsonArrayContract.cs", label="Assert.AreEqual(a[1], a[0].Next)", span="671-671"];
m48_401 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JsonArrayContract.cs", label="Assert.AreEqual(6, a.Count())", span="672-672"];
m48_403 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JsonArrayContract.cs", label="Assert.AreEqual(''secondlastpie'', (string)a[5])", span="676-676"];
m48_404 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JsonArrayContract.cs", label="Assert.AreEqual(7, a.Count())", span="677-677"];
m48_389 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JsonArrayContract.cs", label="a[1].AddBeforeSelf(''pie'')", span="657-657"];
m48_395 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JsonArrayContract.cs", label="a[0].AddBeforeSelf(''firstpie'')", span="665-665"];
m48_402 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JsonArrayContract.cs", label="a.Last.AddBeforeSelf(''secondlastpie'')", span="674-674"];
m48_405 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JsonArrayContract.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", span="647-647"];
m48_339 [cluster="Newtonsoft.Json.Linq.JArray.Add(Newtonsoft.Json.Linq.JToken)", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Linq.JArray.Add(Newtonsoft.Json.Linq.JToken)", span="273-273"];
m48_417 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Clone()", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Clone()", span="708-708"];
m48_418 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Clone()", file="JsonArrayContract.cs", label="JArray a =\r\n        new JArray(\r\n          5,\r\n          new JArray(1),\r\n          new JArray(1, 2),\r\n          new JArray(1, 2, 3),\r\n          new JObject(\r\n            new JProperty(''First'', new JValue(Encoding.UTF8.GetBytes(''Hi''))),\r\n            new JProperty(''Second'', 1),\r\n            new JProperty(''Third'', null),\r\n            new JProperty(''Fourth'', new JConstructor(''Date'', 12345)),\r\n            new JProperty(''Fifth'', double.PositiveInfinity),\r\n            new JProperty(''Sixth'', double.NaN)\r\n            )\r\n        )", span="710-724"];
m48_419 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Clone()", file="JsonArrayContract.cs", label="ICloneable c = a", span="726-726"];
m48_421 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Clone()", file="JsonArrayContract.cs", label="Assert.IsTrue(a.DeepEquals(a2))", span="730-730"];
m48_420 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Clone()", file="JsonArrayContract.cs", label="JArray a2 = (JArray) c.Clone()", span="728-728"];
m48_422 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Clone()", file="JsonArrayContract.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Clone()", span="708-708"];
m48_319 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", span="522-522"];
m48_320 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", file="JsonArrayContract.cs", label="JArray a =\r\n        new JArray(\r\n          5,\r\n          new JArray(1),\r\n          new JArray(1, 2),\r\n          new JArray(1, 2, 3)\r\n        )", span="524-530"];
m48_324 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", file="JsonArrayContract.cs", label="Assert.AreEqual(0, a.Count())", span="536-536"];
m48_322 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", file="JsonArrayContract.cs", label="Assert.AreEqual(5, (int)first)", span="533-533"];
m48_321 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", file="JsonArrayContract.cs", label="JToken first = a.First", span="532-532"];
m48_323 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", file="JsonArrayContract.cs", label="a.RemoveAll()", span="535-535"];
m48_325 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", file="JsonArrayContract.cs", label="Assert.IsNull(first.Parent)", span="538-538"];
m48_326 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", file="JsonArrayContract.cs", label="Assert.IsNull(first.Next)", span="539-539"];
m48_327 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", file="JsonArrayContract.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", span="522-522"];
m48_239 [cluster="Newtonsoft.Json.Linq.JToken.Remove()", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Linq.JToken.Remove()", span="293-293"];
m48_329 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddPropertyToArray()", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.AddPropertyToArray()", span="543-543"];
m48_330 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddPropertyToArray()", file="JsonArrayContract.cs", label="ExceptionAssert.Throws<ArgumentException>(''Can not add Newtonsoft.Json.Linq.JProperty to Newtonsoft.Json.Linq.JArray.'',\r\n      () =>\r\n      {\r\n        JArray a = new JArray();\r\n        a.Add(new JProperty(''PropertyName''));\r\n      })", span="545-550"];
m48_331 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddPropertyToArray()", file="JsonArrayContract.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.AddPropertyToArray()", span="543-543"];
m48_106 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeAfter()", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeAfter()", span="200-200"];
m48_107 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeAfter()", color=green, community=0, file="JsonArrayContract.cs", label="JArray a =\r\n        new JArray(\r\n          5,\r\n          new JArray(1, 2, 3),\r\n          new JArray(1, 2, 3),\r\n          new JArray(1, 2, 3)\r\n        )", prediction=14, span="202-208"];
m48_108 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeAfter()", file="JsonArrayContract.cs", label="Assert.AreEqual(5, (int)a[1].Previous)", span="210-210"];
m48_109 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeAfter()", file="JsonArrayContract.cs", label="Assert.AreEqual(2, a[2].BeforeSelf().Count())", span="211-211"];
m48_110 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeAfter()", file="JsonArrayContract.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeAfter()", span="200-200"];
m48_413 [cluster="Newtonsoft.Json.Linq.JConstructor.JConstructor(string, object)", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Linq.JConstructor.JConstructor(string, object)", span="102-102"];
m48_66 [cluster="Newtonsoft.Json.Linq.JValue.JValue(System.DateTime)", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.DateTime)", span="94-94"];
m48_68 [cluster="Newtonsoft.Json.Linq.JObject.JObject(params object[])", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject(params object[])", span="128-128"];
m48_211 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Root()", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Root()", span="323-323"];
m48_212 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Root()", file="JsonArrayContract.cs", label="JArray a =\r\n        new JArray(\r\n          5,\r\n          6,\r\n          new JArray(7, 8),\r\n          new JArray(9, 10)\r\n        )", span="325-331"];
m48_213 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Root()", file="JsonArrayContract.cs", label="Assert.AreEqual(a, a.Root)", span="333-333"];
m48_214 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Root()", file="JsonArrayContract.cs", label="Assert.AreEqual(a, a[0].Root)", span="334-334"];
m48_215 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Root()", file="JsonArrayContract.cs", label="Assert.AreEqual(a, ((JArray)a[2])[0].Root)", span="335-335"];
m48_216 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Root()", file="JsonArrayContract.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Root()", span="323-323"];
m48_303 [cluster="Newtonsoft.Json.Linq.JObject.JObject(object)", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject(object)", span="137-137"];
m48_375 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", span="623-623"];
m48_376 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", file="JsonArrayContract.cs", label="JArray a =\r\n        new JArray(\r\n          5,\r\n          new JArray(1),\r\n          new JArray(1, 2),\r\n          new JArray(1, 2, 3)\r\n        )", span="625-631"];
m48_378 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", file="JsonArrayContract.cs", label="Assert.AreEqual(5, (int)a[0])", span="635-635"];
m48_379 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", file="JsonArrayContract.cs", label="Assert.AreEqual(1, a[1].Count())", span="636-636"];
m48_380 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", file="JsonArrayContract.cs", label="Assert.AreEqual(''pie'', (string)a[2])", span="637-637"];
m48_381 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", file="JsonArrayContract.cs", label="Assert.AreEqual(5, a.Count())", span="638-638"];
m48_383 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", file="JsonArrayContract.cs", label="Assert.AreEqual(''lastpie'', (string)a[5])", span="642-642"];
m48_384 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", file="JsonArrayContract.cs", label="Assert.AreEqual(''lastpie'', (string)a.Last)", span="643-643"];
m48_377 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", file="JsonArrayContract.cs", label="a[1].AddAfterSelf(''pie'')", span="633-633"];
m48_382 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", file="JsonArrayContract.cs", label="a[4].AddAfterSelf(''lastpie'')", span="640-640"];
m48_385 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", file="JsonArrayContract.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", span="623-623"];
m48_74 [cluster="Newtonsoft.Json.Linq.JToken.Children()", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Linq.JToken.Children()", span="265-265"];
m48_270 [cluster="Newtonsoft.Json.Linq.JToken.Ancestors()", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Linq.JToken.Ancestors()", span="189-189"];
m48_258 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.HasValues()", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.HasValues()", span="415-415"];
m48_259 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.HasValues()", file="JsonArrayContract.cs", label="JArray a =\r\n        new JArray(\r\n          5,\r\n          new JArray(1),\r\n          new JArray(1, 2),\r\n          new JArray(1, 2, 3)\r\n        )", span="417-423"];
m48_260 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.HasValues()", file="JsonArrayContract.cs", label="Assert.IsTrue(a.HasValues)", span="425-425"];
m48_261 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.HasValues()", file="JsonArrayContract.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.HasValues()", span="415-415"];
m48_14 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JsonArrayContract.cs", label="Assert.AreEqual(''Date'', c.Name)", span="65-65"];
m48_75 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="JsonArrayContract.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m48_73 [cluster="Unk.AreNotEqual", file="JsonArrayContract.cs", label="Entry Unk.AreNotEqual", span=""];
m48_166 [cluster="Newtonsoft.Json.Linq.JValue.JValue(ulong)", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(ulong)", span="76-76"];
m48_43 [cluster="Newtonsoft.Json.Linq.JToken.Parse(string)", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Linq.JToken.Parse(string)", span="1226-1226"];
m48_30 [cluster="System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Values()", file="JsonArrayContract.cs", label="Entry System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Values()", span="110-110"];
m48_209 [cluster="Unk.IsFalse", file="JsonArrayContract.cs", label="Entry Unk.IsFalse", span=""];
m48_0 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.JTokenAnnotation.Example()", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Linq.JTokenAnnotation.Example()", span="38-38"];
m48_2 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.JTokenAnnotation.Example()", file="JsonArrayContract.cs", label="o.AddAnnotation(new HashSet<string>())", span="48-48"];
m48_4 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.JTokenAnnotation.Example()", file="JsonArrayContract.cs", label="o[''age''] = 59", span="51-51"];
m48_5 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.JTokenAnnotation.Example()", file="JsonArrayContract.cs", label="o[''employer''] = ''Bill & Melinda Gates Foundation''", span="52-52"];
m48_6 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.JTokenAnnotation.Example()", file="JsonArrayContract.cs", label="HashSet<string> changedProperties = o.Annotation<HashSet<string>>()", span="55-55"];
m48_11 [cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="JsonArrayContract.cs", label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0"];
m48_18 [cluster="lambda expression", file="JsonArrayContract.cs", label="Exit lambda expression", span="49-49"];
m48_20 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JsonArrayContract.cs", label=o, span=""];
m48_22 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JsonArrayContract.cs", label="Assert.AreEqual(1.1, (double)v)", span="77-77"];
m48_1 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.JTokenAnnotation.Example()", file="JsonArrayContract.cs", label="JObject o = JObject.Parse(@''{\r\n              'name': 'Bill G',\r\n              'age': 58,\r\n              'country': 'United States',\r\n              'employer': 'Microsoft'\r\n            }'')", span="41-46"];
m48_3 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.JTokenAnnotation.Example()", file="JsonArrayContract.cs", label="o.PropertyChanged += (sender, args) => o.Annotation<HashSet<string>>().Add(args.PropertyName)", span="49-49"];
m48_7 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.JTokenAnnotation.Example()", file="JsonArrayContract.cs", label="Assert.AreEqual(true, changedProperties.Contains(''age''))", span="60-60"];
m48_13 [cluster="Newtonsoft.Json.Linq.JToken.Annotation<T>()", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Linq.JToken.Annotation<T>()", span="2129-2129"];
m48_15 [cluster="Unk.AreEqual", file="JsonArrayContract.cs", label="Entry Unk.AreEqual", span=""];
m48_17 [cluster="lambda expression", file="JsonArrayContract.cs", label="o.Annotation<HashSet<string>>().Add(args.PropertyName)", span="49-49"];
m48_19 [cluster="System.Collections.Generic.HashSet<T>.Add(T)", file="JsonArrayContract.cs", label="Entry System.Collections.Generic.HashSet<T>.Add(T)", span="0-0"];
m48_21 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JsonArrayContract.cs", label="v = (JValue)JToken.ReadFrom(new JsonTextReader(new StringReader(@''1.1'')))", span="76-76"];
m48_8 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.JTokenAnnotation.Example()", file="JsonArrayContract.cs", label="Assert.AreEqual(true, changedProperties.Contains(''employer''))", span="61-61"];
m48_9 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.JTokenAnnotation.Example()", file="JsonArrayContract.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Linq.JTokenAnnotation.Example()", span="38-38"];
m48_16 [cluster="lambda expression", file="JsonArrayContract.cs", label="Entry lambda expression", span="49-49"];
m48_23 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JsonArrayContract.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", span="46-46"];
m48_416 [cluster="Newtonsoft.Json.Linq.JArray.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Linq.JArray.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="95-95"];
m48_304 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", span="495-495"];
m48_305 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JsonArrayContract.cs", label="JArray a =\r\n        new JArray(\r\n          5,\r\n          new JArray(1),\r\n          new JArray(1, 2),\r\n          new JArray(1, 2, 3)\r\n        )", span="497-503"];
m48_307 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JsonArrayContract.cs", label="Assert.AreEqual(''First'', (string)a[0])", span="507-507"];
m48_308 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JsonArrayContract.cs", label="Assert.AreEqual(a, a[0].Parent)", span="508-508"];
m48_309 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JsonArrayContract.cs", label="Assert.AreEqual(a[1], a[0].Next)", span="509-509"];
m48_310 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JsonArrayContract.cs", label="Assert.AreEqual(5, a.Count())", span="510-510"];
m48_312 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JsonArrayContract.cs", label="Assert.AreEqual(''NewFirst'', (string)a[0])", span="513-513"];
m48_313 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JsonArrayContract.cs", label="Assert.AreEqual(a, a[0].Parent)", span="514-514"];
m48_314 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JsonArrayContract.cs", label="Assert.AreEqual(a[1], a[0].Next)", span="515-515"];
m48_315 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JsonArrayContract.cs", label="Assert.AreEqual(6, a.Count())", span="516-516"];
m48_316 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JsonArrayContract.cs", label="Assert.AreEqual(a[0], a[0].Next.Previous)", span="518-518"];
m48_306 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JsonArrayContract.cs", label="a.AddFirst(''First'')", span="505-505"];
m48_311 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JsonArrayContract.cs", label="a.AddFirst(''NewFirst'')", span="512-512"];
m48_317 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JsonArrayContract.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", span="495-495"];
m48_69 [cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", span="196-196"];
m48_338 [cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string)", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string)", span="173-173"];
m48_44 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", span="95-95"];
m48_45 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JsonArrayContract.cs", label="JArray v = new JArray(new JConstructor(''TestConstructor''), new JValue(new DateTime(2000, 12, 20)))", span="97-97"];
m48_46 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JsonArrayContract.cs", label="Assert.AreEqual(null, v.Parent)", span="99-99"];
m48_48 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JsonArrayContract.cs", label="Assert.AreEqual(o.Property(''Test1''), v.Parent)", span="109-109"];
m48_50 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JsonArrayContract.cs", label="Assert.AreEqual(o.Property(''Test1''), v.Parent)", span="114-114"];
m48_52 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JsonArrayContract.cs", label="Assert.AreEqual((DateTime)((JValue)p.Value[1]).Value, (DateTime)((JValue)v[1]).Value)", span="119-119"];
m48_53 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JsonArrayContract.cs", label="Assert.AreEqual(v, o[''Test1''])", span="121-121"];
m48_54 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JsonArrayContract.cs", label="Assert.AreEqual(null, o.Parent)", span="123-123"];
m48_56 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JsonArrayContract.cs", label="Assert.AreEqual(o, o1.Value)", span="125-125"];
m48_60 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JsonArrayContract.cs", label="Assert.AreEqual(o1.Value.Children().Count(), o2.Value.Children().Count())", span="131-131"];
m48_61 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JsonArrayContract.cs", label="Assert.AreEqual(false, JToken.DeepEquals(o1, o2))", span="132-132"];
m48_62 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JsonArrayContract.cs", label="Assert.AreEqual(true, JToken.DeepEquals(o1.Value, o2.Value))", span="133-133"];
m48_47 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JsonArrayContract.cs", label="JObject o =\r\n        new JObject(\r\n          new JProperty(''Test1'', v),\r\n          new JProperty(''Test2'', ''Test2Value''),\r\n          new JProperty(''Test3'', ''Test3Value''),\r\n          new JProperty(''Test4'', null)\r\n        )", span="101-107"];
m48_49 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JsonArrayContract.cs", label="JProperty p = new JProperty(''NewProperty'', v)", span="111-111"];
m48_51 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JsonArrayContract.cs", label="Assert.AreNotSame(p.Value, v)", span="117-117"];
m48_55 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JsonArrayContract.cs", label="JProperty o1 = new JProperty(''O1'', o)", span="124-124"];
m48_57 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JsonArrayContract.cs", label="Assert.AreNotEqual(null, o.Parent)", span="127-127"];
m48_58 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JsonArrayContract.cs", label="JProperty o2 = new JProperty(''O2'', o)", span="128-128"];
m48_59 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JsonArrayContract.cs", label="Assert.AreNotSame(o1.Value, o2.Value)", span="130-130"];
m48_63 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JsonArrayContract.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", span="95-95"];
m48_271 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", span="447-447"];
m48_272 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="JsonArrayContract.cs", label="JArray a =\r\n        new JArray(\r\n          5,\r\n          new JArray(1),\r\n          new JArray(1, 2),\r\n          new JArray(1, 2, 3)\r\n        )", span="449-455"];
m48_276 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="JsonArrayContract.cs", label="Assert.IsTrue(JToken.DeepEquals(new JArray(1, 2, 3), descendants[descendants.Count - 4]))", span="460-460"];
m48_274 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="JsonArrayContract.cs", label="Assert.AreEqual(10, descendants.Count())", span="458-458"];
m48_275 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="JsonArrayContract.cs", label="Assert.AreEqual(5, (int)descendants[0])", span="459-459"];
m48_277 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="JsonArrayContract.cs", label="Assert.AreEqual(1, (int)descendants[descendants.Count - 3])", span="461-461"];
m48_278 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="JsonArrayContract.cs", label="Assert.AreEqual(2, (int)descendants[descendants.Count - 2])", span="462-462"];
m48_279 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="JsonArrayContract.cs", label="Assert.AreEqual(3, (int)descendants[descendants.Count - 1])", span="463-463"];
m48_273 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="JsonArrayContract.cs", label="List<JToken> descendants = a.Descendants().ToList()", span="457-457"];
m48_280 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="JsonArrayContract.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", span="447-447"];
m48_368 [cluster="Newtonsoft.Json.Linq.JToken.ToString(Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToString(Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", span="337-337"];
m48_31 [cluster="System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", file="JsonArrayContract.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", span="0-0"];
m48_282 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", span="467-467"];
m48_283 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JsonArrayContract.cs", label="JArray a =\r\n        new JArray(\r\n          5,\r\n          new JArray(1),\r\n          new JArray(1, 2),\r\n          new JArray(1, 2, 3)\r\n        )", span="469-475"];
m48_286 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JsonArrayContract.cs", label="Assert.AreEqual(4, a.Count())", span="479-479"];
m48_288 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JsonArrayContract.cs", label="Assert.AreEqual(5, a.Count())", span="482-482"];
m48_289 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JsonArrayContract.cs", label="Assert.AreEqual(''String'', (string)a[4])", span="483-483"];
m48_294 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JsonArrayContract.cs", label="Assert.AreEqual(6, a.Count())", span="490-490"];
m48_284 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JsonArrayContract.cs", label="JsonWriter writer = a.CreateWriter()", span="477-477"];
m48_295 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JsonArrayContract.cs", label="Assert.IsTrue(JToken.DeepEquals(new JObject(new JProperty(''Property'', ''PropertyValue'')), a[5]))", span="491-491"];
m48_285 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JsonArrayContract.cs", label="Assert.IsNotNull(writer)", span="478-478"];
m48_287 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JsonArrayContract.cs", label="writer.WriteValue(''String'')", span="481-481"];
m48_290 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JsonArrayContract.cs", label="writer.WriteStartObject()", span="485-485"];
m48_293 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JsonArrayContract.cs", label="writer.WriteEnd()", span="488-488"];
m48_291 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JsonArrayContract.cs", label="writer.WritePropertyName(''Property'')", span="486-486"];
m48_292 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JsonArrayContract.cs", label="writer.WriteValue(''PropertyValue'')", span="487-487"];
m48_296 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JsonArrayContract.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", span="467-467"];
m48_424 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DoubleDeepEquals()", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.DoubleDeepEquals()", span="735-735"];
m48_425 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DoubleDeepEquals()", file="JsonArrayContract.cs", label="JArray a =\r\n        new JArray(\r\n          double.NaN,\r\n          double.PositiveInfinity,\r\n          double.NegativeInfinity\r\n        )", span="737-742"];
m48_429 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DoubleDeepEquals()", file="JsonArrayContract.cs", label="JValue v1 = new JValue(d)", span="750-750"];
m48_430 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DoubleDeepEquals()", file="JsonArrayContract.cs", label="JValue v2 = new JValue(1.3)", span="751-751"];
m48_426 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DoubleDeepEquals()", file="JsonArrayContract.cs", label="JArray a2 = (JArray)a.DeepClone()", span="744-744"];
m48_427 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DoubleDeepEquals()", file="JsonArrayContract.cs", label="Assert.IsTrue(a.DeepEquals(a2))", span="746-746"];
m48_428 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DoubleDeepEquals()", file="JsonArrayContract.cs", label="double d = 1 + 0.1 + 0.1 + 0.1", span="748-748"];
m48_431 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DoubleDeepEquals()", file="JsonArrayContract.cs", label="Assert.IsTrue(v1.DeepEquals(v2))", span="753-753"];
m48_432 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.DoubleDeepEquals()", file="JsonArrayContract.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.DoubleDeepEquals()", span="735-735"];
m48_24 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="69-69"];
m48_168 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", span="274-274"];
m48_188 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JsonArrayContract.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(11.1f), (JValue)11.1f))", span="298-298"];
m48_189 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JsonArrayContract.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(float.MinValue), (JValue)float.MinValue))", span="299-299"];
m48_190 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JsonArrayContract.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(double.MinValue), (JValue)double.MinValue))", span="300-300"];
m48_199 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JsonArrayContract.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(float.MaxValue), (JValue)(float?)float.MaxValue))", span="309-309"];
m48_200 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JsonArrayContract.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(double.MaxValue), (JValue)(double?)double.MaxValue))", span="310-310"];
m48_187 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JsonArrayContract.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(ushort.MaxValue), (JValue)ushort.MaxValue))", span="297-297"];
m48_191 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JsonArrayContract.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(uint.MaxValue), (JValue)uint.MaxValue))", span="301-301"];
m48_198 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JsonArrayContract.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(decimal.MinValue), (JValue)decimal.MinValue))", span="308-308"];
m48_201 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JsonArrayContract.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue((object)null), (JValue)(double?)null))", span="311-311"];
m48_169 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JsonArrayContract.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(new DateTime(2000, 12, 20)), (JValue)new DateTime(2000, 12, 20)))", span="276-276"];
m48_170 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JsonArrayContract.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(new DateTimeOffset(2000, 12, 20, 23, 50, 10, TimeSpan.Zero)), (JValue)new DateTimeOffset(2000, 12, 20, 23, 50, 10, TimeSpan.Zero)))", span="278-278"];
m48_171 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JsonArrayContract.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue((DateTimeOffset?)null), (JValue)(DateTimeOffset?)null))", span="279-279"];
m48_172 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JsonArrayContract.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(true), (JValue)true))", span="282-282"];
m48_173 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JsonArrayContract.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(true), (JValue)(bool?)true))", span="283-283"];
m48_174 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JsonArrayContract.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue((bool?)null), (JValue)(bool?)null))", span="284-284"];
m48_175 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JsonArrayContract.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(10), (JValue)10))", span="285-285"];
m48_176 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JsonArrayContract.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue((long?)null), (JValue)(long?)null))", span="286-286"];
m48_177 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JsonArrayContract.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue((DateTime?)null), (JValue)(DateTime?)null))", span="287-287"];
m48_178 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JsonArrayContract.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(long.MaxValue), (JValue)long.MaxValue))", span="288-288"];
m48_179 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JsonArrayContract.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue((int?)null), (JValue)(int?)null))", span="289-289"];
m48_180 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JsonArrayContract.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue((short?)null), (JValue)(short?)null))", span="290-290"];
m48_181 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JsonArrayContract.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue((double?)null), (JValue)(double?)null))", span="291-291"];
m48_182 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JsonArrayContract.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue((uint?)null), (JValue)(uint?)null))", span="292-292"];
m48_183 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JsonArrayContract.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue((decimal?)null), (JValue)(decimal?)null))", span="293-293"];
m48_184 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JsonArrayContract.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue((ulong?)null), (JValue)(ulong?)null))", span="294-294"];
m48_185 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JsonArrayContract.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue((sbyte?)null), (JValue)(sbyte?)null))", span="295-295"];
m48_186 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JsonArrayContract.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue((ushort?)null), (JValue)(ushort?)null))", span="296-296"];
m48_192 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JsonArrayContract.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(ulong.MaxValue), (JValue)ulong.MaxValue))", span="302-302"];
m48_193 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JsonArrayContract.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(ulong.MinValue), (JValue)ulong.MinValue))", span="303-303"];
m48_194 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JsonArrayContract.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue((string)null), (JValue)(string)null))", span="304-304"];
m48_195 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JsonArrayContract.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue((DateTime?)null), (JValue)(DateTime?)null))", span="305-305"];
m48_196 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JsonArrayContract.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(decimal.MaxValue), (JValue)decimal.MaxValue))", span="306-306"];
m48_197 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JsonArrayContract.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(decimal.MaxValue), (JValue)(decimal?)decimal.MaxValue))", span="307-307"];
m48_202 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JsonArrayContract.cs", label="Assert.IsFalse(JToken.DeepEquals(new JValue(true), (JValue)(bool?)null))", span="313-313"];
m48_203 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JsonArrayContract.cs", label="Assert.IsFalse(JToken.DeepEquals(new JValue((object)null), (JValue)(object)null))", span="314-314"];
m48_205 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JsonArrayContract.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(emptyData), (JValue)emptyData))", span="317-317"];
m48_206 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JsonArrayContract.cs", label="Assert.IsFalse(JToken.DeepEquals(new JValue(emptyData), (JValue)new byte[1]))", span="318-318"];
m48_207 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JsonArrayContract.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(Encoding.UTF8.GetBytes(''Hi'')), (JValue)Encoding.UTF8.GetBytes(''Hi'')))", span="319-319"];
m48_204 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JsonArrayContract.cs", label="byte[] emptyData = new byte[0]", span="316-316"];
m48_208 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JsonArrayContract.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", span="274-274"];
m48_104 [cluster="Newtonsoft.Json.Linq.JArray.JArray(object)", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Linq.JArray.JArray(object)", span="90-90"];
m48_346 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", span="566-566"];
m48_347 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="JsonArrayContract.cs", label="JArray a =\r\n        new JArray(\r\n          5,\r\n          new JArray(1),\r\n          new JArray(1, 2),\r\n          new JArray(1, 2, 3)\r\n        )", span="568-574"];
m48_356 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="JsonArrayContract.cs", label="Assert.IsTrue(JToken.DeepEquals(new JArray(int.MaxValue, new JArray(''Test''), int.MaxValue, new JArray(1, 2, 3)), a))", span="587-587"];
m48_349 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="JsonArrayContract.cs", label="Assert.AreEqual(int.MaxValue, (int)a[0])", span="577-577"];
m48_350 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="JsonArrayContract.cs", label="Assert.AreEqual(4, a.Count())", span="578-578"];
m48_352 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="JsonArrayContract.cs", label="Assert.AreEqual(''Test'', (string)a[1][0])", span="581-581"];
m48_354 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="JsonArrayContract.cs", label="Assert.AreEqual(int.MaxValue, (int)a[2])", span="584-584"];
m48_355 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="JsonArrayContract.cs", label="Assert.AreEqual(4, a.Count())", span="585-585"];
m48_348 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="JsonArrayContract.cs", label="a[0].Replace(new JValue(int.MaxValue))", span="576-576"];
m48_351 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="JsonArrayContract.cs", label="a[1][0].Replace(new JValue(''Test''))", span="580-580"];
m48_353 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="JsonArrayContract.cs", label="a[2].Replace(new JValue(int.MaxValue))", span="583-583"];
m48_357 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="JsonArrayContract.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", span="566-566"];
m48_72 [cluster="Unk.AreNotSame", file="JsonArrayContract.cs", label="Entry Unk.AreNotSame", span=""];
m48_29 [cluster="Newtonsoft.Json.Linq.JValue.JValue(long)", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(long)", span="66-66"];
m48_406 [cluster="Newtonsoft.Json.Linq.JToken.AddBeforeSelf(object)", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Linq.JToken.AddBeforeSelf(object)", span="176-176"];
m48_65 [cluster="Newtonsoft.Json.Linq.JConstructor.JConstructor(string)", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Linq.JConstructor.JConstructor(string)", span="112-112"];
m48_70 [cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, params object[])", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, params object[])", span="186-186"];
m48_163 [cluster="Newtonsoft.Json.Linq.JValue.JValue(object)", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(object)", span="148-148"];
m48_302 [cluster="Newtonsoft.Json.JsonWriter.WriteEnd()", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEnd()", span="380-380"];
m48_28 [cluster="Newtonsoft.Json.JsonReader.Read()", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.JsonReader.Read()", span="269-269"];
m48_370 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithNoIndenting()", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithNoIndenting()", span="610-610"];
m48_373 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithNoIndenting()", file="JsonArrayContract.cs", label="Assert.AreEqual(@''[''''2009-02-15T00:00:00Z'''']'', json)", span="619-619"];
m48_372 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithNoIndenting()", file="JsonArrayContract.cs", label="string json = a.ToString(Formatting.None, new IsoDateTimeConverter())", span="617-617"];
m48_371 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithNoIndenting()", file="JsonArrayContract.cs", label="JArray a =\r\n        new JArray(\r\n          new JValue(new DateTime(2009, 2, 15, 0, 0, 0, DateTimeKind.Utc))\r\n        )", span="612-615"];
m48_374 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithNoIndenting()", file="JsonArrayContract.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithNoIndenting()", span="610-610"];
m48_76 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", span="137-137"];
m48_77 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", file="JsonArrayContract.cs", label="JArray a =\r\n        new JArray(\r\n          5,\r\n          6,\r\n          new JArray(7, 8),\r\n          new JArray(9, 10)\r\n        )", span="139-145"];
m48_81 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", file="JsonArrayContract.cs", label="Assert.IsTrue(JToken.DeepEquals(new JArray(7, 8), next))", span="151-151"];
m48_83 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", file="JsonArrayContract.cs", label="Assert.IsTrue(JToken.DeepEquals(new JArray(9, 10), next))", span="154-154"];
m48_79 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", file="JsonArrayContract.cs", label="Assert.AreEqual(6, (int)next)", span="148-148"];
m48_78 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", file="JsonArrayContract.cs", label="JToken next = a[0].Next", span="147-147"];
m48_80 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", file="JsonArrayContract.cs", label="next = next.Next", span="150-150"];
m48_82 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", file="JsonArrayContract.cs", label="next = next.Next", span="153-153"];
m48_84 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", file="JsonArrayContract.cs", label="next = next.Next", span="156-156"];
m48_85 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", file="JsonArrayContract.cs", label="Assert.IsNull(next)", span="157-157"];
m48_86 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", file="JsonArrayContract.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", span="137-137"];
m48_88 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Previous()", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Previous()", span="161-161"];
m48_89 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Previous()", color=green, community=0, file="JsonArrayContract.cs", label="JArray a =\r\n        new JArray(\r\n          5,\r\n          6,\r\n          new JArray(7, 8),\r\n          new JArray(9, 10)\r\n        )", prediction=15, span="163-169"];
m48_90 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Previous()", file="JsonArrayContract.cs", label="JToken previous = a[3].Previous", span="171-171"];
m48_96 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Previous()", color=green, community=0, file="JsonArrayContract.cs", label="previous = previous.Previous", prediction=16, span="180-180"];
m48_94 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Previous()", file="JsonArrayContract.cs", label="previous = previous.Previous", span="177-177"];
m48_95 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Previous()", file="JsonArrayContract.cs", label="Assert.AreEqual(5, (int)previous)", span="178-178"];
m48_97 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Previous()", file="JsonArrayContract.cs", label="Assert.IsNull(previous)", span="181-181"];
m48_91 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Previous()", file="JsonArrayContract.cs", label="Assert.IsTrue(JToken.DeepEquals(new JArray(7, 8), previous))", span="172-172"];
m48_92 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Previous()", file="JsonArrayContract.cs", label="previous = previous.Previous", span="174-174"];
m48_93 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Previous()", file="JsonArrayContract.cs", label="Assert.AreEqual(6, (int)previous)", span="175-175"];
m48_98 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Previous()", file="JsonArrayContract.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Previous()", span="161-161"];
m48_167 [cluster="Newtonsoft.Json.Linq.JValue.JValue(string)", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(string)", span="112-112"];
m48_299 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="752-752"];
m48_359 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithConverters()", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithConverters()", span="591-591"];
m48_362 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithConverters()", file="JsonArrayContract.cs", label="Assert.AreEqual(@''[\r\n  ''''2009-02-15T00:00:00Z''''\r\n]'', json)", span="600-602"];
m48_364 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithConverters()", file="JsonArrayContract.cs", label="Assert.AreEqual(@''[''''2009-02-15T00:00:00Z'''']'', json)", span="606-606"];
m48_361 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithConverters()", file="JsonArrayContract.cs", label="string json = a.ToString(Formatting.Indented, new IsoDateTimeConverter())", span="598-598"];
m48_363 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithConverters()", file="JsonArrayContract.cs", label="json = JsonConvert.SerializeObject(a, new IsoDateTimeConverter())", span="604-604"];
m48_360 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithConverters()", file="JsonArrayContract.cs", label="JArray a =\r\n        new JArray(\r\n          new JValue(new DateTime(2009, 2, 15, 0, 0, 0, DateTimeKind.Utc))\r\n        )", span="593-596"];
m48_365 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithConverters()", file="JsonArrayContract.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithConverters()", span="591-591"];
m48_27 [cluster="Unk.AreEqual", file="JsonArrayContract.cs", label="Entry Unk.AreEqual", span=""];
m48_301 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="371-371"];
m48_99 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Children()", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Children()", span="185-185"];
m48_100 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Children()", file="JsonArrayContract.cs", label="JArray a =\r\n        new JArray(\r\n          5,\r\n          new JArray(1),\r\n          new JArray(1, 2),\r\n          new JArray(1, 2, 3)\r\n        )", span="187-193"];
m48_101 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Children()", file="JsonArrayContract.cs", label="Assert.AreEqual(4, a.Count())", span="195-195"];
m48_102 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Children()", file="JsonArrayContract.cs", label="Assert.AreEqual(3, a.Children<JArray>().Count())", span="196-196"];
m48_103 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Children()", file="JsonArrayContract.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Children()", span="185-185"];
m48_67 [cluster="System.DateTime.DateTime(int, int, int)", file="JsonArrayContract.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m48_111 [cluster="Newtonsoft.Json.Linq.JToken.BeforeSelf()", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Linq.JToken.BeforeSelf()", span="214-214"];
m48_298 [cluster="Unk.IsNotNull", file="JsonArrayContract.cs", label="Entry Unk.IsNotNull", span=""];
m48_164 [cluster="Newtonsoft.Json.Linq.JValue.JValue(bool)", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(bool)", span="103-103"];
m48_415 [cluster="Newtonsoft.Json.Tests.Console.WriteLine(params object[])", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Tests.Console.WriteLine(params object[])", span="79-79"];
m48_162 [cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", file="JsonArrayContract.cs", label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", span="0-0"];
m48_333 [cluster="lambda expression", file="JsonArrayContract.cs", label="Entry lambda expression", span="546-550"];
m48_439 [cluster="lambda expression", file="JsonArrayContract.cs", label="JToken.Parse(json)", span="768-768"];
m48_438 [cluster="lambda expression", file="JsonArrayContract.cs", label="string json = @''[\r\n''''Small'''',\r\n''''Medium'''',\r\n''''Large''''\r\n],''", span="762-766"];
m48_440 [cluster="lambda expression", file="JsonArrayContract.cs", label="Exit lambda expression", span="760-769"];
m48_437 [cluster="lambda expression", file="JsonArrayContract.cs", label="Entry lambda expression", span="760-769"];
m48_334 [cluster="lambda expression", file="JsonArrayContract.cs", label="JArray a = new JArray()", span="548-548"];
m48_335 [cluster="lambda expression", file="JsonArrayContract.cs", label="a.Add(new JProperty(''PropertyName''))", span="549-549"];
m48_336 [cluster="lambda expression", file="JsonArrayContract.cs", label="Exit lambda expression", span="546-550"];
m48_26 [cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", span="1192-1192"];
m48_337 [cluster="Newtonsoft.Json.Linq.JArray.JArray()", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Linq.JArray.JArray()", span="64-64"];
m48_249 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="JsonArrayContract.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m48_300 [cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="318-318"];
m48_217 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", span="339-339"];
m48_219 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JsonArrayContract.cs", label="JArray a =\r\n        new JArray(\r\n          5,\r\n          6,\r\n          new JArray(7, 8),\r\n          new JArray(9, 10)\r\n        )", span="342-348"];
m48_224 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JsonArrayContract.cs", label="Assert.IsTrue(JToken.DeepEquals(new JArray(9, 10), a[1]))", span="357-357"];
m48_221 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JsonArrayContract.cs", label="Assert.AreEqual(6, (int)a[0])", span="352-352"];
m48_223 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JsonArrayContract.cs", label="Assert.AreEqual(6, (int)a[0])", span="356-356"];
m48_225 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JsonArrayContract.cs", label="Assert.AreEqual(2, a.Count())", span="358-358"];
m48_228 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JsonArrayContract.cs", label="Assert.AreEqual(6, (int)a[0])", span="362-362"];
m48_234 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JsonArrayContract.cs", label="Assert.AreEqual(0, a.Count())", span="369-369"];
m48_218 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JsonArrayContract.cs", label="JToken t", span="341-341"];
m48_220 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JsonArrayContract.cs", label="a[0].Remove()", span="350-350"];
m48_222 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JsonArrayContract.cs", label="a[1].Remove()", span="354-354"];
m48_226 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JsonArrayContract.cs", label="t = a[1]", span="360-360"];
m48_232 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JsonArrayContract.cs", label="t = a[0]", span="367-367"];
m48_229 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JsonArrayContract.cs", label="Assert.IsNull(t.Next)", span="363-363"];
m48_230 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JsonArrayContract.cs", label="Assert.IsNull(t.Previous)", span="364-364"];
m48_231 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JsonArrayContract.cs", label="Assert.IsNull(t.Parent)", span="365-365"];
m48_235 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JsonArrayContract.cs", label="Assert.IsNull(t.Next)", span="371-371"];
m48_236 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JsonArrayContract.cs", label="Assert.IsNull(t.Previous)", span="372-372"];
m48_237 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JsonArrayContract.cs", label="Assert.IsNull(t.Parent)", span="373-373"];
m48_227 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JsonArrayContract.cs", label="t.Remove()", span="361-361"];
m48_233 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JsonArrayContract.cs", label="t.Remove()", span="368-368"];
m48_238 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JsonArrayContract.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", span="339-339"];
m48_25 [cluster="System.IO.StringReader.StringReader(string)", file="JsonArrayContract.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m48_250 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", span="396-396"];
m48_251 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", file="JsonArrayContract.cs", label="JArray a =\r\n        new JArray(\r\n          5,\r\n          new JArray(1),\r\n          new JArray(1, 2),\r\n          new JArray(1, 2, 3)\r\n        )", span="398-404"];
m48_254 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", file="JsonArrayContract.cs", label="Assert.AreEqual(2, beforeTokens.Count)", span="409-409"];
m48_252 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", file="JsonArrayContract.cs", label="JToken t = a[2]", span="406-406"];
m48_253 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", file="JsonArrayContract.cs", label="List<JToken> beforeTokens = t.BeforeSelf().ToList()", span="407-407"];
m48_255 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", file="JsonArrayContract.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(5), beforeTokens[0]))", span="410-410"];
m48_256 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", file="JsonArrayContract.cs", label="Assert.IsTrue(JToken.DeepEquals(new JArray(1), beforeTokens[1]))", span="411-411"];
m48_257 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", file="JsonArrayContract.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", span="396-396"];
m48_332 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", span="109-109"];
m48_358 [cluster="Newtonsoft.Json.Linq.JToken.Replace(Newtonsoft.Json.Linq.JToken)", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Linq.JToken.Replace(Newtonsoft.Json.Linq.JToken)", span="305-305"];
m48_71 [cluster="Newtonsoft.Json.Linq.JObject.Property(string)", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Linq.JObject.Property(string)", span="224-224"];
m48_414 [cluster="Newtonsoft.Json.Linq.JToken.DeepClone()", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Linq.JToken.DeepClone()", span="1350-1350"];
m48_105 [cluster="Newtonsoft.Json.Linq.JToken.Children<T>()", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Linq.JToken.Children<T>()", span="275-275"];
m48_240 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", span="377-377"];
m48_241 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", file="JsonArrayContract.cs", label="JArray a =\r\n        new JArray(\r\n          5,\r\n          new JArray(1),\r\n          new JArray(1, 2),\r\n          new JArray(1, 2, 3)\r\n        )", span="379-385"];
m48_245 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", file="JsonArrayContract.cs", label="Assert.IsTrue(JToken.DeepEquals(new JArray(1, 2), afterTokens[0]))", span="391-391"];
m48_246 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", file="JsonArrayContract.cs", label="Assert.IsTrue(JToken.DeepEquals(new JArray(1, 2, 3), afterTokens[1]))", span="392-392"];
m48_244 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", file="JsonArrayContract.cs", label="Assert.AreEqual(2, afterTokens.Count)", span="390-390"];
m48_242 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", file="JsonArrayContract.cs", label="JToken t = a[1]", span="387-387"];
m48_243 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", file="JsonArrayContract.cs", label="List<JToken> afterTokens = t.AfterSelf().ToList()", span="388-388"];
m48_247 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", file="JsonArrayContract.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", span="377-377"];
m48_262 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", span="429-429"];
m48_263 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", file="JsonArrayContract.cs", label="JArray a =\r\n        new JArray(\r\n          5,\r\n          new JArray(1),\r\n          new JArray(1, 2),\r\n          new JArray(1, 2, 3)\r\n        )", span="431-437"];
m48_267 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", file="JsonArrayContract.cs", label="Assert.AreEqual(a[1], ancestors[0])", span="442-442"];
m48_268 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", file="JsonArrayContract.cs", label="Assert.AreEqual(a, ancestors[1])", span="443-443"];
m48_266 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", file="JsonArrayContract.cs", label="Assert.AreEqual(2, ancestors.Count())", span="441-441"];
m48_264 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", file="JsonArrayContract.cs", label="JToken t = a[1][0]", span="439-439"];
m48_265 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", file="JsonArrayContract.cs", label="List<JToken> ancestors = t.Ancestors().ToList()", span="440-440"];
m48_269 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", file="JsonArrayContract.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", span="429-429"];
m48_39 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parse()", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Parse()", span="88-88"];
m48_41 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parse()", file="JsonArrayContract.cs", label="Assert.AreEqual(true, (bool)o[''pie''])", span="91-91"];
m48_40 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parse()", file="JsonArrayContract.cs", label="JObject o = (JObject)JToken.Parse(''{'pie':true}'')", span="90-90"];
m48_42 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parse()", file="JsonArrayContract.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Parse()", span="88-88"];
m48_433 [cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="153-153"];
m48_369 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", span="689-689"];
m48_423 [cluster="System.ICloneable.Clone()", file="JsonArrayContract.cs", label="Entry System.ICloneable.Clone()", span="0-0"];
m48_112 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", span="216-216"];
m48_147 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", color=green, community=0, file="JsonArrayContract.cs", label="Assert.AreEqual(float.MinValue, (float)new JValue(float.MinValue))", prediction=17, span="255-255"];
m48_146 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonArrayContract.cs", label="Assert.AreEqual(11.1f, (float)new JValue(11.1))", span="254-254"];
m48_148 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonArrayContract.cs", label="Assert.AreEqual(1.1, (double)new JValue(1.1))", span="256-256"];
m48_114 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonArrayContract.cs", label="Assert.AreEqual(2L, (long) new JArray(1, 2, 3)[1])", span="219-219"];
m48_145 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonArrayContract.cs", label="Assert.AreEqual(null, (uint?)(JValue)null)", span="253-253"];
m48_149 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonArrayContract.cs", label="Assert.AreEqual(uint.MaxValue, (uint)new JValue(uint.MaxValue))", span="257-257"];
m48_113 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonArrayContract.cs", label="Assert.AreEqual(1L, (long)(new JValue(1)))", span="218-218"];
m48_115 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonArrayContract.cs", label="Assert.AreEqual(new DateTime(2000, 12, 20), (DateTime)new JValue(new DateTime(2000, 12, 20)))", span="221-221"];
m48_116 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonArrayContract.cs", label="Assert.AreEqual(new DateTimeOffset(2000, 12, 20, 23, 50, 10, TimeSpan.Zero), (DateTimeOffset)new JValue(new DateTimeOffset(2000, 12, 20, 23, 50, 10, TimeSpan.Zero)))", span="223-223"];
m48_117 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonArrayContract.cs", label="Assert.AreEqual(null, (DateTimeOffset?)new JValue((DateTimeOffset?)null))", span="224-224"];
m48_118 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonArrayContract.cs", label="Assert.AreEqual(null, (DateTimeOffset?)(JValue)null)", span="225-225"];
m48_119 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonArrayContract.cs", label="Assert.AreEqual(true, (bool)new JValue(true))", span="227-227"];
m48_120 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonArrayContract.cs", label="Assert.AreEqual(true, (bool?)new JValue(true))", span="228-228"];
m48_121 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonArrayContract.cs", label="Assert.AreEqual(null, (bool?)((JValue)null))", span="229-229"];
m48_122 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonArrayContract.cs", label="Assert.AreEqual(null, (bool?)new JValue((object)null))", span="230-230"];
m48_123 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonArrayContract.cs", label="Assert.AreEqual(10, (long)new JValue(10))", span="231-231"];
m48_124 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonArrayContract.cs", label="Assert.AreEqual(null, (long?)new JValue((long?)null))", span="232-232"];
m48_125 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonArrayContract.cs", label="Assert.AreEqual(null, (long?)(JValue)null)", span="233-233"];
m48_126 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonArrayContract.cs", label="Assert.AreEqual(null, (int?)new JValue((int?)null))", span="234-234"];
m48_127 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonArrayContract.cs", label="Assert.AreEqual(null, (int?)(JValue)null)", span="235-235"];
m48_128 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonArrayContract.cs", label="Assert.AreEqual(null, (DateTime?)new JValue((DateTime?)null))", span="236-236"];
m48_129 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonArrayContract.cs", label="Assert.AreEqual(null, (DateTime?)(JValue)null)", span="237-237"];
m48_130 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonArrayContract.cs", label="Assert.AreEqual(null, (short?)new JValue((short?)null))", span="238-238"];
m48_131 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonArrayContract.cs", label="Assert.AreEqual(null, (short?)(JValue)null)", span="239-239"];
m48_132 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonArrayContract.cs", label="Assert.AreEqual(null, (float?)new JValue((float?)null))", span="240-240"];
m48_133 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonArrayContract.cs", label="Assert.AreEqual(null, (float?)(JValue)null)", span="241-241"];
m48_134 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonArrayContract.cs", label="Assert.AreEqual(null, (double?)new JValue((double?)null))", span="242-242"];
m48_135 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonArrayContract.cs", label="Assert.AreEqual(null, (double?)(JValue)null)", span="243-243"];
m48_136 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonArrayContract.cs", label="Assert.AreEqual(null, (decimal?)new JValue((decimal?)null))", span="244-244"];
m48_137 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonArrayContract.cs", label="Assert.AreEqual(null, (decimal?)(JValue)null)", span="245-245"];
m48_138 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonArrayContract.cs", label="Assert.AreEqual(null, (uint?)new JValue((uint?)null))", span="246-246"];
m48_139 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonArrayContract.cs", label="Assert.AreEqual(null, (uint?)(JValue)null)", span="247-247"];
m48_140 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonArrayContract.cs", label="Assert.AreEqual(null, (sbyte?)new JValue((sbyte?)null))", span="248-248"];
m48_141 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonArrayContract.cs", label="Assert.AreEqual(null, (sbyte?)(JValue)null)", span="249-249"];
m48_142 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonArrayContract.cs", label="Assert.AreEqual(null, (ulong?)new JValue((ulong?)null))", span="250-250"];
m48_143 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonArrayContract.cs", label="Assert.AreEqual(null, (ulong?)(JValue)null)", span="251-251"];
m48_144 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonArrayContract.cs", label="Assert.AreEqual(null, (uint?)new JValue((uint?)null))", span="252-252"];
m48_150 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonArrayContract.cs", label="Assert.AreEqual(ulong.MaxValue, (ulong)new JValue(ulong.MaxValue))", span="258-258"];
m48_151 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonArrayContract.cs", label="Assert.AreEqual(ulong.MaxValue, (ulong)new JProperty(''Test'', new JValue(ulong.MaxValue)))", span="259-259"];
m48_152 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonArrayContract.cs", label="Assert.AreEqual(null, (string)new JValue((string)null))", span="260-260"];
m48_153 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonArrayContract.cs", label="Assert.AreEqual(5m, (decimal)(new JValue(5L)))", span="261-261"];
m48_154 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonArrayContract.cs", label="Assert.AreEqual(5m, (decimal?)(new JValue(5L)))", span="262-262"];
m48_155 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonArrayContract.cs", label="Assert.AreEqual(5f, (float)(new JValue(5L)))", span="263-263"];
m48_156 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonArrayContract.cs", label="Assert.AreEqual(5f, (float)(new JValue(5m)))", span="264-264"];
m48_157 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonArrayContract.cs", label="Assert.AreEqual(5f, (float?)(new JValue(5m)))", span="265-265"];
m48_159 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonArrayContract.cs", label="Assert.AreEqual(data, (byte[])(new JValue(data)))", span="268-268"];
m48_160 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonArrayContract.cs", label="Assert.AreEqual(5, (int)(new JValue(StringComparison.OrdinalIgnoreCase)))", span="270-270"];
m48_158 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonArrayContract.cs", label="byte[] data = new byte[0]", span="267-267"];
m48_161 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonArrayContract.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", span="216-216"];
m48_366 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JsonArrayContract.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m48_248 [cluster="Newtonsoft.Json.Linq.JToken.AfterSelf()", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Linq.JToken.AfterSelf()", span="201-201"];
m48_318 [cluster="Newtonsoft.Json.Linq.JContainer.AddFirst(object)", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Linq.JContainer.AddFirst(object)", span="530-530"];
m48_34 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Load()", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Load()", span="81-81"];
m48_36 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Load()", file="JsonArrayContract.cs", label="Assert.AreEqual(true, (bool)o[''pie''])", span="84-84"];
m48_35 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Load()", file="JsonArrayContract.cs", label="JObject o = (JObject)JToken.Load(new JsonTextReader(new StringReader(''{'pie':true}'')))", span="83-83"];
m48_37 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Load()", file="JsonArrayContract.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Load()", span="81-81"];
m48_210 [cluster="System.Text.Encoding.GetBytes(string)", file="JsonArrayContract.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m48_386 [cluster="Newtonsoft.Json.Linq.JToken.AddAfterSelf(object)", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Linq.JToken.AddAfterSelf(object)", span="163-163"];
m48_165 [cluster="Newtonsoft.Json.Linq.JValue.JValue(double)", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(double)", span="85-85"];
m48_32 [cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="130-130"];
m49_9 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetCachedAttribute<T>(object)", file="JsonContainerContract.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetCachedAttribute<T>(object)", span="66-66"];
m49_10 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.CreateJsonConverterInstance(System.Type, object[])", file="JsonContainerContract.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.CreateJsonConverterInstance(System.Type, object[])", span="180-180"];
m49_0 [cluster="Newtonsoft.Json.Serialization.JsonContainerContract.JsonContainerContract(System.Type)", file="JsonContainerContract.cs", label="Entry Newtonsoft.Json.Serialization.JsonContainerContract.JsonContainerContract(System.Type)", span="99-99"];
m49_1 [cluster="Newtonsoft.Json.Serialization.JsonContainerContract.JsonContainerContract(System.Type)", file="JsonContainerContract.cs", label="JsonContainerAttribute jsonContainerAttribute = JsonTypeReflector.GetCachedAttribute<JsonContainerAttribute>(underlyingType)", span="102-102"];
m49_2 [cluster="Newtonsoft.Json.Serialization.JsonContainerContract.JsonContainerContract(System.Type)", file="JsonContainerContract.cs", label="jsonContainerAttribute != null", span="104-104"];
m49_3 [cluster="Newtonsoft.Json.Serialization.JsonContainerContract.JsonContainerContract(System.Type)", file="JsonContainerContract.cs", label="jsonContainerAttribute.ItemConverterType != null", span="106-106"];
m49_4 [cluster="Newtonsoft.Json.Serialization.JsonContainerContract.JsonContainerContract(System.Type)", file="JsonContainerContract.cs", label="ItemConverter = JsonTypeReflector.CreateJsonConverterInstance(\r\n                        jsonContainerAttribute.ItemConverterType,\r\n                        jsonContainerAttribute.ItemConverterParameters)", span="108-110"];
m49_5 [cluster="Newtonsoft.Json.Serialization.JsonContainerContract.JsonContainerContract(System.Type)", file="JsonContainerContract.cs", label="ItemIsReference = jsonContainerAttribute._itemIsReference", span="113-113"];
m49_6 [cluster="Newtonsoft.Json.Serialization.JsonContainerContract.JsonContainerContract(System.Type)", file="JsonContainerContract.cs", label="ItemReferenceLoopHandling = jsonContainerAttribute._itemReferenceLoopHandling", span="114-114"];
m49_7 [cluster="Newtonsoft.Json.Serialization.JsonContainerContract.JsonContainerContract(System.Type)", file="JsonContainerContract.cs", label="ItemTypeNameHandling = jsonContainerAttribute._itemTypeNameHandling", span="115-115"];
m49_8 [cluster="Newtonsoft.Json.Serialization.JsonContainerContract.JsonContainerContract(System.Type)", file="JsonContainerContract.cs", label="Exit Newtonsoft.Json.Serialization.JsonContainerContract.JsonContainerContract(System.Type)", span="99-99"];
m49_11 [file="JsonContainerContract.cs", label="Newtonsoft.Json.Serialization.JsonContainerContract", span=""];
m50_7 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="739-739"];
m50_9 [cluster="Unk.AreEqual", file="JsonConvert.cs", label="Entry Unk.AreEqual", span=""];
m50_8 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="512-512"];
m50_0 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeExtensionData.Example()", file="JsonConvert.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeExtensionData.Example()", span="51-51"];
m50_1 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeExtensionData.Example()", file="JsonConvert.cs", label="string json = @''{\r\n              'HourlyRate': 150,\r\n              'Hours': 40,\r\n              'TaxRate': 0.125\r\n            }''", span="54-58"];
m50_2 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeExtensionData.Example()", file="JsonConvert.cs", label="CustomerInvoice invoice = JsonConvert.DeserializeObject<CustomerInvoice>(json)", span="60-60"];
m50_3 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeExtensionData.Example()", file="JsonConvert.cs", label="invoice.TaxRate = 0.15m", span="63-63"];
m50_4 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeExtensionData.Example()", file="JsonConvert.cs", label="string result = JsonConvert.SerializeObject(invoice)", span="65-65"];
m50_5 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeExtensionData.Example()", file="JsonConvert.cs", label="Assert.AreEqual(@''{''''TaxRate'''':0.15,''''HourlyRate'''':150,''''Hours'''':40}'', result)", span="73-73"];
m50_6 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeExtensionData.Example()", file="JsonConvert.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeExtensionData.Example()", span="51-51"];
m53_6 [cluster="Newtonsoft.Json.JsonException.JsonException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonException.cs", label="Entry Newtonsoft.Json.JsonException.JsonException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="78-78"];
m53_7 [cluster="Newtonsoft.Json.JsonException.JsonException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonException.cs", label="Exit Newtonsoft.Json.JsonException.JsonException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="78-78"];
m53_8 [cluster="Newtonsoft.Json.JsonException.Create(Newtonsoft.Json.IJsonLineInfo, string, string)", file="JsonException.cs", label="Entry Newtonsoft.Json.JsonException.Create(Newtonsoft.Json.IJsonLineInfo, string, string)", span="84-84"];
m53_9 [cluster="Newtonsoft.Json.JsonException.Create(Newtonsoft.Json.IJsonLineInfo, string, string)", file="JsonException.cs", label="message = JsonPosition.FormatMessage(lineInfo, path, message)", span="86-86"];
m53_10 [cluster="Newtonsoft.Json.JsonException.Create(Newtonsoft.Json.IJsonLineInfo, string, string)", file="JsonException.cs", label="return new JsonException(message);", span="88-88"];
m53_11 [cluster="Newtonsoft.Json.JsonException.Create(Newtonsoft.Json.IJsonLineInfo, string, string)", file="JsonException.cs", label="Exit Newtonsoft.Json.JsonException.Create(Newtonsoft.Json.IJsonLineInfo, string, string)", span="84-84"];
m53_0 [cluster="Newtonsoft.Json.JsonException.JsonException()", file="JsonException.cs", label="Entry Newtonsoft.Json.JsonException.JsonException()", span="45-45"];
m53_1 [cluster="Newtonsoft.Json.JsonException.JsonException()", file="JsonException.cs", label="Exit Newtonsoft.Json.JsonException.JsonException()", span="45-45"];
m53_2 [cluster="Newtonsoft.Json.JsonException.JsonException(string)", file="JsonException.cs", label="Entry Newtonsoft.Json.JsonException.JsonException(string)", span="54-54"];
m53_3 [cluster="Newtonsoft.Json.JsonException.JsonException(string)", file="JsonException.cs", label="Exit Newtonsoft.Json.JsonException.JsonException(string)", span="54-54"];
m53_4 [cluster="Newtonsoft.Json.JsonException.JsonException(string, System.Exception)", file="JsonException.cs", label="Entry Newtonsoft.Json.JsonException.JsonException(string, System.Exception)", span="65-65"];
m53_5 [cluster="Newtonsoft.Json.JsonException.JsonException(string, System.Exception)", file="JsonException.cs", label="Exit Newtonsoft.Json.JsonException.JsonException(string, System.Exception)", span="65-65"];
m53_12 [cluster="Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", file="JsonException.cs", label="Entry Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", span="139-139"];
m54_67 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToUInt16(object)", file="JsonFormatterConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonFormatterConverter.ToUInt16(object)", span="143-143"];
m54_68 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToUInt16(object)", file="JsonFormatterConverter.cs", label="return GetTokenValue<ushort>(value);", span="145-145"];
m54_69 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToUInt16(object)", file="JsonFormatterConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonFormatterConverter.ToUInt16(object)", span="143-143"];
m54_23 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializableItem(Newtonsoft.Json.Linq.JToken, System.Type, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonFormatterConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializableItem(Newtonsoft.Json.Linq.JToken, System.Type, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty)", span="1746-1746"];
m54_70 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToUInt32(object)", file="JsonFormatterConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonFormatterConverter.ToUInt32(object)", span="148-148"];
m54_71 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToUInt32(object)", file="JsonFormatterConverter.cs", label="return GetTokenValue<uint>(value);", span="150-150"];
m54_72 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToUInt32(object)", file="JsonFormatterConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonFormatterConverter.ToUInt32(object)", span="148-148"];
m54_14 [cluster="System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", file="JsonFormatterConverter.cs", label="Entry System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", span="0-0"];
m54_52 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToInt32(object)", file="JsonFormatterConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonFormatterConverter.ToInt32(object)", span="118-118"];
m54_53 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToInt32(object)", file="JsonFormatterConverter.cs", label="return GetTokenValue<int>(value);", span="120-120"];
m54_54 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToInt32(object)", file="JsonFormatterConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonFormatterConverter.ToInt32(object)", span="118-118"];
m54_40 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToDateTime(object)", file="JsonFormatterConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonFormatterConverter.ToDateTime(object)", span="98-98"];
m54_41 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToDateTime(object)", file="JsonFormatterConverter.cs", label="return GetTokenValue<DateTime>(value);", span="100-100"];
m54_42 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToDateTime(object)", file="JsonFormatterConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonFormatterConverter.ToDateTime(object)", span="98-98"];
m54_7 [cluster="Unk.nameof", file="JsonFormatterConverter.cs", label="Entry Unk.nameof", span=""];
m54_46 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToDouble(object)", file="JsonFormatterConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonFormatterConverter.ToDouble(object)", span="108-108"];
m54_47 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToDouble(object)", file="JsonFormatterConverter.cs", label="return GetTokenValue<double>(value);", span="110-110"];
m54_48 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToDouble(object)", file="JsonFormatterConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonFormatterConverter.ToDouble(object)", span="108-108"];
m54_9 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.GetTokenValue<T>(object)", file="JsonFormatterConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonFormatterConverter.GetTokenValue<T>(object)", span="50-50"];
m54_10 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.GetTokenValue<T>(object)", file="JsonFormatterConverter.cs", label="ValidationUtils.ArgumentNotNull(value, nameof(value))", span="52-52"];
m54_11 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.GetTokenValue<T>(object)", file="JsonFormatterConverter.cs", label="JValue v = (JValue)value", span="54-54"];
m54_12 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.GetTokenValue<T>(object)", file="JsonFormatterConverter.cs", label="return (T)System.Convert.ChangeType(v.Value, typeof(T), CultureInfo.InvariantCulture);", span="55-55"];
m54_13 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.GetTokenValue<T>(object)", file="JsonFormatterConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonFormatterConverter.GetTokenValue<T>(object)", span="50-50"];
m54_61 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToSingle(object)", file="JsonFormatterConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonFormatterConverter.ToSingle(object)", span="133-133"];
m54_62 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToSingle(object)", file="JsonFormatterConverter.cs", label="return GetTokenValue<float>(value);", span="135-135"];
m54_63 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToSingle(object)", file="JsonFormatterConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonFormatterConverter.ToSingle(object)", span="133-133"];
m54_55 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToInt64(object)", file="JsonFormatterConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonFormatterConverter.ToInt64(object)", span="123-123"];
m54_56 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToInt64(object)", file="JsonFormatterConverter.cs", label="return GetTokenValue<long>(value);", span="125-125"];
m54_57 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToInt64(object)", file="JsonFormatterConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonFormatterConverter.ToInt64(object)", span="123-123"];
m54_0 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.JsonFormatterConverter(Newtonsoft.Json.Serialization.JsonSerializerInternalReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonFormatterConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonFormatterConverter.JsonFormatterConverter(Newtonsoft.Json.Serialization.JsonSerializerInternalReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty)", span="40-40"];
m54_1 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.JsonFormatterConverter(Newtonsoft.Json.Serialization.JsonSerializerInternalReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonFormatterConverter.cs", label="ValidationUtils.ArgumentNotNull(reader, nameof(reader))", span="42-42"];
m54_2 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.JsonFormatterConverter(Newtonsoft.Json.Serialization.JsonSerializerInternalReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonFormatterConverter.cs", label="ValidationUtils.ArgumentNotNull(contract, nameof(contract))", span="43-43"];
m54_3 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.JsonFormatterConverter(Newtonsoft.Json.Serialization.JsonSerializerInternalReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonFormatterConverter.cs", label="_reader = reader", span="45-45"];
m54_4 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.JsonFormatterConverter(Newtonsoft.Json.Serialization.JsonSerializerInternalReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonFormatterConverter.cs", label="_contract = contract", span="46-46"];
m54_5 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.JsonFormatterConverter(Newtonsoft.Json.Serialization.JsonSerializerInternalReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonFormatterConverter.cs", label="_member = member", span="47-47"];
m54_6 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.JsonFormatterConverter(Newtonsoft.Json.Serialization.JsonSerializerInternalReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonFormatterConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonFormatterConverter.JsonFormatterConverter(Newtonsoft.Json.Serialization.JsonSerializerInternalReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty)", span="40-40"];
m54_64 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToString(object)", file="JsonFormatterConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonFormatterConverter.ToString(object)", span="138-138"];
m54_65 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToString(object)", file="JsonFormatterConverter.cs", label="return GetTokenValue<string>(value);", span="140-140"];
m54_66 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToString(object)", file="JsonFormatterConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonFormatterConverter.ToString(object)", span="138-138"];
m54_49 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToInt16(object)", file="JsonFormatterConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonFormatterConverter.ToInt16(object)", span="113-113"];
m54_50 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToInt16(object)", file="JsonFormatterConverter.cs", label="return GetTokenValue<short>(value);", span="115-115"];
m54_51 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToInt16(object)", file="JsonFormatterConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonFormatterConverter.ToInt16(object)", span="113-113"];
m54_30 [cluster="System.Convert.ChangeType(object, System.TypeCode, System.IFormatProvider)", file="JsonFormatterConverter.cs", label="Entry System.Convert.ChangeType(object, System.TypeCode, System.IFormatProvider)", span="0-0"];
m54_22 [cluster="System.ArgumentException.ArgumentException(string, string)", file="JsonFormatterConverter.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m54_37 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToChar(object)", file="JsonFormatterConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonFormatterConverter.ToChar(object)", span="93-93"];
m54_38 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToChar(object)", file="JsonFormatterConverter.cs", label="return GetTokenValue<char>(value);", span="95-95"];
m54_39 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToChar(object)", file="JsonFormatterConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonFormatterConverter.ToChar(object)", span="93-93"];
m54_34 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToByte(object)", file="JsonFormatterConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonFormatterConverter.ToByte(object)", span="88-88"];
m54_35 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToByte(object)", file="JsonFormatterConverter.cs", label="return GetTokenValue<byte>(value);", span="90-90"];
m54_36 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToByte(object)", file="JsonFormatterConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonFormatterConverter.ToByte(object)", span="88-88"];
m54_43 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToDecimal(object)", file="JsonFormatterConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonFormatterConverter.ToDecimal(object)", span="103-103"];
m54_44 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToDecimal(object)", file="JsonFormatterConverter.cs", label="return GetTokenValue<decimal>(value);", span="105-105"];
m54_45 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToDecimal(object)", file="JsonFormatterConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonFormatterConverter.ToDecimal(object)", span="103-103"];
m54_8 [cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="JsonFormatterConverter.cs", label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="31-31"];
m54_15 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.Convert(object, System.Type)", file="JsonFormatterConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonFormatterConverter.Convert(object, System.Type)", span="58-58"];
m54_16 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.Convert(object, System.Type)", file="JsonFormatterConverter.cs", label="ValidationUtils.ArgumentNotNull(value, nameof(value))", span="60-60"];
m54_17 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.Convert(object, System.Type)", file="JsonFormatterConverter.cs", label="JToken token = value as JToken", span="62-62"];
m54_19 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.Convert(object, System.Type)", file="JsonFormatterConverter.cs", label="throw new ArgumentException(''Value is not a JToken.'', nameof(value));", span="65-65"];
m54_20 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.Convert(object, System.Type)", file="JsonFormatterConverter.cs", label="return _reader.CreateISerializableItem(token, type, _contract, _member);", span="68-68"];
m54_18 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.Convert(object, System.Type)", file="JsonFormatterConverter.cs", label="token == null", span="63-63"];
m54_21 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.Convert(object, System.Type)", file="JsonFormatterConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonFormatterConverter.Convert(object, System.Type)", span="58-58"];
m54_58 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToSByte(object)", file="JsonFormatterConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonFormatterConverter.ToSByte(object)", span="128-128"];
m54_59 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToSByte(object)", file="JsonFormatterConverter.cs", label="return GetTokenValue<sbyte>(value);", span="130-130"];
m54_60 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToSByte(object)", file="JsonFormatterConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonFormatterConverter.ToSByte(object)", span="128-128"];
m54_31 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToBoolean(object)", file="JsonFormatterConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonFormatterConverter.ToBoolean(object)", span="83-83"];
m54_32 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToBoolean(object)", file="JsonFormatterConverter.cs", label="return GetTokenValue<bool>(value);", span="85-85"];
m54_33 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToBoolean(object)", file="JsonFormatterConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonFormatterConverter.ToBoolean(object)", span="83-83"];
m54_24 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.Convert(object, System.TypeCode)", file="JsonFormatterConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonFormatterConverter.Convert(object, System.TypeCode)", span="71-71"];
m54_25 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.Convert(object, System.TypeCode)", file="JsonFormatterConverter.cs", label="ValidationUtils.ArgumentNotNull(value, nameof(value))", span="73-73"];
m54_26 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.Convert(object, System.TypeCode)", file="JsonFormatterConverter.cs", label="value is JValue", span="75-75"];
m54_27 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.Convert(object, System.TypeCode)", file="JsonFormatterConverter.cs", label="value = ((JValue)value).Value", span="77-77"];
m54_28 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.Convert(object, System.TypeCode)", file="JsonFormatterConverter.cs", label="return System.Convert.ChangeType(value, typeCode, CultureInfo.InvariantCulture);", span="80-80"];
m54_29 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.Convert(object, System.TypeCode)", file="JsonFormatterConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonFormatterConverter.Convert(object, System.TypeCode)", span="71-71"];
m54_73 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToUInt64(object)", file="JsonFormatterConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonFormatterConverter.ToUInt64(object)", span="153-153"];
m54_74 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToUInt64(object)", file="JsonFormatterConverter.cs", label="return GetTokenValue<ulong>(value);", span="155-155"];
m54_75 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.ToUInt64(object)", file="JsonFormatterConverter.cs", label="Exit Newtonsoft.Json.Serialization.JsonFormatterConverter.ToUInt64(object)", span="153-153"];
m54_76 [file="JsonFormatterConverter.cs", label="Newtonsoft.Json.Serialization.JsonFormatterConverter", span=""];
m55_0 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeCollection.Example()", file="JsonISerializableContract.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeCollection.Example()", span="9-9"];
m55_1 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeCollection.Example()", file="JsonISerializableContract.cs", label="List<string> videogames = new List<string>\r\n            {\r\n                ''Starcraft'',\r\n                ''Halo'',\r\n                ''Legend of Zelda''\r\n            }", span="12-17"];
m55_2 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeCollection.Example()", file="JsonISerializableContract.cs", label="string json = JsonConvert.SerializeObject(videogames)", span="19-19"];
m55_3 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeCollection.Example()", file="JsonISerializableContract.cs", label="Console.WriteLine(json)", span="21-21"];
m55_4 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeCollection.Example()", file="JsonISerializableContract.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeCollection.Example()", span="9-9"];
m55_5 [cluster="System.Collections.Generic.List<T>.List()", file="JsonISerializableContract.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m55_6 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="JsonISerializableContract.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="512-512"];
m55_7 [cluster="System.Console.WriteLine(string)", file="JsonISerializableContract.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m56_4 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(System.Type)", file="JsonObjectContract.cs", label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(System.Type)", span="46-46"];
m56_12 [cluster="System.Runtime.Serialization.FormatterServices.GetUninitializedObject(System.Type)", file="JsonObjectContract.cs", label="Entry System.Runtime.Serialization.FormatterServices.GetUninitializedObject(System.Type)", span="0-0"];
m56_0 [cluster="Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", file="JsonObjectContract.cs", label="Entry Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", span="208-208"];
m56_1 [cluster="Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", file="JsonObjectContract.cs", label="ContractType = JsonContractType.Object", span="211-211"];
m56_2 [cluster="Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", file="JsonObjectContract.cs", label="Properties = new JsonPropertyCollection(UnderlyingType)", span="213-213"];
m56_3 [cluster="Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", file="JsonObjectContract.cs", label="Exit Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", span="208-208"];
m56_10 [cluster="Newtonsoft.Json.JsonException.JsonException(string)", file="JsonObjectContract.cs", label="Entry Newtonsoft.Json.JsonException.JsonException(string)", span="54-54"];
m56_5 [cluster="Newtonsoft.Json.Serialization.JsonObjectContract.GetUninitializedObject()", file="JsonObjectContract.cs", label="Entry Newtonsoft.Json.Serialization.JsonObjectContract.GetUninitializedObject()", span="220-220"];
m56_6 [cluster="Newtonsoft.Json.Serialization.JsonObjectContract.GetUninitializedObject()", file="JsonObjectContract.cs", label="!JsonTypeReflector.FullyTrusted", span="223-223"];
m56_7 [cluster="Newtonsoft.Json.Serialization.JsonObjectContract.GetUninitializedObject()", file="JsonObjectContract.cs", label="throw new JsonException(''Insufficient permissions. Creating an uninitialized '{0}' type requires full trust.''.FormatWith(CultureInfo.InvariantCulture, NonNullableUnderlyingType));", span="225-225"];
m56_8 [cluster="Newtonsoft.Json.Serialization.JsonObjectContract.GetUninitializedObject()", file="JsonObjectContract.cs", label="return FormatterServices.GetUninitializedObject(NonNullableUnderlyingType);", span="228-228"];
m56_9 [cluster="Newtonsoft.Json.Serialization.JsonObjectContract.GetUninitializedObject()", file="JsonObjectContract.cs", label="Exit Newtonsoft.Json.Serialization.JsonObjectContract.GetUninitializedObject()", span="220-220"];
m56_11 [cluster="string.FormatWith(System.IFormatProvider, object)", file="JsonObjectContract.cs", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
m56_13 [file="JsonObjectContract.cs", label="Newtonsoft.Json.Serialization.JsonObjectContract", span=""];
m57_0 [cluster="Newtonsoft.Json.Serialization.JsonPrimitiveContract.JsonPrimitiveContract(System.Type)", file="JsonPrimitiveContract.cs", label="Entry Newtonsoft.Json.Serialization.JsonPrimitiveContract.JsonPrimitiveContract(System.Type)", span="42-42"];
m57_1 [cluster="Newtonsoft.Json.Serialization.JsonPrimitiveContract.JsonPrimitiveContract(System.Type)", file="JsonPrimitiveContract.cs", label="ContractType = JsonContractType.Primitive", span="45-45"];
m57_2 [cluster="Newtonsoft.Json.Serialization.JsonPrimitiveContract.JsonPrimitiveContract(System.Type)", file="JsonPrimitiveContract.cs", label="TypeCode = ConvertUtils.GetTypeCode(underlyingType)", span="47-47"];
m57_3 [cluster="Newtonsoft.Json.Serialization.JsonPrimitiveContract.JsonPrimitiveContract(System.Type)", file="JsonPrimitiveContract.cs", label="IsReadOnlyOrFixedSize = true", span="48-48"];
m57_4 [cluster="Newtonsoft.Json.Serialization.JsonPrimitiveContract.JsonPrimitiveContract(System.Type)", file="JsonPrimitiveContract.cs", label="ReadType readType", span="50-50"];
m57_5 [cluster="Newtonsoft.Json.Serialization.JsonPrimitiveContract.JsonPrimitiveContract(System.Type)", file="JsonPrimitiveContract.cs", label="ReadTypeMap.TryGetValue(NonNullableUnderlyingType, out readType)", span="51-51"];
m57_6 [cluster="Newtonsoft.Json.Serialization.JsonPrimitiveContract.JsonPrimitiveContract(System.Type)", file="JsonPrimitiveContract.cs", label="InternalReadType = readType", span="53-53"];
m57_7 [cluster="Newtonsoft.Json.Serialization.JsonPrimitiveContract.JsonPrimitiveContract(System.Type)", file="JsonPrimitiveContract.cs", label="Exit Newtonsoft.Json.Serialization.JsonPrimitiveContract.JsonPrimitiveContract(System.Type)", span="42-42"];
m57_8 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type)", file="JsonPrimitiveContract.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type)", span="185-185"];
m57_9 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="JsonPrimitiveContract.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m57_10 [file="JsonPrimitiveContract.cs", label="Newtonsoft.Json.Serialization.JsonPrimitiveContract", span=""];
m58_18 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="JsonProperty.cs", label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="455-455"];
m58_12 [cluster="Newtonsoft.Json.Serialization.JsonProperty.WritePropertyName(Newtonsoft.Json.JsonWriter)", file="JsonProperty.cs", label="Entry Newtonsoft.Json.Serialization.JsonProperty.WritePropertyName(Newtonsoft.Json.JsonWriter)", span="295-295"];
m58_13 [cluster="Newtonsoft.Json.Serialization.JsonProperty.WritePropertyName(Newtonsoft.Json.JsonWriter)", file="JsonProperty.cs", label=_skipPropertyNameEscape, span="297-297"];
m58_14 [cluster="Newtonsoft.Json.Serialization.JsonProperty.WritePropertyName(Newtonsoft.Json.JsonWriter)", file="JsonProperty.cs", label="writer.WritePropertyName(PropertyName, false)", span="299-299"];
m58_15 [cluster="Newtonsoft.Json.Serialization.JsonProperty.WritePropertyName(Newtonsoft.Json.JsonWriter)", file="JsonProperty.cs", label="writer.WritePropertyName(PropertyName)", span="303-303"];
m58_16 [cluster="Newtonsoft.Json.Serialization.JsonProperty.WritePropertyName(Newtonsoft.Json.JsonWriter)", file="JsonProperty.cs", label="Exit Newtonsoft.Json.Serialization.JsonProperty.WritePropertyName(Newtonsoft.Json.JsonWriter)", span="295-295"];
m58_9 [cluster="Newtonsoft.Json.Serialization.JsonProperty.ToString()", file="JsonProperty.cs", label="Entry Newtonsoft.Json.Serialization.JsonProperty.ToString()", span="266-266"];
m58_10 [cluster="Newtonsoft.Json.Serialization.JsonProperty.ToString()", file="JsonProperty.cs", label="return PropertyName;", span="268-268"];
m58_11 [cluster="Newtonsoft.Json.Serialization.JsonProperty.ToString()", file="JsonProperty.cs", label="Exit Newtonsoft.Json.Serialization.JsonProperty.ToString()", span="266-266"];
m58_0 [cluster="Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", file="JsonProperty.cs", label="Entry Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", span="172-172"];
m58_1 [cluster="Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", file="JsonProperty.cs", label="_propertyType == null", span="174-174"];
m58_2 [cluster="Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", file="JsonProperty.cs", label="return null;", span="176-176"];
m58_3 [cluster="Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", file="JsonProperty.cs", label="!_hasExplicitDefaultValue && !_hasGeneratedDefaultValue", span="179-179"];
m58_4 [cluster="Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", file="JsonProperty.cs", label="_defaultValue = ReflectionUtils.GetDefaultValue(PropertyType)", span="181-181"];
m58_6 [cluster="Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", file="JsonProperty.cs", label="return _defaultValue;", span="185-185"];
m58_5 [cluster="Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", file="JsonProperty.cs", label="_hasGeneratedDefaultValue = true", span="182-182"];
m58_7 [cluster="Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", file="JsonProperty.cs", label="Exit Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", span="172-172"];
m58_17 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string, bool)", file="JsonProperty.cs", label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string, bool)", span="465-465"];
m58_8 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="JsonProperty.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", span="1078-1078"];
m58_19 [file="JsonProperty.cs", label="Newtonsoft.Json.Serialization.JsonProperty", span=""];
m59_177 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaWithNegativeEnum()", file="JsonReader.Async.cs", label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaWithNegativeEnum()", span="494-494"];
m59_178 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaWithNegativeEnum()", file="JsonReader.Async.cs", label="JsonSchemaGenerator jsonSchemaGenerator = new JsonSchemaGenerator()", span="496-496"];
m59_179 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaWithNegativeEnum()", file="JsonReader.Async.cs", label="JsonSchema schema = jsonSchemaGenerator.Generate(typeof(X))", span="497-497"];
m59_180 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaWithNegativeEnum()", file="JsonReader.Async.cs", label="string json = schema.ToString()", span="499-499"];
m59_181 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaWithNegativeEnum()", file="JsonReader.Async.cs", label="Assert.AreEqual(@''{\r\n  ''''type'''': ''''object'''',\r\n  ''''properties'''': {\r\n    ''''x'''': {\r\n      ''''type'''': ''''integer'''',\r\n      ''''enum'''': [\r\n        0,\r\n        1,\r\n        -1\r\n      ],\r\n      ''''options'''': [\r\n        {\r\n          ''''value'''': 0,\r\n          ''''value'''': ''''No''''\r\n        },\r\n        {\r\n          ''''value'''': 1,\r\n          ''''value'''': ''''Asc''''\r\n        },\r\n        {\r\n          ''''value'''': -1,\r\n          ''''value'''': ''''Desc''''\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}'', json)", span="501-527"];
m59_182 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaWithNegativeEnum()", file="JsonReader.Async.cs", label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaWithNegativeEnum()", span="494-494"];
m59_126 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="JsonReader.Async.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", span="463-463"];
m59_46 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_Store()", file="JsonReader.Async.cs", label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_Store()", span="205-205"];
m59_47 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_Store()", file="JsonReader.Async.cs", label="JsonSchemaGenerator generator = new JsonSchemaGenerator()", span="207-207"];
m59_48 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_Store()", file="JsonReader.Async.cs", label="JsonSchema schema = generator.Generate(typeof(Store))", span="208-208"];
m59_49 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_Store()", file="JsonReader.Async.cs", label="Assert.AreEqual(11, schema.Properties.Count)", span="210-210"];
m59_51 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_Store()", file="JsonReader.Async.cs", label="JsonSchema productSchema = productArraySchema.Items[0]", span="213-213"];
m59_52 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_Store()", file="JsonReader.Async.cs", label="Assert.AreEqual(4, productSchema.Properties.Count)", span="215-215"];
m59_53 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_Store()", file="JsonReader.Async.cs", label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_Store()", span="205-205"];
m59_65 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_NumberFormatInfo()", file="JsonReader.Async.cs", label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_NumberFormatInfo()", span="236-236"];
m59_66 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_NumberFormatInfo()", file="JsonReader.Async.cs", label="JsonSchemaGenerator generator = new JsonSchemaGenerator()", span="238-238"];
m59_67 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_NumberFormatInfo()", file="JsonReader.Async.cs", label="JsonSchema schema = generator.Generate(typeof(NumberFormatInfo))", span="239-239"];
m59_68 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_NumberFormatInfo()", file="JsonReader.Async.cs", label="string json = schema.ToString()", span="241-241"];
m59_69 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_NumberFormatInfo()", file="JsonReader.Async.cs", label="Console.WriteLine(json)", span="243-243"];
m59_70 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_NumberFormatInfo()", file="JsonReader.Async.cs", label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_NumberFormatInfo()", span="236-236"];
m59_160 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", file="JsonReader.Async.cs", label="Entry Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", span="9-9"];
m59_134 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(Newtonsoft.Json.Serialization.JsonObjectContract)", file="JsonReader.Async.cs", label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(Newtonsoft.Json.Serialization.JsonObjectContract)", span="45-45"];
m59_76 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithTypeNameId()", file="JsonReader.Async.cs", label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithTypeNameId()", span="265-265"];
m59_77 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithTypeNameId()", file="JsonReader.Async.cs", label="JsonSchemaGenerator generator = new JsonSchemaGenerator()", span="267-267"];
m59_78 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithTypeNameId()", file="JsonReader.Async.cs", label="generator.UndefinedSchemaIdHandling = UndefinedSchemaIdHandling.UseTypeName", span="268-268"];
m59_79 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithTypeNameId()", file="JsonReader.Async.cs", label="JsonSchema schema = generator.Generate(typeof(CircularReferenceClass), true)", span="270-270"];
m59_80 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithTypeNameId()", file="JsonReader.Async.cs", label="Assert.AreEqual(JsonSchemaType.String, schema.Properties[''Name''].Type)", span="272-272"];
m59_81 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithTypeNameId()", file="JsonReader.Async.cs", label="Assert.AreEqual(typeof(CircularReferenceClass).FullName, schema.Id)", span="273-273"];
m59_82 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithTypeNameId()", file="JsonReader.Async.cs", label="Assert.AreEqual(JsonSchemaType.Object | JsonSchemaType.Null, schema.Properties[''Child''].Type)", span="274-274"];
m59_83 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithTypeNameId()", file="JsonReader.Async.cs", label="Assert.AreEqual(schema, schema.Properties[''Child''])", span="275-275"];
m59_84 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithTypeNameId()", file="JsonReader.Async.cs", label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithTypeNameId()", span="265-265"];
m59_15 [cluster="System.Collections.Generic.List<T>.List()", file="JsonReader.Async.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m59_12 [cluster="Newtonsoft.Json.Schema.JsonSchema.ToString()", file="JsonReader.Async.cs", label="Entry Newtonsoft.Json.Schema.JsonSchema.ToString()", span="272-272"];
m59_85 [cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.Generate(System.Type, bool)", file="JsonReader.Async.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaGenerator.Generate(System.Type, bool)", span="138-138"];
m59_20 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_DefaultValueAttributeTestClass()", file="JsonReader.Async.cs", label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_DefaultValueAttributeTestClass()", span="83-83"];
m59_21 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_DefaultValueAttributeTestClass()", file="JsonReader.Async.cs", label="JsonSchemaGenerator generator = new JsonSchemaGenerator()", span="85-85"];
m59_22 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_DefaultValueAttributeTestClass()", file="JsonReader.Async.cs", label="JsonSchema schema = generator.Generate(typeof(DefaultValueAttributeTestClass))", span="86-86"];
m59_23 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_DefaultValueAttributeTestClass()", file="JsonReader.Async.cs", label="string json = schema.ToString()", span="88-88"];
m59_24 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_DefaultValueAttributeTestClass()", file="JsonReader.Async.cs", label="Assert.AreEqual(@''{\r\n  ''''description'''': ''''DefaultValueAttributeTestClass description!'''',\r\n  ''''type'''': ''''object'''',\r\n  ''''additionalProperties'''': false,\r\n  ''''properties'''': {\r\n    ''''TestField1'''': {\r\n      ''''type'''': ''''integer'''',\r\n      ''''default'''': 21\r\n    },\r\n    ''''TestProperty1'''': {\r\n      ''''type'''': [\r\n        ''''string'''',\r\n        ''''null''''\r\n      ],\r\n      ''''default'''': ''''TestProperty1Value''''\r\n    }\r\n  }\r\n}'', json)", span="90-107"];
m59_25 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_DefaultValueAttributeTestClass()", file="JsonReader.Async.cs", label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_DefaultValueAttributeTestClass()", span="83-83"];
m59_198 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.JsonPropertyWithHandlingValues()", file="JsonReader.Async.cs", label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.JsonPropertyWithHandlingValues()", span="571-571"];
m59_199 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.JsonPropertyWithHandlingValues()", file="JsonReader.Async.cs", label="JsonSchemaGenerator jsonSchemaGenerator = new JsonSchemaGenerator()", span="573-573"];
m59_200 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.JsonPropertyWithHandlingValues()", file="JsonReader.Async.cs", label="jsonSchemaGenerator.UndefinedSchemaIdHandling = UndefinedSchemaIdHandling.UseTypeName", span="575-575"];
m59_201 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.JsonPropertyWithHandlingValues()", file="JsonReader.Async.cs", label="JsonSchema jsonSchema = jsonSchemaGenerator.Generate(typeof(JsonPropertyWithHandlingValues))", span="576-576"];
m59_202 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.JsonPropertyWithHandlingValues()", file="JsonReader.Async.cs", label="string json = jsonSchema.ToString()", span="577-577"];
m59_203 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.JsonPropertyWithHandlingValues()", file="JsonReader.Async.cs", label="Assert.AreEqual(@''{\r\n  ''''id'''': ''''Newtonsoft.Json.Tests.TestObjects.JsonPropertyWithHandlingValues'''',\r\n  ''''type'''': [\r\n    ''''object'''',\r\n    ''''null''''\r\n  ],\r\n  ''''properties'''': {\r\n    ''''DefaultValueHandlingIgnoreProperty'''': {\r\n      ''''optional'''': true,\r\n      ''''type'''': [\r\n        ''''string'''',\r\n        ''''null''''\r\n      ],\r\n      ''''default'''': ''''Default!''''\r\n    },\r\n    ''''DefaultValueHandlingIncludeProperty'''': {\r\n      ''''type'''': [\r\n        ''''string'''',\r\n        ''''null''''\r\n      ],\r\n      ''''default'''': ''''Default!''''\r\n    },\r\n    ''''NullValueHandlingIgnoreProperty'''': {\r\n      ''''optional'''': true,\r\n      ''''type'''': [\r\n        ''''string'''',\r\n        ''''null''''\r\n      ]\r\n    },\r\n    ''''NullValueHandlingIncludeProperty'''': {\r\n      ''''type'''': [\r\n        ''''string'''',\r\n        ''''null''''\r\n      ]\r\n    },\r\n    ''''ReferenceLoopHandlingErrorProperty'''': {\r\n      ''''$ref'''': ''''Newtonsoft.Json.Tests.TestObjects.JsonPropertyWithHandlingValues''''\r\n    },\r\n    ''''ReferenceLoopHandlingIgnoreProperty'''': {\r\n      ''''$ref'''': ''''Newtonsoft.Json.Tests.TestObjects.JsonPropertyWithHandlingValues''''\r\n    },\r\n    ''''ReferenceLoopHandlingSerializeProperty'''': {\r\n      ''''$ref'''': ''''Newtonsoft.Json.Tests.TestObjects.JsonPropertyWithHandlingValues''''\r\n    }\r\n  }\r\n}'', json)", span="579-624"];
m59_204 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.JsonPropertyWithHandlingValues()", file="JsonReader.Async.cs", label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.JsonPropertyWithHandlingValues()", span="571-571"];
m59_162 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="JsonReader.Async.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="440-440"];
m59_168 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaCamelCase()", file="JsonReader.Async.cs", label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaCamelCase()", span="441-441"];
m59_169 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaCamelCase()", file="JsonReader.Async.cs", label="JsonSchemaGenerator generator = new JsonSchemaGenerator()", span="443-443"];
m59_170 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaCamelCase()", file="JsonReader.Async.cs", label="generator.UndefinedSchemaIdHandling = UndefinedSchemaIdHandling.UseTypeName", span="444-444"];
m59_171 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaCamelCase()", file="JsonReader.Async.cs", label="generator.ContractResolver = new CamelCasePropertyNamesContractResolver()", span="445-445"];
m59_172 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaCamelCase()", file="JsonReader.Async.cs", label="JsonSchema schema = generator.Generate(typeof (Version), true)", span="447-447"];
m59_173 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaCamelCase()", file="JsonReader.Async.cs", label="string json = schema.ToString()", span="449-449"];
m59_174 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaCamelCase()", file="JsonReader.Async.cs", label="Assert.AreEqual(@''{\r\n  ''''id'''': ''''System.Version'''',\r\n  ''''type'''': [\r\n    ''''object'''',\r\n    ''''null''''\r\n  ],\r\n  ''''additionalProperties'''': false,\r\n  ''''properties'''': {\r\n    ''''major'''': {\r\n      ''''type'''': ''''integer''''\r\n    },\r\n    ''''minor'''': {\r\n      ''''type'''': ''''integer''''\r\n    },\r\n    ''''build'''': {\r\n      ''''type'''': ''''integer''''\r\n    },\r\n    ''''revision'''': {\r\n      ''''type'''': ''''integer''''\r\n    },\r\n    ''''majorRevision'''': {\r\n      ''''type'''': ''''integer''''\r\n    },\r\n    ''''minorRevision'''': {\r\n      ''''type'''': ''''integer''''\r\n    }\r\n  }\r\n}'', json)", span="451-478"];
m59_175 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaCamelCase()", file="JsonReader.Async.cs", label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaCamelCase()", span="441-441"];
m59_19 [cluster="Unk.IsTrue", file="JsonReader.Async.cs", label="Entry Unk.IsTrue", span=""];
m59_159 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonReader.Async.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="286-286"];
m59_17 [cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="JsonReader.Async.cs", label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="276-276"];
m59_103 [cluster="Newtonsoft.Json.Linq.JValue.JValue(string)", file="JsonReader.Async.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(string)", span="107-107"];
m59_26 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_Person()", file="JsonReader.Async.cs", label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_Person()", span="112-112"];
m59_27 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_Person()", file="JsonReader.Async.cs", label="JsonSchemaGenerator generator = new JsonSchemaGenerator()", span="114-114"];
m59_28 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_Person()", file="JsonReader.Async.cs", label="JsonSchema schema = generator.Generate(typeof(Person))", span="115-115"];
m59_29 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_Person()", file="JsonReader.Async.cs", label="string json = schema.ToString()", span="117-117"];
m59_30 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_Person()", file="JsonReader.Async.cs", label="Assert.AreEqual(@''{\r\n  ''''id'''': ''''Person'''',\r\n  ''''title'''': ''''Title!'''',\r\n  ''''description'''': ''''JsonObjectAttribute description!'''',\r\n  ''''type'''': ''''object'''',\r\n  ''''properties'''': {\r\n    ''''Name'''': {\r\n      ''''type'''': [\r\n        ''''string'''',\r\n        ''''null''''\r\n      ]\r\n    },\r\n    ''''BirthDate'''': {\r\n      ''''type'''': ''''string''''\r\n    },\r\n    ''''LastModified'''': {\r\n      ''''type'''': ''''string''''\r\n    }\r\n  }\r\n}'', json)", span="119-138"];
m59_31 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_Person()", file="JsonReader.Async.cs", label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_Person()", span="112-112"];
m59_118 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CustomDirectoryInfoMapper.CustomDirectoryInfoMapper()", file="JsonReader.Async.cs", label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CustomDirectoryInfoMapper.CustomDirectoryInfoMapper()", span="335-335"];
m59_119 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CustomDirectoryInfoMapper.CustomDirectoryInfoMapper()", file="JsonReader.Async.cs", label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CustomDirectoryInfoMapper.CustomDirectoryInfoMapper()", span="335-335"];
m59_176 [cluster="Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver.CamelCasePropertyNamesContractResolver()", file="JsonReader.Async.cs", label="Entry Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver.CamelCasePropertyNamesContractResolver()", span="37-37"];
m59_161 [cluster="System.Collections.ObjectModel.Collection<T>.Add(T)", file="JsonReader.Async.cs", label="Entry System.Collections.ObjectModel.Collection<T>.Add(T)", span="0-0"];
m59_167 [cluster="System.Collections.Generic.List<T>.Add(T)", file="JsonReader.Async.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m59_163 [cluster="Newtonsoft.Json.Linq.JToken.Validate(Newtonsoft.Json.Schema.JsonSchema, Newtonsoft.Json.Schema.ValidationEventHandler)", file="JsonReader.Async.cs", label="Entry Newtonsoft.Json.Linq.JToken.Validate(Newtonsoft.Json.Schema.JsonSchema, Newtonsoft.Json.Schema.ValidationEventHandler)", span="70-70"];
m59_71 [cluster="System.Console.WriteLine(string)", file="JsonReader.Async.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m59_14 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JsonReader.Async.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m59_13 [cluster="Unk.AreEqual", file="JsonReader.Async.cs", label="Entry Unk.AreEqual", span=""];
m59_18 [cluster="Newtonsoft.Json.Linq.JToken.IsValid(Newtonsoft.Json.Schema.JsonSchema)", file="JsonReader.Async.cs", label="Entry Newtonsoft.Json.Linq.JToken.IsValid(Newtonsoft.Json.Schema.JsonSchema)", span="47-47"];
m59_16 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="JsonReader.Async.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="538-538"];
m59_104 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForISerializable()", file="JsonReader.Async.cs", label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForISerializable()", span="309-309"];
m59_105 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForISerializable()", file="JsonReader.Async.cs", label="JsonSchemaGenerator generator = new JsonSchemaGenerator()", span="311-311"];
m59_106 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForISerializable()", file="JsonReader.Async.cs", label="generator.UndefinedSchemaIdHandling = UndefinedSchemaIdHandling.UseTypeName", span="312-312"];
m59_107 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForISerializable()", file="JsonReader.Async.cs", label="JsonSchema schema = generator.Generate(typeof(Exception))", span="314-314"];
m59_108 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForISerializable()", file="JsonReader.Async.cs", label="Assert.AreEqual(JsonSchemaType.Object, schema.Type)", span="316-316"];
m59_109 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForISerializable()", file="JsonReader.Async.cs", label="Assert.AreEqual(true, schema.AllowAdditionalProperties)", span="317-317"];
m59_110 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForISerializable()", file="JsonReader.Async.cs", label="Assert.AreEqual(null, schema.Properties)", span="318-318"];
m59_111 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForISerializable()", file="JsonReader.Async.cs", label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForISerializable()", span="309-309"];
m59_183 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularCollectionReferences()", file="JsonReader.Async.cs", label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularCollectionReferences()", span="531-531"];
m59_184 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularCollectionReferences()", file="JsonReader.Async.cs", label="Type type = typeof (Workspace)", span="533-533"];
m59_185 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularCollectionReferences()", file="JsonReader.Async.cs", label="JsonSchemaGenerator jsonSchemaGenerator = new JsonSchemaGenerator()", span="534-534"];
m59_187 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularCollectionReferences()", file="JsonReader.Async.cs", label="JsonSchema jsonSchema = jsonSchemaGenerator.Generate(type)", span="537-537"];
m59_186 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularCollectionReferences()", file="JsonReader.Async.cs", label="jsonSchemaGenerator.UndefinedSchemaIdHandling = UndefinedSchemaIdHandling.UseTypeName", span="536-536"];
m59_188 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularCollectionReferences()", file="JsonReader.Async.cs", label="Assert.IsNotNull(jsonSchema)", span="540-540"];
m59_189 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularCollectionReferences()", file="JsonReader.Async.cs", label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularCollectionReferences()", span="531-531"];
m59_190 [cluster="Unk.IsNotNull", file="JsonReader.Async.cs", label="Entry Unk.IsNotNull", span=""];
m59_10 [cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.JsonSchemaGenerator()", file="JsonReader.Async.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaGenerator.JsonSchemaGenerator()", span="39-39"];
m59_133 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(Newtonsoft.Json.Serialization.JsonObjectContract)", file="JsonReader.Async.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(Newtonsoft.Json.Serialization.JsonObjectContract)", span="569-569"];
m59_11 [cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.Generate(System.Type)", file="JsonReader.Async.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaGenerator.Generate(System.Type)", span="116-116"];
m59_54 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.MissingSchemaIdHandlingTest()", file="JsonReader.Async.cs", label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.MissingSchemaIdHandlingTest()", span="219-219"];
m59_58 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.MissingSchemaIdHandlingTest()", file="JsonReader.Async.cs", label="generator.UndefinedSchemaIdHandling = UndefinedSchemaIdHandling.UseTypeName", span="226-226"];
m59_59 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.MissingSchemaIdHandlingTest()", file="JsonReader.Async.cs", label="schema = generator.Generate(typeof (Store))", span="227-227"];
m59_61 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.MissingSchemaIdHandlingTest()", file="JsonReader.Async.cs", label="generator.UndefinedSchemaIdHandling = UndefinedSchemaIdHandling.UseAssemblyQualifiedName", span="230-230"];
m59_62 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.MissingSchemaIdHandlingTest()", file="JsonReader.Async.cs", label="schema = generator.Generate(typeof(Store))", span="231-231"];
m59_60 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.MissingSchemaIdHandlingTest()", file="JsonReader.Async.cs", label="Assert.AreEqual(typeof(Store).FullName, schema.Id)", span="228-228"];
m59_63 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.MissingSchemaIdHandlingTest()", file="JsonReader.Async.cs", label="Assert.AreEqual(typeof(Store).AssemblyQualifiedName, schema.Id)", span="232-232"];
m59_64 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.MissingSchemaIdHandlingTest()", file="JsonReader.Async.cs", label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.MissingSchemaIdHandlingTest()", span="219-219"];
m59_158 [cluster="Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", file="JsonReader.Async.cs", label="Entry Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", span="48-48"];
m59_136 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange(System.Collections.IList, System.Collections.IEnumerable)", file="JsonReader.Async.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.AddRange(System.Collections.IList, System.Collections.IEnumerable)", span="208-208"];
m59_32 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_UserNullable()", file="JsonReader.Async.cs", label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_UserNullable()", span="142-142"];
m59_33 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_UserNullable()", file="JsonReader.Async.cs", label="JsonSchemaGenerator generator = new JsonSchemaGenerator()", span="144-144"];
m59_34 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_UserNullable()", file="JsonReader.Async.cs", label="JsonSchema schema = generator.Generate(typeof(UserNullable))", span="145-145"];
m59_35 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_UserNullable()", file="JsonReader.Async.cs", label="string json = schema.ToString()", span="147-147"];
m59_36 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_UserNullable()", file="JsonReader.Async.cs", label="Assert.AreEqual(@''{\r\n  ''''type'''': ''''object'''',\r\n  ''''properties'''': {\r\n    ''''Id'''': {\r\n      ''''type'''': ''''string''''\r\n    },\r\n    ''''FName'''': {\r\n      ''''type'''': [\r\n        ''''string'''',\r\n        ''''null''''\r\n      ]\r\n    },\r\n    ''''LName'''': {\r\n      ''''type'''': [\r\n        ''''string'''',\r\n        ''''null''''\r\n      ]\r\n    },\r\n    ''''RoleId'''': {\r\n      ''''type'''': ''''integer''''\r\n    },\r\n    ''''NullableRoleId'''': {\r\n      ''''type'''': [\r\n        ''''integer'''',\r\n        ''''null''''\r\n      ]\r\n    },\r\n    ''''NullRoleId'''': {\r\n      ''''type'''': [\r\n        ''''integer'''',\r\n        ''''null''''\r\n      ]\r\n    },\r\n    ''''Active'''': {\r\n      ''''type'''': [\r\n        ''''boolean'''',\r\n        ''''null''''\r\n      ]\r\n    }\r\n  }\r\n}'', json)", span="149-189"];
m59_37 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_UserNullable()", file="JsonReader.Async.cs", label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_UserNullable()", span="142-142"];
m59_157 [cluster="System.IO.DirectoryInfo.DirectoryInfo(string)", file="JsonReader.Async.cs", label="Entry System.IO.DirectoryInfo.DirectoryInfo(string)", span="0-0"];
m59_127 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CustomDirectoryInfoMapper.CreateProperties(Newtonsoft.Json.Serialization.JsonObjectContract)", file="JsonReader.Async.cs", label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CustomDirectoryInfoMapper.CreateProperties(Newtonsoft.Json.Serialization.JsonObjectContract)", span="348-348"];
m59_128 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CustomDirectoryInfoMapper.CreateProperties(Newtonsoft.Json.Serialization.JsonObjectContract)", file="JsonReader.Async.cs", label="IList<JsonProperty> properties = base.CreateProperties(contract)", span="350-350"];
m59_129 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CustomDirectoryInfoMapper.CreateProperties(Newtonsoft.Json.Serialization.JsonObjectContract)", file="JsonReader.Async.cs", label="JsonPropertyCollection c = new JsonPropertyCollection(contract)", span="352-352"];
m59_130 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CustomDirectoryInfoMapper.CreateProperties(Newtonsoft.Json.Serialization.JsonObjectContract)", file="JsonReader.Async.cs", label="CollectionUtils.AddRange(c, (IEnumerable)properties.Where(m => m.PropertyName != ''Root''))", span="353-353"];
m59_131 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CustomDirectoryInfoMapper.CreateProperties(Newtonsoft.Json.Serialization.JsonObjectContract)", file="JsonReader.Async.cs", label="return c;", span="355-355"];
m59_132 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CustomDirectoryInfoMapper.CreateProperties(Newtonsoft.Json.Serialization.JsonObjectContract)", file="JsonReader.Async.cs", label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CustomDirectoryInfoMapper.CreateProperties(Newtonsoft.Json.Serialization.JsonObjectContract)", span="348-348"];
m59_94 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForType()", file="JsonReader.Async.cs", label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForType()", span="292-292"];
m59_95 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForType()", file="JsonReader.Async.cs", label="JsonSchemaGenerator generator = new JsonSchemaGenerator()", span="294-294"];
m59_96 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForType()", file="JsonReader.Async.cs", label="generator.UndefinedSchemaIdHandling = UndefinedSchemaIdHandling.UseTypeName", span="295-295"];
m59_97 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForType()", file="JsonReader.Async.cs", label="JsonSchema schema = generator.Generate(typeof(Type))", span="297-297"];
m59_98 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForType()", file="JsonReader.Async.cs", label="Assert.AreEqual(JsonSchemaType.String, schema.Type)", span="299-299"];
m59_101 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForType()", file="JsonReader.Async.cs", label="Assert.IsTrue(v.IsValid(schema))", span="304-304"];
m59_99 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForType()", file="JsonReader.Async.cs", label="string json = JsonConvert.SerializeObject(typeof(Version), Formatting.Indented)", span="301-301"];
m59_100 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForType()", file="JsonReader.Async.cs", label="JValue v = new JValue(json)", span="303-303"];
m59_102 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForType()", file="JsonReader.Async.cs", label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForType()", span="292-292"];
m59_135 [cluster="Unk.Where", file="JsonReader.Async.cs", label="Entry Unk.Where", span=""];
m59_0 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_GenericDictionary()", file="JsonReader.Async.cs", label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_GenericDictionary()", span="46-46"];
m59_1 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_GenericDictionary()", file="JsonReader.Async.cs", label="JsonSchemaGenerator generator = new JsonSchemaGenerator()", span="48-48"];
m59_2 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_GenericDictionary()", file="JsonReader.Async.cs", label="JsonSchema schema = generator.Generate(typeof (Dictionary<string, List<string>>))", span="49-49"];
m59_3 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_GenericDictionary()", file="JsonReader.Async.cs", label="string json = schema.ToString()", span="51-51"];
m59_8 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_GenericDictionary()", file="JsonReader.Async.cs", label="Assert.IsTrue(o.IsValid(schema))", span="78-78"];
m59_4 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_GenericDictionary()", file="JsonReader.Async.cs", label="Assert.AreEqual(@''{\r\n  ''''type'''': ''''object'''',\r\n  ''''additionalProperties'''': {\r\n    ''''type'''': [\r\n      ''''array'''',\r\n      ''''null''''\r\n    ],\r\n    ''''items'''': {\r\n      ''''type'''': [\r\n        ''''string'''',\r\n        ''''null''''\r\n      ]\r\n    }\r\n  }\r\n}'', json)", span="53-67"];
m59_5 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_GenericDictionary()", file="JsonReader.Async.cs", label="Dictionary<string, List<string>> value = new Dictionary<string, List<string>>\r\n                                                 {\r\n                                                   {''HasValue'', new List<string>() { ''first'', ''second'', null }},\r\n                                                   {''NoValue'', null}\r\n                                                 }", span="69-73"];
m59_6 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_GenericDictionary()", file="JsonReader.Async.cs", label="string valueJson = JsonConvert.SerializeObject(value, Formatting.Indented)", span="75-75"];
m59_7 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_GenericDictionary()", file="JsonReader.Async.cs", label="JObject o = JObject.Parse(valueJson)", span="76-76"];
m59_9 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_GenericDictionary()", file="JsonReader.Async.cs", label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_GenericDictionary()", span="46-46"];
m59_164 [cluster="lambda expression", file="JsonReader.Async.cs", label="Entry lambda expression", span="435-435"];
m59_137 [cluster="lambda expression", file="JsonReader.Async.cs", label="Entry lambda expression", span="353-353"];
m59_138 [cluster="lambda expression", file="JsonReader.Async.cs", label="m.PropertyName != ''Root''", span="353-353"];
m59_139 [cluster="lambda expression", file="JsonReader.Async.cs", label="Exit lambda expression", span="353-353"];
m59_165 [cluster="lambda expression", file="JsonReader.Async.cs", label="errors.Add(args.Message)", span="435-435"];
m59_166 [cluster="lambda expression", file="JsonReader.Async.cs", label="Exit lambda expression", span="435-435"];
m59_140 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForDirectoryInfo()", file="JsonReader.Async.cs", label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForDirectoryInfo()", span="360-360"];
m59_141 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForDirectoryInfo()", file="JsonReader.Async.cs", label="JsonSchemaGenerator generator = new JsonSchemaGenerator()", span="362-362"];
m59_142 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForDirectoryInfo()", file="JsonReader.Async.cs", label="generator.UndefinedSchemaIdHandling = UndefinedSchemaIdHandling.UseTypeName", span="363-363"];
m59_143 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForDirectoryInfo()", file="JsonReader.Async.cs", label="generator.ContractResolver = new CustomDirectoryInfoMapper()", span="364-364"];
m59_144 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForDirectoryInfo()", file="JsonReader.Async.cs", label="JsonSchema schema = generator.Generate(typeof(DirectoryInfo), true)", span="366-366"];
m59_145 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForDirectoryInfo()", file="JsonReader.Async.cs", label="string json = schema.ToString()", span="368-368"];
m59_154 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForDirectoryInfo()", file="JsonReader.Async.cs", label="jsonWriter.Token.Validate(schema, (sender, args) => errors.Add(args.Message))", span="435-435"];
m59_146 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForDirectoryInfo()", file="JsonReader.Async.cs", label="Assert.AreEqual(@''{\r\n  ''''id'''': ''''System.IO.DirectoryInfo'''',\r\n  ''''type'''': [\r\n    ''''object'''',\r\n    ''''null''''\r\n  ],\r\n  ''''additionalProperties'''': false,\r\n  ''''properties'''': {\r\n    ''''Name'''': {\r\n      ''''type'''': [\r\n        ''''string'''',\r\n        ''''null''''\r\n      ]\r\n    },\r\n    ''''Parent'''': {\r\n      ''''$ref'''': ''''System.IO.DirectoryInfo''''\r\n    },\r\n    ''''Exists'''': {\r\n      ''''type'''': ''''boolean''''\r\n    },\r\n    ''''FullName'''': {\r\n      ''''type'''': [\r\n        ''''string'''',\r\n        ''''null''''\r\n      ]\r\n    },\r\n    ''''Extension'''': {\r\n      ''''type'''': [\r\n        ''''string'''',\r\n        ''''null''''\r\n      ]\r\n    },\r\n    ''''CreationTime'''': {\r\n      ''''type'''': ''''string''''\r\n    },\r\n    ''''CreationTimeUtc'''': {\r\n      ''''type'''': ''''string''''\r\n    },\r\n    ''''LastAccessTime'''': {\r\n      ''''type'''': ''''string''''\r\n    },\r\n    ''''LastAccessTimeUtc'''': {\r\n      ''''type'''': ''''string''''\r\n    },\r\n    ''''LastWriteTime'''': {\r\n      ''''type'''': ''''string''''\r\n    },\r\n    ''''LastWriteTimeUtc'''': {\r\n      ''''type'''': ''''string''''\r\n    },\r\n    ''''Attributes'''': {\r\n      ''''type'''': ''''integer''''\r\n    }\r\n  }\r\n}'', json)", span="370-424"];
m59_147 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForDirectoryInfo()", file="JsonReader.Async.cs", label="DirectoryInfo temp = new DirectoryInfo(@''c:\temp'')", span="426-426"];
m59_148 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForDirectoryInfo()", file="JsonReader.Async.cs", label="JTokenWriter jsonWriter = new JTokenWriter()", span="428-428"];
m59_152 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForDirectoryInfo()", file="JsonReader.Async.cs", label="serializer.Serialize(jsonWriter, temp)", span="432-432"];
m59_149 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForDirectoryInfo()", file="JsonReader.Async.cs", label="JsonSerializer serializer = new JsonSerializer()", span="429-429"];
m59_150 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForDirectoryInfo()", file="JsonReader.Async.cs", label="serializer.Converters.Add(new IsoDateTimeConverter())", span="430-430"];
m59_151 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForDirectoryInfo()", file="JsonReader.Async.cs", label="serializer.ContractResolver = new CustomDirectoryInfoMapper()", span="431-431"];
m59_153 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForDirectoryInfo()", file="JsonReader.Async.cs", label="List<string> errors = new List<string>()", span="434-434"];
m59_155 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForDirectoryInfo()", file="JsonReader.Async.cs", label="Assert.AreEqual(0, errors.Count)", span="437-437"];
m59_156 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForDirectoryInfo()", file="JsonReader.Async.cs", label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForDirectoryInfo()", span="360-360"];
m59_120 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CustomDirectoryInfoMapper.CreateContract(System.Type)", file="JsonReader.Async.cs", label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CustomDirectoryInfoMapper.CreateContract(System.Type)", span="340-340"];
m59_121 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CustomDirectoryInfoMapper.CreateContract(System.Type)", file="JsonReader.Async.cs", label="objectType == typeof(DirectoryInfo)", span="342-342"];
m59_122 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CustomDirectoryInfoMapper.CreateContract(System.Type)", file="JsonReader.Async.cs", label="return base.CreateObjectContract(objectType);", span="343-343"];
m59_123 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CustomDirectoryInfoMapper.CreateContract(System.Type)", file="JsonReader.Async.cs", label="return base.CreateContract(objectType);", span="345-345"];
m59_124 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CustomDirectoryInfoMapper.CreateContract(System.Type)", file="JsonReader.Async.cs", label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CustomDirectoryInfoMapper.CreateContract(System.Type)", span="340-340"];
m59_38 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_RequiredMembersClass()", file="JsonReader.Async.cs", label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_RequiredMembersClass()", span="193-193"];
m59_39 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_RequiredMembersClass()", file="JsonReader.Async.cs", label="JsonSchemaGenerator generator = new JsonSchemaGenerator()", span="195-195"];
m59_40 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_RequiredMembersClass()", file="JsonReader.Async.cs", label="JsonSchema schema = generator.Generate(typeof(RequiredMembersClass))", span="196-196"];
m59_41 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_RequiredMembersClass()", file="JsonReader.Async.cs", label="Assert.AreEqual(JsonSchemaType.String, schema.Properties[''FirstName''].Type)", span="198-198"];
m59_42 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_RequiredMembersClass()", file="JsonReader.Async.cs", label="Assert.AreEqual(JsonSchemaType.String | JsonSchemaType.Null, schema.Properties[''MiddleName''].Type)", span="199-199"];
m59_43 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_RequiredMembersClass()", file="JsonReader.Async.cs", label="Assert.AreEqual(JsonSchemaType.String | JsonSchemaType.Null, schema.Properties[''LastName''].Type)", span="200-200"];
m59_44 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_RequiredMembersClass()", file="JsonReader.Async.cs", label="Assert.AreEqual(JsonSchemaType.String, schema.Properties[''BirthDate''].Type)", span="201-201"];
m59_45 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_RequiredMembersClass()", file="JsonReader.Async.cs", label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_RequiredMembersClass()", span="193-193"];
m59_112 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForDBNull()", file="JsonReader.Async.cs", label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForDBNull()", span="323-323"];
m59_113 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForDBNull()", file="JsonReader.Async.cs", label="JsonSchemaGenerator generator = new JsonSchemaGenerator()", span="325-325"];
m59_114 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForDBNull()", file="JsonReader.Async.cs", label="generator.UndefinedSchemaIdHandling = UndefinedSchemaIdHandling.UseTypeName", span="326-326"];
m59_115 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForDBNull()", file="JsonReader.Async.cs", label="JsonSchema schema = generator.Generate(typeof(DBNull))", span="328-328"];
m59_116 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForDBNull()", file="JsonReader.Async.cs", label="Assert.AreEqual(JsonSchemaType.Null, schema.Type)", span="330-330"];
m59_117 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForDBNull()", file="JsonReader.Async.cs", label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForDBNull()", span="323-323"];
m59_72 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceError()", file="JsonReader.Async.cs", label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceError()", span="258-258"];
m59_73 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceError()", file="JsonReader.Async.cs", label="JsonSchemaGenerator generator = new JsonSchemaGenerator()", span="260-260"];
m59_74 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceError()", file="JsonReader.Async.cs", label="generator.Generate(typeof(CircularReferenceClass))", span="261-261"];
m59_75 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceError()", file="JsonReader.Async.cs", label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceError()", span="258-258"];
m59_191 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithMixedRequires()", file="JsonReader.Async.cs", label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithMixedRequires()", span="544-544"];
m59_192 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithMixedRequires()", file="JsonReader.Async.cs", label="JsonSchemaGenerator jsonSchemaGenerator = new JsonSchemaGenerator()", span="546-546"];
m59_193 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithMixedRequires()", file="JsonReader.Async.cs", label="jsonSchemaGenerator.UndefinedSchemaIdHandling = UndefinedSchemaIdHandling.UseTypeName", span="548-548"];
m59_194 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithMixedRequires()", file="JsonReader.Async.cs", label="JsonSchema jsonSchema = jsonSchemaGenerator.Generate(typeof(CircularReferenceClass))", span="549-549"];
m59_195 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithMixedRequires()", file="JsonReader.Async.cs", label="string json = jsonSchema.ToString()", span="550-550"];
m59_196 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithMixedRequires()", file="JsonReader.Async.cs", label="Assert.AreEqual(@''{\r\n  ''''id'''': ''''Newtonsoft.Json.Tests.TestObjects.CircularReferenceClass'''',\r\n  ''''optional'''': true,\r\n  ''''type'''': [\r\n    ''''object'''',\r\n    ''''null''''\r\n  ],\r\n  ''''properties'''': {\r\n    ''''Name'''': {\r\n      ''''type'''': ''''string''''\r\n    },\r\n    ''''Child'''': {\r\n      ''''$ref'''': ''''Newtonsoft.Json.Tests.TestObjects.CircularReferenceClass''''\r\n    }\r\n  }\r\n}'', json)", span="552-567"];
m59_197 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithMixedRequires()", file="JsonReader.Async.cs", label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithMixedRequires()", span="544-544"];
m59_86 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithExplicitId()", file="JsonReader.Async.cs", label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithExplicitId()", span="279-279"];
m59_87 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithExplicitId()", file="JsonReader.Async.cs", label="JsonSchemaGenerator generator = new JsonSchemaGenerator()", span="281-281"];
m59_88 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithExplicitId()", file="JsonReader.Async.cs", label="JsonSchema schema = generator.Generate(typeof(CircularReferenceWithIdClass))", span="283-283"];
m59_89 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithExplicitId()", file="JsonReader.Async.cs", label="Assert.AreEqual(JsonSchemaType.String | JsonSchemaType.Null, schema.Properties[''Name''].Type)", span="285-285"];
m59_90 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithExplicitId()", file="JsonReader.Async.cs", label="Assert.AreEqual(''MyExplicitId'', schema.Id)", span="286-286"];
m59_91 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithExplicitId()", file="JsonReader.Async.cs", label="Assert.AreEqual(JsonSchemaType.Object | JsonSchemaType.Null, schema.Properties[''Child''].Type)", span="287-287"];
m59_92 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithExplicitId()", file="JsonReader.Async.cs", label="Assert.AreEqual(schema, schema.Properties[''Child''])", span="288-288"];
m59_93 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithExplicitId()", file="JsonReader.Async.cs", label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithExplicitId()", span="279-279"];
m59_125 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="JsonReader.Async.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", span="266-266"];
m59_205 [file="JsonReader.Async.cs", label="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CustomDirectoryInfoMapper", span=""];
m59_206 [file="JsonReader.Async.cs", label=errors, span=""];
m60_31 [cluster="Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", file="JsonReaderException.cs", label="Entry Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", span="38-38"];
m60_2 [cluster="Newtonsoft.Json.JsonReaderException.JsonReaderException(string)", file="JsonReaderException.cs", label="Entry Newtonsoft.Json.JsonReaderException.JsonReaderException(string)", span="70-70"];
m60_3 [cluster="Newtonsoft.Json.JsonReaderException.JsonReaderException(string)", file="JsonReaderException.cs", label="Exit Newtonsoft.Json.JsonReaderException.JsonReaderException(string)", span="70-70"];
m60_13 [cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", file="JsonReaderException.cs", label="Entry Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", span="108-108"];
m60_14 [cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", file="JsonReaderException.cs", label="return Create(reader, message, null);", span="110-110"];
m60_15 [cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", file="JsonReaderException.cs", label="Exit Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", span="108-108"];
m60_6 [cluster="Newtonsoft.Json.JsonReaderException.JsonReaderException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonReaderException.cs", label="Entry Newtonsoft.Json.JsonReaderException.JsonReaderException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="94-94"];
m60_7 [cluster="Newtonsoft.Json.JsonReaderException.JsonReaderException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonReaderException.cs", label="Exit Newtonsoft.Json.JsonReaderException.JsonReaderException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="94-94"];
m60_0 [cluster="Newtonsoft.Json.JsonReaderException.JsonReaderException()", file="JsonReaderException.cs", label="Entry Newtonsoft.Json.JsonReaderException.JsonReaderException()", span="61-61"];
m60_1 [cluster="Newtonsoft.Json.JsonReaderException.JsonReaderException()", file="JsonReaderException.cs", label="Exit Newtonsoft.Json.JsonReaderException.JsonReaderException()", span="61-61"];
m60_30 [cluster="Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", file="JsonReaderException.cs", label="Entry Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", span="139-139"];
m60_19 [cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", file="JsonReaderException.cs", label="Entry Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", span="118-118"];
m60_20 [cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", file="JsonReaderException.cs", label="message = JsonPosition.FormatMessage(lineInfo, path, message)", span="120-120"];
m60_23 [cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", file="JsonReaderException.cs", label="lineInfo != null && lineInfo.HasLineInfo()", span="124-124"];
m60_24 [cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", file="JsonReaderException.cs", label="lineNumber = lineInfo.LineNumber", span="126-126"];
m60_25 [cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", file="JsonReaderException.cs", label="linePosition = lineInfo.LinePosition", span="127-127"];
m60_28 [cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", file="JsonReaderException.cs", label="return new JsonReaderException(message, ex, path, lineNumber, linePosition);", span="135-135"];
m60_21 [cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", file="JsonReaderException.cs", label="int lineNumber", span="122-122"];
m60_22 [cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", file="JsonReaderException.cs", label="int linePosition", span="123-123"];
m60_26 [cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", file="JsonReaderException.cs", label="lineNumber = 0", span="131-131"];
m60_27 [cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", file="JsonReaderException.cs", label="linePosition = 0", span="132-132"];
m60_29 [cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", file="JsonReaderException.cs", label="Exit Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", span="118-118"];
m60_8 [cluster="Newtonsoft.Json.JsonReaderException.JsonReaderException(string, System.Exception, string, int, int)", file="JsonReaderException.cs", label="Entry Newtonsoft.Json.JsonReaderException.JsonReaderException(string, System.Exception, string, int, int)", span="100-100"];
m60_9 [cluster="Newtonsoft.Json.JsonReaderException.JsonReaderException(string, System.Exception, string, int, int)", file="JsonReaderException.cs", label="Path = path", span="103-103"];
m60_10 [cluster="Newtonsoft.Json.JsonReaderException.JsonReaderException(string, System.Exception, string, int, int)", file="JsonReaderException.cs", label="LineNumber = lineNumber", span="104-104"];
m60_11 [cluster="Newtonsoft.Json.JsonReaderException.JsonReaderException(string, System.Exception, string, int, int)", file="JsonReaderException.cs", label="LinePosition = linePosition", span="105-105"];
m60_12 [cluster="Newtonsoft.Json.JsonReaderException.JsonReaderException(string, System.Exception, string, int, int)", file="JsonReaderException.cs", label="Exit Newtonsoft.Json.JsonReaderException.JsonReaderException(string, System.Exception, string, int, int)", span="100-100"];
m60_16 [cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", file="JsonReaderException.cs", label="Entry Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", span="113-113"];
m60_17 [cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", file="JsonReaderException.cs", label="return Create(reader as IJsonLineInfo, reader.Path, message, ex);", span="115-115"];
m60_18 [cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", file="JsonReaderException.cs", label="Exit Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", span="113-113"];
m60_4 [cluster="Newtonsoft.Json.JsonReaderException.JsonReaderException(string, System.Exception)", file="JsonReaderException.cs", label="Entry Newtonsoft.Json.JsonReaderException.JsonReaderException(string, System.Exception)", span="81-81"];
m60_5 [cluster="Newtonsoft.Json.JsonReaderException.JsonReaderException(string, System.Exception)", file="JsonReaderException.cs", label="Exit Newtonsoft.Json.JsonReaderException.JsonReaderException(string, System.Exception)", span="81-81"];
m60_32 [file="JsonReaderException.cs", label="Newtonsoft.Json.JsonReaderException", span=""];
m62_2 [cluster="Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException(string)", file="JsonSchemaException.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException(string)", span="74-74"];
m62_3 [cluster="Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException(string)", file="JsonSchemaException.cs", label="Exit Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException(string)", span="74-74"];
m62_0 [cluster="Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException()", file="JsonSchemaException.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException()", span="65-65"];
m62_1 [cluster="Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException()", file="JsonSchemaException.cs", label="Exit Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException()", span="65-65"];
m62_6 [cluster="Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSchemaException.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="98-98"];
m62_7 [cluster="Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSchemaException.cs", label="Exit Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="98-98"];
m62_4 [cluster="Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException(string, System.Exception)", file="JsonSchemaException.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException(string, System.Exception)", span="85-85"];
m62_5 [cluster="Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException(string, System.Exception)", file="JsonSchemaException.cs", label="Exit Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException(string, System.Exception)", span="85-85"];
m62_8 [cluster="Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException(string, System.Exception, string, int, int)", file="JsonSchemaException.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException(string, System.Exception, string, int, int)", span="104-104"];
m62_9 [cluster="Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException(string, System.Exception, string, int, int)", file="JsonSchemaException.cs", label="Path = path", span="107-107"];
m62_10 [cluster="Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException(string, System.Exception, string, int, int)", file="JsonSchemaException.cs", label="LineNumber = lineNumber", span="108-108"];
m62_11 [cluster="Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException(string, System.Exception, string, int, int)", file="JsonSchemaException.cs", label="LinePosition = linePosition", span="109-109"];
m62_12 [cluster="Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException(string, System.Exception, string, int, int)", file="JsonSchemaException.cs", label="Exit Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException(string, System.Exception, string, int, int)", span="104-104"];
m62_13 [file="JsonSchemaException.cs", label="Newtonsoft.Json.Schema.JsonSchemaException", span=""];
m63_12 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JsonSchemaGenerator.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m63_14 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="359-359"];
m63_0 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeDateTimeZoneHandling.Example()", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeDateTimeZoneHandling.Example()", span="45-45"];
m63_1 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeDateTimeZoneHandling.Example()", file="JsonSchemaGenerator.cs", label="Flight flight = new Flight\r\n            {\r\n                Destination = ''Dubai'',\r\n                DepartureDate = new DateTime(2013, 1, 21, 0, 0, 0, DateTimeKind.Unspecified),\r\n                DepartureDateUtc = new DateTime(2013, 1, 21, 0, 0, 0, DateTimeKind.Utc),\r\n                DepartureDateLocal = new DateTime(2013, 1, 21, 0, 0, 0, DateTimeKind.Local),\r\n                Duration = TimeSpan.FromHours(5.5)\r\n            }", span="48-55"];
m63_2 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeDateTimeZoneHandling.Example()", file="JsonSchemaGenerator.cs", label="string jsonWithRoundtripTimeZone = JsonConvert.SerializeObject(flight, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateTimeZoneHandling = DateTimeZoneHandling.RoundtripKind\r\n            })", span="57-60"];
m63_4 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeDateTimeZoneHandling.Example()", file="JsonSchemaGenerator.cs", label="string jsonWithLocalTimeZone = JsonConvert.SerializeObject(flight, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateTimeZoneHandling = DateTimeZoneHandling.Local\r\n            })", span="71-74"];
m63_6 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeDateTimeZoneHandling.Example()", file="JsonSchemaGenerator.cs", label="string jsonWithUtcTimeZone = JsonConvert.SerializeObject(flight, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateTimeZoneHandling = DateTimeZoneHandling.Utc\r\n            })", span="85-88"];
m63_8 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeDateTimeZoneHandling.Example()", file="JsonSchemaGenerator.cs", label="string jsonWithUnspecifiedTimeZone = JsonConvert.SerializeObject(flight, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateTimeZoneHandling = DateTimeZoneHandling.Unspecified\r\n            })", span="99-102"];
m63_3 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeDateTimeZoneHandling.Example()", file="JsonSchemaGenerator.cs", label="Console.WriteLine(jsonWithRoundtripTimeZone)", span="62-62"];
m63_5 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeDateTimeZoneHandling.Example()", file="JsonSchemaGenerator.cs", label="Console.WriteLine(jsonWithLocalTimeZone)", span="76-76"];
m63_7 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeDateTimeZoneHandling.Example()", file="JsonSchemaGenerator.cs", label="Console.WriteLine(jsonWithUtcTimeZone)", span="90-90"];
m63_9 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeDateTimeZoneHandling.Example()", file="JsonSchemaGenerator.cs", label="Console.WriteLine(jsonWithUnspecifiedTimeZone)", span="104-104"];
m63_10 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeDateTimeZoneHandling.Example()", file="JsonSchemaGenerator.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeDateTimeZoneHandling.Example()", span="45-45"];
m63_11 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeDateTimeZoneHandling.Flight.Flight()", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeDateTimeZoneHandling.Flight.Flight()", span="35-35"];
m63_15 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSchemaGenerator.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="606-606"];
m63_13 [cluster="System.TimeSpan.FromHours(double)", file="JsonSchemaGenerator.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m63_16 [cluster="System.Console.WriteLine(string)", file="JsonSchemaGenerator.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m64_370 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Success()", file="JsonSchemaNode.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Success()", span="610-610"];
m64_371 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Success()", file="JsonSchemaNode.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''array'''',\r\n  ''''items'''':{\r\n    ''''type'''':''''number'''',\r\n    ''''divisibleBy'''':2\r\n  }\r\n}''", span="612-618"];
m64_372 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Success()", file="JsonSchemaNode.cs", label="string json = ''[999999999999999999999999999999999999999999999999999999998]''", span="620-620"];
m64_376 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Success()", file="JsonSchemaNode.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="626-626"];
m64_373 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Success()", file="JsonSchemaNode.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="622-622"];
m64_374 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Success()", file="JsonSchemaNode.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="624-624"];
m64_375 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Success()", file="JsonSchemaNode.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="625-625"];
m64_377 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Success()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="628-628"];
m64_378 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Success()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="629-629"];
m64_379 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Success()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="631-631"];
m64_380 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Success()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="632-632"];
m64_382 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Success()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="635-635"];
m64_383 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Success()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="636-636"];
m64_381 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Success()", file="JsonSchemaNode.cs", label="Assert.IsNull(validationEventArgs)", span="633-633"];
m64_384 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Success()", file="JsonSchemaNode.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Success()", span="610-610"];
m64_345 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatDivisibleBy()", file="JsonSchemaNode.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatDivisibleBy()", span="569-569"];
m64_346 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatDivisibleBy()", file="JsonSchemaNode.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''array'''',\r\n  ''''items'''':{\r\n    ''''type'''':''''number'''',\r\n    ''''divisibleBy'''':0.1\r\n  }\r\n}''", span="571-577"];
m64_347 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatDivisibleBy()", file="JsonSchemaNode.cs", label="string json = ''[1.1,2.2,4.001]''", span="579-579"];
m64_351 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatDivisibleBy()", file="JsonSchemaNode.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="585-585"];
m64_348 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatDivisibleBy()", file="JsonSchemaNode.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="581-581"];
m64_349 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatDivisibleBy()", file="JsonSchemaNode.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="583-583"];
m64_350 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatDivisibleBy()", file="JsonSchemaNode.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="584-584"];
m64_352 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatDivisibleBy()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="587-587"];
m64_353 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatDivisibleBy()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="588-588"];
m64_354 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatDivisibleBy()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="590-590"];
m64_355 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatDivisibleBy()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="591-591"];
m64_356 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatDivisibleBy()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="593-593"];
m64_357 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatDivisibleBy()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="594-594"];
m64_359 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatDivisibleBy()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="597-597"];
m64_360 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatDivisibleBy()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="598-598"];
m64_363 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatDivisibleBy()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="602-602"];
m64_364 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatDivisibleBy()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="603-603"];
m64_358 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatDivisibleBy()", file="JsonSchemaNode.cs", label="Assert.AreEqual(null, validationEventArgs)", span="595-595"];
m64_361 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatDivisibleBy()", file="JsonSchemaNode.cs", label="Assert.AreEqual(@''Float 4.001 is not evenly divisible by 0.1. Line 1, position 14.'', validationEventArgs.Message)", span="599-599"];
m64_362 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatDivisibleBy()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''[2]'', validationEventArgs.Path)", span="600-600"];
m64_365 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatDivisibleBy()", file="JsonSchemaNode.cs", label="Assert.IsNotNull(validationEventArgs)", span="605-605"];
m64_366 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatDivisibleBy()", file="JsonSchemaNode.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatDivisibleBy()", span="569-569"];
m64_152 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringIsNotInEnum()", file="JsonSchemaNode.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringIsNotInEnum()", span="267-267"];
m64_153 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringIsNotInEnum()", file="JsonSchemaNode.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''array'''',\r\n  ''''items'''':{\r\n    ''''type'''':''''string'''',\r\n    ''''enum'''':[''''one'''',''''two'''']\r\n  },\r\n  ''''maxItems'''':3\r\n}''", span="269-276"];
m64_154 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringIsNotInEnum()", file="JsonSchemaNode.cs", label="string json = ''['one','two','THREE']''", span="278-278"];
m64_158 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringIsNotInEnum()", file="JsonSchemaNode.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="284-284"];
m64_155 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringIsNotInEnum()", file="JsonSchemaNode.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="280-280"];
m64_156 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringIsNotInEnum()", file="JsonSchemaNode.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="282-282"];
m64_157 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringIsNotInEnum()", file="JsonSchemaNode.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="283-283"];
m64_159 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringIsNotInEnum()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="286-286"];
m64_160 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringIsNotInEnum()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="287-287"];
m64_161 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringIsNotInEnum()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="289-289"];
m64_162 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringIsNotInEnum()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="290-290"];
m64_163 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringIsNotInEnum()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="292-292"];
m64_164 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringIsNotInEnum()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="293-293"];
m64_166 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringIsNotInEnum()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="296-296"];
m64_167 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringIsNotInEnum()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="297-297"];
m64_170 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringIsNotInEnum()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="301-301"];
m64_171 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringIsNotInEnum()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="302-302"];
m64_165 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringIsNotInEnum()", file="JsonSchemaNode.cs", label="Assert.AreEqual(null, validationEventArgs)", span="294-294"];
m64_168 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringIsNotInEnum()", file="JsonSchemaNode.cs", label="Assert.AreEqual(@''Value ''''THREE'''' is not defined in enum. Line 1, position 20.'', validationEventArgs.Message)", span="298-298"];
m64_169 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringIsNotInEnum()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''[2]'', validationEventArgs.Path)", span="299-299"];
m64_172 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringIsNotInEnum()", file="JsonSchemaNode.cs", label="Assert.IsNotNull(validationEventArgs)", span="304-304"];
m64_173 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringIsNotInEnum()", file="JsonSchemaNode.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringIsNotInEnum()", span="267-267"];
m64_121 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringLessThanMinimumLength()", file="JsonSchemaNode.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringLessThanMinimumLength()", span="219-219"];
m64_122 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringLessThanMinimumLength()", file="JsonSchemaNode.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''string'''',\r\n  ''''minLength'''':5,\r\n  ''''maxLength'''':50,\r\n}''", span="221-225"];
m64_123 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringLessThanMinimumLength()", file="JsonSchemaNode.cs", label="string json = '''pie'''", span="227-227"];
m64_127 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringLessThanMinimumLength()", file="JsonSchemaNode.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="233-233"];
m64_124 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringLessThanMinimumLength()", file="JsonSchemaNode.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="229-229"];
m64_125 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringLessThanMinimumLength()", file="JsonSchemaNode.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="231-231"];
m64_126 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringLessThanMinimumLength()", file="JsonSchemaNode.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="232-232"];
m64_128 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringLessThanMinimumLength()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="235-235"];
m64_129 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringLessThanMinimumLength()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="236-236"];
m64_130 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringLessThanMinimumLength()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''String 'pie' is less than minimum length of 5. Line 1, position 5.'', validationEventArgs.Message)", span="237-237"];
m64_131 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringLessThanMinimumLength()", file="JsonSchemaNode.cs", label="Assert.IsNotNull(validationEventArgs)", span="239-239"];
m64_132 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringLessThanMinimumLength()", file="JsonSchemaNode.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringLessThanMinimumLength()", span="219-219"];
m64_66 [cluster="Unk.IsNull", file="JsonSchemaNode.cs", label="Entry Unk.IsNull", span=""];
m64_911 [cluster="System.Convert.ToBase64String(byte[])", file="JsonSchemaNode.cs", label="Entry System.Convert.ToBase64String(byte[])", span="0-0"];
m64_947 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32FromSerializer()", file="JsonSchemaNode.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32FromSerializer()", span="1667-1667"];
m64_948 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32FromSerializer()", file="JsonSchemaNode.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(''[1,2,3]'')))", span="1669-1669"];
m64_949 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32FromSerializer()", file="JsonSchemaNode.cs", label="reader.Schema = new JsonSchemaGenerator().Generate(typeof(int[]))", span="1670-1670"];
m64_950 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32FromSerializer()", file="JsonSchemaNode.cs", label="int[] values = new JsonSerializer().Deserialize<int[]>(reader)", span="1671-1671"];
m64_951 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32FromSerializer()", file="JsonSchemaNode.cs", label="Assert.AreEqual(3, values.Length)", span="1673-1673"];
m64_952 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32FromSerializer()", file="JsonSchemaNode.cs", label="Assert.AreEqual(1, values[0])", span="1674-1674"];
m64_953 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32FromSerializer()", file="JsonSchemaNode.cs", label="Assert.AreEqual(2, values[1])", span="1675-1675"];
m64_954 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32FromSerializer()", file="JsonSchemaNode.cs", label="Assert.AreEqual(3, values[2])", span="1676-1676"];
m64_955 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32FromSerializer()", file="JsonSchemaNode.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32FromSerializer()", span="1667-1667"];
m64_0 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.CheckInnerReader()", file="JsonSchemaNode.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.CheckInnerReader()", span="56-56"];
m64_5 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.CheckInnerReader()", file="JsonSchemaNode.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.CheckInnerReader()", span="56-56"];
m64_4 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.CheckInnerReader()", file="JsonSchemaNode.cs", label="Assert.AreEqual(reader, validatingReader.Reader)", span="62-62"];
m64_1 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.CheckInnerReader()", file="JsonSchemaNode.cs", label="string json = ''{'name':'James','hobbies':['pie','cake']}''", span="58-58"];
m64_2 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.CheckInnerReader()", file="JsonSchemaNode.cs", label="JsonReader reader = new JsonTextReader(new StringReader(json))", span="59-59"];
m64_3 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.CheckInnerReader()", file="JsonSchemaNode.cs", label="JsonValidatingReader validatingReader = new JsonValidatingReader(reader)", span="61-61"];
m64_6 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonSchemaNode.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="78-78"];
m64_741 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsMissingRequiredProperties()", file="JsonSchemaNode.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsMissingRequiredProperties()", span="1215-1215"];
m64_742 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsMissingRequiredProperties()", file="JsonSchemaNode.cs", label="string json = ''{}''", span="1217-1217"];
m64_743 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsMissingRequiredProperties()", file="JsonSchemaNode.cs", label="List<string> errors = new List<string>()", span="1219-1219"];
m64_744 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsMissingRequiredProperties()", file="JsonSchemaNode.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="1221-1221"];
m64_745 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsMissingRequiredProperties()", file="JsonSchemaNode.cs", label="reader.ValidationEventHandler += (sender, args) => { errors.Add(args.Message); }", span="1222-1222"];
m64_751 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsMissingRequiredProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(1, errors.Count)", span="1231-1231"];
m64_752 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsMissingRequiredProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''Required properties are missing from object: secondproperty, firstproperty. Line 1, position 2.'', errors[0])", span="1232-1232"];
m64_746 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsMissingRequiredProperties()", file="JsonSchemaNode.cs", label="reader.Schema = GetExtendedSchema()", span="1223-1223"];
m64_747 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsMissingRequiredProperties()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="1225-1225"];
m64_748 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsMissingRequiredProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1226-1226"];
m64_749 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsMissingRequiredProperties()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="1228-1228"];
m64_750 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsMissingRequiredProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1229-1229"];
m64_753 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsMissingRequiredProperties()", file="JsonSchemaNode.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsMissingRequiredProperties()", span="1215-1215"];
m64_63 [cluster="Unk.IsTrue", file="JsonSchemaNode.cs", label="Entry Unk.IsTrue", span=""];
m64_64 [cluster="object.ToString()", file="JsonSchemaNode.cs", label="Entry object.ToString()", span="0-0"];
m64_606 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingNonRequiredProperties()", file="JsonSchemaNode.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingNonRequiredProperties()", span="997-997"];
m64_607 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingNonRequiredProperties()", file="JsonSchemaNode.cs", label="string schemaJson = @''{\r\n  ''''description'''':''''A person'''',\r\n  ''''type'''':''''object'''',\r\n  ''''properties'''':\r\n  {\r\n    ''''name'''':{''''type'''':''''string'''',''''required'''':true},\r\n    ''''hobbies'''':{''''type'''':''''string'''',''''required'''':false},\r\n    ''''age'''':{''''type'''':''''integer''''}\r\n  }\r\n}''", span="999-1008"];
m64_608 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingNonRequiredProperties()", file="JsonSchemaNode.cs", label="string json = ''{'name':'James'}''", span="1010-1010"];
m64_612 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingNonRequiredProperties()", file="JsonSchemaNode.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="1016-1016"];
m64_609 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingNonRequiredProperties()", file="JsonSchemaNode.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="1012-1012"];
m64_610 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingNonRequiredProperties()", file="JsonSchemaNode.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="1014-1014"];
m64_611 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingNonRequiredProperties()", file="JsonSchemaNode.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="1015-1015"];
m64_613 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingNonRequiredProperties()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="1018-1018"];
m64_614 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingNonRequiredProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1019-1019"];
m64_615 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingNonRequiredProperties()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="1021-1021"];
m64_616 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingNonRequiredProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1022-1022"];
m64_617 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingNonRequiredProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''name'', reader.Value.ToString())", span="1023-1023"];
m64_618 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingNonRequiredProperties()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="1025-1025"];
m64_619 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingNonRequiredProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1026-1026"];
m64_620 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingNonRequiredProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''James'', reader.Value.ToString())", span="1027-1027"];
m64_622 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingNonRequiredProperties()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="1030-1030"];
m64_623 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingNonRequiredProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1031-1031"];
m64_621 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingNonRequiredProperties()", file="JsonSchemaNode.cs", label="Assert.IsNull(validationEventArgs)", span="1028-1028"];
m64_624 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingNonRequiredProperties()", file="JsonSchemaNode.cs", label="Assert.IsNull(validationEventArgs)", span="1033-1033"];
m64_625 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingNonRequiredProperties()", file="JsonSchemaNode.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingNonRequiredProperties()", span="997-997"];
m64_234 [cluster="JValue.cstr", file="JsonSchemaNode.cs", label="Entry JValue.cstr", span=""];
m64_921 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32Failure()", file="JsonSchemaNode.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32Failure()", span="1621-1621"];
m64_922 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32Failure()", file="JsonSchemaNode.cs", label="ExceptionAssert.Throws<JsonSchemaException>(() =>\r\n            {\r\n                JsonSchema s = new JsonSchemaGenerator().Generate(typeof(int));\r\n                s.Maximum = 2;\r\n\r\n                JsonReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(@''5'')))\r\n                {\r\n                    Schema = s\r\n                };\r\n                reader.ReadAsInt32();\r\n            }, ''Integer 5 exceeds maximum value of 2. Line 1, position 1.'')", span="1623-1633"];
m64_923 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32Failure()", file="JsonSchemaNode.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32Failure()", span="1621-1621"];
m64_240 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ThrowExceptionWhenNoValidationEventHandler()", file="JsonSchemaNode.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.ThrowExceptionWhenNoValidationEventHandler()", span="401-401"];
m64_241 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ThrowExceptionWhenNoValidationEventHandler()", file="JsonSchemaNode.cs", label="ExceptionAssert.Throws<JsonSchemaException>(() =>\r\n            {\r\n                string schemaJson = @''{\r\n  ''''type'''':''''integer'''',\r\n  ''''maximum'''':5\r\n}'';\r\n\r\n                JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(''10'')));\r\n                reader.Schema = JsonSchema.Parse(schemaJson);\r\n\r\n                Assert.IsTrue(reader.Read());\r\n            }, ''Integer 10 exceeds maximum value of 5. Line 1, position 2.'')", span="403-414"];
m64_242 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ThrowExceptionWhenNoValidationEventHandler()", file="JsonSchemaNode.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.ThrowExceptionWhenNoValidationEventHandler()", span="401-401"];
m64_388 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Failure()", file="JsonSchemaNode.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Failure()", span="640-640"];
m64_389 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Failure()", file="JsonSchemaNode.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''array'''',\r\n  ''''items'''':{\r\n    ''''type'''':''''number'''',\r\n    ''''divisibleBy'''':2\r\n  }\r\n}''", span="642-648"];
m64_390 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Failure()", file="JsonSchemaNode.cs", label="string json = ''[999999999999999999999999999999999999999999999999999999999]''", span="650-650"];
m64_394 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Failure()", file="JsonSchemaNode.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="656-656"];
m64_391 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Failure()", file="JsonSchemaNode.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="652-652"];
m64_392 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Failure()", file="JsonSchemaNode.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="654-654"];
m64_393 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Failure()", file="JsonSchemaNode.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="655-655"];
m64_395 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Failure()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="658-658"];
m64_396 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Failure()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="659-659"];
m64_397 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Failure()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="661-661"];
m64_398 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Failure()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="662-662"];
m64_401 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Failure()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="666-666"];
m64_402 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Failure()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="667-667"];
m64_399 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Failure()", file="JsonSchemaNode.cs", label="Assert.AreEqual(@''Integer 999999999999999999999999999999999999999999999999999999999 is not evenly divisible by 2. Line 1, position 58.'', validationEventArgs.Message)", span="663-663"];
m64_400 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Failure()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''[0]'', validationEventArgs.Path)", span="664-664"];
m64_403 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Failure()", file="JsonSchemaNode.cs", label="Assert.IsNotNull(validationEventArgs)", span="669-669"];
m64_404 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Failure()", file="JsonSchemaNode.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Failure()", span="640-640"];
m64_23 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JsonSchemaNode.cs", label="Assert.AreEqual('''', reader.Path)", span="96-96"];
m64_477 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BooleanNotInEnum()", file="JsonSchemaNode.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.BooleanNotInEnum()", span="790-790"];
m64_478 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BooleanNotInEnum()", file="JsonSchemaNode.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''array'''',\r\n  ''''items'''':{\r\n    ''''type'''':''''boolean'''',\r\n    ''''enum'''':[true]\r\n  },\r\n  ''''maxItems'''':3\r\n}''", span="792-799"];
m64_479 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BooleanNotInEnum()", file="JsonSchemaNode.cs", label="string json = ''[true,false]''", span="801-801"];
m64_483 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BooleanNotInEnum()", file="JsonSchemaNode.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="807-807"];
m64_480 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BooleanNotInEnum()", file="JsonSchemaNode.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="803-803"];
m64_481 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BooleanNotInEnum()", file="JsonSchemaNode.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="805-805"];
m64_482 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BooleanNotInEnum()", file="JsonSchemaNode.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="806-806"];
m64_484 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BooleanNotInEnum()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="809-809"];
m64_485 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BooleanNotInEnum()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="810-810"];
m64_486 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BooleanNotInEnum()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="812-812"];
m64_487 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BooleanNotInEnum()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="813-813"];
m64_489 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BooleanNotInEnum()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="816-816"];
m64_490 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BooleanNotInEnum()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="817-817"];
m64_493 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BooleanNotInEnum()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="821-821"];
m64_494 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BooleanNotInEnum()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="822-822"];
m64_488 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BooleanNotInEnum()", file="JsonSchemaNode.cs", label="Assert.AreEqual(null, validationEventArgs)", span="814-814"];
m64_491 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BooleanNotInEnum()", file="JsonSchemaNode.cs", label="Assert.AreEqual(@''Value false is not defined in enum. Line 1, position 11.'', validationEventArgs.Message)", span="818-818"];
m64_492 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BooleanNotInEnum()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''[1]'', validationEventArgs.Path)", span="819-819"];
m64_495 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BooleanNotInEnum()", file="JsonSchemaNode.cs", label="Assert.IsNotNull(validationEventArgs)", span="824-824"];
m64_496 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BooleanNotInEnum()", file="JsonSchemaNode.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.BooleanNotInEnum()", span="790-790"];
m64_61 [cluster="Newtonsoft.Json.Schema.JsonSchema.Parse(string)", file="JsonSchemaNode.cs", label="Entry Newtonsoft.Json.Schema.JsonSchema.Parse(string)", span="294-294"];
m64_265 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerIsNotInEnum()", file="JsonSchemaNode.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerIsNotInEnum()", span="441-441"];
m64_266 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerIsNotInEnum()", file="JsonSchemaNode.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''array'''',\r\n  ''''items'''':{\r\n    ''''type'''':''''integer'''',\r\n    ''''enum'''':[1,2]\r\n  },\r\n  ''''maxItems'''':3\r\n}''", span="443-450"];
m64_267 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerIsNotInEnum()", file="JsonSchemaNode.cs", label="string json = ''[1,2,3]''", span="452-452"];
m64_271 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerIsNotInEnum()", file="JsonSchemaNode.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="458-458"];
m64_268 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerIsNotInEnum()", file="JsonSchemaNode.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="454-454"];
m64_269 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerIsNotInEnum()", file="JsonSchemaNode.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="456-456"];
m64_270 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerIsNotInEnum()", file="JsonSchemaNode.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="457-457"];
m64_272 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerIsNotInEnum()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="460-460"];
m64_273 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerIsNotInEnum()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="461-461"];
m64_274 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerIsNotInEnum()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="463-463"];
m64_275 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerIsNotInEnum()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="464-464"];
m64_276 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerIsNotInEnum()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="466-466"];
m64_277 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerIsNotInEnum()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="467-467"];
m64_279 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerIsNotInEnum()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="470-470"];
m64_280 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerIsNotInEnum()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="471-471"];
m64_283 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerIsNotInEnum()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="475-475"];
m64_284 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerIsNotInEnum()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="476-476"];
m64_278 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerIsNotInEnum()", file="JsonSchemaNode.cs", label="Assert.AreEqual(null, validationEventArgs)", span="468-468"];
m64_281 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerIsNotInEnum()", file="JsonSchemaNode.cs", label="Assert.AreEqual(@''Value 3 is not defined in enum. Line 1, position 6.'', validationEventArgs.Message)", span="472-472"];
m64_282 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerIsNotInEnum()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''[2]'', validationEventArgs.Path)", span="473-473"];
m64_285 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerIsNotInEnum()", file="JsonSchemaNode.cs", label="Assert.IsNotNull(validationEventArgs)", span="478-478"];
m64_286 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerIsNotInEnum()", file="JsonSchemaNode.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerIsNotInEnum()", span="441-441"];
m64_931 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsDecimal()", file="JsonSchemaNode.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsDecimal()", span="1637-1637"];
m64_932 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsDecimal()", file="JsonSchemaNode.cs", label="JsonSchema s = new JsonSchemaGenerator().Generate(typeof(decimal))", span="1639-1639"];
m64_933 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsDecimal()", file="JsonSchemaNode.cs", label="JsonReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(@''1.5'')))\r\n            {\r\n                Schema = s\r\n            }", span="1641-1644"];
m64_934 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsDecimal()", file="JsonSchemaNode.cs", label="decimal? d = reader.ReadAsDecimal()", span="1645-1645"];
m64_935 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsDecimal()", file="JsonSchemaNode.cs", label="Assert.AreEqual(1.5m, d)", span="1647-1647"];
m64_936 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsDecimal()", file="JsonSchemaNode.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsDecimal()", span="1637-1637"];
m64_62 [cluster="Newtonsoft.Json.JsonValidatingReader.Read()", file="JsonSchemaNode.cs", label="Entry Newtonsoft.Json.JsonValidatingReader.Read()", span="499-499"];
m64_882 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.JsonSchemaModelBuilder()", file="JsonSchemaNode.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaModelBuilder.JsonSchemaModelBuilder()", span="37-37"];
m64_250 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerLessThanMinimumValue()", file="JsonSchemaNode.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerLessThanMinimumValue()", span="418-418"];
m64_251 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerLessThanMinimumValue()", file="JsonSchemaNode.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''integer'''',\r\n  ''''minimum'''':5\r\n}''", span="420-423"];
m64_252 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerLessThanMinimumValue()", file="JsonSchemaNode.cs", label="string json = ''1''", span="425-425"];
m64_256 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerLessThanMinimumValue()", file="JsonSchemaNode.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="431-431"];
m64_253 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerLessThanMinimumValue()", file="JsonSchemaNode.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="427-427"];
m64_254 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerLessThanMinimumValue()", file="JsonSchemaNode.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="429-429"];
m64_255 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerLessThanMinimumValue()", file="JsonSchemaNode.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="430-430"];
m64_257 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerLessThanMinimumValue()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="433-433"];
m64_258 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerLessThanMinimumValue()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="434-434"];
m64_259 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerLessThanMinimumValue()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''Integer 1 is less than minimum value of 5. Line 1, position 1.'', validationEventArgs.Message)", span="435-435"];
m64_260 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerLessThanMinimumValue()", file="JsonSchemaNode.cs", label="Assert.IsNotNull(validationEventArgs)", span="437-437"];
m64_261 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerLessThanMinimumValue()", file="JsonSchemaNode.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerLessThanMinimumValue()", span="418-418"];
m64_914 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32()", file="JsonSchemaNode.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32()", span="1607-1607"];
m64_915 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32()", file="JsonSchemaNode.cs", label="JsonSchema s = new JsonSchemaGenerator().Generate(typeof(int))", span="1609-1609"];
m64_916 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32()", file="JsonSchemaNode.cs", label="JsonReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(@''1'')))\r\n            {\r\n                Schema = s\r\n            }", span="1611-1614"];
m64_917 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32()", file="JsonSchemaNode.cs", label="int? i = reader.ReadAsInt32()", span="1615-1615"];
m64_918 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32()", file="JsonSchemaNode.cs", label="Assert.AreEqual(1, i)", span="1617-1617"];
m64_919 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32()", file="JsonSchemaNode.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32()", span="1607-1607"];
m64_920 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32()", file="JsonSchemaNode.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsInt32()", span="415-415"];
m64_694 [cluster="Newtonsoft.Json.Schema.JsonSchemaResolver.JsonSchemaResolver()", file="JsonSchemaNode.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaResolver.JsonSchemaResolver()", span="56-56"];
m64_177 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDoesNotMatchPattern()", file="JsonSchemaNode.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDoesNotMatchPattern()", span="308-308"];
m64_178 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDoesNotMatchPattern()", file="JsonSchemaNode.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''string'''',\r\n  ''''pattern'''':''''foo''''\r\n}''", span="310-313"];
m64_179 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDoesNotMatchPattern()", file="JsonSchemaNode.cs", label="string json = '''The quick brown fox jumps over the lazy dog.'''", span="315-315"];
m64_183 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDoesNotMatchPattern()", file="JsonSchemaNode.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="321-321"];
m64_180 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDoesNotMatchPattern()", file="JsonSchemaNode.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="317-317"];
m64_181 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDoesNotMatchPattern()", file="JsonSchemaNode.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="319-319"];
m64_182 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDoesNotMatchPattern()", file="JsonSchemaNode.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="320-320"];
m64_184 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDoesNotMatchPattern()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="323-323"];
m64_185 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDoesNotMatchPattern()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="324-324"];
m64_186 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDoesNotMatchPattern()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''String 'The quick brown fox jumps over the lazy dog.' does not match regex pattern 'foo'. Line 1, position 46.'', validationEventArgs.Message)", span="325-325"];
m64_187 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDoesNotMatchPattern()", file="JsonSchemaNode.cs", label="Assert.AreEqual('''', validationEventArgs.Path)", span="326-326"];
m64_188 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDoesNotMatchPattern()", file="JsonSchemaNode.cs", label="Assert.IsNotNull(validationEventArgs)", span="328-328"];
m64_189 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDoesNotMatchPattern()", file="JsonSchemaNode.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDoesNotMatchPattern()", span="308-308"];
m64_8 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JsonSchemaNode.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m64_65 [cluster="Unk.IsFalse", file="JsonSchemaNode.cs", label="Entry Unk.IsFalse", span=""];
m64_24 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="98-98"];
m64_25 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="99-99"];
m64_26 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''name'', reader.Value.ToString())", span="100-100"];
m64_819 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JsonSchemaNode.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", span="1337-1337"];
m64_820 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JsonSchemaNode.cs", label="string first = @''{\r\n  ''''id'''':''''first'''',\r\n  ''''type'''':''''object'''',\r\n  ''''properties'''':\r\n  {\r\n    ''''firstproperty'''':{''''type'''':''''string''''},\r\n    ''''secondproperty'''':{''''type'''':''''string'''',''''maxLength'''':10},\r\n    ''''thirdproperty'''':{\r\n      ''''type'''':''''object'''',\r\n      ''''properties'''':\r\n      {\r\n        ''''thirdproperty_firstproperty'''':{''''type'''':''''string'''',''''maxLength'''':10,''''minLength'''':7}\r\n      }\r\n    }\r\n  },\r\n  ''''additionalProperties'''':{}\r\n}''", span="1339-1355"];
m64_821 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JsonSchemaNode.cs", label="string second = @''{\r\n  ''''id'''':''''second'''',\r\n  ''''type'''':''''object'''',\r\n  ''''extends'''':{''''$ref'''':''''first''''},\r\n  ''''properties'''':\r\n  {\r\n    ''''secondproperty'''':{''''type'''':''''any''''},\r\n    ''''thirdproperty'''':{\r\n      ''''extends'''':{\r\n        ''''properties'''':\r\n        {\r\n          ''''thirdproperty_firstproperty'''':{''''maxLength'''':9,''''minLength'''':6,''''pattern'''':''''hi2u''''}\r\n        },\r\n        ''''additionalProperties'''':{''''maxLength'''':9,''''minLength'''':6,''''enum'''':[''''one'''',''''two'''']}\r\n      },\r\n      ''''type'''':''''object'''',\r\n      ''''properties'''':\r\n      {\r\n        ''''thirdproperty_firstproperty'''':{''''pattern'''':''''hi''''}\r\n      },\r\n      ''''additionalProperties'''':{''''type'''':''''string'''',''''enum'''':[''''two'''',''''three'''']}\r\n    },\r\n    ''''fourthproperty'''':{''''type'''':''''string''''}\r\n  },\r\n  ''''additionalProperties'''':false\r\n}''", span="1357-1382"];
m64_823 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JsonSchemaNode.cs", label="JsonSchema firstSchema = JsonSchema.Parse(first, resolver)", span="1385-1385"];
m64_822 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JsonSchemaNode.cs", label="JsonSchemaResolver resolver = new JsonSchemaResolver()", span="1384-1384"];
m64_824 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JsonSchemaNode.cs", label="JsonSchema secondSchema = JsonSchema.Parse(second, resolver)", span="1386-1386"];
m64_825 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JsonSchemaNode.cs", label="JsonSchemaModelBuilder modelBuilder = new JsonSchemaModelBuilder()", span="1388-1388"];
m64_831 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JsonSchemaNode.cs", label="reader.Schema = secondSchema", span="1408-1408"];
m64_826 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JsonSchemaNode.cs", label="string json = @''{\r\n  'firstproperty':'blahblahblahblahblahblah',\r\n  'secondproperty':'secasecasecasecaseca',\r\n  'thirdproperty':{\r\n    'thirdproperty_firstproperty':'aaa',\r\n    'additional':'three'\r\n  }\r\n}''", span="1390-1397"];
m64_827 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JsonSchemaNode.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="1399-1399"];
m64_829 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JsonSchemaNode.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="1402-1402"];
m64_828 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JsonSchemaNode.cs", label="List<string> errors = new List<string>()", span="1400-1400"];
m64_830 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JsonSchemaNode.cs", label="reader.ValidationEventHandler += (sender, args) =>\r\n            {\r\n                validationEventArgs = args;\r\n                errors.Add(validationEventArgs.Path + '' - '' + validationEventArgs.Message);\r\n            }", span="1403-1407"];
m64_847 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JsonSchemaNode.cs", label="Assert.AreEqual(1, errors.Count)", span="1429-1429"];
m64_848 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''secondproperty - String 'secasecasecasecaseca' exceeds maximum length of 10. Line 3, position 41.'', errors[0])", span="1430-1430"];
m64_852 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JsonSchemaNode.cs", label="Assert.AreEqual(1, errors.Count)", span="1435-1435"];
m64_855 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JsonSchemaNode.cs", label="Assert.AreEqual(1, errors.Count)", span="1439-1439"];
m64_859 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JsonSchemaNode.cs", label="Assert.AreEqual(1, errors.Count)", span="1444-1444"];
m64_863 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JsonSchemaNode.cs", label="Assert.AreEqual(4, errors.Count)", span="1449-1449"];
m64_864 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''thirdproperty.thirdproperty_firstproperty - String 'aaa' is less than minimum length of 7. Line 5, position 39.'', errors[1])", span="1450-1450"];
m64_865 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''thirdproperty.thirdproperty_firstproperty - String 'aaa' does not match regex pattern 'hi'. Line 5, position 39.'', errors[2])", span="1451-1451"];
m64_866 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''thirdproperty.thirdproperty_firstproperty - String 'aaa' does not match regex pattern 'hi2u'. Line 5, position 39.'', errors[3])", span="1452-1452"];
m64_870 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JsonSchemaNode.cs", label="Assert.AreEqual(4, errors.Count)", span="1457-1457"];
m64_874 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JsonSchemaNode.cs", label="Assert.AreEqual(5, errors.Count)", span="1462-1462"];
m64_875 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''thirdproperty.additional - String 'three' is less than minimum length of 6. Line 6, position 24.'', errors[4])", span="1463-1463"];
m64_832 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="1410-1410"];
m64_833 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1411-1411"];
m64_834 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="1413-1413"];
m64_835 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1414-1414"];
m64_836 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''firstproperty'', reader.Value.ToString())", span="1415-1415"];
m64_838 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="1418-1418"];
m64_839 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1419-1419"];
m64_840 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''blahblahblahblahblahblah'', reader.Value.ToString())", span="1420-1420"];
m64_841 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="1422-1422"];
m64_842 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1423-1423"];
m64_843 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''secondproperty'', reader.Value.ToString())", span="1424-1424"];
m64_844 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="1426-1426"];
m64_845 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1427-1427"];
m64_846 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''secasecasecasecaseca'', reader.Value.ToString())", span="1428-1428"];
m64_849 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="1432-1432"];
m64_850 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1433-1433"];
m64_851 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''thirdproperty'', reader.Value.ToString())", span="1434-1434"];
m64_853 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="1437-1437"];
m64_854 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1438-1438"];
m64_856 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="1441-1441"];
m64_857 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1442-1442"];
m64_858 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''thirdproperty_firstproperty'', reader.Value.ToString())", span="1443-1443"];
m64_860 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="1446-1446"];
m64_861 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1447-1447"];
m64_862 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''aaa'', reader.Value.ToString())", span="1448-1448"];
m64_867 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="1454-1454"];
m64_868 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1455-1455"];
m64_869 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''additional'', reader.Value.ToString())", span="1456-1456"];
m64_871 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="1459-1459"];
m64_872 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1460-1460"];
m64_873 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''three'', reader.Value.ToString())", span="1461-1461"];
m64_876 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="1465-1465"];
m64_877 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1466-1466"];
m64_878 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="1468-1468"];
m64_879 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1469-1469"];
m64_880 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JsonSchemaNode.cs", label="Assert.IsFalse(reader.Read())", span="1471-1471"];
m64_837 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JsonSchemaNode.cs", label="Assert.AreEqual(null, validationEventArgs)", span="1416-1416"];
m64_881 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="JsonSchemaNode.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", span="1337-1337"];
m64_209 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue_BigInteger()", file="JsonSchemaNode.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue_BigInteger()", span="357-357"];
m64_210 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue_BigInteger()", file="JsonSchemaNode.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''integer'''',\r\n  ''''maximum'''':5\r\n}''", span="359-362"];
m64_211 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue_BigInteger()", file="JsonSchemaNode.cs", label="string json = ''99999999999999999999999999999999999999999999999999999999999999999999''", span="364-364"];
m64_215 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue_BigInteger()", file="JsonSchemaNode.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="370-370"];
m64_212 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue_BigInteger()", file="JsonSchemaNode.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="366-366"];
m64_213 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue_BigInteger()", file="JsonSchemaNode.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="368-368"];
m64_214 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue_BigInteger()", file="JsonSchemaNode.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="369-369"];
m64_216 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue_BigInteger()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="372-372"];
m64_217 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue_BigInteger()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="373-373"];
m64_218 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue_BigInteger()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''Integer 99999999999999999999999999999999999999999999999999999999999999999999 exceeds maximum value of 5. Line 1, position 68.'', validationEventArgs.Message)", span="374-374"];
m64_219 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue_BigInteger()", file="JsonSchemaNode.cs", label="Assert.AreEqual('''', validationEventArgs.Path)", span="375-375"];
m64_220 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue_BigInteger()", file="JsonSchemaNode.cs", label="Assert.IsNotNull(validationEventArgs)", span="377-377"];
m64_221 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue_BigInteger()", file="JsonSchemaNode.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue_BigInteger()", span="357-357"];
m64_290 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatGreaterThanMaximumValue()", file="JsonSchemaNode.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatGreaterThanMaximumValue()", span="482-482"];
m64_291 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatGreaterThanMaximumValue()", file="JsonSchemaNode.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''number'''',\r\n  ''''maximum'''':5\r\n}''", span="484-487"];
m64_292 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatGreaterThanMaximumValue()", file="JsonSchemaNode.cs", label="string json = ''10.0''", span="489-489"];
m64_296 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatGreaterThanMaximumValue()", file="JsonSchemaNode.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="495-495"];
m64_293 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatGreaterThanMaximumValue()", file="JsonSchemaNode.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="491-491"];
m64_294 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatGreaterThanMaximumValue()", file="JsonSchemaNode.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="493-493"];
m64_295 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatGreaterThanMaximumValue()", file="JsonSchemaNode.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="494-494"];
m64_297 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatGreaterThanMaximumValue()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="497-497"];
m64_298 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatGreaterThanMaximumValue()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="498-498"];
m64_299 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatGreaterThanMaximumValue()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''Float 10.0 exceeds maximum value of 5. Line 1, position 4.'', validationEventArgs.Message)", span="499-499"];
m64_300 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatGreaterThanMaximumValue()", file="JsonSchemaNode.cs", label="Assert.IsNotNull(validationEventArgs)", span="501-501"];
m64_301 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatGreaterThanMaximumValue()", file="JsonSchemaNode.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatGreaterThanMaximumValue()", span="482-482"];
m64_70 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JsonSchemaNode.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", span="146-146"];
m64_71 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JsonSchemaNode.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''array''''\r\n}''", span="148-150"];
m64_72 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JsonSchemaNode.cs", label="string json = ''['pie','cake',['nested1','nested2'],{'nestedproperty1':1.1,'nestedproperty2':[null]}]''", span="152-152"];
m64_76 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JsonSchemaNode.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="158-158"];
m64_73 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JsonSchemaNode.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="154-154"];
m64_74 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JsonSchemaNode.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="156-156"];
m64_75 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JsonSchemaNode.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="157-157"];
m64_77 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="160-160"];
m64_78 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="161-161"];
m64_79 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="163-163"];
m64_80 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="164-164"];
m64_81 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''pie'', reader.Value.ToString())", span="165-165"];
m64_82 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="167-167"];
m64_83 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="168-168"];
m64_84 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''cake'', reader.Value.ToString())", span="169-169"];
m64_85 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="171-171"];
m64_86 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="172-172"];
m64_87 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="174-174"];
m64_88 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="175-175"];
m64_89 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''nested1'', reader.Value.ToString())", span="176-176"];
m64_90 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="178-178"];
m64_91 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="179-179"];
m64_92 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''nested2'', reader.Value.ToString())", span="180-180"];
m64_93 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="182-182"];
m64_94 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="183-183"];
m64_95 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="185-185"];
m64_96 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="186-186"];
m64_97 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="188-188"];
m64_98 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="189-189"];
m64_99 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''nestedproperty1'', reader.Value.ToString())", span="190-190"];
m64_100 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="192-192"];
m64_101 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="193-193"];
m64_102 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JsonSchemaNode.cs", label="Assert.AreEqual(1.1, reader.Value)", span="194-194"];
m64_103 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="196-196"];
m64_104 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="197-197"];
m64_105 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''nestedproperty2'', reader.Value.ToString())", span="198-198"];
m64_106 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="200-200"];
m64_107 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="201-201"];
m64_108 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="203-203"];
m64_109 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="204-204"];
m64_110 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="206-206"];
m64_111 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="207-207"];
m64_112 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="209-209"];
m64_113 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="210-210"];
m64_114 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="212-212"];
m64_115 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="213-213"];
m64_116 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JsonSchemaNode.cs", label="Assert.IsNull(validationEventArgs)", span="215-215"];
m64_117 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="JsonSchemaNode.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", span="146-146"];
m64_408 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Fraction()", file="JsonSchemaNode.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Fraction()", span="673-673"];
m64_409 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Fraction()", file="JsonSchemaNode.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''array'''',\r\n  ''''items'''':{\r\n    ''''type'''':''''number'''',\r\n    ''''divisibleBy'''':1.1\r\n  }\r\n}''", span="675-681"];
m64_410 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Fraction()", file="JsonSchemaNode.cs", label="string json = ''[999999999999999999999999999999999999999999999999999999999]''", span="683-683"];
m64_414 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Fraction()", file="JsonSchemaNode.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="689-689"];
m64_411 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Fraction()", file="JsonSchemaNode.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="685-685"];
m64_412 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Fraction()", file="JsonSchemaNode.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="687-687"];
m64_413 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Fraction()", file="JsonSchemaNode.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="688-688"];
m64_415 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Fraction()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="691-691"];
m64_416 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Fraction()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="692-692"];
m64_417 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Fraction()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="694-694"];
m64_418 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Fraction()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="695-695"];
m64_422 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Fraction()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="700-700"];
m64_423 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Fraction()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="701-701"];
m64_419 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Fraction()", file="JsonSchemaNode.cs", label="Assert.IsNotNull(validationEventArgs)", span="696-696"];
m64_420 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Fraction()", file="JsonSchemaNode.cs", label="Assert.AreEqual(@''Integer 999999999999999999999999999999999999999999999999999999999 is not evenly divisible by 1.1. Line 1, position 58.'', validationEventArgs.Message)", span="697-697"];
m64_421 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Fraction()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''[0]'', validationEventArgs.Path)", span="698-698"];
m64_424 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Fraction()", file="JsonSchemaNode.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Fraction()", span="673-673"];
m64_20 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JsonSchemaNode.cs", label="Assert.AreEqual('''', reader.Path)", span="92-92"];
m64_581 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingRequiredProperties()", file="JsonSchemaNode.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingRequiredProperties()", span="955-955"];
m64_582 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingRequiredProperties()", file="JsonSchemaNode.cs", label="string schemaJson = @''{\r\n  ''''description'''':''''A person'''',\r\n  ''''type'''':''''object'''',\r\n  ''''properties'''':\r\n  {\r\n    ''''name'''':{''''type'''':''''string''''},\r\n    ''''hobbies'''':{''''type'''':''''string'''',''''required'''':true},\r\n    ''''age'''':{''''type'''':''''integer'''',''''required'''':true}\r\n  }\r\n}''", span="957-966"];
m64_583 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingRequiredProperties()", file="JsonSchemaNode.cs", label="string json = ''{'name':'James'}''", span="968-968"];
m64_587 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingRequiredProperties()", file="JsonSchemaNode.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="974-974"];
m64_584 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingRequiredProperties()", file="JsonSchemaNode.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="970-970"];
m64_585 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingRequiredProperties()", file="JsonSchemaNode.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="972-972"];
m64_586 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingRequiredProperties()", file="JsonSchemaNode.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="973-973"];
m64_588 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingRequiredProperties()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="976-976"];
m64_589 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingRequiredProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="977-977"];
m64_590 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingRequiredProperties()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="979-979"];
m64_591 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingRequiredProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="980-980"];
m64_592 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingRequiredProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''name'', reader.Value.ToString())", span="981-981"];
m64_593 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingRequiredProperties()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="983-983"];
m64_594 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingRequiredProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="984-984"];
m64_595 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingRequiredProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''James'', reader.Value.ToString())", span="985-985"];
m64_597 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingRequiredProperties()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="988-988"];
m64_598 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingRequiredProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="989-989"];
m64_596 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingRequiredProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(null, validationEventArgs)", span="986-986"];
m64_599 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingRequiredProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''Required properties are missing from object: hobbies, age. Line 1, position 16.'', validationEventArgs.Message)", span="990-990"];
m64_600 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingRequiredProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual('''', validationEventArgs.Path)", span="991-991"];
m64_601 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingRequiredProperties()", file="JsonSchemaNode.cs", label="Assert.IsNotNull(validationEventArgs)", span="993-993"];
m64_602 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingRequiredProperties()", file="JsonSchemaNode.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingRequiredProperties()", span="955-955"];
m64_957 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", file="JsonSchemaNode.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", span="839-839"];
m64_686 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.GetExtendedSchema()", file="JsonSchemaNode.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.GetExtendedSchema()", span="1126-1126"];
m64_687 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.GetExtendedSchema()", file="JsonSchemaNode.cs", label="string first = @''{\r\n  ''''id'''':''''first'''',\r\n  ''''type'''':''''object'''',\r\n  ''''properties'''':\r\n  {\r\n    ''''firstproperty'''':{''''type'''':''''string'''',''''required'''':true}\r\n  },\r\n  ''''additionalProperties'''':{}\r\n}''", span="1128-1136"];
m64_688 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.GetExtendedSchema()", file="JsonSchemaNode.cs", label="string second = @''{\r\n  ''''id'''':''''second'''',\r\n  ''''type'''':''''object'''',\r\n  ''''extends'''':{''''$ref'''':''''first''''},\r\n  ''''properties'''':\r\n  {\r\n    ''''secondproperty'''':{''''type'''':''''string'''',''''required'''':true}\r\n  },\r\n  ''''additionalProperties'''':false\r\n}''", span="1138-1147"];
m64_690 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.GetExtendedSchema()", file="JsonSchemaNode.cs", label="JsonSchema firstSchema = JsonSchema.Parse(first, resolver)", span="1150-1150"];
m64_689 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.GetExtendedSchema()", file="JsonSchemaNode.cs", label="JsonSchemaResolver resolver = new JsonSchemaResolver()", span="1149-1149"];
m64_691 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.GetExtendedSchema()", file="JsonSchemaNode.cs", label="JsonSchema secondSchema = JsonSchema.Parse(second, resolver)", span="1151-1151"];
m64_692 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.GetExtendedSchema()", file="JsonSchemaNode.cs", label="return secondSchema;", span="1153-1153"];
m64_693 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.GetExtendedSchema()", file="JsonSchemaNode.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.GetExtendedSchema()", span="1126-1126"];
m64_435 [cluster="Newtonsoft.Json.Linq.JArray.JArray(object)", file="JsonSchemaNode.cs", label="Entry Newtonsoft.Json.Linq.JArray.JArray(object)", span="91-91"];
m64_982 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArrayIncomplete()", file="JsonSchemaNode.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArrayIncomplete()", span="1716-1716"];
m64_983 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArrayIncomplete()", file="JsonSchemaNode.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''array'''',\r\n  ''''items'''':{\r\n    ''''type'''':''''integer''''\r\n  },\r\n  ''''maxItems'''':1\r\n}''", span="1718-1724"];
m64_984 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArrayIncomplete()", file="JsonSchemaNode.cs", label="string json = ''[1,2''", span="1726-1726"];
m64_988 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArrayIncomplete()", file="JsonSchemaNode.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="1732-1732"];
m64_985 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArrayIncomplete()", file="JsonSchemaNode.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="1728-1728"];
m64_986 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArrayIncomplete()", file="JsonSchemaNode.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="1730-1730"];
m64_987 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArrayIncomplete()", file="JsonSchemaNode.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="1731-1731"];
m64_989 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArrayIncomplete()", file="JsonSchemaNode.cs", label="reader.Read()", span="1734-1734"];
m64_990 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArrayIncomplete()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="1735-1735"];
m64_991 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArrayIncomplete()", file="JsonSchemaNode.cs", label="reader.ReadAsInt32()", span="1737-1737"];
m64_992 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArrayIncomplete()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1738-1738"];
m64_994 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArrayIncomplete()", file="JsonSchemaNode.cs", label="reader.ReadAsInt32()", span="1741-1741"];
m64_995 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArrayIncomplete()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1742-1742"];
m64_997 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArrayIncomplete()", file="JsonSchemaNode.cs", label="reader.ReadAsInt32()", span="1745-1745"];
m64_998 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArrayIncomplete()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1746-1746"];
m64_993 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArrayIncomplete()", file="JsonSchemaNode.cs", label="Assert.AreEqual(null, validationEventArgs)", span="1739-1739"];
m64_996 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArrayIncomplete()", file="JsonSchemaNode.cs", label="Assert.AreEqual(null, validationEventArgs)", span="1743-1743"];
m64_999 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArrayIncomplete()", file="JsonSchemaNode.cs", label="Assert.AreEqual(null, validationEventArgs)", span="1747-1747"];
m64_1000 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArrayIncomplete()", file="JsonSchemaNode.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArrayIncomplete()", span="1716-1716"];
m64_978 [cluster="Newtonsoft.Json.JsonValidatingReader.ReadAsInt32()", file="JsonSchemaNode.cs", label="Entry Newtonsoft.Json.JsonValidatingReader.ReadAsInt32()", span="397-397"];
m64_243 [cluster="Unk.>", file="JsonSchemaNode.cs", label="Entry Unk.>", span=""];
m64_305 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatLessThanMinimumValue()", file="JsonSchemaNode.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatLessThanMinimumValue()", span="505-505"];
m64_306 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatLessThanMinimumValue()", file="JsonSchemaNode.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''number'''',\r\n  ''''minimum'''':5\r\n}''", span="507-510"];
m64_307 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatLessThanMinimumValue()", file="JsonSchemaNode.cs", label="string json = ''1.1''", span="512-512"];
m64_311 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatLessThanMinimumValue()", file="JsonSchemaNode.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="518-518"];
m64_308 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatLessThanMinimumValue()", file="JsonSchemaNode.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="514-514"];
m64_309 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatLessThanMinimumValue()", file="JsonSchemaNode.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="516-516"];
m64_310 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatLessThanMinimumValue()", file="JsonSchemaNode.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="517-517"];
m64_312 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatLessThanMinimumValue()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="520-520"];
m64_313 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatLessThanMinimumValue()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="521-521"];
m64_314 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatLessThanMinimumValue()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''Float 1.1 is less than minimum value of 5. Line 1, position 3.'', validationEventArgs.Message)", span="522-522"];
m64_315 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatLessThanMinimumValue()", file="JsonSchemaNode.cs", label="Assert.IsNotNull(validationEventArgs)", span="524-524"];
m64_316 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatLessThanMinimumValue()", file="JsonSchemaNode.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatLessThanMinimumValue()", span="505-505"];
m64_29 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="104-104"];
m64_10 [cluster="Newtonsoft.Json.Schema.JsonSchemaNode.GetId(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Schema.JsonSchema>)", file="JsonSchemaNode.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaNode.GetId(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Schema.JsonSchema>)", span="75-75"];
m64_12 [cluster="Newtonsoft.Json.Schema.JsonSchemaNode.JsonSchemaNode(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaNode.cs", label="Schemas = new ReadOnlyCollection<JsonSchema>(source.Schemas.Union(new[] { schema }).ToList())", span="60-60"];
m64_16 [cluster="Newtonsoft.Json.Schema.JsonSchemaNode.JsonSchemaNode(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaNode.cs", label="AdditionalProperties = source.AdditionalProperties", span="64-64"];
m64_13 [cluster="Newtonsoft.Json.Schema.JsonSchemaNode.JsonSchemaNode(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaNode.cs", label="Properties = new Dictionary<string, JsonSchemaNode>(source.Properties)", span="61-61"];
m64_14 [cluster="Newtonsoft.Json.Schema.JsonSchemaNode.JsonSchemaNode(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaNode.cs", label="PatternProperties = new Dictionary<string, JsonSchemaNode>(source.PatternProperties)", span="62-62"];
m64_15 [cluster="Newtonsoft.Json.Schema.JsonSchemaNode.JsonSchemaNode(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaNode.cs", label="Items = new List<JsonSchemaNode>(source.Items)", span="63-63"];
m64_17 [cluster="Newtonsoft.Json.Schema.JsonSchemaNode.JsonSchemaNode(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaNode.cs", label="AdditionalItems = source.AdditionalItems", span="65-65"];
m64_18 [cluster="Newtonsoft.Json.Schema.JsonSchemaNode.JsonSchemaNode(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaNode.cs", label="Id = GetId(Schemas)", span="67-67"];
m64_19 [cluster="Newtonsoft.Json.Schema.JsonSchemaNode.JsonSchemaNode(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaNode.cs", label="Exit Newtonsoft.Json.Schema.JsonSchemaNode.JsonSchemaNode(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", span="58-58"];
m64_21 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="JsonSchemaNode.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m64_22 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="JsonSchemaNode.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m64_27 [cluster="Newtonsoft.Json.Schema.JsonSchemaNode.GetId(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Schema.JsonSchema>)", color=green, community=0, file="JsonSchemaNode.cs", label="return string.Join(''-'', schemata.Select(s => s.InternalId).OrderBy(id => id, StringComparer.Ordinal)\r\n#if NET20 || NET35\r\n                    .ToArray()\r\n#endif\r\n                );", prediction=18, span="77-81"];
m64_28 [cluster="Newtonsoft.Json.Schema.JsonSchemaNode.GetId(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Schema.JsonSchema>)", file="JsonSchemaNode.cs", label="Exit Newtonsoft.Json.Schema.JsonSchemaNode.GetId(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Schema.JsonSchema>)", span="75-75"];
m64_30 [cluster="Unk.OrderBy", file="JsonSchemaNode.cs", label="Entry Unk.OrderBy", span=""];
m64_31 [cluster="Unk.Join", file="JsonSchemaNode.cs", label="Entry Unk.Join", span=""];
m64_32 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Entry lambda expression", span="77-77"];
m64_33 [cluster="lambda expression", file="JsonSchemaNode.cs", label="s.InternalId", span="77-77"];
m64_34 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Exit lambda expression", span="77-77"];
m64_35 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Entry lambda expression", span="77-77"];
m64_36 [cluster="lambda expression", file="JsonSchemaNode.cs", label=id, span="77-77"];
m64_37 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Exit lambda expression", span="77-77"];
m64_38 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JsonSchemaNode.cs", label="Newtonsoft.Json.Schema.JsonSchemaNode", span=""];
m64_39 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''hobbies'', reader.Path)", span="115-115"];
m64_40 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="117-117"];
m64_41 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="118-118"];
m64_42 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''hobbies'', reader.Path)", span="119-119"];
m64_43 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="121-121"];
m64_44 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="122-122"];
m64_45 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''pie'', reader.Value.ToString())", span="123-123"];
m64_46 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JsonSchemaNode.cs", label="Assert.AreEqual('''', reader.QuoteChar)", span="124-124"];
m64_47 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''hobbies[0]'', reader.Path)", span="125-125"];
m64_48 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="127-127"];
m64_49 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="128-128"];
m64_50 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''cake'', reader.Value.ToString())", span="129-129"];
m64_51 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''hobbies[1]'', reader.Path)", span="130-130"];
m64_52 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="132-132"];
m64_53 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="133-133"];
m64_54 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''hobbies'', reader.Path)", span="134-134"];
m64_55 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="136-136"];
m64_56 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="137-137"];
m64_57 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JsonSchemaNode.cs", label="Assert.AreEqual('''', reader.Path)", span="138-138"];
m64_58 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JsonSchemaNode.cs", label="Assert.IsFalse(reader.Read())", span="140-140"];
m64_59 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JsonSchemaNode.cs", label="Assert.IsNull(validationEventArgs)", span="142-142"];
m64_60 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="JsonSchemaNode.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", span="66-66"];
m64_695 [cluster="Newtonsoft.Json.Schema.JsonSchema.Parse(string, Newtonsoft.Json.Schema.JsonSchemaResolver)", file="JsonSchemaNode.cs", label="Entry Newtonsoft.Json.Schema.JsonSchema.Parse(string, Newtonsoft.Json.Schema.JsonSchemaResolver)", span="305-305"];
m64_525 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountLessThanMinimumItems()", file="JsonSchemaNode.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountLessThanMinimumItems()", span="864-864"];
m64_526 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountLessThanMinimumItems()", file="JsonSchemaNode.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''array'''',\r\n  ''''minItems'''':2,\r\n  ''''maxItems'''':3\r\n}''", span="866-870"];
m64_527 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountLessThanMinimumItems()", file="JsonSchemaNode.cs", label="string json = ''[null]''", span="872-872"];
m64_531 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountLessThanMinimumItems()", file="JsonSchemaNode.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="878-878"];
m64_528 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountLessThanMinimumItems()", file="JsonSchemaNode.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="874-874"];
m64_529 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountLessThanMinimumItems()", file="JsonSchemaNode.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="876-876"];
m64_530 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountLessThanMinimumItems()", file="JsonSchemaNode.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="877-877"];
m64_532 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountLessThanMinimumItems()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="880-880"];
m64_533 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountLessThanMinimumItems()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="881-881"];
m64_534 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountLessThanMinimumItems()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="883-883"];
m64_535 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountLessThanMinimumItems()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="884-884"];
m64_536 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountLessThanMinimumItems()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="886-886"];
m64_537 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountLessThanMinimumItems()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="887-887"];
m64_538 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountLessThanMinimumItems()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''Array item count 1 is less than minimum count of 2. Line 1, position 6.'', validationEventArgs.Message)", span="888-888"];
m64_539 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountLessThanMinimumItems()", file="JsonSchemaNode.cs", label="Assert.IsNotNull(validationEventArgs)", span="890-890"];
m64_540 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountLessThanMinimumItems()", file="JsonSchemaNode.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountLessThanMinimumItems()", span="864-864"];
m64_938 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsDecimalFailure()", file="JsonSchemaNode.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsDecimalFailure()", span="1651-1651"];
m64_939 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsDecimalFailure()", file="JsonSchemaNode.cs", label="ExceptionAssert.Throws<JsonSchemaException>(() =>\r\n            {\r\n                JsonSchema s = new JsonSchemaGenerator().Generate(typeof(decimal));\r\n                s.DivisibleBy = 1;\r\n\r\n                JsonReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(@''5.5'')))\r\n                {\r\n                    Schema = s\r\n                };\r\n                reader.ReadAsDecimal();\r\n            }, ''Float 5.5 is not evenly divisible by 1. Line 1, position 3.'')", span="1653-1663"];
m64_940 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsDecimalFailure()", file="JsonSchemaNode.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsDecimalFailure()", span="1651-1651"];
m64_629 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="JsonSchemaNode.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", span="1037-1037"];
m64_630 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="JsonSchemaNode.cs", label="string schemaJson = @''{\r\n  ''''description'''':''''A person'''',\r\n  ''''type'''':''''object'''',\r\n  ''''properties'''':\r\n  {\r\n    ''''name'''':{''''type'''':''''string''''}\r\n  },\r\n  ''''additionalProperties'''':false\r\n}''", span="1039-1047"];
m64_631 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="JsonSchemaNode.cs", label="string json = ''{'name':'James','additionalProperty1':null,'additionalProperty2':null}''", span="1049-1049"];
m64_635 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="JsonSchemaNode.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="1055-1055"];
m64_632 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="JsonSchemaNode.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="1051-1051"];
m64_633 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="JsonSchemaNode.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="1053-1053"];
m64_634 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="JsonSchemaNode.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="1054-1054"];
m64_636 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="1057-1057"];
m64_637 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1058-1058"];
m64_638 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="1060-1060"];
m64_639 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1061-1061"];
m64_640 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''name'', reader.Value.ToString())", span="1062-1062"];
m64_641 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="1064-1064"];
m64_642 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1065-1065"];
m64_643 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''James'', reader.Value.ToString())", span="1066-1066"];
m64_645 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="1069-1069"];
m64_646 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1070-1070"];
m64_647 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''additionalProperty1'', reader.Value.ToString())", span="1071-1071"];
m64_648 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="1073-1073"];
m64_649 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="1074-1074"];
m64_650 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(null, reader.Value)", span="1075-1075"];
m64_652 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="1078-1078"];
m64_653 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1079-1079"];
m64_654 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''additionalProperty2'', reader.Value.ToString())", span="1080-1080"];
m64_655 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="1082-1082"];
m64_656 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="1083-1083"];
m64_657 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(null, reader.Value)", span="1084-1084"];
m64_659 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="1087-1087"];
m64_660 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1088-1088"];
m64_644 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(null, validationEventArgs)", span="1067-1067"];
m64_651 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''Property 'additionalProperty1' has not been defined and the schema does not allow additional properties. Line 1, position 38.'', validationEventArgs.Message)", span="1076-1076"];
m64_658 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''Property 'additionalProperty2' has not been defined and the schema does not allow additional properties. Line 1, position 65.'', validationEventArgs.Message)", span="1085-1085"];
m64_661 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="JsonSchemaNode.cs", label="Assert.IsNotNull(validationEventArgs)", span="1090-1090"];
m64_662 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="JsonSchemaNode.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", span="1037-1037"];
m64_428 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_FractionWithZeroValue()", file="JsonSchemaNode.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_FractionWithZeroValue()", span="705-705"];
m64_429 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_FractionWithZeroValue()", file="JsonSchemaNode.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''array'''',\r\n  ''''items'''':{\r\n    ''''type'''':''''number'''',\r\n    ''''divisibleBy'''':1.1\r\n  }\r\n}''", span="707-713"];
m64_430 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_FractionWithZeroValue()", file="JsonSchemaNode.cs", label="JArray a = new JArray(new JValue(new BigInteger(0)))", span="715-715"];
m64_432 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_FractionWithZeroValue()", file="JsonSchemaNode.cs", label="a.Validate(JsonSchema.Parse(schemaJson), (sender, args) => { validationEventArgs = args; })", span="719-719"];
m64_431 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_FractionWithZeroValue()", file="JsonSchemaNode.cs", label="ValidationEventArgs validationEventArgs = null", span="717-717"];
m64_433 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_FractionWithZeroValue()", file="JsonSchemaNode.cs", label="Assert.IsNull(validationEventArgs)", span="721-721"];
m64_434 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_FractionWithZeroValue()", file="JsonSchemaNode.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_FractionWithZeroValue()", span="705-705"];
m64_956 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonSchemaNode.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="530-530"];
m64_320 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatIsNotInEnum()", file="JsonSchemaNode.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatIsNotInEnum()", span="528-528"];
m64_321 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatIsNotInEnum()", file="JsonSchemaNode.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''array'''',\r\n  ''''items'''':{\r\n    ''''type'''':''''number'''',\r\n    ''''enum'''':[1.1,2.2]\r\n  },\r\n  ''''maxItems'''':3\r\n}''", span="530-537"];
m64_322 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatIsNotInEnum()", file="JsonSchemaNode.cs", label="string json = ''[1.1,2.2,3.0]''", span="539-539"];
m64_326 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatIsNotInEnum()", file="JsonSchemaNode.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="545-545"];
m64_323 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatIsNotInEnum()", file="JsonSchemaNode.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="541-541"];
m64_324 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatIsNotInEnum()", file="JsonSchemaNode.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="543-543"];
m64_325 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatIsNotInEnum()", file="JsonSchemaNode.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="544-544"];
m64_327 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatIsNotInEnum()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="547-547"];
m64_328 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatIsNotInEnum()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="548-548"];
m64_329 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatIsNotInEnum()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="550-550"];
m64_330 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatIsNotInEnum()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="551-551"];
m64_331 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatIsNotInEnum()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="553-553"];
m64_332 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatIsNotInEnum()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="554-554"];
m64_334 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatIsNotInEnum()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="557-557"];
m64_335 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatIsNotInEnum()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="558-558"];
m64_338 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatIsNotInEnum()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="562-562"];
m64_339 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatIsNotInEnum()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="563-563"];
m64_333 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatIsNotInEnum()", file="JsonSchemaNode.cs", label="Assert.AreEqual(null, validationEventArgs)", span="555-555"];
m64_336 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatIsNotInEnum()", file="JsonSchemaNode.cs", label="Assert.AreEqual(@''Value 3.0 is not defined in enum. Line 1, position 12.'', validationEventArgs.Message)", span="559-559"];
m64_337 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatIsNotInEnum()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''[2]'', validationEventArgs.Path)", span="560-560"];
m64_340 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatIsNotInEnum()", file="JsonSchemaNode.cs", label="Assert.IsNotNull(validationEventArgs)", span="565-565"];
m64_341 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatIsNotInEnum()", file="JsonSchemaNode.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatIsNotInEnum()", span="528-528"];
m64_685 [cluster="System.Collections.Generic.List<T>.Add(T)", file="JsonSchemaNode.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m64_500 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountGreaterThanMaximumItems()", file="JsonSchemaNode.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountGreaterThanMaximumItems()", span="828-828"];
m64_501 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountGreaterThanMaximumItems()", file="JsonSchemaNode.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''array'''',\r\n  ''''minItems'''':2,\r\n  ''''maxItems'''':3\r\n}''", span="830-834"];
m64_502 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountGreaterThanMaximumItems()", file="JsonSchemaNode.cs", label="string json = ''[null,null,null,null]''", span="836-836"];
m64_506 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountGreaterThanMaximumItems()", file="JsonSchemaNode.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="842-842"];
m64_503 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountGreaterThanMaximumItems()", file="JsonSchemaNode.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="838-838"];
m64_504 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountGreaterThanMaximumItems()", file="JsonSchemaNode.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="840-840"];
m64_505 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountGreaterThanMaximumItems()", file="JsonSchemaNode.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="841-841"];
m64_507 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountGreaterThanMaximumItems()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="844-844"];
m64_508 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountGreaterThanMaximumItems()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="845-845"];
m64_509 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountGreaterThanMaximumItems()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="847-847"];
m64_510 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountGreaterThanMaximumItems()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="848-848"];
m64_511 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountGreaterThanMaximumItems()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="849-849"];
m64_512 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountGreaterThanMaximumItems()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="850-850"];
m64_513 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountGreaterThanMaximumItems()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="851-851"];
m64_514 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountGreaterThanMaximumItems()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="852-852"];
m64_515 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountGreaterThanMaximumItems()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="853-853"];
m64_516 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountGreaterThanMaximumItems()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="854-854"];
m64_517 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountGreaterThanMaximumItems()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="856-856"];
m64_518 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountGreaterThanMaximumItems()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="857-857"];
m64_519 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountGreaterThanMaximumItems()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''Array item count 4 exceeds maximum count of 3. Line 1, position 21.'', validationEventArgs.Message)", span="858-858"];
m64_520 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountGreaterThanMaximumItems()", file="JsonSchemaNode.cs", label="Assert.IsNotNull(validationEventArgs)", span="860-860"];
m64_521 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountGreaterThanMaximumItems()", file="JsonSchemaNode.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountGreaterThanMaximumItems()", span="828-828"];
m64_439 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntValidForNumber()", file="JsonSchemaNode.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntValidForNumber()", span="726-726"];
m64_440 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntValidForNumber()", file="JsonSchemaNode.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''array'''',\r\n  ''''items'''':{\r\n    ''''type'''':''''number''''\r\n  }\r\n}''", span="728-733"];
m64_441 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntValidForNumber()", file="JsonSchemaNode.cs", label="string json = ''[1]''", span="735-735"];
m64_445 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntValidForNumber()", file="JsonSchemaNode.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="741-741"];
m64_442 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntValidForNumber()", file="JsonSchemaNode.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="737-737"];
m64_443 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntValidForNumber()", file="JsonSchemaNode.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="739-739"];
m64_444 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntValidForNumber()", file="JsonSchemaNode.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="740-740"];
m64_446 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntValidForNumber()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="743-743"];
m64_447 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntValidForNumber()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="744-744"];
m64_448 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntValidForNumber()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="746-746"];
m64_449 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntValidForNumber()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="747-747"];
m64_450 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntValidForNumber()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="749-749"];
m64_451 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntValidForNumber()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="750-750"];
m64_452 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntValidForNumber()", file="JsonSchemaNode.cs", label="Assert.IsNull(validationEventArgs)", span="752-752"];
m64_453 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntValidForNumber()", file="JsonSchemaNode.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntValidForNumber()", span="726-726"];
m64_9 [cluster="System.Collections.Generic.List<T>.List()", file="JsonSchemaNode.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m64_225 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerLessThanMaximumValue_BigInteger()", file="JsonSchemaNode.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerLessThanMaximumValue_BigInteger()", span="381-381"];
m64_226 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerLessThanMaximumValue_BigInteger()", file="JsonSchemaNode.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''integer'''',\r\n  ''''minimum'''':5\r\n}''", span="383-386"];
m64_227 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerLessThanMaximumValue_BigInteger()", file="JsonSchemaNode.cs", label="JValue v = new JValue(new BigInteger(1))", span="388-388"];
m64_229 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerLessThanMaximumValue_BigInteger()", file="JsonSchemaNode.cs", label="v.Validate(JsonSchema.Parse(schemaJson), (sender, args) => { validationEventArgs = args; })", span="392-392"];
m64_228 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerLessThanMaximumValue_BigInteger()", file="JsonSchemaNode.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="390-390"];
m64_230 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerLessThanMaximumValue_BigInteger()", file="JsonSchemaNode.cs", label="Assert.IsNotNull(validationEventArgs)", span="394-394"];
m64_231 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerLessThanMaximumValue_BigInteger()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''Integer 1 is less than minimum value of 5.'', validationEventArgs.Message)", span="395-395"];
m64_232 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerLessThanMaximumValue_BigInteger()", file="JsonSchemaNode.cs", label="Assert.AreEqual('''', validationEventArgs.Path)", span="396-396"];
m64_233 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerLessThanMaximumValue_BigInteger()", file="JsonSchemaNode.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerLessThanMaximumValue_BigInteger()", span="381-381"];
m64_193 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue()", file="JsonSchemaNode.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue()", span="332-332"];
m64_194 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue()", file="JsonSchemaNode.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''integer'''',\r\n  ''''maximum'''':5\r\n}''", span="334-337"];
m64_195 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue()", file="JsonSchemaNode.cs", label="string json = ''10''", span="339-339"];
m64_199 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue()", file="JsonSchemaNode.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="345-345"];
m64_196 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue()", file="JsonSchemaNode.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="341-341"];
m64_197 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue()", file="JsonSchemaNode.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="343-343"];
m64_198 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue()", file="JsonSchemaNode.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="344-344"];
m64_200 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="347-347"];
m64_201 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="348-348"];
m64_202 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''Integer 10 exceeds maximum value of 5. Line 1, position 2.'', validationEventArgs.Message)", span="349-349"];
m64_203 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue()", file="JsonSchemaNode.cs", label="Assert.AreEqual('''', validationEventArgs.Path)", span="350-350"];
m64_204 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue()", file="JsonSchemaNode.cs", label="Assert.IsNotNull(validationEventArgs)", span="352-352"];
m64_205 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue()", file="JsonSchemaNode.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue()", span="332-332"];
m64_913 [cluster="Unk.AreEquivalent", file="JsonSchemaNode.cs", label="Entry Unk.AreEquivalent", span=""];
m64_544 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.InvalidDataType()", file="JsonSchemaNode.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.InvalidDataType()", span="894-894"];
m64_545 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.InvalidDataType()", file="JsonSchemaNode.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''string'''',\r\n  ''''minItems'''':2,\r\n  ''''maxItems'''':3,\r\n  ''''items'''':{}\r\n}''", span="896-901"];
m64_546 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.InvalidDataType()", file="JsonSchemaNode.cs", label="string json = ''[null,null,null,null]''", span="903-903"];
m64_550 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.InvalidDataType()", file="JsonSchemaNode.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="909-909"];
m64_547 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.InvalidDataType()", file="JsonSchemaNode.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="905-905"];
m64_548 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.InvalidDataType()", file="JsonSchemaNode.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="907-907"];
m64_549 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.InvalidDataType()", file="JsonSchemaNode.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="908-908"];
m64_551 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.InvalidDataType()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="911-911"];
m64_552 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.InvalidDataType()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="912-912"];
m64_553 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.InvalidDataType()", file="JsonSchemaNode.cs", label="Assert.AreEqual(@''Invalid type. Expected String but got Array. Line 1, position 1.'', validationEventArgs.Message)", span="913-913"];
m64_554 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.InvalidDataType()", file="JsonSchemaNode.cs", label="Assert.IsNotNull(validationEventArgs)", span="915-915"];
m64_555 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.InvalidDataType()", file="JsonSchemaNode.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.InvalidDataType()", span="894-894"];
m64_133 [cluster="Unk.IsNotNull", file="JsonSchemaNode.cs", label="Entry Unk.IsNotNull", span=""];
m64_908 [cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.JsonSchemaGenerator()", file="JsonSchemaNode.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaGenerator.JsonSchemaGenerator()", span="50-50"];
m64_900 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="JsonSchemaNode.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m64_887 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DuplicateErrorsTest()", file="JsonSchemaNode.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.DuplicateErrorsTest()", span="1475-1475"];
m64_888 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DuplicateErrorsTest()", file="JsonSchemaNode.cs", label="string schema = @''{\r\n  ''''id'''':''''ErrorDemo.Database'''',\r\n  ''''properties'''':{\r\n    ''''ErrorDemoDatabase'''':{\r\n      ''''type'''':''''object'''',\r\n      ''''required'''':true,\r\n      ''''properties'''':{\r\n        ''''URL'''':{\r\n          ''''type'''':''''string'''',\r\n          ''''required'''':true\r\n        },\r\n        ''''Version'''':{\r\n          ''''type'''':''''string'''',\r\n          ''''required'''':true\r\n        },\r\n        ''''Date'''':{\r\n          ''''type'''':''''string'''',\r\n          ''''format'''':''''date-time'''',\r\n          ''''required'''':true\r\n        },\r\n        ''''MACLevels'''':{\r\n          ''''type'''':''''object'''',\r\n          ''''required'''':true,\r\n          ''''properties'''':{\r\n            ''''MACLevel'''':{\r\n              ''''type'''':''''array'''',\r\n              ''''required'''':true,\r\n              ''''items'''':[\r\n                {\r\n                  ''''required'''':true,\r\n                  ''''properties'''':{\r\n                    ''''IDName'''':{\r\n                      ''''type'''':''''string'''',\r\n                      ''''required'''':true\r\n                    },\r\n                    ''''Order'''':{\r\n                      ''''type'''':''''string'''',\r\n                      ''''required'''':true\r\n                    },\r\n                    ''''IDDesc'''':{\r\n                      ''''type'''':''''string'''',\r\n                      ''''required'''':true\r\n                    },\r\n                    ''''IsActive'''':{\r\n                      ''''type'''':''''string'''',\r\n                      ''''required'''':true\r\n                    }\r\n                  }\r\n                }\r\n              ]\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}''", span="1477-1533"];
m64_889 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DuplicateErrorsTest()", file="JsonSchemaNode.cs", label="string json = @''{\r\n  ''''ErrorDemoDatabase'''':{\r\n    ''''URL'''':''''localhost:3164'''',\r\n    ''''Version'''':''''1.0'''',\r\n    ''''Date'''':''''6.23.2010, 9:35:18.121'''',\r\n    ''''MACLevels'''':{\r\n      ''''MACLevel'''':[\r\n        {\r\n          ''''@IDName'''':''''Developer'''',\r\n          ''''Order'''':''''0'''',\r\n          ''''IDDesc'''':''''DeveloperDesc'''',\r\n          ''''IsActive'''':''''True''''\r\n        },\r\n        {\r\n          ''''IDName'''':''''Technician'''',\r\n          ''''Order'''':''''1'''',\r\n          ''''IDDesc'''':''''TechnicianDesc'''',\r\n          ''''IsActive'''':''''True''''\r\n        },\r\n        {\r\n          ''''IDName'''':''''Administrator'''',\r\n          ''''Order'''':''''2'''',\r\n          ''''IDDesc'''':''''AdministratorDesc'''',\r\n          ''''IsActive'''':''''True''''\r\n        },\r\n        {\r\n          ''''IDName'''':''''PowerUser'''',\r\n          ''''Order'''':''''3'''',\r\n          ''''IDDesc'''':''''PowerUserDesc'''',\r\n          ''''IsActive'''':''''True''''\r\n        },\r\n        {\r\n          ''''IDName'''':''''Operator'''',\r\n          ''''Order'''':''''4'''',\r\n          ''''IDDesc'''':''''OperatorDesc'''',\r\n          ''''IsActive'''':''''True''''\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}''", span="1535-1575"];
m64_893 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DuplicateErrorsTest()", file="JsonSchemaNode.cs", label="reader.Schema = JsonSchema.Parse(schema)", span="1581-1581"];
m64_890 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DuplicateErrorsTest()", file="JsonSchemaNode.cs", label="IList<ValidationEventArgs> validationEventArgs = new List<ValidationEventArgs>()", span="1577-1577"];
m64_891 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DuplicateErrorsTest()", file="JsonSchemaNode.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="1579-1579"];
m64_892 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DuplicateErrorsTest()", file="JsonSchemaNode.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs.Add(args); }", span="1580-1580"];
m64_895 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DuplicateErrorsTest()", file="JsonSchemaNode.cs", label="Assert.AreEqual(1, validationEventArgs.Count)", span="1587-1587"];
m64_894 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DuplicateErrorsTest()", file="JsonSchemaNode.cs", label="reader.Read()", span="1583-1583"];
m64_896 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DuplicateErrorsTest()", file="JsonSchemaNode.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.DuplicateErrorsTest()", span="1475-1475"];
m64_696 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JsonSchemaNode.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", span="1157-1157"];
m64_697 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JsonSchemaNode.cs", label="string json = ''{'firstproperty':'blah','secondproperty':'blah2','additional':'blah3','additional2':'blah4'}''", span="1159-1159"];
m64_698 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JsonSchemaNode.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="1161-1161"];
m64_699 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JsonSchemaNode.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="1163-1163"];
m64_700 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JsonSchemaNode.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="1164-1164"];
m64_701 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JsonSchemaNode.cs", label="reader.Schema = GetExtendedSchema()", span="1165-1165"];
m64_702 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="1167-1167"];
m64_703 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1168-1168"];
m64_704 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="1170-1170"];
m64_705 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1171-1171"];
m64_706 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''firstproperty'', reader.Value.ToString())", span="1172-1172"];
m64_708 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="1175-1175"];
m64_709 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1176-1176"];
m64_710 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''blah'', reader.Value.ToString())", span="1177-1177"];
m64_712 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="1180-1180"];
m64_713 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1181-1181"];
m64_714 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''secondproperty'', reader.Value.ToString())", span="1182-1182"];
m64_716 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="1185-1185"];
m64_717 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1186-1186"];
m64_718 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''blah2'', reader.Value.ToString())", span="1187-1187"];
m64_720 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="1190-1190"];
m64_721 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1191-1191"];
m64_722 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''additional'', reader.Value.ToString())", span="1192-1192"];
m64_724 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="1195-1195"];
m64_725 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1196-1196"];
m64_726 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''blah3'', reader.Value.ToString())", span="1197-1197"];
m64_727 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="1199-1199"];
m64_728 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1200-1200"];
m64_729 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''additional2'', reader.Value.ToString())", span="1201-1201"];
m64_731 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="1204-1204"];
m64_732 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1205-1205"];
m64_733 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''blah4'', reader.Value.ToString())", span="1206-1206"];
m64_734 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="1208-1208"];
m64_735 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1209-1209"];
m64_736 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JsonSchemaNode.cs", label="Assert.IsFalse(reader.Read())", span="1211-1211"];
m64_707 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(null, validationEventArgs)", span="1173-1173"];
m64_711 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(null, validationEventArgs)", span="1178-1178"];
m64_715 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(null, validationEventArgs)", span="1183-1183"];
m64_719 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(null, validationEventArgs)", span="1188-1188"];
m64_723 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''Property 'additional' has not been defined and the schema does not allow additional properties. Line 1, position 62.'', validationEventArgs.Message)", span="1193-1193"];
m64_730 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''Property 'additional2' has not been defined and the schema does not allow additional properties. Line 1, position 84.'', validationEventArgs.Message)", span="1202-1202"];
m64_737 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="JsonSchemaNode.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", span="1157-1157"];
m64_559 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDisallowed()", file="JsonSchemaNode.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDisallowed()", span="919-919"];
m64_560 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDisallowed()", file="JsonSchemaNode.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''array'''',\r\n  ''''items'''':{\r\n    ''''disallow'''':[''''number'''']\r\n  },\r\n  ''''maxItems'''':3\r\n}''", span="921-927"];
m64_561 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDisallowed()", file="JsonSchemaNode.cs", label="string json = ''['pie',1.1]''", span="929-929"];
m64_565 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDisallowed()", file="JsonSchemaNode.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="935-935"];
m64_562 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDisallowed()", file="JsonSchemaNode.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="931-931"];
m64_563 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDisallowed()", file="JsonSchemaNode.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="933-933"];
m64_564 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDisallowed()", file="JsonSchemaNode.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="934-934"];
m64_566 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDisallowed()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="937-937"];
m64_567 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDisallowed()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="938-938"];
m64_568 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDisallowed()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="940-940"];
m64_569 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDisallowed()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="941-941"];
m64_571 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDisallowed()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="944-944"];
m64_572 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDisallowed()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="945-945"];
m64_574 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDisallowed()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="948-948"];
m64_575 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDisallowed()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="949-949"];
m64_570 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDisallowed()", file="JsonSchemaNode.cs", label="Assert.AreEqual(null, validationEventArgs)", span="942-942"];
m64_573 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDisallowed()", file="JsonSchemaNode.cs", label="Assert.AreEqual(@''Type Float is disallowed. Line 1, position 10.'', validationEventArgs.Message)", span="946-946"];
m64_576 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDisallowed()", file="JsonSchemaNode.cs", label="Assert.IsNotNull(validationEventArgs)", span="951-951"];
m64_577 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDisallowed()", file="JsonSchemaNode.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDisallowed()", span="919-919"];
m64_68 [cluster="lambda expression", file="JsonSchemaNode.cs", label="validationEventArgs = args", span="87-87"];
m64_67 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Entry lambda expression", span="87-87"];
m64_69 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Exit lambda expression", span="87-87"];
m64_119 [cluster="lambda expression", file="JsonSchemaNode.cs", label="validationEventArgs = args", span="157-157"];
m64_118 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Entry lambda expression", span="157-157"];
m64_120 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Exit lambda expression", span="157-157"];
m64_135 [cluster="lambda expression", file="JsonSchemaNode.cs", label="validationEventArgs = args", span="232-232"];
m64_134 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Entry lambda expression", span="232-232"];
m64_136 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Exit lambda expression", span="232-232"];
m64_150 [cluster="lambda expression", file="JsonSchemaNode.cs", label="validationEventArgs = args", span="256-256"];
m64_149 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Entry lambda expression", span="256-256"];
m64_151 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Exit lambda expression", span="256-256"];
m64_175 [cluster="lambda expression", file="JsonSchemaNode.cs", label="validationEventArgs = args", span="283-283"];
m64_174 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Entry lambda expression", span="283-283"];
m64_176 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Exit lambda expression", span="283-283"];
m64_191 [cluster="lambda expression", file="JsonSchemaNode.cs", label="validationEventArgs = args", span="320-320"];
m64_190 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Entry lambda expression", span="320-320"];
m64_192 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Exit lambda expression", span="320-320"];
m64_207 [cluster="lambda expression", file="JsonSchemaNode.cs", label="validationEventArgs = args", span="344-344"];
m64_206 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Entry lambda expression", span="344-344"];
m64_208 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Exit lambda expression", span="344-344"];
m64_223 [cluster="lambda expression", file="JsonSchemaNode.cs", label="validationEventArgs = args", span="369-369"];
m64_222 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Entry lambda expression", span="369-369"];
m64_224 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Exit lambda expression", span="369-369"];
m64_237 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Entry lambda expression", span="392-392"];
m64_238 [cluster="lambda expression", file="JsonSchemaNode.cs", label="validationEventArgs = args", span="392-392"];
m64_239 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Exit lambda expression", span="392-392"];
m64_244 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Entry lambda expression", span="403-414"];
m64_245 [cluster="lambda expression", file="JsonSchemaNode.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''integer'''',\r\n  ''''maximum'''':5\r\n}''", span="405-408"];
m64_246 [cluster="lambda expression", file="JsonSchemaNode.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(''10'')))", span="410-410"];
m64_247 [cluster="lambda expression", file="JsonSchemaNode.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="411-411"];
m64_248 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="413-413"];
m64_249 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Exit lambda expression", span="403-414"];
m64_263 [cluster="lambda expression", file="JsonSchemaNode.cs", label="validationEventArgs = args", span="430-430"];
m64_262 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Entry lambda expression", span="430-430"];
m64_264 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Exit lambda expression", span="430-430"];
m64_288 [cluster="lambda expression", file="JsonSchemaNode.cs", label="validationEventArgs = args", span="457-457"];
m64_287 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Entry lambda expression", span="457-457"];
m64_289 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Exit lambda expression", span="457-457"];
m64_303 [cluster="lambda expression", file="JsonSchemaNode.cs", label="validationEventArgs = args", span="494-494"];
m64_302 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Entry lambda expression", span="494-494"];
m64_304 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Exit lambda expression", span="494-494"];
m64_318 [cluster="lambda expression", file="JsonSchemaNode.cs", label="validationEventArgs = args", span="517-517"];
m64_317 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Entry lambda expression", span="517-517"];
m64_319 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Exit lambda expression", span="517-517"];
m64_343 [cluster="lambda expression", file="JsonSchemaNode.cs", label="validationEventArgs = args", span="544-544"];
m64_342 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Entry lambda expression", span="544-544"];
m64_344 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Exit lambda expression", span="544-544"];
m64_368 [cluster="lambda expression", file="JsonSchemaNode.cs", label="validationEventArgs = args", span="584-584"];
m64_367 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Entry lambda expression", span="584-584"];
m64_369 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Exit lambda expression", span="584-584"];
m64_386 [cluster="lambda expression", file="JsonSchemaNode.cs", label="validationEventArgs = args", span="625-625"];
m64_385 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Entry lambda expression", span="625-625"];
m64_387 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Exit lambda expression", span="625-625"];
m64_406 [cluster="lambda expression", file="JsonSchemaNode.cs", label="validationEventArgs = args", span="655-655"];
m64_405 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Entry lambda expression", span="655-655"];
m64_407 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Exit lambda expression", span="655-655"];
m64_426 [cluster="lambda expression", file="JsonSchemaNode.cs", label="validationEventArgs = args", span="688-688"];
m64_425 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Entry lambda expression", span="688-688"];
m64_427 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Exit lambda expression", span="688-688"];
m64_436 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Entry lambda expression", span="719-719"];
m64_437 [cluster="lambda expression", file="JsonSchemaNode.cs", label="validationEventArgs = args", span="719-719"];
m64_438 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Exit lambda expression", span="719-719"];
m64_455 [cluster="lambda expression", file="JsonSchemaNode.cs", label="validationEventArgs = args", span="740-740"];
m64_454 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Entry lambda expression", span="740-740"];
m64_456 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Exit lambda expression", span="740-740"];
m64_475 [cluster="lambda expression", file="JsonSchemaNode.cs", label="validationEventArgs = args", span="772-772"];
m64_474 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Entry lambda expression", span="772-772"];
m64_476 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Exit lambda expression", span="772-772"];
m64_498 [cluster="lambda expression", file="JsonSchemaNode.cs", label="validationEventArgs = args", span="806-806"];
m64_497 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Entry lambda expression", span="806-806"];
m64_499 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Exit lambda expression", span="806-806"];
m64_523 [cluster="lambda expression", file="JsonSchemaNode.cs", label="validationEventArgs = args", span="841-841"];
m64_522 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Entry lambda expression", span="841-841"];
m64_524 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Exit lambda expression", span="841-841"];
m64_542 [cluster="lambda expression", file="JsonSchemaNode.cs", label="validationEventArgs = args", span="877-877"];
m64_541 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Entry lambda expression", span="877-877"];
m64_543 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Exit lambda expression", span="877-877"];
m64_557 [cluster="lambda expression", file="JsonSchemaNode.cs", label="validationEventArgs = args", span="908-908"];
m64_556 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Entry lambda expression", span="908-908"];
m64_558 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Exit lambda expression", span="908-908"];
m64_579 [cluster="lambda expression", file="JsonSchemaNode.cs", label="validationEventArgs = args", span="934-934"];
m64_578 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Entry lambda expression", span="934-934"];
m64_580 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Exit lambda expression", span="934-934"];
m64_604 [cluster="lambda expression", file="JsonSchemaNode.cs", label="validationEventArgs = args", span="973-973"];
m64_603 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Entry lambda expression", span="973-973"];
m64_605 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Exit lambda expression", span="973-973"];
m64_627 [cluster="lambda expression", file="JsonSchemaNode.cs", label="validationEventArgs = args", span="1015-1015"];
m64_626 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Entry lambda expression", span="1015-1015"];
m64_628 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Exit lambda expression", span="1015-1015"];
m64_664 [cluster="lambda expression", file="JsonSchemaNode.cs", label="validationEventArgs = args", span="1054-1054"];
m64_663 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Entry lambda expression", span="1054-1054"];
m64_665 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Exit lambda expression", span="1054-1054"];
m64_683 [cluster="lambda expression", file="JsonSchemaNode.cs", label="errors.Add(validationEventArgs.Message)", span="1114-1114"];
m64_682 [cluster="lambda expression", file="JsonSchemaNode.cs", label="validationEventArgs = args", span="1113-1113"];
m64_681 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Entry lambda expression", span="1111-1115"];
m64_684 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Exit lambda expression", span="1111-1115"];
m64_739 [cluster="lambda expression", file="JsonSchemaNode.cs", label="validationEventArgs = args", span="1164-1164"];
m64_738 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Entry lambda expression", span="1164-1164"];
m64_740 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Exit lambda expression", span="1164-1164"];
m64_755 [cluster="lambda expression", file="JsonSchemaNode.cs", label="errors.Add(args.Message)", span="1222-1222"];
m64_754 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Entry lambda expression", span="1222-1222"];
m64_756 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Exit lambda expression", span="1222-1222"];
m64_780 [cluster="lambda expression", file="JsonSchemaNode.cs", label="validationEventArgs = args", span="1249-1249"];
m64_779 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Entry lambda expression", span="1249-1249"];
m64_781 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Exit lambda expression", span="1249-1249"];
m64_817 [cluster="lambda expression", file="JsonSchemaNode.cs", label="validationEventArgs = args", span="1295-1295"];
m64_816 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Entry lambda expression", span="1295-1295"];
m64_818 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Exit lambda expression", span="1295-1295"];
m64_885 [cluster="lambda expression", file="JsonSchemaNode.cs", label="errors.Add(validationEventArgs.Path + '' - '' + validationEventArgs.Message)", span="1406-1406"];
m64_884 [cluster="lambda expression", file="JsonSchemaNode.cs", label="validationEventArgs = args", span="1405-1405"];
m64_883 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Entry lambda expression", span="1403-1407"];
m64_886 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Exit lambda expression", span="1403-1407"];
m64_898 [cluster="lambda expression", file="JsonSchemaNode.cs", label="validationEventArgs.Add(args)", span="1580-1580"];
m64_897 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Entry lambda expression", span="1580-1580"];
m64_899 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Exit lambda expression", span="1580-1580"];
m64_925 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Entry lambda expression", span="1623-1633"];
m64_926 [cluster="lambda expression", file="JsonSchemaNode.cs", label="JsonSchema s = new JsonSchemaGenerator().Generate(typeof(int))", span="1625-1625"];
m64_927 [cluster="lambda expression", file="JsonSchemaNode.cs", label="s.Maximum = 2", span="1626-1626"];
m64_928 [cluster="lambda expression", file="JsonSchemaNode.cs", label="JsonReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(@''5'')))\r\n                {\r\n                    Schema = s\r\n                }", span="1628-1631"];
m64_929 [cluster="lambda expression", file="JsonSchemaNode.cs", label="reader.ReadAsInt32()", span="1632-1632"];
m64_930 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Exit lambda expression", span="1623-1633"];
m64_941 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Entry lambda expression", span="1653-1663"];
m64_942 [cluster="lambda expression", file="JsonSchemaNode.cs", label="JsonSchema s = new JsonSchemaGenerator().Generate(typeof(decimal))", span="1655-1655"];
m64_943 [cluster="lambda expression", file="JsonSchemaNode.cs", label="s.DivisibleBy = 1", span="1656-1656"];
m64_944 [cluster="lambda expression", file="JsonSchemaNode.cs", label="JsonReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(@''5.5'')))\r\n                {\r\n                    Schema = s\r\n                }", span="1658-1661"];
m64_945 [cluster="lambda expression", file="JsonSchemaNode.cs", label="reader.ReadAsDecimal()", span="1662-1662"];
m64_946 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Exit lambda expression", span="1653-1663"];
m64_980 [cluster="lambda expression", file="JsonSchemaNode.cs", label="validationEventArgs = args", span="1695-1695"];
m64_979 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Entry lambda expression", span="1695-1695"];
m64_981 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Exit lambda expression", span="1695-1695"];
m64_1002 [cluster="lambda expression", file="JsonSchemaNode.cs", label="validationEventArgs = args", span="1731-1731"];
m64_1001 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Entry lambda expression", span="1731-1731"];
m64_1003 [cluster="lambda expression", file="JsonSchemaNode.cs", label="Exit lambda expression", span="1731-1731"];
m64_457 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NullNotInEnum()", file="JsonSchemaNode.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.NullNotInEnum()", span="756-756"];
m64_458 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NullNotInEnum()", file="JsonSchemaNode.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''array'''',\r\n  ''''items'''':{\r\n    ''''type'''':''''null'''',\r\n    ''''enum'''':[]\r\n  },\r\n  ''''maxItems'''':3\r\n}''", span="758-765"];
m64_459 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NullNotInEnum()", file="JsonSchemaNode.cs", label="string json = ''[null]''", span="767-767"];
m64_463 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NullNotInEnum()", file="JsonSchemaNode.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="773-773"];
m64_460 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NullNotInEnum()", file="JsonSchemaNode.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="769-769"];
m64_461 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NullNotInEnum()", file="JsonSchemaNode.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="771-771"];
m64_462 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NullNotInEnum()", file="JsonSchemaNode.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="772-772"];
m64_464 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NullNotInEnum()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="775-775"];
m64_465 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NullNotInEnum()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="776-776"];
m64_466 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NullNotInEnum()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="778-778"];
m64_467 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NullNotInEnum()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="779-779"];
m64_470 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NullNotInEnum()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="783-783"];
m64_471 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NullNotInEnum()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="784-784"];
m64_468 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NullNotInEnum()", file="JsonSchemaNode.cs", label="Assert.AreEqual(@''Value null is not defined in enum. Line 1, position 5.'', validationEventArgs.Message)", span="780-780"];
m64_469 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NullNotInEnum()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''[0]'', validationEventArgs.Path)", span="781-781"];
m64_472 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NullNotInEnum()", file="JsonSchemaNode.cs", label="Assert.IsNotNull(validationEventArgs)", span="786-786"];
m64_473 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NullNotInEnum()", file="JsonSchemaNode.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.NullNotInEnum()", span="756-756"];
m64_901 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsBytes()", file="JsonSchemaNode.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsBytes()", span="1591-1591"];
m64_902 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsBytes()", file="JsonSchemaNode.cs", label="JsonSchema s = new JsonSchemaGenerator().Generate(typeof(byte[]))", span="1593-1593"];
m64_903 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsBytes()", file="JsonSchemaNode.cs", label="byte[] data = Encoding.UTF8.GetBytes(''Hello world'')", span="1595-1595"];
m64_904 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsBytes()", file="JsonSchemaNode.cs", label="JsonReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(@'''''''' + Convert.ToBase64String(data) + @'''''''')))\r\n            {\r\n                Schema = s\r\n            }", span="1597-1600"];
m64_906 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsBytes()", file="JsonSchemaNode.cs", label="CollectionAssert.AreEquivalent(data, bytes)", span="1603-1603"];
m64_905 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsBytes()", file="JsonSchemaNode.cs", label="byte[] bytes = reader.ReadAsBytes()", span="1601-1601"];
m64_907 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsBytes()", file="JsonSchemaNode.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsBytes()", span="1591-1591"];
m64_7 [cluster="System.Collections.ObjectModel.ReadOnlyCollection<T>.ReadOnlyCollection(System.Collections.Generic.IList<T>)", file="JsonSchemaNode.cs", label="Entry System.Collections.ObjectModel.ReadOnlyCollection<T>.ReadOnlyCollection(System.Collections.Generic.IList<T>)", span="0-0"];
m64_666 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsStringGreaterThanMaximumLength()", file="JsonSchemaNode.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsStringGreaterThanMaximumLength()", span="1094-1094"];
m64_667 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsStringGreaterThanMaximumLength()", file="JsonSchemaNode.cs", label="string schemaJson = @''{\r\n  ''''extends'''':{\r\n    ''''type'''':''''string'''',\r\n    ''''minLength'''':5,\r\n    ''''maxLength'''':10\r\n  },\r\n  ''''maxLength'''':9\r\n}''", span="1096-1103"];
m64_668 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsStringGreaterThanMaximumLength()", file="JsonSchemaNode.cs", label="List<string> errors = new List<string>()", span="1105-1105"];
m64_673 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsStringGreaterThanMaximumLength()", file="JsonSchemaNode.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="1116-1116"];
m64_669 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsStringGreaterThanMaximumLength()", file="JsonSchemaNode.cs", label="string json = '''The quick brown fox jumps over the lazy dog.'''", span="1106-1106"];
m64_672 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsStringGreaterThanMaximumLength()", file="JsonSchemaNode.cs", label="reader.ValidationEventHandler += (sender, args) =>\r\n            {\r\n                validationEventArgs = args;\r\n                errors.Add(validationEventArgs.Message);\r\n            }", span="1111-1115"];
m64_676 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsStringGreaterThanMaximumLength()", file="JsonSchemaNode.cs", label="Assert.AreEqual(1, errors.Count)", span="1120-1120"];
m64_677 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsStringGreaterThanMaximumLength()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''String 'The quick brown fox jumps over the lazy dog.' exceeds maximum length of 9. Line 1, position 46.'', errors[0])", span="1121-1121"];
m64_670 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsStringGreaterThanMaximumLength()", file="JsonSchemaNode.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="1108-1108"];
m64_671 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsStringGreaterThanMaximumLength()", file="JsonSchemaNode.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="1110-1110"];
m64_674 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsStringGreaterThanMaximumLength()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="1118-1118"];
m64_675 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsStringGreaterThanMaximumLength()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1119-1119"];
m64_678 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsStringGreaterThanMaximumLength()", file="JsonSchemaNode.cs", label="Assert.IsNotNull(validationEventArgs)", span="1123-1123"];
m64_679 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsStringGreaterThanMaximumLength()", file="JsonSchemaNode.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsStringGreaterThanMaximumLength()", span="1094-1094"];
m64_680 [cluster="System.Collections.Generic.List<T>.List()", file="JsonSchemaNode.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m64_937 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimal()", file="JsonSchemaNode.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsDecimal()", span="732-732"];
m64_235 [cluster="BigInteger.cstr", file="JsonSchemaNode.cs", label="Entry BigInteger.cstr", span=""];
m64_782 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="JsonSchemaNode.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", span="1274-1274"];
m64_783 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="JsonSchemaNode.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''object'''',\r\n  ''''patternProperties'''': {\r\n     ''''hi'''': {''''type'''':''''string''''},\r\n     ''''ho'''': {''''type'''':''''string''''}\r\n  },\r\n  ''''additionalProperties'''': false\r\n}''", span="1276-1283"];
m64_784 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="JsonSchemaNode.cs", label="string json = @''{\r\n  ''''hi'''': ''''A string!'''',\r\n  ''''hide'''': ''''A string!'''',\r\n  ''''ho'''': 1,\r\n  ''''hey'''': ''''A string!''''\r\n}''", span="1285-1290"];
m64_788 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="JsonSchemaNode.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="1296-1296"];
m64_785 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="JsonSchemaNode.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="1292-1292"];
m64_786 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="JsonSchemaNode.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="1294-1294"];
m64_787 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="JsonSchemaNode.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="1295-1295"];
m64_789 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="1298-1298"];
m64_790 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1299-1299"];
m64_791 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="1301-1301"];
m64_792 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1302-1302"];
m64_794 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="1305-1305"];
m64_795 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1306-1306"];
m64_796 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="1308-1308"];
m64_797 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1309-1309"];
m64_799 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="1312-1312"];
m64_800 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1313-1313"];
m64_801 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="1315-1315"];
m64_802 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1316-1316"];
m64_804 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="1319-1319"];
m64_805 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1320-1320"];
m64_807 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="1323-1323"];
m64_808 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1324-1324"];
m64_810 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="1327-1327"];
m64_811 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1328-1328"];
m64_812 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="1330-1330"];
m64_813 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1331-1331"];
m64_814 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="JsonSchemaNode.cs", label="Assert.IsFalse(reader.Read())", span="1333-1333"];
m64_793 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(null, validationEventArgs)", span="1303-1303"];
m64_798 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(null, validationEventArgs)", span="1310-1310"];
m64_803 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(null, validationEventArgs)", span="1317-1317"];
m64_806 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''Invalid type. Expected String but got Integer. Line 4, position 9.'', validationEventArgs.Message)", span="1321-1321"];
m64_809 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''Property 'hey' has not been defined and the schema does not allow additional properties. Line 5, position 8.'', validationEventArgs.Message)", span="1325-1325"];
m64_815 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="JsonSchemaNode.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", span="1274-1274"];
m64_236 [cluster="Newtonsoft.Json.Linq.JToken.Validate(Newtonsoft.Json.Schema.JsonSchema, Newtonsoft.Json.Schema.ValidationEventHandler)", file="JsonSchemaNode.cs", label="Entry Newtonsoft.Json.Linq.JToken.Validate(Newtonsoft.Json.Schema.JsonSchema, Newtonsoft.Json.Schema.ValidationEventHandler)", span="117-117"];
m64_958 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArray()", file="JsonSchemaNode.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArray()", span="1680-1680"];
m64_959 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArray()", file="JsonSchemaNode.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''array'''',\r\n  ''''items'''':{\r\n    ''''type'''':''''integer''''\r\n  },\r\n  ''''maxItems'''':1\r\n}''", span="1682-1688"];
m64_960 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArray()", file="JsonSchemaNode.cs", label="string json = ''[1,2]''", span="1690-1690"];
m64_964 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArray()", file="JsonSchemaNode.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="1696-1696"];
m64_961 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArray()", file="JsonSchemaNode.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="1692-1692"];
m64_962 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArray()", file="JsonSchemaNode.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="1694-1694"];
m64_963 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArray()", file="JsonSchemaNode.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="1695-1695"];
m64_965 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArray()", file="JsonSchemaNode.cs", label="reader.Read()", span="1698-1698"];
m64_966 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArray()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="1699-1699"];
m64_967 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArray()", file="JsonSchemaNode.cs", label="reader.ReadAsInt32()", span="1701-1701"];
m64_968 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArray()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1702-1702"];
m64_970 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArray()", file="JsonSchemaNode.cs", label="reader.ReadAsInt32()", span="1705-1705"];
m64_971 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArray()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1706-1706"];
m64_973 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArray()", file="JsonSchemaNode.cs", label="reader.ReadAsInt32()", span="1709-1709"];
m64_974 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArray()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="1710-1710"];
m64_969 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArray()", file="JsonSchemaNode.cs", label="Assert.AreEqual(null, validationEventArgs)", span="1703-1703"];
m64_972 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArray()", file="JsonSchemaNode.cs", label="Assert.AreEqual(null, validationEventArgs)", span="1707-1707"];
m64_975 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArray()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''Array item count 2 exceeds maximum count of 1. Line 1, position 5.'', validationEventArgs.Message)", span="1711-1711"];
m64_976 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArray()", file="JsonSchemaNode.cs", label="Assert.AreEqual('''', validationEventArgs.Path)", span="1712-1712"];
m64_977 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArray()", file="JsonSchemaNode.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArray()", span="1680-1680"];
m64_912 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonSchemaNode.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsBytes()", span="510-510"];
m64_137 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringGreaterThanMaximumLength()", file="JsonSchemaNode.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringGreaterThanMaximumLength()", span="243-243"];
m64_138 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringGreaterThanMaximumLength()", file="JsonSchemaNode.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''string'''',\r\n  ''''minLength'''':5,\r\n  ''''maxLength'''':10\r\n}''", span="245-249"];
m64_139 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringGreaterThanMaximumLength()", file="JsonSchemaNode.cs", label="string json = '''The quick brown fox jumps over the lazy dog.'''", span="251-251"];
m64_143 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringGreaterThanMaximumLength()", file="JsonSchemaNode.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="257-257"];
m64_140 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringGreaterThanMaximumLength()", file="JsonSchemaNode.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="253-253"];
m64_141 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringGreaterThanMaximumLength()", file="JsonSchemaNode.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="255-255"];
m64_142 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringGreaterThanMaximumLength()", file="JsonSchemaNode.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="256-256"];
m64_144 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringGreaterThanMaximumLength()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="259-259"];
m64_145 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringGreaterThanMaximumLength()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="260-260"];
m64_146 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringGreaterThanMaximumLength()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''String 'The quick brown fox jumps over the lazy dog.' exceeds maximum length of 10. Line 1, position 46.'', validationEventArgs.Message)", span="261-261"];
m64_147 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringGreaterThanMaximumLength()", file="JsonSchemaNode.cs", label="Assert.IsNotNull(validationEventArgs)", span="263-263"];
m64_148 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringGreaterThanMaximumLength()", file="JsonSchemaNode.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringGreaterThanMaximumLength()", span="243-243"];
m64_757 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NoAdditionalItems()", file="JsonSchemaNode.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.NoAdditionalItems()", span="1236-1236"];
m64_758 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NoAdditionalItems()", file="JsonSchemaNode.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''array'''',\r\n  ''''items'''': [{''''type'''':''''string''''},{''''type'''':''''integer''''}],\r\n  ''''additionalItems'''': false\r\n}''", span="1238-1242"];
m64_759 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NoAdditionalItems()", file="JsonSchemaNode.cs", label="string json = @''[1, 'a', null]''", span="1244-1244"];
m64_763 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NoAdditionalItems()", file="JsonSchemaNode.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="1250-1250"];
m64_760 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NoAdditionalItems()", file="JsonSchemaNode.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="1246-1246"];
m64_761 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NoAdditionalItems()", file="JsonSchemaNode.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="1248-1248"];
m64_762 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NoAdditionalItems()", file="JsonSchemaNode.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="1249-1249"];
m64_764 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NoAdditionalItems()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="1252-1252"];
m64_765 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NoAdditionalItems()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="1253-1253"];
m64_766 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NoAdditionalItems()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="1255-1255"];
m64_767 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NoAdditionalItems()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1256-1256"];
m64_769 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NoAdditionalItems()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="1259-1259"];
m64_770 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NoAdditionalItems()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1260-1260"];
m64_772 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NoAdditionalItems()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="1263-1263"];
m64_773 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NoAdditionalItems()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="1264-1264"];
m64_775 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NoAdditionalItems()", file="JsonSchemaNode.cs", label="Assert.IsTrue(reader.Read())", span="1267-1267"];
m64_776 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NoAdditionalItems()", file="JsonSchemaNode.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="1268-1268"];
m64_777 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NoAdditionalItems()", file="JsonSchemaNode.cs", label="Assert.IsFalse(reader.Read())", span="1270-1270"];
m64_768 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NoAdditionalItems()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''Invalid type. Expected String but got Integer. Line 1, position 2.'', validationEventArgs.Message)", span="1257-1257"];
m64_771 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NoAdditionalItems()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''Invalid type. Expected Integer but got String. Line 1, position 7.'', validationEventArgs.Message)", span="1261-1261"];
m64_774 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NoAdditionalItems()", file="JsonSchemaNode.cs", label="Assert.AreEqual(''Index 3 has not been defined and the schema does not allow additional items. Line 1, position 13.'', validationEventArgs.Message)", span="1265-1265"];
m64_778 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NoAdditionalItems()", file="JsonSchemaNode.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.NoAdditionalItems()", span="1236-1236"];
m64_909 [cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.Generate(System.Type)", file="JsonSchemaNode.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaGenerator.Generate(System.Type)", span="130-130"];
m64_910 [cluster="System.Text.Encoding.GetBytes(string)", file="JsonSchemaNode.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m64_924 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="JsonSchemaNode.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="350-350"];
m64_1004 [file="JsonSchemaNode.cs", label=errors, span=""];
m64_1005 [file="JsonSchemaNode.cs", label="Newtonsoft.Json.Tests.JsonValidatingReaderTests", span=""];
m64_1006 [file="JsonSchemaNode.cs", label=errors, span=""];
m64_1007 [file="JsonSchemaNode.cs", label=errors, span=""];
m64_1008 [file="JsonSchemaNode.cs", label=validationEventArgs, span=""];
m65_0 [cluster="Newtonsoft.Json.Schema.JsonSchemaResolver.JsonSchemaResolver()", file="JsonSchemaResolver.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaResolver.JsonSchemaResolver()", span="56-56"];
m65_1 [cluster="Newtonsoft.Json.Schema.JsonSchemaResolver.JsonSchemaResolver()", file="JsonSchemaResolver.cs", label="LoadedSchemas = new List<JsonSchema>()", span="58-58"];
m65_2 [cluster="Newtonsoft.Json.Schema.JsonSchemaResolver.JsonSchemaResolver()", file="JsonSchemaResolver.cs", label="Exit Newtonsoft.Json.Schema.JsonSchemaResolver.JsonSchemaResolver()", span="56-56"];
m65_10 [cluster="Unk.SingleOrDefault", file="JsonSchemaResolver.cs", label="Entry Unk.SingleOrDefault", span=""];
m65_15 [cluster="lambda expression", file="JsonSchemaResolver.cs", label="Entry lambda expression", span="72-72"];
m65_12 [cluster="lambda expression", file="JsonSchemaResolver.cs", label="string.Equals(s.Id, reference, StringComparison.Ordinal)", span="68-68"];
m65_16 [cluster="lambda expression", file="JsonSchemaResolver.cs", label="string.Equals(s.Location, reference, StringComparison.Ordinal)", span="72-72"];
m65_11 [cluster="lambda expression", file="JsonSchemaResolver.cs", label="Entry lambda expression", span="68-68"];
m65_13 [cluster="lambda expression", file="JsonSchemaResolver.cs", label="Exit lambda expression", span="68-68"];
m65_17 [cluster="lambda expression", file="JsonSchemaResolver.cs", label="Exit lambda expression", span="72-72"];
m65_14 [cluster="string.Equals(string, string, System.StringComparison)", file="JsonSchemaResolver.cs", label="Entry string.Equals(string, string, System.StringComparison)", span="0-0"];
m65_4 [cluster="Newtonsoft.Json.Schema.JsonSchemaResolver.GetSchema(string)", file="JsonSchemaResolver.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaResolver.GetSchema(string)", span="66-66"];
m65_5 [cluster="Newtonsoft.Json.Schema.JsonSchemaResolver.GetSchema(string)", file="JsonSchemaResolver.cs", label="JsonSchema schema = LoadedSchemas.SingleOrDefault(s => string.Equals(s.Id, reference, StringComparison.Ordinal))", span="68-68"];
m65_7 [cluster="Newtonsoft.Json.Schema.JsonSchemaResolver.GetSchema(string)", file="JsonSchemaResolver.cs", label="schema = LoadedSchemas.SingleOrDefault(s => string.Equals(s.Location, reference, StringComparison.Ordinal))", span="72-72"];
m65_6 [cluster="Newtonsoft.Json.Schema.JsonSchemaResolver.GetSchema(string)", file="JsonSchemaResolver.cs", label="schema == null", span="70-70"];
m65_8 [cluster="Newtonsoft.Json.Schema.JsonSchemaResolver.GetSchema(string)", file="JsonSchemaResolver.cs", label="return schema;", span="75-75"];
m65_9 [cluster="Newtonsoft.Json.Schema.JsonSchemaResolver.GetSchema(string)", file="JsonSchemaResolver.cs", label="Exit Newtonsoft.Json.Schema.JsonSchemaResolver.GetSchema(string)", span="66-66"];
m65_3 [cluster="System.Collections.Generic.List<T>.List()", file="JsonSchemaResolver.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m65_18 [file="JsonSchemaResolver.cs", label="Newtonsoft.Json.Schema.JsonSchemaResolver", span=""];
m65_19 [file="JsonSchemaResolver.cs", label=string, span=""];
m66_20 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchema(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchema(Newtonsoft.Json.Schema.JsonSchema)", span="67-67"];
m66_21 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchema(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="ValidationUtils.ArgumentNotNull(schema, nameof(schema))", span="69-69"];
m66_22 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchema(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="!_resolver.LoadedSchemas.Contains(schema)", span="71-71"];
m66_23 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchema(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="_resolver.LoadedSchemas.Add(schema)", span="73-73"];
m66_25 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchema(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="WritePropertyIfNotNull(_writer, JsonSchemaConstants.IdPropertyName, schema.Id)", span="77-77"];
m66_26 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchema(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="WritePropertyIfNotNull(_writer, JsonSchemaConstants.TitlePropertyName, schema.Title)", span="78-78"];
m66_27 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchema(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="WritePropertyIfNotNull(_writer, JsonSchemaConstants.DescriptionPropertyName, schema.Description)", span="79-79"];
m66_28 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchema(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="WritePropertyIfNotNull(_writer, JsonSchemaConstants.RequiredPropertyName, schema.Required)", span="80-80"];
m66_29 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchema(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="WritePropertyIfNotNull(_writer, JsonSchemaConstants.ReadOnlyPropertyName, schema.ReadOnly)", span="81-81"];
m66_30 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchema(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="WritePropertyIfNotNull(_writer, JsonSchemaConstants.HiddenPropertyName, schema.Hidden)", span="82-82"];
m66_31 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchema(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="WritePropertyIfNotNull(_writer, JsonSchemaConstants.TransientPropertyName, schema.Transient)", span="83-83"];
m66_32 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchema(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="schema.Type != null", span="84-84"];
m66_33 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchema(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="WriteType(JsonSchemaConstants.TypePropertyName, _writer, schema.Type.GetValueOrDefault())", span="86-86"];
m66_34 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchema(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="!schema.AllowAdditionalProperties", span="88-88"];
m66_36 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchema(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="_writer.WriteValue(schema.AllowAdditionalProperties)", span="91-91"];
m66_37 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchema(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="schema.AdditionalProperties != null", span="95-95"];
m66_39 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchema(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="ReferenceOrWriteSchema(schema.AdditionalProperties)", span="98-98"];
m66_40 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchema(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="!schema.AllowAdditionalItems", span="101-101"];
m66_42 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchema(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="_writer.WriteValue(schema.AllowAdditionalItems)", span="104-104"];
m66_43 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchema(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="schema.AdditionalItems != null", span="108-108"];
m66_45 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchema(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="ReferenceOrWriteSchema(schema.AdditionalItems)", span="111-111"];
m66_46 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchema(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="WriteSchemaDictionaryIfNotNull(_writer, JsonSchemaConstants.PropertiesPropertyName, schema.Properties)", span="114-114"];
m66_47 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchema(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="WriteSchemaDictionaryIfNotNull(_writer, JsonSchemaConstants.PatternPropertiesPropertyName, schema.PatternProperties)", span="115-115"];
m66_48 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchema(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="WriteItems(schema)", span="116-116"];
m66_49 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchema(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="WritePropertyIfNotNull(_writer, JsonSchemaConstants.MinimumPropertyName, schema.Minimum)", span="117-117"];
m66_50 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchema(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="WritePropertyIfNotNull(_writer, JsonSchemaConstants.MaximumPropertyName, schema.Maximum)", span="118-118"];
m66_51 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchema(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="WritePropertyIfNotNull(_writer, JsonSchemaConstants.ExclusiveMinimumPropertyName, schema.ExclusiveMinimum)", span="119-119"];
m66_52 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchema(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="WritePropertyIfNotNull(_writer, JsonSchemaConstants.ExclusiveMaximumPropertyName, schema.ExclusiveMaximum)", span="120-120"];
m66_53 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchema(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="WritePropertyIfNotNull(_writer, JsonSchemaConstants.MinimumLengthPropertyName, schema.MinimumLength)", span="121-121"];
m66_54 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchema(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="WritePropertyIfNotNull(_writer, JsonSchemaConstants.MaximumLengthPropertyName, schema.MaximumLength)", span="122-122"];
m66_55 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchema(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="WritePropertyIfNotNull(_writer, JsonSchemaConstants.MinimumItemsPropertyName, schema.MinimumItems)", span="123-123"];
m66_56 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchema(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="WritePropertyIfNotNull(_writer, JsonSchemaConstants.MaximumItemsPropertyName, schema.MaximumItems)", span="124-124"];
m66_57 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchema(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="WritePropertyIfNotNull(_writer, JsonSchemaConstants.DivisibleByPropertyName, schema.DivisibleBy)", span="125-125"];
m66_58 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchema(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="WritePropertyIfNotNull(_writer, JsonSchemaConstants.FormatPropertyName, schema.Format)", span="126-126"];
m66_59 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchema(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="WritePropertyIfNotNull(_writer, JsonSchemaConstants.PatternPropertyName, schema.Pattern)", span="127-127"];
m66_60 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchema(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="schema.Enum != null", span="128-128"];
m66_63 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchema(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="schema.Enum", span="132-132"];
m66_66 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchema(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="schema.Default != null", span="138-138"];
m66_68 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchema(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="schema.Default.WriteTo(_writer)", span="141-141"];
m66_69 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchema(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="schema.Disallow != null", span="143-143"];
m66_70 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchema(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="WriteType(JsonSchemaConstants.DisallowPropertyName, _writer, schema.Disallow.GetValueOrDefault())", span="145-145"];
m66_71 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchema(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="schema.Extends != null && schema.Extends.Count > 0", span="147-147"];
m66_73 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchema(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="schema.Extends.Count == 1", span="150-150"];
m66_74 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchema(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="ReferenceOrWriteSchema(schema.Extends[0])", span="152-152"];
m66_76 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchema(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="schema.Extends", span="157-157"];
m66_24 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchema(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="_writer.WriteStartObject()", span="76-76"];
m66_35 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchema(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="_writer.WritePropertyName(JsonSchemaConstants.AdditionalPropertiesPropertyName)", span="90-90"];
m66_38 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchema(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="_writer.WritePropertyName(JsonSchemaConstants.AdditionalPropertiesPropertyName)", span="97-97"];
m66_41 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchema(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="_writer.WritePropertyName(JsonSchemaConstants.AdditionalItemsPropertyName)", span="103-103"];
m66_44 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchema(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="_writer.WritePropertyName(JsonSchemaConstants.AdditionalItemsPropertyName)", span="110-110"];
m66_61 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchema(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="_writer.WritePropertyName(JsonSchemaConstants.EnumPropertyName)", span="130-130"];
m66_62 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchema(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="_writer.WriteStartArray()", span="131-131"];
m66_64 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchema(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="token.WriteTo(_writer)", span="134-134"];
m66_65 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchema(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="_writer.WriteEndArray()", span="136-136"];
m66_67 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchema(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="_writer.WritePropertyName(JsonSchemaConstants.DefaultPropertyName)", span="140-140"];
m66_72 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchema(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="_writer.WritePropertyName(JsonSchemaConstants.ExtendsPropertyName)", span="149-149"];
m66_79 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchema(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="_writer.WriteEndObject()", span="164-164"];
m66_75 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchema(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="_writer.WriteStartArray()", span="156-156"];
m66_77 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchema(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="ReferenceOrWriteSchema(jsonSchema)", span="159-159"];
m66_78 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchema(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="_writer.WriteEndArray()", span="161-161"];
m66_80 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchema(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="Exit Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchema(Newtonsoft.Json.Schema.JsonSchema)", span="67-67"];
m66_83 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WritePropertyIfNotNull(Newtonsoft.Json.JsonWriter, string, object)", file="JsonSchemaWriter.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaWriter.WritePropertyIfNotNull(Newtonsoft.Json.JsonWriter, string, object)", span="248-248"];
m66_139 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WritePropertyIfNotNull(Newtonsoft.Json.JsonWriter, string, object)", file="JsonSchemaWriter.cs", label="value != null", span="250-250"];
m66_140 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WritePropertyIfNotNull(Newtonsoft.Json.JsonWriter, string, object)", file="JsonSchemaWriter.cs", label="writer.WritePropertyName(propertyName)", span="252-252"];
m66_141 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WritePropertyIfNotNull(Newtonsoft.Json.JsonWriter, string, object)", file="JsonSchemaWriter.cs", label="writer.WriteValue(value)", span="253-253"];
m66_142 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WritePropertyIfNotNull(Newtonsoft.Json.JsonWriter, string, object)", file="JsonSchemaWriter.cs", label="Exit Newtonsoft.Json.Schema.JsonSchemaWriter.WritePropertyIfNotNull(Newtonsoft.Json.JsonWriter, string, object)", span="248-248"];
m66_81 [cluster="System.Collections.Generic.ICollection<T>.Contains(T)", file="JsonSchemaWriter.cs", label="Entry System.Collections.Generic.ICollection<T>.Contains(T)", span="0-0"];
m66_85 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteType(string, Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Schema.JsonSchemaType)", file="JsonSchemaWriter.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaWriter.WriteType(string, Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Schema.JsonSchemaType)", span="216-216"];
m66_115 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteType(string, Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Schema.JsonSchemaType)", file="JsonSchemaWriter.cs", label="Enum.IsDefined(typeof(JsonSchemaType), type)", span="218-218"];
m66_116 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteType(string, Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Schema.JsonSchemaType)", file="JsonSchemaWriter.cs", label="writer.WritePropertyName(propertyName)", span="220-220"];
m66_117 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteType(string, Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Schema.JsonSchemaType)", file="JsonSchemaWriter.cs", label="writer.WriteValue(JsonSchemaBuilder.MapType(type))", span="221-221"];
m66_118 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteType(string, Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Schema.JsonSchemaType)", file="JsonSchemaWriter.cs", label="IEnumerator<JsonSchemaType> en = EnumUtils.GetFlagsValues(type).Where(v => v != JsonSchemaType.None).GetEnumerator()", span="225-225"];
m66_120 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteType(string, Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Schema.JsonSchemaType)", file="JsonSchemaWriter.cs", label="writer.WritePropertyName(propertyName)", span="228-228"];
m66_123 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteType(string, Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Schema.JsonSchemaType)", file="JsonSchemaWriter.cs", label="writer.WriteStartArray()", span="232-232"];
m66_124 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteType(string, Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Schema.JsonSchemaType)", file="JsonSchemaWriter.cs", label="writer.WriteValue(JsonSchemaBuilder.MapType(first))", span="233-233"];
m66_125 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteType(string, Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Schema.JsonSchemaType)", file="JsonSchemaWriter.cs", label="writer.WriteValue(JsonSchemaBuilder.MapType(en.Current))", span="236-236"];
m66_127 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteType(string, Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Schema.JsonSchemaType)", file="JsonSchemaWriter.cs", label="writer.WriteEndArray()", span="238-238"];
m66_128 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteType(string, Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Schema.JsonSchemaType)", file="JsonSchemaWriter.cs", label="writer.WriteValue(JsonSchemaBuilder.MapType(first))", span="242-242"];
m66_119 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteType(string, Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Schema.JsonSchemaType)", file="JsonSchemaWriter.cs", label="en.MoveNext()", span="226-226"];
m66_121 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteType(string, Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Schema.JsonSchemaType)", file="JsonSchemaWriter.cs", label="JsonSchemaType first = en.Current", span="229-229"];
m66_122 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteType(string, Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Schema.JsonSchemaType)", file="JsonSchemaWriter.cs", label="en.MoveNext()", span="230-230"];
m66_126 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteType(string, Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Schema.JsonSchemaType)", file="JsonSchemaWriter.cs", label="en.MoveNext()", span="237-237"];
m66_129 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteType(string, Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Schema.JsonSchemaType)", file="JsonSchemaWriter.cs", label="Exit Newtonsoft.Json.Schema.JsonSchemaWriter.WriteType(string, Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Schema.JsonSchemaType)", span="216-216"];
m66_84 [cluster="System.Nullable<T>.GetValueOrDefault()", file="JsonSchemaWriter.cs", label="Entry System.Nullable<T>.GetValueOrDefault()", span="0-0"];
m66_89 [cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="JsonSchemaWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="421-421"];
m66_7 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.ReferenceOrWriteSchema(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaWriter.ReferenceOrWriteSchema(Newtonsoft.Json.Schema.JsonSchema)", span="52-52"];
m66_8 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.ReferenceOrWriteSchema(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="schema.Id != null && _resolver.GetSchema(schema.Id) != null", span="54-54"];
m66_11 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.ReferenceOrWriteSchema(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="_writer.WriteValue(schema.Id)", span="58-58"];
m66_13 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.ReferenceOrWriteSchema(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="WriteSchema(schema)", span="63-63"];
m66_9 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.ReferenceOrWriteSchema(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="_writer.WriteStartObject()", span="56-56"];
m66_10 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.ReferenceOrWriteSchema(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="_writer.WritePropertyName(JsonTypeReflector.RefPropertyName)", span="57-57"];
m66_12 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.ReferenceOrWriteSchema(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="_writer.WriteEndObject()", span="59-59"];
m66_14 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.ReferenceOrWriteSchema(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="Exit Newtonsoft.Json.Schema.JsonSchemaWriter.ReferenceOrWriteSchema(Newtonsoft.Json.Schema.JsonSchema)", span="52-52"];
m66_87 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchemaDictionaryIfNotNull(Newtonsoft.Json.JsonWriter, string, System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Schema.JsonSchema>)", file="JsonSchemaWriter.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchemaDictionaryIfNotNull(Newtonsoft.Json.JsonWriter, string, System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Schema.JsonSchema>)", span="167-167"];
m66_92 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchemaDictionaryIfNotNull(Newtonsoft.Json.JsonWriter, string, System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Schema.JsonSchema>)", file="JsonSchemaWriter.cs", label="properties != null", span="169-169"];
m66_93 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchemaDictionaryIfNotNull(Newtonsoft.Json.JsonWriter, string, System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Schema.JsonSchema>)", file="JsonSchemaWriter.cs", label="writer.WritePropertyName(propertyName)", span="171-171"];
m66_94 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchemaDictionaryIfNotNull(Newtonsoft.Json.JsonWriter, string, System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Schema.JsonSchema>)", file="JsonSchemaWriter.cs", label="writer.WriteStartObject()", span="172-172"];
m66_95 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchemaDictionaryIfNotNull(Newtonsoft.Json.JsonWriter, string, System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Schema.JsonSchema>)", file="JsonSchemaWriter.cs", label=properties, span="173-173"];
m66_96 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchemaDictionaryIfNotNull(Newtonsoft.Json.JsonWriter, string, System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Schema.JsonSchema>)", file="JsonSchemaWriter.cs", label="writer.WritePropertyName(property.Key)", span="175-175"];
m66_98 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchemaDictionaryIfNotNull(Newtonsoft.Json.JsonWriter, string, System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Schema.JsonSchema>)", file="JsonSchemaWriter.cs", label="writer.WriteEndObject()", span="178-178"];
m66_97 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchemaDictionaryIfNotNull(Newtonsoft.Json.JsonWriter, string, System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Schema.JsonSchema>)", file="JsonSchemaWriter.cs", label="ReferenceOrWriteSchema(property.Value)", span="176-176"];
m66_99 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchemaDictionaryIfNotNull(Newtonsoft.Json.JsonWriter, string, System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Schema.JsonSchema>)", file="JsonSchemaWriter.cs", label="Exit Newtonsoft.Json.Schema.JsonSchemaWriter.WriteSchemaDictionaryIfNotNull(Newtonsoft.Json.JsonWriter, string, System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Schema.JsonSchema>)", span="167-167"];
m66_5 [cluster="Unk.nameof", file="JsonSchemaWriter.cs", label="Entry Unk.nameof", span=""];
m66_15 [cluster="Newtonsoft.Json.Schema.JsonSchemaResolver.GetSchema(string)", file="JsonSchemaWriter.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaResolver.GetSchema(string)", span="66-66"];
m66_18 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="JsonSchemaWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="916-916"];
m66_19 [cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="JsonSchemaWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="413-413"];
m66_135 [cluster="System.Collections.IEnumerator.MoveNext()", file="JsonSchemaWriter.cs", label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0"];
m66_17 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="JsonSchemaWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="455-455"];
m66_88 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteItems(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaWriter.WriteItems(Newtonsoft.Json.Schema.JsonSchema)", span="182-182"];
m66_100 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteItems(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="schema.Items == null && !schema.PositionalItemsValidation", span="184-184"];
m66_103 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteItems(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="!schema.PositionalItemsValidation", span="191-191"];
m66_104 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteItems(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="schema.Items != null && schema.Items.Count > 0", span="193-193"];
m66_105 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteItems(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="ReferenceOrWriteSchema(schema.Items[0])", span="195-195"];
m66_110 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteItems(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="schema.Items != null", span="206-206"];
m66_111 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteItems(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="schema.Items", span="208-208"];
m66_101 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteItems(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="return;", span="186-186"];
m66_102 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteItems(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="_writer.WritePropertyName(JsonSchemaConstants.ItemsPropertyName)", span="189-189"];
m66_109 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteItems(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="_writer.WriteStartArray()", span="205-205"];
m66_106 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteItems(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="_writer.WriteStartObject()", span="199-199"];
m66_107 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteItems(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="_writer.WriteEndObject()", span="200-200"];
m66_108 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteItems(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="return;", span="202-202"];
m66_113 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteItems(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="_writer.WriteEndArray()", span="213-213"];
m66_112 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteItems(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="ReferenceOrWriteSchema(itemSchema)", span="210-210"];
m66_114 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.WriteItems(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaWriter.cs", label="Exit Newtonsoft.Json.Schema.JsonSchemaWriter.WriteItems(Newtonsoft.Json.Schema.JsonSchema)", span="182-182"];
m66_91 [cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="JsonSchemaWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="429-429"];
m66_82 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="JsonSchemaWriter.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m66_130 [cluster="System.Enum.IsDefined(System.Type, object)", file="JsonSchemaWriter.cs", label="Entry System.Enum.IsDefined(System.Type, object)", span="0-0"];
m66_143 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonSchemaWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(object)", span="1395-1395"];
m66_131 [cluster="Newtonsoft.Json.Schema.JsonSchemaBuilder.MapType(Newtonsoft.Json.Schema.JsonSchemaType)", file="JsonSchemaWriter.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaBuilder.MapType(Newtonsoft.Json.Schema.JsonSchemaType)", span="489-489"];
m66_6 [cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="JsonSchemaWriter.cs", label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="31-31"];
m66_90 [cluster="Newtonsoft.Json.Linq.JToken.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonSchemaWriter.cs", label="Entry Newtonsoft.Json.Linq.JToken.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="414-414"];
m66_134 [cluster="Unk.GetEnumerator", file="JsonSchemaWriter.cs", label="Entry Unk.GetEnumerator", span=""];
m66_133 [cluster="Unk.Where", file="JsonSchemaWriter.cs", label="Entry Unk.Where", span=""];
m66_136 [cluster="lambda expression", file="JsonSchemaWriter.cs", label="Entry lambda expression", span="225-225"];
m66_137 [cluster="lambda expression", file="JsonSchemaWriter.cs", label="v != JsonSchemaType.None", span="225-225"];
m66_138 [cluster="lambda expression", file="JsonSchemaWriter.cs", label="Exit lambda expression", span="225-225"];
m66_86 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool)", file="JsonSchemaWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(bool)", span="981-981"];
m66_0 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.JsonSchemaWriter(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Schema.JsonSchemaResolver)", file="JsonSchemaWriter.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaWriter.JsonSchemaWriter(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Schema.JsonSchemaResolver)", span="45-45"];
m66_1 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.JsonSchemaWriter(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Schema.JsonSchemaResolver)", file="JsonSchemaWriter.cs", label="ValidationUtils.ArgumentNotNull(writer, nameof(writer))", span="47-47"];
m66_2 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.JsonSchemaWriter(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Schema.JsonSchemaResolver)", file="JsonSchemaWriter.cs", label="_writer = writer", span="48-48"];
m66_3 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.JsonSchemaWriter(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Schema.JsonSchemaResolver)", file="JsonSchemaWriter.cs", label="_resolver = resolver", span="49-49"];
m66_4 [cluster="Newtonsoft.Json.Schema.JsonSchemaWriter.JsonSchemaWriter(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Schema.JsonSchemaResolver)", file="JsonSchemaWriter.cs", label="Exit Newtonsoft.Json.Schema.JsonSchemaWriter.JsonSchemaWriter(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Schema.JsonSchemaResolver)", span="45-45"];
m66_16 [cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="JsonSchemaWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="405-405"];
m66_132 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetFlagsValues<T>(T)", file="JsonSchemaWriter.cs", label="Entry Newtonsoft.Json.Utilities.EnumUtils.GetFlagsValues<T>(T)", span="74-74"];
m66_144 [file="JsonSchemaWriter.cs", label="Newtonsoft.Json.Schema.JsonSchemaWriter", span=""];
m67_4 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string, System.Exception)", file="JsonSerializationException.cs", label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string, System.Exception)", span="63-63"];
m67_5 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string, System.Exception)", file="JsonSerializationException.cs", label="Exit Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string, System.Exception)", span="63-63"];
m67_0 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException()", file="JsonSerializationException.cs", label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException()", span="43-43"];
m67_1 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException()", file="JsonSerializationException.cs", label="Exit Newtonsoft.Json.JsonSerializationException.JsonSerializationException()", span="43-43"];
m67_6 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializationException.cs", label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="76-76"];
m67_7 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializationException.cs", label="Exit Newtonsoft.Json.JsonSerializationException.JsonSerializationException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="76-76"];
m67_11 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", file="JsonSerializationException.cs", label="Entry Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", span="87-87"];
m67_12 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", file="JsonSerializationException.cs", label="return Create(reader as IJsonLineInfo, reader.Path, message, ex);", span="89-89"];
m67_13 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", file="JsonSerializationException.cs", label="Exit Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", span="87-87"];
m67_8 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", file="JsonSerializationException.cs", label="Entry Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", span="82-82"];
m67_9 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", file="JsonSerializationException.cs", label="return Create(reader, message, null);", span="84-84"];
m67_10 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", file="JsonSerializationException.cs", label="Exit Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", span="82-82"];
m67_14 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", file="JsonSerializationException.cs", label="Entry Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", span="92-92"];
m67_15 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", file="JsonSerializationException.cs", label="message = JsonPosition.FormatMessage(lineInfo, path, message)", span="94-94"];
m67_16 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", file="JsonSerializationException.cs", label="return new JsonSerializationException(message, ex);", span="96-96"];
m67_17 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", file="JsonSerializationException.cs", label="Exit Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", span="92-92"];
m67_18 [cluster="Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", file="JsonSerializationException.cs", label="Entry Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", span="139-139"];
m67_2 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", file="JsonSerializationException.cs", label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="52-52"];
m67_3 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", file="JsonSerializationException.cs", label="Exit Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="52-52"];
m68_420 [cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.StringListAppenderConverter()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.StringListAppenderConverter()", span="2012-2012"];
m68_878 [cluster="Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.CanConvert(System.Type)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.CanConvert(System.Type)", span="2058-2058"];
m68_879 [cluster="Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.CanConvert(System.Type)", file="JsonSerializerInternalReader.cs", label="return (objectType == typeof(string));", span="2060-2060"];
m68_880 [cluster="Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.CanConvert(System.Type)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.CanConvert(System.Type)", span="2058-2058"];
m68_331 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.GetEnumerator()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.GetEnumerator()", span="704-704"];
m68_332 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.GetEnumerator()", file="JsonSerializerInternalReader.cs", label="return _dictionary.GetEnumerator();", span="706-706"];
m68_333 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.GetEnumerator()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.GetEnumerator()", span="704-704"];
m68_778 [cluster="Newtonsoft.Json.Tests.Serialization.GenericItem<T>.GenericItem()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.GenericItem<T>.GenericItem()", span="1970-1970"];
m68_111 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivate()", file="JsonSerializerInternalReader.cs", label="string json = JsonConvert.SerializeObject(c1)", span="239-239"];
m68_120 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorMultipleParameters()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorMultipleParameters()", span="257-257"];
m68_121 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorMultipleParameters()", file="JsonSerializerInternalReader.cs", label="ExceptionAssert.Throws<JsonException>(\r\n                () => JsonConvert.SerializeObject(new TestDictionaryMultipleParameters(null, null)),\r\n                ''Constructor for 'Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests+TestDictionaryMultipleParameters' must have no parameters or a single parameter that implements 'System.Collections.Generic.IEnumerable`1[System.Collections.Generic.KeyValuePair`2[System.String,System.Int32]]'.'')", span="259-261"];
m68_122 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorMultipleParameters()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorMultipleParameters()", span="257-257"];
m68_125 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Exit lambda expression", span="260-260"];
m68_126 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryBadIEnumerableParameter.TestDictionaryBadIEnumerableParameter(System.Collections.Generic.Dictionary<string, string>)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryBadIEnumerableParameter.TestDictionaryBadIEnumerableParameter(System.Collections.Generic.Dictionary<string, string>)", span="267-267"];
m68_119 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryMultipleParameters.TestDictionaryMultipleParameters(string, string)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryMultipleParameters.TestDictionaryMultipleParameters(string, string)", span="251-251"];
m68_123 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Entry lambda expression", span="260-260"];
m68_124 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="JsonConvert.SerializeObject(new TestDictionaryMultipleParameters(null, null))", span="260-260"];
m68_114 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivate()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(0, c2[''zero''])", span="243-243"];
m68_115 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivate()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(1, c2[''one''])", span="244-244"];
m68_116 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivate()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(2, c2[''two''])", span="245-245"];
m68_117 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivate()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivate()", span="233-233"];
m68_118 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryMultipleParameters.TestDictionaryMultipleParameters(string, string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryMultipleParameters.TestDictionaryMultipleParameters(string, string)", span="251-251"];
m68_112 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivate()", file="JsonSerializerInternalReader.cs", label="TestDictionaryPrivate c2 = JsonConvert.DeserializeObject<TestDictionaryPrivate>(json)", span="240-240"];
m68_113 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivate()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(3, c2.Count)", span="242-242"];
m68_127 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryBadIEnumerableParameter.TestDictionaryBadIEnumerableParameter(System.Collections.Generic.Dictionary<string, string>)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryBadIEnumerableParameter.TestDictionaryBadIEnumerableParameter(System.Collections.Generic.Dictionary<string, string>)", span="267-267"];
m68_849 [cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.System.Collections.IEnumerable.GetEnumerator()", span="2002-2002"];
m68_850 [cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerInternalReader.cs", label="return GetEnumerator();", span="2004-2004"];
m68_851 [cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.System.Collections.IEnumerable.GetEnumerator()", span="2002-2002"];
m68_459 [cluster="Newtonsoft.Json.Tests.TestObjects.GameObject.GameObject()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.GameObject.GameObject()", span="42-42"];
m68_165 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomConcurrentDictionary.CustomConcurrentDictionary()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomConcurrentDictionary.CustomConcurrentDictionary()", span="324-324"];
m68_130 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorBadIEnumerableParameter()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorBadIEnumerableParameter()", span="273-273"];
m68_301 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollection()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(3, list.Count)", span="634-634"];
m68_302 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollection()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(1, list[0])", span="636-636"];
m68_304 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollection()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(3, list[2])", span="638-638"];
m68_303 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollection()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(2, list[1])", span="637-637"];
m68_305 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollection()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollection()", span="630-630"];
m68_51 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerInternalReader.cs", label="settings._preserveReferencesHandling != null", span="537-537"];
m68_52 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerInternalReader.cs", label="serializer.PreserveReferencesHandling = settings.PreserveReferencesHandling", span="538-538"];
m68_271 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializerInternalReader.cs", label="jsonWriter.StringEscapeHandling = previousStringEscapeHandling.Value", span="939-939"];
m68_272 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializerInternalReader.cs", label=_dateFormatStringSet, span="940-940"];
m68_273 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializerInternalReader.cs", label="jsonWriter.DateFormatString = previousDateFormatString", span="941-941"];
m68_275 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializerInternalReader.cs", label="jsonWriter.Culture = previousCulture", span="943-943"];
m68_274 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializerInternalReader.cs", label="previousCulture != null", span="942-942"];
m68_276 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", span="865-865"];
m68_140 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorNonGeneric()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(0, d[''zero''])", span="297-297"];
m68_141 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorNonGeneric()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(1, d[''one''])", span="298-298"];
m68_142 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorNonGeneric()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(2, d[''two''])", span="299-299"];
m68_21 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivateParameterized()", file="JsonSerializerInternalReader.cs", label="string json = JsonConvert.SerializeObject(c1)", span="93-93"];
m68_24 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivateParameterized()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(3, values.Count)", span="98-98"];
m68_22 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivateParameterized()", file="JsonSerializerInternalReader.cs", label="TestCollectionPrivateParameterized c2 = JsonConvert.DeserializeObject<TestCollectionPrivateParameterized>(json)", span="94-94"];
m68_23 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivateParameterized()", file="JsonSerializerInternalReader.cs", label="List<int> values = c2.ToList()", span="96-96"];
m68_25 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivateParameterized()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(0, values[0])", span="99-99"];
m68_26 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivateParameterized()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(1, values[1])", span="100-100"];
m68_210 [cluster="Newtonsoft.Json.JsonSerializer.ResetReader(Newtonsoft.Json.JsonReader, System.Globalization.CultureInfo, Newtonsoft.Json.DateTimeZoneHandling?, Newtonsoft.Json.DateParseHandling?, Newtonsoft.Json.FloatParseHandling?, int?, string)", file="JsonSerializerInternalReader.cs", label="JsonTextReader textReader = reader as JsonTextReader", span="806-806"];
m68_306 [cluster="System.EventHandler<TEventArgs>.Invoke(object, TEventArgs)", file="JsonSerializerInternalReader.cs", label="Entry System.EventHandler<TEventArgs>.Invoke(object, TEventArgs)", span="0-0"];
m68_307 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionaryInterface()", file="JsonSerializerInternalReader.cs", label="Newtonsoft.Json.JsonSerializer", span=""];
m68_308 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionaryInterface()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(2, dic.Count)", span="646-646"];
m68_309 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionaryInterface()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(1, dic[''one''])", span="648-648"];
m68_310 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionaryInterface()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(2, dic[''two''])", span="649-649"];
m68_311 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionaryInterface()", file="JsonSerializerInternalReader.cs", label="CustomAssert.IsInstanceOfType(typeof(ReadOnlyDictionary<string, int>), dic)", span="651-651"];
m68_312 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionaryInterface()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionaryInterface()", span="642-642"];
m68_290 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyListInterface()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(3, list[2])", span="614-614"];
m68_293 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollectionInterface()", file="JsonSerializerInternalReader.cs", label="IReadOnlyCollection<int> list = JsonConvert.DeserializeObject<IReadOnlyCollection<int>>(''[1,2,3]'')", span="620-620"];
m68_292 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollectionInterface()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollectionInterface()", span="618-618"];
m68_297 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollectionInterface()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(3, list.ElementAt(2))", span="626-626"];
m68_294 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollectionInterface()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(3, list.Count)", span="622-622"];
m68_298 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollectionInterface()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollectionInterface()", span="618-618"];
m68_291 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyListInterface()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyListInterface()", span="607-607"];
m68_295 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollectionInterface()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(1, list.ElementAt(0))", span="624-624"];
m68_296 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollectionInterface()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(2, list.ElementAt(1))", span="625-625"];
m68_299 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollection()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollection()", span="630-630"];
m68_208 [cluster="Newtonsoft.Json.JsonSerializer.ResetReader(Newtonsoft.Json.JsonReader, System.Globalization.CultureInfo, Newtonsoft.Json.DateTimeZoneHandling?, Newtonsoft.Json.DateParseHandling?, Newtonsoft.Json.FloatParseHandling?, int?, string)", color=green, community=0, file="JsonSerializerInternalReader.cs", label=_dateFormatStringSet, prediction=19, span="803-803"];
m68_247 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializerInternalReader.cs", label="previousStringEscapeHandling = jsonWriter.StringEscapeHandling", span="901-901"];
m68_248 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializerInternalReader.cs", label="jsonWriter.StringEscapeHandling = _stringEscapeHandling.Value", span="902-902"];
m68_234 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializerInternalReader.cs", label="_dateFormatHandling != null && jsonWriter.DateFormatHandling != _dateFormatHandling", span="878-878"];
m68_235 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializerInternalReader.cs", label="previousDateFormatHandling = jsonWriter.DateFormatHandling", span="880-880"];
m68_236 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializerInternalReader.cs", label="jsonWriter.DateFormatHandling = _dateFormatHandling.Value", span="881-881"];
m68_261 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializerInternalReader.cs", label="TraceWriter.Trace(TraceLevel.Verbose, ''Serialized JSON: '' + Environment.NewLine + traceJsonWriter.GetJson(), null)", span="927-927"];
m68_262 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializerInternalReader.cs", label="previousFormatting != null", span="930-930"];
m68_263 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializerInternalReader.cs", label="jsonWriter.Formatting = previousFormatting.Value", span="931-931"];
m68_214 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", span="817-817"];
m68_215 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", file="JsonSerializerInternalReader.cs", label="Serialize(new JsonTextWriter(textWriter), value)", span="819-819"];
m68_216 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", span="817-817"];
m68_237 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializerInternalReader.cs", label="DateTimeZoneHandling? previousDateTimeZoneHandling = null", span="884-884"];
m68_238 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializerInternalReader.cs", label="_dateTimeZoneHandling != null && jsonWriter.DateTimeZoneHandling != _dateTimeZoneHandling", span="885-885"];
m68_239 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializerInternalReader.cs", label="previousDateTimeZoneHandling = jsonWriter.DateTimeZoneHandling", span="887-887"];
m68_373 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeExistingGenericList()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeExistingGenericList()", span="805-805"];
m68_374 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeExistingGenericList()", file="JsonSerializerInternalReader.cs", label="GenericListTestClass c = new GenericListTestClass()", span="807-807"];
m68_375 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeExistingGenericList()", file="JsonSerializerInternalReader.cs", label="c.GenericList.Add(''1'')", span="808-808"];
m68_376 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeExistingGenericList()", file="JsonSerializerInternalReader.cs", label="c.GenericList.Add(''2'')", span="809-809"];
m68_377 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeExistingGenericList()", file="JsonSerializerInternalReader.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="811-811"];
m68_378 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeExistingGenericList()", file="JsonSerializerInternalReader.cs", label="GenericListTestClass newValue = JsonConvert.DeserializeObject<GenericListTestClass>(json)", span="813-813"];
m68_379 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeExistingGenericList()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(2, newValue.GenericList.Count)", span="814-814"];
m68_380 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeExistingGenericList()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(typeof(List<string>), newValue.GenericList.GetType())", span="815-815"];
m68_381 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeExistingGenericList()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeExistingGenericList()", span="805-805"];
m68_410 [cluster="Newtonsoft.Json.Tests.TestObjects.WagePerson.WagePerson()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.WagePerson.WagePerson()", span="27-27"];
m68_155 [cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="string previousDateFormatString", span="701-701"];
m68_156 [cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="SetupReader(reader, out previousCulture, out previousDateTimeZoneHandling, out previousDateParseHandling, out previousFloatParseHandling, out previousMaxDepth, out previousDateFormatString)", span="702-702"];
m68_157 [cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="TraceJsonReader traceJsonReader = (TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose)\r\n                ? new TraceJsonReader(reader)\r\n                : null", span="704-706"];
m68_158 [cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="JsonSerializerInternalReader serializerReader = new JsonSerializerInternalReader(this)", span="708-708"];
m68_160 [cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="traceJsonReader != null", span="711-711"];
m68_161 [cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="TraceWriter.Trace(TraceLevel.Verbose, ''Deserialized JSON: '' + Environment.NewLine + traceJsonReader.GetJson(), null)", span="712-712"];
m68_162 [cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="ResetReader(reader, previousCulture, previousDateTimeZoneHandling, previousDateParseHandling, previousFloatParseHandling, previousMaxDepth, previousDateFormatString)", span="714-714"];
m68_163 [cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="return value;", span="716-716"];
m68_164 [cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", span="691-691"];
m68_344 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.CustomReadOnlyCollection(System.Collections.Generic.IList<T>)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.CustomReadOnlyCollection(System.Collections.Generic.IList<T>)", span="737-737"];
m68_345 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.CustomReadOnlyCollection(System.Collections.Generic.IList<T>)", file="JsonSerializerInternalReader.cs", label="_values = values", span="739-739"];
m68_346 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.CustomReadOnlyCollection(System.Collections.Generic.IList<T>)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.CustomReadOnlyCollection(System.Collections.Generic.IList<T>)", span="737-737"];
m68_753 [cluster="Newtonsoft.Json.Tests.TestObjects.Product.Product()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Product.Product()", span="29-29"];
m68_197 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="JsonSerializerInternalReader.cs", label="StringAssert.AreEqual(@''[\r\n  [\r\n    {\r\n      ''''Key'''': ''''my value'''',\r\n      ''''Value'''': 0.8\r\n    },\r\n    ''''foobar''''\r\n  ],\r\n  [\r\n    true,\r\n    0.4\r\n  ],\r\n  [\r\n    0.05,\r\n    6\r\n  ]\r\n]'', myOtherArrayAsString)", span="437-453"];
m68_643 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIncomplete3DArray()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIncomplete3DArray()", span="1437-1437"];
m68_644 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIncomplete3DArray()", file="JsonSerializerInternalReader.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[/*hi*/[/*hi*/[1/*hi*/,/*hi*/1/*hi*/,1]/*hi*/,/*hi*/[1,1''", span="1439-1439"];
m68_645 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIncomplete3DArray()", file="JsonSerializerInternalReader.cs", label="ExceptionAssert.Throws<JsonException>(() => JsonConvert.DeserializeObject<Array3D>(json))", span="1441-1441"];
m68_646 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIncomplete3DArray()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIncomplete3DArray()", span="1437-1437"];
m68_867 [cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.CanConvert(System.Type)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.CanConvert(System.Type)", span="2037-2037"];
m68_868 [cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.CanConvert(System.Type)", file="JsonSerializerInternalReader.cs", label="return (objectType == typeof(List<string>));", span="2039-2039"];
m68_869 [cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.CanConvert(System.Type)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.CanConvert(System.Type)", span="2037-2037"];
m68_474 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", span="1011-1011"];
m68_475 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", file="JsonSerializerInternalReader.cs", label="string json = @''[ { ''''Value'''': [ ''''1'''', ''''2'''' ], ''''Key'''': ''''aaa'''', ''''BadContent'''': [ 0 ] }, null, { ''''Value'''': [ ''''3'''', ''''4'''' ], ''''Key'''': ''''bbb'''' } ]''", span="1013-1013"];
m68_476 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", file="JsonSerializerInternalReader.cs", label="IList<KeyValuePair<string, IList<string>>?> values = JsonConvert.DeserializeObject<IList<KeyValuePair<string, IList<string>>?>>(json)", span="1015-1015"];
m68_477 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(3, values.Count)", span="1017-1017"];
m68_478 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''aaa'', values[0].Value.Key)", span="1018-1018"];
m68_479 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(2, values[0].Value.Value.Count)", span="1019-1019"];
m68_480 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''1'', values[0].Value.Value[0])", span="1020-1020"];
m68_481 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''2'', values[0].Value.Value[1])", span="1021-1021"];
m68_482 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(null, values[1])", span="1022-1022"];
m68_483 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''bbb'', values[2].Value.Key)", span="1023-1023"];
m68_484 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(2, values[2].Value.Value.Count)", span="1024-1024"];
m68_485 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''3'', values[2].Value.Value[0])", span="1025-1025"];
m68_486 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''4'', values[2].Value.Value[1])", span="1026-1026"];
m68_487 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", span="1011-1011"];
m68_278 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.JsonSerializerInternalWriter(Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.JsonSerializerInternalWriter(Newtonsoft.Json.JsonSerializer)", span="55-55"];
m68_279 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", span="60-60"];
m68_280 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.GetJson()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.GetJson()", span="31-31"];
m68_281 [cluster="Newtonsoft.Json.JsonSerializer.GetReferenceResolver()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonSerializer.GetReferenceResolver()", span="946-946"];
m68_282 [cluster="Newtonsoft.Json.JsonSerializer.GetReferenceResolver()", file="JsonSerializerInternalReader.cs", label="_referenceResolver == null", span="948-948"];
m68_283 [cluster="Newtonsoft.Json.JsonSerializer.GetReferenceResolver()", file="JsonSerializerInternalReader.cs", label="_referenceResolver = new DefaultReferenceResolver()", span="949-949"];
m68_533 [cluster="Newtonsoft.Json.Tests.Serialization.Array2D.Array2D()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Array2D.Array2D()", span="1946-1946"];
m68_509 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReadOnlyCollections()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReadOnlyCollections()", span="1075-1075"];
m68_510 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReadOnlyCollections()", file="JsonSerializerInternalReader.cs", label="PopulateReadOnlyTestClass c1 = new PopulateReadOnlyTestClass()", span="1077-1077"];
m68_511 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReadOnlyCollections()", file="JsonSerializerInternalReader.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="1079-1079"];
m68_512 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReadOnlyCollections()", file="JsonSerializerInternalReader.cs", label="StringAssert.AreEqual(@''{\r\n  ''''NonReadOnlyList'''': [\r\n    1\r\n  ],\r\n  ''''NonReadOnlyDictionary'''': {\r\n    ''''first'''': 2\r\n  },\r\n  ''''Array'''': [\r\n    3\r\n  ],\r\n  ''''List'''': [\r\n    4\r\n  ],\r\n  ''''Dictionary'''': {\r\n    ''''first'''': 5\r\n  },\r\n  ''''IReadOnlyCollection'''': [\r\n    6\r\n  ],\r\n  ''''ReadOnlyCollection'''': [\r\n    7\r\n  ],\r\n  ''''IReadOnlyList'''': [\r\n    8\r\n  ],\r\n  ''''IReadOnlyDictionary'''': {\r\n    ''''first'''': 9\r\n  },\r\n  ''''ReadOnlyDictionary'''': {\r\n    ''''first'''': 10\r\n  }\r\n}'', json)", span="1081-1112"];
m68_513 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReadOnlyCollections()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReadOnlyCollections()", span="1075-1075"];
m68_543 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3DWithConverter()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3DWithConverter()", span="1192-1192"];
m68_544 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3DWithConverter()", file="JsonSerializerInternalReader.cs", label="Array3DWithConverter aa = new Array3DWithConverter()", span="1194-1194"];
m68_545 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3DWithConverter()", file="JsonSerializerInternalReader.cs", label="aa.Before = ''Before!''", span="1195-1195"];
m68_546 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3DWithConverter()", file="JsonSerializerInternalReader.cs", label="aa.After = ''After!''", span="1196-1196"];
m68_547 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3DWithConverter()", file="JsonSerializerInternalReader.cs", label="aa.Coordinates = new[, ,] { { { 1, 1, 1 }, { 1, 1, 2 } }, { { 1, 2, 1 }, { 1, 2, 2 } }, { { 2, 1, 1 }, { 2, 1, 2 } }, { { 2, 2, 1 }, { 2, 2, 2 } } }", span="1197-1197"];
m68_548 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3DWithConverter()", file="JsonSerializerInternalReader.cs", label="string json = JsonConvert.SerializeObject(aa, Formatting.Indented)", span="1199-1199"];
m68_549 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3DWithConverter()", file="JsonSerializerInternalReader.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Before'''': ''''Before!'''',\r\n  ''''Coordinates'''': [\r\n    [\r\n      [\r\n        1.0,\r\n        1.0,\r\n        1.0\r\n      ],\r\n      [\r\n        1.0,\r\n        1.0,\r\n        2.0\r\n      ]\r\n    ],\r\n    [\r\n      [\r\n        1.0,\r\n        2.0,\r\n        1.0\r\n      ],\r\n      [\r\n        1.0,\r\n        2.0,\r\n        2.0\r\n      ]\r\n    ],\r\n    [\r\n      [\r\n        2.0,\r\n        1.0,\r\n        1.0\r\n      ],\r\n      [\r\n        2.0,\r\n        1.0,\r\n        2.0\r\n      ]\r\n    ],\r\n    [\r\n      [\r\n        2.0,\r\n        2.0,\r\n        1.0\r\n      ],\r\n      [\r\n        2.0,\r\n        2.0,\r\n        2.0\r\n      ]\r\n    ]\r\n  ],\r\n  ''''After'''': ''''After!''''\r\n}'', json)", span="1201-1254"];
m68_550 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3DWithConverter()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3DWithConverter()", span="1192-1192"];
m68_53 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerInternalReader.cs", label="settings._referenceLoopHandling != null", span="539-539"];
m68_54 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerInternalReader.cs", label="serializer.ReferenceLoopHandling = settings.ReferenceLoopHandling", span="540-540"];
m68_55 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerInternalReader.cs", label="settings._missingMemberHandling != null", span="541-541"];
m68_677 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReferenceTracked3DArray()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReferenceTracked3DArray()", span="1487-1487"];
m68_678 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReferenceTracked3DArray()", file="JsonSerializerInternalReader.cs", label="Event1 e1 = new Event1\r\n            {\r\n                EventName = ''EventName!''\r\n            }", span="1489-1492"];
m68_679 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReferenceTracked3DArray()", file="JsonSerializerInternalReader.cs", label="Event1[,] array1 = new[,] { { e1, e1 }, { e1, e1 } }", span="1493-1493"];
m68_680 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReferenceTracked3DArray()", file="JsonSerializerInternalReader.cs", label="IList<Event1[,]> values1 = new List<Event1[,]>\r\n            {\r\n                array1,\r\n                array1\r\n            }", span="1494-1498"];
m68_681 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReferenceTracked3DArray()", file="JsonSerializerInternalReader.cs", label="string json = JsonConvert.SerializeObject(values1, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.All,\r\n                Formatting = Formatting.Indented\r\n            })", span="1500-1504"];
m68_682 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReferenceTracked3DArray()", file="JsonSerializerInternalReader.cs", label="StringAssert.AreEqual(@''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$values'''': [\r\n    {\r\n      ''''$id'''': ''''2'''',\r\n      ''''$values'''': [\r\n        [\r\n          {\r\n            ''''$id'''': ''''3'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          },\r\n          {\r\n            ''''$ref'''': ''''3''''\r\n          }\r\n        ],\r\n        [\r\n          {\r\n            ''''$ref'''': ''''3''''\r\n          },\r\n          {\r\n            ''''$ref'''': ''''3''''\r\n          }\r\n        ]\r\n      ]\r\n    },\r\n    {\r\n      ''''$ref'''': ''''2''''\r\n    }\r\n  ]\r\n}'', json)", span="1506-1537"];
m68_683 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReferenceTracked3DArray()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReferenceTracked3DArray()", span="1487-1487"];
m68_259 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializerInternalReader.cs", label="serializerWriter.Serialize(traceJsonWriter ?? jsonWriter, value, objectType)", span="924-924"];
m68_260 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", color=green, community=0, file="JsonSerializerInternalReader.cs", label="traceJsonWriter != null", prediction=20, span="926-926"];
m68_330 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="JsonSerializerInternalReader.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m68_7 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonSerializerInternalReader.cs", label="_defaultValueHandling = JsonSerializerSettings.DefaultDefaultValueHandling", span="438-438"];
m68_128 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorBadIEnumerableParameter()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorBadIEnumerableParameter()", span="273-273"];
m68_133 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Exit lambda expression", span="276-276"];
m68_285 [cluster="Newtonsoft.Json.JsonSerializer.GetReferenceResolver()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.JsonSerializer.GetReferenceResolver()", span="946-946"];
m68_286 [cluster="Newtonsoft.Json.Serialization.DefaultReferenceResolver.DefaultReferenceResolver()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.DefaultReferenceResolver.DefaultReferenceResolver()", span="31-31"];
m68_287 [cluster="Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Type)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Type)", span="954-954"];
m68_288 [cluster="Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Type)", file="JsonSerializerInternalReader.cs", label="return GetMatchingConverter(_converters, type);", span="956-956"];
m68_289 [cluster="Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Type)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Type)", span="954-954"];
m68_139 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorNonGeneric()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(3, d.Count)", span="296-296"];
m68_761 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", span="708-708"];
m68_146 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNameValueCollection()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNameValueCollection()", span="310-310"];
m68_147 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Entry lambda expression", span="313-313"];
m68_102 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryPrivate.TestDictionaryPrivate()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryPrivate.TestDictionaryPrivate()", span="222-222"];
m68_873 [cluster="Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="2050-2050"];
m68_874 [cluster="Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalReader.cs", label="string existingString = (string)existingValue", span="2052-2052"];
m68_875 [cluster="Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalReader.cs", label="string newString = existingString + (string)reader.Value", span="2053-2053"];
m68_876 [cluster="Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalReader.cs", label="return newString;", span="2055-2055"];
m68_877 [cluster="Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="2050-2050"];
m68_219 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerInternalReader.cs", label="return GetEnumerator();", span="487-487"];
m68_220 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>.System.Collections.IEnumerable.GetEnumerator()", span="485-485"];
m68_221 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor()", span="492-492"];
m68_34 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivate.TestCollectionPrivate()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivate.TestCollectionPrivate()", span="107-107"];
m68_37 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivate.Create()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivate.Create()", span="111-111"];
m68_35 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivate.Create()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivate.Create()", span="111-111"];
m68_36 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivate.Create()", file="JsonSerializerInternalReader.cs", label="return new TestCollectionPrivate();", span="113-113"];
m68_38 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivate()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivate()", span="118-118"];
m68_39 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivate()", file="JsonSerializerInternalReader.cs", label="TestCollectionPrivate c1 = TestCollectionPrivate.Create()", span="120-120"];
m68_726 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", span="1687-1687"];
m68_727 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", file="JsonSerializerInternalReader.cs", label="Name name = new Name(''The Idiot in Next To Me'')", span="1689-1689"];
m68_728 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", file="JsonSerializerInternalReader.cs", label="PhoneNumber p1 = new PhoneNumber(''555-1212'')", span="1691-1691"];
m68_730 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", file="JsonSerializerInternalReader.cs", label="name.pNumbers.Add(p1)", span="1694-1694"];
m68_731 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", file="JsonSerializerInternalReader.cs", label="name.pNumbers.Add(p2)", span="1695-1695"];
m68_732 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", file="JsonSerializerInternalReader.cs", label="string json = JsonConvert.SerializeObject(name, Formatting.Indented)", span="1697-1697"];
m68_729 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", file="JsonSerializerInternalReader.cs", label="PhoneNumber p2 = new PhoneNumber(''444-1212'')", span="1692-1692"];
m68_733 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", file="JsonSerializerInternalReader.cs", label="StringAssert.AreEqual(@''{\r\n  ''''personsName'''': ''''The Idiot in Next To Me'''',\r\n  ''''pNumbers'''': [\r\n    {\r\n      ''''phoneNumber'''': ''''555-1212''''\r\n    },\r\n    {\r\n      ''''phoneNumber'''': ''''444-1212''''\r\n    }\r\n  ]\r\n}'', json)", span="1699-1709"];
m68_734 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", file="JsonSerializerInternalReader.cs", label="Name newName = JsonConvert.DeserializeObject<Name>(json)", span="1711-1711"];
m68_735 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''The Idiot in Next To Me'', newName.personsName)", span="1713-1713"];
m68_736 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(2, newName.pNumbers.Count)", span="1716-1716"];
m68_737 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''555-1212'', newName.pNumbers[0].phoneNumber)", span="1717-1717"];
m68_738 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''444-1212'', newName.pNumbers[1].phoneNumber)", span="1718-1718"];
m68_739 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", span="1687-1687"];
m68_508 [cluster="System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.ReadOnlyDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="JsonSerializerInternalReader.cs", label="Entry System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.ReadOnlyDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m68_666 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()", span="1469-1469"];
m68_667 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()", file="JsonSerializerInternalReader.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[]],''''After'''':''''After!''''}''", span="1471-1471"];
m68_668 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()", file="JsonSerializerInternalReader.cs", label="Array3D aa = JsonConvert.DeserializeObject<Array3D>(json)", span="1473-1473"];
m68_675 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(json, after)", span="1483-1483"];
m68_669 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''Before!'', aa.Before)", span="1475-1475"];
m68_670 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''After!'', aa.After)", span="1476-1476"];
m68_671 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(1, aa.Coordinates.GetLength(0))", span="1477-1477"];
m68_672 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(0, aa.Coordinates.GetLength(1))", span="1478-1478"];
m68_673 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(0, aa.Coordinates.GetLength(2))", span="1479-1479"];
m68_674 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()", file="JsonSerializerInternalReader.cs", label="string after = JsonConvert.SerializeObject(aa)", span="1481-1481"];
m68_676 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()", span="1469-1469"];
m68_150 [cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="CultureInfo previousCulture", span="696-696"];
m68_151 [cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="DateTimeZoneHandling? previousDateTimeZoneHandling", span="697-697"];
m68_152 [cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="DateParseHandling? previousDateParseHandling", span="698-698"];
m68_78 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerInternalReader.cs", label="serializer.Binder = settings.Binder", span="566-566"];
m68_79 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", color=green, community=0, file="JsonSerializerInternalReader.cs", label="settings._formatting != null", prediction=21, span="570-570"];
m68_254 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializerInternalReader.cs", label="_dateFormatStringSet && jsonWriter.DateFormatString != _dateFormatString", span="913-913"];
m68_359 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()", span="779-779"];
m68_360 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()", file="JsonSerializerInternalReader.cs", label="string s = @''host\user''", span="781-781"];
m68_361 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()", file="JsonSerializerInternalReader.cs", label="string serialized = JsonConvert.SerializeObject(s)", span="782-782"];
m68_364 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()", file="JsonSerializerInternalReader.cs", label="d1.Add(5, s)", span="786-786"];
m68_367 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()", file="JsonSerializerInternalReader.cs", label="d2.Add(s, 5)", span="790-790"];
m68_362 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(@''''''host\\user'''''', serialized)", span="783-783"];
m68_363 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()", file="JsonSerializerInternalReader.cs", label="Dictionary<int, object> d1 = new Dictionary<int, object>()", span="785-785"];
m68_365 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(@''{''''5'''':''''host\\user''''}'', JsonConvert.SerializeObject(d1))", span="787-787"];
m68_366 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()", file="JsonSerializerInternalReader.cs", label="Dictionary<string, object> d2 = new Dictionary<string, object>()", span="789-789"];
m68_368 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(@''{''''host\\user'''':5}'', JsonConvert.SerializeObject(d2))", span="791-791"];
m68_369 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()", span="779-779"];
m68_719 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArrayAsArrayList()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArrayAsArrayList()", span="1675-1675"];
m68_720 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArrayAsArrayList()", file="JsonSerializerInternalReader.cs", label="string jsonText = @''[3, ''''somestring'''',[1,2,3],{}]''", span="1677-1677"];
m68_722 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArrayAsArrayList()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(4, o.Count)", span="1680-1680"];
m68_723 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArrayAsArrayList()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(3, ((JArray)o[2]).Count)", span="1681-1681"];
m68_724 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArrayAsArrayList()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(0, ((JObject)o[3]).Count)", span="1682-1682"];
m68_725 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArrayAsArrayList()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArrayAsArrayList()", span="1675-1675"];
m68_103 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryPrivate.Create()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryPrivate.Create()", span="226-226"];
m68_590 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", span="1362-1362"];
m68_591 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", file="JsonSerializerInternalReader.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[[1,1,1],[1,1,2]],[[1,2,1],[1,2,2]],[[2,1,1],[2,1,2]],[[2,2,1],[2,2,2]]],''''After'''':''''After!''''}''", span="1364-1364"];
m68_592 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", file="JsonSerializerInternalReader.cs", label="Array3D aa = JsonConvert.DeserializeObject<Array3D>(json)", span="1366-1366"];
m68_601 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(json, after)", span="1378-1378"];
m68_593 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''Before!'', aa.Before)", span="1368-1368"];
m68_594 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''After!'', aa.After)", span="1369-1369"];
m68_595 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(4, aa.Coordinates.GetLength(0))", span="1370-1370"];
m68_596 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(2, aa.Coordinates.GetLength(1))", span="1371-1371"];
m68_597 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(3, aa.Coordinates.GetLength(2))", span="1372-1372"];
m68_598 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(1, aa.Coordinates[0, 0, 0])", span="1373-1373"];
m68_599 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(2, aa.Coordinates[1, 1, 1])", span="1374-1374"];
m68_600 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", file="JsonSerializerInternalReader.cs", label="string after = JsonConvert.SerializeObject(aa)", span="1376-1376"];
m68_602 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", span="1362-1362"];
m68_229 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializerInternalReader.cs", label="Formatting? previousFormatting = null", span="870-870"];
m68_752 [cluster="Newtonsoft.Json.Tests.TestObjects.ProductCollection.ProductCollection()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ProductCollection.ProductCollection()", span="29-29"];
m68_382 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()", span="819-819"];
m68_383 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()", file="JsonSerializerInternalReader.cs", label="List<KeyValuePair<string, string>> list = new List<KeyValuePair<string, string>>()", span="821-821"];
m68_384 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()", file="JsonSerializerInternalReader.cs", label="list.Add(new KeyValuePair<string, string>(''key1'', ''value1''))", span="822-822"];
m68_385 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()", file="JsonSerializerInternalReader.cs", label="list.Add(new KeyValuePair<string, string>(''key2'', ''value2''))", span="823-823"];
m68_386 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()", file="JsonSerializerInternalReader.cs", label="string json = JsonConvert.SerializeObject(list)", span="825-825"];
m68_387 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(@''[{''''Key'''':''''key1'''',''''Value'''':''''value1''''},{''''Key'''':''''key2'''',''''Value'''':''''value2''''}]'', json)", span="827-827"];
m68_388 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()", file="JsonSerializerInternalReader.cs", label="List<KeyValuePair<string, string>> result = JsonConvert.DeserializeObject<List<KeyValuePair<string, string>>>(json)", span="829-829"];
m68_389 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(2, result.Count)", span="830-830"];
m68_390 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''key1'', result[0].Key)", span="831-831"];
m68_391 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''value1'', result[0].Value)", span="832-832"];
m68_392 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''key2'', result[1].Key)", span="833-833"];
m68_393 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''value2'', result[1].Value)", span="834-834"];
m68_394 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()", span="819-819"];
m68_782 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", span="1771-1771"];
m68_783 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", file="JsonSerializerInternalReader.cs", label="Article a1 = new Article(''a1'')", span="1773-1773"];
m68_784 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", file="JsonSerializerInternalReader.cs", label="Article a2 = new Article(''a2'')", span="1774-1774"];
m68_786 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", file="JsonSerializerInternalReader.cs", label="articles1.Add(a1)", span="1777-1777"];
m68_785 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", file="JsonSerializerInternalReader.cs", label="ArticleCollection articles1 = new ArticleCollection()", span="1776-1776"];
m68_787 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", file="JsonSerializerInternalReader.cs", label="articles1.Add(a2)", span="1778-1778"];
m68_788 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", file="JsonSerializerInternalReader.cs", label="string jsonText = JsonConvert.SerializeObject(articles1)", span="1780-1780"];
m68_790 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(articles1.Count, articles2.Count)", span="1784-1784"];
m68_791 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(articles1[0].Name, articles2[0].Name)", span="1785-1785"];
m68_789 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", file="JsonSerializerInternalReader.cs", label="ArticleCollection articles2 = JsonConvert.DeserializeObject<ArticleCollection>(jsonText)", span="1782-1782"];
m68_792 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", span="1771-1771"];
m68_793 [cluster="Newtonsoft.Json.Tests.TestObjects.Article.Article(string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Article.Article(string)", span="35-35"];
m68_438 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()", span="935-935"];
m68_439 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()", file="JsonSerializerInternalReader.cs", label="IDictionary<string, int?> v1 = new Dictionary<string, int?>\r\n            {\r\n                { ''First'', 1 },\r\n                { ''Second'', null },\r\n                { ''Third'', 3 }\r\n            }", span="937-942"];
m68_440 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()", file="JsonSerializerInternalReader.cs", label="string json = JsonConvert.SerializeObject(v1, Formatting.Indented)", span="944-944"];
m68_441 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()", file="JsonSerializerInternalReader.cs", label="StringAssert.AreEqual(@''{\r\n  ''''First'''': 1,\r\n  ''''Second'''': null,\r\n  ''''Third'''': 3\r\n}'', json)", span="946-950"];
m68_442 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()", file="JsonSerializerInternalReader.cs", label="IDictionary<string, int?> v2 = JsonConvert.DeserializeObject<IDictionary<string, int?>>(json)", span="952-952"];
m68_443 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(3, v2.Count)", span="953-953"];
m68_444 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(1, v2[''First''])", span="954-954"];
m68_445 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(null, v2[''Second''])", span="955-955"];
m68_446 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(3, v2[''Third''])", span="956-956"];
m68_447 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()", span="935-935"];
m68_108 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivate()", file="JsonSerializerInternalReader.cs", label="c1.Add(''zero'', 0)", span="236-236"];
m68_109 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivate()", file="JsonSerializerInternalReader.cs", label="c1.Add(''one'', 1)", span="237-237"];
m68_110 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivate()", file="JsonSerializerInternalReader.cs", label="c1.Add(''two'', 2)", span="238-238"];
m68_421 [cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonConvert.PopulateObject(string, object, Newtonsoft.Json.JsonSerializerSettings)", span="938-938"];
m68_610 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithBadItems()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithBadItems()", span="1390-1390"];
m68_611 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithBadItems()", file="JsonSerializerInternalReader.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[[1,1,1],[1,1,2]],[[1,2,1],[1,2,2]],[[2,1,1],[2,1,2]],[[2,2,1],{}]],''''After'''':''''After!''''}''", span="1392-1392"];
m68_612 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithBadItems()", file="JsonSerializerInternalReader.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<Array3D>(json), ''Unexpected token when deserializing multidimensional array: StartObject. Path 'Coordinates[3][1]', line 1, position 99.'')", span="1394-1394"];
m68_613 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithBadItems()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithBadItems()", span="1390-1390"];
m68_802 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()", span="1803-1803"];
m68_803 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()", file="JsonSerializerInternalReader.cs", label="Product p1 = new Product\r\n            {\r\n                Name = ''Product 1'',\r\n                Price = 99.95m,\r\n                ExpiryDate = new DateTime(2000, 12, 29, 0, 0, 0, DateTimeKind.Utc),\r\n            }", span="1805-1810"];
m68_804 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()", file="JsonSerializerInternalReader.cs", label="Product p2 = new Product\r\n            {\r\n                Name = ''Product 2'',\r\n                Price = 12.50m,\r\n                ExpiryDate = new DateTime(2009, 7, 31, 0, 0, 0, DateTimeKind.Utc),\r\n            }", span="1811-1816"];
m68_806 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()", file="JsonSerializerInternalReader.cs", label="products.Add(p1)", span="1819-1819"];
m68_805 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()", file="JsonSerializerInternalReader.cs", label="List<Product> products = new List<Product>()", span="1818-1818"];
m68_807 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()", file="JsonSerializerInternalReader.cs", label="products.Add(p2)", span="1820-1820"];
m68_808 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()", file="JsonSerializerInternalReader.cs", label="string json = JsonConvert.SerializeObject(products, Formatting.Indented)", span="1822-1822"];
m68_809 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()", file="JsonSerializerInternalReader.cs", label="StringAssert.AreEqual(@''[\r\n  {\r\n    ''''Name'''': ''''Product 1'''',\r\n    ''''ExpiryDate'''': ''''2000-12-29T00:00:00Z'''',\r\n    ''''Price'''': 99.95,\r\n    ''''Sizes'''': null\r\n  },\r\n  {\r\n    ''''Name'''': ''''Product 2'''',\r\n    ''''ExpiryDate'''': ''''2009-07-31T00:00:00Z'''',\r\n    ''''Price'''': 12.50,\r\n    ''''Sizes'''': null\r\n  }\r\n]'', json)", span="1838-1851"];
m68_810 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()", span="1803-1803"];
m68_14 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonSerializerInternalReader.cs", label="_binder = DefaultSerializationBinder.Instance", span="445-445"];
m68_15 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonSerializerInternalReader.cs", label="_culture = JsonSerializerSettings.DefaultCulture", span="447-447"];
m68_33 [cluster="System.Func<TResult>.Invoke()", file="JsonSerializerInternalReader.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m68_696 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", span="717-717"];
m68_300 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollection()", file="JsonSerializerInternalReader.cs", label="ReadOnlyCollection<int> list = JsonConvert.DeserializeObject<ReadOnlyCollection<int>>(''[1,2,3]'')", span="632-632"];
m68_104 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryPrivate.Create()", file="JsonSerializerInternalReader.cs", label="return new TestDictionaryPrivate();", span="228-228"];
m68_105 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryPrivate.Create()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryPrivate.Create()", span="226-226"];
m68_106 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivate()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivate()", span="233-233"];
m68_780 [cluster="Newtonsoft.Json.Tests.Serialization.NonGenericItem.NonGenericItem()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.NonGenericItem.NonGenericItem()", span="1975-1975"];
m68_223 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor()", file="JsonSerializerInternalReader.cs", label="var result = JsonConvert.DeserializeObject<EnumerableClass<int?>>(json)", span="500-500"];
m68_224 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(3, result.Count())", span="502-502"];
m68_225 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(1, result.ElementAt(0))", span="503-503"];
m68_100 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerInternalReader.cs", label="serializer._maxDepthSet = settings._maxDepthSet", span="594-594"];
m68_4 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonSerializerInternalReader.cs", label="_referenceLoopHandling = JsonSerializerSettings.DefaultReferenceLoopHandling", span="435-435"];
m68_5 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonSerializerInternalReader.cs", label="_missingMemberHandling = JsonSerializerSettings.DefaultMissingMemberHandling", span="436-436"];
m68_6 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonSerializerInternalReader.cs", label="_nullValueHandling = JsonSerializerSettings.DefaultNullValueHandling", span="437-437"];
m68_218 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="860-860"];
m68_617 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooFewItems()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooFewItems()", span="1398-1398"];
m68_618 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooFewItems()", file="JsonSerializerInternalReader.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[[1,1,1],[1,1]],[[1,2,1],[1,2,2]],[[2,1,1],[2,1,2]],[[2,2,1],[2,2,2]]],''''After'''':''''After!''''}''", span="1400-1400"];
m68_619 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooFewItems()", file="JsonSerializerInternalReader.cs", label="ExceptionAssert.Throws<Exception>(() => JsonConvert.DeserializeObject<Array3D>(json), ''Cannot deserialize non-cubical array as multidimensional array.'')", span="1402-1402"];
m68_620 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooFewItems()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooFewItems()", span="1398-1398"];
m68_434 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIList()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIList()", span="928-928"];
m68_435 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIList()", file="JsonSerializerInternalReader.cs", label="IList list = JsonConvert.DeserializeObject<IList>(''['1', 'two', 'III']'')", span="930-930"];
m68_436 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIList()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(3, list.Count)", span="931-931"];
m68_437 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIList()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIList()", span="928-928"];
m68_249 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializerInternalReader.cs", label="CultureInfo previousCulture = null", span="905-905"];
m68_250 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializerInternalReader.cs", label="_culture != null && !_culture.Equals(jsonWriter.Culture)", span="906-906"];
m68_251 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializerInternalReader.cs", label="previousCulture = jsonWriter.Culture", span="908-908"];
m68_252 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializerInternalReader.cs", label="jsonWriter.Culture = _culture", span="909-909"];
m68_253 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializerInternalReader.cs", label="string previousDateFormatString = null", span="912-912"];
m68_18 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivateParameterized()", file="JsonSerializerInternalReader.cs", label="c1.Add(0)", span="90-90"];
m68_19 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivateParameterized()", file="JsonSerializerInternalReader.cs", label="c1.Add(1)", span="91-91"];
m68_20 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivateParameterized()", file="JsonSerializerInternalReader.cs", label="c1.Add(2)", span="92-92"];
m68_154 [cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="int? previousMaxDepth", span="700-700"];
m68_240 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializerInternalReader.cs", label="jsonWriter.DateTimeZoneHandling = _dateTimeZoneHandling.Value", span="888-888"];
m68_241 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializerInternalReader.cs", label="FloatFormatHandling? previousFloatFormatHandling = null", span="891-891"];
m68_242 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializerInternalReader.cs", label="_floatFormatHandling != null && jsonWriter.FloatFormatHandling != _floatFormatHandling", span="892-892"];
m68_243 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializerInternalReader.cs", label="previousFloatFormatHandling = jsonWriter.FloatFormatHandling", span="894-894"];
m68_525 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray2D()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray2D()", span="1166-1166"];
m68_526 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray2D()", file="JsonSerializerInternalReader.cs", label="Array2D aa = new Array2D()", span="1168-1168"];
m68_527 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray2D()", file="JsonSerializerInternalReader.cs", label="aa.Before = ''Before!''", span="1169-1169"];
m68_528 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray2D()", file="JsonSerializerInternalReader.cs", label="aa.After = ''After!''", span="1170-1170"];
m68_529 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray2D()", file="JsonSerializerInternalReader.cs", label="aa.Coordinates = new[,] { { 1, 1 }, { 1, 2 }, { 2, 1 }, { 2, 2 } }", span="1171-1171"];
m68_530 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray2D()", file="JsonSerializerInternalReader.cs", label="string json = JsonConvert.SerializeObject(aa)", span="1173-1173"];
m68_531 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray2D()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(@''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2],[2,1],[2,2]],''''After'''':''''After!''''}'', json)", span="1175-1175"];
m68_532 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray2D()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray2D()", span="1166-1166"];
m68_323 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)", span="674-674"];
m68_324 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)", file="JsonSerializerInternalReader.cs", label="return _dictionary.ContainsKey(key);", span="676-676"];
m68_325 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)", span="674-674"];
m68_337 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyDictionary()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyDictionary()", span="716-716"];
m68_338 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyDictionary()", file="JsonSerializerInternalReader.cs", label="IDictionary<string, int> d = new Dictionary<string, int>\r\n            {\r\n                { ''one'', 1 },\r\n                { ''two'', 2 }\r\n            }", span="718-722"];
m68_339 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyDictionary()", file="JsonSerializerInternalReader.cs", label="CustomReadOnlyDictionary<string, int> dic = new CustomReadOnlyDictionary<string, int>(d)", span="724-724"];
m68_340 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyDictionary()", file="JsonSerializerInternalReader.cs", label="string json = JsonConvert.SerializeObject(dic, Formatting.Indented)", span="726-726"];
m68_341 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyDictionary()", file="JsonSerializerInternalReader.cs", label="StringAssert.AreEqual(@''{\r\n  ''''one'''': 1,\r\n  ''''two'''': 2\r\n}'', json)", span="727-730"];
m68_342 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyDictionary()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyDictionary()", span="716-716"];
m68_107 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="72-72"];
m68_0 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized.TestCollectionPrivateParameterized()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized.TestCollectionPrivateParameterized()", span="65-65"];
m68_1 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized.TestCollectionPrivateParameterized()", file="JsonSerializerInternalReader.cs", label="_bars = new List<int>()", span="67-67"];
m68_2 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized.TestCollectionPrivateParameterized()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized.TestCollectionPrivateParameterized()", span="65-65"];
m68_534 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3D()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3D()", span="1179-1179"];
m68_535 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3D()", file="JsonSerializerInternalReader.cs", label="Array3D aa = new Array3D()", span="1181-1181"];
m68_536 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3D()", file="JsonSerializerInternalReader.cs", label="aa.Before = ''Before!''", span="1182-1182"];
m68_537 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3D()", file="JsonSerializerInternalReader.cs", label="aa.After = ''After!''", span="1183-1183"];
m68_538 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3D()", file="JsonSerializerInternalReader.cs", label="aa.Coordinates = new[, ,] { { { 1, 1, 1 }, { 1, 1, 2 } }, { { 1, 2, 1 }, { 1, 2, 2 } }, { { 2, 1, 1 }, { 2, 1, 2 } }, { { 2, 2, 1 }, { 2, 2, 2 } } }", span="1184-1184"];
m68_539 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3D()", file="JsonSerializerInternalReader.cs", label="string json = JsonConvert.SerializeObject(aa)", span="1186-1186"];
m68_540 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3D()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(@''{''''Before'''':''''Before!'''',''''Coordinates'''':[[[1,1,1],[1,1,2]],[[1,2,1],[1,2,2]],[[2,1,1],[2,1,2]],[[2,2,1],[2,2,2]]],''''After'''':''''After!''''}'', json)", span="1188-1188"];
m68_541 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3D()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3D()", span="1179-1179"];
m68_144 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="return (T)Deserialize(reader, typeof(T));", span="676-676"];
m68_145 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", span="674-674"];
m68_852 [cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="2014-2014"];
m68_853 [cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalReader.cs", label="writer.WriteValue(value)", span="2016-2016"];
m68_854 [cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="2014-2014"];
m68_230 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializerInternalReader.cs", label="_formatting != null && jsonWriter.Formatting != _formatting", span="871-871"];
m68_143 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorNonGeneric()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorNonGeneric()", span="291-291"];
m68_176 [cluster="Newtonsoft.Json.JsonSerializer.SetupReader(Newtonsoft.Json.JsonReader, out System.Globalization.CultureInfo, out Newtonsoft.Json.DateTimeZoneHandling?, out Newtonsoft.Json.DateParseHandling?, out Newtonsoft.Json.FloatParseHandling?, out int?, out string)", file="JsonSerializerInternalReader.cs", label="reader.DateParseHandling = _dateParseHandling.Value", span="744-744"];
m68_134 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryNonGeneric.TestDictionaryNonGeneric(System.Collections.IDictionary)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryNonGeneric.TestDictionaryNonGeneric(System.Collections.IDictionary)", span="284-284"];
m68_347 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.GetEnumerator()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.GetEnumerator()", span="747-747"];
m68_348 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.GetEnumerator()", file="JsonSerializerInternalReader.cs", label="return _values.GetEnumerator();", span="749-749"];
m68_349 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.GetEnumerator()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.GetEnumerator()", span="747-747"];
m68_211 [cluster="Newtonsoft.Json.JsonSerializer.ResetReader(Newtonsoft.Json.JsonReader, System.Globalization.CultureInfo, Newtonsoft.Json.DateTimeZoneHandling?, Newtonsoft.Json.DateParseHandling?, Newtonsoft.Json.FloatParseHandling?, int?, string)", file="JsonSerializerInternalReader.cs", label="textReader != null", span="807-807"];
m68_212 [cluster="Newtonsoft.Json.JsonSerializer.ResetReader(Newtonsoft.Json.JsonReader, System.Globalization.CultureInfo, Newtonsoft.Json.DateTimeZoneHandling?, Newtonsoft.Json.DateParseHandling?, Newtonsoft.Json.FloatParseHandling?, int?, string)", file="JsonSerializerInternalReader.cs", label="textReader.NameTable = null", span="808-808"];
m68_213 [cluster="Newtonsoft.Json.JsonSerializer.ResetReader(Newtonsoft.Json.JsonReader, System.Globalization.CultureInfo, Newtonsoft.Json.DateTimeZoneHandling?, Newtonsoft.Json.DateParseHandling?, Newtonsoft.Json.FloatParseHandling?, int?, string)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.JsonSerializer.ResetReader(Newtonsoft.Json.JsonReader, System.Globalization.CultureInfo, Newtonsoft.Json.DateTimeZoneHandling?, Newtonsoft.Json.DateParseHandling?, Newtonsoft.Json.FloatParseHandling?, int?, string)", span="790-790"];
m68_129 [cluster="Newtonsoft.Json.JsonSerializer.SetupReader(Newtonsoft.Json.JsonReader, out System.Globalization.CultureInfo, out Newtonsoft.Json.DateTimeZoneHandling?, out Newtonsoft.Json.DateParseHandling?, out Newtonsoft.Json.FloatParseHandling?, out int?, out string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonSerializer.SetupReader(Newtonsoft.Json.JsonReader, out System.Globalization.CultureInfo, out Newtonsoft.Json.DateTimeZoneHandling?, out Newtonsoft.Json.DateParseHandling?, out Newtonsoft.Json.FloatParseHandling?, out int?, out string)", span="719-719"];
m68_756 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", span="839-839"];
m68_178 [cluster="Newtonsoft.Json.JsonSerializer.SetupReader(Newtonsoft.Json.JsonReader, out System.Globalization.CultureInfo, out Newtonsoft.Json.DateTimeZoneHandling?, out Newtonsoft.Json.DateParseHandling?, out Newtonsoft.Json.FloatParseHandling?, out int?, out string)", file="JsonSerializerInternalReader.cs", label="_floatParseHandling != null && reader.FloatParseHandling != _floatParseHandling", span="751-751"];
m68_277 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.TraceJsonWriter(Newtonsoft.Json.JsonWriter)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.TraceJsonWriter(Newtonsoft.Json.JsonWriter)", span="17-17"];
m68_429 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIDictionary()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIDictionary()", span="920-920"];
m68_430 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIDictionary()", file="JsonSerializerInternalReader.cs", label="IDictionary dictionary = JsonConvert.DeserializeObject<IDictionary>(''{'name':'value!'}'')", span="922-922"];
m68_431 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIDictionary()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(1, dictionary.Count)", span="923-923"];
m68_432 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIDictionary()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''value!'', dictionary[''name''])", span="924-924"];
m68_433 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIDictionary()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIDictionary()", span="920-920"];
m68_16 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonSerializerInternalReader.cs", label="_contractResolver = DefaultContractResolver.Instance", span="448-448"];
m68_17 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="433-433"];
m68_27 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", span="518-518"];
m68_28 [cluster="Newtonsoft.Json.JsonSerializer.CreateDefault()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonSerializer.CreateDefault()", span="491-491"];
m68_759 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="73-73"];
m68_255 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializerInternalReader.cs", label="previousDateFormatString = jsonWriter.DateFormatString", span="915-915"];
m68_762 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", span="1747-1747"];
m68_763 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonSerializerInternalReader.cs", label="string json", span="1749-1749"];
m68_764 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonSerializerInternalReader.cs", label="GenericClass<GenericItem<string>, string> foo1 = new GenericClass<GenericItem<string>, string>()", span="1751-1751"];
m68_765 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonSerializerInternalReader.cs", label="foo1.Items.Add(new GenericItem<string> { Value = ''Hello'' })", span="1752-1752"];
m68_766 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonSerializerInternalReader.cs", label="json = JsonConvert.SerializeObject(new { selectList = foo1 })", span="1754-1754"];
m68_767 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(@''{''''selectList'''':[{''''Value'''':''''Hello''''}]}'', json)", span="1755-1755"];
m68_768 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonSerializerInternalReader.cs", label="GenericClass<NonGenericItem, string> foo2 = new GenericClass<NonGenericItem, string>()", span="1757-1757"];
m68_769 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonSerializerInternalReader.cs", label="foo2.Items.Add(new NonGenericItem { Value = ''Hello'' })", span="1758-1758"];
m68_770 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonSerializerInternalReader.cs", label="json = JsonConvert.SerializeObject(new { selectList = foo2 })", span="1760-1760"];
m68_771 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(@''{''''selectList'''':[{''''Value'''':''''Hello''''}]}'', json)", span="1761-1761"];
m68_772 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonSerializerInternalReader.cs", label="NonGenericClass foo3 = new NonGenericClass()", span="1763-1763"];
m68_773 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonSerializerInternalReader.cs", label="foo3.Items.Add(new NonGenericItem { Value = ''Hello'' })", span="1764-1764"];
m68_774 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonSerializerInternalReader.cs", label="json = JsonConvert.SerializeObject(new { selectList = foo3 })", span="1766-1766"];
m68_775 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(@''{''''selectList'''':[{''''Value'''':''''Hello''''}]}'', json)", span="1767-1767"];
m68_776 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", span="1747-1747"];
m68_706 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", span="1656-1656"];
m68_707 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", file="JsonSerializerInternalReader.cs", label="string json = @''{''''action'''':''''Router'''',''''method'''':''''Navigate'''',''''data'''':[''''dashboard'''',[''''id'''', 1, ''''teststring'''', ''''test''''],{''''one'''':1}],''''type'''':''''rpc'''',''''tid'''':2}''", span="1658-1658"];
m68_708 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", file="JsonSerializerInternalReader.cs", label="ObjectArrayPropertyTest o = JsonConvert.DeserializeObject<ObjectArrayPropertyTest>(json)", span="1660-1660"];
m68_709 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''Router'', o.Action)", span="1662-1662"];
m68_710 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''Navigate'', o.Method)", span="1663-1663"];
m68_711 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(3, o.Data.Length)", span="1664-1664"];
m68_712 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''dashboard'', o.Data[0])", span="1665-1665"];
m68_713 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", file="JsonSerializerInternalReader.cs", label="CustomAssert.IsInstanceOfType(typeof(JArray), o.Data[1])", span="1666-1666"];
m68_714 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(4, ((JArray)o.Data[1]).Count)", span="1667-1667"];
m68_715 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", file="JsonSerializerInternalReader.cs", label="CustomAssert.IsInstanceOfType(typeof(JObject), o.Data[2])", span="1668-1668"];
m68_716 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(1, ((JObject)o.Data[2]).Count)", span="1669-1669"];
m68_717 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(1, (int)((JObject)o.Data[2])[''one''])", span="1670-1670"];
m68_718 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", span="1656-1656"];
m68_684 [cluster="Newtonsoft.Json.Tests.TestObjects.Event1.Event1()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Event1.Event1()", span="31-31"];
m68_419 [cluster="Newtonsoft.Json.Tests.TestObjects.Movie.Movie()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Movie.Movie()", span="30-30"];
m68_685 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", span="570-570"];
m68_177 [cluster="Newtonsoft.Json.JsonSerializer.SetupReader(Newtonsoft.Json.JsonReader, out System.Globalization.CultureInfo, out Newtonsoft.Json.DateTimeZoneHandling?, out Newtonsoft.Json.DateParseHandling?, out Newtonsoft.Json.FloatParseHandling?, out int?, out string)", file="JsonSerializerInternalReader.cs", label="previousDateParseHandling = null", span="748-748"];
m68_88 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerInternalReader.cs", label="serializer._dateFormatString = settings._dateFormatString", span="580-580"];
m68_89 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerInternalReader.cs", label="serializer._dateFormatStringSet = settings._dateFormatStringSet", span="581-581"];
m68_90 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerInternalReader.cs", label="settings._floatFormatHandling != null", span="583-583"];
m68_91 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerInternalReader.cs", label="serializer._floatFormatHandling = settings._floatFormatHandling", span="584-584"];
m68_92 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerInternalReader.cs", label="settings._floatParseHandling != null", span="585-585"];
m68_93 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerInternalReader.cs", label="serializer._floatParseHandling = settings._floatParseHandling", span="586-586"];
m68_94 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerInternalReader.cs", label="settings._stringEscapeHandling != null", span="587-587"];
m68_95 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerInternalReader.cs", label="serializer._stringEscapeHandling = settings._stringEscapeHandling", span="588-588"];
m68_96 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerInternalReader.cs", label="settings._culture != null", span="589-589"];
m68_97 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerInternalReader.cs", label="serializer._culture = settings._culture", span="590-590"];
m68_98 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerInternalReader.cs", label="settings._maxDepthSet", span="591-591"];
m68_99 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerInternalReader.cs", label="serializer._maxDepth = settings._maxDepth", span="593-593"];
m68_222 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", span="865-865"];
m68_226 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializerInternalReader.cs", label="SerializeInternal(jsonWriter, value, null)", span="862-862"];
m68_227 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="860-860"];
m68_228 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializerInternalReader.cs", label="ValidationUtils.ArgumentNotNull(jsonWriter, ''jsonWriter'')", span="867-867"];
m68_564 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()", span="1327-1327"];
m68_565 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()", file="JsonSerializerInternalReader.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2],[2,1],[2,2]],''''After'''':''''After!''''}''", span="1329-1329"];
m68_566 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()", file="JsonSerializerInternalReader.cs", label="Array2D aa = JsonConvert.DeserializeObject<Array2D>(json)", span="1331-1331"];
m68_574 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(json, after)", span="1342-1342"];
m68_567 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''Before!'', aa.Before)", span="1333-1333"];
m68_568 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''After!'', aa.After)", span="1334-1334"];
m68_569 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(4, aa.Coordinates.GetLength(0))", span="1335-1335"];
m68_570 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(2, aa.Coordinates.GetLength(1))", span="1336-1336"];
m68_571 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(1, aa.Coordinates[0, 0])", span="1337-1337"];
m68_572 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(2, aa.Coordinates[1, 1])", span="1338-1338"];
m68_573 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()", file="JsonSerializerInternalReader.cs", label="string after = JsonConvert.SerializeObject(aa)", span="1340-1340"];
m68_575 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()", span="1327-1327"];
m68_777 [cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GenericClass()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GenericClass()", span="1984-1984"];
m68_841 [cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GenericClass()", file="JsonSerializerInternalReader.cs", label="Items = new List<T>()", span="1986-1986"];
m68_842 [cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GenericClass()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GenericClass()", span="1984-1984"];
m68_350 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.System.Collections.IEnumerable.GetEnumerator()", span="752-752"];
m68_351 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerInternalReader.cs", label="return _values.GetEnumerator();", span="754-754"];
m68_352 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.System.Collections.IEnumerable.GetEnumerator()", span="752-752"];
m68_866 [cluster="Newtonsoft.Json.JsonReader.Read()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonReader.Read()", span="405-405"];
m68_837 [cluster="System.Collections.Generic.List<T>.GetEnumerator()", file="JsonSerializerInternalReader.cs", label="Entry System.Collections.Generic.List<T>.GetEnumerator()", span="0-0"];
m68_411 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringListAppenderConverterTest()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringListAppenderConverterTest()", span="890-890"];
m68_412 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringListAppenderConverterTest()", file="JsonSerializerInternalReader.cs", label="Movie p = new Movie()", span="892-892"];
m68_413 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringListAppenderConverterTest()", file="JsonSerializerInternalReader.cs", label="p.ReleaseCountries = new List<string> { ''Existing'' }", span="893-893"];
m68_414 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringListAppenderConverterTest()", file="JsonSerializerInternalReader.cs", label="JsonConvert.PopulateObject(''{'ReleaseCountries':['Appended']}'', p, new JsonSerializerSettings\r\n            {\r\n                Converters = new List<JsonConverter> { new StringListAppenderConverter() }\r\n            })", span="895-898"];
m68_415 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringListAppenderConverterTest()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(2, p.ReleaseCountries.Count)", span="900-900"];
m68_416 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringListAppenderConverterTest()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''Existing'', p.ReleaseCountries[0])", span="901-901"];
m68_417 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringListAppenderConverterTest()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''Appended'', p.ReleaseCountries[1])", span="902-902"];
m68_418 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringListAppenderConverterTest()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringListAppenderConverterTest()", span="890-890"];
m68_422 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringAppenderConverterTest()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringAppenderConverterTest()", span="906-906"];
m68_423 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringAppenderConverterTest()", file="JsonSerializerInternalReader.cs", label="Movie p = new Movie()", span="908-908"];
m68_424 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringAppenderConverterTest()", file="JsonSerializerInternalReader.cs", label="p.Name = ''Existing,''", span="909-909"];
m68_425 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringAppenderConverterTest()", file="JsonSerializerInternalReader.cs", label="JsonConvert.PopulateObject(''{'Name':'Appended'}'', p, new JsonSerializerSettings\r\n            {\r\n                Converters = new List<JsonConverter> { new StringAppenderConverter() }\r\n            })", span="911-914"];
m68_426 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringAppenderConverterTest()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''Existing,Appended'', p.Name)", span="916-916"];
m68_427 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringAppenderConverterTest()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringAppenderConverterTest()", span="906-906"];
m68_686 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeTypeName3DArray()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeTypeName3DArray()", span="1541-1541"];
m68_687 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeTypeName3DArray()", file="JsonSerializerInternalReader.cs", label="Event1 e1 = new Event1\r\n            {\r\n                EventName = ''EventName!''\r\n            }", span="1543-1546"];
m68_688 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeTypeName3DArray()", file="JsonSerializerInternalReader.cs", label="Event1[,] array1 = new[,] { { e1, e1 }, { e1, e1 } }", span="1547-1547"];
m68_689 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeTypeName3DArray()", file="JsonSerializerInternalReader.cs", label="IList<Event1[,]> values1 = new List<Event1[,]>\r\n            {\r\n                array1,\r\n                array1\r\n            }", span="1548-1552"];
m68_690 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeTypeName3DArray()", file="JsonSerializerInternalReader.cs", label="string json = JsonConvert.SerializeObject(values1, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.All,\r\n                Formatting = Formatting.Indented\r\n            })", span="1554-1558"];
m68_691 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeTypeName3DArray()", file="JsonSerializerInternalReader.cs", label="StringAssert.AreEqual(@''{\r\n  ''''$type'''': ''''System.Collections.Generic.List`1[[Newtonsoft.Json.Tests.TestObjects.Event1[,], Newtonsoft.Json.Tests]], mscorlib'''',\r\n  ''''$values'''': [\r\n    {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Event1[,], Newtonsoft.Json.Tests'''',\r\n      ''''$values'''': [\r\n        [\r\n          {\r\n            ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Event1, Newtonsoft.Json.Tests'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          },\r\n          {\r\n            ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Event1, Newtonsoft.Json.Tests'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          }\r\n        ],\r\n        [\r\n          {\r\n            ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Event1, Newtonsoft.Json.Tests'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          },\r\n          {\r\n            ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Event1, Newtonsoft.Json.Tests'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          }\r\n        ]\r\n      ]\r\n    },\r\n    {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Event1[,], Newtonsoft.Json.Tests'''',\r\n      ''''$values'''': [\r\n        [\r\n          {\r\n            ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Event1, Newtonsoft.Json.Tests'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          },\r\n          {\r\n            ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Event1, Newtonsoft.Json.Tests'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          }\r\n        ],\r\n        [\r\n          {\r\n            ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Event1, Newtonsoft.Json.Tests'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          },\r\n          {\r\n            ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Event1, Newtonsoft.Json.Tests'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          }\r\n        ]\r\n      ]\r\n    }\r\n  ]\r\n}'', json)", span="1560-1630"];
m68_692 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeTypeName3DArray()", file="JsonSerializerInternalReader.cs", label="IList<Event1[,]> values2 = (IList<Event1[,]>)JsonConvert.DeserializeObject(json, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.All\r\n            })", span="1632-1635"];
m68_693 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeTypeName3DArray()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(2, values2.Count)", span="1637-1637"];
m68_694 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeTypeName3DArray()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''EventName!'', values2[0][0, 0].EventName)", span="1638-1638"];
m68_695 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeTypeName3DArray()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeTypeName3DArray()", span="1541-1541"];
m68_179 [cluster="Newtonsoft.Json.JsonSerializer.SetupReader(Newtonsoft.Json.JsonReader, out System.Globalization.CultureInfo, out Newtonsoft.Json.DateTimeZoneHandling?, out Newtonsoft.Json.DateParseHandling?, out Newtonsoft.Json.FloatParseHandling?, out int?, out string)", file="JsonSerializerInternalReader.cs", label="previousFloatParseHandling = reader.FloatParseHandling", span="753-753"];
m68_757 [cluster="System.IO.StringWriter.GetStringBuilder()", file="JsonSerializerInternalReader.cs", label="Entry System.IO.StringWriter.GetStringBuilder()", span="0-0"];
m68_136 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", span="650-650"];
m68_137 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="return Deserialize(reader, null);", span="652-652"];
m68_138 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", span="650-650"];
m68_3 [cluster="System.Collections.Generic.List<T>.List()", file="JsonSerializerInternalReader.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m68_754 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="445-445"];
m68_8 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized.Add(int)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized.Add(int)", span="76-76"];
m68_9 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized.Add(int)", file="JsonSerializerInternalReader.cs", label="_bars.Add(bar)", span="78-78"];
m68_10 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized.Add(int)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized.Add(int)", span="76-76"];
m68_11 [cluster="System.Collections.Generic.List<T>.Add(T)", file="JsonSerializerInternalReader.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m68_12 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized.GetEnumerator()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized.GetEnumerator()", span="81-81"];
m68_13 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized.GetEnumerator()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized.GetEnumerator()", span="81-81"];
m68_31 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="JsonSerializerInternalReader.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m68_30 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="739-739"];
m68_29 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="512-512"];
m68_32 [cluster="Unk.AreEqual", file="JsonSerializerInternalReader.cs", label="Entry Unk.AreEqual", span=""];
m68_40 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerInternalReader.cs", label="!CollectionUtils.IsNullOrEmpty(settings.Converters)", span="520-520"];
m68_41 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerInternalReader.cs", label="int i = 0", span="524-524"];
m68_42 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerInternalReader.cs", label="i < settings.Converters.Count", span="524-524"];
m68_43 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerInternalReader.cs", label="serializer.Converters.Insert(i, settings.Converters[i])", span="526-526"];
m68_44 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerInternalReader.cs", label="i++", span="524-524"];
m68_45 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerInternalReader.cs", label="settings._typeNameHandling != null", span="531-531"];
m68_46 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerInternalReader.cs", label="serializer.TypeNameHandling = settings.TypeNameHandling", span="532-532"];
m68_47 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerInternalReader.cs", label="settings._metadataPropertyHandling != null", span="533-533"];
m68_48 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerInternalReader.cs", label="serializer.MetadataPropertyHandling = settings.MetadataPropertyHandling", span="534-534"];
m68_49 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerInternalReader.cs", label="settings._typeNameAssemblyFormat != null", span="535-535"];
m68_50 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerInternalReader.cs", label="serializer.TypeNameAssemblyFormat = settings.TypeNameAssemblyFormat", span="536-536"];
m68_742 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomCollectionSerialization()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomCollectionSerialization()", span="1722-1722"];
m68_743 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomCollectionSerialization()", file="JsonSerializerInternalReader.cs", label="ProductCollection collection = new ProductCollection()\r\n            {\r\n                new Product() { Name = ''Test1'' },\r\n                new Product() { Name = ''Test2'' },\r\n                new Product() { Name = ''Test3'' }\r\n            }", span="1724-1729"];
m68_744 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomCollectionSerialization()", file="JsonSerializerInternalReader.cs", label="JsonSerializer jsonSerializer = new JsonSerializer()", span="1731-1731"];
m68_747 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomCollectionSerialization()", file="JsonSerializerInternalReader.cs", label="jsonSerializer.Serialize(sw, collection)", span="1736-1736"];
m68_750 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomCollectionSerialization()", file="JsonSerializerInternalReader.cs", label="CollectionAssert.AreEqual(collection, collectionNew)", span="1743-1743"];
m68_745 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomCollectionSerialization()", file="JsonSerializerInternalReader.cs", label="jsonSerializer.ReferenceLoopHandling = ReferenceLoopHandling.Ignore", span="1732-1732"];
m68_749 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomCollectionSerialization()", file="JsonSerializerInternalReader.cs", label="ProductCollection collectionNew = (ProductCollection)jsonSerializer.Deserialize(new JsonTextReader(new StringReader(sw.GetStringBuilder().ToString())), typeof(ProductCollection))", span="1741-1741"];
m68_746 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomCollectionSerialization()", file="JsonSerializerInternalReader.cs", label="StringWriter sw = new StringWriter()", span="1734-1734"];
m68_748 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomCollectionSerialization()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(@''[{''''Name'''':''''Test1'''',''''ExpiryDate'''':''''2000-01-01T00:00:00Z'''',''''Price'''':0.0,''''Sizes'''':null},{''''Name'''':''''Test2'''',''''ExpiryDate'''':''''2000-01-01T00:00:00Z'''',''''Price'''':0.0,''''Sizes'''':null},{''''Name'''':''''Test3'''',''''ExpiryDate'''':''''2000-01-01T00:00:00Z'''',''''Price'''':0.0,''''Sizes'''':null}]'',\r\n                sw.GetStringBuilder().ToString())", span="1738-1739"];
m68_751 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomCollectionSerialization()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomCollectionSerialization()", span="1722-1722"];
m68_334 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator()", span="709-709"];
m68_335 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerInternalReader.cs", label="return _dictionary.GetEnumerator();", span="711-711"];
m68_336 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator()", span="709-709"];
m68_624 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeEmpty3DArray()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeEmpty3DArray()", span="1406-1406"];
m68_625 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeEmpty3DArray()", file="JsonSerializerInternalReader.cs", label="Array3D aa = new Array3D()", span="1408-1408"];
m68_626 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeEmpty3DArray()", file="JsonSerializerInternalReader.cs", label="aa.Before = ''Before!''", span="1409-1409"];
m68_627 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeEmpty3DArray()", file="JsonSerializerInternalReader.cs", label="aa.After = ''After!''", span="1410-1410"];
m68_628 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeEmpty3DArray()", file="JsonSerializerInternalReader.cs", label="aa.Coordinates = new int[0, 0, 0]", span="1411-1411"];
m68_629 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeEmpty3DArray()", file="JsonSerializerInternalReader.cs", label="string json = JsonConvert.SerializeObject(aa)", span="1413-1413"];
m68_630 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeEmpty3DArray()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(@''{''''Before'''':''''Before!'''',''''Coordinates'''':[],''''After'''':''''After!''''}'', json)", span="1415-1415"];
m68_631 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeEmpty3DArray()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeEmpty3DArray()", span="1406-1406"];
m68_428 [cluster="Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.StringAppenderConverter()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.StringAppenderConverter()", span="2043-2043"];
m68_552 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()", span="1258-1258"];
m68_553 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()", file="JsonSerializerInternalReader.cs", label="string json = @''{\r\n  ''''Before'''': ''''Before!'''',\r\n  ''''Coordinates'''': [\r\n    [\r\n      [\r\n        1.0,\r\n        1.0,\r\n        1.0\r\n      ],\r\n      [\r\n        1.0,\r\n        1.0,\r\n        2.0\r\n      ]\r\n    ],\r\n    [\r\n      [\r\n        1.0,\r\n        2.0,\r\n        1.0\r\n      ],\r\n      [\r\n        1.0,\r\n        2.0,\r\n        2.0\r\n      ]\r\n    ],\r\n    [\r\n      [\r\n        2.0,\r\n        1.0,\r\n        1.0\r\n      ],\r\n      [\r\n        2.0,\r\n        1.0,\r\n        2.0\r\n      ]\r\n    ],\r\n    [\r\n      [\r\n        2.0,\r\n        2.0,\r\n        1.0\r\n      ],\r\n      [\r\n        2.0,\r\n        2.0,\r\n        2.0\r\n      ]\r\n    ]\r\n  ],\r\n  ''''After'''': ''''After!''''\r\n}''", span="1260-1313"];
m68_554 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()", file="JsonSerializerInternalReader.cs", label="Array3DWithConverter aa = JsonConvert.DeserializeObject<Array3DWithConverter>(json)", span="1315-1315"];
m68_555 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''Before!'', aa.Before)", span="1317-1317"];
m68_556 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''After!'', aa.After)", span="1318-1318"];
m68_557 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(4, aa.Coordinates.GetLength(0))", span="1319-1319"];
m68_558 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(2, aa.Coordinates.GetLength(1))", span="1320-1320"];
m68_559 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(3, aa.Coordinates.GetLength(2))", span="1321-1321"];
m68_560 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(1, aa.Coordinates[0, 0, 0])", span="1322-1322"];
m68_561 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(2, aa.Coordinates[1, 1, 1])", span="1323-1323"];
m68_562 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()", span="1258-1258"];
m68_343 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JsonSerializerInternalReader.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m68_448 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()", span="961-961"];
m68_449 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()", file="JsonSerializerInternalReader.cs", label="IDictionary<string, TestObjects.Component> components = new Dictionary<string, TestObjects.Component>\r\n            {\r\n                { ''Key!'', new TestObjects.Component() }\r\n            }", span="963-966"];
m68_451 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()", file="JsonSerializerInternalReader.cs", label="string originalJson = JsonConvert.SerializeObject(go, Formatting.Indented)", span="974-974"];
m68_452 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()", file="JsonSerializerInternalReader.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Components'''': {\r\n    ''''Key!'''': {}\r\n  },\r\n  ''''Id'''': ''''Id!'''',\r\n  ''''Name'''': ''''Name!''''\r\n}'', originalJson)", span="976-982"];
m68_453 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()", file="JsonSerializerInternalReader.cs", label="GameObject newObject = JsonConvert.DeserializeObject<GameObject>(originalJson)", span="984-984"];
m68_454 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(1, newObject.Components.Count)", span="986-986"];
m68_455 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''Id!'', newObject.Id)", span="987-987"];
m68_456 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''Name!'', newObject.Name)", span="988-988"];
m68_457 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()", span="961-961"];
m68_458 [cluster="Newtonsoft.Json.Tests.TestObjects.Component.Component()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Component.Component()", span="34-34"];
m68_135 [cluster="Newtonsoft.Json.JsonSerializer.ResetReader(Newtonsoft.Json.JsonReader, System.Globalization.CultureInfo, Newtonsoft.Json.DateTimeZoneHandling?, Newtonsoft.Json.DateParseHandling?, Newtonsoft.Json.FloatParseHandling?, int?, string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonSerializer.ResetReader(Newtonsoft.Json.JsonReader, System.Globalization.CultureInfo, Newtonsoft.Json.DateTimeZoneHandling?, Newtonsoft.Json.DateParseHandling?, Newtonsoft.Json.FloatParseHandling?, int?, string)", span="790-790"];
m68_153 [cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="FloatParseHandling? previousFloatParseHandling", span="699-699"];
m68_166 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="525-525"];
m68_168 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedArray()", file="JsonSerializerInternalReader.cs", label="var onebasedArray = Array.CreateInstance(typeof(string), new[] { 3 }, new[] { 2 })", span="372-372"];
m68_170 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedArray()", file="JsonSerializerInternalReader.cs", label="i <= onebasedArray.GetUpperBound(0)", span="374-374"];
m68_172 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedArray()", file="JsonSerializerInternalReader.cs", label="i++", span="374-374"];
m68_174 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedArray()", file="JsonSerializerInternalReader.cs", label="StringAssert.AreEqual(@''[\r\n  ''''2'''',\r\n  ''''3'''',\r\n  ''''4''''\r\n]'', output)", span="381-385"];
m68_180 [cluster="System.Array.SetValue(object, params int[])", file="JsonSerializerInternalReader.cs", label="Entry System.Array.SetValue(object, params int[])", span="0-0"];
m68_182 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedMultiArray()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedMultiArray()", span="389-389"];
m68_184 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedMultiArray()", file="JsonSerializerInternalReader.cs", label="var i = onebasedArray.GetLowerBound(0)", span="395-395"];
m68_186 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedMultiArray()", file="JsonSerializerInternalReader.cs", label="var j = onebasedArray.GetLowerBound(1)", span="397-397"];
m68_188 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedMultiArray()", file="JsonSerializerInternalReader.cs", label="onebasedArray.SetValue(i + ''_'' + j, new[] { i, j })", span="399-399"];
m68_192 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedMultiArray()", file="JsonSerializerInternalReader.cs", label="StringAssert.AreEqual(@''[\r\n  [\r\n    ''''1_2'''',\r\n    ''''1_3'''',\r\n    ''''1_4''''\r\n  ],\r\n  [\r\n    ''''2_2'''',\r\n    ''''2_3'''',\r\n    ''''2_4''''\r\n  ],\r\n  [\r\n    ''''3_2'''',\r\n    ''''3_3'''',\r\n    ''''3_4''''\r\n  ]\r\n]'', output)", span="406-422"];
m68_167 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedArray()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedArray()", span="370-370"];
m68_169 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedArray()", file="JsonSerializerInternalReader.cs", label="var i = onebasedArray.GetLowerBound(0)", span="374-374"];
m68_171 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedArray()", file="JsonSerializerInternalReader.cs", label="onebasedArray.SetValue(i.ToString(CultureInfo.InvariantCulture), new[] { i, })", span="376-376"];
m68_173 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedArray()", file="JsonSerializerInternalReader.cs", label="string output = JsonConvert.SerializeObject(onebasedArray, Formatting.Indented)", span="379-379"];
m68_175 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedArray()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedArray()", span="370-370"];
m68_181 [cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="331-331"];
m68_183 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedMultiArray()", file="JsonSerializerInternalReader.cs", label="var onebasedArray = Array.CreateInstance(typeof(string), new[] { 3, 3 }, new[] { 1, 2 })", span="392-392"];
m68_185 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedMultiArray()", file="JsonSerializerInternalReader.cs", label="i <= onebasedArray.GetUpperBound(0)", span="395-395"];
m68_187 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedMultiArray()", file="JsonSerializerInternalReader.cs", label="j <= onebasedArray.GetUpperBound(1)", span="397-397"];
m68_189 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedMultiArray()", file="JsonSerializerInternalReader.cs", label="j++", span="397-397"];
m68_190 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedMultiArray()", file="JsonSerializerInternalReader.cs", label="i++", span="395-395"];
m68_191 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedMultiArray()", file="JsonSerializerInternalReader.cs", label="string output = JsonConvert.SerializeObject(onebasedArray, Formatting.Indented)", span="404-404"];
m68_193 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedMultiArray()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedMultiArray()", span="389-389"];
m68_194 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", span="426-426"];
m68_195 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="JsonSerializerInternalReader.cs", label="object[,] myOtherArray =\r\n            {\r\n                { new KeyValuePair<string, double>(''my value'', 0.8), ''foobar'' },\r\n                { true, 0.4d },\r\n                { 0.05f, 6 }\r\n            }", span="428-433"];
m68_320 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.CustomReadOnlyDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.CustomReadOnlyDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="669-669"];
m68_321 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.CustomReadOnlyDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="JsonSerializerInternalReader.cs", label="_dictionary = dictionary", span="671-671"];
m68_322 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.CustomReadOnlyDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.CustomReadOnlyDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="669-669"];
m68_495 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", span="1055-1055"];
m68_496 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonSerializerInternalReader.cs", label="NonReadOnlyList = new List<int> { 1 }", span="1057-1057"];
m68_497 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonSerializerInternalReader.cs", label="NonReadOnlyDictionary = new Dictionary<string, int> { { ''first'', 2 } }", span="1058-1058"];
m68_498 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonSerializerInternalReader.cs", label="Array = new[] { 3 }", span="1060-1060"];
m68_499 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonSerializerInternalReader.cs", label="List = new ReadOnlyCollection<int>(new[] { 4 })", span="1062-1062"];
m68_500 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonSerializerInternalReader.cs", label="Dictionary = new ReadOnlyDictionary<string, int>(new Dictionary<string, int> { { ''first'', 5 } })", span="1063-1063"];
m68_501 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonSerializerInternalReader.cs", label="IReadOnlyCollection = new ReadOnlyCollection<int>(new[] { 6 })", span="1065-1065"];
m68_502 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonSerializerInternalReader.cs", label="ReadOnlyCollection = new ReadOnlyCollection<int>(new[] { 7 })", span="1066-1066"];
m68_503 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonSerializerInternalReader.cs", label="IReadOnlyList = new ReadOnlyCollection<int>(new[] { 8 })", span="1067-1067"];
m68_504 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonSerializerInternalReader.cs", label="IReadOnlyDictionary = new ReadOnlyDictionary<string, int>(new Dictionary<string, int> { { ''first'', 9 } })", span="1069-1069"];
m68_505 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonSerializerInternalReader.cs", label="ReadOnlyDictionary = new ReadOnlyDictionary<string, int>(new Dictionary<string, int> { { ''first'', 10 } })", span="1070-1070"];
m68_506 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", span="1055-1055"];
m68_583 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D_WithTooFewItems()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D_WithTooFewItems()", span="1354-1354"];
m68_584 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D_WithTooFewItems()", file="JsonSerializerInternalReader.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1],[2,1],[2,2]],''''After'''':''''After!''''}''", span="1356-1356"];
m68_586 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D_WithTooFewItems()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D_WithTooFewItems()", span="1354-1354"];
m68_794 [cluster="Newtonsoft.Json.Tests.TestObjects.ArticleCollection.ArticleCollection()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ArticleCollection.ArticleCollection()", span="29-29"];
m68_395 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", span="838-838"];
m68_396 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", file="JsonSerializerInternalReader.cs", label="DateTime dateTime = new DateTime(2000, 12, 1, 23, 1, 1, DateTimeKind.Utc)", span="840-840"];
m68_397 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", file="JsonSerializerInternalReader.cs", label="List<KeyValuePair<string, WagePerson>> list = new List<KeyValuePair<string, WagePerson>>()", span="842-842"];
m68_398 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", file="JsonSerializerInternalReader.cs", label="list.Add(new KeyValuePair<string, WagePerson>(''key1'', new WagePerson\r\n            {\r\n                BirthDate = dateTime,\r\n                Department = ''Department1'',\r\n                LastModified = dateTime,\r\n                HourlyWage = 1\r\n            }))", span="843-849"];
m68_399 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", file="JsonSerializerInternalReader.cs", label="list.Add(new KeyValuePair<string, WagePerson>(''key2'', new WagePerson\r\n            {\r\n                BirthDate = dateTime,\r\n                Department = ''Department2'',\r\n                LastModified = dateTime,\r\n                HourlyWage = 2\r\n            }))", span="850-856"];
m68_400 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", file="JsonSerializerInternalReader.cs", label="string json = JsonConvert.SerializeObject(list, Formatting.Indented)", span="858-858"];
m68_401 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", file="JsonSerializerInternalReader.cs", label="StringAssert.AreEqual(@''[\r\n  {\r\n    ''''Key'''': ''''key1'''',\r\n    ''''Value'''': {\r\n      ''''HourlyWage'''': 1.0,\r\n      ''''Name'''': null,\r\n      ''''BirthDate'''': ''''2000-12-01T23:01:01Z'''',\r\n      ''''LastModified'''': ''''2000-12-01T23:01:01Z''''\r\n    }\r\n  },\r\n  {\r\n    ''''Key'''': ''''key2'''',\r\n    ''''Value'''': {\r\n      ''''HourlyWage'''': 2.0,\r\n      ''''Name'''': null,\r\n      ''''BirthDate'''': ''''2000-12-01T23:01:01Z'''',\r\n      ''''LastModified'''': ''''2000-12-01T23:01:01Z''''\r\n    }\r\n  }\r\n]'', json)", span="860-879"];
m68_402 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", file="JsonSerializerInternalReader.cs", label="List<KeyValuePair<string, WagePerson>> result = JsonConvert.DeserializeObject<List<KeyValuePair<string, WagePerson>>>(json)", span="881-881"];
m68_403 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(2, result.Count)", span="882-882"];
m68_404 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''key1'', result[0].Key)", span="883-883"];
m68_405 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(1, result[0].Value.HourlyWage)", span="884-884"];
m68_406 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''key2'', result[1].Key)", span="885-885"];
m68_407 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(2, result[1].Value.HourlyWage)", span="886-886"];
m68_408 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", span="838-838"];
m68_264 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializerInternalReader.cs", label="previousDateFormatHandling != null", span="932-932"];
m68_265 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializerInternalReader.cs", label="jsonWriter.DateFormatHandling = previousDateFormatHandling.Value", span="933-933"];
m68_266 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializerInternalReader.cs", label="previousDateTimeZoneHandling != null", span="934-934"];
m68_267 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializerInternalReader.cs", label="jsonWriter.DateTimeZoneHandling = previousDateTimeZoneHandling.Value", span="935-935"];
m68_268 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializerInternalReader.cs", label="previousFloatFormatHandling != null", span="936-936"];
m68_269 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializerInternalReader.cs", label="jsonWriter.FloatFormatHandling = previousFloatFormatHandling.Value", span="937-937"];
m68_270 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializerInternalReader.cs", label="previousStringEscapeHandling != null", span="938-938"];
m68_811 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeGenericList()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeGenericList()", span="1855-1855"];
m68_812 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeGenericList()", file="JsonSerializerInternalReader.cs", label="string json = @''[\r\n        {\r\n          ''''Name'''': ''''Product 1'''',\r\n          ''''ExpiryDate'''': ''''\/Date(978048000000)\/'''',\r\n          ''''Price'''': 99.95,\r\n          ''''Sizes'''': null\r\n        },\r\n        {\r\n          ''''Name'''': ''''Product 2'''',\r\n          ''''ExpiryDate'''': ''''\/Date(1248998400000)\/'''',\r\n          ''''Price'''': 12.50,\r\n          ''''Sizes'''': null\r\n        }\r\n      ]''", span="1857-1870"];
m68_813 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeGenericList()", file="JsonSerializerInternalReader.cs", label="List<Product> products = JsonConvert.DeserializeObject<List<Product>>(json)", span="1872-1872"];
m68_814 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeGenericList()", file="JsonSerializerInternalReader.cs", label="Product p1 = products[0]", span="1874-1874"];
m68_815 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeGenericList()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(2, products.Count)", span="1876-1876"];
m68_816 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeGenericList()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''Product 1'', p1.Name)", span="1877-1877"];
m68_817 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeGenericList()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeGenericList()", span="1855-1855"];
m68_326 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="JsonSerializerInternalReader.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m68_779 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="JsonSerializerInternalReader.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m68_818 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyIntegerList()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyIntegerList()", span="1882-1882"];
m68_819 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyIntegerList()", file="JsonSerializerInternalReader.cs", label="ReadOnlyIntegerList l = new ReadOnlyIntegerList(new List<int>\r\n            {\r\n                1,\r\n                2,\r\n                3,\r\n                int.MaxValue\r\n            })", span="1884-1890"];
m68_820 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyIntegerList()", file="JsonSerializerInternalReader.cs", label="string json = JsonConvert.SerializeObject(l, Formatting.Indented)", span="1892-1892"];
m68_821 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyIntegerList()", file="JsonSerializerInternalReader.cs", label="StringAssert.AreEqual(@''[\r\n  1,\r\n  2,\r\n  3,\r\n  2147483647\r\n]'', json)", span="1894-1899"];
m68_822 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyIntegerList()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyIntegerList()", span="1882-1882"];
m68_68 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerInternalReader.cs", label="serializer._checkAdditionalContent = settings._checkAdditionalContent", span="554-554"];
m68_69 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerInternalReader.cs", label="settings.Error != null", span="556-556"];
m68_62 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerInternalReader.cs", label="serializer.DefaultValueHandling = settings.DefaultValueHandling", span="548-548"];
m68_63 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerInternalReader.cs", label="settings._constructorHandling != null", span="549-549"];
m68_64 [cluster="Newtonsoft.Json.JsonSerializer.ApplySerializerSettings(Newtonsoft.Json.JsonSerializer, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerInternalReader.cs", label="serializer.ConstructorHandling = settings.ConstructorHandling", span="550-550"];
m68_632 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()", span="1419-1419"];
m68_633 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()", file="JsonSerializerInternalReader.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[],''''After'''':''''After!''''}''", span="1421-1421"];
m68_634 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()", file="JsonSerializerInternalReader.cs", label="Array3D aa = JsonConvert.DeserializeObject<Array3D>(json)", span="1423-1423"];
m68_641 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(json, after)", span="1433-1433"];
m68_635 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''Before!'', aa.Before)", span="1425-1425"];
m68_636 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''After!'', aa.After)", span="1426-1426"];
m68_637 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(0, aa.Coordinates.GetLength(0))", span="1427-1427"];
m68_638 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(0, aa.Coordinates.GetLength(1))", span="1428-1428"];
m68_639 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(0, aa.Coordinates.GetLength(2))", span="1429-1429"];
m68_640 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()", file="JsonSerializerInternalReader.cs", label="string after = JsonConvert.SerializeObject(aa)", span="1431-1431"];
m68_642 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()", span="1419-1419"];
m68_327 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="684-684"];
m68_328 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="JsonSerializerInternalReader.cs", label="return _dictionary.TryGetValue(key, out value);", span="686-686"];
m68_329 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="684-684"];
m68_460 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>)", file="JsonSerializerInternalReader.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>)", span="0-0"];
m68_217 [cluster="System.Collections.Generic.IEnumerable<T>.GetEnumerator()", file="JsonSerializerInternalReader.cs", label="Entry System.Collections.Generic.IEnumerable<T>.GetEnumerator()", span="0-0"];
m68_77 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorNonGeneric()", color=green, community=0, file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorNonGeneric()", prediction=21, span="178-178"];
m68_75 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorNonGeneric()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(2, l[1])", span="185-185"];
m68_76 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorNonGeneric()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(3, l[2])", span="186-186"];
m68_80 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryPrivateParameterized.TestDictionaryPrivateParameterized(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, int>>)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryPrivateParameterized.TestDictionaryPrivateParameterized(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, int>>)", span="197-197"];
m68_81 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryPrivateParameterized.TestDictionaryPrivateParameterized(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, int>>)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryPrivateParameterized.TestDictionaryPrivateParameterized(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, int>>)", span="197-197"];
m68_56 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="358-358"];
m68_57 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Entry lambda expression", span="147-147"];
m68_58 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="JsonConvert.SerializeObject(new TestCollectionMultipleParameters(null, null))", span="147-147"];
m68_59 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Exit lambda expression", span="147-147"];
m68_60 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionBadIEnumerableParameter.TestCollectionBadIEnumerableParameter(System.Collections.Generic.List<string>)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionBadIEnumerableParameter.TestCollectionBadIEnumerableParameter(System.Collections.Generic.List<string>)", span="154-154"];
m68_61 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionBadIEnumerableParameter.TestCollectionBadIEnumerableParameter(System.Collections.Generic.List<string>)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionBadIEnumerableParameter.TestCollectionBadIEnumerableParameter(System.Collections.Generic.List<string>)", span="154-154"];
m68_65 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Entry lambda expression", span="163-163"];
m68_66 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="JsonConvert.SerializeObject(new TestCollectionBadIEnumerableParameter(null))", span="163-163"];
m68_67 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Exit lambda expression", span="163-163"];
m68_70 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorNonGeneric()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorNonGeneric()", span="178-178"];
m68_71 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorNonGeneric()", file="JsonSerializerInternalReader.cs", label="string json = @''[1,2,3]''", span="180-180"];
m68_72 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorNonGeneric()", file="JsonSerializerInternalReader.cs", label="TestCollectionNonGeneric l = JsonConvert.DeserializeObject<TestCollectionNonGeneric>(json)", span="181-181"];
m68_73 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorNonGeneric()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(3, l.Count)", span="183-183"];
m68_74 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorNonGeneric()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(1, l[0])", span="184-184"];
m68_82 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Entry lambda expression", span="198-198"];
m68_83 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="k.Key", span="198-198"];
m68_84 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Exit lambda expression", span="198-198"];
m68_85 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Entry lambda expression", span="198-198"];
m68_86 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="k.Value", span="198-198"];
m68_87 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Exit lambda expression", span="198-198"];
m68_101 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryPrivate.TestDictionaryPrivate()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryPrivate.TestDictionaryPrivate()", span="222-222"];
m68_603 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooManyItems()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooManyItems()", span="1382-1382"];
m68_604 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooManyItems()", file="JsonSerializerInternalReader.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[[1,1,1],[1,1,2,1]],[[1,2,1],[1,2,2]],[[2,1,1],[2,1,2]],[[2,2,1],[2,2,2]]],''''After'''':''''After!''''}''", span="1384-1384"];
m68_605 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooManyItems()", file="JsonSerializerInternalReader.cs", label="ExceptionAssert.Throws<Exception>(() => JsonConvert.DeserializeObject<Array3D>(json), ''Cannot deserialize non-cubical array as multidimensional array.'')", span="1386-1386"];
m68_606 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooManyItems()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooManyItems()", span="1382-1382"];
m68_353 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyCollection()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyCollection()", span="759-759"];
m68_354 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyCollection()", file="JsonSerializerInternalReader.cs", label="IList<int> l = new List<int>\r\n            {\r\n                1,\r\n                2,\r\n                3\r\n            }", span="761-766"];
m68_355 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyCollection()", file="JsonSerializerInternalReader.cs", label="CustomReadOnlyCollection<int> list = new CustomReadOnlyCollection<int>(l)", span="768-768"];
m68_356 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyCollection()", file="JsonSerializerInternalReader.cs", label="string json = JsonConvert.SerializeObject(list, Formatting.Indented)", span="770-770"];
m68_357 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyCollection()", file="JsonSerializerInternalReader.cs", label="StringAssert.AreEqual(@''[\r\n  1,\r\n  2,\r\n  3\r\n]'', json)", span="771-775"];
m68_358 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyCollection()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyCollection()", span="759-759"];
m68_654 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Entry lambda expression", span="1449-1449"];
m68_131 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.JsonSerializerInternalReader(Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.JsonSerializerInternalReader(Newtonsoft.Json.JsonSerializer)", span="61-61"];
m68_132 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", span="66-66"];
m68_148 [cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", span="691-691"];
m68_149 [cluster="Newtonsoft.Json.JsonSerializer.DeserializeInternal(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="ValidationUtils.ArgumentNotNull(reader, ''reader'')", span="693-693"];
m68_245 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializerInternalReader.cs", label="StringEscapeHandling? previousStringEscapeHandling = null", span="898-898"];
m68_244 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializerInternalReader.cs", label="jsonWriter.FloatFormatHandling = _floatFormatHandling.Value", span="895-895"];
m68_246 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializerInternalReader.cs", label="_stringEscapeHandling != null && jsonWriter.StringEscapeHandling != _stringEscapeHandling", span="899-899"];
m68_256 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializerInternalReader.cs", label="jsonWriter.DateFormatString = _dateFormatString", span="916-916"];
m68_257 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializerInternalReader.cs", label="TraceJsonWriter traceJsonWriter = (TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose)\r\n                ? new TraceJsonWriter(jsonWriter)\r\n                : null", span="919-921"];
m68_258 [cluster="Newtonsoft.Json.JsonSerializer.SerializeInternal(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializerInternalReader.cs", label="JsonSerializerInternalWriter serializerWriter = new JsonSerializerInternalWriter(this)", span="923-923"];
m68_493 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="JsonConvert.DeserializeObject<IList<KeyValuePair<string, IList<string>>>>(json)", span="1034-1034"];
m68_492 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Entry lambda expression", span="1034-1034"];
m68_494 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Exit lambda expression", span="1034-1034"];
m68_581 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="JsonConvert.DeserializeObject<Array2D>(json)", span="1350-1350"];
m68_580 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Entry lambda expression", span="1350-1350"];
m68_582 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Exit lambda expression", span="1350-1350"];
m68_587 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Entry lambda expression", span="1358-1358"];
m68_589 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Exit lambda expression", span="1358-1358"];
m68_608 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="JsonConvert.DeserializeObject<Array3D>(json)", span="1386-1386"];
m68_607 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Entry lambda expression", span="1386-1386"];
m68_609 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Exit lambda expression", span="1386-1386"];
m68_615 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="JsonConvert.DeserializeObject<Array3D>(json)", span="1394-1394"];
m68_614 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Entry lambda expression", span="1394-1394"];
m68_616 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Exit lambda expression", span="1394-1394"];
m68_622 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="JsonConvert.DeserializeObject<Array3D>(json)", span="1402-1402"];
m68_621 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Entry lambda expression", span="1402-1402"];
m68_623 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Exit lambda expression", span="1402-1402"];
m68_648 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="JsonConvert.DeserializeObject<Array3D>(json)", span="1441-1441"];
m68_647 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Entry lambda expression", span="1441-1441"];
m68_649 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Exit lambda expression", span="1441-1441"];
m68_655 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="JsonConvert.DeserializeObject<Array3D>(json)", span="1449-1449"];
m68_656 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Exit lambda expression", span="1449-1449"];
m68_284 [cluster="Newtonsoft.Json.JsonSerializer.GetReferenceResolver()", file="JsonSerializerInternalReader.cs", label="return _referenceResolver;", span="951-951"];
m68_514 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()", span="1116-1116"];
m68_515 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()", file="JsonSerializerInternalReader.cs", label="string json = @''{\r\n  ''''NonReadOnlyList'''': [\r\n    11\r\n  ],\r\n  ''''NonReadOnlyDictionary'''': {\r\n    ''''first'''': 12\r\n  },\r\n  ''''Array'''': [\r\n    13\r\n  ],\r\n  ''''List'''': [\r\n    14\r\n  ],\r\n  ''''Dictionary'''': {\r\n    ''''first'''': 15\r\n  },\r\n  ''''IReadOnlyCollection'''': [\r\n    16\r\n  ],\r\n  ''''ReadOnlyCollection'''': [\r\n    17\r\n  ],\r\n  ''''IReadOnlyList'''': [\r\n    18\r\n  ],\r\n  ''''IReadOnlyDictionary'''': {\r\n    ''''first'''': 19\r\n  },\r\n  ''''ReadOnlyDictionary'''': {\r\n    ''''first'''': 20\r\n  }\r\n}''", span="1118-1149"];
m68_516 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()", file="JsonSerializerInternalReader.cs", label="var c2 = JsonConvert.DeserializeObject<PopulateReadOnlyTestClass>(json)", span="1151-1151"];
m68_517 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(1, c2.NonReadOnlyDictionary.Count)", span="1153-1153"];
m68_518 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(12, c2.NonReadOnlyDictionary[''first''])", span="1154-1154"];
m68_519 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(2, c2.NonReadOnlyList.Count)", span="1156-1156"];
m68_520 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(1, c2.NonReadOnlyList[0])", span="1157-1157"];
m68_521 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(11, c2.NonReadOnlyList[1])", span="1158-1158"];
m68_522 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(1, c2.Array.Count)", span="1160-1160"];
m68_523 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(13, c2.Array[0])", span="1161-1161"];
m68_524 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()", span="1116-1116"];
m68_196 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="JsonSerializerInternalReader.cs", label="string myOtherArrayAsString = JsonConvert.SerializeObject(myOtherArray, Formatting.Indented)", span="435-435"];
m68_823 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.ReadOnlyIntegerList(System.Collections.Generic.List<int>)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.ReadOnlyIntegerList(System.Collections.Generic.List<int>)", span="1924-1924"];
m68_832 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.ReadOnlyIntegerList(System.Collections.Generic.List<int>)", file="JsonSerializerInternalReader.cs", label="_list = l", span="1926-1926"];
m68_833 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.ReadOnlyIntegerList(System.Collections.Generic.List<int>)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.ReadOnlyIntegerList(System.Collections.Generic.List<int>)", span="1924-1924"];
m68_870 [cluster="Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="2045-2045"];
m68_871 [cluster="Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalReader.cs", label="writer.WriteValue(value)", span="2047-2047"];
m68_872 [cluster="Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="2045-2045"];
m68_576 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D_WithTooManyItems()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D_WithTooManyItems()", span="1346-1346"];
m68_577 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D_WithTooManyItems()", file="JsonSerializerInternalReader.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2,3],[2,1],[2,2]],''''After'''':''''After!''''}''", span="1348-1348"];
m68_578 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D_WithTooManyItems()", file="JsonSerializerInternalReader.cs", label="ExceptionAssert.Throws<Exception>(() => JsonConvert.DeserializeObject<Array2D>(json), ''Cannot deserialize non-cubical array as multidimensional array.'')", span="1350-1350"];
m68_579 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D_WithTooManyItems()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D_WithTooManyItems()", span="1346-1346"];
m68_551 [cluster="Newtonsoft.Json.Tests.Serialization.Array3DWithConverter.Array3DWithConverter()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Array3DWithConverter.Array3DWithConverter()", span="1960-1960"];
m68_313 [cluster="Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", span="301-301"];
m68_207 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="JsonSerializerInternalReader.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m68_206 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", span="426-426"];
m68_209 [cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="151-151"];
m68_204 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(0.05, myOtherResult[2, 0])", span="467-467"];
m68_205 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(6L, myOtherResult[2, 1])", span="468-468"];
m68_198 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="JsonSerializerInternalReader.cs", label="JObject o = JObject.Parse(@''{\r\n              ''''Key'''': ''''my value'''',\r\n              ''''Value'''': 0.8\r\n            }'')", span="455-458"];
m68_199 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="JsonSerializerInternalReader.cs", label="object[,] myOtherResult = JsonConvert.DeserializeObject<object[,]>(myOtherArrayAsString)", span="460-460"];
m68_200 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="JsonSerializerInternalReader.cs", label="Assert.IsTrue(JToken.DeepEquals(o, (JToken)myOtherResult[0, 0]))", span="461-461"];
m68_201 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''foobar'', myOtherResult[0, 1])", span="462-462"];
m68_202 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(true, myOtherResult[1, 0])", span="464-464"];
m68_203 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(0.4, myOtherResult[1, 1])", span="465-465"];
m68_760 [cluster="System.IO.StringReader.StringReader(string)", file="JsonSerializerInternalReader.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m68_232 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.EnumerableClassFailure()", file="JsonSerializerInternalReader.cs", label="_values = new List<T>()", span="514-514"];
m68_231 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.EnumerableClassFailure()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.EnumerableClassFailure()", span="512-512"];
m68_233 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.EnumerableClassFailure()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.EnumerableClassFailure()", span="512-512"];
m68_314 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionary()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionary()", span="655-655"];
m68_315 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionary()", file="JsonSerializerInternalReader.cs", label="ReadOnlyDictionary<string, int> dic = JsonConvert.DeserializeObject<ReadOnlyDictionary<string, int>>(''{'one':1,'two':2}'')", span="657-657"];
m68_316 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionary()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(2, dic.Count)", span="659-659"];
m68_317 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionary()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(1, dic[''one''])", span="661-661"];
m68_318 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionary()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(2, dic[''two''])", span="662-662"];
m68_319 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionary()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionary()", span="655-655"];
m68_563 [cluster="System.Array.GetLength(int)", file="JsonSerializerInternalReader.cs", label="Entry System.Array.GetLength(int)", span="0-0"];
m68_741 [cluster="Newtonsoft.Json.Tests.TestObjects.PhoneNumber.PhoneNumber(string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.PhoneNumber.PhoneNumber(string)", span="31-31"];
m68_370 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericListTestClass.GenericListTestClass()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericListTestClass.GenericListTestClass()", span="798-798"];
m68_371 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericListTestClass.GenericListTestClass()", file="JsonSerializerInternalReader.cs", label="GenericList = new List<string>()", span="800-800"];
m68_372 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericListTestClass.GenericListTestClass()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericListTestClass.GenericListTestClass()", span="798-798"];
m68_461 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", span="993-993"];
m68_462 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", file="JsonSerializerInternalReader.cs", label="string json = @''[ { ''''Value'''': [ ''''1'''', ''''2'''' ], ''''Key'''': ''''aaa'''', ''''BadContent'''': [ 0 ] }, { ''''Value'''': [ ''''3'''', ''''4'''' ], ''''Key'''': ''''bbb'''' } ]''", span="995-995"];
m68_463 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", file="JsonSerializerInternalReader.cs", label="IList<KeyValuePair<string, IList<string>>> values = JsonConvert.DeserializeObject<IList<KeyValuePair<string, IList<string>>>>(json)", span="997-997"];
m68_464 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(2, values.Count)", span="999-999"];
m68_465 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''aaa'', values[0].Key)", span="1000-1000"];
m68_466 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(2, values[0].Value.Count)", span="1001-1001"];
m68_467 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''1'', values[0].Value[0])", span="1002-1002"];
m68_468 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''2'', values[0].Value[1])", span="1003-1003"];
m68_469 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''bbb'', values[1].Key)", span="1004-1004"];
m68_470 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(2, values[1].Value.Count)", span="1005-1005"];
m68_471 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''3'', values[1].Value[0])", span="1006-1006"];
m68_472 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''4'', values[1].Value[1])", span="1007-1007"];
m68_473 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", span="993-993"];
m68_755 [cluster="System.IO.StringWriter.StringWriter()", file="JsonSerializerInternalReader.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m68_831 [cluster="System.Collections.Hashtable.Hashtable()", file="JsonSerializerInternalReader.cs", label="Entry System.Collections.Hashtable.Hashtable()", span="0-0"];
m68_781 [cluster="Newtonsoft.Json.Tests.Serialization.NonGenericClass.NonGenericClass()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.NonGenericClass.NonGenericClass()", span="2008-2008"];
m68_507 [cluster="System.Collections.ObjectModel.ReadOnlyCollection<T>.ReadOnlyCollection(System.Collections.Generic.IList<T>)", file="JsonSerializerInternalReader.cs", label="Entry System.Collections.ObjectModel.ReadOnlyCollection<T>.ReadOnlyCollection(System.Collections.Generic.IList<T>)", span="0-0"];
m68_488 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullToNonNullableKeyValuePairArray()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullToNonNullableKeyValuePairArray()", span="1030-1030"];
m68_489 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullToNonNullableKeyValuePairArray()", file="JsonSerializerInternalReader.cs", label="string json = @''[ null ]''", span="1032-1032"];
m68_490 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullToNonNullableKeyValuePairArray()", file="JsonSerializerInternalReader.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<IList<KeyValuePair<string, IList<string>>>>(json); }, ''Cannot convert null value to KeyValuePair. Path '[0]', line 1, position 6.'')", span="1034-1034"];
m68_491 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullToNonNullableKeyValuePairArray()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullToNonNullableKeyValuePairArray()", span="1030-1030"];
m68_697 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()", span="1642-1642"];
m68_698 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()", file="JsonSerializerInternalReader.cs", label="string json = @''{''''action'''':''''Router'''',''''method'''':''''Navigate'''',''''data'''':[''''dashboard'''',null],''''type'''':''''rpc'''',''''tid'''':2}''", span="1644-1644"];
m68_699 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()", file="JsonSerializerInternalReader.cs", label="ObjectArrayPropertyTest o = JsonConvert.DeserializeObject<ObjectArrayPropertyTest>(json)", span="1646-1646"];
m68_700 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''Router'', o.Action)", span="1648-1648"];
m68_701 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''Navigate'', o.Method)", span="1649-1649"];
m68_702 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(2, o.Data.Length)", span="1650-1650"];
m68_703 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''dashboard'', o.Data[0])", span="1651-1651"];
m68_704 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(null, o.Data[1])", span="1652-1652"];
m68_705 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()", span="1642-1642"];
m68_657 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNull3DArray()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNull3DArray()", span="1453-1453"];
m68_658 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNull3DArray()", file="JsonSerializerInternalReader.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':null,''''After'''':''''After!''''}''", span="1455-1455"];
m68_659 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNull3DArray()", file="JsonSerializerInternalReader.cs", label="Array3D aa = JsonConvert.DeserializeObject<Array3D>(json)", span="1457-1457"];
m68_664 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNull3DArray()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(json, after)", span="1465-1465"];
m68_660 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNull3DArray()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''Before!'', aa.Before)", span="1459-1459"];
m68_661 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNull3DArray()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''After!'', aa.After)", span="1460-1460"];
m68_662 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNull3DArray()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(null, aa.Coordinates)", span="1461-1461"];
m68_663 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNull3DArray()", file="JsonSerializerInternalReader.cs", label="string after = JsonConvert.SerializeObject(aa)", span="1463-1463"];
m68_665 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNull3DArray()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNull3DArray()", span="1453-1453"];
m68_855 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(object)", span="1276-1276"];
m68_856 [cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="2019-2019"];
m68_857 [cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalReader.cs", label="List<string> existingStrings = (List<string>)existingValue", span="2021-2021"];
m68_859 [cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalReader.cs", label="reader.Read()", span="2024-2024"];
m68_860 [cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalReader.cs", label="reader.TokenType != JsonToken.EndArray", span="2026-2026"];
m68_861 [cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalReader.cs", label="string s = (string)reader.Value", span="2028-2028"];
m68_863 [cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalReader.cs", label="reader.Read()", span="2031-2031"];
m68_858 [cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalReader.cs", label="List<string> newStrings = new List<string>(existingStrings)", span="2022-2022"];
m68_862 [cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalReader.cs", label="newStrings.Add(s)", span="2029-2029"];
m68_864 [cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalReader.cs", label="return newStrings;", span="2034-2034"];
m68_865 [cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="2019-2019"];
m68_409 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JsonSerializerInternalReader.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m68_542 [cluster="Newtonsoft.Json.Tests.Serialization.Array3D.Array3D()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Array3D.Array3D()", span="1953-1953"];
m68_650 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIncompleteNotTopLevel3DArray()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIncompleteNotTopLevel3DArray()", span="1445-1445"];
m68_651 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIncompleteNotTopLevel3DArray()", file="JsonSerializerInternalReader.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[/*hi*/[/*hi*/''", span="1447-1447"];
m68_652 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIncompleteNotTopLevel3DArray()", file="JsonSerializerInternalReader.cs", label="ExceptionAssert.Throws<JsonException>(() => JsonConvert.DeserializeObject<Array3D>(json))", span="1449-1449"];
m68_653 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIncompleteNotTopLevel3DArray()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIncompleteNotTopLevel3DArray()", span="1445-1445"];
m68_843 [cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GetEnumerator()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GetEnumerator()", span="1989-1989"];
m68_844 [cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GetEnumerator()", file="JsonSerializerInternalReader.cs", label="Items != null", span="1991-1991"];
m68_846 [cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GetEnumerator()", file="JsonSerializerInternalReader.cs", label="yield return item;", span="1995-1995"];
m68_847 [cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GetEnumerator()", file="JsonSerializerInternalReader.cs", label="yield break;", span="1999-1999"];
m68_845 [cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GetEnumerator()", file="JsonSerializerInternalReader.cs", label=Items, span="1993-1993"];
m68_848 [cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GetEnumerator()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GetEnumerator()", span="1989-1989"];
m68_758 [cluster="System.Text.StringBuilder.ToString()", file="JsonSerializerInternalReader.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m68_740 [cluster="Newtonsoft.Json.Tests.TestObjects.Name.Name(string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Name.Name(string)", span="35-35"];
m68_838 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.System.Collections.IEnumerable.GetEnumerator()", span="1939-1939"];
m68_839 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerInternalReader.cs", label="return GetEnumerator();", span="1941-1941"];
m68_840 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.System.Collections.IEnumerable.GetEnumerator()", span="1939-1939"];
m68_824 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EmptyStringInHashtableIsDeserialized()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EmptyStringInHashtableIsDeserialized()", span="1905-1905"];
m68_825 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EmptyStringInHashtableIsDeserialized()", file="JsonSerializerInternalReader.cs", label="string externalJson = @''{''''$type'''':''''System.Collections.Hashtable, mscorlib'''',''''testkey'''':''''''''}''", span="1907-1907"];
m68_826 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EmptyStringInHashtableIsDeserialized()", file="JsonSerializerInternalReader.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings { TypeNameHandling = TypeNameHandling.All }", span="1909-1909"];
m68_828 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EmptyStringInHashtableIsDeserialized()", file="JsonSerializerInternalReader.cs", label="Hashtable deserializeTest2 = JsonConvert.DeserializeObject<Hashtable>(externalJson, settings)", span="1912-1912"];
m68_827 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EmptyStringInHashtableIsDeserialized()", file="JsonSerializerInternalReader.cs", label="JsonConvert.SerializeObject(new Hashtable { { ''testkey'', '''' } }, settings)", span="1911-1911"];
m68_829 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EmptyStringInHashtableIsDeserialized()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(deserializeTest2[''testkey''], '''')", span="1914-1914"];
m68_830 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EmptyStringInHashtableIsDeserialized()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EmptyStringInHashtableIsDeserialized()", span="1905-1905"];
m68_795 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyCollectionSerialize()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyCollectionSerialize()", span="1789-1789"];
m68_796 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyCollectionSerialize()", file="JsonSerializerInternalReader.cs", label="ReadOnlyCollection<int> r1 = new ReadOnlyCollection<int>(new int[] { 0, 1, 2, 3, 4 })", span="1791-1791"];
m68_797 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyCollectionSerialize()", file="JsonSerializerInternalReader.cs", label="string jsonText = JsonConvert.SerializeObject(r1)", span="1793-1793"];
m68_800 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyCollectionSerialize()", file="JsonSerializerInternalReader.cs", label="CollectionAssert.AreEqual(r1, r2)", span="1799-1799"];
m68_798 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyCollectionSerialize()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''[0,1,2,3,4]'', jsonText)", span="1795-1795"];
m68_799 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyCollectionSerialize()", file="JsonSerializerInternalReader.cs", label="ReadOnlyCollection<int> r2 = JsonConvert.DeserializeObject<ReadOnlyCollection<int>>(jsonText)", span="1797-1797"];
m68_801 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyCollectionSerialize()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyCollectionSerialize()", span="1789-1789"];
m68_834 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.GetEnumerator()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.GetEnumerator()", span="1934-1934"];
m68_835 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.GetEnumerator()", file="JsonSerializerInternalReader.cs", label="return _list.GetEnumerator();", span="1936-1936"];
m68_836 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.GetEnumerator()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.GetEnumerator()", span="1934-1934"];
m68_881 [file="JsonSerializerInternalReader.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized", span=""];
m68_882 [file="JsonSerializerInternalReader.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomConcurrentDictionary", span=""];
m68_883 [file="JsonSerializerInternalReader.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>", span=""];
m68_884 [file="JsonSerializerInternalReader.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>", span=""];
m68_885 [file="JsonSerializerInternalReader.cs", label=json, span=""];
m68_886 [file="JsonSerializerInternalReader.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrivateDefaultCtorWithIEnumerableCtorList<T>", span=""];
m68_887 [file="JsonSerializerInternalReader.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>", span=""];
m68_888 [file="JsonSerializerInternalReader.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>", span=""];
m68_889 [file="JsonSerializerInternalReader.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericListTestClass", span=""];
m68_890 [file="JsonSerializerInternalReader.cs", label=json, span=""];
m68_891 [file="JsonSerializerInternalReader.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass", span=""];
m68_892 [file="JsonSerializerInternalReader.cs", label=json, span=""];
m68_893 [file="JsonSerializerInternalReader.cs", label=json, span=""];
m68_894 [file="JsonSerializerInternalReader.cs", label=json, span=""];
m68_895 [file="JsonSerializerInternalReader.cs", label=json, span=""];
m68_896 [file="JsonSerializerInternalReader.cs", label=json, span=""];
m68_897 [file="JsonSerializerInternalReader.cs", label=json, span=""];
m68_898 [file="JsonSerializerInternalReader.cs", label=json, span=""];
m68_899 [file="JsonSerializerInternalReader.cs", label="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList", span=""];
m68_900 [file="JsonSerializerInternalReader.cs", label="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>", span=""];
m69_367 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonSerializerInternalWriter.cs", label="currentOnSerializing = method", span="861-861"];
m69_410 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipSerializing(System.Type)", file="JsonSerializerInternalWriter.cs", label="return true;", span="933-933"];
m69_411 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipSerializing(System.Type)", file="JsonSerializerInternalWriter.cs", label="return false;", span="943-943"];
m69_412 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipSerializing(System.Type)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipSerializing(System.Type)", span="929-929"];
m69_417 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="JsonSerializerInternalWriter.cs", label="current = current.BaseType()", span="954-954"];
m69_419 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="JsonSerializerInternalWriter.cs", label="return ret;", span="959-959"];
m69_422 [cluster="System.Collections.Generic.List<T>.Reverse()", file="JsonSerializerInternalWriter.cs", label="Entry System.Collections.Generic.List<T>.Reverse()", span="0-0"];
m69_420 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", span="946-946"];
m69_413 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="JsonSerializerInternalWriter.cs", label="List<Type> ret = new List<Type>()", span="948-948"];
m69_416 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="JsonSerializerInternalWriter.cs", label="ret.Add(current)", span="953-953"];
m69_418 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="JsonSerializerInternalWriter.cs", label="ret.Reverse()", span="958-958"];
m69_421 [cluster="System.Type.BaseType()", file="JsonSerializerInternalWriter.cs", label="Entry System.Type.BaseType()", span="171-171"];
m69_423 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", span="967-967"];
m69_415 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="JsonSerializerInternalWriter.cs", label="current != null && current != typeof(object)", span="951-951"];
m69_414 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="JsonSerializerInternalWriter.cs", label="Type current = type", span="950-950"];
m69_424 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="JsonDictionaryContract contract = new JsonDictionaryContract(objectType)", span="969-969"];
m69_542 [cluster="System.Type.ContainsGenericParameters()", file="JsonSerializerInternalWriter.cs", label="Entry System.Type.ContainsGenericParameters()", span="135-135"];
m69_152 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="message += '' for property '{0}'''.FormatWith(CultureInfo.InvariantCulture, property.PropertyName)", span="322-322"];
m69_148 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="bool exists = (Serializer._equalityComparer != null)\r\n                ? _serializeStack.Contains(value, Serializer._equalityComparer)\r\n                : _serializeStack.Contains(value)", span="313-315"];
m69_92 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="SetExtensionDataDelegates(contract, extensionDataMember)", span="406-406"];
m69_205 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Exit lambda expression", span="499-514"];
m69_443 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="_serializeStack.RemoveAt(_serializeStack.Count - 1)", span="889-889"];
m69_137 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="return false;", span="434-434"];
m69_138 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="!ReflectionUtils.CanReadMemberValue(m, true)", span="437-437"];
m69_154 [cluster="Unk.GetMemberUnderlyingType", file="JsonSerializerInternalWriter.cs", label="Entry Unk.GetMemberUnderlyingType", span=""];
m69_158 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="JsonSerializerInternalWriter.cs", label="JsonExtensionDataAttribute extensionDataAttribute = ReflectionUtils.GetAttribute<JsonExtensionDataAttribute>(member)", span="463-463"];
m69_159 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="JsonSerializerInternalWriter.cs", label="extensionDataAttribute == null", span="464-464"];
m69_162 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="JsonSerializerInternalWriter.cs", label="ReflectionUtils.ImplementsGenericDefinition(t, typeof(IDictionary<,>), out Type dictionaryType)", span="471-471"];
m69_163 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="JsonSerializerInternalWriter.cs", label="Type keyType = dictionaryType.GetGenericArguments()[0]", span="473-473"];
m69_153 [cluster="Unk.FormatWith", file="JsonSerializerInternalWriter.cs", label="Entry Unk.FormatWith", span=""];
m69_139 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="throw new JsonException(''Invalid extension data attribute on '{0}'. Member '{1}' must have a getter.''.FormatWith(CultureInfo.InvariantCulture, GetClrTypeFullName(m.DeclaringType), m.Name));", span="439-439"];
m69_142 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Type keyType = dictionaryType.GetGenericArguments()[0]", span="446-446"];
m69_143 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Type valueType = dictionaryType.GetGenericArguments()[1]", span="447-447"];
m69_144 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="keyType.IsAssignableFrom(typeof(string)) && valueType.IsAssignableFrom(typeof(JToken))", span="449-449"];
m69_145 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="return true;", span="451-451"];
m69_146 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="throw new JsonException(''Invalid extension data attribute on '{0}'. Member '{1}' type must implement IDictionary<string, JToken>.''.FormatWith(CultureInfo.InvariantCulture, GetClrTypeFullName(m.DeclaringType), m.Name));", span="455-455"];
m69_147 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Exit lambda expression", span="423-456"];
m69_151 [cluster="Newtonsoft.Json.JsonException.JsonException(string)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.JsonException.JsonException(string)", span="54-54"];
m69_156 [cluster="Unk.GetGenericArguments", file="JsonSerializerInternalWriter.cs", label="Entry Unk.GetGenericArguments", span=""];
m69_141 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="ReflectionUtils.ImplementsGenericDefinition(t, typeof(IDictionary<,>), out Type dictionaryType)", span="444-444"];
m69_149 [cluster="Unk.IsDefined", file="JsonSerializerInternalWriter.cs", label="Entry Unk.IsDefined", span=""];
m69_155 [cluster="Unk.ImplementsGenericDefinition", file="JsonSerializerInternalWriter.cs", label="Entry Unk.ImplementsGenericDefinition", span=""];
m69_157 [cluster="System.Type.IsAssignableFrom(System.Type)", file="JsonSerializerInternalWriter.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m69_161 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="JsonSerializerInternalWriter.cs", label="Type t = ReflectionUtils.GetMemberUnderlyingType(member)", span="469-469"];
m69_160 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="JsonSerializerInternalWriter.cs", label="return;", span="466-466"];
m69_164 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="JsonSerializerInternalWriter.cs", label="Type valueType = dictionaryType.GetGenericArguments()[1]", span="474-474"];
m69_150 [cluster="Unk.CanReadMemberValue", file="JsonSerializerInternalWriter.cs", label="Entry Unk.CanReadMemberValue", span=""];
m69_140 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Type t = ReflectionUtils.GetMemberUnderlyingType(m)", span="442-442"];
m69_165 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="JsonSerializerInternalWriter.cs", label="Type createdType", span="476-476"];
m69_166 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="JsonSerializerInternalWriter.cs", label="ReflectionUtils.IsGenericDefinition(t, typeof(IDictionary<,>))", span="479-479"];
m69_482 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="OnSerialized(writer, contract, value)", span="979-979"];
m69_485 [cluster="Newtonsoft.Json.Serialization.JsonDynamicContract.TryGetMember(System.Dynamic.IDynamicMetaObjectProvider, string, out object)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonDynamicContract.TryGetMember(System.Dynamic.IDynamicMetaObjectProvider, string, out object)", span="85-85"];
m69_488 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", file="JsonSerializerInternalWriter.cs", label="return false;", span="987-987"];
m69_490 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", file="JsonSerializerInternalWriter.cs", label="return false;", span="993-993"];
m69_492 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", span="983-983"];
m69_494 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="TypeNameHandling resolvedTypeNameHandling =\r\n                member?.TypeNameHandling\r\n                ?? containerProperty?.ItemTypeNameHandling\r\n                ?? containerContract?.ItemTypeNameHandling\r\n                ?? Serializer._typeNameHandling", span="1001-1005"];
m69_496 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="return true;", span="1009-1009"];
m69_500 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="return true;", span="1019-1019"];
m69_501 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="containerContract != null", span="1022-1022"];
m69_486 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", span="983-983"];
m69_493 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", span="1078-1078"];
m69_495 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="HasFlag(resolvedTypeNameHandling, typeNameHandlingFlag)", span="1007-1007"];
m69_497 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="HasFlag(resolvedTypeNameHandling, TypeNameHandling.Auto)", span="1013-1013"];
m69_498 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="member != null", span="1015-1015"];
m69_499 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="contract.NonNullableUnderlyingType != member.PropertyContract.CreatedType", span="1017-1017"];
m69_487 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", file="JsonSerializerInternalWriter.cs", label="Serializer._nullValueHandling == NullValueHandling.Ignore && memberValue == null", span="985-985"];
m69_489 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", file="JsonSerializerInternalWriter.cs", label="HasFlag(Serializer._defaultValueHandling, DefaultValueHandling.Ignore) &&\r\n                (memberValue == null || MiscellaneousUtils.ValueEquals(memberValue, ReflectionUtils.GetDefaultValue(memberValue.GetType())))", span="990-991"];
m69_491 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", file="JsonSerializerInternalWriter.cs", label="return true;", span="996-996"];
m69_502 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="containerContract.ItemContract == null || contract.NonNullableUnderlyingType != containerContract.ItemContract.CreatedType", span="1024-1024"];
m69_302 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="JsonSerializerInternalWriter.cs", label="property.NullValueHandling = property.NullValueHandling ?? matchingMemberProperty.NullValueHandling", span="725-725"];
m69_304 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="JsonSerializerInternalWriter.cs", label="property.ReferenceLoopHandling = property.ReferenceLoopHandling ?? matchingMemberProperty.ReferenceLoopHandling", span="727-727"];
m69_307 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="JsonSerializerInternalWriter.cs", label="return property;", span="732-732"];
m69_306 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="JsonSerializerInternalWriter.cs", label="property.TypeNameHandling = property.TypeNameHandling ?? matchingMemberProperty.TypeNameHandling", span="729-729"];
m69_305 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="JsonSerializerInternalWriter.cs", label="property.ObjectCreationHandling = property.ObjectCreationHandling ?? matchingMemberProperty.ObjectCreationHandling", span="728-728"];
m69_308 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", span="701-701"];
m69_447 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Exit lambda expression", span="976-976"];
m69_196 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="JsonSerializerInternalWriter.cs", label="type = value as Type", span="405-405"];
m69_190 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", span="590-590"];
m69_191 [cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateSet<T>(System.Reflection.MemberInfo)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateSet<T>(System.Reflection.MemberInfo)", span="59-59"];
m69_194 [cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", span="74-74"];
m69_195 [cluster="System.Type.GetConstructors()", file="JsonSerializerInternalWriter.cs", label="Entry System.Type.GetConstructors()", span="0-0"];
m69_200 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="setExtensionDataDictionary == null", span="504-504"];
m69_199 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="dictionary == null", span="502-502"];
m69_201 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="throw new JsonSerializationException(''Cannot set value onto extension data member '{0}'. The extension data collection is null and it cannot be set.''.FormatWith(CultureInfo.InvariantCulture, member.Name));", span="506-506"];
m69_192 [cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", span="76-76"];
m69_193 [cluster="System.Type.GetMethod(string, System.Type[])", file="JsonSerializerInternalWriter.cs", label="Entry System.Type.GetMethod(string, System.Type[])", span="0-0"];
m69_197 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Entry lambda expression", span="499-514"];
m69_198 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="object dictionary = getExtensionDataDictionary(o)", span="501-501"];
m69_202 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="dictionary = createExtensionDataDictionary()", span="509-509"];
m69_170 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="JsonSerializerInternalWriter.cs", label="extensionDataAttribute.ReadData", span="490-490"];
m69_207 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)", file="JsonSerializerInternalWriter.cs", label="string s", span="420-420"];
m69_91 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="extensionDataMember != null", span="404-404"];
m69_208 [cluster="Newtonsoft.Json.Serialization.Action<T1, T2>.Invoke(T1, T2)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.Action<T1, T2>.Invoke(T1, T2)", span="3047-3047"];
m69_209 [cluster="Newtonsoft.Json.Utilities.MethodCall<T, TResult>.Invoke(T, params object[])", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Utilities.MethodCall<T, TResult>.Invoke(T, params object[])", span="27-27"];
m69_206 [cluster="Newtonsoft.Json.Serialization.Func<T, TResult>.Invoke(T)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.Func<T, TResult>.Invoke(T)", span="3037-3037"];
m69_210 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Entry lambda expression", span="525-534"];
m69_211 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="object dictionary = getExtensionDataDictionary(o)", span="527-527"];
m69_561 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalWriter.cs", label="PrimitiveTypeCode.Double", span="1156-1156"];
m69_448 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", span="1016-1016"];
m69_329 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.TypeNameHandling)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.TypeNameHandling)", span="639-639"];
m69_42 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="writer.WriteStartObject()", span="133-133"];
m69_136 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="!m.IsDefined(typeof(JsonExtensionDataAttribute), false)", span="432-432"];
m69_101 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="isReference = property.IsReference", span="218-218"];
m69_240 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="index++", span="457-457"];
m69_108 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="return isReference;", span="236-236"];
m69_88 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="contract.OverrideCreator = JsonTypeReflector.ReflectionDelegateFactory.CreateParameterizedConstructor(constructor)", span="397-397"];
m69_247 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="JsonSerializerInternalWriter.cs", label="IEnumerable<ConstructorInfo> constructors = objectType.GetConstructors()", span="594-594"];
m69_244 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Entry lambda expression", span="570-570"];
m69_246 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Exit lambda expression", span="570-570"];
m69_245 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="c.IsDefined(typeof(JsonConstructorAttribute), true)", span="570-570"];
m69_248 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="JsonSerializerInternalWriter.cs", label="IEnumerator<ConstructorInfo> en = constructors.GetEnumerator()", span="595-595"];
m69_249 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="JsonSerializerInternalWriter.cs", label="en.MoveNext()", span="596-596"];
m69_224 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.GetEnumerator()", file="JsonSerializerInternalWriter.cs", label="yield return new KeyValuePair<object, object>(item.Key, item.Value);", span="558-558"];
m69_225 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.GetEnumerator()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.GetEnumerator()", span="554-554"];
m69_226 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="JsonSerializerInternalWriter.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m69_227 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.System.Collections.IEnumerable.GetEnumerator()", span="562-562"];
m69_229 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.System.Collections.IEnumerable.GetEnumerator()", span="562-562"];
m69_230 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="JsonSerializerInternalWriter.cs", label="IEnumerator<ConstructorInfo> en = objectType.GetConstructors(BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).Where(c => c.IsDefined(typeof(JsonConstructorAttribute), true)).GetEnumerator()", span="570-570"];
m69_233 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="JsonSerializerInternalWriter.cs", label="en.MoveNext()", span="575-575"];
m69_234 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="JsonSerializerInternalWriter.cs", label="throw new JsonException(''Multiple constructors with the JsonConstructorAttribute.'');", span="577-577"];
m69_235 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="JsonSerializerInternalWriter.cs", label="return conInfo;", span="580-580"];
m69_237 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="JsonSerializerInternalWriter.cs", label="return objectType.GetConstructor(new[] { typeof(int), typeof(int), typeof(int), typeof(int) });", span="586-586"];
m69_238 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="JsonSerializerInternalWriter.cs", label="return null;", span="589-589"];
m69_241 [cluster="System.Collections.Generic.IEnumerable<T>.GetEnumerator()", file="JsonSerializerInternalWriter.cs", label="Entry System.Collections.Generic.IEnumerable<T>.GetEnumerator()", span="0-0"];
m69_250 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="JsonSerializerInternalWriter.cs", label="ConstructorInfo constructor = en.Current", span="598-598"];
m69_251 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="JsonSerializerInternalWriter.cs", label="!en.MoveNext()", span="599-599"];
m69_252 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="JsonSerializerInternalWriter.cs", label="ParameterInfo[] parameters = constructor.GetParameters()", span="601-601"];
m69_253 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="JsonSerializerInternalWriter.cs", label="parameters.Length > 0", span="602-602"];
m69_254 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="JsonSerializerInternalWriter.cs", label=parameters, span="604-604"];
m69_255 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="JsonSerializerInternalWriter.cs", label="JsonProperty memberProperty = MatchProperty(memberProperties, parameterInfo.Name, parameterInfo.ParameterType)", span="606-606"];
m69_257 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="JsonSerializerInternalWriter.cs", label="return null;", span="609-609"];
m69_243 [cluster="System.Type.GetConstructor(System.Type[])", file="JsonSerializerInternalWriter.cs", label="Entry System.Type.GetConstructor(System.Type[])", span="0-0"];
m69_256 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="JsonSerializerInternalWriter.cs", label="memberProperty == null || memberProperty.Writable", span="607-607"];
m69_231 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="JsonSerializerInternalWriter.cs", label="en.MoveNext()", span="572-572"];
m69_232 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="JsonSerializerInternalWriter.cs", label="ConstructorInfo conInfo = en.Current", span="574-574"];
m69_239 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", span="568-568"];
m69_228 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerInternalWriter.cs", label="return GetEnumerator();", span="564-564"];
m69_236 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="JsonSerializerInternalWriter.cs", label="objectType == typeof(Version)", span="584-584"];
m69_242 [cluster="System.Collections.IEnumerator.MoveNext()", file="JsonSerializerInternalWriter.cs", label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0"];
m69_258 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="JsonSerializerInternalWriter.cs", label="return constructor;", span="613-613"];
m69_587 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="JsonSerializerInternalWriter.cs", label="!IgnoreShouldSerializeMembers", span="1407-1407"];
m69_134 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="memberType != MemberTypes.Property && memberType != MemberTypes.Field", span="426-426"];
m69_584 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="JsonSerializerInternalWriter.cs", label="property.Writable = ReflectionUtils.CanSetMemberValue(member, allowNonPublicAccess, property.HasMemberAttribute)", span="1398-1398"];
m69_189 [cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateGet<T>(System.Reflection.MemberInfo)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateGet<T>(System.Reflection.MemberInfo)", span="38-38"];
m69_543 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="JsonSerializerInternalWriter.cs", label="List<MemberInfo> members = GetSerializableMembers(type)", span="1316-1316"];
m69_45 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="JsonWriter.WriteValue(writer, contract.TypeCode, value)", span="137-137"];
m69_106 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="isReference == null", span="231-231"];
m69_268 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="JsonSerializerInternalWriter.cs", label="!property.Ignored && property.Readable && ShouldSerialize(writer, property, value) && IsSpecified(writer, property, value)", span="529-529"];
m69_269 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="JsonSerializerInternalWriter.cs", label="property.PropertyContract == null", span="531-531"];
m69_271 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="JsonSerializerInternalWriter.cs", label="memberValue = property.ValueProvider.GetValue(value)", span="536-536"];
m69_270 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="JsonSerializerInternalWriter.cs", label="property.PropertyContract = Serializer._contractResolver.ResolveContract(property.PropertyType)", span="533-533"];
m69_275 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="JsonSerializerInternalWriter.cs", label="property.WritePropertyName(writer)", span="543-543"];
m69_276 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="JsonSerializerInternalWriter.cs", label="WriteReference(writer, memberValue)", span="544-544"];
m69_272 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="JsonSerializerInternalWriter.cs", label="memberContract = (property.PropertyContract.IsSealed) ? property.PropertyContract : GetContractSafe(memberValue)", span="537-537"];
m69_273 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="JsonSerializerInternalWriter.cs", label="ShouldWriteProperty(memberValue, property)", span="539-539"];
m69_274 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="JsonSerializerInternalWriter.cs", label="ShouldWriteReference(memberValue, property, memberContract, contract, member)", span="541-541"];
m69_277 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="JsonSerializerInternalWriter.cs", label="return false;", span="545-545"];
m69_380 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonSerializerInternalWriter.cs", label="IsValidCallback(method, parameters, typeof(OnErrorAttribute), currentOnError, ref prevAttributeType)", span="881-881"];
m69_394 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsConcurrentOrObservableCollection(System.Type)", file="JsonSerializerInternalWriter.cs", label="definition.FullName", span="897-897"];
m69_395 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsConcurrentOrObservableCollection(System.Type)", file="JsonSerializerInternalWriter.cs", label="''System.Collections.Concurrent.ConcurrentQueue`1''", span="899-899"];
m69_396 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsConcurrentOrObservableCollection(System.Type)", file="JsonSerializerInternalWriter.cs", label="''System.Collections.Concurrent.ConcurrentStack`1''", span="900-900"];
m69_397 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsConcurrentOrObservableCollection(System.Type)", file="JsonSerializerInternalWriter.cs", label="''System.Collections.Concurrent.ConcurrentBag`1''", span="901-901"];
m69_398 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsConcurrentOrObservableCollection(System.Type)", file="JsonSerializerInternalWriter.cs", label="''System.Collections.Concurrent.ConcurrentDictionary`2''", span="902-902"];
m69_400 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsConcurrentOrObservableCollection(System.Type)", file="JsonSerializerInternalWriter.cs", label="return true;", span="904-904"];
m69_401 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsConcurrentOrObservableCollection(System.Type)", file="JsonSerializerInternalWriter.cs", label="return false;", span="908-908"];
m69_403 [cluster="System.Type.IsGenericType()", file="JsonSerializerInternalWriter.cs", label="Entry System.Type.IsGenericType()", span="153-153"];
m69_393 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsConcurrentOrObservableCollection(System.Type)", file="JsonSerializerInternalWriter.cs", label="Type definition = t.GetGenericTypeDefinition()", span="895-895"];
m69_384 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", span="825-825"];
m69_399 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsConcurrentOrObservableCollection(System.Type)", file="JsonSerializerInternalWriter.cs", label="''System.Collections.ObjectModel.ObservableCollection`1''", span="903-903"];
m69_404 [cluster="System.Type.GetGenericTypeDefinition()", file="JsonSerializerInternalWriter.cs", label="Entry System.Type.GetGenericTypeDefinition()", span="0-0"];
m69_388 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", span="1251-1251"];
m69_402 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsConcurrentOrObservableCollection(System.Type)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.IsConcurrentOrObservableCollection(System.Type)", span="891-891"];
m69_382 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonSerializerInternalWriter.cs", label="onError.Add(JsonContract.CreateSerializationErrorCallback(method))", span="884-884"];
m69_392 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsConcurrentOrObservableCollection(System.Type)", file="JsonSerializerInternalWriter.cs", label="t.IsGenericType()", span="893-893"];
m69_381 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonSerializerInternalWriter.cs", label="onError = onError ?? new List<SerializationErrorCallback>()", span="883-883"];
m69_385 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipSerializing(System.Type)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipSerializing(System.Type)", span="929-929"];
m69_387 [cluster="System.Type.GetMethods(System.Reflection.BindingFlags)", file="JsonSerializerInternalWriter.cs", label="Entry System.Type.GetMethods(System.Reflection.BindingFlags)", span="0-0"];
m69_389 [cluster="Newtonsoft.Json.Serialization.JsonContract.CreateSerializationCallback(System.Reflection.MethodInfo)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonContract.CreateSerializationCallback(System.Reflection.MethodInfo)", span="306-306"];
m69_391 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsConcurrentOrObservableCollection(System.Type)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.IsConcurrentOrObservableCollection(System.Type)", span="891-891"];
m69_405 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipDeserialized(System.Type)", file="JsonSerializerInternalWriter.cs", label="IsConcurrentOrObservableCollection(t)", span="914-914"];
m69_383 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonSerializerInternalWriter.cs", label="currentOnError = method", span="885-885"];
m69_386 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipDeserialized(System.Type)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipDeserialized(System.Type)", span="911-911"];
m69_390 [cluster="Newtonsoft.Json.Serialization.JsonContract.CreateSerializationErrorCallback(System.Reflection.MethodInfo)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonContract.CreateSerializationErrorCallback(System.Reflection.MethodInfo)", span="311-311"];
m69_406 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipDeserialized(System.Type)", file="JsonSerializerInternalWriter.cs", label="return true;", span="916-916"];
m69_0 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", span="175-175"];
m69_1 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", file="JsonSerializerInternalWriter.cs", label="DefaultMembersSearchFlags = BindingFlags.Instance | BindingFlags.Public", span="182-182"];
m69_2 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", span="59-59"];
m69_3 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonSerializerInternalWriter.cs", label="jsonWriter == null", span="61-61"];
m69_332 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="!CheckForCircularReference(writer, value, null, contract, collectionContract, containerProperty)", span="652-652"];
m69_333 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="return;", span="654-654"];
m69_335 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="659-659"];
m69_337 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="converter.WriteJson(writer, value, GetInternalSerializer())", span="664-664"];
m69_339 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(null, writer.Path, ''Finished serializing {0} with converter {1}.''.FormatWith(CultureInfo.InvariantCulture, value.GetType(), converter.GetType())), null)", span="668-668"];
m69_341 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="644-644"];
m69_343 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="IWrappedCollection wrappedCollection = values as IWrappedCollection", span="677-677"];
m69_334 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="_serializeStack.Add(value)", span="657-657"];
m69_336 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(null, writer.Path, ''Started serializing {0} with converter {1}.''.FormatWith(CultureInfo.InvariantCulture, value.GetType(), converter.GetType())), null)", span="661-661"];
m69_338 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="666-666"];
m69_340 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="_serializeStack.RemoveAt(_serializeStack.Count - 1)", span="671-671"];
m69_342 [cluster="Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="44-44"];
m69_344 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="object underlyingList = wrappedCollection != null ? wrappedCollection.UnderlyingCollection : values", span="678-678"];
m69_102 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="isReference == null && containerProperty != null", span="221-221"];
m69_105 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="isReference = collectionContract.ItemIsReference", span="228-228"];
m69_216 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerializing(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonSerializerInternalWriter.cs", label="contract.InvokeOnSerializing(value, Serializer._context)", span="434-434"];
m69_511 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="object underlyingDictionary = wrappedDictionary != null ? wrappedDictionary.UnderlyingDictionary : values", span="1046-1046"];
m69_5 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", span="193-193"];
m69_7 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="throw new ArgumentNullException(nameof(type));", span="197-197"];
m69_9 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", span="193-193"];
m69_10 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JsonSerializerInternalWriter.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m69_12 [cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.Get(TKey)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.Get(TKey)", span="60-60"];
m69_13 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", span="208-208"];
m69_14 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="JsonSerializerInternalWriter.cs", label="bool ignoreSerializableAttribute", span="210-210"];
m69_11 [cluster="Unk.nameof", file="JsonSerializerInternalWriter.cs", label="Entry Unk.nameof", span=""];
m69_15 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="JsonSerializerInternalWriter.cs", label="ignoreSerializableAttribute = true", span="214-214"];
m69_4 [cluster="ThreadSafeStore<Type, JsonContract>.cstr", file="JsonSerializerInternalWriter.cs", label="Entry ThreadSafeStore<Type, JsonContract>.cstr", span=""];
m69_16 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="JsonSerializerInternalWriter.cs", label="MemberSerialization memberSerialization = JsonTypeReflector.GetObjectMemberSerialization(objectType, ignoreSerializableAttribute)", span="217-217"];
m69_675 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", span="1604-1604"];
m69_676 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="JsonSerializerInternalWriter.cs", label="MemberInfo specifiedMember = member.DeclaringType.GetProperty(member.Name + JsonTypeReflector.SpecifiedPostfix, BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic)", span="1606-1606"];
m69_678 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="JsonSerializerInternalWriter.cs", label="specifiedMember = member.DeclaringType.GetField(member.Name + JsonTypeReflector.SpecifiedPostfix, BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic)", span="1609-1609"];
m69_682 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="JsonSerializerInternalWriter.cs", label="property.GetIsSpecified = o => (bool)specifiedPropertyGet(o)", span="1619-1619"];
m69_683 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="JsonSerializerInternalWriter.cs", label="ReflectionUtils.CanSetMemberValue(specifiedMember, allowNonPublicAccess, false)", span="1621-1621"];
m69_684 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="JsonSerializerInternalWriter.cs", label="property.SetIsSpecified = JsonTypeReflector.ReflectionDelegateFactory.CreateSet<object>(specifiedMember)", span="1623-1623"];
m69_677 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="JsonSerializerInternalWriter.cs", label="specifiedMember == null", span="1607-1607"];
m69_679 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="JsonSerializerInternalWriter.cs", label="specifiedMember == null || ReflectionUtils.GetMemberUnderlyingType(specifiedMember) != typeof(bool)", span="1612-1612"];
m69_681 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="JsonSerializerInternalWriter.cs", label="Func<object, object> specifiedPropertyGet = JsonTypeReflector.ReflectionDelegateFactory.CreateGet<object>(specifiedMember)", span="1617-1617"];
m69_680 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="JsonSerializerInternalWriter.cs", label="return;", span="1614-1614"];
m69_685 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", span="1604-1604"];
m69_263 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParameterizedConstructor(System.Type)", file="JsonSerializerInternalWriter.cs", label="ConstructorInfo[] constructors = objectType.GetConstructors(BindingFlags.Public | BindingFlags.Instance)", span="635-635"];
m69_279 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="JsonSerializerInternalWriter.cs", label="return false;", span="550-550"];
m69_289 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="JsonSerializerInternalWriter.cs", label="memberValue = null", span="572-572"];
m69_290 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="JsonSerializerInternalWriter.cs", label="return false;", span="573-573"];
m69_291 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", span="527-527"];
m69_292 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", span="1206-1206"];
m69_295 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="writer.WriteStartObject()", span="578-578"];
m69_296 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="bool isReference = ResolveIsReference(contract, member, collectionContract, containerProperty) ?? HasFlag(Serializer._preserveReferencesHandling, PreserveReferencesHandling.Objects)", span="580-580"];
m69_297 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="isReference && (member == null || member.Writable || HasCreatorParameter(collectionContract, member))", span="582-582"];
m69_298 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="WriteReferenceIdProperty(writer, contract.UnderlyingType, value)", span="584-584"];
m69_299 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="ShouldWriteType(TypeNameHandling.Objects, contract, member, collectionContract, containerProperty)", span="586-586"];
m69_300 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="WriteTypeProperty(writer, contract.UnderlyingType)", span="588-588"];
m69_301 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="576-576"];
m69_303 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)", span="603-603"];
m69_293 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", span="1223-1223"];
m69_294 [cluster="Newtonsoft.Json.Serialization.IValueProvider.GetValue(object)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.IValueProvider.GetValue(object)", span="44-44"];
m69_582 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="JsonSerializerInternalWriter.cs", label="memberSerialization != MemberSerialization.Fields", span="1395-1395"];
m69_50 [cluster="Unk.IsIndexedProperty", file="JsonSerializerInternalWriter.cs", label="Entry Unk.IsIndexedProperty", span=""];
m69_504 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.EnsureNotNullableType(System.Type)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.EnsureNotNullableType(System.Type)", span="270-270"];
m69_505 [cluster="System.Type.IsSubclassOf(System.Type)", file="JsonSerializerInternalWriter.cs", label="Entry System.Type.IsSubclassOf(System.Type)", span="0-0"];
m69_506 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", span="96-96"];
m69_508 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsJsonPrimitiveType(System.Type)", file="JsonSerializerInternalWriter.cs", label="PrimitiveTypeCode typeCode = ConvertUtils.GetTypeCode(t)", span="1216-1216"];
m69_503 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsJsonPrimitiveType(System.Type)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.IsJsonPrimitiveType(System.Type)", span="1214-1214"];
m69_507 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", span="1234-1234"];
m69_509 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsJsonPrimitiveType(System.Type)", file="JsonSerializerInternalWriter.cs", label="return (typeCode != PrimitiveTypeCode.Empty && typeCode != PrimitiveTypeCode.Object);", span="1218-1218"];
m69_99 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="bool? isReference = null", span="213-213"];
m69_319 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteTypeProperty(Newtonsoft.Json.JsonWriter, System.Type)", file="JsonSerializerInternalWriter.cs", label="writer.WritePropertyName(JsonTypeReflector.TypePropertyName, false)", span="625-625"];
m69_321 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteTypeProperty(Newtonsoft.Json.JsonWriter, System.Type)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteTypeProperty(Newtonsoft.Json.JsonWriter, System.Type)", span="616-616"];
m69_322 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, Newtonsoft.Json.TypeNameAssemblyFormatHandling, Newtonsoft.Json.Serialization.ISerializationBinder)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, Newtonsoft.Json.TypeNameAssemblyFormatHandling, Newtonsoft.Json.Serialization.ISerializationBinder)", span="147-147"];
m69_323 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", file="JsonSerializerInternalWriter.cs", label="return ((value & flag) == flag);", span="631-631"];
m69_324 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", span="629-629"];
m69_325 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.PreserveReferencesHandling, Newtonsoft.Json.PreserveReferencesHandling)", file="JsonSerializerInternalWriter.cs", label="return ((value & flag) == flag);", span="636-636"];
m69_326 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.PreserveReferencesHandling, Newtonsoft.Json.PreserveReferencesHandling)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.PreserveReferencesHandling, Newtonsoft.Json.PreserveReferencesHandling)", span="634-634"];
m69_327 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.TypeNameHandling)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.TypeNameHandling)", span="639-639"];
m69_320 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteTypeProperty(Newtonsoft.Json.JsonWriter, System.Type)", file="JsonSerializerInternalWriter.cs", label="writer.WriteValue(typeName)", span="626-626"];
m69_328 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.TypeNameHandling)", file="JsonSerializerInternalWriter.cs", label="return ((value & flag) == flag);", span="641-641"];
m69_221 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerialized(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonSerializerInternalWriter.cs", label="contract.InvokeOnSerialized(value, Serializer._context)", span="444-444"];
m69_122 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="239-239"];
m69_687 [cluster="System.Type.GetField(string, System.Reflection.BindingFlags)", file="JsonSerializerInternalWriter.cs", label="Entry System.Type.GetField(string, System.Reflection.BindingFlags)", span="0-0"];
m69_575 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalWriter.cs", label="return propertyName;", span="1182-1182"];
m69_39 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="contract.TypeCode == PrimitiveTypeCode.Bytes", span="127-127"];
m69_440 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="contract.OverrideCreator = JsonTypeReflector.ReflectionDelegateFactory.CreateParameterizedConstructor(overrideConstructor)", span="1005-1005"];
m69_429 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="contract.DictionaryKeyResolver = s => namingStrategy.GetDictionaryKey(s)", span="976-976"];
m69_430 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="contract.DictionaryKeyResolver = ResolveDictionaryKey", span="980-980"];
m69_431 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="ConstructorInfo overrideConstructor = GetAttributeConstructor(contract.NonNullableUnderlyingType)", span="983-983"];
m69_433 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="ParameterInfo[] parameters = overrideConstructor.GetParameters()", span="987-987"];
m69_435 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="parameters.Length == 0", span="992-992"];
m69_436 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="contract.HasParameterizedCreator = false", span="994-994"];
m69_438 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="contract.HasParameterizedCreator = true", span="998-998"];
m69_439 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="throw new JsonException(''Constructor for '{0}' must have no parameters or a single parameter that implements '{1}'.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType, expectedParameterType));", span="1002-1002"];
m69_441 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="return contract;", span="1008-1008"];
m69_444 [cluster="string.FormatWith(System.IFormatProvider, object, object)", file="JsonSerializerInternalWriter.cs", label="Entry string.FormatWith(System.IFormatProvider, object, object)", span="52-52"];
m69_427 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="containerAttribute?.NamingStrategyType != null", span="973-973"];
m69_95 [cluster="System.Array.IndexOf<T>(T[], T)", file="JsonSerializerInternalWriter.cs", label="Entry System.Array.IndexOf<T>(T[], T)", span="0-0"];
m69_425 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="InitializeContract(contract)", span="970-970"];
m69_432 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="overrideConstructor != null", span="985-985"];
m69_434 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="Type expectedParameterType = (contract.DictionaryKeyType != null && contract.DictionaryValueType != null)\r\n                    ? typeof(IEnumerable<>).MakeGenericType(typeof(KeyValuePair<,>).MakeGenericType(contract.DictionaryKeyType, contract.DictionaryValueType))\r\n                    : typeof(IDictionary)", span="988-990"];
m69_437 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="parameters.Length == 1 && expectedParameterType.IsAssignableFrom(parameters[0].ParameterType)", span="996-996"];
m69_442 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", span="967-967"];
m69_426 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="JsonContainerAttribute containerAttribute = JsonTypeReflector.GetAttribute<JsonContainerAttribute>(objectType)", span="972-972"];
m69_428 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="NamingStrategy namingStrategy = JsonTypeReflector.GetContainerNamingStrategy(containerAttribute)", span="975-975"];
m69_445 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Entry lambda expression", span="976-976"];
m69_182 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="JsonSerializerInternalWriter.cs", label="contract.ExtensionDataGetter = extensionDataGetter", span="536-536"];
m69_24 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="JsonSerializerInternalWriter.cs", label="serializableMembers.Add(member)", span="243-243"];
m69_588 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="JsonSerializerInternalWriter.cs", label="property.ShouldSerialize = CreateShouldSerializeTest(member)", span="1409-1409"];
m69_589 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="JsonSerializerInternalWriter.cs", label="!IgnoreIsSpecifiedMembers", span="1412-1412"];
m69_590 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="JsonSerializerInternalWriter.cs", label="SetIsSpecifiedActions(property, member, allowNonPublicAccess)", span="1414-1414"];
m69_591 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="JsonSerializerInternalWriter.cs", label="return property;", span="1417-1417"];
m69_592 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", span="1385-1385"];
m69_593 [cluster="Unk.CanSetMemberValue", file="JsonSerializerInternalWriter.cs", label="Entry Unk.CanSetMemberValue", span=""];
m69_109 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="211-211"];
m69_259 [cluster="System.Collections.Generic.List<T>.Add(T)", file="JsonSerializerInternalWriter.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m69_260 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="576-576"];
m69_330 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="ShouldWriteReference(value, null, contract, collectionContract, containerProperty)", span="646-646"];
m69_38 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="125-125"];
m69_309 [cluster="System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.Contains(TKey)", file="JsonSerializerInternalWriter.cs", label="Entry System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.Contains(TKey)", span="0-0"];
m69_22 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="JsonSerializerInternalWriter.cs", label="SerializeCompilerGeneratedMembers || !member.IsDefined(typeof(CompilerGeneratedAttribute), true)", span="238-238"];
m69_65 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="attribute != null", span="341-341"];
m69_77 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="contract.OverrideCreator = JsonTypeReflector.ReflectionDelegateFactory.CreateParameterizedConstructor(overrideConstructor)", span="367-367"];
m69_76 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="overrideConstructor != null", span="365-365"];
m69_74 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="contract.IsInstantiable", span="360-360"];
m69_59 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="bool ignoreSerializableAttribute", span="328-328"];
m69_61 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="contract.MemberSerialization = JsonTypeReflector.GetObjectMemberSerialization(contract.NonNullableUnderlyingType, ignoreSerializableAttribute)", span="335-335"];
m69_69 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="NamingStrategy namingStrategy = JsonTypeReflector.GetContainerNamingStrategy(attribute)", span="348-348"];
m69_70 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="extensionDataNameResolver = s => namingStrategy.GetDictionaryKey(s)", span="349-349"];
m69_72 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="extensionDataNameResolver = ResolveExtensionDataName", span="355-355"];
m69_79 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="contract.MemberSerialization == MemberSerialization.Fields", span="370-370"];
m69_81 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="ConstructorInfo constructor = GetParameterizedConstructor(contract.NonNullableUnderlyingType)", span="383-383"];
m69_83 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="contract.ParameterizedCreator = JsonTypeReflector.ReflectionDelegateFactory.CreateParameterizedConstructor(constructor)", span="386-386"];
m69_56 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="throw new JsonSerializationException(''Unable to serialize instance of '{0}'.''.FormatWith(CultureInfo.InvariantCulture, objectType));", span="322-322"];
m69_57 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="JsonObjectContract contract = new JsonObjectContract(objectType)", span="325-325"];
m69_63 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="Func<string, string> extensionDataNameResolver = null", span="338-338"];
m69_67 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="contract.ItemNullValueHandling = attribute._itemNullValueHandling", span="344-344"];
m69_64 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="JsonObjectAttribute attribute = JsonTypeReflector.GetCachedAttribute<JsonObjectAttribute>(contract.NonNullableUnderlyingType)", span="340-340"];
m69_75 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="ConstructorInfo overrideConstructor = GetAttributeConstructor(contract.NonNullableUnderlyingType)", span="362-362"];
m69_73 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="contract.ExtensionDataNameResolver = extensionDataNameResolver", span="358-358"];
m69_60 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="ignoreSerializableAttribute = true", span="332-332"];
m69_62 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="contract.Properties.AddRange(CreateProperties(contract.NonNullableUnderlyingType, contract.MemberSerialization))", span="336-336"];
m69_68 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="attribute.NamingStrategyType != null", span="346-346"];
m69_71 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="extensionDataNameResolver == null", span="353-353"];
m69_78 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="contract.CreatorParameters.AddRange(CreateConstructorParameters(overrideConstructor, contract.Properties))", span="368-368"];
m69_82 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="constructor != null", span="384-384"];
m69_58 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="InitializeContract(contract)", span="326-326"];
m69_66 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="contract.ItemRequired = attribute._itemRequired", span="343-343"];
m69_84 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="contract.CreatorParameters.AddRange(CreateConstructorParameters(constructor, contract.Properties))", span="387-387"];
m69_89 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="contract.CreatorParameters.AddRange(CreateConstructorParameters(constructor, contract.Properties))", span="398-398"];
m69_345 [cluster="Unk.GetCallbackMethodsForType", file="JsonSerializerInternalWriter.cs", label="Entry Unk.GetCallbackMethodsForType", span=""];
m69_346 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", span="825-825"];
m69_347 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonSerializerInternalWriter.cs", label="onSerializing = null", span="827-827"];
m69_352 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonSerializerInternalWriter.cs", label="GetClassHierarchyForType(type)", span="833-833"];
m69_353 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonSerializerInternalWriter.cs", label="MethodInfo currentOnSerializing = null", span="836-836"];
m69_354 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonSerializerInternalWriter.cs", label="MethodInfo currentOnSerialized = null", span="837-837"];
m69_355 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonSerializerInternalWriter.cs", label="MethodInfo currentOnDeserializing = null", span="838-838"];
m69_356 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonSerializerInternalWriter.cs", label="MethodInfo currentOnDeserialized = null", span="839-839"];
m69_358 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonSerializerInternalWriter.cs", label="bool skipSerializing = ShouldSkipSerializing(baseType)", span="842-842"];
m69_359 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonSerializerInternalWriter.cs", label="bool skipDeserialized = ShouldSkipDeserialized(baseType)", span="843-843"];
m69_364 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonSerializerInternalWriter.cs", label="!skipSerializing && IsValidCallback(method, parameters, typeof(OnSerializingAttribute), currentOnSerializing, ref prevAttributeType)", span="857-857"];
m69_365 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonSerializerInternalWriter.cs", label="onSerializing = onSerializing ?? new List<SerializationCallback>()", span="859-859"];
m69_351 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonSerializerInternalWriter.cs", label="onError = null", span="831-831"];
m69_349 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonSerializerInternalWriter.cs", label="onDeserializing = null", span="829-829"];
m69_350 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonSerializerInternalWriter.cs", label="onDeserialized = null", span="830-830"];
m69_348 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonSerializerInternalWriter.cs", label="onSerialized = null", span="828-828"];
m69_362 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonSerializerInternalWriter.cs", label="Type prevAttributeType = null", span="854-854"];
m69_357 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonSerializerInternalWriter.cs", label="MethodInfo currentOnError = null", span="840-840"];
m69_360 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonSerializerInternalWriter.cs", label="baseType.GetMethods(BindingFlags.NonPublic | BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly)", span="845-845"];
m69_363 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonSerializerInternalWriter.cs", label="ParameterInfo[] parameters = method.GetParameters()", span="855-855"];
m69_366 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonSerializerInternalWriter.cs", label="onSerializing.Add(JsonContract.CreateSerializationCallback(method))", span="860-860"];
m69_167 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="JsonSerializerInternalWriter.cs", label="createdType = typeof(Dictionary<,>).MakeGenericType(keyType, valueType)", span="481-481"];
m69_54 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", span="1453-1453"];
m69_55 [cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="413-413"];
m69_85 [cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="878-878"];
m69_86 [cluster="Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Type)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Type)", span="1154-1154"];
m69_90 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="739-739"];
m69_93 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="1043-1043"];
m69_87 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="644-644"];
m69_94 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="895-895"];
m69_37 [cluster="Newtonsoft.Json.Serialization.IContractResolver.ResolveContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.IContractResolver.ResolveContract(System.Type)", span="43-43"];
m69_261 [cluster="System.Reflection.MethodBase.GetParameters()", file="JsonSerializerInternalWriter.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m69_278 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(System.Type)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(System.Type)", span="46-46"];
m69_281 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.MatchProperty(Newtonsoft.Json.Serialization.JsonPropertyCollection, string, System.Type)", file="JsonSerializerInternalWriter.cs", label="name == null", span="680-680"];
m69_282 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.MatchProperty(Newtonsoft.Json.Serialization.JsonPropertyCollection, string, System.Type)", file="JsonSerializerInternalWriter.cs", label="return null;", span="682-682"];
m69_284 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.MatchProperty(Newtonsoft.Json.Serialization.JsonPropertyCollection, string, System.Type)", file="JsonSerializerInternalWriter.cs", label="property == null || property.PropertyType != type", span="687-687"];
m69_286 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.MatchProperty(Newtonsoft.Json.Serialization.JsonPropertyCollection, string, System.Type)", file="JsonSerializerInternalWriter.cs", label="return property;", span="692-692"];
m69_288 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty(string)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty(string)", span="125-125"];
m69_280 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", span="70-70"];
m69_287 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.MatchProperty(Newtonsoft.Json.Serialization.JsonPropertyCollection, string, System.Type)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.MatchProperty(Newtonsoft.Json.Serialization.JsonPropertyCollection, string, System.Type)", span="676-676"];
m69_283 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.MatchProperty(Newtonsoft.Json.Serialization.JsonPropertyCollection, string, System.Type)", file="JsonSerializerInternalWriter.cs", label="JsonProperty property = properties.GetClosestMatchProperty(name)", span="685-685"];
m69_285 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.MatchProperty(Newtonsoft.Json.Serialization.JsonPropertyCollection, string, System.Type)", file="JsonSerializerInternalWriter.cs", label="return null;", span="689-689"];
m69_475 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="SerializeValue(writer, memberValue, valueContract, null, contract, member)", span="959-959"];
m69_188 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetReference(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetReference(Newtonsoft.Json.JsonWriter, object)", span="365-365"];
m69_700 [cluster="Newtonsoft.Json.Serialization.NamingStrategy.GetExtensionDataName(string)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.NamingStrategy.GetExtensionDataName(string)", span="72-72"];
m69_580 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="JsonSerializerInternalWriter.cs", label="property.AttributeProvider = new ReflectionAttributeProvider(member)", span="1391-1391"];
m69_470 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="JsonContract valueContract = GetContractSafe(memberValue)", span="945-945"];
m69_471 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="!ShouldWriteDynamicProperty(memberValue)", span="947-947"];
m69_472 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="CheckForCircularReference(writer, memberValue, null, valueContract, contract, member)", span="952-952"];
m69_473 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="string resolvedPropertyName = (contract.PropertyNameResolver != null)\r\n                                ? contract.PropertyNameResolver(memberName)\r\n                                : memberName", span="954-956"];
m69_474 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="writer.WritePropertyName(resolvedPropertyName)", span="958-958"];
m69_265 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParameterizedConstructor(System.Type)", file="JsonSerializerInternalWriter.cs", label="return constructors[0];", span="638-638"];
m69_17 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="JsonSerializerInternalWriter.cs", label="IEnumerable<MemberInfo> allMembers = ReflectionUtils.GetFieldsAndProperties(objectType, BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.Static)\r\n                .Where(m => !ReflectionUtils.IsIndexedProperty(m))", span="219-220"];
m69_446 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="namingStrategy.GetDictionaryKey(s)", span="976-976"];
m69_267 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParameterizedConstructor(System.Type)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetParameterizedConstructor(System.Type)", span="621-621"];
m69_20 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="239-239"];
m69_19 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetContractSafe(object)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetContractSafe(object)", span="115-115"];
m69_29 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetInternalSerializer()", file="JsonSerializerInternalWriter.cs", label="return InternalSerializer;", span="112-112"];
m69_18 [cluster="Unk.nameof", file="JsonSerializerInternalWriter.cs", label="Entry Unk.nameof", span=""];
m69_21 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", span="350-350"];
m69_31 [cluster="Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalWriter)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalWriter)", span="247-247"];
m69_26 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetInternalSerializer()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetInternalSerializer()", span="105-105"];
m69_28 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetInternalSerializer()", file="JsonSerializerInternalWriter.cs", label="InternalSerializer = new JsonSerializerProxy(this)", span="109-109"];
m69_30 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetInternalSerializer()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetInternalSerializer()", span="105-105"];
m69_34 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetContractSafe(object)", file="JsonSerializerInternalWriter.cs", label="return Serializer._contractResolver.ResolveContract(value.GetType());", span="122-122"];
m69_35 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetContractSafe(object)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetContractSafe(object)", span="115-115"];
m69_23 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.IsErrorHandled(object, Newtonsoft.Json.Serialization.JsonContract, object, Newtonsoft.Json.IJsonLineInfo, string, System.Exception)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalBase.IsErrorHandled(object, Newtonsoft.Json.Serialization.JsonContract, object, Newtonsoft.Json.IJsonLineInfo, string, System.Exception)", span="108-108"];
m69_25 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.ClearErrorContext()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalBase.ClearErrorContext()", span="98-98"];
m69_27 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetInternalSerializer()", file="JsonSerializerInternalWriter.cs", label="InternalSerializer == null", span="107-107"];
m69_32 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetContractSafe(object)", file="JsonSerializerInternalWriter.cs", label="value == null", span="117-117"];
m69_33 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetContractSafe(object)", file="JsonSerializerInternalWriter.cs", label="return null;", span="119-119"];
m69_36 [cluster="object.GetType()", file="JsonSerializerInternalWriter.cs", label="Entry object.GetType()", span="0-0"];
m69_331 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type)", span="235-235"];
m69_52 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="!ReflectionUtils.IsIndexedProperty(m)", span="232-232"];
m69_316 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", span="745-745"];
m69_317 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", file="JsonSerializerInternalWriter.cs", label="return JsonTypeReflector.ReflectionDelegateFactory.CreateDefaultConstructor<object>(createdType);", span="747-747"];
m69_318 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", span="745-745"];
m69_481 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="_serializeStack.RemoveAt(_serializeStack.Count - 1)", span="978-978"];
m69_110 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="value == null", span="241-241"];
m69_116 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="valueContract.ContractType == JsonContractType.Array", span="254-254"];
m69_117 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="isReference = HasFlag(Serializer._preserveReferencesHandling, PreserveReferencesHandling.Arrays)", span="256-256"];
m69_118 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="isReference = HasFlag(Serializer._preserveReferencesHandling, PreserveReferencesHandling.Objects)", span="260-260"];
m69_119 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="!isReference.GetValueOrDefault()", span="264-264"];
m69_107 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="isReference = contract.IsReference", span="233-233"];
m69_264 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", span="1127-1127"];
m69_266 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="455-455"];
m69_96 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="52-52"];
m69_44 [cluster="System.Collections.Generic.List<T>.Add(T)", file="JsonSerializerInternalWriter.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m69_43 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="JsonSerializerInternalWriter.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m69_40 [cluster="System.Collections.Generic.List<T>.List()", file="JsonSerializerInternalWriter.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m69_46 [cluster="System.Reflection.MemberInfo.MemberType()", file="JsonSerializerInternalWriter.cs", label="Entry System.Reflection.MemberInfo.MemberType()", span="107-107"];
m69_48 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="!ReflectionUtils.IsIndexedProperty(m)", span="220-220"];
m69_41 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="JsonSerializerInternalWriter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="817-817"];
m69_47 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Entry lambda expression", span="220-220"];
m69_49 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Exit lambda expression", span="220-220"];
m69_204 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="setExtensionDataDictionaryValue(dictionary, key, value)", span="513-513"];
m69_665 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.CreateJsonConverterInstance(System.Type, object[])", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.CreateJsonConverterInstance(System.Type, object[])", span="200-200"];
m69_181 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="JsonSerializerInternalWriter.cs", label="ExtensionDataGetter extensionDataGetter = o =>\r\n                {\r\n                    object dictionary = getExtensionDataDictionary(o);\r\n                    if (dictionary == null)\r\n                    {\r\n                        return null;\r\n                    }\r\n\r\n                    return (IEnumerable<KeyValuePair<object, object>>)createEnumerableWrapper(dictionary);\r\n                }", span="525-534"];
m69_184 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", span="461-461"];
m69_187 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", span="277-277"];
m69_185 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(object)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(object)", span="714-714"];
m69_186 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", span="433-433"];
m69_129 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteProperty(object, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="return false;", span="277-277"];
m69_574 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalWriter.cs", label="escape = true", span="1181-1181"];
m69_409 [cluster="System.Array.GetValue(params int[])", file="JsonSerializerInternalWriter.cs", label="Entry System.Array.GetValue(params int[])", span="0-0"];
m69_103 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="isReference = containerProperty.ItemIsReference", span="223-223"];
m69_476 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label=Exception, span="962-962"];
m69_477 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="IsErrorHandled(value, contract, memberName, null, writer.ContainerPath, ex)", span="964-964"];
m69_478 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="HandleError(writer, initialDepth)", span="966-966"];
m69_479 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="throw;", span="970-970"];
m69_480 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="writer.WriteEndObject()", span="976-976"];
m69_558 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalWriter.cs", label="StringWriter sw = new StringWriter(CultureInfo.InvariantCulture)", span="1151-1151"];
m69_576 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalWriter.cs", label="escape = true", span="1186-1186"];
m69_577 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalWriter.cs", label="return name.ToString();", span="1187-1187"];
m69_578 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", span="1127-1127"];
m69_579 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.EnsureDateTime(System.DateTime, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.EnsureDateTime(System.DateTime, Newtonsoft.Json.DateTimeZoneHandling)", span="92-92"];
m69_581 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(System.IO.TextWriter, System.DateTime, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(System.IO.TextWriter, System.DateTime, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", span="631-631"];
m69_583 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeOffsetString(System.IO.TextWriter, System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeOffsetString(System.IO.TextWriter, System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", span="767-767"];
m69_585 [cluster="float.ToString(string, System.IFormatProvider)", file="JsonSerializerInternalWriter.cs", label="Entry float.ToString(string, System.IFormatProvider)", span="0-0"];
m69_586 [cluster="System.Convert.ToString(object, System.IFormatProvider)", file="JsonSerializerInternalWriter.cs", label="Entry System.Convert.ToString(object, System.IFormatProvider)", span="0-0"];
m69_135 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="return false;", span="428-428"];
m69_172 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="JsonSerializerInternalWriter.cs", label="Func<object> createExtensionDataDictionary = JsonTypeReflector.ReflectionDelegateFactory.CreateDefaultConstructor<object>(createdType)", span="495-495"];
m69_556 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", color=green, community=0, file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", prediction=23, span="1314-1314"];
m69_555 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="JsonSerializerInternalWriter.cs", label="return orderedProperties;", span="1343-1343"];
m69_557 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetNameTable()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetNameTable()", span="1346-1346"];
m69_547 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="JsonSerializerInternalWriter.cs", label="JsonPropertyCollection properties = new JsonPropertyCollection(type)", span="1324-1324"];
m69_546 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="JsonSerializerInternalWriter.cs", label="PropertyNameTable nameTable = GetNameTable()", span="1322-1322"];
m69_548 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="JsonSerializerInternalWriter.cs", label=members, span="1326-1326"];
m69_566 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetNameTable()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetNameTable()", span="1346-1346"];
m69_571 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="JsonSerializerInternalWriter.cs", label="valueProvider = new ReflectionValueProvider(member)", span="1368-1368"];
m69_559 [cluster="Newtonsoft.Json.Utilities.PropertyNameTable.Add(string)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Utilities.PropertyNameTable.Add(string)", span="76-76"];
m69_560 [cluster="Unk.OrderBy", file="JsonSerializerInternalWriter.cs", label="Entry Unk.OrderBy", span=""];
m69_545 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="JsonSerializerInternalWriter.cs", label="throw new JsonSerializationException(''Null collection of serializable members returned.'');", span="1319-1319"];
m69_549 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="JsonSerializerInternalWriter.cs", label="JsonProperty property = CreateProperty(member, memberSerialization)", span="1328-1328"];
m69_562 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Entry lambda expression", span="1342-1342"];
m69_567 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", span="1356-1356"];
m69_572 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="JsonSerializerInternalWriter.cs", label="return valueProvider;", span="1376-1376"];
m69_552 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="JsonSerializerInternalWriter.cs", label="property.PropertyName = nameTable.Add(property.PropertyName)", span="1335-1335"];
m69_544 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="JsonSerializerInternalWriter.cs", label="members == null", span="1317-1317"];
m69_550 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="JsonSerializerInternalWriter.cs", label="property != null", span="1330-1330"];
m69_553 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="JsonSerializerInternalWriter.cs", label="properties.AddProperty(property)", span="1338-1338"];
m69_563 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="p.Order ?? -1", span="1342-1342"];
m69_568 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="JsonSerializerInternalWriter.cs", label="IValueProvider valueProvider", span="1359-1359"];
m69_573 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", span="1356-1356"];
m69_554 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="JsonSerializerInternalWriter.cs", label="IList<JsonProperty> orderedProperties = properties.OrderBy(p => p.Order ?? -1).ToList()", span="1342-1342"];
m69_565 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetNameTable()", file="JsonSerializerInternalWriter.cs", label="return _nameTable;", span="1348-1348"];
m69_570 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="JsonSerializerInternalWriter.cs", label="valueProvider = new DynamicValueProvider(member)", span="1364-1364"];
m69_551 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="JsonSerializerInternalWriter.cs", label=nameTable, span="1333-1333"];
m69_564 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Exit lambda expression", span="1342-1342"];
m69_569 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="JsonSerializerInternalWriter.cs", label=DynamicCodeGeneration, span="1362-1362"];
m69_408 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipDeserialized(System.Type)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipDeserialized(System.Type)", span="911-911"];
m69_131 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteProperty(object, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="return false;", span="283-283"];
m69_222 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerialized(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerialized(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", span="437-437"];
m69_223 [cluster="Newtonsoft.Json.Serialization.JsonContract.InvokeOnSerialized(object, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonContract.InvokeOnSerialized(object, System.Runtime.Serialization.StreamingContext)", span="337-337"];
m69_127 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="return m;", span="420-420"];
m69_132 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Entry lambda expression", span="423-456"];
m69_130 [cluster="Unk.AddRange", file="JsonSerializerInternalWriter.cs", label="Entry Unk.AddRange", span=""];
m69_128 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Exit lambda expression", span="414-421"];
m69_133 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="MemberTypes memberType = m.MemberType()", span="425-425"];
m69_663 [cluster="Newtonsoft.Json.Serialization.NamingStrategy.GetPropertyName(string, bool)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.NamingStrategy.GetPropertyName(string, bool)", span="57-57"];
m69_171 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="JsonSerializerInternalWriter.cs", label="Action<object, object> setExtensionDataDictionary = (ReflectionUtils.CanSetMemberValue(member, true, false))\r\n                 ? JsonTypeReflector.ReflectionDelegateFactory.CreateSet<object>(member)\r\n                 : null", span="492-494"];
m69_203 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="setExtensionDataDictionary(o, dictionary)", span="510-510"];
m69_169 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="JsonSerializerInternalWriter.cs", label="Func<object, object> getExtensionDataDictionary = JsonTypeReflector.ReflectionDelegateFactory.CreateGet<object>(member)", span="488-488"];
m69_97 [cluster="Newtonsoft.Json.Linq.JToken.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Linq.JToken.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="414-414"];
m69_121 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="return Serializer.GetReferenceResolver().IsReferenced(this, value);", span="269-269"];
m69_407 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipDeserialized(System.Type)", file="JsonSerializerInternalWriter.cs", label="return false;", span="926-926"];
m69_534 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label=Exception, span="1102-1102"];
m69_537 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="throw;", span="1110-1110"];
m69_538 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="writer.WriteEndObject()", span="1120-1120"];
m69_539 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="_serializeStack.RemoveAt(_serializeStack.Count - 1)", span="1122-1122"];
m69_540 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="OnSerialized(writer, contract, underlyingDictionary)", span="1124-1124"];
m69_111 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="return false;", span="243-243"];
m69_175 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializerInternalWriter.cs", label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(null, writer.Path, ''Writing object reference to Id '{0}' for {1}.''.FormatWith(CultureInfo.InvariantCulture, reference, value.GetType())), null)", span="356-356"];
m69_176 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializerInternalWriter.cs", label="writer.WriteStartObject()", span="359-359"];
m69_183 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="916-916"];
m69_177 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializerInternalWriter.cs", label="writer.WritePropertyName(JsonTypeReflector.RefPropertyName, false)", span="360-360"];
m69_168 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="JsonSerializerInternalWriter.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m69_173 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializerInternalWriter.cs", label="string reference = GetReference(writer, value)", span="352-352"];
m69_178 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializerInternalWriter.cs", label="writer.WriteValue(reference)", span="361-361"];
m69_174 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializerInternalWriter.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="354-354"];
m69_179 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializerInternalWriter.cs", label="writer.WriteEndObject()", span="362-362"];
m69_180 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", span="350-350"];
m69_594 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", span="1589-1589"];
m69_666 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="JsonSerializerInternalWriter.cs", label="MethodInfo shouldSerializeMethod = member.DeclaringType.GetMethod(JsonTypeReflector.ShouldSerializePrefix + member.Name, ReflectionUtils.EmptyTypes)", span="1591-1591"];
m69_667 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="JsonSerializerInternalWriter.cs", label="shouldSerializeMethod == null || shouldSerializeMethod.ReturnType != typeof(bool)", span="1593-1593"];
m69_669 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="JsonSerializerInternalWriter.cs", label="MethodCall<object, object> shouldSerializeCall =\r\n                JsonTypeReflector.ReflectionDelegateFactory.CreateMethodCall<object>(shouldSerializeMethod)", span="1598-1599"];
m69_668 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="JsonSerializerInternalWriter.cs", label="return null;", span="1595-1595"];
m69_670 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="JsonSerializerInternalWriter.cs", label="return o => (bool)shouldSerializeCall(o);", span="1601-1601"];
m69_671 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", span="1589-1589"];
m69_369 [cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="429-429"];
m69_373 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="SerializeMultidimensionalArray(writer, values, contract, member, writer.Top, CollectionUtils.ArrayEmpty<int>())", span="747-747"];
m69_377 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="OnSerialized(writer, contract, values)", span="756-756"];
m69_368 [cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="421-421"];
m69_372 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="bool hasWrittenMetadataObject = WriteStartArray(writer, values, contract, member, collectionContract, containerProperty)", span="745-745"];
m69_376 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="_serializeStack.RemoveAt(_serializeStack.Count - 1)", span="754-754"];
m69_370 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="OnSerializing(writer, contract, values)", span="741-741"];
m69_371 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="_serializeStack.Add(values)", span="743-743"];
m69_374 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label=hasWrittenMetadataObject, span="749-749"];
m69_375 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="writer.WriteEndObject()", span="751-751"];
m69_378 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="739-739"];
m69_379 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ArrayEmpty<T>()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.ArrayEmpty<T>()", span="362-362"];
m69_310 [cluster="Newtonsoft.Json.Serialization.ReflectionAttributeProvider.ReflectionAttributeProvider(object)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.ReflectionAttributeProvider.ReflectionAttributeProvider(object)", span="43-43"];
m69_311 [cluster="Unk.SetPropertySettingsFromAttributes", file="JsonSerializerInternalWriter.cs", label="Entry Unk.SetPropertySettingsFromAttributes", span=""];
m69_312 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", span="740-740"];
m69_313 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", file="JsonSerializerInternalWriter.cs", label="return JsonTypeReflector.GetJsonConverter(objectType);", span="742-742"];
m69_314 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", span="740-740"];
m69_315 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(object)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(object)", span="178-178"];
m69_98 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="211-211"];
m69_53 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Exit lambda expression", span="232-232"];
m69_123 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Entry lambda expression", span="414-421"];
m69_607 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerInternalWriter.cs", label="NamingStrategy namingStrategy", span="1463-1463"];
m69_608 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerInternalWriter.cs", label="propertyAttribute?.NamingStrategyType != null", span="1464-1464"];
m69_604 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerInternalWriter.cs", label="mappedName = name", span="1457-1457"];
m69_606 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerInternalWriter.cs", label="JsonContainerAttribute containerAttribute = JsonTypeReflector.GetAttribute<JsonContainerAttribute>(declaringType)", span="1461-1461"];
m69_609 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerInternalWriter.cs", label="namingStrategy = JsonTypeReflector.CreateNamingStrategyInstance(propertyAttribute.NamingStrategyType, propertyAttribute.NamingStrategyParameters)", span="1466-1466"];
m69_605 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerInternalWriter.cs", label="hasSpecifiedName = false", span="1458-1458"];
m69_610 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerInternalWriter.cs", label="containerAttribute?.NamingStrategyType != null", span="1468-1468"];
m69_706 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(string)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(string)", span="1677-1677"];
m69_707 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(string)", file="JsonSerializerInternalWriter.cs", label="return ResolvePropertyName(propertyName);", span="1681-1681"];
m69_708 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(string)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(string)", span="1677-1677"];
m69_449 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="JsonArrayContract contract = new JsonArrayContract(objectType)", span="1018-1018"];
m69_450 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="InitializeContract(contract)", span="1019-1019"];
m69_451 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="ConstructorInfo overrideConstructor = GetAttributeConstructor(contract.NonNullableUnderlyingType)", span="1021-1021"];
m69_459 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="throw new JsonException(''Constructor for '{0}' must have no parameters or a single parameter that implements '{1}'.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType, expectedParameterType));", span="1040-1040"];
m69_461 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="return contract;", span="1046-1046"];
m69_463 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", span="114-114"];
m69_464 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", span="1054-1054"];
m69_457 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="parameters.Length == 1 && expectedParameterType.IsAssignableFrom(parameters[0].ParameterType)", span="1034-1034"];
m69_468 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", span="1054-1054"];
m69_458 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="contract.HasParameterizedCreator = true", span="1036-1036"];
m69_455 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="parameters.Length == 0", span="1030-1030"];
m69_452 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="overrideConstructor != null", span="1023-1023"];
m69_454 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="Type expectedParameterType = (contract.CollectionItemType != null)\r\n                    ? typeof(IEnumerable<>).MakeGenericType(contract.CollectionItemType)\r\n                    : typeof(IEnumerable)", span="1026-1028"];
m69_460 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="contract.OverrideCreator = JsonTypeReflector.ReflectionDelegateFactory.CreateParameterizedConstructor(overrideConstructor)", span="1043-1043"];
m69_462 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", span="1016-1016"];
m69_466 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="InitializeContract(contract)", span="1057-1057"];
m69_465 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="JsonPrimitiveContract contract = new JsonPrimitiveContract(objectType)", span="1056-1056"];
m69_469 [cluster="Newtonsoft.Json.Serialization.JsonPrimitiveContract.JsonPrimitiveContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonPrimitiveContract.JsonPrimitiveContract(System.Type)", span="42-42"];
m69_467 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="return contract;", span="1059-1059"];
m69_456 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="contract.HasParameterizedCreator = false", span="1032-1032"];
m69_453 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="ParameterInfo[] parameters = overrideConstructor.GetParameters()", span="1025-1025"];
m69_522 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="JsonSerializerInternalWriter.cs", label="method.IsVirtual", span="1268-1268"];
m69_524 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="JsonSerializerInternalWriter.cs", label="method.ReturnType != typeof(void)", span="1273-1273"];
m69_523 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="JsonSerializerInternalWriter.cs", label="throw new JsonException(''Virtual Method '{0}' of type '{1}' cannot be marked with '{2}' attribute.''.FormatWith(CultureInfo.InvariantCulture, method, GetClrTypeFullName(method.DeclaringType), attributeType));", span="1270-1270"];
m69_525 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="JsonSerializerInternalWriter.cs", label="throw new JsonException(''Serialization Callback '{1}' in type '{0}' must return void.''.FormatWith(CultureInfo.InvariantCulture, GetClrTypeFullName(method.DeclaringType), method));", span="1275-1275"];
m69_526 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="JsonSerializerInternalWriter.cs", label="attributeType == typeof(OnErrorAttribute)", span="1278-1278"];
m69_529 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="JsonSerializerInternalWriter.cs", label="parameters == null || parameters.Length != 1 || parameters[0].ParameterType != typeof(StreamingContext)", span="1287-1287"];
m69_532 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="JsonSerializerInternalWriter.cs", label="return true;", span="1295-1295"];
m69_510 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsJsonPrimitiveType(System.Type)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.IsJsonPrimitiveType(System.Type)", span="1214-1214"];
m69_512 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="JsonSerializerInternalWriter.cs", label="type == typeof(Type) || type.IsSubclassOf(typeof(Type))", span="1243-1243"];
m69_514 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="JsonSerializerInternalWriter.cs", label="return false;", span="1248-1248"];
m69_515 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", span="1234-1234"];
m69_516 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="JsonSerializerInternalWriter.cs", label="!method.IsDefined(attributeType, false)", span="1253-1253"];
m69_517 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="JsonSerializerInternalWriter.cs", label="return false;", span="1255-1255"];
m69_518 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="JsonSerializerInternalWriter.cs", label="currentCallback != null", span="1258-1258"];
m69_519 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="JsonSerializerInternalWriter.cs", label="throw new JsonException(''Invalid attribute. Both '{0}' and '{1}' in type '{2}' have '{3}'.''.FormatWith(CultureInfo.InvariantCulture, method, currentCallback, GetClrTypeFullName(method.DeclaringType), attributeType));", span="1260-1260"];
m69_520 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="JsonSerializerInternalWriter.cs", label="prevAttributeType != null", span="1263-1263"];
m69_527 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="JsonSerializerInternalWriter.cs", label="parameters == null || parameters.Length != 2 || parameters[0].ParameterType != typeof(StreamingContext) || parameters[1].ParameterType != typeof(ErrorContext)", span="1280-1280"];
m69_528 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="JsonSerializerInternalWriter.cs", label="throw new JsonException(''Serialization Error Callback '{1}' in type '{0}' must have two parameters of type '{2}' and '{3}'.''.FormatWith(CultureInfo.InvariantCulture, GetClrTypeFullName(method.DeclaringType), method, typeof(StreamingContext), typeof(ErrorContext)));", span="1282-1282"];
m69_530 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="JsonSerializerInternalWriter.cs", label="throw new JsonException(''Serialization Callback '{1}' in type '{0}' must have a single parameter of type '{2}'.''.FormatWith(CultureInfo.InvariantCulture, GetClrTypeFullName(method.DeclaringType), method, typeof(StreamingContext)));", span="1289-1289"];
m69_531 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="JsonSerializerInternalWriter.cs", label="prevAttributeType = attributeType", span="1293-1293"];
m69_533 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", span="1251-1251"];
m69_535 [cluster="string.FormatWith(System.IFormatProvider, object, object, object, object)", file="JsonSerializerInternalWriter.cs", label="Entry string.FormatWith(System.IFormatProvider, object, object, object, object)", span="62-62"];
m69_536 [cluster="string.FormatWith(System.IFormatProvider, object, object, object)", file="JsonSerializerInternalWriter.cs", label="Entry string.FormatWith(System.IFormatProvider, object, object, object)", span="57-57"];
m69_513 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="JsonSerializerInternalWriter.cs", label="return true;", span="1245-1245"];
m69_521 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="JsonSerializerInternalWriter.cs", label="throw new JsonException(''Invalid Callback. Method '{3}' in type '{2}' has both '{0}' and '{1}'.''.FormatWith(CultureInfo.InvariantCulture, prevAttributeType, attributeType, GetClrTypeFullName(method.DeclaringType), method));", span="1265-1265"];
m69_541 [cluster="System.Type.IsGenericTypeDefinition()", file="JsonSerializerInternalWriter.cs", label="Entry System.Type.IsGenericTypeDefinition()", span="162-162"];
m69_104 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="isReference == null && collectionContract != null", span="226-226"];
m69_213 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="return null;", span="530-530"];
m69_219 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.EnumerableDictionaryWrapper(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TEnumeratorKey, TEnumeratorValue>>)", file="JsonSerializerInternalWriter.cs", label="_e = e", span="551-551"];
m69_220 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.EnumerableDictionaryWrapper(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TEnumeratorKey, TEnumeratorValue>>)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.EnumerableDictionaryWrapper(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TEnumeratorKey, TEnumeratorValue>>)", span="548-548"];
m69_595 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalWriter.cs", label="property.ShouldSerialize == null", span="1208-1208"];
m69_686 [cluster="System.Type.GetProperty(string, System.Reflection.BindingFlags)", file="JsonSerializerInternalWriter.cs", label="Entry System.Type.GetProperty(string, System.Reflection.BindingFlags)", span="0-0"];
m69_664 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", span="1632-1632"];
m69_691 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", file="JsonSerializerInternalWriter.cs", label="NamingStrategy != null", span="1634-1634"];
m69_692 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", file="JsonSerializerInternalWriter.cs", label="return NamingStrategy.GetPropertyName(propertyName, false);", span="1636-1636"];
m69_693 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", file="JsonSerializerInternalWriter.cs", label="return propertyName;", span="1639-1639"];
m69_694 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", span="1632-1632"];
m69_598 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerInternalWriter.cs", label="JsonRequiredAttribute requiredAttribute = JsonTypeReflector.GetAttribute<JsonRequiredAttribute>(attributeProvider)", span="1439-1439"];
m69_599 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerInternalWriter.cs", label="string mappedName", span="1441-1441"];
m69_597 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerInternalWriter.cs", label="JsonPropertyAttribute propertyAttribute = JsonTypeReflector.GetAttribute<JsonPropertyAttribute>(attributeProvider)", span="1438-1438"];
m69_600 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerInternalWriter.cs", label="bool hasSpecifiedName", span="1442-1442"];
m69_596 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", span="1420-1420"];
m69_601 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerInternalWriter.cs", label="propertyAttribute?.PropertyName != null", span="1443-1443"];
m69_701 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(string)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(string)", span="1662-1662"];
m69_702 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(string)", file="JsonSerializerInternalWriter.cs", label="NamingStrategy != null", span="1664-1664"];
m69_703 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(string)", file="JsonSerializerInternalWriter.cs", label="return NamingStrategy.GetDictionaryKey(dictionaryKey);", span="1666-1666"];
m69_704 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(string)", file="JsonSerializerInternalWriter.cs", label="return ResolvePropertyName(dictionaryKey);", span="1669-1669"];
m69_705 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(string)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(string)", span="1662-1662"];
m69_688 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Entry lambda expression", span="1619-1619"];
m69_51 [cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="405-405"];
m69_113 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="return false;", span="247-247"];
m69_112 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="valueContract.ContractType == JsonContractType.Primitive || valueContract.ContractType == JsonContractType.String", span="245-245"];
m69_114 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="bool? isReference = ResolveIsReference(valueContract, property, collectionContract, containerProperty)", span="250-250"];
m69_124 [cluster="System.Nullable<T>.GetValueOrDefault()", file="JsonSerializerInternalWriter.cs", label="Entry System.Nullable<T>.GetValueOrDefault()", span="0-0"];
m69_125 [cluster="Newtonsoft.Json.JsonSerializer.GetReferenceResolver()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.JsonSerializer.GetReferenceResolver()", span="1144-1144"];
m69_126 [cluster="Newtonsoft.Json.Serialization.IReferenceResolver.IsReferenced(object, object)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.IReferenceResolver.IsReferenced(object, object)", span="56-56"];
m69_214 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerializing(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonSerializerInternalWriter.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="429-429"];
m69_212 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerializing(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerializing(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", span="427-427"];
m69_215 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerializing(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonSerializerInternalWriter.cs", label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(null, writer.Path, ''Started serializing {0}''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType)), null)", span="431-431"];
m69_673 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="(bool)shouldSerializeCall(o)", span="1601-1601"];
m69_672 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Entry lambda expression", span="1601-1601"];
m69_674 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Exit lambda expression", span="1601-1601"];
m69_689 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="(bool)specifiedPropertyGet(o)", span="1619-1619"];
m69_690 [cluster="lambda expression", file="JsonSerializerInternalWriter.cs", label="Exit lambda expression", span="1619-1619"];
m69_614 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerInternalWriter.cs", label="property.PropertyName = namingStrategy.GetPropertyName(mappedName, hasSpecifiedName)", span="1479-1479"];
m69_615 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerInternalWriter.cs", label="property.PropertyName = ResolvePropertyName(mappedName)", span="1483-1483"];
m69_616 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerInternalWriter.cs", label="property.UnderlyingName = name", span="1486-1486"];
m69_619 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerInternalWriter.cs", label="property._required = propertyAttribute._required", span="1491-1491"];
m69_620 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerInternalWriter.cs", label="property.Order = propertyAttribute._order", span="1492-1492"];
m69_621 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerInternalWriter.cs", label="property.DefaultValueHandling = propertyAttribute._defaultValueHandling", span="1493-1493"];
m69_623 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerInternalWriter.cs", label="property.NullValueHandling = propertyAttribute._nullValueHandling", span="1495-1495"];
m69_624 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerInternalWriter.cs", label="property.ReferenceLoopHandling = propertyAttribute._referenceLoopHandling", span="1496-1496"];
m69_625 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerInternalWriter.cs", label="property.ObjectCreationHandling = propertyAttribute._objectCreationHandling", span="1497-1497"];
m69_626 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerInternalWriter.cs", label="property.TypeNameHandling = propertyAttribute._typeNameHandling", span="1498-1498"];
m69_627 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerInternalWriter.cs", label="property.IsReference = propertyAttribute._isReference", span="1499-1499"];
m69_628 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerInternalWriter.cs", label="property.ItemIsReference = propertyAttribute._itemIsReference", span="1501-1501"];
m69_629 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerInternalWriter.cs", label="property.ItemConverter = propertyAttribute.ItemConverterType != null ? JsonTypeReflector.CreateJsonConverterInstance(propertyAttribute.ItemConverterType, propertyAttribute.ItemConverterParameters) : null", span="1502-1502"];
m69_630 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerInternalWriter.cs", label="property.ItemReferenceLoopHandling = propertyAttribute._itemReferenceLoopHandling", span="1503-1503"];
m69_631 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerInternalWriter.cs", label="property.ItemTypeNameHandling = propertyAttribute._itemTypeNameHandling", span="1504-1504"];
m69_632 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerInternalWriter.cs", label="property.NullValueHandling = null", span="1508-1508"];
m69_633 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerInternalWriter.cs", label="property.ReferenceLoopHandling = null", span="1509-1509"];
m69_634 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerInternalWriter.cs", label="property.ObjectCreationHandling = null", span="1510-1510"];
m69_635 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerInternalWriter.cs", label="property.TypeNameHandling = null", span="1511-1511"];
m69_636 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerInternalWriter.cs", label="property.IsReference = null", span="1512-1512"];
m69_637 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerInternalWriter.cs", label="property.ItemIsReference = null", span="1513-1513"];
m69_638 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerInternalWriter.cs", label="property.ItemConverter = null", span="1514-1514"];
m69_639 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerInternalWriter.cs", label="property.ItemReferenceLoopHandling = null", span="1515-1515"];
m69_640 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerInternalWriter.cs", label="property.ItemTypeNameHandling = null", span="1516-1516"];
m69_642 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerInternalWriter.cs", label="property._required = Required.Always", span="1530-1530"];
m69_644 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerInternalWriter.cs", label="property.HasMemberAttribute = hasMemberAttribute", span="1534-1534"];
m69_645 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerInternalWriter.cs", label="bool hasJsonIgnoreAttribute =\r\n                JsonTypeReflector.GetAttribute<JsonIgnoreAttribute>(attributeProvider) != null\r\n                    // automatically ignore extension data dictionary property if it is public\r\n                || JsonTypeReflector.GetAttribute<JsonExtensionDataAttribute>(attributeProvider) != null", span="1536-1539"];
m69_646 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerInternalWriter.cs", label="memberSerialization != MemberSerialization.OptIn", span="1545-1545"];
m69_648 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerInternalWriter.cs", label="property.Ignored = (hasJsonIgnoreAttribute || hasIgnoreDataMemberAttribute)", span="1554-1554"];
m69_649 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerInternalWriter.cs", label="property.Ignored = (hasJsonIgnoreAttribute || !hasMemberAttribute)", span="1559-1559"];
m69_650 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerInternalWriter.cs", label="property.Converter = JsonTypeReflector.GetJsonConverter(attributeProvider)", span="1564-1564"];
m69_651 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerInternalWriter.cs", label="DefaultValueAttribute defaultValueAttribute = JsonTypeReflector.GetAttribute<DefaultValueAttribute>(attributeProvider)", span="1566-1566"];
m69_653 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerInternalWriter.cs", label="property.DefaultValue = defaultValueAttribute.Value", span="1569-1569"];
m69_659 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerInternalWriter.cs", label="memberSerialization == MemberSerialization.Fields", span="1583-1583"];
m69_602 [cluster="System.Predicate<T>.Invoke(T)", file="JsonSerializerInternalWriter.cs", label="Entry System.Predicate<T>.Invoke(T)", span="0-0"];
m69_618 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerInternalWriter.cs", label="propertyAttribute != null", span="1489-1489"];
m69_641 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerInternalWriter.cs", label="requiredAttribute != null", span="1528-1528"];
m69_603 [cluster="string.FormatWith(System.IFormatProvider, object, object, object)", file="JsonSerializerInternalWriter.cs", label="Entry string.FormatWith(System.IFormatProvider, object, object, object)", span="57-57"];
m69_611 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerInternalWriter.cs", label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", span=""];
m69_612 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerInternalWriter.cs", label="namingStrategy = NamingStrategy", span="1474-1474"];
m69_613 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerInternalWriter.cs", label="namingStrategy != null", span="1477-1477"];
m69_617 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerInternalWriter.cs", label="bool hasMemberAttribute = false", span="1488-1488"];
m69_657 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerInternalWriter.cs", label=hasMemberAttribute, span="1579-1579"];
m69_622 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerInternalWriter.cs", label="hasMemberAttribute = true", span="1494-1494"];
m69_643 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerInternalWriter.cs", label="hasMemberAttribute = true", span="1531-1531"];
m69_647 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerInternalWriter.cs", label="bool hasIgnoreDataMemberAttribute = false", span="1547-1547"];
m69_652 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerInternalWriter.cs", label="defaultValueAttribute != null", span="1567-1567"];
m69_654 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerInternalWriter.cs", label="allowNonPublicAccess = false", span="1572-1572"];
m69_655 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerInternalWriter.cs", label="(DefaultMembersSearchFlags & BindingFlags.NonPublic) == BindingFlags.NonPublic", span="1574-1574"];
m69_656 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerInternalWriter.cs", label="allowNonPublicAccess = true", span="1576-1576"];
m69_658 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerInternalWriter.cs", label="allowNonPublicAccess = true", span="1581-1581"];
m69_660 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerInternalWriter.cs", label="allowNonPublicAccess = true", span="1585-1585"];
m69_661 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", span="1420-1420"];
m69_262 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.MatchProperty(Newtonsoft.Json.Serialization.JsonPropertyCollection, string, System.Type)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.MatchProperty(Newtonsoft.Json.Serialization.JsonPropertyCollection, string, System.Type)", span="676-676"];
m69_115 [cluster="Newtonsoft.Json.Serialization.NamingStrategy.GetDictionaryKey(string)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.NamingStrategy.GetDictionaryKey(string)", span="87-87"];
m69_120 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", span="946-946"];
m69_218 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.EnumerableDictionaryWrapper(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TEnumeratorKey, TEnumeratorValue>>)", file="JsonSerializerInternalWriter.cs", label="ValidationUtils.ArgumentNotNull(e, nameof(e))", span="550-550"];
m69_662 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.CreateNamingStrategyInstance(System.Type, object[])", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.CreateNamingStrategyInstance(System.Type, object[])", span="206-206"];
m69_695 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveExtensionDataName(string)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveExtensionDataName(string)", span="1647-1647"];
m69_696 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveExtensionDataName(string)", file="JsonSerializerInternalWriter.cs", label="NamingStrategy != null", span="1649-1649"];
m69_697 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveExtensionDataName(string)", file="JsonSerializerInternalWriter.cs", label="return NamingStrategy.GetExtensionDataName(extensionDataName);", span="1651-1651"];
m69_698 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveExtensionDataName(string)", file="JsonSerializerInternalWriter.cs", label="return extensionDataName;", span="1654-1654"];
m69_699 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveExtensionDataName(string)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveExtensionDataName(string)", span="1647-1647"];
m69_100 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalWriter.cs", label="property != null", span="216-216"];
m69_217 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerializing(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerializing(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", span="427-427"];
m69_709 [file="JsonSerializerInternalWriter.cs", label="Newtonsoft.Json.Serialization.DefaultContractResolver", span=""];
m69_710 [file="JsonSerializerInternalWriter.cs", label=namingStrategy, span=""];
m69_711 [file="JsonSerializerInternalWriter.cs", label=getExtensionDataDictionary, span=""];
m69_712 [file="JsonSerializerInternalWriter.cs", label=setExtensionDataDictionary, span=""];
m69_713 [file="JsonSerializerInternalWriter.cs", label="System.Reflection.MemberInfo", span=""];
m69_714 [file="JsonSerializerInternalWriter.cs", label=createExtensionDataDictionary, span=""];
m69_715 [file="JsonSerializerInternalWriter.cs", label=setExtensionDataDictionaryValue, span=""];
m69_716 [file="JsonSerializerInternalWriter.cs", label=createEnumerableWrapper, span=""];
m69_717 [file="JsonSerializerInternalWriter.cs", label="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>", span=""];
m69_718 [file="JsonSerializerInternalWriter.cs", label=namingStrategy, span=""];
m69_719 [file="JsonSerializerInternalWriter.cs", label=shouldSerializeCall, span=""];
m69_720 [file="JsonSerializerInternalWriter.cs", label=specifiedPropertyGet, span=""];
m70_15 [cluster="Unk.AreEqual", file="JsonTextReader.Async.cs", label="Entry Unk.AreEqual", span=""];
m70_0 [cluster="Newtonsoft.Json.Tests.Serialization.ReflectionAttributeProviderTests.ReflectionTestObject.ReflectionTestObject(int)", file="JsonTextReader.Async.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ReflectionAttributeProviderTests.ReflectionTestObject.ReflectionTestObject(int)", span="61-61"];
m70_2 [cluster="Newtonsoft.Json.Tests.Serialization.ReflectionAttributeProviderTests.ReflectionTestObject.ReflectionTestObject(int)", file="JsonTextReader.Async.cs", label="TestField = testParameter", span="67-67"];
m70_3 [cluster="Newtonsoft.Json.Tests.Serialization.ReflectionAttributeProviderTests.ReflectionTestObject.ReflectionTestObject(int)", file="JsonTextReader.Async.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ReflectionAttributeProviderTests.ReflectionTestObject.ReflectionTestObject(int)", span="61-61"];
m70_12 [cluster="System.Type.GetProperty(string)", file="JsonTextReader.Async.cs", label="Entry System.Type.GetProperty(string)", span="0-0"];
m70_13 [cluster="Newtonsoft.Json.Serialization.ReflectionAttributeProvider.ReflectionAttributeProvider(object)", file="JsonTextReader.Async.cs", label="Entry Newtonsoft.Json.Serialization.ReflectionAttributeProvider.ReflectionAttributeProvider(object)", span="43-43"];
m70_16 [cluster="Newtonsoft.Json.Serialization.ReflectionAttributeProvider.GetAttributes(bool)", file="JsonTextReader.Async.cs", label="Entry Newtonsoft.Json.Serialization.ReflectionAttributeProvider.GetAttributes(bool)", span="54-54"];
m70_26 [cluster="Newtonsoft.Json.Tests.Serialization.ReflectionAttributeProviderTests.GetAttributes_Parameter()", file="JsonTextReader.Async.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ReflectionAttributeProviderTests.GetAttributes_Parameter()", span="100-100"];
m70_29 [cluster="Newtonsoft.Json.Tests.Serialization.ReflectionAttributeProviderTests.GetAttributes_Parameter()", file="JsonTextReader.Async.cs", label="ReflectionAttributeProvider provider = new ReflectionAttributeProvider(parameter)", span="106-106"];
m70_32 [cluster="Newtonsoft.Json.Tests.Serialization.ReflectionAttributeProviderTests.GetAttributes_Parameter()", file="JsonTextReader.Async.cs", label="attributes = provider.GetAttributes(false)", span="111-111"];
m70_33 [cluster="Newtonsoft.Json.Tests.Serialization.ReflectionAttributeProviderTests.GetAttributes_Parameter()", file="JsonTextReader.Async.cs", label="Assert.AreEqual(2, attributes.Count)", span="112-112"];
m70_34 [cluster="Newtonsoft.Json.Tests.Serialization.ReflectionAttributeProviderTests.GetAttributes_Parameter()", file="JsonTextReader.Async.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ReflectionAttributeProviderTests.GetAttributes_Parameter()", span="100-100"];
m70_36 [cluster="System.Reflection.MethodBase.GetParameters()", file="JsonTextReader.Async.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m70_25 [cluster="System.Type.GetField(string)", file="JsonTextReader.Async.cs", label="Entry System.Type.GetField(string)", span="0-0"];
m70_35 [cluster="System.Type.GetConstructor(System.Type[])", file="JsonTextReader.Async.cs", label="Entry System.Type.GetConstructor(System.Type[])", span="0-0"];
m70_14 [cluster="Newtonsoft.Json.Serialization.ReflectionAttributeProvider.GetAttributes(System.Type, bool)", file="JsonTextReader.Async.cs", label="Entry Newtonsoft.Json.Serialization.ReflectionAttributeProvider.GetAttributes(System.Type, bool)", span="65-65"];
m70_4 [cluster="Newtonsoft.Json.Tests.Serialization.ReflectionAttributeProviderTests.GetAttributes_Property()", file="JsonTextReader.Async.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ReflectionAttributeProviderTests.GetAttributes_Property()", span="72-72"];
m70_11 [cluster="Newtonsoft.Json.Tests.Serialization.ReflectionAttributeProviderTests.GetAttributes_Property()", file="JsonTextReader.Async.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ReflectionAttributeProviderTests.GetAttributes_Property()", span="72-72"];
m70_17 [cluster="Newtonsoft.Json.Tests.Serialization.ReflectionAttributeProviderTests.GetAttributes_Field()", file="JsonTextReader.Async.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ReflectionAttributeProviderTests.GetAttributes_Field()", span="86-86"];
m70_24 [cluster="Newtonsoft.Json.Tests.Serialization.ReflectionAttributeProviderTests.GetAttributes_Field()", file="JsonTextReader.Async.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ReflectionAttributeProviderTests.GetAttributes_Field()", span="86-86"];
m70_37 [file="JsonTextReader.Async.cs", label="Newtonsoft.Json.Tests.Serialization.ReflectionAttributeProviderTests.ReflectionTestObject", span=""];
m71_12 [cluster="Newtonsoft.Json.Linq.JToken.SelectToken(string)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Linq.JToken.SelectToken(string)", span="1990-1990"];
m71_16 [cluster="Unk.AreEqual", file="JsonTextReader.cs", label="Entry Unk.AreEqual", span=""];
m71_14 [cluster="Newtonsoft.Json.Linq.JToken.SelectTokens(string)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Linq.JToken.SelectTokens(string)", span="2026-2026"];
m71_13 [cluster="System.Console.WriteLine(object)", file="JsonTextReader.cs", label="Entry System.Console.WriteLine(object)", span="0-0"];
m71_11 [cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="359-359"];
m71_17 [cluster="System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", file="JsonTextReader.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", span="0-0"];
m71_0 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.QueryJsonSelectTokenJsonPath.Example()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Linq.QueryJsonSelectTokenJsonPath.Example()", span="38-38"];
m71_1 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.QueryJsonSelectTokenJsonPath.Example()", color=green, community=0, file="JsonTextReader.cs", label="JObject o = JObject.Parse(@''{\r\n              'Stores': [\r\n                'Lambton Quay',\r\n                'Willis Street'\r\n              ],\r\n              'Manufacturers': [\r\n                {\r\n                  'Name': 'Acme Co',\r\n                  'Products': [\r\n                    {\r\n                      'Name': 'Anvil',\r\n                      'Price': 50\r\n                    }\r\n                  ]\r\n                },\r\n                {\r\n                  'Name': 'Contoso',\r\n                  'Products': [\r\n                    {\r\n                      'Name': 'Elbow Grease',\r\n                      'Price': 99.95\r\n                    },\r\n                    {\r\n                      'Name': 'Headlight Fluid',\r\n                      'Price': 4\r\n                    }\r\n                  ]\r\n                }\r\n              ]\r\n            }'')", prediction=24, span="41-70"];
m71_2 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.QueryJsonSelectTokenJsonPath.Example()", file="JsonTextReader.cs", label="JToken acme = o.SelectToken(''$.Manufacturers[?(@.Name == 'Acme Co')]'')", span="73-73"];
m71_4 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.QueryJsonSelectTokenJsonPath.Example()", file="JsonTextReader.cs", label="IEnumerable<JToken> pricyProducts = o.SelectTokens(''$..Products[?(@.Price >= 50)].Name'')", span="79-79"];
m71_3 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.QueryJsonSelectTokenJsonPath.Example()", file="JsonTextReader.cs", label="Console.WriteLine(acme)", span="75-75"];
m71_7 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.QueryJsonSelectTokenJsonPath.Example()", file="JsonTextReader.cs", label="Assert.AreEqual(@''{\r\n  ''''Name'''': ''''Acme Co'''',\r\n  ''''Products'''': [\r\n    {\r\n      ''''Name'''': ''''Anvil'''',\r\n      ''''Price'''': 50\r\n    }\r\n  ]\r\n}'', acme.ToString())", span="89-97"];
m71_5 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.QueryJsonSelectTokenJsonPath.Example()", file="JsonTextReader.cs", label=pricyProducts, span="81-81"];
m71_8 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.QueryJsonSelectTokenJsonPath.Example()", file="JsonTextReader.cs", label="Assert.AreEqual(''Anvil'', (string)pricyProducts.ElementAt(0))", span="99-99"];
m71_9 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.QueryJsonSelectTokenJsonPath.Example()", file="JsonTextReader.cs", label="Assert.AreEqual(''Elbow Grease'', (string)pricyProducts.ElementAt(1))", span="100-100"];
m71_6 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.QueryJsonSelectTokenJsonPath.Example()", file="JsonTextReader.cs", label="Console.WriteLine(item)", span="83-83"];
m71_10 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.QueryJsonSelectTokenJsonPath.Example()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Linq.QueryJsonSelectTokenJsonPath.Example()", span="38-38"];
m71_15 [cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="410-410"];
m72_452 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(string, System.Threading.CancellationToken)", span="1048-1048"];
m72_453 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return _safeAsync ? DoWriteValueAsync(value, cancellationToken) : base.WriteValueAsync(value, cancellationToken);", span="1050-1050"];
m72_454 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(string, System.Threading.CancellationToken)", span="1048-1048"];
m72_35 [cluster="Newtonsoft.Json.JsonTextWriter.DoCloseAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.DoCloseAsync(System.Threading.CancellationToken)", span="121-121"];
m72_37 [cluster="Newtonsoft.Json.JsonTextWriter.DoCloseAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Top == 0", span="123-123"];
m72_38 [cluster="Newtonsoft.Json.JsonTextWriter.DoCloseAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="cancellationToken.ThrowIfCancellationRequested()", span="125-125"];
m72_40 [cluster="Newtonsoft.Json.JsonTextWriter.DoCloseAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="await WriteEndAsync(cancellationToken).ConfigureAwait(false)", span="130-130"];
m72_39 [cluster="Newtonsoft.Json.JsonTextWriter.DoCloseAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Top > 0", span="128-128"];
m72_41 [cluster="Newtonsoft.Json.JsonTextWriter.DoCloseAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="CloseBufferAndWriter()", span="133-133"];
m72_42 [cluster="Newtonsoft.Json.JsonTextWriter.DoCloseAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.DoCloseAsync(System.Threading.CancellationToken)", span="121-121"];
m72_4 [cluster="Newtonsoft.Json.JsonWriter.FlushAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.FlushAsync(System.Threading.CancellationToken)", span="135-135"];
m72_445 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(short?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(short?, System.Threading.CancellationToken)", span="1030-1030"];
m72_446 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(short?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return _safeAsync ? DoWriteValueAsync(value, cancellationToken) : base.WriteValueAsync(value, cancellationToken);", span="1032-1032"];
m72_447 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(short?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(short?, System.Threading.CancellationToken)", span="1030-1030"];
m72_31 [cluster="Newtonsoft.Json.JsonWriterException.Create(Newtonsoft.Json.JsonWriter, string, System.Exception)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonWriterException.Create(Newtonsoft.Json.JsonWriter, string, System.Exception)", span="94-94"];
m72_352 [cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(double, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(double, System.Threading.CancellationToken)", span="1004-1004"];
m72_462 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.Threading.Tasks.Task, string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.Threading.Tasks.Task, string, System.Threading.CancellationToken)", span="1064-1064"];
m72_463 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.Threading.Tasks.Task, string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="await task.ConfigureAwait(false)", span="1066-1066"];
m72_464 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.Threading.Tasks.Task, string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="await (value == null ? _writer.WriteAsync(JsonConvert.Null, cancellationToken) : WriteEscapedStringAsync(value, true, cancellationToken)).ConfigureAwait(false)", span="1067-1067"];
m72_465 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.Threading.Tasks.Task, string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.Threading.Tasks.Task, string, System.Threading.CancellationToken)", span="1064-1064"];
m72_303 [cluster="System.DateTime.ToString(string, System.IFormatProvider)", file="JsonTextWriter.Async.cs", label="Entry System.DateTime.ToString(string, System.IFormatProvider)", span="0-0"];
m72_408 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(long?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(long?, System.Threading.CancellationToken)", span="935-935"];
m72_410 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(long?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return value == null ? DoWriteNullAsync(cancellationToken) : WriteIntegerValueAsync(value.GetValueOrDefault(), cancellationToken);", span="937-937"];
m72_411 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(long?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(long?, System.Threading.CancellationToken)", span="935-935"];
m72_503 [cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(ulong?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(ulong?, System.Threading.CancellationToken)", span="1409-1409"];
m72_278 [cluster="Newtonsoft.Json.JsonConvert.ToString(char)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(char)", span="173-173"];
m72_477 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.TimeSpan?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.TimeSpan?, System.Threading.CancellationToken)", span="1099-1099"];
m72_478 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.TimeSpan?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return _safeAsync ? DoWriteValueAsync(value, cancellationToken) : base.WriteValueAsync(value, cancellationToken);", span="1101-1101"];
m72_479 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.TimeSpan?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.TimeSpan?, System.Threading.CancellationToken)", span="1099-1099"];
m72_546 [cluster="Newtonsoft.Json.JsonWriter.WriteEndArrayAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndArrayAsync(System.Threading.CancellationToken)", span="312-312"];
m72_516 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueNotNullAsync(System.Threading.Tasks.Task, System.Uri, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueNotNullAsync(System.Threading.Tasks.Task, System.Uri, System.Threading.CancellationToken)", span="1199-1199"];
m72_517 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueNotNullAsync(System.Threading.Tasks.Task, System.Uri, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="await task.ConfigureAwait(false)", span="1201-1201"];
m72_518 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueNotNullAsync(System.Threading.Tasks.Task, System.Uri, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="await WriteEscapedStringAsync(value.OriginalString, true, cancellationToken).ConfigureAwait(false)", span="1202-1202"];
m72_519 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueNotNullAsync(System.Threading.Tasks.Task, System.Uri, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueNotNullAsync(System.Threading.Tasks.Task, System.Uri, System.Threading.CancellationToken)", span="1199-1199"];
m72_337 [cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(decimal, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(decimal, System.Threading.CancellationToken)", span="966-966"];
m72_367 [cluster="Newtonsoft.Json.JsonConvert.ToString(float, Newtonsoft.Json.FloatFormatHandling, char, bool)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(float, Newtonsoft.Json.FloatFormatHandling, char, bool)", span="268-268"];
m72_271 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(char, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(char, System.Threading.CancellationToken)", span="609-609"];
m72_272 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(char, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return _safeAsync ? DoWriteValueAsync(value, cancellationToken) : base.WriteValueAsync(value, cancellationToken);", span="611-611"];
m72_273 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(char, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(char, System.Threading.CancellationToken)", span="609-609"];
m72_290 [cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(System.DateTime, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(System.DateTime, System.Threading.CancellationToken)", span="890-890"];
m72_510 [cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(System.Uri, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(System.Uri, System.Threading.CancellationToken)", span="1428-1428"];
m72_531 [cluster="Newtonsoft.Json.JsonTextWriter.WriteCommentAsync(string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteCommentAsync(string, System.Threading.CancellationToken)", span="1246-1246"];
m72_532 [cluster="Newtonsoft.Json.JsonTextWriter.WriteCommentAsync(string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return _safeAsync ? DoWriteCommentAsync(text, cancellationToken) : base.WriteCommentAsync(text, cancellationToken);", span="1248-1248"];
m72_533 [cluster="Newtonsoft.Json.JsonTextWriter.WriteCommentAsync(string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteCommentAsync(string, System.Threading.CancellationToken)", span="1246-1246"];
m72_355 [cluster="Newtonsoft.Json.JsonConvert.ToString(double, Newtonsoft.Json.FloatFormatHandling, char, bool)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(double, Newtonsoft.Json.FloatFormatHandling, char, bool)", span="298-298"];
m72_308 [cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(System.DateTime?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(System.DateTime?, System.Threading.CancellationToken)", span="909-909"];
m72_487 [cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(uint, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(uint, System.Threading.CancellationToken)", span="1349-1349"];
m72_173 [cluster="Newtonsoft.Json.JsonWriter.WriteStartArrayAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartArrayAsync(System.Threading.CancellationToken)", span="434-434"];
m72_21 [cluster="Newtonsoft.Json.JsonWriter.WriteEndAsync(Newtonsoft.Json.JsonToken, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndAsync(Newtonsoft.Json.JsonToken, System.Threading.CancellationToken)", span="154-154"];
m72_502 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(ulong?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(ulong?, System.Threading.CancellationToken)", span="1170-1170"];
m72_504 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(ulong?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return value == null ? DoWriteNullAsync(cancellationToken) : WriteIntegerValueAsync(value.GetValueOrDefault(), cancellationToken);", span="1172-1172"];
m72_505 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(ulong?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(ulong?, System.Threading.CancellationToken)", span="1170-1170"];
m72_524 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(ushort?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(ushort?, System.Threading.CancellationToken)", span="1228-1228"];
m72_525 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(ushort?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return _safeAsync ? DoWriteValueAsync(value, cancellationToken) : base.WriteValueAsync(value, cancellationToken);", span="1230-1230"];
m72_526 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(ushort?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(ushort?, System.Threading.CancellationToken)", span="1228-1228"];
m72_434 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(sbyte?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(sbyte?, System.Threading.CancellationToken)", span="999-999"];
m72_435 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(sbyte?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return _safeAsync ? DoWriteValueAsync(value, cancellationToken) : base.WriteValueAsync(value, cancellationToken);", span="1001-1001"];
m72_436 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(sbyte?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(sbyte?, System.Threading.CancellationToken)", span="999-999"];
m72_466 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.TimeSpan, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.TimeSpan, System.Threading.CancellationToken)", span="1078-1078"];
m72_467 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.TimeSpan, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return _safeAsync ? DoWriteValueAsync(value, cancellationToken) : base.WriteValueAsync(value, cancellationToken);", span="1080-1080"];
m72_468 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.TimeSpan, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.TimeSpan, System.Threading.CancellationToken)", span="1078-1078"];
m72_146 [cluster="Newtonsoft.Json.JsonWriter.InternalWritePropertyNameAsync(string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.InternalWritePropertyNameAsync(string, System.Threading.CancellationToken)", span="416-416"];
m72_433 [cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(sbyte, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(sbyte, System.Threading.CancellationToken)", span="1214-1214"];
m72_153 [cluster="System.IO.TextWriter.WriteAsync(char)", file="JsonTextWriter.Async.cs", label="Entry System.IO.TextWriter.WriteAsync(char)", span="0-0"];
m72_498 [cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(ulong, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(ulong, System.Threading.CancellationToken)", span="1389-1389"];
m72_243 [cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(bool?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(bool?, System.Threading.CancellationToken)", span="776-776"];
m72_535 [cluster="Newtonsoft.Json.JsonWriter.WriteCommentAsync(string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteCommentAsync(string, System.Threading.CancellationToken)", span="460-460"];
m72_372 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.Guid, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.Guid, System.Threading.CancellationToken)", span="842-842"];
m72_373 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.Guid, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return _safeAsync ? DoWriteValueAsync(value, cancellationToken) : base.WriteValueAsync(value, cancellationToken);", span="844-844"];
m72_374 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.Guid, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.Guid, System.Threading.CancellationToken)", span="842-842"];
m72_99 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteNullAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteNullAsync(System.Threading.CancellationToken)", span="249-249"];
m72_101 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteNullAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return WriteValueInternalAsync(JsonToken.Null, JsonConvert.Null, cancellationToken);", span="251-251"];
m72_102 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteNullAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteNullAsync(System.Threading.CancellationToken)", span="249-249"];
m72_383 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.Guid?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.Guid?, System.Threading.CancellationToken)", span="868-868"];
m72_384 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.Guid?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return _safeAsync ? DoWriteValueAsync(value, cancellationToken) : base.WriteValueAsync(value, cancellationToken);", span="870-870"];
m72_385 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.Guid?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.Guid?, System.Threading.CancellationToken)", span="868-868"];
m72_46 [cluster="Newtonsoft.Json.JsonTextWriter.CloseBufferAndWriter()", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.CloseBufferAndWriter()", span="188-188"];
m72_169 [cluster="Newtonsoft.Json.JsonTextWriter.WriteStartArrayAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteStartArrayAsync(System.Threading.CancellationToken)", span="389-389"];
m72_170 [cluster="Newtonsoft.Json.JsonTextWriter.WriteStartArrayAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return _safeAsync ? DoWriteStartArrayAsync(cancellationToken) : base.WriteStartArrayAsync(cancellationToken);", span="391-391"];
m72_171 [cluster="Newtonsoft.Json.JsonTextWriter.WriteStartArrayAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteStartArrayAsync(System.Threading.CancellationToken)", span="389-389"];
m72_341 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(decimal?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(decimal?, System.Threading.CancellationToken)", span="762-762"];
m72_342 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(decimal?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return _safeAsync ? DoWriteValueAsync(value, cancellationToken) : base.WriteValueAsync(value, cancellationToken);", span="764-764"];
m72_343 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(decimal?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(decimal?, System.Threading.CancellationToken)", span="762-762"];
m72_416 [cluster="Unk.WriteValueInternalAsync", file="JsonTextWriter.Async.cs", label="Entry Unk.WriteValueInternalAsync", span=""];
m72_427 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type)", span="185-185"];
m72_480 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.TimeSpan?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.TimeSpan?, System.Threading.CancellationToken)", span="1104-1104"];
m72_482 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.TimeSpan?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return value == null ? DoWriteNullAsync(cancellationToken) : DoWriteValueAsync(value.GetValueOrDefault(), cancellationToken);", span="1106-1106"];
m72_483 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.TimeSpan?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.TimeSpan?, System.Threading.CancellationToken)", span="1104-1104"];
m72_262 [cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(byte[], System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(byte[], System.Threading.CancellationToken)", span="833-833"];
m72_324 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueToBuffer(System.DateTimeOffset)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueToBuffer(System.DateTimeOffset)", span="701-701"];
m72_218 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteUndefinedAsync(System.Threading.Tasks.Task, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteUndefinedAsync(System.Threading.Tasks.Task, System.Threading.CancellationToken)", span="487-487"];
m72_219 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteUndefinedAsync(System.Threading.Tasks.Task, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="await task.ConfigureAwait(false)", span="489-489"];
m72_220 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteUndefinedAsync(System.Threading.Tasks.Task, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="await _writer.WriteAsync(JsonConvert.Undefined, cancellationToken).ConfigureAwait(false)", span="490-490"];
m72_221 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteUndefinedAsync(System.Threading.Tasks.Task, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteUndefinedAsync(System.Threading.Tasks.Task, System.Threading.CancellationToken)", span="487-487"];
m72_360 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(float, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(float, System.Threading.CancellationToken)", span="811-811"];
m72_361 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(float, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return _safeAsync ? WriteValueAsync(value, false, cancellationToken) : base.WriteValueAsync(value, cancellationToken);", span="813-813"];
m72_362 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(float, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(float, System.Threading.CancellationToken)", span="811-811"];
m72_69 [cluster="System.Math.Min(int, int)", file="JsonTextWriter.Async.cs", label="Entry System.Math.Min(int, int)", span="0-0"];
m72_417 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(object, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(object, System.Threading.CancellationToken)", span="955-955"];
m72_418 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(object, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label=_safeAsync, span="957-957"];
m72_419 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(object, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="value == null", span="959-959"];
m72_420 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(object, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return WriteNullAsync(cancellationToken);", span="961-961"];
m72_421 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(object, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="value is BigInteger", span="964-964"];
m72_422 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(object, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return WriteValueAsync((BigInteger)value, cancellationToken);", span="966-966"];
m72_423 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(object, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return WriteValueAsync(this, ConvertUtils.GetTypeCode(value.GetType()), value, cancellationToken);", span="970-970"];
m72_424 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(object, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return base.WriteValueAsync(value, cancellationToken);", span="973-973"];
m72_425 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(object, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(object, System.Threading.CancellationToken)", span="955-955"];
m72_9 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueDelimiterAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueDelimiterAsync(System.Threading.CancellationToken)", span="70-70"];
m72_10 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueDelimiterAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return _safeAsync ? DoWriteValueDelimiterAsync(cancellationToken) : base.WriteValueDelimiterAsync(cancellationToken);", span="72-72"];
m72_11 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueDelimiterAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueDelimiterAsync(System.Threading.CancellationToken)", span="70-70"];
m72_506 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.Uri, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.Uri, System.Threading.CancellationToken)", span="1183-1183"];
m72_507 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.Uri, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return _safeAsync ? (value == null ? WriteNullAsync(cancellationToken) : WriteValueNotNullAsync(value, cancellationToken)) : base.WriteValueAsync(value, cancellationToken);", span="1185-1185"];
m72_508 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.Uri, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.Uri, System.Threading.CancellationToken)", span="1183-1183"];
m72_542 [cluster="Newtonsoft.Json.JsonTextWriter.WriteEndArrayAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteEndArrayAsync(System.Threading.CancellationToken)", span="1266-1266"];
m72_543 [cluster="Newtonsoft.Json.JsonTextWriter.WriteEndArrayAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return _safeAsync ? InternalWriteEndAsync(JsonContainerType.Array, cancellationToken) : base.WriteEndArrayAsync(cancellationToken);", span="1268-1268"];
m72_544 [cluster="Newtonsoft.Json.JsonTextWriter.WriteEndArrayAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteEndArrayAsync(System.Threading.CancellationToken)", span="1266-1266"];
m72_387 [cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(System.Guid?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(System.Guid?, System.Threading.CancellationToken)", span="1099-1099"];
m72_547 [cluster="Newtonsoft.Json.JsonTextWriter.WriteEndConstructorAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteEndConstructorAsync(System.Threading.CancellationToken)", span="1278-1278"];
m72_548 [cluster="Newtonsoft.Json.JsonTextWriter.WriteEndConstructorAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return _safeAsync ? InternalWriteEndAsync(JsonContainerType.Constructor, cancellationToken) : base.WriteEndConstructorAsync(cancellationToken);", span="1280-1280"];
m72_549 [cluster="Newtonsoft.Json.JsonTextWriter.WriteEndConstructorAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteEndConstructorAsync(System.Threading.CancellationToken)", span="1278-1278"];
m72_340 [cluster="Newtonsoft.Json.JsonConvert.ToString(decimal)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(decimal)", span="349-349"];
m72_589 [cluster="Newtonsoft.Json.Utilities.BufferUtils.ReturnBuffer(Newtonsoft.Json.IArrayPool<char>, char[])", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.Utilities.BufferUtils.ReturnBuffer(Newtonsoft.Json.IArrayPool<char>, char[])", span="54-54"];
m72_455 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(string, System.Threading.CancellationToken)", span="1053-1053"];
m72_457 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Task task = InternalWriteValueAsync(JsonToken.String, cancellationToken)", span="1055-1055"];
m72_459 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return value == null ? _writer.WriteAsync(JsonConvert.Null, cancellationToken) : WriteEscapedStringAsync(value, true, cancellationToken);", span="1058-1058"];
m72_460 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return DoWriteValueAsync(task, value, cancellationToken);", span="1061-1061"];
m72_461 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(string, System.Threading.CancellationToken)", span="1053-1053"];
m72_409 [cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(long?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(long?, System.Threading.CancellationToken)", span="1175-1175"];
m72_351 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(double, bool, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(double, bool, System.Threading.CancellationToken)", span="785-785"];
m72_353 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(double, bool, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return WriteValueInternalAsync(JsonToken.Float, JsonConvert.ToString(value, FloatFormatHandling, QuoteChar, nullable), cancellationToken);", span="787-787"];
m72_354 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(double, bool, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(double, bool, System.Threading.CancellationToken)", span="785-785"];
m72_438 [cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(sbyte?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(sbyte?, System.Threading.CancellationToken)", span="1234-1234"];
m72_476 [cluster="System.TimeSpan.ToString(string, System.IFormatProvider)", file="JsonTextWriter.Async.cs", label="Entry System.TimeSpan.ToString(string, System.IFormatProvider)", span="0-0"];
m72_225 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteWhitespaceAsync(string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteWhitespaceAsync(string, System.Threading.CancellationToken)", span="506-506"];
m72_227 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteWhitespaceAsync(string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="InternalWriteWhitespace(ws)", span="508-508"];
m72_228 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteWhitespaceAsync(string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return _writer.WriteAsync(ws, cancellationToken);", span="509-509"];
m72_229 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteWhitespaceAsync(string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteWhitespaceAsync(string, System.Threading.CancellationToken)", span="506-506"];
m72_230 [cluster="Newtonsoft.Json.JsonWriter.InternalWriteWhitespace(string)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.InternalWriteWhitespace(string)", span="1698-1698"];
m72_545 [cluster="Newtonsoft.Json.JsonWriter.InternalWriteEndAsync(Newtonsoft.Json.JsonContainerType, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.InternalWriteEndAsync(Newtonsoft.Json.JsonContainerType, System.Threading.CancellationToken)", span="277-277"];
m72_307 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.DateTime?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.DateTime?, System.Threading.CancellationToken)", span="682-682"];
m72_309 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.DateTime?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return value == null ? DoWriteNullAsync(cancellationToken) : DoWriteValueAsync(value.GetValueOrDefault(), cancellationToken);", span="684-684"];
m72_310 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.DateTime?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.DateTime?, System.Threading.CancellationToken)", span="682-682"];
m72_520 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(ushort, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(ushort, System.Threading.CancellationToken)", span="1214-1214"];
m72_521 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(ushort, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return _safeAsync ? WriteIntegerValueAsync(value, cancellationToken) : base.WriteValueAsync(value, cancellationToken);", span="1216-1216"];
m72_522 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(ushort, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(ushort, System.Threading.CancellationToken)", span="1214-1214"];
m72_304 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.DateTime?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.DateTime?, System.Threading.CancellationToken)", span="677-677"];
m72_305 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.DateTime?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return _safeAsync ? DoWriteValueAsync(value, cancellationToken) : base.WriteValueAsync(value, cancellationToken);", span="679-679"];
m72_306 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.DateTime?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.DateTime?, System.Threading.CancellationToken)", span="677-677"];
m72_202 [cluster="Newtonsoft.Json.JsonWriter.WriteStartConstructorAsync(string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartConstructorAsync(string, System.Threading.CancellationToken)", span="503-503"];
m72_274 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(char, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(char, System.Threading.CancellationToken)", span="614-614"];
m72_276 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(char, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return WriteValueInternalAsync(JsonToken.String, JsonConvert.ToString(value), cancellationToken);", span="616-616"];
m72_277 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(char, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(char, System.Threading.CancellationToken)", span="614-614"];
m72_311 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.DateTimeOffset, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.DateTimeOffset, System.Threading.CancellationToken)", span="695-695"];
m72_312 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.DateTimeOffset, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return _safeAsync ? DoWriteValueAsync(value, cancellationToken) : base.WriteValueAsync(value, cancellationToken);", span="697-697"];
m72_313 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.DateTimeOffset, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.DateTimeOffset, System.Threading.CancellationToken)", span="695-695"];
m72_279 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(char?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(char?, System.Threading.CancellationToken)", span="627-627"];
m72_280 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(char?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return _safeAsync ? DoWriteValueAsync(value, cancellationToken) : base.WriteValueAsync(value, cancellationToken);", span="629-629"];
m72_281 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(char?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(char?, System.Threading.CancellationToken)", span="627-627"];
m72_397 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(int?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(int?, System.Threading.CancellationToken)", span="904-904"];
m72_399 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(int?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return value == null ? DoWriteNullAsync(cancellationToken) : WriteIntegerValueAsync(value.GetValueOrDefault(), cancellationToken);", span="906-906"];
m72_400 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(int?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(int?, System.Threading.CancellationToken)", span="904-904"];
m72_158 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyNameAsync(string, bool, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.WritePropertyNameAsync(string, bool, System.Threading.CancellationToken)", span="405-405"];
m72_554 [cluster="Newtonsoft.Json.JsonWriter.WriteEndObjectAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndObjectAsync(System.Threading.CancellationToken)", span="348-348"];
m72_283 [cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(char?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(char?, System.Threading.CancellationToken)", span="871-871"];
m72_484 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(uint, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(uint, System.Threading.CancellationToken)", span="1118-1118"];
m72_485 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(uint, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return _safeAsync ? WriteIntegerValueAsync(value, cancellationToken) : base.WriteValueAsync(value, cancellationToken);", span="1120-1120"];
m72_486 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(uint, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(uint, System.Threading.CancellationToken)", span="1118-1118"];
m72_528 [cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(ushort?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(ushort?, System.Threading.CancellationToken)", span="1468-1468"];
m72_64 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIndentAsync(int, int, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteIndentAsync(int, int, System.Threading.CancellationToken)", span="175-175"];
m72_65 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIndentAsync(int, int, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="await _writer.WriteAsync(_indentChars, 0, newLineLen + Math.Min(currentIndentCount, IndentCharBufferSize), cancellationToken).ConfigureAwait(false)", span="177-177"];
m72_66 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIndentAsync(int, int, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="(currentIndentCount -= IndentCharBufferSize) > 0", span="179-179"];
m72_67 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIndentAsync(int, int, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="await _writer.WriteAsync(_indentChars, newLineLen, Math.Min(currentIndentCount, IndentCharBufferSize), cancellationToken).ConfigureAwait(false)", span="181-181"];
m72_68 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIndentAsync(int, int, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteIndentAsync(int, int, System.Threading.CancellationToken)", span="175-175"];
m72_16 [cluster="System.IO.TextWriter.WriteAsync(char, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry System.IO.TextWriter.WriteAsync(char, System.Threading.CancellationToken)", span="71-71"];
m72_85 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteIndentSpaceAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteIndentSpaceAsync(System.Threading.CancellationToken)", span="214-214"];
m72_87 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteIndentSpaceAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return _writer.WriteAsync(' ', cancellationToken);", span="216-216"];
m72_88 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteIndentSpaceAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteIndentSpaceAsync(System.Threading.CancellationToken)", span="214-214"];
m72_157 [cluster="Newtonsoft.Json.JsonTextWriter.DoWritePropertyNameAsync(string, bool, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.DoWritePropertyNameAsync(string, bool, System.Threading.CancellationToken)", span="356-356"];
m72_159 [cluster="Newtonsoft.Json.JsonTextWriter.DoWritePropertyNameAsync(string, bool, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="await InternalWritePropertyNameAsync(name, cancellationToken).ConfigureAwait(false)", span="358-358"];
m72_160 [cluster="Newtonsoft.Json.JsonTextWriter.DoWritePropertyNameAsync(string, bool, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label=escape, span="360-360"];
m72_161 [cluster="Newtonsoft.Json.JsonTextWriter.DoWritePropertyNameAsync(string, bool, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="await WriteEscapedStringAsync(name, _quoteName, cancellationToken).ConfigureAwait(false)", span="362-362"];
m72_164 [cluster="Newtonsoft.Json.JsonTextWriter.DoWritePropertyNameAsync(string, bool, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="await _writer.WriteAsync(name, cancellationToken).ConfigureAwait(false)", span="371-371"];
m72_162 [cluster="Newtonsoft.Json.JsonTextWriter.DoWritePropertyNameAsync(string, bool, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label=_quoteName, span="366-366"];
m72_163 [cluster="Newtonsoft.Json.JsonTextWriter.DoWritePropertyNameAsync(string, bool, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="await _writer.WriteAsync(_quoteChar).ConfigureAwait(false)", span="368-368"];
m72_165 [cluster="Newtonsoft.Json.JsonTextWriter.DoWritePropertyNameAsync(string, bool, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label=_quoteName, span="373-373"];
m72_166 [cluster="Newtonsoft.Json.JsonTextWriter.DoWritePropertyNameAsync(string, bool, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="await _writer.WriteAsync(_quoteChar).ConfigureAwait(false)", span="375-375"];
m72_167 [cluster="Newtonsoft.Json.JsonTextWriter.DoWritePropertyNameAsync(string, bool, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="await _writer.WriteAsync(':').ConfigureAwait(false)", span="379-379"];
m72_168 [cluster="Newtonsoft.Json.JsonTextWriter.DoWritePropertyNameAsync(string, bool, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.DoWritePropertyNameAsync(string, bool, System.Threading.CancellationToken)", span="356-356"];
m72_345 [cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(decimal?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(decimal?, System.Threading.CancellationToken)", span="985-985"];
m72_488 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(uint?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(uint?, System.Threading.CancellationToken)", span="1132-1132"];
m72_489 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(uint?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return _safeAsync ? DoWriteValueAsync(value, cancellationToken) : base.WriteValueAsync(value, cancellationToken);", span="1134-1134"];
m72_490 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(uint?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(uint?, System.Threading.CancellationToken)", span="1132-1132"];
m72_492 [cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(uint?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(uint?, System.Threading.CancellationToken)", span="1369-1369"];
m72_110 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValueAsync(ulong, bool, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteIntegerValueAsync(ulong, bool, System.Threading.CancellationToken)", span="265-265"];
m72_111 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValueAsync(ulong, bool, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Task task = InternalWriteValueAsync(JsonToken.Integer, cancellationToken)", span="267-267"];
m72_113 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValueAsync(ulong, bool, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return WriteDigitsAsync(uvalue, negative, cancellationToken);", span="270-270"];
m72_114 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValueAsync(ulong, bool, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return WriteIntegerValueAsync(task, uvalue, negative, cancellationToken);", span="273-273"];
m72_115 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValueAsync(ulong, bool, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteIntegerValueAsync(ulong, bool, System.Threading.CancellationToken)", span="265-265"];
m72_286 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.DateTime, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.DateTime, System.Threading.CancellationToken)", span="645-645"];
m72_287 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.DateTime, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return _safeAsync ? DoWriteValueAsync(value, cancellationToken) : base.WriteValueAsync(value, cancellationToken);", span="647-647"];
m72_288 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.DateTime, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.DateTime, System.Threading.CancellationToken)", span="645-645"];
m72_456 [cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(string, System.Threading.CancellationToken)", span="1291-1291"];
m72_235 [cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(bool, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(bool, System.Threading.CancellationToken)", span="757-757"];
m72_7 [cluster="System.Threading.CancellationToken.CancelIfRequestedAsync()", file="JsonTextWriter.Async.cs", label="Entry System.Threading.CancellationToken.CancelIfRequestedAsync()", span="42-42"];
m72_255 [cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(byte?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(byte?, System.Threading.CancellationToken)", span="814-814"];
m72_78 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueInternalAsync(System.Threading.Tasks.Task, string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueInternalAsync(System.Threading.Tasks.Task, string, System.Threading.CancellationToken)", span="196-196"];
m72_79 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueInternalAsync(System.Threading.Tasks.Task, string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="await task.ConfigureAwait(false)", span="198-198"];
m72_80 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueInternalAsync(System.Threading.Tasks.Task, string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="await _writer.WriteAsync(value, cancellationToken).ConfigureAwait(false)", span="199-199"];
m72_81 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueInternalAsync(System.Threading.Tasks.Task, string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueInternalAsync(System.Threading.Tasks.Task, string, System.Threading.CancellationToken)", span="196-196"];
m72_93 [cluster="Newtonsoft.Json.JsonWriter.WriteRawAsync(string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteRawAsync(string, System.Threading.CancellationToken)", span="227-227"];
m72_133 [cluster="Newtonsoft.Json.JsonTextWriter.WritePropertyNameAsync(string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WritePropertyNameAsync(string, System.Threading.CancellationToken)", span="311-311"];
m72_134 [cluster="Newtonsoft.Json.JsonTextWriter.WritePropertyNameAsync(string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return _safeAsync ? DoWritePropertyNameAsync(name, cancellationToken) : base.WritePropertyNameAsync(name, cancellationToken);", span="313-313"];
m72_135 [cluster="Newtonsoft.Json.JsonTextWriter.WritePropertyNameAsync(string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WritePropertyNameAsync(string, System.Threading.CancellationToken)", span="311-311"];
m72_326 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.DateTimeOffset?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.DateTimeOffset?, System.Threading.CancellationToken)", span="726-726"];
m72_327 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.DateTimeOffset?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return _safeAsync ? DoWriteValueAsync(value, cancellationToken) : base.WriteValueAsync(value, cancellationToken);", span="728-728"];
m72_328 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.DateTimeOffset?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(System.DateTimeOffset?, System.Threading.CancellationToken)", span="726-726"];
m72_534 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteCommentAsync(string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteCommentAsync(string, System.Threading.CancellationToken)", span="1251-1251"];
m72_536 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteCommentAsync(string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="await InternalWriteCommentAsync(cancellationToken).ConfigureAwait(false)", span="1253-1253"];
m72_537 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteCommentAsync(string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="await _writer.WriteAsync(''/*'', cancellationToken).ConfigureAwait(false)", span="1254-1254"];
m72_538 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteCommentAsync(string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="await _writer.WriteAsync(text, cancellationToken).ConfigureAwait(false)", span="1255-1255"];
m72_539 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteCommentAsync(string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="await _writer.WriteAsync(''*/'', cancellationToken).ConfigureAwait(false)", span="1256-1256"];
m72_540 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteCommentAsync(string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteCommentAsync(string, System.Threading.CancellationToken)", span="1251-1251"];
m72_188 [cluster="Newtonsoft.Json.JsonWriter.WriteStartObjectAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartObjectAsync(System.Threading.CancellationToken)", span="521-521"];
m72_201 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteStartConstructorAsync(string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteStartConstructorAsync(string, System.Threading.CancellationToken)", span="455-455"];
m72_203 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteStartConstructorAsync(string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="await InternalWriteStartAsync(JsonToken.StartConstructor, JsonContainerType.Constructor, cancellationToken).ConfigureAwait(false)", span="457-457"];
m72_204 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteStartConstructorAsync(string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="await _writer.WriteAsync(''new '', cancellationToken).ConfigureAwait(false)", span="459-459"];
m72_205 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteStartConstructorAsync(string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="await _writer.WriteAsync(name, cancellationToken).ConfigureAwait(false)", span="460-460"];
m72_206 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteStartConstructorAsync(string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="await _writer.WriteAsync('(').ConfigureAwait(false)", span="461-461"];
m72_207 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteStartConstructorAsync(string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteStartConstructorAsync(string, System.Threading.CancellationToken)", span="455-455"];
m72_275 [cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(char, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(char, System.Threading.CancellationToken)", span="852-852"];
m72_356 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(double?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(double?, System.Threading.CancellationToken)", span="798-798"];
m72_357 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(double?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return _safeAsync ? (value.HasValue ? WriteValueAsync(value.GetValueOrDefault(), true, cancellationToken) : WriteNullAsync(cancellationToken)) : base.WriteValueAsync(value, cancellationToken);", span="800-800"];
m72_358 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(double?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(double?, System.Threading.CancellationToken)", span="798-798"];
m72_187 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteStartObjectAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteStartObjectAsync(System.Threading.CancellationToken)", span="424-424"];
m72_189 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteStartObjectAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Task task = InternalWriteStartAsync(JsonToken.StartObject, JsonContainerType.Object, cancellationToken)", span="426-426"];
m72_191 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteStartObjectAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return _writer.WriteAsync('{', cancellationToken);", span="429-429"];
m72_192 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteStartObjectAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return DoWriteStartObjectAsync(task, cancellationToken);", span="432-432"];
m72_193 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteStartObjectAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteStartObjectAsync(System.Threading.CancellationToken)", span="424-424"];
m72_559 [cluster="Newtonsoft.Json.JsonWriter.WriteRawValueAsync(string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteRawValueAsync(string, System.Threading.CancellationToken)", span="484-484"];
m72_76 [cluster="Newtonsoft.Json.JsonWriter.InternalWriteValueAsync(Newtonsoft.Json.JsonToken, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.InternalWriteValueAsync(Newtonsoft.Json.JsonToken, System.Threading.CancellationToken)", span="1516-1516"];
m72_184 [cluster="Newtonsoft.Json.JsonTextWriter.WriteStartObjectAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteStartObjectAsync(System.Threading.CancellationToken)", span="419-419"];
m72_185 [cluster="Newtonsoft.Json.JsonTextWriter.WriteStartObjectAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return _safeAsync ? DoWriteStartObjectAsync(cancellationToken) : base.WriteStartObjectAsync(cancellationToken);", span="421-421"];
m72_186 [cluster="Newtonsoft.Json.JsonTextWriter.WriteStartObjectAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteStartObjectAsync(System.Threading.CancellationToken)", span="419-419"];
m72_336 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(decimal, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(decimal, System.Threading.CancellationToken)", span="749-749"];
m72_338 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(decimal, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return WriteValueInternalAsync(JsonToken.Float, JsonConvert.ToString(value), cancellationToken);", span="751-751"];
m72_339 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(decimal, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(decimal, System.Threading.CancellationToken)", span="749-749"];
m72_20 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteEndAsync(Newtonsoft.Json.JsonToken, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteEndAsync(Newtonsoft.Json.JsonToken, System.Threading.CancellationToken)", span="93-93"];
m72_22 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteEndAsync(Newtonsoft.Json.JsonToken, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label=token, span="95-95"];
m72_24 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteEndAsync(Newtonsoft.Json.JsonToken, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return _writer.WriteAsync('}', cancellationToken);", span="98-98"];
m72_26 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteEndAsync(Newtonsoft.Json.JsonToken, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return _writer.WriteAsync(']', cancellationToken);", span="100-100"];
m72_28 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteEndAsync(Newtonsoft.Json.JsonToken, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return _writer.WriteAsync(')', cancellationToken);", span="102-102"];
m72_29 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteEndAsync(Newtonsoft.Json.JsonToken, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="throw JsonWriterException.Create(this, ''Invalid JsonToken: '' + token, null);", span="104-104"];
m72_23 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteEndAsync(Newtonsoft.Json.JsonToken, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="JsonToken.EndObject", span="97-97"];
m72_25 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteEndAsync(Newtonsoft.Json.JsonToken, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="JsonToken.EndArray", span="99-99"];
m72_27 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteEndAsync(Newtonsoft.Json.JsonToken, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="JsonToken.EndConstructor", span="101-101"];
m72_30 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteEndAsync(Newtonsoft.Json.JsonToken, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteEndAsync(Newtonsoft.Json.JsonToken, System.Threading.CancellationToken)", span="93-93"];
m72_333 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(decimal, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(decimal, System.Threading.CancellationToken)", span="744-744"];
m72_334 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(decimal, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return _safeAsync ? DoWriteValueAsync(value, cancellationToken) : base.WriteValueAsync(value, cancellationToken);", span="746-746"];
m72_335 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(decimal, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(decimal, System.Threading.CancellationToken)", span="744-744"];
m72_401 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(long, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(long, System.Threading.CancellationToken)", span="917-917"];
m72_402 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(long, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return _safeAsync ? WriteIntegerValueAsync(value, cancellationToken) : base.WriteValueAsync(value, cancellationToken);", span="919-919"];
m72_403 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(long, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(long, System.Threading.CancellationToken)", span="917-917"];
m72_344 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(decimal?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(decimal?, System.Threading.CancellationToken)", span="767-767"];
m72_346 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(decimal?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return value == null ? DoWriteNullAsync(cancellationToken) : DoWriteValueAsync(value.GetValueOrDefault(), cancellationToken);", span="769-769"];
m72_347 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(decimal?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(decimal?, System.Threading.CancellationToken)", span="767-767"];
m72_551 [cluster="Newtonsoft.Json.JsonTextWriter.WriteEndObjectAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteEndObjectAsync(System.Threading.CancellationToken)", span="1290-1290"];
m72_552 [cluster="Newtonsoft.Json.JsonTextWriter.WriteEndObjectAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return _safeAsync ? InternalWriteEndAsync(JsonContainerType.Object, cancellationToken) : base.WriteEndObjectAsync(cancellationToken);", span="1292-1292"];
m72_553 [cluster="Newtonsoft.Json.JsonTextWriter.WriteEndObjectAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteEndObjectAsync(System.Threading.CancellationToken)", span="1290-1290"];
m72_231 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(bool, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(bool, System.Threading.CancellationToken)", span="520-520"];
m72_232 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(bool, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return _safeAsync ? DoWriteValueAsync(value, cancellationToken) : base.WriteValueAsync(value, cancellationToken);", span="522-522"];
m72_233 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(bool, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(bool, System.Threading.CancellationToken)", span="520-520"];
m72_437 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(sbyte?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(sbyte?, System.Threading.CancellationToken)", span="1004-1004"];
m72_439 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(sbyte?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return value == null ? DoWriteNullAsync(cancellationToken) : WriteIntegerValueAsync(value.GetValueOrDefault(), cancellationToken);", span="1006-1006"];
m72_440 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(sbyte?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(sbyte?, System.Threading.CancellationToken)", span="1004-1004"];
m72_100 [cluster="Newtonsoft.Json.JsonWriter.WriteNullAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteNullAsync(System.Threading.CancellationToken)", span="366-366"];
m72_212 [cluster="Newtonsoft.Json.JsonWriter.WriteUndefinedAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteUndefinedAsync(System.Threading.CancellationToken)", span="1486-1486"];
m72_558 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteRawValueAsync(string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteRawValueAsync(string, System.Threading.CancellationToken)", span="1308-1308"];
m72_560 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteRawValueAsync(string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="UpdateScopeWithFinishedValue()", span="1310-1310"];
m72_561 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteRawValueAsync(string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Task task = AutoCompleteAsync(JsonToken.Undefined, cancellationToken)", span="1311-1311"];
m72_563 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteRawValueAsync(string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return WriteRawAsync(json, cancellationToken);", span="1314-1314"];
m72_564 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteRawValueAsync(string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return DoWriteRawValueAsync(task, json, cancellationToken);", span="1317-1317"];
m72_565 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteRawValueAsync(string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteRawValueAsync(string, System.Threading.CancellationToken)", span="1308-1308"];
m72_77 [cluster="System.IO.TextWriter.WriteAsync(string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry System.IO.TextWriter.WriteAsync(string, System.Threading.CancellationToken)", span="77-77"];
m72_49 [cluster="Newtonsoft.Json.JsonWriter.WriteEndInternalAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndInternalAsync(System.Threading.CancellationToken)", span="256-256"];
m72_282 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(char?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(char?, System.Threading.CancellationToken)", span="632-632"];
m72_284 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(char?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return value == null ? DoWriteNullAsync(cancellationToken) : DoWriteValueAsync(value.GetValueOrDefault(), cancellationToken);", span="634-634"];
m72_285 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(char?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(char?, System.Threading.CancellationToken)", span="632-632"];
m72_382 [cluster="System.Guid.ToString(string, System.IFormatProvider)", file="JsonTextWriter.Async.cs", label="Entry System.Guid.ToString(string, System.IFormatProvider)", span="0-0"];
m72_527 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(ushort?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(ushort?, System.Threading.CancellationToken)", span="1233-1233"];
m72_529 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(ushort?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return value == null ? DoWriteNullAsync(cancellationToken) : WriteIntegerValueAsync(value.GetValueOrDefault(), cancellationToken);", span="1235-1235"];
m72_530 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(ushort?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(ushort?, System.Threading.CancellationToken)", span="1233-1233"];
m72_62 [cluster="Newtonsoft.Json.JsonTextWriter.SetIndentChars()", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.SetIndentChars()", span="333-333"];
m72_103 [cluster="Newtonsoft.Json.JsonTextWriter.WriteDigitsAsync(ulong, bool, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteDigitsAsync(ulong, bool, System.Threading.CancellationToken)", span="254-254"];
m72_104 [cluster="Newtonsoft.Json.JsonTextWriter.WriteDigitsAsync(ulong, bool, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="uvalue <= 9 & !negative", span="256-256"];
m72_105 [cluster="Newtonsoft.Json.JsonTextWriter.WriteDigitsAsync(ulong, bool, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return _writer.WriteAsync((char)('0' + uvalue), cancellationToken);", span="258-258"];
m72_106 [cluster="Newtonsoft.Json.JsonTextWriter.WriteDigitsAsync(ulong, bool, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="int length = WriteNumberToBuffer(uvalue, negative)", span="261-261"];
m72_107 [cluster="Newtonsoft.Json.JsonTextWriter.WriteDigitsAsync(ulong, bool, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return _writer.WriteAsync(_writeBuffer, 0, length, cancellationToken);", span="262-262"];
m72_108 [cluster="Newtonsoft.Json.JsonTextWriter.WriteDigitsAsync(ulong, bool, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteDigitsAsync(ulong, bool, System.Threading.CancellationToken)", span="254-254"];
m72_43 [cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="JsonTextWriter.Async.cs", label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0"];
m72_8 [cluster="System.IO.TextWriter.FlushAsync()", file="JsonTextWriter.Async.cs", label="Entry System.IO.TextWriter.FlushAsync()", span="0-0"];
m72_470 [cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(System.TimeSpan, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(System.TimeSpan, System.Threading.CancellationToken)", span="1310-1310"];
m72_509 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueNotNullAsync(System.Uri, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueNotNullAsync(System.Uri, System.Threading.CancellationToken)", span="1188-1188"];
m72_511 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueNotNullAsync(System.Uri, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Task task = InternalWriteValueAsync(JsonToken.String, cancellationToken)", span="1190-1190"];
m72_513 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueNotNullAsync(System.Uri, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return WriteEscapedStringAsync(value.OriginalString, true, cancellationToken);", span="1193-1193"];
m72_514 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueNotNullAsync(System.Uri, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return WriteValueNotNullAsync(task, value, cancellationToken);", span="1196-1196"];
m72_515 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueNotNullAsync(System.Uri, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueNotNullAsync(System.Uri, System.Threading.CancellationToken)", span="1188-1188"];
m72_109 [cluster="Newtonsoft.Json.JsonTextWriter.WriteNumberToBuffer(ulong, bool)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteNumberToBuffer(ulong, bool)", span="831-831"];
m72_398 [cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(int?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(int?, System.Threading.CancellationToken)", span="1137-1137"];
m72_428 [cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object, System.Threading.CancellationToken)", span="1582-1582"];
m72_568 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteRawValueAsync(System.Threading.Tasks.Task, string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteRawValueAsync(System.Threading.Tasks.Task, string, System.Threading.CancellationToken)", span="1320-1320"];
m72_569 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteRawValueAsync(System.Threading.Tasks.Task, string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="await task.ConfigureAwait(false)", span="1322-1322"];
m72_570 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteRawValueAsync(System.Threading.Tasks.Task, string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="await WriteRawAsync(json, cancellationToken).ConfigureAwait(false)", span="1323-1323"];
m72_571 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteRawValueAsync(System.Threading.Tasks.Task, string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteRawValueAsync(System.Threading.Tasks.Task, string, System.Threading.CancellationToken)", span="1320-1320"];
m72_302 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueToBuffer(System.DateTime)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueToBuffer(System.DateTime)", span="647-647"];
m72_82 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIndentSpaceAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteIndentSpaceAsync(System.Threading.CancellationToken)", span="209-209"];
m72_83 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIndentSpaceAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return _safeAsync ? DoWriteIndentSpaceAsync(cancellationToken) : base.WriteIndentSpaceAsync(cancellationToken);", span="211-211"];
m72_84 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIndentSpaceAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteIndentSpaceAsync(System.Threading.CancellationToken)", span="209-209"];
m72_250 [cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(byte, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(byte, System.Threading.CancellationToken)", span="795-795"];
m72_12 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueDelimiterAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteValueDelimiterAsync(System.Threading.CancellationToken)", span="75-75"];
m72_14 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueDelimiterAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return _writer.WriteAsync(',', cancellationToken);", span="77-77"];
m72_15 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueDelimiterAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteValueDelimiterAsync(System.Threading.CancellationToken)", span="75-75"];
m72_348 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(double, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(double, System.Threading.CancellationToken)", span="780-780"];
m72_349 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(double, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return _safeAsync ? WriteValueAsync(value, false, cancellationToken) : base.WriteValueAsync(value, cancellationToken);", span="782-782"];
m72_350 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(double, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(double, System.Threading.CancellationToken)", span="780-780"];
m72_448 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(short?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(short?, System.Threading.CancellationToken)", span="1035-1035"];
m72_450 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(short?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return value == null ? DoWriteNullAsync(cancellationToken) : WriteIntegerValueAsync(value.GetValueOrDefault(), cancellationToken);", span="1037-1037"];
m72_451 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(short?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(short?, System.Threading.CancellationToken)", span="1035-1035"];
m72_70 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueInternalAsync(Newtonsoft.Json.JsonToken, string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueInternalAsync(Newtonsoft.Json.JsonToken, string, System.Threading.CancellationToken)", span="185-185"];
m72_71 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueInternalAsync(Newtonsoft.Json.JsonToken, string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Task task = InternalWriteValueAsync(token, cancellationToken)", span="187-187"];
m72_73 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueInternalAsync(Newtonsoft.Json.JsonToken, string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return _writer.WriteAsync(value, cancellationToken);", span="190-190"];
m72_74 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueInternalAsync(Newtonsoft.Json.JsonToken, string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return WriteValueInternalAsync(task, value, cancellationToken);", span="193-193"];
m72_75 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueInternalAsync(Newtonsoft.Json.JsonToken, string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueInternalAsync(Newtonsoft.Json.JsonToken, string, System.Threading.CancellationToken)", span="185-185"];
m72_375 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.Guid, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.Guid, System.Threading.CancellationToken)", span="847-847"];
m72_377 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.Guid, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="await InternalWriteValueAsync(JsonToken.String, cancellationToken).ConfigureAwait(false)", span="849-849"];
m72_379 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.Guid, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="await _writer.WriteAsync(value.ToString(''D'', CultureInfo.InvariantCulture), cancellationToken).ConfigureAwait(false)", span="853-853"];
m72_378 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.Guid, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="await _writer.WriteAsync(_quoteChar).ConfigureAwait(false)", span="851-851"];
m72_380 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.Guid, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="await _writer.WriteAsync(_quoteChar).ConfigureAwait(false)", span="857-857"];
m72_381 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.Guid, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.Guid, System.Threading.CancellationToken)", span="847-847"];
m72_481 [cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(System.TimeSpan?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(System.TimeSpan?, System.Threading.CancellationToken)", span="1329-1329"];
m72_393 [cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(int, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(int, System.Threading.CancellationToken)", span="1118-1118"];
m72_567 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteAsync(Newtonsoft.Json.JsonToken, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.AutoCompleteAsync(Newtonsoft.Json.JsonToken, System.Threading.CancellationToken)", span="40-40"];
m72_51 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIndentAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteIndentAsync(System.Threading.CancellationToken)", span="155-155"];
m72_52 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIndentAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return _safeAsync ? DoWriteIndentAsync(cancellationToken) : base.WriteIndentAsync(cancellationToken);", span="157-157"];
m72_53 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIndentAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteIndentAsync(System.Threading.CancellationToken)", span="155-155"];
m72_211 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteUndefinedAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteUndefinedAsync(System.Threading.CancellationToken)", span="476-476"];
m72_213 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteUndefinedAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Task task = InternalWriteValueAsync(JsonToken.Undefined, cancellationToken)", span="478-478"];
m72_215 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteUndefinedAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return _writer.WriteAsync(JsonConvert.Undefined, cancellationToken);", span="481-481"];
m72_216 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteUndefinedAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return DoWriteUndefinedAsync(task, cancellationToken);", span="484-484"];
m72_217 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteUndefinedAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteUndefinedAsync(System.Threading.CancellationToken)", span="476-476"];
m72_0 [cluster="Newtonsoft.Json.JsonTextWriter.FlushAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.FlushAsync(System.Threading.CancellationToken)", span="53-53"];
m72_1 [cluster="Newtonsoft.Json.JsonTextWriter.FlushAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return _safeAsync ? DoFlushAsync(cancellationToken) : base.FlushAsync(cancellationToken);", span="55-55"];
m72_2 [cluster="Newtonsoft.Json.JsonTextWriter.FlushAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.FlushAsync(System.Threading.CancellationToken)", span="53-53"];
m72_86 [cluster="Newtonsoft.Json.JsonWriter.WriteIndentSpaceAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteIndentSpaceAsync(System.Threading.CancellationToken)", span="208-208"];
m72_261 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueNonNullAsync(byte[], System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueNonNullAsync(byte[], System.Threading.CancellationToken)", span="592-592"];
m72_263 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueNonNullAsync(byte[], System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="await InternalWriteValueAsync(JsonToken.Bytes, cancellationToken).ConfigureAwait(false)", span="594-594"];
m72_265 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueNonNullAsync(byte[], System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="await Base64Encoder.EncodeAsync(value, 0, value.Length, cancellationToken).ConfigureAwait(false)", span="596-596"];
m72_266 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueNonNullAsync(byte[], System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="await Base64Encoder.FlushAsync(cancellationToken).ConfigureAwait(false)", span="597-597"];
m72_264 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueNonNullAsync(byte[], System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="await _writer.WriteAsync(_quoteChar).ConfigureAwait(false)", span="595-595"];
m72_267 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueNonNullAsync(byte[], System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="await _writer.WriteAsync(_quoteChar).ConfigureAwait(false)", span="598-598"];
m72_268 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueNonNullAsync(byte[], System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueNonNullAsync(byte[], System.Threading.CancellationToken)", span="592-592"];
m72_368 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(float?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(float?, System.Threading.CancellationToken)", span="829-829"];
m72_369 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(float?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return _safeAsync ? (value.HasValue ? WriteValueAsync(value.GetValueOrDefault(), true, cancellationToken) : WriteNullAsync(cancellationToken)) : base.WriteValueAsync(value, cancellationToken);", span="831-831"];
m72_370 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(float?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(float?, System.Threading.CancellationToken)", span="829-829"];
m72_376 [cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(System.Guid, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(System.Guid, System.Threading.CancellationToken)", span="1080-1080"];
m72_405 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(long?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(long?, System.Threading.CancellationToken)", span="930-930"];
m72_406 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(long?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return _safeAsync ? DoWriteValueAsync(value, cancellationToken) : base.WriteValueAsync(value, cancellationToken);", span="932-932"];
m72_407 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(long?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(long?, System.Threading.CancellationToken)", span="930-930"];
m72_491 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(uint?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(uint?, System.Threading.CancellationToken)", span="1137-1137"];
m72_493 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(uint?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return value == null ? DoWriteNullAsync(cancellationToken) : WriteIntegerValueAsync(value.GetValueOrDefault(), cancellationToken);", span="1139-1139"];
m72_494 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(uint?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(uint?, System.Threading.CancellationToken)", span="1137-1137"];
m72_415 [cluster="Unk.ToString", file="JsonTextWriter.Async.cs", label="Entry Unk.ToString", span=""];
m72_495 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(ulong, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(ulong, System.Threading.CancellationToken)", span="1151-1151"];
m72_496 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(ulong, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return _safeAsync ? WriteIntegerValueAsync(value, cancellationToken) : base.WriteValueAsync(value, cancellationToken);", span="1153-1153"];
m72_497 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(ulong, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(ulong, System.Threading.CancellationToken)", span="1151-1151"];
m72_179 [cluster="Newtonsoft.Json.JsonWriter.InternalWriteStartAsync(Newtonsoft.Json.JsonToken, Newtonsoft.Json.JsonContainerType, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.InternalWriteStartAsync(Newtonsoft.Json.JsonToken, Newtonsoft.Json.JsonContainerType, System.Threading.CancellationToken)", span="445-445"];
m72_13 [cluster="Newtonsoft.Json.JsonWriter.WriteValueDelimiterAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValueDelimiterAsync(System.Threading.CancellationToken)", span="190-190"];
m72_126 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValueAsync(ulong, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteIntegerValueAsync(ulong, System.Threading.CancellationToken)", span="293-293"];
m72_127 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValueAsync(ulong, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return WriteIntegerValueAsync(uvalue, false, cancellationToken);", span="295-295"];
m72_128 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValueAsync(ulong, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteIntegerValueAsync(ulong, System.Threading.CancellationToken)", span="293-293"];
m72_132 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptStringAsync(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptStringAsync(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.JsonTextWriter, char[], System.Threading.CancellationToken)", span="359-359"];
m72_17 [cluster="Newtonsoft.Json.JsonTextWriter.WriteEndAsync(Newtonsoft.Json.JsonToken, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteEndAsync(Newtonsoft.Json.JsonToken, System.Threading.CancellationToken)", span="88-88"];
m72_18 [cluster="Newtonsoft.Json.JsonTextWriter.WriteEndAsync(Newtonsoft.Json.JsonToken, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return _safeAsync ? DoWriteEndAsync(token, cancellationToken) : base.WriteEndAsync(token, cancellationToken);", span="90-90"];
m72_19 [cluster="Newtonsoft.Json.JsonTextWriter.WriteEndAsync(Newtonsoft.Json.JsonToken, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteEndAsync(Newtonsoft.Json.JsonToken, System.Threading.CancellationToken)", span="88-88"];
m72_572 [cluster="Newtonsoft.Json.JsonTextWriter.EnsureWriteBuffer(int, int)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.EnsureWriteBuffer(int, int)", span="1326-1326"];
m72_573 [cluster="Newtonsoft.Json.JsonTextWriter.EnsureWriteBuffer(int, int)", file="JsonTextWriter.Async.cs", label="length < 35", span="1328-1328"];
m72_577 [cluster="Newtonsoft.Json.JsonTextWriter.EnsureWriteBuffer(int, int)", file="JsonTextWriter.Async.cs", label="return _writeBuffer = BufferUtils.RentBuffer(_arrayPool, length);", span="1336-1336"];
m72_578 [cluster="Newtonsoft.Json.JsonTextWriter.EnsureWriteBuffer(int, int)", file="JsonTextWriter.Async.cs", label="buffer.Length >= length", span="1339-1339"];
m72_580 [cluster="Newtonsoft.Json.JsonTextWriter.EnsureWriteBuffer(int, int)", file="JsonTextWriter.Async.cs", label="char[] newBuffer = BufferUtils.RentBuffer(_arrayPool, length)", span="1344-1344"];
m72_581 [cluster="Newtonsoft.Json.JsonTextWriter.EnsureWriteBuffer(int, int)", file="JsonTextWriter.Async.cs", label="copyTo != 0", span="1345-1345"];
m72_582 [cluster="Newtonsoft.Json.JsonTextWriter.EnsureWriteBuffer(int, int)", file="JsonTextWriter.Async.cs", label="Array.Copy(buffer, newBuffer, copyTo)", span="1347-1347"];
m72_574 [cluster="Newtonsoft.Json.JsonTextWriter.EnsureWriteBuffer(int, int)", file="JsonTextWriter.Async.cs", label="length = 35", span="1330-1330"];
m72_575 [cluster="Newtonsoft.Json.JsonTextWriter.EnsureWriteBuffer(int, int)", file="JsonTextWriter.Async.cs", label="char[] buffer = _writeBuffer", span="1333-1333"];
m72_576 [cluster="Newtonsoft.Json.JsonTextWriter.EnsureWriteBuffer(int, int)", file="JsonTextWriter.Async.cs", label="buffer == null", span="1334-1334"];
m72_579 [cluster="Newtonsoft.Json.JsonTextWriter.EnsureWriteBuffer(int, int)", file="JsonTextWriter.Async.cs", label="return buffer;", span="1341-1341"];
m72_583 [cluster="Newtonsoft.Json.JsonTextWriter.EnsureWriteBuffer(int, int)", file="JsonTextWriter.Async.cs", label="BufferUtils.ReturnBuffer(_arrayPool, buffer)", span="1350-1350"];
m72_584 [cluster="Newtonsoft.Json.JsonTextWriter.EnsureWriteBuffer(int, int)", file="JsonTextWriter.Async.cs", label="_writeBuffer = newBuffer", span="1351-1351"];
m72_585 [cluster="Newtonsoft.Json.JsonTextWriter.EnsureWriteBuffer(int, int)", file="JsonTextWriter.Async.cs", label="return newBuffer;", span="1352-1352"];
m72_586 [cluster="Newtonsoft.Json.JsonTextWriter.EnsureWriteBuffer(int, int)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.EnsureWriteBuffer(int, int)", span="1326-1326"];
m72_222 [cluster="Newtonsoft.Json.JsonTextWriter.WriteWhitespaceAsync(string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteWhitespaceAsync(string, System.Threading.CancellationToken)", span="501-501"];
m72_223 [cluster="Newtonsoft.Json.JsonTextWriter.WriteWhitespaceAsync(string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return _safeAsync ? DoWriteWhitespaceAsync(ws, cancellationToken) : base.WriteWhitespaceAsync(ws, cancellationToken);", span="503-503"];
m72_224 [cluster="Newtonsoft.Json.JsonTextWriter.WriteWhitespaceAsync(string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteWhitespaceAsync(string, System.Threading.CancellationToken)", span="501-501"];
m72_180 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteStartArrayAsync(System.Threading.Tasks.Task, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteStartArrayAsync(System.Threading.Tasks.Task, System.Threading.CancellationToken)", span="405-405"];
m72_181 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteStartArrayAsync(System.Threading.Tasks.Task, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="await task.ConfigureAwait(false)", span="407-407"];
m72_182 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteStartArrayAsync(System.Threading.Tasks.Task, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="await _writer.WriteAsync('[').ConfigureAwait(false)", span="409-409"];
m72_183 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteStartArrayAsync(System.Threading.Tasks.Task, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteStartArrayAsync(System.Threading.Tasks.Task, System.Threading.CancellationToken)", span="405-405"];
m72_270 [cluster="Newtonsoft.Json.Utilities.Base64Encoder.FlushAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.Utilities.Base64Encoder.FlushAsync(System.Threading.CancellationToken)", span="196-196"];
m72_289 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.DateTime, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.DateTime, System.Threading.CancellationToken)", span="650-650"];
m72_291 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.DateTime, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="await InternalWriteValueAsync(JsonToken.Date, cancellationToken).ConfigureAwait(false)", span="652-652"];
m72_292 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.DateTime, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="value = DateTimeUtils.EnsureDateTime(value, DateTimeZoneHandling)", span="653-653"];
m72_295 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.DateTime, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="await _writer.WriteAsync(_writeBuffer, 0, length, cancellationToken).ConfigureAwait(false)", span="659-659"];
m72_297 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.DateTime, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="await _writer.WriteAsync(value.ToString(DateFormatString, Culture), cancellationToken).ConfigureAwait(false)", span="664-664"];
m72_293 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.DateTime, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="string.IsNullOrEmpty(DateFormatString)", span="655-655"];
m72_294 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.DateTime, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="int length = WriteValueToBuffer(value)", span="657-657"];
m72_296 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.DateTime, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="await _writer.WriteAsync(_quoteChar).ConfigureAwait(false)", span="663-663"];
m72_298 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.DateTime, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="await _writer.WriteAsync(_quoteChar).ConfigureAwait(false)", span="665-665"];
m72_299 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.DateTime, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.DateTime, System.Threading.CancellationToken)", span="650-650"];
m72_63 [cluster="System.IO.TextWriter.WriteAsync(char[], int, int, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry System.IO.TextWriter.WriteAsync(char[], int, int, System.Threading.CancellationToken)", span="89-89"];
m72_426 [cluster="object.GetType()", file="JsonTextWriter.Async.cs", label="Entry object.GetType()", span="0-0"];
m72_301 [cluster="string.IsNullOrEmpty(string)", file="JsonTextWriter.Async.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m72_247 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(byte, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(byte, System.Threading.CancellationToken)", span="556-556"];
m72_248 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(byte, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return _safeAsync ? WriteIntegerValueAsync(value, cancellationToken) : base.WriteValueAsync(value, cancellationToken);", span="558-558"];
m72_249 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(byte, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(byte, System.Threading.CancellationToken)", span="556-556"];
m72_441 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(short, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(short, System.Threading.CancellationToken)", span="1017-1017"];
m72_442 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(short, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return _safeAsync ? WriteIntegerValueAsync(value, cancellationToken) : base.WriteValueAsync(value, cancellationToken);", span="1019-1019"];
m72_443 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(short, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(short, System.Threading.CancellationToken)", span="1017-1017"];
m72_555 [cluster="Newtonsoft.Json.JsonTextWriter.WriteRawValueAsync(string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteRawValueAsync(string, System.Threading.CancellationToken)", span="1303-1303"];
m72_556 [cluster="Newtonsoft.Json.JsonTextWriter.WriteRawValueAsync(string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return _safeAsync ? DoWriteRawValueAsync(json, cancellationToken) : base.WriteRawValueAsync(json, cancellationToken);", span="1305-1305"];
m72_557 [cluster="Newtonsoft.Json.JsonTextWriter.WriteRawValueAsync(string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteRawValueAsync(string, System.Threading.CancellationToken)", span="1303-1303"];
m72_137 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyNameAsync(string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.WritePropertyNameAsync(string, System.Threading.CancellationToken)", span="385-385"];
m72_430 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(sbyte, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(sbyte, System.Threading.CancellationToken)", span="985-985"];
m72_431 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(sbyte, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return _safeAsync ? WriteIntegerValueAsync(value, cancellationToken) : base.WriteValueAsync(value, cancellationToken);", span="987-987"];
m72_432 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(sbyte, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(sbyte, System.Threading.CancellationToken)", span="985-985"];
m72_412 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(BigInteger, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(BigInteger, System.Threading.CancellationToken)", span="941-941"];
m72_413 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(BigInteger, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return WriteValueInternalAsync(JsonToken.Integer, value.ToString(CultureInfo.InvariantCulture), cancellationToken);", span="943-943"];
m72_414 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(BigInteger, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(BigInteger, System.Threading.CancellationToken)", span="941-941"];
m72_32 [cluster="Newtonsoft.Json.JsonTextWriter.CloseAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.CloseAsync(System.Threading.CancellationToken)", span="116-116"];
m72_33 [cluster="Newtonsoft.Json.JsonTextWriter.CloseAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return _safeAsync ? DoCloseAsync(cancellationToken) : base.CloseAsync(cancellationToken);", span="118-118"];
m72_34 [cluster="Newtonsoft.Json.JsonTextWriter.CloseAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.CloseAsync(System.Threading.CancellationToken)", span="116-116"];
m72_269 [cluster="Newtonsoft.Json.Utilities.Base64Encoder.EncodeAsync(byte[], int, int, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.Utilities.Base64Encoder.EncodeAsync(byte[], int, int, System.Threading.CancellationToken)", span="160-160"];
m72_329 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.DateTimeOffset?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.DateTimeOffset?, System.Threading.CancellationToken)", span="731-731"];
m72_331 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.DateTimeOffset?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return value == null ? DoWriteNullAsync(cancellationToken) : DoWriteValueAsync(value.GetValueOrDefault(), cancellationToken);", span="733-733"];
m72_332 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.DateTimeOffset?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.DateTimeOffset?, System.Threading.CancellationToken)", span="731-731"];
m72_300 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.EnsureDateTime(System.DateTime, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.EnsureDateTime(System.DateTime, Newtonsoft.Json.DateTimeZoneHandling)", span="92-92"];
m72_44 [cluster="Newtonsoft.Json.JsonTextWriter.WriteEndAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteEndAsync(System.Threading.CancellationToken)", span="143-143"];
m72_47 [cluster="Newtonsoft.Json.JsonTextWriter.WriteEndAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return _safeAsync ? WriteEndInternalAsync(cancellationToken) : base.WriteEndAsync(cancellationToken);", span="145-145"];
m72_48 [cluster="Newtonsoft.Json.JsonTextWriter.WriteEndAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteEndAsync(System.Threading.CancellationToken)", span="143-143"];
m72_449 [cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(short?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(short?, System.Threading.CancellationToken)", span="1272-1272"];
m72_588 [cluster="System.Array.Copy(System.Array, System.Array, int)", file="JsonTextWriter.Async.cs", label="Entry System.Array.Copy(System.Array, System.Array, int)", span="0-0"];
m72_54 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteIndentAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteIndentAsync(System.Threading.CancellationToken)", span="160-160"];
m72_56 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteIndentAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="int currentIndentCount = Top * _indentation", span="163-163"];
m72_59 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteIndentAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return _writer.WriteAsync(_indentChars, 0, newLineLen + currentIndentCount, cancellationToken);", span="169-169"];
m72_60 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteIndentAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return WriteIndentAsync(currentIndentCount, newLineLen, cancellationToken);", span="172-172"];
m72_57 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteIndentAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="int newLineLen = SetIndentChars()", span="165-165"];
m72_58 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteIndentAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="currentIndentCount <= IndentCharBufferSize", span="167-167"];
m72_61 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteIndentAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteIndentAsync(System.Threading.CancellationToken)", span="160-160"];
m72_251 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(byte?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(byte?, System.Threading.CancellationToken)", span="569-569"];
m72_252 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(byte?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return _safeAsync ? DoWriteValueAsync(value, cancellationToken) : base.WriteValueAsync(value, cancellationToken);", span="571-571"];
m72_253 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(byte?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(byte?, System.Threading.CancellationToken)", span="569-569"];
m72_404 [cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(long, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(long, System.Threading.CancellationToken)", span="1156-1156"];
m72_499 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(ulong?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(ulong?, System.Threading.CancellationToken)", span="1165-1165"];
m72_500 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(ulong?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return _safeAsync ? DoWriteValueAsync(value, cancellationToken) : base.WriteValueAsync(value, cancellationToken);", span="1167-1167"];
m72_501 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(ulong?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(ulong?, System.Threading.CancellationToken)", span="1165-1165"];
m72_566 [cluster="Newtonsoft.Json.JsonWriter.UpdateScopeWithFinishedValue()", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.UpdateScopeWithFinishedValue()", span="343-343"];
m72_238 [cluster="Newtonsoft.Json.JsonConvert.ToString(bool)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(bool)", span="163-163"];
m72_246 [cluster="System.Nullable<T>.GetValueOrDefault()", file="JsonTextWriter.Async.cs", label="Entry System.Nullable<T>.GetValueOrDefault()", span="0-0"];
m72_429 [cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(object, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(object, System.Threading.CancellationToken)", span="1194-1194"];
m72_330 [cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(System.DateTimeOffset?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(System.DateTimeOffset?, System.Threading.CancellationToken)", span="947-947"];
m72_120 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValueAsync(long, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteIntegerValueAsync(long, System.Threading.CancellationToken)", span="282-282"];
m72_121 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValueAsync(long, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="bool negative = value < 0", span="284-284"];
m72_123 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValueAsync(long, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="value = -value", span="287-287"];
m72_124 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValueAsync(long, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return WriteIntegerValueAsync((ulong)value, negative, cancellationToken);", span="290-290"];
m72_122 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValueAsync(long, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label=negative, span="285-285"];
m72_125 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValueAsync(long, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteIntegerValueAsync(long, System.Threading.CancellationToken)", span="282-282"];
m72_359 [cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(double?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(double?, System.Threading.CancellationToken)", span="1023-1023"];
m72_364 [cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(float, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(float, System.Threading.CancellationToken)", span="1042-1042"];
m72_96 [cluster="Newtonsoft.Json.JsonTextWriter.WriteNullAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteNullAsync(System.Threading.CancellationToken)", span="244-244"];
m72_97 [cluster="Newtonsoft.Json.JsonTextWriter.WriteNullAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return _safeAsync ? DoWriteNullAsync(cancellationToken) : base.WriteNullAsync(cancellationToken);", span="246-246"];
m72_98 [cluster="Newtonsoft.Json.JsonTextWriter.WriteNullAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteNullAsync(System.Threading.CancellationToken)", span="244-244"];
m72_3 [cluster="Newtonsoft.Json.JsonTextWriter.DoFlushAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.DoFlushAsync(System.Threading.CancellationToken)", span="58-58"];
m72_5 [cluster="Newtonsoft.Json.JsonTextWriter.DoFlushAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return cancellationToken.CancelIfRequestedAsync() ?? _writer.FlushAsync();", span="60-60"];
m72_6 [cluster="Newtonsoft.Json.JsonTextWriter.DoFlushAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.DoFlushAsync(System.Threading.CancellationToken)", span="58-58"];
m72_371 [cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(float?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(float?, System.Threading.CancellationToken)", span="1061-1061"];
m72_523 [cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(ushort, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(ushort, System.Threading.CancellationToken)", span="1448-1448"];
m72_208 [cluster="Newtonsoft.Json.JsonTextWriter.WriteUndefinedAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteUndefinedAsync(System.Threading.CancellationToken)", span="471-471"];
m72_209 [cluster="Newtonsoft.Json.JsonTextWriter.WriteUndefinedAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return _safeAsync ? DoWriteUndefinedAsync(cancellationToken) : base.WriteUndefinedAsync(cancellationToken);", span="473-473"];
m72_210 [cluster="Newtonsoft.Json.JsonTextWriter.WriteUndefinedAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteUndefinedAsync(System.Threading.CancellationToken)", span="471-471"];
m72_258 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(byte[], System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(byte[], System.Threading.CancellationToken)", span="587-587"];
m72_259 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(byte[], System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return _safeAsync ? (value == null ? WriteNullAsync(cancellationToken) : WriteValueNonNullAsync(value, cancellationToken)) : base.WriteValueAsync(value, cancellationToken);", span="589-589"];
m72_260 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(byte[], System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(byte[], System.Threading.CancellationToken)", span="587-587"];
m72_172 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteStartArrayAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteStartArrayAsync(System.Threading.CancellationToken)", span="394-394"];
m72_174 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteStartArrayAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Task task = InternalWriteStartAsync(JsonToken.StartArray, JsonContainerType.Array, cancellationToken)", span="396-396"];
m72_176 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteStartArrayAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return _writer.WriteAsync('[', cancellationToken);", span="399-399"];
m72_177 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteStartArrayAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return DoWriteStartArrayAsync(task, cancellationToken);", span="402-402"];
m72_178 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteStartArrayAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteStartArrayAsync(System.Threading.CancellationToken)", span="394-394"];
m72_116 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValueAsync(System.Threading.Tasks.Task, ulong, bool, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteIntegerValueAsync(System.Threading.Tasks.Task, ulong, bool, System.Threading.CancellationToken)", span="276-276"];
m72_117 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValueAsync(System.Threading.Tasks.Task, ulong, bool, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="await task.ConfigureAwait(false)", span="278-278"];
m72_118 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValueAsync(System.Threading.Tasks.Task, ulong, bool, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="await WriteDigitsAsync(uvalue, negative, cancellationToken).ConfigureAwait(false)", span="279-279"];
m72_119 [cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValueAsync(System.Threading.Tasks.Task, ulong, bool, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteIntegerValueAsync(System.Threading.Tasks.Task, ulong, bool, System.Threading.CancellationToken)", span="276-276"];
m72_148 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteCharAsync(System.Threading.Tasks.Task, System.IO.TextWriter, char, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.Utilities.JavaScriptUtils.WriteCharAsync(System.Threading.Tasks.Task, System.IO.TextWriter, char, System.Threading.CancellationToken)", span="413-413"];
m72_154 [cluster="Newtonsoft.Json.JsonTextWriter.WritePropertyNameAsync(string, bool, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WritePropertyNameAsync(string, bool, System.Threading.CancellationToken)", span="351-351"];
m72_155 [cluster="Newtonsoft.Json.JsonTextWriter.WritePropertyNameAsync(string, bool, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return _safeAsync ? DoWritePropertyNameAsync(name, escape, cancellationToken) : base.WritePropertyNameAsync(name, escape, cancellationToken);", span="353-353"];
m72_156 [cluster="Newtonsoft.Json.JsonTextWriter.WritePropertyNameAsync(string, bool, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WritePropertyNameAsync(string, bool, System.Threading.CancellationToken)", span="351-351"];
m72_315 [cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(System.DateTimeOffset, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(System.DateTimeOffset, System.Threading.CancellationToken)", span="928-928"];
m72_36 [cluster="Newtonsoft.Json.JsonWriter.CloseAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.CloseAsync(System.Threading.CancellationToken)", span="117-117"];
m72_239 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(bool?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(bool?, System.Threading.CancellationToken)", span="538-538"];
m72_240 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(bool?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return _safeAsync ? DoWriteValueAsync(value, cancellationToken) : base.WriteValueAsync(value, cancellationToken);", span="540-540"];
m72_241 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(bool?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(bool?, System.Threading.CancellationToken)", span="538-538"];
m72_541 [cluster="Newtonsoft.Json.JsonWriter.InternalWriteCommentAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.InternalWriteCommentAsync(System.Threading.CancellationToken)", span="471-471"];
m72_45 [cluster="System.Threading.Tasks.Task.ConfigureAwait(bool)", file="JsonTextWriter.Async.cs", label="Entry System.Threading.Tasks.Task.ConfigureAwait(bool)", span="0-0"];
m72_55 [cluster="Newtonsoft.Json.JsonWriter.WriteIndentAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteIndentAsync(System.Threading.CancellationToken)", span="172-172"];
m72_444 [cluster="Newtonsoft.Json.JsonWriter.WriteValueAsync(short, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValueAsync(short, System.Threading.CancellationToken)", span="1253-1253"];
m72_136 [cluster="Newtonsoft.Json.JsonTextWriter.DoWritePropertyNameAsync(string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.DoWritePropertyNameAsync(string, System.Threading.CancellationToken)", span="316-316"];
m72_138 [cluster="Newtonsoft.Json.JsonTextWriter.DoWritePropertyNameAsync(string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Task task = InternalWritePropertyNameAsync(name, cancellationToken)", span="318-318"];
m72_140 [cluster="Newtonsoft.Json.JsonTextWriter.DoWritePropertyNameAsync(string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return DoWritePropertyNameAsync(task, name, cancellationToken);", span="321-321"];
m72_141 [cluster="Newtonsoft.Json.JsonTextWriter.DoWritePropertyNameAsync(string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="task = WriteEscapedStringAsync(name, _quoteName, cancellationToken)", span="324-324"];
m72_145 [cluster="Newtonsoft.Json.JsonTextWriter.DoWritePropertyNameAsync(string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.DoWritePropertyNameAsync(string, System.Threading.CancellationToken)", span="316-316"];
m72_198 [cluster="Newtonsoft.Json.JsonTextWriter.WriteStartConstructorAsync(string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteStartConstructorAsync(string, System.Threading.CancellationToken)", span="450-450"];
m72_199 [cluster="Newtonsoft.Json.JsonTextWriter.WriteStartConstructorAsync(string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return _safeAsync ? DoWriteStartConstructorAsync(name, cancellationToken) : base.WriteStartConstructorAsync(name, cancellationToken);", span="452-452"];
m72_200 [cluster="Newtonsoft.Json.JsonTextWriter.WriteStartConstructorAsync(string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteStartConstructorAsync(string, System.Threading.CancellationToken)", span="450-450"];
m72_390 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(int, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(int, System.Threading.CancellationToken)", span="886-886"];
m72_391 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(int, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return _safeAsync ? WriteIntegerValueAsync(value, cancellationToken) : base.WriteValueAsync(value, cancellationToken);", span="888-888"];
m72_392 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(int, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(int, System.Threading.CancellationToken)", span="886-886"];
m72_587 [cluster="Newtonsoft.Json.Utilities.BufferUtils.RentBuffer(Newtonsoft.Json.IArrayPool<char>, int)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.Utilities.BufferUtils.RentBuffer(Newtonsoft.Json.IArrayPool<char>, int)", span="43-43"];
m72_50 [cluster="Newtonsoft.Json.JsonWriter.WriteEndAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndAsync(System.Threading.CancellationToken)", span="245-245"];
m72_89 [cluster="Newtonsoft.Json.JsonTextWriter.WriteRawAsync(string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteRawAsync(string, System.Threading.CancellationToken)", span="227-227"];
m72_90 [cluster="Newtonsoft.Json.JsonTextWriter.WriteRawAsync(string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return _safeAsync ? DoWriteRawAsync(json, cancellationToken) : base.WriteRawAsync(json, cancellationToken);", span="229-229"];
m72_91 [cluster="Newtonsoft.Json.JsonTextWriter.WriteRawAsync(string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteRawAsync(string, System.Threading.CancellationToken)", span="227-227"];
m72_394 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(int?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(int?, System.Threading.CancellationToken)", span="899-899"];
m72_395 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(int?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return _safeAsync ? DoWriteValueAsync(value, cancellationToken) : base.WriteValueAsync(value, cancellationToken);", span="901-901"];
m72_396 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(int?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(int?, System.Threading.CancellationToken)", span="899-899"];
m72_129 [cluster="Newtonsoft.Json.JsonTextWriter.WriteEscapedStringAsync(string, bool, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteEscapedStringAsync(string, bool, System.Threading.CancellationToken)", span="298-298"];
m72_130 [cluster="Newtonsoft.Json.JsonTextWriter.WriteEscapedStringAsync(string, bool, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return JavaScriptUtils.WriteEscapedJavaScriptStringAsync(_writer, value, _quoteChar, quote, _charEscapeFlags, StringEscapeHandling, this, _writeBuffer, cancellationToken);", span="300-300"];
m72_131 [cluster="Newtonsoft.Json.JsonTextWriter.WriteEscapedStringAsync(string, bool, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteEscapedStringAsync(string, bool, System.Threading.CancellationToken)", span="298-298"];
m72_92 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteRawAsync(string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteRawAsync(string, System.Threading.CancellationToken)", span="232-232"];
m72_94 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteRawAsync(string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return _writer.WriteAsync(json, cancellationToken);", span="234-234"];
m72_95 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteRawAsync(string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteRawAsync(string, System.Threading.CancellationToken)", span="232-232"];
m72_242 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(bool?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(bool?, System.Threading.CancellationToken)", span="543-543"];
m72_244 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(bool?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return value == null ? DoWriteNullAsync(cancellationToken) : DoWriteValueAsync(value.GetValueOrDefault(), cancellationToken);", span="545-545"];
m72_245 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(bool?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(bool?, System.Threading.CancellationToken)", span="543-543"];
m72_325 [cluster="System.DateTimeOffset.ToString(string, System.IFormatProvider)", file="JsonTextWriter.Async.cs", label="Entry System.DateTimeOffset.ToString(string, System.IFormatProvider)", span="0-0"];
m72_386 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.Guid?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.Guid?, System.Threading.CancellationToken)", span="873-873"];
m72_388 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.Guid?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return value == null ? DoWriteNullAsync(cancellationToken) : DoWriteValueAsync(value.GetValueOrDefault(), cancellationToken);", span="875-875"];
m72_389 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.Guid?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.Guid?, System.Threading.CancellationToken)", span="873-873"];
m72_147 [cluster="Newtonsoft.Json.JsonTextWriter.DoWritePropertyNameAsync(System.Threading.Tasks.Task, string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.DoWritePropertyNameAsync(System.Threading.Tasks.Task, string, System.Threading.CancellationToken)", span="333-333"];
m72_149 [cluster="Newtonsoft.Json.JsonTextWriter.DoWritePropertyNameAsync(System.Threading.Tasks.Task, string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="await task.ConfigureAwait(false)", span="335-335"];
m72_150 [cluster="Newtonsoft.Json.JsonTextWriter.DoWritePropertyNameAsync(System.Threading.Tasks.Task, string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="await WriteEscapedStringAsync(name, _quoteName, cancellationToken).ConfigureAwait(false)", span="337-337"];
m72_151 [cluster="Newtonsoft.Json.JsonTextWriter.DoWritePropertyNameAsync(System.Threading.Tasks.Task, string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="await _writer.WriteAsync(':').ConfigureAwait(false)", span="339-339"];
m72_152 [cluster="Newtonsoft.Json.JsonTextWriter.DoWritePropertyNameAsync(System.Threading.Tasks.Task, string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.DoWritePropertyNameAsync(System.Threading.Tasks.Task, string, System.Threading.CancellationToken)", span="333-333"];
m72_314 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.DateTimeOffset, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.DateTimeOffset, System.Threading.CancellationToken)", span="700-700"];
m72_316 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.DateTimeOffset, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="await InternalWriteValueAsync(JsonToken.Date, cancellationToken).ConfigureAwait(false)", span="702-702"];
m72_318 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.DateTimeOffset, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="int length = WriteValueToBuffer(value)", span="706-706"];
m72_319 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.DateTimeOffset, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="await _writer.WriteAsync(_writeBuffer, 0, length, cancellationToken).ConfigureAwait(false)", span="708-708"];
m72_321 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.DateTimeOffset, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="await _writer.WriteAsync(value.ToString(DateFormatString, Culture), cancellationToken).ConfigureAwait(false)", span="713-713"];
m72_317 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.DateTimeOffset, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="string.IsNullOrEmpty(DateFormatString)", span="704-704"];
m72_320 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.DateTimeOffset, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="await _writer.WriteAsync(_quoteChar).ConfigureAwait(false)", span="712-712"];
m72_322 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.DateTimeOffset, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="await _writer.WriteAsync(_quoteChar).ConfigureAwait(false)", span="714-714"];
m72_323 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.DateTimeOffset, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.DateTimeOffset, System.Threading.CancellationToken)", span="700-700"];
m72_469 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.TimeSpan, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.TimeSpan, System.Threading.CancellationToken)", span="1083-1083"];
m72_471 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.TimeSpan, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="await InternalWriteValueAsync(JsonToken.String, cancellationToken).ConfigureAwait(false)", span="1085-1085"];
m72_472 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.TimeSpan, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="await _writer.WriteAsync(_quoteChar, cancellationToken).ConfigureAwait(false)", span="1086-1086"];
m72_473 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.TimeSpan, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="await _writer.WriteAsync(value.ToString(null, CultureInfo.InvariantCulture), cancellationToken).ConfigureAwait(false)", span="1087-1087"];
m72_474 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.TimeSpan, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="await _writer.WriteAsync(_quoteChar, cancellationToken).ConfigureAwait(false)", span="1088-1088"];
m72_475 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.TimeSpan, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(System.TimeSpan, System.Threading.CancellationToken)", span="1083-1083"];
m72_363 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(float, bool, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueAsync(float, bool, System.Threading.CancellationToken)", span="816-816"];
m72_365 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(float, bool, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return WriteValueInternalAsync(JsonToken.Float, JsonConvert.ToString(value, FloatFormatHandling, QuoteChar, nullable), cancellationToken);", span="818-818"];
m72_366 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValueAsync(float, bool, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueAsync(float, bool, System.Threading.CancellationToken)", span="816-816"];
m72_254 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(byte?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(byte?, System.Threading.CancellationToken)", span="574-574"];
m72_256 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(byte?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return value == null ? DoWriteNullAsync(cancellationToken) : WriteIntegerValueAsync(value.GetValueOrDefault(), cancellationToken);", span="576-576"];
m72_257 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(byte?, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(byte?, System.Threading.CancellationToken)", span="574-574"];
m72_234 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(bool, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(bool, System.Threading.CancellationToken)", span="525-525"];
m72_236 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(bool, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="return WriteValueInternalAsync(JsonToken.Boolean, JsonConvert.ToString(value), cancellationToken);", span="527-527"];
m72_237 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(bool, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteValueAsync(bool, System.Threading.CancellationToken)", span="525-525"];
m72_226 [cluster="Newtonsoft.Json.JsonWriter.WriteWhitespaceAsync(string, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteWhitespaceAsync(string, System.Threading.CancellationToken)", span="1505-1505"];
m72_194 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteStartObjectAsync(System.Threading.Tasks.Task, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonTextWriter.DoWriteStartObjectAsync(System.Threading.Tasks.Task, System.Threading.CancellationToken)", span="435-435"];
m72_195 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteStartObjectAsync(System.Threading.Tasks.Task, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="await task.ConfigureAwait(false)", span="437-437"];
m72_196 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteStartObjectAsync(System.Threading.Tasks.Task, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="await _writer.WriteAsync('{').ConfigureAwait(false)", span="439-439"];
m72_197 [cluster="Newtonsoft.Json.JsonTextWriter.DoWriteStartObjectAsync(System.Threading.Tasks.Task, System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Exit Newtonsoft.Json.JsonTextWriter.DoWriteStartObjectAsync(System.Threading.Tasks.Task, System.Threading.CancellationToken)", span="435-435"];
m72_550 [cluster="Newtonsoft.Json.JsonWriter.WriteEndConstructorAsync(System.Threading.CancellationToken)", file="JsonTextWriter.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndConstructorAsync(System.Threading.CancellationToken)", span="330-330"];
m72_590 [file="JsonTextWriter.Async.cs", label="Newtonsoft.Json.JsonTextWriter", span=""];
m73_4 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string, System.Exception)", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string, System.Exception)", span="63-63"];
m73_5 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string, System.Exception)", file="JsonTextWriter.cs", label="Exit Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string, System.Exception)", span="63-63"];
m73_0 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException()", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException()", span="43-43"];
m73_1 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException()", file="JsonTextWriter.cs", label="Exit Newtonsoft.Json.JsonSerializationException.JsonSerializationException()", span="43-43"];
m73_6 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="76-76"];
m73_7 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriter.cs", label="Exit Newtonsoft.Json.JsonSerializationException.JsonSerializationException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="76-76"];
m73_11 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", span="87-87"];
m73_12 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", file="JsonTextWriter.cs", label="return Create(reader as IJsonLineInfo, reader.Path, message, ex);", span="89-89"];
m73_13 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", file="JsonTextWriter.cs", label="Exit Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", span="87-87"];
m73_8 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", span="82-82"];
m73_9 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", file="JsonTextWriter.cs", label="return Create(reader, message, null);", span="84-84"];
m73_10 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", file="JsonTextWriter.cs", label="Exit Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", span="82-82"];
m73_14 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", span="92-92"];
m73_15 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", file="JsonTextWriter.cs", label="message = JsonPosition.FormatMessage(lineInfo, path, message)", span="94-94"];
m73_16 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", file="JsonTextWriter.cs", label="return new JsonSerializationException(message, ex);", span="96-96"];
m73_17 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", file="JsonTextWriter.cs", label="Exit Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", span="92-92"];
m73_18 [cluster="Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", span="139-139"];
m73_2 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="52-52"];
m73_3 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", file="JsonTextWriter.cs", label="Exit Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="52-52"];
m74_7 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonTextWriterAsyncTests.cs", label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="359-359"];
m74_6 [cluster="Newtonsoft.Json.Serialization.MemoryTraceWriter.MemoryTraceWriter()", file="JsonTextWriterAsyncTests.cs", label="Entry Newtonsoft.Json.Serialization.MemoryTraceWriter.MemoryTraceWriter()", span="29-29"];
m74_8 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonTextWriterAsyncTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="802-802"];
m74_0 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.TraceWriter.Example()", file="JsonTextWriterAsyncTests.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.TraceWriter.Example()", span="18-18"];
m74_1 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.TraceWriter.Example()", file="JsonTextWriterAsyncTests.cs", label="string json = @''{\r\n              'FullName': 'Dan Deleted',\r\n              'Deleted': true,\r\n              'DeletedDate': '2013-01-20T00:00:00'\r\n            }''", span="21-25"];
m74_2 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.TraceWriter.Example()", file="JsonTextWriterAsyncTests.cs", label="MemoryTraceWriter traceWriter = new MemoryTraceWriter()", span="27-27"];
m74_3 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.TraceWriter.Example()", file="JsonTextWriterAsyncTests.cs", label="Account account = JsonConvert.DeserializeObject<Account>(json, new JsonSerializerSettings\r\n            {\r\n                TraceWriter = traceWriter\r\n            })", span="29-32"];
m74_4 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.TraceWriter.Example()", file="JsonTextWriterAsyncTests.cs", label="Console.WriteLine(traceWriter.ToString())", span="34-34"];
m74_5 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.TraceWriter.Example()", file="JsonTextWriterAsyncTests.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Serializer.TraceWriter.Example()", span="18-18"];
m74_9 [cluster="Newtonsoft.Json.Serialization.MemoryTraceWriter.ToString()", file="JsonTextWriterAsyncTests.cs", label="Entry Newtonsoft.Json.Serialization.MemoryTraceWriter.ToString()", span="66-66"];
m74_10 [cluster="System.Console.WriteLine(string)", file="JsonTextWriterAsyncTests.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m75_7 [cluster="Unk.AreEqual", file="JsonTypeReflector.cs", label="Entry Unk.AreEqual", span=""];
m75_0 [cluster="Newtonsoft.Json.Tests.Issues.Issue1512.Test()", file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Tests.Issues.Issue1512.Test()", span="43-43"];
m75_1 [cluster="Newtonsoft.Json.Tests.Issues.Issue1512.Test()", file="JsonTypeReflector.cs", label="var json = @''[\r\n                            {\r\n                                ''''Inners'''': []\r\n                            }\r\n                        ]''", span="45-49"];
m75_2 [cluster="Newtonsoft.Json.Tests.Issues.Issue1512.Test()", file="JsonTypeReflector.cs", label="ImmutableArray<Outer> result = JsonConvert.DeserializeObject<ImmutableArray<Outer>>(json)", span="50-50"];
m75_3 [cluster="Newtonsoft.Json.Tests.Issues.Issue1512.Test()", file="JsonTypeReflector.cs", label="Assert.AreEqual(1, result.Length)", span="52-52"];
m75_4 [cluster="Newtonsoft.Json.Tests.Issues.Issue1512.Test()", file="JsonTypeReflector.cs", label="Assert.AreEqual(0, result[0].Inners.Value.Length)", span="53-53"];
m75_5 [cluster="Newtonsoft.Json.Tests.Issues.Issue1512.Test()", file="JsonTypeReflector.cs", label="Exit Newtonsoft.Json.Tests.Issues.Issue1512.Test()", span="43-43"];
m75_6 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="703-703"];
m75_11 [cluster="Newtonsoft.Json.Tests.Issues.Inner.Inner(string)", file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Tests.Issues.Inner.Inner(string)", span="69-69"];
m75_13 [cluster="Newtonsoft.Json.Tests.Issues.Inner.Inner(string)", file="JsonTypeReflector.cs", label="Exit Newtonsoft.Json.Tests.Issues.Inner.Inner(string)", span="69-69"];
m75_8 [cluster="Newtonsoft.Json.Tests.Issues.Outer.Outer(System.Collections.Immutable.ImmutableArray<string>?)", file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Tests.Issues.Outer.Outer(System.Collections.Immutable.ImmutableArray<string>?)", span="59-59"];
m75_9 [cluster="Newtonsoft.Json.Tests.Issues.Outer.Outer(System.Collections.Immutable.ImmutableArray<string>?)", file="JsonTypeReflector.cs", label="this.Inners = inners", span="61-61"];
m75_10 [cluster="Newtonsoft.Json.Tests.Issues.Outer.Outer(System.Collections.Immutable.ImmutableArray<string>?)", file="JsonTypeReflector.cs", label="Exit Newtonsoft.Json.Tests.Issues.Outer.Outer(System.Collections.Immutable.ImmutableArray<string>?)", span="59-59"];
m75_14 [file="JsonTypeReflector.cs", label="Newtonsoft.Json.Tests.Issues.Outer", span=""];
m75_15 [file="JsonTypeReflector.cs", label="Newtonsoft.Json.Tests.Issues.Inner", span=""];
m76_0 [cluster="Newtonsoft.Json.Schema.JsonSchemaResolver.JsonSchemaResolver()", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaResolver.JsonSchemaResolver()", span="56-56"];
m76_1 [cluster="Newtonsoft.Json.Schema.JsonSchemaResolver.JsonSchemaResolver()", file="JsonValidatingReader.cs", label="LoadedSchemas = new List<JsonSchema>()", span="58-58"];
m76_2 [cluster="Newtonsoft.Json.Schema.JsonSchemaResolver.JsonSchemaResolver()", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.Schema.JsonSchemaResolver.JsonSchemaResolver()", span="56-56"];
m76_10 [cluster="Unk.SingleOrDefault", file="JsonValidatingReader.cs", label="Entry Unk.SingleOrDefault", span=""];
m76_15 [cluster="lambda expression", file="JsonValidatingReader.cs", label="Entry lambda expression", span="71-71"];
m76_12 [cluster="lambda expression", file="JsonValidatingReader.cs", label="string.Equals(s.Id, reference, StringComparison.Ordinal)", span="68-68"];
m76_16 [cluster="lambda expression", file="JsonValidatingReader.cs", label="string.Equals(s.Location, reference, StringComparison.Ordinal)", span="71-71"];
m76_11 [cluster="lambda expression", file="JsonValidatingReader.cs", label="Entry lambda expression", span="68-68"];
m76_13 [cluster="lambda expression", file="JsonValidatingReader.cs", label="Exit lambda expression", span="68-68"];
m76_17 [cluster="lambda expression", file="JsonValidatingReader.cs", label="Exit lambda expression", span="71-71"];
m76_14 [cluster="string.Equals(string, string, System.StringComparison)", file="JsonValidatingReader.cs", label="Entry string.Equals(string, string, System.StringComparison)", span="0-0"];
m76_4 [cluster="Newtonsoft.Json.Schema.JsonSchemaResolver.GetSchema(string)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaResolver.GetSchema(string)", span="66-66"];
m76_5 [cluster="Newtonsoft.Json.Schema.JsonSchemaResolver.GetSchema(string)", file="JsonValidatingReader.cs", label="JsonSchema schema = LoadedSchemas.SingleOrDefault(s => string.Equals(s.Id, reference, StringComparison.Ordinal))", span="68-68"];
m76_7 [cluster="Newtonsoft.Json.Schema.JsonSchemaResolver.GetSchema(string)", file="JsonValidatingReader.cs", label="schema = LoadedSchemas.SingleOrDefault(s => string.Equals(s.Location, reference, StringComparison.Ordinal))", span="71-71"];
m76_6 [cluster="Newtonsoft.Json.Schema.JsonSchemaResolver.GetSchema(string)", file="JsonValidatingReader.cs", label="schema == null", span="70-70"];
m76_8 [cluster="Newtonsoft.Json.Schema.JsonSchemaResolver.GetSchema(string)", file="JsonValidatingReader.cs", label="return schema;", span="73-73"];
m76_9 [cluster="Newtonsoft.Json.Schema.JsonSchemaResolver.GetSchema(string)", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.Schema.JsonSchemaResolver.GetSchema(string)", span="66-66"];
m76_3 [cluster="System.Collections.Generic.List<T>.List()", file="JsonValidatingReader.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m76_18 [file="JsonValidatingReader.cs", label="Newtonsoft.Json.Schema.JsonSchemaResolver", span=""];
m76_19 [file="JsonValidatingReader.cs", label=string, span=""];
m78_8 [cluster="Newtonsoft.Json.JsonWriterException.JsonWriterException(string, System.Exception, string)", file="JsonWriterException.cs", label="Entry Newtonsoft.Json.JsonWriterException.JsonWriterException(string, System.Exception, string)", span="88-88"];
m78_9 [cluster="Newtonsoft.Json.JsonWriterException.JsonWriterException(string, System.Exception, string)", file="JsonWriterException.cs", label="Path = path", span="91-91"];
m78_10 [cluster="Newtonsoft.Json.JsonWriterException.JsonWriterException(string, System.Exception, string)", file="JsonWriterException.cs", label="Exit Newtonsoft.Json.JsonWriterException.JsonWriterException(string, System.Exception, string)", span="88-88"];
m78_4 [cluster="Newtonsoft.Json.JsonWriterException.JsonWriterException(string, System.Exception)", file="JsonWriterException.cs", label="Entry Newtonsoft.Json.JsonWriterException.JsonWriterException(string, System.Exception)", span="69-69"];
m78_5 [cluster="Newtonsoft.Json.JsonWriterException.JsonWriterException(string, System.Exception)", file="JsonWriterException.cs", label="Exit Newtonsoft.Json.JsonWriterException.JsonWriterException(string, System.Exception)", span="69-69"];
m78_11 [cluster="Newtonsoft.Json.JsonWriterException.Create(Newtonsoft.Json.JsonWriter, string, System.Exception)", file="JsonWriterException.cs", label="Entry Newtonsoft.Json.JsonWriterException.Create(Newtonsoft.Json.JsonWriter, string, System.Exception)", span="94-94"];
m78_12 [cluster="Newtonsoft.Json.JsonWriterException.Create(Newtonsoft.Json.JsonWriter, string, System.Exception)", file="JsonWriterException.cs", label="return Create(writer.ContainerPath, message, ex);", span="96-96"];
m78_13 [cluster="Newtonsoft.Json.JsonWriterException.Create(Newtonsoft.Json.JsonWriter, string, System.Exception)", file="JsonWriterException.cs", label="Exit Newtonsoft.Json.JsonWriterException.Create(Newtonsoft.Json.JsonWriter, string, System.Exception)", span="94-94"];
m78_2 [cluster="Newtonsoft.Json.JsonWriterException.JsonWriterException(string)", file="JsonWriterException.cs", label="Entry Newtonsoft.Json.JsonWriterException.JsonWriterException(string)", span="58-58"];
m78_3 [cluster="Newtonsoft.Json.JsonWriterException.JsonWriterException(string)", file="JsonWriterException.cs", label="Exit Newtonsoft.Json.JsonWriterException.JsonWriterException(string)", span="58-58"];
m78_6 [cluster="Newtonsoft.Json.JsonWriterException.JsonWriterException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonWriterException.cs", label="Entry Newtonsoft.Json.JsonWriterException.JsonWriterException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="82-82"];
m78_7 [cluster="Newtonsoft.Json.JsonWriterException.JsonWriterException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonWriterException.cs", label="Exit Newtonsoft.Json.JsonWriterException.JsonWriterException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="82-82"];
m78_14 [cluster="Newtonsoft.Json.JsonWriterException.Create(string, string, System.Exception)", file="JsonWriterException.cs", label="Entry Newtonsoft.Json.JsonWriterException.Create(string, string, System.Exception)", span="99-99"];
m78_15 [cluster="Newtonsoft.Json.JsonWriterException.Create(string, string, System.Exception)", file="JsonWriterException.cs", label="message = JsonPosition.FormatMessage(null, path, message)", span="101-101"];
m78_16 [cluster="Newtonsoft.Json.JsonWriterException.Create(string, string, System.Exception)", file="JsonWriterException.cs", label="return new JsonWriterException(message, ex, path);", span="103-103"];
m78_17 [cluster="Newtonsoft.Json.JsonWriterException.Create(string, string, System.Exception)", file="JsonWriterException.cs", label="Exit Newtonsoft.Json.JsonWriterException.Create(string, string, System.Exception)", span="99-99"];
m78_18 [cluster="Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", file="JsonWriterException.cs", label="Entry Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", span="139-139"];
m78_0 [cluster="Newtonsoft.Json.JsonWriterException.JsonWriterException()", file="JsonWriterException.cs", label="Entry Newtonsoft.Json.JsonWriterException.JsonWriterException()", span="49-49"];
m78_1 [cluster="Newtonsoft.Json.JsonWriterException.JsonWriterException()", file="JsonWriterException.cs", label="Exit Newtonsoft.Json.JsonWriterException.JsonWriterException()", span="49-49"];
m78_19 [file="JsonWriterException.cs", label="Newtonsoft.Json.JsonWriterException", span=""];
m79_44 [cluster="Newtonsoft.Json.Utilities.MethodCall<T, TResult>.Invoke(T, params object[])", file="JToken.cs", label="Entry Newtonsoft.Json.Utilities.MethodCall<T, TResult>.Invoke(T, params object[])", span="27-27"];
m79_71 [cluster="Unk.Select", file="JToken.cs", label="Entry Unk.Select", span=""];
m79_26 [cluster="System.Type.GetMethod(string, System.Reflection.BindingFlags)", file="JToken.cs", label="Entry System.Type.GetMethod(string, System.Reflection.BindingFlags)", span="0-0"];
m79_32 [cluster="System.Threading.Thread.MemoryBarrier()", file="JToken.cs", label="Entry System.Threading.Thread.MemoryBarrier()", span="0-0"];
m79_64 [cluster="System.Type.MakeGenericType(params System.Type[])", file="JToken.cs", label="Entry System.Type.MakeGenericType(params System.Type[])", span="0-0"];
m79_57 [cluster="Newtonsoft.Json.Utilities.FSharpUtils.BuildMapCreator<TKey, TValue>()", file="JToken.cs", label="Entry Newtonsoft.Json.Utilities.FSharpUtils.BuildMapCreator<TKey, TValue>()", span="138-138"];
m79_58 [cluster="Newtonsoft.Json.Utilities.FSharpUtils.BuildMapCreator<TKey, TValue>()", file="JToken.cs", label="Type genericMapType = _mapType.MakeGenericType(typeof(TKey), typeof(TValue))", span="140-140"];
m79_59 [cluster="Newtonsoft.Json.Utilities.FSharpUtils.BuildMapCreator<TKey, TValue>()", file="JToken.cs", label="ConstructorInfo ctor = genericMapType.GetConstructor(new[] { typeof(IEnumerable<Tuple<TKey, TValue>>) })", span="141-141"];
m79_60 [cluster="Newtonsoft.Json.Utilities.FSharpUtils.BuildMapCreator<TKey, TValue>()", file="JToken.cs", label="ObjectConstructor<object> ctorDelegate = JsonTypeReflector.ReflectionDelegateFactory.CreateParametrizedConstructor(ctor)", span="142-142"];
m79_61 [cluster="Newtonsoft.Json.Utilities.FSharpUtils.BuildMapCreator<TKey, TValue>()", file="JToken.cs", label="ObjectConstructor<object> creator = args =>\r\n            {\r\n                // convert dictionary KeyValuePairs to Tuples\r\n                IEnumerable<KeyValuePair<TKey, TValue>> values = (IEnumerable<KeyValuePair<TKey, TValue>>)args[0];\r\n                IEnumerable<Tuple<TKey, TValue>> tupleValues = values.Select(kv => new Tuple<TKey, TValue>(kv.Key, kv.Value));\r\n\r\n                return ctorDelegate(tupleValues);\r\n            }", span="144-151"];
m79_62 [cluster="Newtonsoft.Json.Utilities.FSharpUtils.BuildMapCreator<TKey, TValue>()", file="JToken.cs", label="return creator;", span="153-153"];
m79_63 [cluster="Newtonsoft.Json.Utilities.FSharpUtils.BuildMapCreator<TKey, TValue>()", file="JToken.cs", label="Exit Newtonsoft.Json.Utilities.FSharpUtils.BuildMapCreator<TKey, TValue>()", span="138-138"];
m79_30 [cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateGet<T>(System.Reflection.PropertyInfo)", file="JToken.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateGet<T>(System.Reflection.PropertyInfo)", span="67-67"];
m79_31 [cluster="System.Type.GetMethod(string)", file="JToken.cs", label="Entry System.Type.GetMethod(string)", span="0-0"];
m79_25 [cluster="System.Reflection.Assembly.GetType(string)", file="JToken.cs", label="Entry System.Reflection.Assembly.GetType(string)", span="0-0"];
m79_28 [cluster="Newtonsoft.Json.Utilities.FSharpUtils.CreateFSharpFuncCall(System.Type, string)", file="JToken.cs", label="Entry Newtonsoft.Json.Utilities.FSharpUtils.CreateFSharpFuncCall(System.Type, string)", span="104-104"];
m79_33 [cluster="Newtonsoft.Json.Utilities.FSharpUtils.CreateFSharpFuncCall(System.Type, string)", file="JToken.cs", label="MethodInfo innerMethodInfo = type.GetMethod(methodName, BindingFlags.Public | BindingFlags.Static)", span="106-106"];
m79_34 [cluster="Newtonsoft.Json.Utilities.FSharpUtils.CreateFSharpFuncCall(System.Type, string)", file="JToken.cs", label="MethodInfo toConvertMethodInfo = innerMethodInfo.ReturnType.GetMethod(''ToConverter'', BindingFlags.Public | BindingFlags.Static)", span="107-107"];
m79_35 [cluster="Newtonsoft.Json.Utilities.FSharpUtils.CreateFSharpFuncCall(System.Type, string)", file="JToken.cs", label="MethodCall<object, object> inner = JsonTypeReflector.ReflectionDelegateFactory.CreateMethodCall<object>(innerMethodInfo)", span="109-109"];
m79_36 [cluster="Newtonsoft.Json.Utilities.FSharpUtils.CreateFSharpFuncCall(System.Type, string)", file="JToken.cs", label="MethodCall<object, object> toConvert = JsonTypeReflector.ReflectionDelegateFactory.CreateMethodCall<object>(toConvertMethodInfo)", span="110-110"];
m79_37 [cluster="Newtonsoft.Json.Utilities.FSharpUtils.CreateFSharpFuncCall(System.Type, string)", file="JToken.cs", label="MethodCall<object, object> methodCall = (target, args) =>\r\n            {\r\n                object result = inner(target, args);\r\n\r\n                return toConvert(null, result);\r\n            }", span="112-117"];
m79_38 [cluster="Newtonsoft.Json.Utilities.FSharpUtils.CreateFSharpFuncCall(System.Type, string)", file="JToken.cs", label="return methodCall;", span="119-119"];
m79_39 [cluster="Newtonsoft.Json.Utilities.FSharpUtils.CreateFSharpFuncCall(System.Type, string)", file="JToken.cs", label="Exit Newtonsoft.Json.Utilities.FSharpUtils.CreateFSharpFuncCall(System.Type, string)", span="104-104"];
m79_49 [cluster="System.Reflection.MethodInfo.MakeGenericMethod(params System.Type[])", file="JToken.cs", label="Entry System.Reflection.MethodInfo.MakeGenericMethod(params System.Type[])", span="0-0"];
m79_27 [cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", file="JToken.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", span="64-64"];
m79_72 [cluster="Newtonsoft.Json.Serialization.ObjectConstructor<T>.Invoke(params object[])", file="JToken.cs", label="Entry Newtonsoft.Json.Serialization.ObjectConstructor<T>.Invoke(params object[])", span="31-31"];
m79_65 [cluster="System.Type.GetConstructor(System.Type[])", file="JToken.cs", label="Entry System.Type.GetConstructor(System.Type[])", span="0-0"];
m79_56 [cluster="System.Reflection.MethodBase.Invoke(object, object[])", file="JToken.cs", label="Entry System.Reflection.MethodBase.Invoke(object, object[])", span="0-0"];
m79_45 [cluster="Newtonsoft.Json.Utilities.FSharpUtils.CreateSeq(System.Type)", file="JToken.cs", label="Entry Newtonsoft.Json.Utilities.FSharpUtils.CreateSeq(System.Type)", span="122-122"];
m79_46 [cluster="Newtonsoft.Json.Utilities.FSharpUtils.CreateSeq(System.Type)", file="JToken.cs", label="MethodInfo seqType = _ofSeq.MakeGenericMethod(t)", span="124-124"];
m79_47 [cluster="Newtonsoft.Json.Utilities.FSharpUtils.CreateSeq(System.Type)", file="JToken.cs", label="return JsonTypeReflector.ReflectionDelegateFactory.CreateParametrizedConstructor(seqType);", span="126-126"];
m79_48 [cluster="Newtonsoft.Json.Utilities.FSharpUtils.CreateSeq(System.Type)", file="JToken.cs", label="Exit Newtonsoft.Json.Utilities.FSharpUtils.CreateSeq(System.Type)", span="122-122"];
m79_50 [cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateParametrizedConstructor(System.Reflection.MethodBase)", file="JToken.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateParametrizedConstructor(System.Reflection.MethodBase)", span="65-65"];
m79_0 [cluster="Newtonsoft.Json.Utilities.FSharpUtils.EnsureInitialized(System.Reflection.Assembly)", file="JToken.cs", label="Entry Newtonsoft.Json.Utilities.FSharpUtils.EnsureInitialized(System.Reflection.Assembly)", span="59-59"];
m79_1 [cluster="Newtonsoft.Json.Utilities.FSharpUtils.EnsureInitialized(System.Reflection.Assembly)", file="JToken.cs", label="!_initialized", span="61-61"];
m79_4 [cluster="Newtonsoft.Json.Utilities.FSharpUtils.EnsureInitialized(System.Reflection.Assembly)", file="JToken.cs", label="FSharpCoreAssembly = fsharpCoreAssembly", span="67-67"];
m79_5 [cluster="Newtonsoft.Json.Utilities.FSharpUtils.EnsureInitialized(System.Reflection.Assembly)", file="JToken.cs", label="Type fsharpType = fsharpCoreAssembly.GetType(''Microsoft.FSharp.Reflection.FSharpType'')", span="69-69"];
m79_10 [cluster="Newtonsoft.Json.Utilities.FSharpUtils.EnsureInitialized(System.Reflection.Assembly)", file="JToken.cs", label="Type fsharpValue = fsharpCoreAssembly.GetType(''Microsoft.FSharp.Reflection.FSharpValue'')", span="77-77"];
m79_14 [cluster="Newtonsoft.Json.Utilities.FSharpUtils.EnsureInitialized(System.Reflection.Assembly)", file="JToken.cs", label="Type unionCaseInfo = fsharpCoreAssembly.GetType(''Microsoft.FSharp.Reflection.UnionCaseInfo'')", span="83-83"];
m79_19 [cluster="Newtonsoft.Json.Utilities.FSharpUtils.EnsureInitialized(System.Reflection.Assembly)", file="JToken.cs", label="Type listModule = fsharpCoreAssembly.GetType(''Microsoft.FSharp.Collections.ListModule'')", span="90-90"];
m79_21 [cluster="Newtonsoft.Json.Utilities.FSharpUtils.EnsureInitialized(System.Reflection.Assembly)", file="JToken.cs", label="_mapType = fsharpCoreAssembly.GetType(''Microsoft.FSharp.Collections.FSharpMap`2'')", span="93-93"];
m79_2 [cluster="Newtonsoft.Json.Utilities.FSharpUtils.EnsureInitialized(System.Reflection.Assembly)", file="JToken.cs", label=Lock, span="63-63"];
m79_3 [cluster="Newtonsoft.Json.Utilities.FSharpUtils.EnsureInitialized(System.Reflection.Assembly)", file="JToken.cs", label="!_initialized", span="65-65"];
m79_6 [cluster="Newtonsoft.Json.Utilities.FSharpUtils.EnsureInitialized(System.Reflection.Assembly)", file="JToken.cs", label="MethodInfo isUnionMethodInfo = fsharpType.GetMethod(''IsUnion'', BindingFlags.Public | BindingFlags.Static)", span="71-71"];
m79_8 [cluster="Newtonsoft.Json.Utilities.FSharpUtils.EnsureInitialized(System.Reflection.Assembly)", file="JToken.cs", label="MethodInfo getUnionCasesMethodInfo = fsharpType.GetMethod(''GetUnionCases'', BindingFlags.Public | BindingFlags.Static)", span="74-74"];
m79_7 [cluster="Newtonsoft.Json.Utilities.FSharpUtils.EnsureInitialized(System.Reflection.Assembly)", file="JToken.cs", label="IsUnion = JsonTypeReflector.ReflectionDelegateFactory.CreateMethodCall<object>(isUnionMethodInfo)", span="72-72"];
m79_9 [cluster="Newtonsoft.Json.Utilities.FSharpUtils.EnsureInitialized(System.Reflection.Assembly)", file="JToken.cs", label="GetUnionCases = JsonTypeReflector.ReflectionDelegateFactory.CreateMethodCall<object>(getUnionCasesMethodInfo)", span="75-75"];
m79_11 [cluster="Newtonsoft.Json.Utilities.FSharpUtils.EnsureInitialized(System.Reflection.Assembly)", file="JToken.cs", label="PreComputeUnionTagReader = CreateFSharpFuncCall(fsharpValue, ''PreComputeUnionTagReader'')", span="79-79"];
m79_12 [cluster="Newtonsoft.Json.Utilities.FSharpUtils.EnsureInitialized(System.Reflection.Assembly)", file="JToken.cs", label="PreComputeUnionReader = CreateFSharpFuncCall(fsharpValue, ''PreComputeUnionReader'')", span="80-80"];
m79_13 [cluster="Newtonsoft.Json.Utilities.FSharpUtils.EnsureInitialized(System.Reflection.Assembly)", file="JToken.cs", label="PreComputeUnionConstructor = CreateFSharpFuncCall(fsharpValue, ''PreComputeUnionConstructor'')", span="81-81"];
m79_15 [cluster="Newtonsoft.Json.Utilities.FSharpUtils.EnsureInitialized(System.Reflection.Assembly)", file="JToken.cs", label="GetUnionCaseInfoName = JsonTypeReflector.ReflectionDelegateFactory.CreateGet<object>(unionCaseInfo.GetProperty(''Name''))", span="85-85"];
m79_16 [cluster="Newtonsoft.Json.Utilities.FSharpUtils.EnsureInitialized(System.Reflection.Assembly)", file="JToken.cs", label="GetUnionCaseInfoTag = JsonTypeReflector.ReflectionDelegateFactory.CreateGet<object>(unionCaseInfo.GetProperty(''Tag''))", span="86-86"];
m79_17 [cluster="Newtonsoft.Json.Utilities.FSharpUtils.EnsureInitialized(System.Reflection.Assembly)", file="JToken.cs", label="GetUnionCaseInfoDeclaringType = JsonTypeReflector.ReflectionDelegateFactory.CreateGet<object>(unionCaseInfo.GetProperty(''DeclaringType''))", span="87-87"];
m79_18 [cluster="Newtonsoft.Json.Utilities.FSharpUtils.EnsureInitialized(System.Reflection.Assembly)", file="JToken.cs", label="GetUnionCaseInfoFields = JsonTypeReflector.ReflectionDelegateFactory.CreateMethodCall<object>(unionCaseInfo.GetMethod(''GetFields''))", span="88-88"];
m79_20 [cluster="Newtonsoft.Json.Utilities.FSharpUtils.EnsureInitialized(System.Reflection.Assembly)", file="JToken.cs", label="_ofSeq = listModule.GetMethod(''OfSeq'')", span="91-91"];
m79_22 [cluster="Newtonsoft.Json.Utilities.FSharpUtils.EnsureInitialized(System.Reflection.Assembly)", file="JToken.cs", label="Thread.MemoryBarrier()", span="96-96"];
m79_23 [cluster="Newtonsoft.Json.Utilities.FSharpUtils.EnsureInitialized(System.Reflection.Assembly)", file="JToken.cs", label="_initialized = true", span="98-98"];
m79_24 [cluster="Newtonsoft.Json.Utilities.FSharpUtils.EnsureInitialized(System.Reflection.Assembly)", file="JToken.cs", label="Exit Newtonsoft.Json.Utilities.FSharpUtils.EnsureInitialized(System.Reflection.Assembly)", span="59-59"];
m79_76 [cluster="System.Tuple<T1, T2>.Tuple(T1, T2)", file="JToken.cs", label="Entry System.Tuple<T1, T2>.Tuple(T1, T2)", span="0-0"];
m79_29 [cluster="System.Type.GetProperty(string)", file="JToken.cs", label="Entry System.Type.GetProperty(string)", span="0-0"];
m79_73 [cluster="lambda expression", file="JToken.cs", label="Entry lambda expression", span="148-148"];
m79_41 [cluster="lambda expression", file="JToken.cs", label="object result = inner(target, args)", span="114-114"];
m79_42 [cluster="lambda expression", file="JToken.cs", label="return toConvert(null, result);", span="116-116"];
m79_40 [cluster="lambda expression", file="JToken.cs", label="Entry lambda expression", span="112-117"];
m79_43 [cluster="lambda expression", file="JToken.cs", label="Exit lambda expression", span="112-117"];
m79_69 [cluster="lambda expression", file="JToken.cs", label="return ctorDelegate(tupleValues);", span="150-150"];
m79_67 [cluster="lambda expression", file="JToken.cs", label="IEnumerable<KeyValuePair<TKey, TValue>> values = (IEnumerable<KeyValuePair<TKey, TValue>>)args[0]", span="147-147"];
m79_66 [cluster="lambda expression", file="JToken.cs", label="Entry lambda expression", span="144-151"];
m79_68 [cluster="lambda expression", file="JToken.cs", label="IEnumerable<Tuple<TKey, TValue>> tupleValues = values.Select(kv => new Tuple<TKey, TValue>(kv.Key, kv.Value))", span="148-148"];
m79_70 [cluster="lambda expression", file="JToken.cs", label="Exit lambda expression", span="144-151"];
m79_74 [cluster="lambda expression", file="JToken.cs", label="new Tuple<TKey, TValue>(kv.Key, kv.Value)", span="148-148"];
m79_75 [cluster="lambda expression", file="JToken.cs", label="Exit lambda expression", span="148-148"];
m79_51 [cluster="Newtonsoft.Json.Utilities.FSharpUtils.CreateMap(System.Type, System.Type)", file="JToken.cs", label="Entry Newtonsoft.Json.Utilities.FSharpUtils.CreateMap(System.Type, System.Type)", span="129-129"];
m79_52 [cluster="Newtonsoft.Json.Utilities.FSharpUtils.CreateMap(System.Type, System.Type)", file="JToken.cs", label="MethodInfo creatorDefinition = typeof (FSharpUtils).GetMethod(''BuildMapCreator'')", span="131-131"];
m79_53 [cluster="Newtonsoft.Json.Utilities.FSharpUtils.CreateMap(System.Type, System.Type)", file="JToken.cs", label="MethodInfo creatorGeneric = creatorDefinition.MakeGenericMethod(keyType, valueType)", span="133-133"];
m79_54 [cluster="Newtonsoft.Json.Utilities.FSharpUtils.CreateMap(System.Type, System.Type)", file="JToken.cs", label="return (ObjectConstructor<object>)creatorGeneric.Invoke(null, null);", span="135-135"];
m79_55 [cluster="Newtonsoft.Json.Utilities.FSharpUtils.CreateMap(System.Type, System.Type)", file="JToken.cs", label="Exit Newtonsoft.Json.Utilities.FSharpUtils.CreateMap(System.Type, System.Type)", span="129-129"];
m79_77 [file="JToken.cs", label=inner, span=""];
m79_78 [file="JToken.cs", label=toConvert, span=""];
m79_79 [file="JToken.cs", label=ctorDelegate, span=""];
m80_7 [cluster="Newtonsoft.Json.JsonWriter.WriteTokenSyncReadingAsync(Newtonsoft.Json.JsonReader, System.Threading.CancellationToken)", file="JTokenWriter.Async.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteTokenSyncReadingAsync(Newtonsoft.Json.JsonReader, System.Threading.CancellationToken)", span="703-703"];
m80_0 [cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteTokenAsync(Newtonsoft.Json.JsonReader, bool, bool, bool, System.Threading.CancellationToken)", file="JTokenWriter.Async.cs", label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteTokenAsync(Newtonsoft.Json.JsonReader, bool, bool, bool, System.Threading.CancellationToken)", span="37-37"];
m80_1 [cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteTokenAsync(Newtonsoft.Json.JsonReader, bool, bool, bool, System.Threading.CancellationToken)", file="JTokenWriter.Async.cs", label="reader is JTokenReader", span="41-41"];
m80_2 [cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteTokenAsync(Newtonsoft.Json.JsonReader, bool, bool, bool, System.Threading.CancellationToken)", file="JTokenWriter.Async.cs", label="WriteToken(reader, writeChildren, writeDateConstructorAsDate, writeComments)", span="43-43"];
m80_4 [cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteTokenAsync(Newtonsoft.Json.JsonReader, bool, bool, bool, System.Threading.CancellationToken)", file="JTokenWriter.Async.cs", label="return WriteTokenSyncReadingAsync(reader, cancellationToken);", span="47-47"];
m80_3 [cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteTokenAsync(Newtonsoft.Json.JsonReader, bool, bool, bool, System.Threading.CancellationToken)", file="JTokenWriter.Async.cs", label="return AsyncUtils.CompletedTask;", span="44-44"];
m80_5 [cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteTokenAsync(Newtonsoft.Json.JsonReader, bool, bool, bool, System.Threading.CancellationToken)", file="JTokenWriter.Async.cs", label="Exit Newtonsoft.Json.Linq.JTokenWriter.WriteTokenAsync(Newtonsoft.Json.JsonReader, bool, bool, bool, System.Threading.CancellationToken)", span="37-37"];
m80_6 [cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteToken(Newtonsoft.Json.JsonReader, bool, bool, bool)", file="JTokenWriter.Async.cs", label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteToken(Newtonsoft.Json.JsonReader, bool, bool, bool)", span="487-487"];
m80_8 [file="JTokenWriter.Async.cs", label="Newtonsoft.Json.Linq.JTokenWriter", span=""];
m81_0 [cluster="Newtonsoft.Json.Converters.DateTimeConverterBase.CanConvert(System.Type)", file="JTokenWriter.cs", label="Entry Newtonsoft.Json.Converters.DateTimeConverterBase.CanConvert(System.Type)", span="41-41"];
m81_1 [cluster="Newtonsoft.Json.Converters.DateTimeConverterBase.CanConvert(System.Type)", file="JTokenWriter.cs", label="objectType == typeof(DateTime) || objectType == typeof(DateTime?)", span="43-43"];
m81_3 [cluster="Newtonsoft.Json.Converters.DateTimeConverterBase.CanConvert(System.Type)", file="JTokenWriter.cs", label="objectType == typeof(DateTimeOffset) || objectType == typeof(DateTimeOffset?)", span="46-46"];
m81_2 [cluster="Newtonsoft.Json.Converters.DateTimeConverterBase.CanConvert(System.Type)", file="JTokenWriter.cs", label="return true;", span="44-44"];
m81_4 [cluster="Newtonsoft.Json.Converters.DateTimeConverterBase.CanConvert(System.Type)", file="JTokenWriter.cs", label="return true;", span="47-47"];
m81_5 [cluster="Newtonsoft.Json.Converters.DateTimeConverterBase.CanConvert(System.Type)", file="JTokenWriter.cs", label="return false;", span="50-50"];
m81_6 [cluster="Newtonsoft.Json.Converters.DateTimeConverterBase.CanConvert(System.Type)", file="JTokenWriter.cs", label="Exit Newtonsoft.Json.Converters.DateTimeConverterBase.CanConvert(System.Type)", span="41-41"];
m82_8 [cluster="Newtonsoft.Json.JsonWriterException.JsonWriterException(string, System.Exception, string)", file="JValue.Async.cs", label="Entry Newtonsoft.Json.JsonWriterException.JsonWriterException(string, System.Exception, string)", span="88-88"];
m82_9 [cluster="Newtonsoft.Json.JsonWriterException.JsonWriterException(string, System.Exception, string)", file="JValue.Async.cs", label="Path = path", span="91-91"];
m82_10 [cluster="Newtonsoft.Json.JsonWriterException.JsonWriterException(string, System.Exception, string)", file="JValue.Async.cs", label="Exit Newtonsoft.Json.JsonWriterException.JsonWriterException(string, System.Exception, string)", span="88-88"];
m82_4 [cluster="Newtonsoft.Json.JsonWriterException.JsonWriterException(string, System.Exception)", file="JValue.Async.cs", label="Entry Newtonsoft.Json.JsonWriterException.JsonWriterException(string, System.Exception)", span="69-69"];
m82_5 [cluster="Newtonsoft.Json.JsonWriterException.JsonWriterException(string, System.Exception)", file="JValue.Async.cs", label="Exit Newtonsoft.Json.JsonWriterException.JsonWriterException(string, System.Exception)", span="69-69"];
m82_11 [cluster="Newtonsoft.Json.JsonWriterException.Create(Newtonsoft.Json.JsonWriter, string, System.Exception)", file="JValue.Async.cs", label="Entry Newtonsoft.Json.JsonWriterException.Create(Newtonsoft.Json.JsonWriter, string, System.Exception)", span="94-94"];
m82_12 [cluster="Newtonsoft.Json.JsonWriterException.Create(Newtonsoft.Json.JsonWriter, string, System.Exception)", file="JValue.Async.cs", label="return Create(writer.ContainerPath, message, ex);", span="96-96"];
m82_13 [cluster="Newtonsoft.Json.JsonWriterException.Create(Newtonsoft.Json.JsonWriter, string, System.Exception)", file="JValue.Async.cs", label="Exit Newtonsoft.Json.JsonWriterException.Create(Newtonsoft.Json.JsonWriter, string, System.Exception)", span="94-94"];
m82_2 [cluster="Newtonsoft.Json.JsonWriterException.JsonWriterException(string)", file="JValue.Async.cs", label="Entry Newtonsoft.Json.JsonWriterException.JsonWriterException(string)", span="58-58"];
m82_3 [cluster="Newtonsoft.Json.JsonWriterException.JsonWriterException(string)", file="JValue.Async.cs", label="Exit Newtonsoft.Json.JsonWriterException.JsonWriterException(string)", span="58-58"];
m82_6 [cluster="Newtonsoft.Json.JsonWriterException.JsonWriterException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JValue.Async.cs", label="Entry Newtonsoft.Json.JsonWriterException.JsonWriterException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="82-82"];
m82_7 [cluster="Newtonsoft.Json.JsonWriterException.JsonWriterException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JValue.Async.cs", label="Exit Newtonsoft.Json.JsonWriterException.JsonWriterException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="82-82"];
m82_14 [cluster="Newtonsoft.Json.JsonWriterException.Create(string, string, System.Exception)", file="JValue.Async.cs", label="Entry Newtonsoft.Json.JsonWriterException.Create(string, string, System.Exception)", span="99-99"];
m82_15 [cluster="Newtonsoft.Json.JsonWriterException.Create(string, string, System.Exception)", file="JValue.Async.cs", label="message = JsonPosition.FormatMessage(null, path, message)", span="101-101"];
m82_16 [cluster="Newtonsoft.Json.JsonWriterException.Create(string, string, System.Exception)", file="JValue.Async.cs", label="return new JsonWriterException(message, ex, path);", span="103-103"];
m82_17 [cluster="Newtonsoft.Json.JsonWriterException.Create(string, string, System.Exception)", file="JValue.Async.cs", label="Exit Newtonsoft.Json.JsonWriterException.Create(string, string, System.Exception)", span="99-99"];
m82_18 [cluster="Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", file="JValue.Async.cs", label="Entry Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", span="104-104"];
m82_0 [cluster="Newtonsoft.Json.JsonWriterException.JsonWriterException()", file="JValue.Async.cs", label="Entry Newtonsoft.Json.JsonWriterException.JsonWriterException()", span="49-49"];
m82_1 [cluster="Newtonsoft.Json.JsonWriterException.JsonWriterException()", file="JValue.Async.cs", label="Exit Newtonsoft.Json.JsonWriterException.JsonWriterException()", span="49-49"];
m82_19 [file="JValue.Async.cs", label="Newtonsoft.Json.JsonWriterException", span=""];
m83_59 [cluster="decimal.CompareTo(decimal)", file="JValue.cs", label="Entry decimal.CompareTo(decimal)", span="0-0"];
m83_139 [cluster="System.Convert.ToDecimal(object, System.IFormatProvider)", file="JValue.cs", label="Entry System.Convert.ToDecimal(object, System.IFormatProvider)", span="0-0"];
m83_472 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", span="987-987"];
m83_473 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="JValue value = arg as JValue", span="989-989"];
m83_474 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="object compareValue = value != null ? value.Value : arg", span="990-990"];
m83_475 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="binder.Operation", span="992-992"];
m83_477 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="result = (Compare(instance.Type, instance.Value, compareValue) == 0)", span="995-995"];
m83_480 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="result = (Compare(instance.Type, instance.Value, compareValue) != 0)", span="998-998"];
m83_483 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="result = (Compare(instance.Type, instance.Value, compareValue) > 0)", span="1001-1001"];
m83_486 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="result = (Compare(instance.Type, instance.Value, compareValue) >= 0)", span="1004-1004"];
m83_489 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="result = (Compare(instance.Type, instance.Value, compareValue) < 0)", span="1007-1007"];
m83_492 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="result = (Compare(instance.Type, instance.Value, compareValue) <= 0)", span="1010-1010"];
m83_502 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="Operation(binder.Operation, instance.Value, compareValue, out result)", span="1020-1020"];
m83_476 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="ExpressionType.Equal", span="994-994"];
m83_479 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="ExpressionType.NotEqual", span="997-997"];
m83_482 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="ExpressionType.GreaterThan", span="1000-1000"];
m83_485 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="ExpressionType.GreaterThanOrEqual", span="1003-1003"];
m83_488 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="ExpressionType.LessThan", span="1006-1006"];
m83_491 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="ExpressionType.LessThanOrEqual", span="1009-1009"];
m83_494 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="ExpressionType.Add", span="1012-1012"];
m83_478 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="return true;", span="996-996"];
m83_481 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="return true;", span="999-999"];
m83_484 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="return true;", span="1002-1002"];
m83_487 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="return true;", span="1005-1005"];
m83_490 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="return true;", span="1008-1008"];
m83_493 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="return true;", span="1011-1011"];
m83_495 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="ExpressionType.AddAssign", span="1013-1013"];
m83_496 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="ExpressionType.Subtract", span="1014-1014"];
m83_497 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="ExpressionType.SubtractAssign", span="1015-1015"];
m83_498 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="ExpressionType.Multiply", span="1016-1016"];
m83_499 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="ExpressionType.MultiplyAssign", span="1017-1017"];
m83_500 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="ExpressionType.Divide", span="1018-1018"];
m83_501 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="ExpressionType.DivideAssign", span="1019-1019"];
m83_503 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="result = new JValue(result)", span="1022-1022"];
m83_505 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="result = null", span="1028-1028"];
m83_504 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="return true;", span="1023-1023"];
m83_506 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="return false;", span="1029-1029"];
m83_507 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", span="987-987"];
m83_550 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt32(System.IFormatProvider)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt32(System.IFormatProvider)", span="1128-1128"];
m83_551 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt32(System.IFormatProvider)", file="JValue.cs", label="return (uint)this;", span="1130-1130"];
m83_552 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt32(System.IFormatProvider)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt32(System.IFormatProvider)", span="1128-1128"];
m83_532 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToChar(System.IFormatProvider)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToChar(System.IFormatProvider)", span="1098-1098"];
m83_533 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToChar(System.IFormatProvider)", file="JValue.cs", label="return (char)this;", span="1100-1100"];
m83_534 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToChar(System.IFormatProvider)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToChar(System.IFormatProvider)", span="1098-1098"];
m83_275 [cluster="Newtonsoft.Json.Linq.JValue.CreateString(string)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.CreateString(string)", span="580-580"];
m83_276 [cluster="Newtonsoft.Json.Linq.JValue.CreateString(string)", file="JValue.cs", label="return new JValue(value, JTokenType.String);", span="582-582"];
m83_277 [cluster="Newtonsoft.Json.Linq.JValue.CreateString(string)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.CreateString(string)", span="580-580"];
m83_412 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.Uri)", file="JValue.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.Uri)", span="1378-1378"];
m83_154 [cluster="System.Guid.CompareTo(System.Guid)", file="JValue.cs", label="Entry System.Guid.CompareTo(System.Guid)", span="0-0"];
m83_395 [cluster="Newtonsoft.Json.JsonWriter.WriteRawValue(string)", file="JValue.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteRawValue(string)", span="904-904"];
m83_418 [cluster="int.GetHashCode()", file="JValue.cs", label="Entry int.GetHashCode()", span="0-0"];
m83_402 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(decimal)", file="JValue.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(decimal)", span="1037-1037"];
m83_391 [cluster="Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type)", file="JValue.cs", label="Entry Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type)", span="1159-1159"];
m83_556 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt64(System.IFormatProvider)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt64(System.IFormatProvider)", span="1138-1138"];
m83_557 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt64(System.IFormatProvider)", file="JValue.cs", label="return (ulong)this;", span="1140-1140"];
m83_558 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt64(System.IFormatProvider)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt64(System.IFormatProvider)", span="1138-1138"];
m83_404 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(float)", file="JValue.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(float)", span="963-963"];
m83_520 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.GetTypeCode()", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.GetTypeCode()", span="1076-1076"];
m83_521 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.GetTypeCode()", file="JValue.cs", label="_value == null", span="1078-1078"];
m83_522 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.GetTypeCode()", file="JValue.cs", label="return TypeCode.Empty;", span="1080-1080"];
m83_523 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.GetTypeCode()", file="JValue.cs", label="IConvertible convertable = _value as IConvertible", span="1083-1083"];
m83_524 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.GetTypeCode()", file="JValue.cs", label="convertable == null", span="1085-1085"];
m83_526 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.GetTypeCode()", file="JValue.cs", label="return convertable.GetTypeCode();", span="1090-1090"];
m83_525 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.GetTypeCode()", file="JValue.cs", label="return TypeCode.Object;", span="1087-1087"];
m83_527 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.GetTypeCode()", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.GetTypeCode()", span="1076-1076"];
m83_4 [cluster="Newtonsoft.Json.Linq.JValue.JValue(Newtonsoft.Json.Linq.JValue)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(Newtonsoft.Json.Linq.JValue)", span="62-62"];
m83_5 [cluster="Newtonsoft.Json.Linq.JValue.JValue(Newtonsoft.Json.Linq.JValue)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValue(Newtonsoft.Json.Linq.JValue)", span="62-62"];
m83_268 [cluster="object.ToString()", file="JValue.cs", label="Entry object.ToString()", span="0-0"];
m83_140 [cluster="Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", span="398-398"];
m83_161 [cluster="Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", file="JValue.cs", label="double d1 = Convert.ToDouble(objA, CultureInfo.InvariantCulture)", span="400-400"];
m83_162 [cluster="Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", file="JValue.cs", label="double d2 = Convert.ToDouble(objB, CultureInfo.InvariantCulture)", span="401-401"];
m83_163 [cluster="Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", file="JValue.cs", label="MathUtils.ApproxEquals(d1, d2)", span="404-404"];
m83_165 [cluster="Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", file="JValue.cs", label="return d1.CompareTo(d2);", span="409-409"];
m83_164 [cluster="Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", file="JValue.cs", label="return 0;", span="406-406"];
m83_166 [cluster="Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", span="398-398"];
m83_18 [cluster="Newtonsoft.Json.Linq.JValue.JValue(System.DateTime)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.DateTime)", span="126-126"];
m83_19 [cluster="Newtonsoft.Json.Linq.JValue.JValue(System.DateTime)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValue(System.DateTime)", span="126-126"];
m83_26 [cluster="Newtonsoft.Json.Linq.JValue.JValue(System.Guid)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.Guid)", span="164-164"];
m83_27 [cluster="Newtonsoft.Json.Linq.JValue.JValue(System.Guid)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValue(System.Guid)", span="164-164"];
m83_30 [cluster="Newtonsoft.Json.Linq.JValue.JValue(System.TimeSpan)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.TimeSpan)", span="182-182"];
m83_31 [cluster="Newtonsoft.Json.Linq.JValue.JValue(System.TimeSpan)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValue(System.TimeSpan)", span="182-182"];
m83_142 [cluster="long.CompareTo(long)", file="JValue.cs", label="Entry long.CompareTo(long)", span="0-0"];
m83_562 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDouble(System.IFormatProvider)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDouble(System.IFormatProvider)", span="1148-1148"];
m83_563 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDouble(System.IFormatProvider)", file="JValue.cs", label="return (double)this;", span="1150-1150"];
m83_564 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDouble(System.IFormatProvider)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDouble(System.IFormatProvider)", span="1148-1148"];
m83_421 [cluster="Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)", span="848-848"];
m83_422 [cluster="Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)", file="JValue.cs", label="other == null", span="850-850"];
m83_424 [cluster="Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)", file="JValue.cs", label="return ValuesEquals(this, other);", span="855-855"];
m83_423 [cluster="Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)", file="JValue.cs", label="return false;", span="852-852"];
m83_425 [cluster="Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)", span="848-848"];
m83_147 [cluster="System.Convert.ToDateTime(object, System.IFormatProvider)", file="JValue.cs", label="Entry System.Convert.ToDateTime(object, System.IFormatProvider)", span="0-0"];
m83_559 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSingle(System.IFormatProvider)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSingle(System.IFormatProvider)", span="1143-1143"];
m83_560 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSingle(System.IFormatProvider)", file="JValue.cs", label="return (float)this;", span="1145-1145"];
m83_561 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSingle(System.IFormatProvider)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSingle(System.IFormatProvider)", span="1143-1143"];
m83_61 [cluster="System.Math.Truncate(double)", file="JValue.cs", label="Entry System.Math.Truncate(double)", span="0-0"];
m83_20 [cluster="Newtonsoft.Json.Linq.JValue.JValue(System.DateTimeOffset)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.DateTimeOffset)", span="136-136"];
m83_21 [cluster="Newtonsoft.Json.Linq.JValue.JValue(System.DateTimeOffset)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValue(System.DateTimeOffset)", span="136-136"];
m83_399 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(long)", file="JValue.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(long)", span="944-944"];
m83_400 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(ulong)", file="JValue.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(ulong)", span="954-954"];
m83_547 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt32(System.IFormatProvider)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt32(System.IFormatProvider)", span="1123-1123"];
m83_548 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt32(System.IFormatProvider)", file="JValue.cs", label="return (int)this;", span="1125-1125"];
m83_549 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt32(System.IFormatProvider)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt32(System.IFormatProvider)", span="1123-1123"];
m83_284 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", span="603-603"];
m83_285 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="value == null", span="605-605"];
m83_287 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="value == DBNull.Value", span="610-610"];
m83_289 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="value is string", span="615-615"];
m83_290 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="return GetStringValueType(current);", span="617-617"];
m83_291 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="value is long || value is int || value is short || value is sbyte\r\n                     || value is ulong || value is uint || value is ushort || value is byte", span="619-620"];
m83_293 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="value is Enum", span="624-624"];
m83_295 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="value is BigInteger", span="629-629"];
m83_297 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="value is double || value is float || value is decimal", span="634-634"];
m83_299 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="value is DateTime", span="638-638"];
m83_301 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="value is DateTimeOffset", span="643-643"];
m83_303 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="value is byte[]", span="648-648"];
m83_305 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="value is bool", span="652-652"];
m83_307 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="value is Guid", span="656-656"];
m83_309 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="value is Uri", span="660-660"];
m83_311 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="value is TimeSpan", span="664-664"];
m83_313 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="throw new ArgumentException(''Could not determine JSON object type for type {0}.''.FormatWith(CultureInfo.InvariantCulture, value.GetType()));", span="669-669"];
m83_286 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="return JTokenType.Null;", span="607-607"];
m83_288 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="return JTokenType.Null;", span="612-612"];
m83_292 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="return JTokenType.Integer;", span="622-622"];
m83_294 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="return JTokenType.Integer;", span="626-626"];
m83_296 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="return JTokenType.Integer;", span="631-631"];
m83_298 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="return JTokenType.Float;", span="636-636"];
m83_300 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="return JTokenType.Date;", span="640-640"];
m83_302 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="return JTokenType.Date;", span="645-645"];
m83_304 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="return JTokenType.Bytes;", span="650-650"];
m83_306 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="return JTokenType.Boolean;", span="654-654"];
m83_308 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="return JTokenType.Guid;", span="658-658"];
m83_310 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="return JTokenType.Uri;", span="662-662"];
m83_312 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="return JTokenType.TimeSpan;", span="666-666"];
m83_314 [cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", span="603-603"];
m83_64 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", span="249-249"];
m83_65 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="objA == objB", span="251-251"];
m83_67 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="objB == null", span="255-255"];
m83_69 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="objA == null", span="259-259"];
m83_71 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label=valueType, span="264-264"];
m83_73 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="objA is BigInteger", span="268-268"];
m83_74 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="return CompareBigInteger((BigInteger)objA, objB);", span="270-270"];
m83_75 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="objB is BigInteger", span="272-272"];
m83_76 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="return -CompareBigInteger((BigInteger)objB, objA);", span="274-274"];
m83_77 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="objA is ulong || objB is ulong || objA is decimal || objB is decimal", span="277-277"];
m83_78 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="return Convert.ToDecimal(objA, CultureInfo.InvariantCulture).CompareTo(Convert.ToDecimal(objB, CultureInfo.InvariantCulture));", span="279-279"];
m83_79 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="objA is float || objB is float || objA is double || objB is double", span="281-281"];
m83_80 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="return CompareFloat(objA, objB);", span="283-283"];
m83_81 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="return Convert.ToInt64(objA, CultureInfo.InvariantCulture).CompareTo(Convert.ToInt64(objB, CultureInfo.InvariantCulture));", span="287-287"];
m83_83 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="objA is BigInteger", span="291-291"];
m83_84 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="return CompareBigInteger((BigInteger)objA, objB);", span="293-293"];
m83_85 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="objB is BigInteger", span="295-295"];
m83_86 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="return -CompareBigInteger((BigInteger)objB, objA);", span="297-297"];
m83_87 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="return CompareFloat(objA, objB);", span="300-300"];
m83_91 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="string s1 = Convert.ToString(objA, CultureInfo.InvariantCulture)", span="304-304"];
m83_92 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="string s2 = Convert.ToString(objB, CultureInfo.InvariantCulture)", span="305-305"];
m83_95 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="bool b1 = Convert.ToBoolean(objA, CultureInfo.InvariantCulture)", span="309-309"];
m83_96 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="bool b2 = Convert.ToBoolean(objB, CultureInfo.InvariantCulture)", span="310-310"];
m83_99 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="objA is DateTime", span="315-315"];
m83_100 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="DateTime date1 = (DateTime)objA", span="318-318"];
m83_102 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="objB is DateTimeOffset", span="322-322"];
m83_103 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="date2 = ((DateTimeOffset)objB).DateTime", span="324-324"];
m83_104 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="date2 = Convert.ToDateTime(objB, CultureInfo.InvariantCulture)", span="329-329"];
m83_106 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="DateTimeOffset date1 = (DateTimeOffset)objA", span="337-337"];
m83_108 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="objB is DateTimeOffset", span="340-340"];
m83_109 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="date2 = (DateTimeOffset)objB", span="342-342"];
m83_110 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="date2 = new DateTimeOffset(Convert.ToDateTime(objB, CultureInfo.InvariantCulture))", span="346-346"];
m83_113 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="byte[] bytes2 = objB as byte[]", span="353-353"];
m83_116 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="byte[] bytes1 = objA as byte[]", span="359-359"];
m83_120 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="!(objB is Guid)", span="364-364"];
m83_122 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="Guid guid1 = (Guid)objA", span="369-369"];
m83_123 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="Guid guid2 = (Guid)objB", span="370-370"];
m83_126 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="Uri uri2 = objB as Uri", span="374-374"];
m83_129 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="Uri uri1 = (Uri)objA", span="380-380"];
m83_132 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="!(objB is TimeSpan)", span="384-384"];
m83_134 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="TimeSpan ts1 = (TimeSpan)objA", span="389-389"];
m83_135 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="TimeSpan ts2 = (TimeSpan)objB", span="390-390"];
m83_137 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="throw MiscellaneousUtils.CreateArgumentOutOfRangeException(nameof(valueType), valueType, ''Unexpected value type: {0}''.FormatWith(CultureInfo.InvariantCulture, valueType));", span="394-394"];
m83_66 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="return 0;", span="253-253"];
m83_68 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="return 1;", span="257-257"];
m83_70 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="return -1;", span="261-261"];
m83_72 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", color=green, community=0, file="JValue.cs", label="JTokenType.Integer", prediction=25, span="266-266"];
m83_82 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", color=green, community=0, file="JValue.cs", label="JTokenType.Float", prediction=26, span="289-289"];
m83_88 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="JTokenType.Comment", span="301-301"];
m83_94 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="JTokenType.Boolean", span="308-308"];
m83_98 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", color=green, community=0, file="JValue.cs", label="JTokenType.Date", prediction=27, span="313-313"];
m83_112 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="JTokenType.Bytes", span="352-352"];
m83_119 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="JTokenType.Guid", span="363-363"];
m83_125 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="JTokenType.Uri", span="373-373"];
m83_131 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="JTokenType.TimeSpan", span="383-383"];
m83_89 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="JTokenType.String", span="302-302"];
m83_90 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="JTokenType.Raw", span="303-303"];
m83_93 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="return string.CompareOrdinal(s1, s2);", span="307-307"];
m83_97 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="return b1.CompareTo(b2);", span="312-312"];
m83_101 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="DateTime date2", span="319-319"];
m83_105 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", color=green, community=0, file="JValue.cs", label="return date1.CompareTo(date2);", prediction=28, span="332-332"];
m83_107 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="DateTimeOffset date2", span="338-338"];
m83_111 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="return date1.CompareTo(date2);", span="349-349"];
m83_114 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="bytes2 == null", span="354-354"];
m83_118 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="return MiscellaneousUtils.ByteArrayCompare(bytes1, bytes2);", span="362-362"];
m83_115 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="throw new ArgumentException(''Object must be of type byte[].'');", span="356-356"];
m83_117 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="Debug.Assert(bytes1 != null)", span="360-360"];
m83_121 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="throw new ArgumentException(''Object must be of type Guid.'');", span="366-366"];
m83_124 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="return guid1.CompareTo(guid2);", span="372-372"];
m83_127 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="uri2 == null", span="375-375"];
m83_130 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="return Comparer<string>.Default.Compare(uri1.ToString(), uri2.ToString());", span="382-382"];
m83_128 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="throw new ArgumentException(''Object must be of type Uri.'');", span="377-377"];
m83_133 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="throw new ArgumentException(''Object must be of type TimeSpan.'');", span="386-386"];
m83_136 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="return ts1.CompareTo(ts2);", span="392-392"];
m83_138 [cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", span="249-249"];
m83_453 [cluster="System.IFormattable.ToString(string, System.IFormatProvider)", file="JValue.cs", label="Entry System.IFormattable.ToString(string, System.IFormatProvider)", span="0-0"];
m83_141 [cluster="System.Convert.ToInt64(object, System.IFormatProvider)", file="JValue.cs", label="Entry System.Convert.ToInt64(object, System.IFormatProvider)", span="0-0"];
m83_442 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", span="934-934"];
m83_446 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", file="JValue.cs", label="_value == null", span="936-936"];
m83_450 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", file="JValue.cs", label="return formattable.ToString(format, formatProvider);", span="944-944"];
m83_447 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", file="JValue.cs", label="return string.Empty;", span="938-938"];
m83_448 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", file="JValue.cs", label="IFormattable formattable = _value as IFormattable", span="941-941"];
m83_449 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", file="JValue.cs", label="formattable != null", span="942-942"];
m83_451 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", file="JValue.cs", label="return _value.ToString();", span="948-948"];
m83_452 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", span="934-934"];
m83_565 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDecimal(System.IFormatProvider)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDecimal(System.IFormatProvider)", span="1153-1153"];
m83_566 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDecimal(System.IFormatProvider)", file="JValue.cs", label="return (decimal)this;", span="1155-1155"];
m83_567 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDecimal(System.IFormatProvider)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDecimal(System.IFormatProvider)", span="1153-1153"];
m83_12 [cluster="Newtonsoft.Json.Linq.JValue.JValue(ulong)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(ulong)", span="99-99"];
m83_13 [cluster="Newtonsoft.Json.Linq.JValue.JValue(ulong)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValue(ulong)", span="99-99"];
m83_315 [cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", span="672-672"];
m83_317 [cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="JValue.cs", label="current == null", span="674-674"];
m83_319 [cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="JValue.cs", label="current.GetValueOrDefault()", span="679-679"];
m83_323 [cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="JValue.cs", label="return current.GetValueOrDefault();", span="684-684"];
m83_318 [cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="JValue.cs", label="return JTokenType.String;", span="676-676"];
m83_320 [cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="JValue.cs", label="JTokenType.Comment", span="681-681"];
m83_324 [cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="JValue.cs", label="return JTokenType.String;", span="686-686"];
m83_321 [cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="JValue.cs", label="JTokenType.String", span="682-682"];
m83_322 [cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="JValue.cs", label="JTokenType.Raw", span="683-683"];
m83_325 [cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", span="672-672"];
m83_407 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTimeOffset)", file="JValue.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.DateTimeOffset)", span="1056-1056"];
m83_157 [cluster="System.TimeSpan.CompareTo(System.TimeSpan)", file="JValue.cs", label="Entry System.TimeSpan.CompareTo(System.TimeSpan)", span="0-0"];
m83_149 [cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime)", file="JValue.cs", label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime)", span="0-0"];
m83_60 [cluster="System.Convert.ToDouble(object, System.IFormatProvider)", file="JValue.cs", label="Entry System.Convert.ToDouble(object, System.IFormatProvider)", span="0-0"];
m83_429 [cluster="Newtonsoft.Json.Linq.JValue.GetHashCode()", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.GetHashCode()", span="876-876"];
m83_430 [cluster="Newtonsoft.Json.Linq.JValue.GetHashCode()", file="JValue.cs", label="_value == null", span="878-878"];
m83_431 [cluster="Newtonsoft.Json.Linq.JValue.GetHashCode()", file="JValue.cs", label="return 0;", span="880-880"];
m83_432 [cluster="Newtonsoft.Json.Linq.JValue.GetHashCode()", file="JValue.cs", label="return _value.GetHashCode();", span="883-883"];
m83_433 [cluster="Newtonsoft.Json.Linq.JValue.GetHashCode()", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.GetHashCode()", span="876-876"];
m83_153 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.ByteArrayCompare(byte[], byte[])", file="JValue.cs", label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.ByteArrayCompare(byte[], byte[])", span="88-88"];
m83_148 [cluster="System.DateTime.CompareTo(System.DateTime)", file="JValue.cs", label="Entry System.DateTime.CompareTo(System.DateTime)", span="0-0"];
m83_158 [cluster="Unk.nameof", file="JValue.cs", label="Entry Unk.nameof", span=""];
m83_42 [cluster="Newtonsoft.Json.Linq.JValue.ValuesEquals(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.ValuesEquals(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", span="836-836"];
m83_419 [cluster="Newtonsoft.Json.Linq.JValue.ValuesEquals(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="JValue.cs", label="return (v1 == v2 || (v1._valueType == v2._valueType && Compare(v1._valueType, v1._value, v2._value) == 0));", span="838-838"];
m83_420 [cluster="Newtonsoft.Json.Linq.JValue.ValuesEquals(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.ValuesEquals(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", span="836-836"];
m83_454 [cluster="Newtonsoft.Json.Linq.JValue.GetMetaObject(System.Linq.Expressions.Expression)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.GetMetaObject(System.Linq.Expressions.Expression)", span="960-960"];
m83_455 [cluster="Newtonsoft.Json.Linq.JValue.GetMetaObject(System.Linq.Expressions.Expression)", file="JValue.cs", label="return new DynamicProxyMetaObject<JValue>(parameter, this, new JValueDynamicProxy());", span="962-962"];
m83_456 [cluster="Newtonsoft.Json.Linq.JValue.GetMetaObject(System.Linq.Expressions.Expression)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.GetMetaObject(System.Linq.Expressions.Expression)", span="960-960"];
m83_16 [cluster="Newtonsoft.Json.Linq.JValue.JValue(float)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(float)", span="117-117"];
m83_17 [cluster="Newtonsoft.Json.Linq.JValue.JValue(float)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValue(float)", span="117-117"];
m83_145 [cluster="System.Convert.ToBoolean(object, System.IFormatProvider)", file="JValue.cs", label="Entry System.Convert.ToBoolean(object, System.IFormatProvider)", span="0-0"];
m83_155 [cluster="System.Uri.ToString()", file="JValue.cs", label="Entry System.Uri.ToString()", span="0-0"];
m83_568 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDateTime(System.IFormatProvider)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDateTime(System.IFormatProvider)", span="1158-1158"];
m83_569 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDateTime(System.IFormatProvider)", file="JValue.cs", label="return (DateTime)this;", span="1160-1160"];
m83_570 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDateTime(System.IFormatProvider)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToDateTime(System.IFormatProvider)", span="1158-1158"];
m83_146 [cluster="bool.CompareTo(bool)", file="JValue.cs", label="Entry bool.CompareTo(bool)", span="0-0"];
m83_396 [cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="JValue.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="878-878"];
m83_401 [cluster="Unk.WriteValue", file="JValue.cs", label="Entry Unk.WriteValue", span=""];
m83_457 [cluster="Newtonsoft.Json.Utilities.DynamicProxyMetaObject<T>.DynamicProxyMetaObject(System.Linq.Expressions.Expression, T, Newtonsoft.Json.Utilities.DynamicProxy<T>)", file="JValue.cs", label="Entry Newtonsoft.Json.Utilities.DynamicProxyMetaObject<T>.DynamicProxyMetaObject(System.Linq.Expressions.Expression, T, Newtonsoft.Json.Utilities.DynamicProxy<T>)", span="38-38"];
m83_56 [cluster="Unk.CompareTo", file="JValue.cs", label="Entry Unk.CompareTo", span=""];
m83_152 [cluster="System.Diagnostics.Debug.Assert(bool)", file="JValue.cs", label="Entry System.Diagnostics.Debug.Assert(bool)", span="0-0"];
m83_406 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool)", file="JValue.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(bool)", span="981-981"];
m83_6 [cluster="Newtonsoft.Json.Linq.JValue.JValue(long)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(long)", span="71-71"];
m83_7 [cluster="Newtonsoft.Json.Linq.JValue.JValue(long)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValue(long)", span="71-71"];
m83_159 [cluster="string.FormatWith(System.IFormatProvider, object)", file="JValue.cs", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
m83_544 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt16(System.IFormatProvider)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt16(System.IFormatProvider)", span="1118-1118"];
m83_545 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt16(System.IFormatProvider)", file="JValue.cs", label="return (ushort)this;", span="1120-1120"];
m83_546 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt16(System.IFormatProvider)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToUInt16(System.IFormatProvider)", span="1118-1118"];
m83_529 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToBoolean(System.IFormatProvider)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToBoolean(System.IFormatProvider)", span="1093-1093"];
m83_530 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToBoolean(System.IFormatProvider)", file="JValue.cs", label="return (bool)this;", span="1095-1095"];
m83_531 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToBoolean(System.IFormatProvider)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToBoolean(System.IFormatProvider)", span="1093-1093"];
m83_458 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.JValueDynamicProxy()", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.JValueDynamicProxy()", span="965-965"];
m83_32 [cluster="Newtonsoft.Json.Linq.JValue.JValue(object)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(object)", span="191-191"];
m83_33 [cluster="Newtonsoft.Json.Linq.JValue.JValue(object)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValue(object)", span="191-191"];
m83_168 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", span="413-413"];
m83_169 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="objA is string || objB is string", span="415-415"];
m83_170 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="operation == ExpressionType.Add || operation == ExpressionType.AddAssign", span="417-417"];
m83_171 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="result = objA?.ToString() + objB?.ToString()", span="419-419"];
m83_173 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="objA is BigInteger || objB is BigInteger", span="425-425"];
m83_174 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="objA == null || objB == null", span="427-427"];
m83_177 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="BigInteger i1 = ConvertUtils.ToBigInteger(objA)", span="435-435"];
m83_178 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="BigInteger i2 = ConvertUtils.ToBigInteger(objB)", span="436-436"];
m83_179 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label=operation, span="438-438"];
m83_196 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="objA is ulong || objB is ulong || objA is decimal || objB is decimal", span="460-460"];
m83_197 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="objA == null || objB == null", span="462-462"];
m83_200 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="decimal d1 = Convert.ToDecimal(objA, CultureInfo.InvariantCulture)", span="468-468"];
m83_201 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="decimal d2 = Convert.ToDecimal(objB, CultureInfo.InvariantCulture)", span="469-469"];
m83_202 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label=operation, span="471-471"];
m83_219 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="objA is float || objB is float || objA is double || objB is double", span="491-491"];
m83_220 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="objA == null || objB == null", span="493-493"];
m83_223 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="double d1 = Convert.ToDouble(objA, CultureInfo.InvariantCulture)", span="499-499"];
m83_224 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="double d2 = Convert.ToDouble(objB, CultureInfo.InvariantCulture)", span="500-500"];
m83_225 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label=operation, span="502-502"];
m83_242 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="objA is int || objA is uint || objA is long || objA is short || objA is ushort || objA is sbyte || objA is byte ||\r\n                         objB is int || objB is uint || objB is long || objB is short || objB is ushort || objB is sbyte || objB is byte", span="522-523"];
m83_243 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="objA == null || objB == null", span="525-525"];
m83_246 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="long l1 = Convert.ToInt64(objA, CultureInfo.InvariantCulture)", span="531-531"];
m83_247 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="long l2 = Convert.ToInt64(objB, CultureInfo.InvariantCulture)", span="532-532"];
m83_248 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label=operation, span="534-534"];
m83_172 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="return true;", span="420-420"];
m83_175 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="result = null", span="429-429"];
m83_176 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="return true;", span="430-430"];
m83_182 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="result = i1 + i2", span="442-442"];
m83_186 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="result = i1 - i2", span="446-446"];
m83_190 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="result = i1 * i2", span="450-450"];
m83_194 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="result = i1 / i2", span="454-454"];
m83_180 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.Add", span="440-440"];
m83_184 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.Subtract", span="444-444"];
m83_188 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.Multiply", span="448-448"];
m83_192 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.Divide", span="452-452"];
m83_181 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.AddAssign", span="441-441"];
m83_183 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="return true;", span="443-443"];
m83_185 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.SubtractAssign", span="445-445"];
m83_187 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="return true;", span="447-447"];
m83_189 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.MultiplyAssign", span="449-449"];
m83_191 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="return true;", span="451-451"];
m83_193 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.DivideAssign", span="453-453"];
m83_195 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="return true;", span="455-455"];
m83_198 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="result = null", span="464-464"];
m83_199 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="return true;", span="465-465"];
m83_205 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="result = d1 + d2", span="475-475"];
m83_209 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="result = d1 - d2", span="479-479"];
m83_213 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="result = d1 * d2", span="483-483"];
m83_217 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="result = d1 / d2", span="487-487"];
m83_203 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.Add", span="473-473"];
m83_207 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.Subtract", span="477-477"];
m83_211 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.Multiply", span="481-481"];
m83_215 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.Divide", span="485-485"];
m83_204 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.AddAssign", span="474-474"];
m83_206 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="return true;", span="476-476"];
m83_208 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.SubtractAssign", span="478-478"];
m83_210 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="return true;", span="480-480"];
m83_212 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.MultiplyAssign", span="482-482"];
m83_214 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="return true;", span="484-484"];
m83_216 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.DivideAssign", span="486-486"];
m83_218 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="return true;", span="488-488"];
m83_221 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="result = null", span="495-495"];
m83_222 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="return true;", span="496-496"];
m83_228 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="result = d1 + d2", span="506-506"];
m83_232 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="result = d1 - d2", span="510-510"];
m83_236 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="result = d1 * d2", span="514-514"];
m83_240 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="result = d1 / d2", span="518-518"];
m83_226 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.Add", span="504-504"];
m83_230 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.Subtract", span="508-508"];
m83_234 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.Multiply", span="512-512"];
m83_238 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.Divide", span="516-516"];
m83_227 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.AddAssign", span="505-505"];
m83_229 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="return true;", span="507-507"];
m83_231 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.SubtractAssign", span="509-509"];
m83_233 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="return true;", span="511-511"];
m83_235 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.MultiplyAssign", span="513-513"];
m83_237 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="return true;", span="515-515"];
m83_239 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.DivideAssign", span="517-517"];
m83_241 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="return true;", span="519-519"];
m83_265 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="result = null", span="555-555"];
m83_244 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="result = null", span="527-527"];
m83_245 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="return true;", span="528-528"];
m83_251 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="result = l1 + l2", span="538-538"];
m83_255 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="result = l1 - l2", span="542-542"];
m83_259 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="result = l1 * l2", span="546-546"];
m83_263 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="result = l1 / l2", span="550-550"];
m83_249 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.Add", span="536-536"];
m83_253 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.Subtract", span="540-540"];
m83_257 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.Multiply", span="544-544"];
m83_261 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.Divide", span="548-548"];
m83_250 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.AddAssign", span="537-537"];
m83_252 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="return true;", span="539-539"];
m83_254 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.SubtractAssign", span="541-541"];
m83_256 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="return true;", span="543-543"];
m83_258 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.MultiplyAssign", span="545-545"];
m83_260 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="return true;", span="547-547"];
m83_262 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="ExpressionType.DivideAssign", span="549-549"];
m83_264 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="return true;", span="551-551"];
m83_266 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="return false;", span="556-556"];
m83_267 [cluster="Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.Operation(System.Linq.Expressions.ExpressionType, object, object, out object)", span="413-413"];
m83_55 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", file="JValue.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", span="314-314"];
m83_393 [cluster="Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JValue.cs", label="Entry Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="44-44"];
m83_574 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", span="1942-1942"];
m83_57 [cluster="System.Math.Truncate(decimal)", file="JValue.cs", label="Entry System.Math.Truncate(decimal)", span="0-0"];
m83_151 [cluster="System.ArgumentException.ArgumentException(string)", file="JValue.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m83_269 [cluster="Newtonsoft.Json.Linq.JValue.CloneToken()", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.CloneToken()", span="560-560"];
m83_270 [cluster="Newtonsoft.Json.Linq.JValue.CloneToken()", file="JValue.cs", label="return new JValue(this);", span="562-562"];
m83_271 [cluster="Newtonsoft.Json.Linq.JValue.CloneToken()", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.CloneToken()", span="560-560"];
m83_392 [cluster="Newtonsoft.Json.JsonSerializer.CreateDefault()", file="JValue.cs", label="Entry Newtonsoft.Json.JsonSerializer.CreateDefault()", span="596-596"];
m83_160 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.CreateArgumentOutOfRangeException(string, object, string)", file="JValue.cs", label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.CreateArgumentOutOfRangeException(string, object, string)", span="71-71"];
m83_459 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", span="967-967"];
m83_460 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="JValue.cs", label="binder.Type == typeof(JValue) || binder.Type == typeof(JToken)", span="969-969"];
m83_461 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="JValue.cs", label="result = instance", span="971-971"];
m83_463 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="JValue.cs", label="object value = instance.Value", span="975-975"];
m83_466 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="JValue.cs", label="return ReflectionUtils.IsNullable(binder.Type);", span="980-980"];
m83_467 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="JValue.cs", label="result = ConvertUtils.Convert(value, CultureInfo.InvariantCulture, binder.Type)", span="983-983"];
m83_462 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="JValue.cs", label="return true;", span="972-972"];
m83_464 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="JValue.cs", label="value == null", span="977-977"];
m83_465 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="JValue.cs", label="result = null", span="979-979"];
m83_468 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="JValue.cs", label="return true;", span="984-984"];
m83_469 [cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", span="967-967"];
m83_24 [cluster="Newtonsoft.Json.Linq.JValue.JValue(string)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(string)", span="155-155"];
m83_25 [cluster="Newtonsoft.Json.Linq.JValue.JValue(string)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValue(string)", span="155-155"];
m83_535 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSByte(System.IFormatProvider)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSByte(System.IFormatProvider)", span="1103-1103"];
m83_536 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSByte(System.IFormatProvider)", file="JValue.cs", label="return (sbyte)this;", span="1105-1105"];
m83_537 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSByte(System.IFormatProvider)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToSByte(System.IFormatProvider)", span="1103-1103"];
m83_394 [cluster="Newtonsoft.Json.JsonWriter.WriteComment(string)", file="JValue.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteComment(string)", span="1421-1421"];
m83_397 [cluster="Newtonsoft.Json.JsonWriter.WriteUndefined()", file="JValue.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteUndefined()", span="886-886"];
m83_405 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="JValue.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="916-916"];
m83_409 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(byte[])", file="JValue.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(byte[])", span="1362-1362"];
m83_28 [cluster="Newtonsoft.Json.Linq.JValue.JValue(System.Uri)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.Uri)", span="173-173"];
m83_29 [cluster="Newtonsoft.Json.Linq.JValue.JValue(System.Uri)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValue(System.Uri)", span="173-173"];
m83_408 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime)", file="JValue.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime)", span="1046-1046"];
m83_439 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.ToString(string)", span="909-909"];
m83_440 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string)", file="JValue.cs", label="return ToString(format, CultureInfo.CurrentCulture);", span="911-911"];
m83_441 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.ToString(string)", span="909-909"];
m83_553 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt64(System.IFormatProvider)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt64(System.IFormatProvider)", span="1133-1133"];
m83_554 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt64(System.IFormatProvider)", file="JValue.cs", label="return (long)this;", span="1135-1135"];
m83_555 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt64(System.IFormatProvider)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt64(System.IFormatProvider)", span="1133-1133"];
m83_327 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="725-725"];
m83_328 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="converters != null && converters.Length > 0 && _value != null", span="727-727"];
m83_329 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="JsonConverter matchingConverter = JsonSerializer.GetMatchingConverter(converters, _value.GetType())", span="729-729"];
m83_331 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="matchingConverter.WriteJson(writer, _value, JsonSerializer.CreateDefault())", span="732-732"];
m83_335 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="writer.WriteComment(_value?.ToString())", span="740-740"];
m83_338 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="writer.WriteRawValue(_value?.ToString())", span="743-743"];
m83_341 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="writer.WriteNull()", span="746-746"];
m83_344 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="writer.WriteUndefined()", span="749-749"];
m83_348 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="writer.WriteValue((int)_value)", span="754-754"];
m83_350 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="writer.WriteValue((long)_value)", span="758-758"];
m83_352 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="writer.WriteValue((ulong)_value)", span="762-762"];
m83_354 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="writer.WriteValue((BigInteger)_value)", span="767-767"];
m83_355 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="writer.WriteValue(Convert.ToInt64(_value, CultureInfo.InvariantCulture))", span="772-772"];
m83_359 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="writer.WriteValue((decimal)_value)", span="778-778"];
m83_361 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="writer.WriteValue((double)_value)", span="782-782"];
m83_363 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="writer.WriteValue((float)_value)", span="786-786"];
m83_364 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="writer.WriteValue(Convert.ToDouble(_value, CultureInfo.InvariantCulture))", span="790-790"];
m83_367 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="writer.WriteValue(_value?.ToString())", span="794-794"];
m83_370 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="writer.WriteValue(Convert.ToBoolean(_value, CultureInfo.InvariantCulture))", span="797-797"];
m83_374 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="writer.WriteValue((DateTimeOffset)_value)", span="803-803"];
m83_375 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="writer.WriteValue(Convert.ToDateTime(_value, CultureInfo.InvariantCulture))", span="808-808"];
m83_378 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="writer.WriteValue((byte[])_value)", span="812-812"];
m83_381 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="writer.WriteValue((_value != null) ? (Guid?)_value : null)", span="815-815"];
m83_384 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="writer.WriteValue((_value != null) ? (TimeSpan?)_value : null)", span="818-818"];
m83_387 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="writer.WriteValue((Uri)_value)", span="821-821"];
m83_333 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label=_valueType, span="737-737"];
m83_330 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="matchingConverter != null && matchingConverter.CanWrite", span="730-730"];
m83_332 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="return;", span="733-733"];
m83_334 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="JTokenType.Comment", span="739-739"];
m83_337 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="JTokenType.Raw", span="742-742"];
m83_340 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="JTokenType.Null", span="745-745"];
m83_343 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="JTokenType.Undefined", span="748-748"];
m83_346 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="JTokenType.Integer", span="751-751"];
m83_357 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="JTokenType.Float", span="775-775"];
m83_366 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="JTokenType.String", span="793-793"];
m83_369 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="JTokenType.Boolean", span="796-796"];
m83_372 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", color=green, community=0, file="JValue.cs", label="JTokenType.Date", prediction=29, span="799-799"];
m83_377 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="JTokenType.Bytes", span="811-811"];
m83_380 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="JTokenType.Guid", span="814-814"];
m83_383 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="JTokenType.TimeSpan", span="817-817"];
m83_386 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="JTokenType.Uri", span="820-820"];
m83_336 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="return;", span="741-741"];
m83_339 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="return;", span="744-744"];
m83_342 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="return;", span="747-747"];
m83_345 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="return;", span="750-750"];
m83_347 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="_value is int", span="752-752"];
m83_349 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="_value is long", span="756-756"];
m83_351 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="_value is ulong", span="760-760"];
m83_353 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="_value is BigInteger", span="765-765"];
m83_356 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="return;", span="774-774"];
m83_358 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="_value is decimal", span="776-776"];
m83_360 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="_value is double", span="780-780"];
m83_362 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="_value is float", span="784-784"];
m83_365 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="return;", span="792-792"];
m83_368 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="return;", span="795-795"];
m83_371 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="return;", span="798-798"];
m83_373 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="_value is DateTimeOffset", span="801-801"];
m83_376 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="return;", span="810-810"];
m83_379 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="return;", span="813-813"];
m83_382 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="return;", span="816-816"];
m83_385 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="return;", span="819-819"];
m83_388 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="return;", span="822-822"];
m83_390 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="throw MiscellaneousUtils.CreateArgumentOutOfRangeException(nameof(Type), _valueType, ''Unexpected token type.'');", span="825-825"];
m83_389 [cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="725-725"];
m83_470 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", file="JValue.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", span="255-255"];
m83_22 [cluster="Newtonsoft.Json.Linq.JValue.JValue(bool)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(bool)", span="146-146"];
m83_23 [cluster="Newtonsoft.Json.Linq.JValue.JValue(bool)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValue(bool)", span="146-146"];
m83_528 [cluster="System.IConvertible.GetTypeCode()", file="JValue.cs", label="Entry System.IConvertible.GetTypeCode()", span="0-0"];
m83_62 [cluster="System.Math.Abs(double)", file="JValue.cs", label="Entry System.Math.Abs(double)", span="0-0"];
m83_316 [cluster="object.GetType()", file="JValue.cs", label="Entry object.GetType()", span="0-0"];
m83_43 [cluster="Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", span="223-223"];
m83_44 [cluster="Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", file="JValue.cs", label="int result = i1.CompareTo(ConvertUtils.ToBigInteger(i2))", span="225-225"];
m83_47 [cluster="Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", file="JValue.cs", label="i2 is decimal", span="234-234"];
m83_48 [cluster="Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", file="JValue.cs", label="decimal d = (decimal)i2", span="236-236"];
m83_50 [cluster="Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", file="JValue.cs", label="i2 is double || i2 is float", span="239-239"];
m83_51 [cluster="Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", file="JValue.cs", label="double d = Convert.ToDouble(i2, CultureInfo.InvariantCulture)", span="241-241"];
m83_45 [cluster="Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", file="JValue.cs", label="result != 0", span="227-227"];
m83_46 [cluster="Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", file="JValue.cs", label="return result;", span="229-229"];
m83_53 [cluster="Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", file="JValue.cs", label="return result;", span="245-245"];
m83_49 [cluster="Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", file="JValue.cs", label="return (0m).CompareTo(Math.Abs(d - Math.Truncate(d)));", span="237-237"];
m83_52 [cluster="Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", file="JValue.cs", label="return (0d).CompareTo(Math.Abs(d - Math.Truncate(d)));", span="242-242"];
m83_54 [cluster="Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.CompareBigInteger(BigInteger, object)", span="223-223"];
m83_411 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.TimeSpan?)", file="JValue.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.TimeSpan?)", span="1346-1346"];
m83_10 [cluster="Newtonsoft.Json.Linq.JValue.JValue(char)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(char)", span="89-89"];
m83_11 [cluster="Newtonsoft.Json.Linq.JValue.JValue(char)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValue(char)", span="89-89"];
m83_167 [cluster="Newtonsoft.Json.Utilities.MathUtils.ApproxEquals(double, double)", file="JValue.cs", label="Entry Newtonsoft.Json.Utilities.MathUtils.ApproxEquals(double, double)", span="171-171"];
m83_63 [cluster="double.CompareTo(double)", file="JValue.cs", label="Entry double.CompareTo(double)", span="0-0"];
m83_144 [cluster="string.CompareOrdinal(string, string)", file="JValue.cs", label="Entry string.CompareOrdinal(string, string)", span="0-0"];
m83_410 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.Guid?)", file="JValue.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.Guid?)", span="1330-1330"];
m83_14 [cluster="Newtonsoft.Json.Linq.JValue.JValue(double)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(double)", span="108-108"];
m83_15 [cluster="Newtonsoft.Json.Linq.JValue.JValue(double)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValue(double)", span="108-108"];
m83_326 [cluster="System.Nullable<T>.GetValueOrDefault()", file="JValue.cs", label="Entry System.Nullable<T>.GetValueOrDefault()", span="0-0"];
m83_58 [cluster="System.Math.Abs(decimal)", file="JValue.cs", label="Entry System.Math.Abs(decimal)", span="0-0"];
m83_0 [cluster="Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", span="52-52"];
m83_1 [cluster="Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", file="JValue.cs", label="_value = value", span="54-54"];
m83_2 [cluster="Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", file="JValue.cs", label="_valueType = type", span="55-55"];
m83_3 [cluster="Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", span="52-52"];
m83_143 [cluster="System.Convert.ToString(object, System.IFormatProvider)", file="JValue.cs", label="Entry System.Convert.ToString(object, System.IFormatProvider)", span="0-0"];
m83_417 [cluster="object.GetHashCode()", file="JValue.cs", label="Entry object.GetHashCode()", span="0-0"];
m83_541 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt16(System.IFormatProvider)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt16(System.IFormatProvider)", span="1113-1113"];
m83_542 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt16(System.IFormatProvider)", file="JValue.cs", label="return (short)this;", span="1115-1115"];
m83_543 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt16(System.IFormatProvider)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToInt16(System.IFormatProvider)", span="1113-1113"];
m83_272 [cluster="Newtonsoft.Json.Linq.JValue.CreateComment(string)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.CreateComment(string)", span="570-570"];
m83_273 [cluster="Newtonsoft.Json.Linq.JValue.CreateComment(string)", file="JValue.cs", label="return new JValue(value, JTokenType.Comment);", span="572-572"];
m83_274 [cluster="Newtonsoft.Json.Linq.JValue.CreateComment(string)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.CreateComment(string)", span="570-570"];
m83_443 [cluster="Newtonsoft.Json.Linq.JValue.ToString(System.IFormatProvider)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.ToString(System.IFormatProvider)", span="921-921"];
m83_444 [cluster="Newtonsoft.Json.Linq.JValue.ToString(System.IFormatProvider)", file="JValue.cs", label="return ToString(null, formatProvider);", span="923-923"];
m83_445 [cluster="Newtonsoft.Json.Linq.JValue.ToString(System.IFormatProvider)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.ToString(System.IFormatProvider)", span="921-921"];
m83_413 [cluster="Newtonsoft.Json.Linq.JValue.GetDeepHashCode()", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.GetDeepHashCode()", span="828-828"];
m83_414 [cluster="Newtonsoft.Json.Linq.JValue.GetDeepHashCode()", file="JValue.cs", label="int valueHashCode = (_value != null) ? _value.GetHashCode() : 0", span="830-830"];
m83_415 [cluster="Newtonsoft.Json.Linq.JValue.GetDeepHashCode()", file="JValue.cs", label="return ((int)_valueType).GetHashCode() ^ valueHashCode;", span="833-833"];
m83_416 [cluster="Newtonsoft.Json.Linq.JValue.GetDeepHashCode()", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.GetDeepHashCode()", span="828-828"];
m83_571 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToType(System.Type, System.IFormatProvider)", span="1163-1163"];
m83_572 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JValue.cs", label="return ToObject(conversionType);", span="1165-1165"];
m83_573 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToType(System.Type, System.IFormatProvider)", span="1163-1163"];
m83_538 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToByte(System.IFormatProvider)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IConvertible.ToByte(System.IFormatProvider)", span="1108-1108"];
m83_539 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToByte(System.IFormatProvider)", file="JValue.cs", label="return (byte)this;", span="1110-1110"];
m83_540 [cluster="Newtonsoft.Json.Linq.JValue.System.IConvertible.ToByte(System.IFormatProvider)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IConvertible.ToByte(System.IFormatProvider)", span="1108-1108"];
m83_156 [cluster="System.Collections.Generic.Comparer<T>.Compare(T, T)", file="JValue.cs", label="Entry System.Collections.Generic.Comparer<T>.Compare(T, T)", span="0-0"];
m83_515 [cluster="Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", span="1065-1065"];
m83_516 [cluster="Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", file="JValue.cs", label="obj == null", span="1067-1067"];
m83_518 [cluster="Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", file="JValue.cs", label="return Compare(_valueType, _value, obj._value);", span="1072-1072"];
m83_517 [cluster="Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", file="JValue.cs", label="return 1;", span="1069-1069"];
m83_519 [cluster="Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", span="1065-1065"];
m83_403 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(double)", file="JValue.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(double)", span="972-972"];
m83_34 [cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="196-196"];
m83_35 [cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JValue.cs", label="JValue other = node as JValue", span="198-198"];
m83_36 [cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JValue.cs", label="other == null", span="199-199"];
m83_38 [cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JValue.cs", label="other == this", span="203-203"];
m83_40 [cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JValue.cs", label="return ValuesEquals(this, other);", span="208-208"];
m83_37 [cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JValue.cs", label="return false;", span="201-201"];
m83_39 [cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JValue.cs", label="return true;", span="205-205"];
m83_41 [cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="196-196"];
m83_278 [cluster="Newtonsoft.Json.Linq.JValue.CreateNull()", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.CreateNull()", span="589-589"];
m83_279 [cluster="Newtonsoft.Json.Linq.JValue.CreateNull()", file="JValue.cs", label="return new JValue(null, JTokenType.Null);", span="591-591"];
m83_280 [cluster="Newtonsoft.Json.Linq.JValue.CreateNull()", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.CreateNull()", span="589-589"];
m83_150 [cluster="System.DateTimeOffset.CompareTo(System.DateTimeOffset)", file="JValue.cs", label="Entry System.DateTimeOffset.CompareTo(System.DateTimeOffset)", span="0-0"];
m83_426 [cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.Equals(object)", span="865-865"];
m83_427 [cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", file="JValue.cs", label="return Equals(obj as JValue);", span="867-867"];
m83_428 [cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.Equals(object)", span="865-865"];
m83_8 [cluster="Newtonsoft.Json.Linq.JValue.JValue(decimal)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(decimal)", span="80-80"];
m83_9 [cluster="Newtonsoft.Json.Linq.JValue.JValue(decimal)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.JValue(decimal)", span="80-80"];
m83_434 [cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.ToString()", span="892-892"];
m83_435 [cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="JValue.cs", label="_value == null", span="894-894"];
m83_436 [cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="JValue.cs", label="return string.Empty;", span="896-896"];
m83_437 [cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="JValue.cs", label="return _value.ToString();", span="899-899"];
m83_438 [cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.ToString()", span="892-892"];
m83_471 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="JValue.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", span="408-408"];
m83_508 [cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", span="1034-1034"];
m83_509 [cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="JValue.cs", label="obj == null", span="1036-1036"];
m83_511 [cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="JValue.cs", label="JValue value = obj as JValue", span="1041-1041"];
m83_512 [cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="JValue.cs", label="object otherValue = value != null ? value.Value : obj", span="1042-1042"];
m83_510 [cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="JValue.cs", label="return 1;", span="1038-1038"];
m83_513 [cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="JValue.cs", label="return Compare(_valueType, _value, otherValue);", span="1044-1044"];
m83_514 [cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", span="1034-1034"];
m83_398 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(int)", file="JValue.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(int)", span="925-925"];
m83_281 [cluster="Newtonsoft.Json.Linq.JValue.CreateUndefined()", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JValue.CreateUndefined()", span="598-598"];
m83_282 [cluster="Newtonsoft.Json.Linq.JValue.CreateUndefined()", file="JValue.cs", label="return new JValue(null, JTokenType.Undefined);", span="600-600"];
m83_283 [cluster="Newtonsoft.Json.Linq.JValue.CreateUndefined()", file="JValue.cs", label="Exit Newtonsoft.Json.Linq.JValue.CreateUndefined()", span="598-598"];
m83_575 [file="JValue.cs", label="Newtonsoft.Json.Linq.JValue", span=""];
m84_8 [cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="LateBoundReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="31-31"];
m84_39 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type, bool)", file="LateBoundReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type, bool)", span="244-244"];
m84_31 [cluster="Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", file="LateBoundReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", span="76-76"];
m84_32 [cluster="Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", file="LateBoundReflectionDelegateFactory.cs", label="ValidationUtils.ArgumentNotNull(type, nameof(type))", span="78-78"];
m84_33 [cluster="Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", file="LateBoundReflectionDelegateFactory.cs", label="type.IsValueType()", span="80-80"];
m84_34 [cluster="Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", file="LateBoundReflectionDelegateFactory.cs", label="return () => (T)Activator.CreateInstance(type);", span="82-82"];
m84_35 [cluster="Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", file="LateBoundReflectionDelegateFactory.cs", label="ConstructorInfo constructorInfo = ReflectionUtils.GetDefaultConstructor(type, true)", span="85-85"];
m84_36 [cluster="Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", file="LateBoundReflectionDelegateFactory.cs", label="return () => (T)constructorInfo.Invoke(null);", span="87-87"];
m84_37 [cluster="Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", file="LateBoundReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", span="76-76"];
m84_43 [cluster="System.Activator.CreateInstance(System.Type)", file="LateBoundReflectionDelegateFactory.cs", label="Entry System.Activator.CreateInstance(System.Type)", span="0-0"];
m84_62 [cluster="System.Reflection.FieldInfo.GetValue(object)", file="LateBoundReflectionDelegateFactory.cs", label="Entry System.Reflection.FieldInfo.GetValue(object)", span="0-0"];
m84_18 [cluster="Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", file="LateBoundReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", span="63-63"];
m84_19 [cluster="Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", file="LateBoundReflectionDelegateFactory.cs", label="ValidationUtils.ArgumentNotNull(method, nameof(method))", span="65-65"];
m84_20 [cluster="Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", file="LateBoundReflectionDelegateFactory.cs", label="ConstructorInfo c = method as ConstructorInfo", span="67-67"];
m84_23 [cluster="Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", file="LateBoundReflectionDelegateFactory.cs", label="return (o, a) => method.Invoke(o, a);", span="73-73"];
m84_21 [cluster="Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", file="LateBoundReflectionDelegateFactory.cs", label="c != null", span="68-68"];
m84_22 [cluster="Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", file="LateBoundReflectionDelegateFactory.cs", label="return (o, a) => c.Invoke(a);", span="70-70"];
m84_24 [cluster="Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", file="LateBoundReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", span="63-63"];
m84_55 [cluster="Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory.CreateGet<T>(System.Reflection.FieldInfo)", file="LateBoundReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory.CreateGet<T>(System.Reflection.FieldInfo)", span="97-97"];
m84_56 [cluster="Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory.CreateGet<T>(System.Reflection.FieldInfo)", file="LateBoundReflectionDelegateFactory.cs", label="ValidationUtils.ArgumentNotNull(fieldInfo, nameof(fieldInfo))", span="99-99"];
m84_57 [cluster="Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory.CreateGet<T>(System.Reflection.FieldInfo)", file="LateBoundReflectionDelegateFactory.cs", label="return o => fieldInfo.GetValue(o);", span="101-101"];
m84_58 [cluster="Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory.CreateGet<T>(System.Reflection.FieldInfo)", file="LateBoundReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory.CreateGet<T>(System.Reflection.FieldInfo)", span="97-97"];
m84_75 [cluster="lambda expression", file="LateBoundReflectionDelegateFactory.cs", label="Entry lambda expression", span="115-115"];
m84_15 [cluster="lambda expression", file="LateBoundReflectionDelegateFactory.cs", label="method.Invoke(null, a)", span="60-60"];
m84_11 [cluster="lambda expression", file="LateBoundReflectionDelegateFactory.cs", label="return c.Invoke(args);", span="56-56"];
m84_10 [cluster="lambda expression", file="LateBoundReflectionDelegateFactory.cs", label="object[] args = a", span="55-55"];
m84_9 [cluster="lambda expression", file="LateBoundReflectionDelegateFactory.cs", label="Entry lambda expression", span="53-57"];
m84_12 [cluster="lambda expression", file="LateBoundReflectionDelegateFactory.cs", label="Exit lambda expression", span="53-57"];
m84_14 [cluster="lambda expression", file="LateBoundReflectionDelegateFactory.cs", label="Entry lambda expression", span="60-60"];
m84_16 [cluster="lambda expression", file="LateBoundReflectionDelegateFactory.cs", label="Exit lambda expression", span="60-60"];
m84_29 [cluster="lambda expression", file="LateBoundReflectionDelegateFactory.cs", label="method.Invoke(o, a)", span="73-73"];
m84_26 [cluster="lambda expression", file="LateBoundReflectionDelegateFactory.cs", label="c.Invoke(a)", span="70-70"];
m84_25 [cluster="lambda expression", file="LateBoundReflectionDelegateFactory.cs", label="Entry lambda expression", span="70-70"];
m84_27 [cluster="lambda expression", file="LateBoundReflectionDelegateFactory.cs", label="Exit lambda expression", span="70-70"];
m84_28 [cluster="lambda expression", file="LateBoundReflectionDelegateFactory.cs", label="Entry lambda expression", span="73-73"];
m84_30 [cluster="lambda expression", file="LateBoundReflectionDelegateFactory.cs", label="Exit lambda expression", span="73-73"];
m84_41 [cluster="lambda expression", file="LateBoundReflectionDelegateFactory.cs", label="(T)Activator.CreateInstance(type)", span="82-82"];
m84_45 [cluster="lambda expression", file="LateBoundReflectionDelegateFactory.cs", label="(T)constructorInfo.Invoke(null)", span="87-87"];
m84_40 [cluster="lambda expression", file="LateBoundReflectionDelegateFactory.cs", label="Entry lambda expression", span="82-82"];
m84_42 [cluster="lambda expression", file="LateBoundReflectionDelegateFactory.cs", label="Exit lambda expression", span="82-82"];
m84_44 [cluster="lambda expression", file="LateBoundReflectionDelegateFactory.cs", label="Entry lambda expression", span="87-87"];
m84_46 [cluster="lambda expression", file="LateBoundReflectionDelegateFactory.cs", label="Exit lambda expression", span="87-87"];
m84_52 [cluster="lambda expression", file="LateBoundReflectionDelegateFactory.cs", label="propertyInfo.GetValue(o, null)", span="94-94"];
m84_51 [cluster="lambda expression", file="LateBoundReflectionDelegateFactory.cs", label="Entry lambda expression", span="94-94"];
m84_53 [cluster="lambda expression", file="LateBoundReflectionDelegateFactory.cs", label="Exit lambda expression", span="94-94"];
m84_60 [cluster="lambda expression", file="LateBoundReflectionDelegateFactory.cs", label="fieldInfo.GetValue(o)", span="101-101"];
m84_59 [cluster="lambda expression", file="LateBoundReflectionDelegateFactory.cs", label="Entry lambda expression", span="101-101"];
m84_61 [cluster="lambda expression", file="LateBoundReflectionDelegateFactory.cs", label="Exit lambda expression", span="101-101"];
m84_68 [cluster="lambda expression", file="LateBoundReflectionDelegateFactory.cs", label="fieldInfo.SetValue(o, v)", span="108-108"];
m84_67 [cluster="lambda expression", file="LateBoundReflectionDelegateFactory.cs", label="Entry lambda expression", span="108-108"];
m84_69 [cluster="lambda expression", file="LateBoundReflectionDelegateFactory.cs", label="Exit lambda expression", span="108-108"];
m84_76 [cluster="lambda expression", file="LateBoundReflectionDelegateFactory.cs", label="propertyInfo.SetValue(o, v, null)", span="115-115"];
m84_77 [cluster="lambda expression", file="LateBoundReflectionDelegateFactory.cs", label="Exit lambda expression", span="115-115"];
m84_13 [cluster="System.Reflection.ConstructorInfo.Invoke(object[])", file="LateBoundReflectionDelegateFactory.cs", label="Entry System.Reflection.ConstructorInfo.Invoke(object[])", span="0-0"];
m84_54 [cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="LateBoundReflectionDelegateFactory.cs", label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0"];
m84_71 [cluster="Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory.CreateSet<T>(System.Reflection.PropertyInfo)", file="LateBoundReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory.CreateSet<T>(System.Reflection.PropertyInfo)", span="111-111"];
m84_72 [cluster="Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory.CreateSet<T>(System.Reflection.PropertyInfo)", file="LateBoundReflectionDelegateFactory.cs", label="ValidationUtils.ArgumentNotNull(propertyInfo, nameof(propertyInfo))", span="113-113"];
m84_73 [cluster="Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory.CreateSet<T>(System.Reflection.PropertyInfo)", file="LateBoundReflectionDelegateFactory.cs", label="return (o, v) => propertyInfo.SetValue(o, v, null);", span="115-115"];
m84_74 [cluster="Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory.CreateSet<T>(System.Reflection.PropertyInfo)", file="LateBoundReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory.CreateSet<T>(System.Reflection.PropertyInfo)", span="111-111"];
m84_63 [cluster="Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory.CreateSet<T>(System.Reflection.FieldInfo)", file="LateBoundReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory.CreateSet<T>(System.Reflection.FieldInfo)", span="104-104"];
m84_64 [cluster="Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory.CreateSet<T>(System.Reflection.FieldInfo)", file="LateBoundReflectionDelegateFactory.cs", label="ValidationUtils.ArgumentNotNull(fieldInfo, nameof(fieldInfo))", span="106-106"];
m84_65 [cluster="Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory.CreateSet<T>(System.Reflection.FieldInfo)", file="LateBoundReflectionDelegateFactory.cs", label="return (o, v) => fieldInfo.SetValue(o, v);", span="108-108"];
m84_66 [cluster="Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory.CreateSet<T>(System.Reflection.FieldInfo)", file="LateBoundReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory.CreateSet<T>(System.Reflection.FieldInfo)", span="104-104"];
m84_0 [cluster="Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory.CreateParameterizedConstructor(System.Reflection.MethodBase)", file="LateBoundReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory.CreateParameterizedConstructor(System.Reflection.MethodBase)", span="44-44"];
m84_1 [cluster="Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory.CreateParameterizedConstructor(System.Reflection.MethodBase)", file="LateBoundReflectionDelegateFactory.cs", label="ValidationUtils.ArgumentNotNull(method, nameof(method))", span="46-46"];
m84_2 [cluster="Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory.CreateParameterizedConstructor(System.Reflection.MethodBase)", file="LateBoundReflectionDelegateFactory.cs", label="ConstructorInfo c = method as ConstructorInfo", span="48-48"];
m84_5 [cluster="Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory.CreateParameterizedConstructor(System.Reflection.MethodBase)", file="LateBoundReflectionDelegateFactory.cs", label="return a => method.Invoke(null, a);", span="60-60"];
m84_3 [cluster="Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory.CreateParameterizedConstructor(System.Reflection.MethodBase)", file="LateBoundReflectionDelegateFactory.cs", label="c != null", span="49-49"];
m84_4 [cluster="Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory.CreateParameterizedConstructor(System.Reflection.MethodBase)", file="LateBoundReflectionDelegateFactory.cs", label="return a =>\r\n                {\r\n                    object[] args = a;\r\n                    return c.Invoke(args);\r\n                };", span="53-57"];
m84_6 [cluster="Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory.CreateParameterizedConstructor(System.Reflection.MethodBase)", file="LateBoundReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory.CreateParameterizedConstructor(System.Reflection.MethodBase)", span="44-44"];
m84_7 [cluster="Unk.nameof", file="LateBoundReflectionDelegateFactory.cs", label="Entry Unk.nameof", span=""];
m84_38 [cluster="System.Type.IsValueType()", file="LateBoundReflectionDelegateFactory.cs", label="Entry System.Type.IsValueType()", span="535-535"];
m84_78 [cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", file="LateBoundReflectionDelegateFactory.cs", label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0"];
m84_17 [cluster="System.Reflection.MethodBase.Invoke(object, object[])", file="LateBoundReflectionDelegateFactory.cs", label="Entry System.Reflection.MethodBase.Invoke(object, object[])", span="0-0"];
m84_47 [cluster="Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory.CreateGet<T>(System.Reflection.PropertyInfo)", file="LateBoundReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory.CreateGet<T>(System.Reflection.PropertyInfo)", span="90-90"];
m84_48 [cluster="Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory.CreateGet<T>(System.Reflection.PropertyInfo)", file="LateBoundReflectionDelegateFactory.cs", label="ValidationUtils.ArgumentNotNull(propertyInfo, nameof(propertyInfo))", span="92-92"];
m84_49 [cluster="Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory.CreateGet<T>(System.Reflection.PropertyInfo)", file="LateBoundReflectionDelegateFactory.cs", label="return o => propertyInfo.GetValue(o, null);", span="94-94"];
m84_50 [cluster="Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory.CreateGet<T>(System.Reflection.PropertyInfo)", file="LateBoundReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory.CreateGet<T>(System.Reflection.PropertyInfo)", span="90-90"];
m84_70 [cluster="System.Reflection.FieldInfo.SetValue(object, object)", file="LateBoundReflectionDelegateFactory.cs", label="Entry System.Reflection.FieldInfo.SetValue(object, object)", span="0-0"];
m84_79 [file="LateBoundReflectionDelegateFactory.cs", label=c, span=""];
m84_80 [file="LateBoundReflectionDelegateFactory.cs", label="System.Reflection.MethodBase", span=""];
m84_81 [file="LateBoundReflectionDelegateFactory.cs", label=c, span=""];
m84_82 [file="LateBoundReflectionDelegateFactory.cs", label="System.Reflection.MethodBase", span=""];
m84_83 [file="LateBoundReflectionDelegateFactory.cs", label="System.Type", span=""];
m84_84 [file="LateBoundReflectionDelegateFactory.cs", label=constructorInfo, span=""];
m84_85 [file="LateBoundReflectionDelegateFactory.cs", label="System.Reflection.PropertyInfo", span=""];
m84_86 [file="LateBoundReflectionDelegateFactory.cs", label="System.Reflection.FieldInfo", span=""];
m84_87 [file="LateBoundReflectionDelegateFactory.cs", label="System.Reflection.FieldInfo", span=""];
m84_88 [file="LateBoundReflectionDelegateFactory.cs", label="System.Reflection.PropertyInfo", span=""];
m86_32 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="93-93"];
m86_33 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="Operator == QueryOperator.Exists", span="95-95"];
m86_34 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="return GetResult(root, t, Left).Any();", span="97-97"];
m86_35 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="IEnumerator<JToken> leftResults = GetResult(root, t, Left).GetEnumerator()", span="100-100"];
m86_37 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="IEnumerable<JToken> rightResultsEn = GetResult(root, t, Right)", span="104-104"];
m86_36 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="leftResults.MoveNext()", span="102-102"];
m86_39 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="JToken leftResult = leftResults.Current", span="109-109"];
m86_43 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="leftResults.MoveNext()", span="117-117"];
m86_44 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="return false;", span="121-121"];
m86_38 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="ICollection<JToken> rightResults = rightResultsEn as ICollection<JToken> ?? rightResultsEn.ToList()", span="105-105"];
m86_40 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label=rightResults, span="110-110"];
m86_41 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="MatchTokens(leftResult, rightResult)", span="112-112"];
m86_42 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="return true;", span="114-114"];
m86_45 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="Exit Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="93-93"];
m86_81 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.EqualsWithStringCoercion(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="QueryExpression.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.EqualsWithStringCoercion(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", span="188-188"];
m86_83 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.EqualsWithStringCoercion(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="QueryExpression.cs", label="value.Equals(queryValue)", span="190-190"];
m86_85 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.EqualsWithStringCoercion(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="QueryExpression.cs", label="queryValue.Type != JTokenType.String", span="195-195"];
m86_87 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.EqualsWithStringCoercion(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="QueryExpression.cs", label="string queryValueString = (string)queryValue.Value", span="200-200"];
m86_89 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.EqualsWithStringCoercion(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="QueryExpression.cs", label="value.Type", span="205-205"];
m86_92 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.EqualsWithStringCoercion(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="QueryExpression.cs", label="value.Value is DateTimeOffset", span="211-211"];
m86_93 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.EqualsWithStringCoercion(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="QueryExpression.cs", label="DateTimeUtils.WriteDateTimeOffsetString(writer, (DateTimeOffset)value.Value, DateFormatHandling.IsoDateFormat, null, CultureInfo.InvariantCulture)", span="213-213"];
m86_94 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.EqualsWithStringCoercion(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="QueryExpression.cs", label="DateTimeUtils.WriteDateTimeString(writer, (DateTime)value.Value, DateFormatHandling.IsoDateFormat, null, CultureInfo.InvariantCulture)", span="218-218"];
m86_97 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.EqualsWithStringCoercion(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="QueryExpression.cs", label="currentValueString = Convert.ToBase64String((byte[])value.Value)", span="225-225"];
m86_100 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.EqualsWithStringCoercion(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="QueryExpression.cs", label="currentValueString = value.Value.ToString()", span="229-229"];
m86_102 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.EqualsWithStringCoercion(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="QueryExpression.cs", label="currentValueString = ((Uri)value.Value).OriginalString", span="232-232"];
m86_84 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.EqualsWithStringCoercion(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="QueryExpression.cs", label="return true;", span="192-192"];
m86_86 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.EqualsWithStringCoercion(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="QueryExpression.cs", label="return false;", span="197-197"];
m86_88 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.EqualsWithStringCoercion(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="QueryExpression.cs", label="string currentValueString", span="202-202"];
m86_104 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.EqualsWithStringCoercion(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="QueryExpression.cs", label="return string.Equals(currentValueString, queryValueString, StringComparison.Ordinal);", span="238-238"];
m86_90 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.EqualsWithStringCoercion(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="QueryExpression.cs", label="JTokenType.Date", span="207-207"];
m86_96 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.EqualsWithStringCoercion(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="QueryExpression.cs", label="JTokenType.Bytes", span="224-224"];
m86_98 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.EqualsWithStringCoercion(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="QueryExpression.cs", label="JTokenType.Guid", span="227-227"];
m86_101 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.EqualsWithStringCoercion(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="QueryExpression.cs", label="JTokenType.Uri", span="231-231"];
m86_103 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.EqualsWithStringCoercion(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="QueryExpression.cs", label="return false;", span="235-235"];
m86_91 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.EqualsWithStringCoercion(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="QueryExpression.cs", label="StringWriter writer = StringUtils.CreateStringWriter(64)", span="208-208"];
m86_95 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.EqualsWithStringCoercion(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="QueryExpression.cs", label="currentValueString = writer.ToString()", span="221-221"];
m86_99 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.EqualsWithStringCoercion(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="QueryExpression.cs", label="JTokenType.TimeSpan", span="228-228"];
m86_105 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.EqualsWithStringCoercion(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="QueryExpression.cs", label="Exit Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.EqualsWithStringCoercion(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", span="188-188"];
m86_113 [cluster="string.Equals(string, string, System.StringComparison)", file="QueryExpression.cs", label="Entry string.Equals(string, string, System.StringComparison)", span="0-0"];
m86_5 [cluster="System.Collections.Generic.List<T>.List()", file="QueryExpression.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m86_31 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ArrayEmpty<T>()", file="QueryExpression.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.ArrayEmpty<T>()", span="362-362"];
m86_30 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.Evaluate(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken, bool)", file="QueryExpression.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.JPath.Evaluate(System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter>, Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken, bool)", span="803-803"];
m86_111 [cluster="System.Convert.ToBase64String(byte[])", file="QueryExpression.cs", label="Entry System.Convert.ToBase64String(byte[])", span="0-0"];
m86_6 [cluster="Newtonsoft.Json.Linq.JsonPath.CompositeExpression.IsMatch(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.CompositeExpression.IsMatch(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="43-43"];
m86_7 [cluster="Newtonsoft.Json.Linq.JsonPath.CompositeExpression.IsMatch(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label=Operator, span="45-45"];
m86_10 [cluster="Newtonsoft.Json.Linq.JsonPath.CompositeExpression.IsMatch(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="!e.IsMatch(root, t)", span="50-50"];
m86_15 [cluster="Newtonsoft.Json.Linq.JsonPath.CompositeExpression.IsMatch(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="e.IsMatch(root, t)", span="59-59"];
m86_8 [cluster="Newtonsoft.Json.Linq.JsonPath.CompositeExpression.IsMatch(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="QueryOperator.And", span="47-47"];
m86_13 [cluster="Newtonsoft.Json.Linq.JsonPath.CompositeExpression.IsMatch(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="QueryOperator.Or", span="56-56"];
m86_18 [cluster="Newtonsoft.Json.Linq.JsonPath.CompositeExpression.IsMatch(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="throw new ArgumentOutOfRangeException();", span="66-66"];
m86_9 [cluster="Newtonsoft.Json.Linq.JsonPath.CompositeExpression.IsMatch(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label=Expressions, span="48-48"];
m86_12 [cluster="Newtonsoft.Json.Linq.JsonPath.CompositeExpression.IsMatch(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="return true;", span="55-55"];
m86_11 [cluster="Newtonsoft.Json.Linq.JsonPath.CompositeExpression.IsMatch(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="return false;", span="52-52"];
m86_14 [cluster="Newtonsoft.Json.Linq.JsonPath.CompositeExpression.IsMatch(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label=Expressions, span="57-57"];
m86_17 [cluster="Newtonsoft.Json.Linq.JsonPath.CompositeExpression.IsMatch(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="return false;", span="64-64"];
m86_16 [cluster="Newtonsoft.Json.Linq.JsonPath.CompositeExpression.IsMatch(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="return true;", span="61-61"];
m86_19 [cluster="Newtonsoft.Json.Linq.JsonPath.CompositeExpression.IsMatch(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="Exit Newtonsoft.Json.Linq.JsonPath.CompositeExpression.IsMatch(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="43-43"];
m86_107 [cluster="Newtonsoft.Json.Utilities.StringUtils.CreateStringWriter(int)", file="QueryExpression.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.CreateStringWriter(int)", span="106-106"];
m86_50 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.MatchTokens(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.MatchTokens(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="124-124"];
m86_51 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.MatchTokens(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="JValue leftValue = leftResult as JValue", span="126-126"];
m86_52 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.MatchTokens(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="JValue rightValue = rightResult as JValue", span="127-127"];
m86_53 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.MatchTokens(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="leftValue != null && rightValue != null", span="129-129"];
m86_56 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.MatchTokens(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="EqualsWithStringCoercion(leftValue, rightValue)", span="134-134"];
m86_59 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.MatchTokens(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="!EqualsWithStringCoercion(leftValue, rightValue)", span="140-140"];
m86_62 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.MatchTokens(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="leftValue.CompareTo(rightValue) > 0", span="146-146"];
m86_65 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.MatchTokens(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="leftValue.CompareTo(rightValue) >= 0", span="152-152"];
m86_68 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.MatchTokens(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="leftValue.CompareTo(rightValue) < 0", span="158-158"];
m86_71 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.MatchTokens(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="leftValue.CompareTo(rightValue) <= 0", span="164-164"];
m86_54 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.MatchTokens(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label=Operator, span="131-131"];
m86_75 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.MatchTokens(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label=Operator, span="175-175"];
m86_55 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.MatchTokens(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="QueryOperator.Equals", span="133-133"];
m86_58 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.MatchTokens(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="QueryOperator.NotEquals", span="139-139"];
m86_61 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.MatchTokens(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="QueryOperator.GreaterThan", span="145-145"];
m86_64 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.MatchTokens(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="QueryOperator.GreaterThanOrEquals", span="151-151"];
m86_67 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.MatchTokens(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="QueryOperator.LessThan", span="157-157"];
m86_70 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.MatchTokens(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="QueryOperator.LessThanOrEquals", span="163-163"];
m86_73 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.MatchTokens(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="QueryOperator.Exists", span="169-169"];
m86_57 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.MatchTokens(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="return true;", span="136-136"];
m86_79 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.MatchTokens(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="return false;", span="185-185"];
m86_60 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.MatchTokens(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="return true;", span="142-142"];
m86_63 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.MatchTokens(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="return true;", span="148-148"];
m86_66 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.MatchTokens(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="return true;", span="154-154"];
m86_69 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.MatchTokens(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="return true;", span="160-160"];
m86_72 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.MatchTokens(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="return true;", span="166-166"];
m86_74 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.MatchTokens(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="return true;", span="170-170"];
m86_76 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.MatchTokens(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="QueryOperator.Exists", span="177-177"];
m86_77 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.MatchTokens(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="QueryOperator.NotEquals", span="180-180"];
m86_78 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.MatchTokens(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="return true;", span="181-181"];
m86_80 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.MatchTokens(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="Exit Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.MatchTokens(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="124-124"];
m86_0 [cluster="Newtonsoft.Json.Linq.JsonPath.QueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.QueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="31-31"];
m86_1 [cluster="Newtonsoft.Json.Linq.JsonPath.QueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="QueryExpression.cs", label="Exit Newtonsoft.Json.Linq.JsonPath.QueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="31-31"];
m86_2 [cluster="Newtonsoft.Json.Linq.JsonPath.CompositeExpression.CompositeExpression()", file="QueryExpression.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.CompositeExpression.CompositeExpression()", span="38-38"];
m86_3 [cluster="Newtonsoft.Json.Linq.JsonPath.CompositeExpression.CompositeExpression()", file="QueryExpression.cs", label="Expressions = new List<QueryExpression>()", span="40-40"];
m86_4 [cluster="Newtonsoft.Json.Linq.JsonPath.CompositeExpression.CompositeExpression()", file="QueryExpression.cs", label="Exit Newtonsoft.Json.Linq.JsonPath.CompositeExpression.CompositeExpression()", span="38-38"];
m86_112 [cluster="object.ToString()", file="QueryExpression.cs", label="Entry object.ToString()", span="0-0"];
m86_20 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", file="QueryExpression.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", span="0-0"];
m86_48 [cluster="System.Collections.IEnumerator.MoveNext()", file="QueryExpression.cs", label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0"];
m86_109 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(System.IO.TextWriter, System.DateTime, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", file="QueryExpression.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(System.IO.TextWriter, System.DateTime, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", span="631-631"];
m86_82 [cluster="Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", file="QueryExpression.cs", label="Entry Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", span="1065-1065"];
m86_110 [cluster="System.IO.StringWriter.ToString()", file="QueryExpression.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m86_108 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeOffsetString(System.IO.TextWriter, System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", file="QueryExpression.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeOffsetString(System.IO.TextWriter, System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", span="767-767"];
m86_106 [cluster="Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)", file="QueryExpression.cs", label="Entry Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)", span="848-848"];
m86_21 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.GetResult(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken, object)", file="QueryExpression.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.GetResult(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken, object)", span="76-76"];
m86_22 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.GetResult(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken, object)", file="QueryExpression.cs", label="JToken resultToken = o as JToken", span="78-78"];
m86_25 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.GetResult(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken, object)", file="QueryExpression.cs", label="List<PathFilter> pathFilters = o as List<PathFilter>", span="84-84"];
m86_27 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.GetResult(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken, object)", file="QueryExpression.cs", label="return JPath.Evaluate(pathFilters, root, t, false);", span="87-87"];
m86_23 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.GetResult(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken, object)", file="QueryExpression.cs", label="resultToken != null", span="79-79"];
m86_24 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.GetResult(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken, object)", file="QueryExpression.cs", label="return new[] { resultToken };", span="81-81"];
m86_26 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.GetResult(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken, object)", file="QueryExpression.cs", label="pathFilters != null", span="85-85"];
m86_28 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.GetResult(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken, object)", file="QueryExpression.cs", label="return CollectionUtils.ArrayEmpty<JToken>();", span="90-90"];
m86_29 [cluster="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.GetResult(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken, object)", file="QueryExpression.cs", label="Exit Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression.GetResult(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken, object)", span="76-76"];
m86_46 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="QueryExpression.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m86_49 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="QueryExpression.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m86_47 [cluster="System.Collections.Generic.IEnumerable<T>.GetEnumerator()", file="QueryExpression.cs", label="Entry System.Collections.Generic.IEnumerable<T>.GetEnumerator()", span="0-0"];
m86_114 [file="QueryExpression.cs", label="Newtonsoft.Json.Linq.JsonPath.CompositeExpression", span=""];
m86_115 [file="QueryExpression.cs", label="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression", span=""];
m87_203 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaWithNegativeEnum()", file="ReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaWithNegativeEnum()", span="608-608"];
m87_204 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaWithNegativeEnum()", file="ReflectionDelegateFactory.cs", label="JsonSchemaGenerator jsonSchemaGenerator = new JsonSchemaGenerator()", span="610-610"];
m87_205 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaWithNegativeEnum()", file="ReflectionDelegateFactory.cs", label="JsonSchema schema = jsonSchemaGenerator.Generate(typeof(X))", span="611-611"];
m87_206 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaWithNegativeEnum()", file="ReflectionDelegateFactory.cs", label="string json = schema.ToString()", span="613-613"];
m87_207 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaWithNegativeEnum()", file="ReflectionDelegateFactory.cs", label="StringAssert.AreEqual(@''{\r\n  ''''type'''': ''''object'''',\r\n  ''''properties'''': {\r\n    ''''x'''': {\r\n      ''''required'''': true,\r\n      ''''type'''': ''''integer'''',\r\n      ''''enum'''': [\r\n        0,\r\n        1,\r\n        -1\r\n      ]\r\n    }\r\n  }\r\n}'', json)", span="615-628"];
m87_208 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaWithNegativeEnum()", file="ReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaWithNegativeEnum()", span="608-608"];
m87_197 [cluster="System.Version.Version(int, int, int, int)", file="ReflectionDelegateFactory.cs", label="Entry System.Version.Version(int, int, int, int)", span="0-0"];
m87_124 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="ReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", span="967-967"];
m87_47 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_Store()", file="ReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_Store()", span="233-233"];
m87_48 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_Store()", file="ReflectionDelegateFactory.cs", label="JsonSchemaGenerator generator = new JsonSchemaGenerator()", span="235-235"];
m87_49 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_Store()", file="ReflectionDelegateFactory.cs", label="JsonSchema schema = generator.Generate(typeof(Store))", span="236-236"];
m87_50 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_Store()", file="ReflectionDelegateFactory.cs", label="Assert.AreEqual(11, schema.Properties.Count)", span="238-238"];
m87_51 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_Store()", file="ReflectionDelegateFactory.cs", label="JsonSchema productArraySchema = schema.Properties[''product'']", span="240-240"];
m87_52 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_Store()", file="ReflectionDelegateFactory.cs", label="JsonSchema productSchema = productArraySchema.Items[0]", span="241-241"];
m87_53 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_Store()", file="ReflectionDelegateFactory.cs", label="Assert.AreEqual(4, productSchema.Properties.Count)", span="243-243"];
m87_54 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_Store()", file="ReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_Store()", span="233-233"];
m87_158 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", file="ReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", span="34-34"];
m87_125 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CustomDirectoryInfoMapper.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="ReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CustomDirectoryInfoMapper.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", span="358-358"];
m87_126 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CustomDirectoryInfoMapper.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="ReflectionDelegateFactory.cs", label="IList<JsonProperty> properties = base.CreateProperties(type, memberSerialization)", span="360-360"];
m87_127 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CustomDirectoryInfoMapper.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="ReflectionDelegateFactory.cs", label="JsonPropertyCollection c = new JsonPropertyCollection(type)", span="362-362"];
m87_128 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CustomDirectoryInfoMapper.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="ReflectionDelegateFactory.cs", label="c.AddRange(properties.Where(m => m.PropertyName != ''Root''))", span="363-363"];
m87_129 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CustomDirectoryInfoMapper.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="ReflectionDelegateFactory.cs", label="return c;", span="365-365"];
m87_130 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CustomDirectoryInfoMapper.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="ReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CustomDirectoryInfoMapper.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", span="358-358"];
m87_74 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithTypeNameId()", file="ReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithTypeNameId()", span="274-274"];
m87_75 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithTypeNameId()", file="ReflectionDelegateFactory.cs", label="JsonSchemaGenerator generator = new JsonSchemaGenerator()", span="276-276"];
m87_76 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithTypeNameId()", file="ReflectionDelegateFactory.cs", label="generator.UndefinedSchemaIdHandling = UndefinedSchemaIdHandling.UseTypeName", span="277-277"];
m87_77 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithTypeNameId()", file="ReflectionDelegateFactory.cs", label="JsonSchema schema = generator.Generate(typeof(CircularReferenceClass), true)", span="279-279"];
m87_78 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithTypeNameId()", file="ReflectionDelegateFactory.cs", label="Assert.AreEqual(JsonSchemaType.String, schema.Properties[''Name''].Type)", span="281-281"];
m87_79 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithTypeNameId()", file="ReflectionDelegateFactory.cs", label="Assert.AreEqual(typeof(CircularReferenceClass).FullName, schema.Id)", span="282-282"];
m87_80 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithTypeNameId()", file="ReflectionDelegateFactory.cs", label="Assert.AreEqual(JsonSchemaType.Object | JsonSchemaType.Null, schema.Properties[''Child''].Type)", span="283-283"];
m87_81 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithTypeNameId()", file="ReflectionDelegateFactory.cs", label="Assert.AreEqual(schema, schema.Properties[''Child''])", span="284-284"];
m87_82 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithTypeNameId()", file="ReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithTypeNameId()", span="274-274"];
m87_15 [cluster="System.Collections.Generic.List<T>.List()", file="ReflectionDelegateFactory.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m87_12 [cluster="Newtonsoft.Json.Schema.JsonSchema.ToString()", file="ReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Schema.JsonSchema.ToString()", span="344-344"];
m87_110 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForDBNull()", file="ReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForDBNull()", span="333-333"];
m87_111 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForDBNull()", file="ReflectionDelegateFactory.cs", label="JsonSchemaGenerator generator = new JsonSchemaGenerator()", span="335-335"];
m87_112 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForDBNull()", file="ReflectionDelegateFactory.cs", label="generator.UndefinedSchemaIdHandling = UndefinedSchemaIdHandling.UseTypeName", span="336-336"];
m87_113 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForDBNull()", file="ReflectionDelegateFactory.cs", label="JsonSchema schema = generator.Generate(typeof(DBNull))", span="338-338"];
m87_114 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForDBNull()", file="ReflectionDelegateFactory.cs", label="Assert.AreEqual(JsonSchemaType.Null, schema.Type)", span="340-340"];
m87_115 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForDBNull()", file="ReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForDBNull()", span="333-333"];
m87_198 [cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="ReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="410-410"];
m87_134 [cluster="Unk.AddRange", file="ReflectionDelegateFactory.cs", label="Entry Unk.AddRange", span=""];
m87_83 [cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.Generate(System.Type, bool)", file="ReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaGenerator.Generate(System.Type, bool)", span="150-150"];
m87_20 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_DefaultValueAttributeTestClass()", file="ReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_DefaultValueAttributeTestClass()", span="99-99"];
m87_21 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_DefaultValueAttributeTestClass()", file="ReflectionDelegateFactory.cs", label="JsonSchemaGenerator generator = new JsonSchemaGenerator()", span="101-101"];
m87_22 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_DefaultValueAttributeTestClass()", file="ReflectionDelegateFactory.cs", label="JsonSchema schema = generator.Generate(typeof(DefaultValueAttributeTestClass))", span="102-102"];
m87_23 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_DefaultValueAttributeTestClass()", file="ReflectionDelegateFactory.cs", label="string json = schema.ToString()", span="104-104"];
m87_24 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_DefaultValueAttributeTestClass()", file="ReflectionDelegateFactory.cs", label="StringAssert.AreEqual(@''{\r\n  ''''description'''': ''''DefaultValueAttributeTestClass description!'''',\r\n  ''''type'''': ''''object'''',\r\n  ''''additionalProperties'''': false,\r\n  ''''properties'''': {\r\n    ''''TestField1'''': {\r\n      ''''required'''': true,\r\n      ''''type'''': ''''integer'''',\r\n      ''''default'''': 21\r\n    },\r\n    ''''TestProperty1'''': {\r\n      ''''required'''': true,\r\n      ''''type'''': [\r\n        ''''string'''',\r\n        ''''null''''\r\n      ],\r\n      ''''default'''': ''''TestProperty1Value''''\r\n    }\r\n  }\r\n}'', json)", span="106-125"];
m87_25 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_DefaultValueAttributeTestClass()", file="ReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_DefaultValueAttributeTestClass()", span="99-99"];
m87_224 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.JsonPropertyWithHandlingValues()", file="ReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.JsonPropertyWithHandlingValues()", span="672-672"];
m87_225 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.JsonPropertyWithHandlingValues()", file="ReflectionDelegateFactory.cs", label="JsonSchemaGenerator jsonSchemaGenerator = new JsonSchemaGenerator()", span="674-674"];
m87_226 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.JsonPropertyWithHandlingValues()", file="ReflectionDelegateFactory.cs", label="jsonSchemaGenerator.UndefinedSchemaIdHandling = UndefinedSchemaIdHandling.UseTypeName", span="676-676"];
m87_227 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.JsonPropertyWithHandlingValues()", file="ReflectionDelegateFactory.cs", label="JsonSchema jsonSchema = jsonSchemaGenerator.Generate(typeof(JsonPropertyWithHandlingValues))", span="677-677"];
m87_228 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.JsonPropertyWithHandlingValues()", file="ReflectionDelegateFactory.cs", label="string json = jsonSchema.ToString()", span="678-678"];
m87_229 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.JsonPropertyWithHandlingValues()", file="ReflectionDelegateFactory.cs", label="StringAssert.AreEqual(@''{\r\n  ''''id'''': ''''Newtonsoft.Json.Tests.TestObjects.JsonPropertyWithHandlingValues'''',\r\n  ''''required'''': true,\r\n  ''''type'''': [\r\n    ''''object'''',\r\n    ''''null''''\r\n  ],\r\n  ''''properties'''': {\r\n    ''''DefaultValueHandlingIgnoreProperty'''': {\r\n      ''''type'''': [\r\n        ''''string'''',\r\n        ''''null''''\r\n      ],\r\n      ''''default'''': ''''Default!''''\r\n    },\r\n    ''''DefaultValueHandlingIncludeProperty'''': {\r\n      ''''required'''': true,\r\n      ''''type'''': [\r\n        ''''string'''',\r\n        ''''null''''\r\n      ],\r\n      ''''default'''': ''''Default!''''\r\n    },\r\n    ''''DefaultValueHandlingPopulateProperty'''': {\r\n      ''''required'''': true,\r\n      ''''type'''': [\r\n        ''''string'''',\r\n        ''''null''''\r\n      ],\r\n      ''''default'''': ''''Default!''''\r\n    },\r\n    ''''DefaultValueHandlingIgnoreAndPopulateProperty'''': {\r\n      ''''type'''': [\r\n        ''''string'''',\r\n        ''''null''''\r\n      ],\r\n      ''''default'''': ''''Default!''''\r\n    },\r\n    ''''NullValueHandlingIgnoreProperty'''': {\r\n      ''''type'''': [\r\n        ''''string'''',\r\n        ''''null''''\r\n      ]\r\n    },\r\n    ''''NullValueHandlingIncludeProperty'''': {\r\n      ''''required'''': true,\r\n      ''''type'''': [\r\n        ''''string'''',\r\n        ''''null''''\r\n      ]\r\n    },\r\n    ''''ReferenceLoopHandlingErrorProperty'''': {\r\n      ''''$ref'''': ''''Newtonsoft.Json.Tests.TestObjects.JsonPropertyWithHandlingValues''''\r\n    },\r\n    ''''ReferenceLoopHandlingIgnoreProperty'''': {\r\n      ''''$ref'''': ''''Newtonsoft.Json.Tests.TestObjects.JsonPropertyWithHandlingValues''''\r\n    },\r\n    ''''ReferenceLoopHandlingSerializeProperty'''': {\r\n      ''''$ref'''': ''''Newtonsoft.Json.Tests.TestObjects.JsonPropertyWithHandlingValues''''\r\n    }\r\n  }\r\n}'', json)", span="680-741"];
m87_230 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.JsonPropertyWithHandlingValues()", file="ReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.JsonPropertyWithHandlingValues()", span="672-672"];
m87_160 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="ReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="860-860"];
m87_166 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaCamelCase()", file="ReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaCamelCase()", span="474-474"];
m87_167 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaCamelCase()", file="ReflectionDelegateFactory.cs", label="JsonSchemaGenerator generator = new JsonSchemaGenerator()", span="476-476"];
m87_168 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaCamelCase()", file="ReflectionDelegateFactory.cs", label="generator.UndefinedSchemaIdHandling = UndefinedSchemaIdHandling.UseTypeName", span="477-477"];
m87_169 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaCamelCase()", file="ReflectionDelegateFactory.cs", label="generator.ContractResolver = new CamelCasePropertyNamesContractResolver()\r\n            {\r\n#if !(NETFX_CORE || PORTABLE || ASPNETCORE50 || PORTABLE40)\r\n                IgnoreSerializableAttribute = true\r\n#endif\r\n            }", span="478-483"];
m87_170 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaCamelCase()", file="ReflectionDelegateFactory.cs", label="JsonSchema schema = generator.Generate(typeof(Version), true)", span="485-485"];
m87_171 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaCamelCase()", file="ReflectionDelegateFactory.cs", label="string json = schema.ToString()", span="487-487"];
m87_172 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaCamelCase()", file="ReflectionDelegateFactory.cs", label="StringAssert.AreEqual(@''{\r\n  ''''id'''': ''''System.Version'''',\r\n  ''''type'''': [\r\n    ''''object'''',\r\n    ''''null''''\r\n  ],\r\n  ''''additionalProperties'''': false,\r\n  ''''properties'''': {\r\n    ''''major'''': {\r\n      ''''required'''': true,\r\n      ''''type'''': ''''integer''''\r\n    },\r\n    ''''minor'''': {\r\n      ''''required'''': true,\r\n      ''''type'''': ''''integer''''\r\n    },\r\n    ''''build'''': {\r\n      ''''required'''': true,\r\n      ''''type'''': ''''integer''''\r\n    },\r\n    ''''revision'''': {\r\n      ''''required'''': true,\r\n      ''''type'''': ''''integer''''\r\n    },\r\n    ''''majorRevision'''': {\r\n      ''''required'''': true,\r\n      ''''type'''': ''''integer''''\r\n    },\r\n    ''''minorRevision'''': {\r\n      ''''required'''': true,\r\n      ''''type'''': ''''integer''''\r\n    }\r\n  }\r\n}'', json)", span="489-522"];
m87_173 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaCamelCase()", file="ReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaCamelCase()", span="474-474"];
m87_19 [cluster="Unk.IsTrue", file="ReflectionDelegateFactory.cs", label="Entry Unk.IsTrue", span=""];
m87_199 [cluster="Newtonsoft.Json.Linq.JToken.ToObject<T>(Newtonsoft.Json.JsonSerializer)", file="ReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToObject<T>(Newtonsoft.Json.JsonSerializer)", span="1819-1819"];
m87_157 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="ReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="433-433"];
m87_17 [cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="ReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="359-359"];
m87_175 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaSerializable()", file="ReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaSerializable()", span="527-527"];
m87_176 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaSerializable()", file="ReflectionDelegateFactory.cs", label="JsonSchemaGenerator generator = new JsonSchemaGenerator()", span="529-529"];
m87_177 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaSerializable()", file="ReflectionDelegateFactory.cs", label="generator.ContractResolver = new DefaultContractResolver\r\n            {\r\n                IgnoreSerializableAttribute = false\r\n            }", span="530-533"];
m87_178 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaSerializable()", file="ReflectionDelegateFactory.cs", label="generator.UndefinedSchemaIdHandling = UndefinedSchemaIdHandling.UseTypeName", span="534-534"];
m87_179 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaSerializable()", file="ReflectionDelegateFactory.cs", label="JsonSchema schema = generator.Generate(typeof(Version), true)", span="536-536"];
m87_180 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaSerializable()", file="ReflectionDelegateFactory.cs", label="string json = schema.ToString()", span="538-538"];
m87_187 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaSerializable()", file="ReflectionDelegateFactory.cs", label="jsonWriter.Token.Validate(schema, (sender, args) => errors.Add(args.Message))", span="576-576"];
m87_181 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaSerializable()", file="ReflectionDelegateFactory.cs", label="StringAssert.AreEqual(@''{\r\n  ''''id'''': ''''System.Version'''',\r\n  ''''type'''': [\r\n    ''''object'''',\r\n    ''''null''''\r\n  ],\r\n  ''''additionalProperties'''': false,\r\n  ''''properties'''': {\r\n    ''''_Major'''': {\r\n      ''''required'''': true,\r\n      ''''type'''': ''''integer''''\r\n    },\r\n    ''''_Minor'''': {\r\n      ''''required'''': true,\r\n      ''''type'''': ''''integer''''\r\n    },\r\n    ''''_Build'''': {\r\n      ''''required'''': true,\r\n      ''''type'''': ''''integer''''\r\n    },\r\n    ''''_Revision'''': {\r\n      ''''required'''': true,\r\n      ''''type'''': ''''integer''''\r\n    }\r\n  }\r\n}'', json)", span="540-565"];
m87_182 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaSerializable()", file="ReflectionDelegateFactory.cs", label="JTokenWriter jsonWriter = new JTokenWriter()", span="567-567"];
m87_183 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaSerializable()", file="ReflectionDelegateFactory.cs", label="JsonSerializer serializer = new JsonSerializer()", span="568-568"];
m87_185 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaSerializable()", file="ReflectionDelegateFactory.cs", label="serializer.Serialize(jsonWriter, new Version(1, 2, 3, 4))", span="573-573"];
m87_189 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaSerializable()", file="ReflectionDelegateFactory.cs", label="StringAssert.AreEqual(@''{\r\n  ''''_Major'''': 1,\r\n  ''''_Minor'''': 2,\r\n  ''''_Build'''': 3,\r\n  ''''_Revision'''': 4\r\n}'', jsonWriter.Token.ToString())", span="580-585"];
m87_190 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaSerializable()", file="ReflectionDelegateFactory.cs", label="Version version = jsonWriter.Token.ToObject<Version>(serializer)", span="587-587"];
m87_184 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaSerializable()", file="ReflectionDelegateFactory.cs", label="serializer.ContractResolver = new DefaultContractResolver\r\n            {\r\n                IgnoreSerializableAttribute = false\r\n            }", span="569-572"];
m87_186 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaSerializable()", file="ReflectionDelegateFactory.cs", label="List<string> errors = new List<string>()", span="575-575"];
m87_188 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaSerializable()", file="ReflectionDelegateFactory.cs", label="Assert.AreEqual(0, errors.Count)", span="578-578"];
m87_191 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaSerializable()", file="ReflectionDelegateFactory.cs", label="Assert.AreEqual(1, version.Major)", span="588-588"];
m87_192 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaSerializable()", file="ReflectionDelegateFactory.cs", label="Assert.AreEqual(2, version.Minor)", span="589-589"];
m87_193 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaSerializable()", file="ReflectionDelegateFactory.cs", label="Assert.AreEqual(3, version.Build)", span="590-590"];
m87_194 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaSerializable()", file="ReflectionDelegateFactory.cs", label="Assert.AreEqual(4, version.Revision)", span="591-591"];
m87_195 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaSerializable()", file="ReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaSerializable()", span="527-527"];
m87_101 [cluster="Newtonsoft.Json.Linq.JValue.JValue(string)", file="ReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(string)", span="154-154"];
m87_26 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_Person()", file="ReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_Person()", span="130-130"];
m87_27 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_Person()", file="ReflectionDelegateFactory.cs", label="JsonSchemaGenerator generator = new JsonSchemaGenerator()", span="132-132"];
m87_28 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_Person()", file="ReflectionDelegateFactory.cs", label="JsonSchema schema = generator.Generate(typeof(Person))", span="133-133"];
m87_29 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_Person()", file="ReflectionDelegateFactory.cs", label="string json = schema.ToString()", span="135-135"];
m87_30 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_Person()", file="ReflectionDelegateFactory.cs", label="StringAssert.AreEqual(@''{\r\n  ''''id'''': ''''Person'''',\r\n  ''''title'''': ''''Title!'''',\r\n  ''''description'''': ''''JsonObjectAttribute description!'''',\r\n  ''''type'''': ''''object'''',\r\n  ''''properties'''': {\r\n    ''''Name'''': {\r\n      ''''required'''': true,\r\n      ''''type'''': [\r\n        ''''string'''',\r\n        ''''null''''\r\n      ]\r\n    },\r\n    ''''BirthDate'''': {\r\n      ''''required'''': true,\r\n      ''''type'''': ''''string''''\r\n    },\r\n    ''''LastModified'''': {\r\n      ''''required'''': true,\r\n      ''''type'''': ''''string''''\r\n    }\r\n  }\r\n}'', json)", span="137-159"];
m87_31 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_Person()", file="ReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_Person()", span="130-130"];
m87_116 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CustomDirectoryInfoMapper.CustomDirectoryInfoMapper()", file="ReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CustomDirectoryInfoMapper.CustomDirectoryInfoMapper()", span="345-345"];
m87_117 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CustomDirectoryInfoMapper.CustomDirectoryInfoMapper()", file="ReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CustomDirectoryInfoMapper.CustomDirectoryInfoMapper()", span="345-345"];
m87_174 [cluster="Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver.CamelCasePropertyNamesContractResolver()", file="ReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver.CamelCasePropertyNamesContractResolver()", span="38-38"];
m87_231 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateForNullableInt32()", file="ReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateForNullableInt32()", span="745-745"];
m87_232 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateForNullableInt32()", file="ReflectionDelegateFactory.cs", label="JsonSchemaGenerator jsonSchemaGenerator = new JsonSchemaGenerator()", span="747-747"];
m87_233 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateForNullableInt32()", file="ReflectionDelegateFactory.cs", label="JsonSchema jsonSchema = jsonSchemaGenerator.Generate(typeof(NullableInt32TestClass))", span="749-749"];
m87_234 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateForNullableInt32()", file="ReflectionDelegateFactory.cs", label="string json = jsonSchema.ToString()", span="750-750"];
m87_235 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateForNullableInt32()", file="ReflectionDelegateFactory.cs", label="StringAssert.AreEqual(@''{\r\n  ''''type'''': ''''object'''',\r\n  ''''properties'''': {\r\n    ''''Value'''': {\r\n      ''''required'''': true,\r\n      ''''type'''': [\r\n        ''''integer'''',\r\n        ''''null''''\r\n      ]\r\n    }\r\n  }\r\n}'', json)", span="752-763"];
m87_236 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateForNullableInt32()", file="ReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateForNullableInt32()", span="745-745"];
m87_159 [cluster="System.Collections.ObjectModel.Collection<T>.Add(T)", file="ReflectionDelegateFactory.cs", label="Entry System.Collections.ObjectModel.Collection<T>.Add(T)", span="0-0"];
m87_165 [cluster="System.Collections.Generic.List<T>.Add(T)", file="ReflectionDelegateFactory.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m87_161 [cluster="Newtonsoft.Json.Linq.JToken.Validate(Newtonsoft.Json.Schema.JsonSchema, Newtonsoft.Json.Schema.ValidationEventHandler)", file="ReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Linq.JToken.Validate(Newtonsoft.Json.Schema.JsonSchema, Newtonsoft.Json.Schema.ValidationEventHandler)", span="117-117"];
m87_14 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ReflectionDelegateFactory.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m87_46 [cluster="Unk.AreEqual", file="ReflectionDelegateFactory.cs", label="Entry Unk.AreEqual", span=""];
m87_18 [cluster="Newtonsoft.Json.Linq.JToken.IsValid(Newtonsoft.Json.Schema.JsonSchema)", file="ReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Linq.JToken.IsValid(Newtonsoft.Json.Schema.JsonSchema)", span="57-57"];
m87_196 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", file="ReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", span="188-188"];
m87_16 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="ReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="525-525"];
m87_102 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForISerializable()", file="ReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForISerializable()", span="318-318"];
m87_103 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForISerializable()", file="ReflectionDelegateFactory.cs", label="JsonSchemaGenerator generator = new JsonSchemaGenerator()", span="320-320"];
m87_104 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForISerializable()", file="ReflectionDelegateFactory.cs", label="generator.UndefinedSchemaIdHandling = UndefinedSchemaIdHandling.UseTypeName", span="321-321"];
m87_105 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForISerializable()", file="ReflectionDelegateFactory.cs", label="JsonSchema schema = generator.Generate(typeof(Exception))", span="323-323"];
m87_106 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForISerializable()", file="ReflectionDelegateFactory.cs", label="Assert.AreEqual(JsonSchemaType.Object, schema.Type)", span="325-325"];
m87_107 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForISerializable()", file="ReflectionDelegateFactory.cs", label="Assert.AreEqual(true, schema.AllowAdditionalProperties)", span="326-326"];
m87_108 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForISerializable()", file="ReflectionDelegateFactory.cs", label="Assert.AreEqual(null, schema.Properties)", span="327-327"];
m87_109 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForISerializable()", file="ReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForISerializable()", span="318-318"];
m87_209 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularCollectionReferences()", file="ReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularCollectionReferences()", span="632-632"];
m87_210 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularCollectionReferences()", file="ReflectionDelegateFactory.cs", label="Type type = typeof(Workspace)", span="634-634"];
m87_211 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularCollectionReferences()", file="ReflectionDelegateFactory.cs", label="JsonSchemaGenerator jsonSchemaGenerator = new JsonSchemaGenerator()", span="635-635"];
m87_213 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularCollectionReferences()", file="ReflectionDelegateFactory.cs", label="JsonSchema jsonSchema = jsonSchemaGenerator.Generate(type)", span="638-638"];
m87_212 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularCollectionReferences()", file="ReflectionDelegateFactory.cs", label="jsonSchemaGenerator.UndefinedSchemaIdHandling = UndefinedSchemaIdHandling.UseTypeName", span="637-637"];
m87_214 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularCollectionReferences()", file="ReflectionDelegateFactory.cs", label="Assert.IsNotNull(jsonSchema)", span="641-641"];
m87_215 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularCollectionReferences()", file="ReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularCollectionReferences()", span="632-632"];
m87_216 [cluster="Unk.IsNotNull", file="ReflectionDelegateFactory.cs", label="Entry Unk.IsNotNull", span=""];
m87_10 [cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.JsonSchemaGenerator()", file="ReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaGenerator.JsonSchemaGenerator()", span="50-50"];
m87_132 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(System.Type)", file="ReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(System.Type)", span="45-45"];
m87_11 [cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.Generate(System.Type)", file="ReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaGenerator.Generate(System.Type)", span="128-128"];
m87_55 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.MissingSchemaIdHandlingTest()", file="ReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.MissingSchemaIdHandlingTest()", span="247-247"];
m87_56 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.MissingSchemaIdHandlingTest()", file="ReflectionDelegateFactory.cs", label="JsonSchemaGenerator generator = new JsonSchemaGenerator()", span="249-249"];
m87_57 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.MissingSchemaIdHandlingTest()", file="ReflectionDelegateFactory.cs", label="JsonSchema schema = generator.Generate(typeof(Store))", span="251-251"];
m87_59 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.MissingSchemaIdHandlingTest()", file="ReflectionDelegateFactory.cs", label="generator.UndefinedSchemaIdHandling = UndefinedSchemaIdHandling.UseTypeName", span="254-254"];
m87_60 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.MissingSchemaIdHandlingTest()", file="ReflectionDelegateFactory.cs", label="schema = generator.Generate(typeof(Store))", span="255-255"];
m87_62 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.MissingSchemaIdHandlingTest()", file="ReflectionDelegateFactory.cs", label="generator.UndefinedSchemaIdHandling = UndefinedSchemaIdHandling.UseAssemblyQualifiedName", span="258-258"];
m87_63 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.MissingSchemaIdHandlingTest()", file="ReflectionDelegateFactory.cs", label="schema = generator.Generate(typeof(Store))", span="259-259"];
m87_58 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.MissingSchemaIdHandlingTest()", file="ReflectionDelegateFactory.cs", label="Assert.AreEqual(null, schema.Id)", span="252-252"];
m87_61 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.MissingSchemaIdHandlingTest()", file="ReflectionDelegateFactory.cs", label="Assert.AreEqual(typeof(Store).FullName, schema.Id)", span="256-256"];
m87_64 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.MissingSchemaIdHandlingTest()", file="ReflectionDelegateFactory.cs", label="Assert.AreEqual(typeof(Store).AssemblyQualifiedName, schema.Id)", span="260-260"];
m87_65 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.MissingSchemaIdHandlingTest()", file="ReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.MissingSchemaIdHandlingTest()", span="247-247"];
m87_156 [cluster="Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", file="ReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", span="83-83"];
m87_32 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_UserNullable()", file="ReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_UserNullable()", span="163-163"];
m87_33 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_UserNullable()", file="ReflectionDelegateFactory.cs", label="JsonSchemaGenerator generator = new JsonSchemaGenerator()", span="165-165"];
m87_34 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_UserNullable()", file="ReflectionDelegateFactory.cs", label="JsonSchema schema = generator.Generate(typeof(UserNullable))", span="166-166"];
m87_35 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_UserNullable()", file="ReflectionDelegateFactory.cs", label="string json = schema.ToString()", span="168-168"];
m87_36 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_UserNullable()", file="ReflectionDelegateFactory.cs", label="StringAssert.AreEqual(@''{\r\n  ''''type'''': ''''object'''',\r\n  ''''properties'''': {\r\n    ''''Id'''': {\r\n      ''''required'''': true,\r\n      ''''type'''': ''''string''''\r\n    },\r\n    ''''FName'''': {\r\n      ''''required'''': true,\r\n      ''''type'''': [\r\n        ''''string'''',\r\n        ''''null''''\r\n      ]\r\n    },\r\n    ''''LName'''': {\r\n      ''''required'''': true,\r\n      ''''type'''': [\r\n        ''''string'''',\r\n        ''''null''''\r\n      ]\r\n    },\r\n    ''''RoleId'''': {\r\n      ''''required'''': true,\r\n      ''''type'''': ''''integer''''\r\n    },\r\n    ''''NullableRoleId'''': {\r\n      ''''required'''': true,\r\n      ''''type'''': [\r\n        ''''integer'''',\r\n        ''''null''''\r\n      ]\r\n    },\r\n    ''''NullRoleId'''': {\r\n      ''''required'''': true,\r\n      ''''type'''': [\r\n        ''''integer'''',\r\n        ''''null''''\r\n      ]\r\n    },\r\n    ''''Active'''': {\r\n      ''''required'''': true,\r\n      ''''type'''': [\r\n        ''''boolean'''',\r\n        ''''null''''\r\n      ]\r\n    }\r\n  }\r\n}'', json)", span="170-217"];
m87_37 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_UserNullable()", file="ReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_UserNullable()", span="163-163"];
m87_155 [cluster="System.IO.DirectoryInfo.DirectoryInfo(string)", file="ReflectionDelegateFactory.cs", label="Entry System.IO.DirectoryInfo.DirectoryInfo(string)", span="0-0"];
m87_13 [cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="ReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="327-327"];
m87_200 [cluster="lambda expression", file="ReflectionDelegateFactory.cs", label="Entry lambda expression", span="576-576"];
m87_70 [cluster="lambda expression", file="ReflectionDelegateFactory.cs", label="Entry lambda expression", span="266-270"];
m87_71 [cluster="lambda expression", file="ReflectionDelegateFactory.cs", label="JsonSchemaGenerator generator = new JsonSchemaGenerator()", span="268-268"];
m87_72 [cluster="lambda expression", file="ReflectionDelegateFactory.cs", label="generator.Generate(typeof(CircularReferenceClass))", span="269-269"];
m87_73 [cluster="lambda expression", file="ReflectionDelegateFactory.cs", label="Exit lambda expression", span="266-270"];
m87_135 [cluster="lambda expression", file="ReflectionDelegateFactory.cs", label="Entry lambda expression", span="363-363"];
m87_136 [cluster="lambda expression", file="ReflectionDelegateFactory.cs", label="m.PropertyName != ''Root''", span="363-363"];
m87_137 [cluster="lambda expression", file="ReflectionDelegateFactory.cs", label="Exit lambda expression", span="363-363"];
m87_163 [cluster="lambda expression", file="ReflectionDelegateFactory.cs", label="errors.Add(args.Message)", span="467-467"];
m87_162 [cluster="lambda expression", file="ReflectionDelegateFactory.cs", label="Entry lambda expression", span="467-467"];
m87_164 [cluster="lambda expression", file="ReflectionDelegateFactory.cs", label="Exit lambda expression", span="467-467"];
m87_201 [cluster="lambda expression", file="ReflectionDelegateFactory.cs", label="errors.Add(args.Message)", span="576-576"];
m87_202 [cluster="lambda expression", file="ReflectionDelegateFactory.cs", label="Exit lambda expression", span="576-576"];
m87_92 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForType()", file="ReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForType()", span="301-301"];
m87_93 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForType()", file="ReflectionDelegateFactory.cs", label="JsonSchemaGenerator generator = new JsonSchemaGenerator()", span="303-303"];
m87_94 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForType()", file="ReflectionDelegateFactory.cs", label="generator.UndefinedSchemaIdHandling = UndefinedSchemaIdHandling.UseTypeName", span="304-304"];
m87_95 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForType()", file="ReflectionDelegateFactory.cs", label="JsonSchema schema = generator.Generate(typeof(Type))", span="306-306"];
m87_96 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForType()", file="ReflectionDelegateFactory.cs", label="Assert.AreEqual(JsonSchemaType.String, schema.Type)", span="308-308"];
m87_99 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForType()", file="ReflectionDelegateFactory.cs", label="Assert.IsTrue(v.IsValid(schema))", span="313-313"];
m87_97 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForType()", file="ReflectionDelegateFactory.cs", label="string json = JsonConvert.SerializeObject(typeof(Version), Formatting.Indented)", span="310-310"];
m87_98 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForType()", file="ReflectionDelegateFactory.cs", label="JValue v = new JValue(json)", span="312-312"];
m87_100 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForType()", file="ReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForType()", span="301-301"];
m87_0 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_GenericDictionary()", file="ReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_GenericDictionary()", span="62-62"];
m87_1 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_GenericDictionary()", file="ReflectionDelegateFactory.cs", label="JsonSchemaGenerator generator = new JsonSchemaGenerator()", span="64-64"];
m87_2 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_GenericDictionary()", file="ReflectionDelegateFactory.cs", label="JsonSchema schema = generator.Generate(typeof(Dictionary<string, List<string>>))", span="65-65"];
m87_3 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_GenericDictionary()", file="ReflectionDelegateFactory.cs", label="string json = schema.ToString()", span="67-67"];
m87_8 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_GenericDictionary()", file="ReflectionDelegateFactory.cs", label="Assert.IsTrue(o.IsValid(schema))", span="94-94"];
m87_4 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_GenericDictionary()", file="ReflectionDelegateFactory.cs", label="StringAssert.AreEqual(@''{\r\n  ''''type'''': ''''object'''',\r\n  ''''additionalProperties'''': {\r\n    ''''type'''': [\r\n      ''''array'''',\r\n      ''''null''''\r\n    ],\r\n    ''''items'''': {\r\n      ''''type'''': [\r\n        ''''string'''',\r\n        ''''null''''\r\n      ]\r\n    }\r\n  }\r\n}'', json)", span="69-83"];
m87_5 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_GenericDictionary()", file="ReflectionDelegateFactory.cs", label="Dictionary<string, List<string>> value = new Dictionary<string, List<string>>\r\n            {\r\n                { ''HasValue'', new List<string>() { ''first'', ''second'', null } },\r\n                { ''NoValue'', null }\r\n            }", span="85-89"];
m87_6 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_GenericDictionary()", file="ReflectionDelegateFactory.cs", label="string valueJson = JsonConvert.SerializeObject(value, Formatting.Indented)", span="91-91"];
m87_7 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_GenericDictionary()", file="ReflectionDelegateFactory.cs", label="JObject o = JObject.Parse(valueJson)", span="92-92"];
m87_9 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_GenericDictionary()", file="ReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_GenericDictionary()", span="62-62"];
m87_133 [cluster="Unk.Where", file="ReflectionDelegateFactory.cs", label="Entry Unk.Where", span=""];
m87_138 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForDirectoryInfo()", file="ReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForDirectoryInfo()", span="370-370"];
m87_139 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForDirectoryInfo()", file="ReflectionDelegateFactory.cs", label="JsonSchemaGenerator generator = new JsonSchemaGenerator()", span="372-372"];
m87_140 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForDirectoryInfo()", file="ReflectionDelegateFactory.cs", label="generator.UndefinedSchemaIdHandling = UndefinedSchemaIdHandling.UseTypeName", span="373-373"];
m87_141 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForDirectoryInfo()", file="ReflectionDelegateFactory.cs", label="generator.ContractResolver = new CustomDirectoryInfoMapper\r\n            {\r\n#if !(NETFX_CORE || PORTABLE || ASPNETCORE50)\r\n                IgnoreSerializableAttribute = true\r\n#endif\r\n            }", span="374-379"];
m87_142 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForDirectoryInfo()", file="ReflectionDelegateFactory.cs", label="JsonSchema schema = generator.Generate(typeof(DirectoryInfo), true)", span="381-381"];
m87_143 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForDirectoryInfo()", file="ReflectionDelegateFactory.cs", label="string json = schema.ToString()", span="383-383"];
m87_152 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForDirectoryInfo()", file="ReflectionDelegateFactory.cs", label="jsonWriter.Token.Validate(schema, (sender, args) => errors.Add(args.Message))", span="467-467"];
m87_144 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForDirectoryInfo()", file="ReflectionDelegateFactory.cs", label="StringAssert.AreEqual(@''{\r\n  ''''id'''': ''''System.IO.DirectoryInfo'''',\r\n  ''''required'''': true,\r\n  ''''type'''': [\r\n    ''''object'''',\r\n    ''''null''''\r\n  ],\r\n  ''''additionalProperties'''': false,\r\n  ''''properties'''': {\r\n    ''''Name'''': {\r\n      ''''required'''': true,\r\n      ''''type'''': [\r\n        ''''string'''',\r\n        ''''null''''\r\n      ]\r\n    },\r\n    ''''Parent'''': {\r\n      ''''$ref'''': ''''System.IO.DirectoryInfo''''\r\n    },\r\n    ''''Exists'''': {\r\n      ''''required'''': true,\r\n      ''''type'''': ''''boolean''''\r\n    },\r\n    ''''FullName'''': {\r\n      ''''required'''': true,\r\n      ''''type'''': [\r\n        ''''string'''',\r\n        ''''null''''\r\n      ]\r\n    },\r\n    ''''Extension'''': {\r\n      ''''required'''': true,\r\n      ''''type'''': [\r\n        ''''string'''',\r\n        ''''null''''\r\n      ]\r\n    },\r\n    ''''CreationTime'''': {\r\n      ''''required'''': true,\r\n      ''''type'''': ''''string''''\r\n    },\r\n    ''''CreationTimeUtc'''': {\r\n      ''''required'''': true,\r\n      ''''type'''': ''''string''''\r\n    },\r\n    ''''LastAccessTime'''': {\r\n      ''''required'''': true,\r\n      ''''type'''': ''''string''''\r\n    },\r\n    ''''LastAccessTimeUtc'''': {\r\n      ''''required'''': true,\r\n      ''''type'''': ''''string''''\r\n    },\r\n    ''''LastWriteTime'''': {\r\n      ''''required'''': true,\r\n      ''''type'''': ''''string''''\r\n    },\r\n    ''''LastWriteTimeUtc'''': {\r\n      ''''required'''': true,\r\n      ''''type'''': ''''string''''\r\n    },\r\n    ''''Attributes'''': {\r\n      ''''required'''': true,\r\n      ''''type'''': ''''integer''''\r\n    }\r\n  }\r\n}'', json)", span="385-451"];
m87_145 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForDirectoryInfo()", file="ReflectionDelegateFactory.cs", label="DirectoryInfo temp = new DirectoryInfo(@''c:\temp'')", span="453-453"];
m87_146 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForDirectoryInfo()", file="ReflectionDelegateFactory.cs", label="JTokenWriter jsonWriter = new JTokenWriter()", span="455-455"];
m87_150 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForDirectoryInfo()", file="ReflectionDelegateFactory.cs", label="serializer.Serialize(jsonWriter, temp)", span="464-464"];
m87_147 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForDirectoryInfo()", file="ReflectionDelegateFactory.cs", label="JsonSerializer serializer = new JsonSerializer()", span="456-456"];
m87_148 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForDirectoryInfo()", file="ReflectionDelegateFactory.cs", label="serializer.Converters.Add(new IsoDateTimeConverter())", span="457-457"];
m87_149 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForDirectoryInfo()", file="ReflectionDelegateFactory.cs", label="serializer.ContractResolver = new CustomDirectoryInfoMapper\r\n            {\r\n#if !(NETFX_CORE || PORTABLE || ASPNETCORE50)\r\n                IgnoreSerializableInterface = true\r\n#endif\r\n            }", span="458-463"];
m87_151 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForDirectoryInfo()", file="ReflectionDelegateFactory.cs", label="List<string> errors = new List<string>()", span="466-466"];
m87_153 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForDirectoryInfo()", file="ReflectionDelegateFactory.cs", label="Assert.AreEqual(0, errors.Count)", span="469-469"];
m87_154 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForDirectoryInfo()", file="ReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForDirectoryInfo()", span="370-370"];
m87_118 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CustomDirectoryInfoMapper.CreateContract(System.Type)", file="ReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CustomDirectoryInfoMapper.CreateContract(System.Type)", span="350-350"];
m87_119 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CustomDirectoryInfoMapper.CreateContract(System.Type)", file="ReflectionDelegateFactory.cs", label="objectType == typeof(DirectoryInfo)", span="352-352"];
m87_120 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CustomDirectoryInfoMapper.CreateContract(System.Type)", file="ReflectionDelegateFactory.cs", label="return base.CreateObjectContract(objectType);", span="353-353"];
m87_121 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CustomDirectoryInfoMapper.CreateContract(System.Type)", file="ReflectionDelegateFactory.cs", label="return base.CreateContract(objectType);", span="355-355"];
m87_122 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CustomDirectoryInfoMapper.CreateContract(System.Type)", file="ReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CustomDirectoryInfoMapper.CreateContract(System.Type)", span="350-350"];
m87_38 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_RequiredMembersClass()", file="ReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_RequiredMembersClass()", span="221-221"];
m87_39 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_RequiredMembersClass()", file="ReflectionDelegateFactory.cs", label="JsonSchemaGenerator generator = new JsonSchemaGenerator()", span="223-223"];
m87_40 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_RequiredMembersClass()", file="ReflectionDelegateFactory.cs", label="JsonSchema schema = generator.Generate(typeof(RequiredMembersClass))", span="224-224"];
m87_41 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_RequiredMembersClass()", file="ReflectionDelegateFactory.cs", label="Assert.AreEqual(JsonSchemaType.String, schema.Properties[''FirstName''].Type)", span="226-226"];
m87_42 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_RequiredMembersClass()", file="ReflectionDelegateFactory.cs", label="Assert.AreEqual(JsonSchemaType.String | JsonSchemaType.Null, schema.Properties[''MiddleName''].Type)", span="227-227"];
m87_43 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_RequiredMembersClass()", file="ReflectionDelegateFactory.cs", label="Assert.AreEqual(JsonSchemaType.String | JsonSchemaType.Null, schema.Properties[''LastName''].Type)", span="228-228"];
m87_44 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_RequiredMembersClass()", file="ReflectionDelegateFactory.cs", label="Assert.AreEqual(JsonSchemaType.String, schema.Properties[''BirthDate''].Type)", span="229-229"];
m87_45 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_RequiredMembersClass()", file="ReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_RequiredMembersClass()", span="221-221"];
m87_131 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="ReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", span="1104-1104"];
m87_69 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="ReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="354-354"];
m87_66 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceError()", file="ReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceError()", span="264-264"];
m87_67 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceError()", file="ReflectionDelegateFactory.cs", label="ExceptionAssert.Throws<Exception>(() =>\r\n            {\r\n                JsonSchemaGenerator generator = new JsonSchemaGenerator();\r\n                generator.Generate(typeof(CircularReferenceClass));\r\n            }, @''Unresolved circular reference for type 'Newtonsoft.Json.Tests.TestObjects.CircularReferenceClass'. Explicitly define an Id for the type using a JsonObject/JsonArray attribute or automatically generate a type Id using the UndefinedSchemaIdHandling property.'')", span="266-270"];
m87_68 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceError()", file="ReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceError()", span="264-264"];
m87_217 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithMixedRequires()", file="ReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithMixedRequires()", span="645-645"];
m87_218 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithMixedRequires()", file="ReflectionDelegateFactory.cs", label="JsonSchemaGenerator jsonSchemaGenerator = new JsonSchemaGenerator()", span="647-647"];
m87_219 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithMixedRequires()", file="ReflectionDelegateFactory.cs", label="jsonSchemaGenerator.UndefinedSchemaIdHandling = UndefinedSchemaIdHandling.UseTypeName", span="649-649"];
m87_220 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithMixedRequires()", file="ReflectionDelegateFactory.cs", label="JsonSchema jsonSchema = jsonSchemaGenerator.Generate(typeof(CircularReferenceClass))", span="650-650"];
m87_221 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithMixedRequires()", file="ReflectionDelegateFactory.cs", label="string json = jsonSchema.ToString()", span="651-651"];
m87_222 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithMixedRequires()", file="ReflectionDelegateFactory.cs", label="StringAssert.AreEqual(@''{\r\n  ''''id'''': ''''Newtonsoft.Json.Tests.TestObjects.CircularReferenceClass'''',\r\n  ''''type'''': [\r\n    ''''object'''',\r\n    ''''null''''\r\n  ],\r\n  ''''properties'''': {\r\n    ''''Name'''': {\r\n      ''''required'''': true,\r\n      ''''type'''': ''''string''''\r\n    },\r\n    ''''Child'''': {\r\n      ''''$ref'''': ''''Newtonsoft.Json.Tests.TestObjects.CircularReferenceClass''''\r\n    }\r\n  }\r\n}'', json)", span="653-668"];
m87_223 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithMixedRequires()", file="ReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithMixedRequires()", span="645-645"];
m87_84 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithExplicitId()", file="ReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithExplicitId()", span="288-288"];
m87_85 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithExplicitId()", file="ReflectionDelegateFactory.cs", label="JsonSchemaGenerator generator = new JsonSchemaGenerator()", span="290-290"];
m87_86 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithExplicitId()", file="ReflectionDelegateFactory.cs", label="JsonSchema schema = generator.Generate(typeof(CircularReferenceWithIdClass))", span="292-292"];
m87_87 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithExplicitId()", file="ReflectionDelegateFactory.cs", label="Assert.AreEqual(JsonSchemaType.String | JsonSchemaType.Null, schema.Properties[''Name''].Type)", span="294-294"];
m87_88 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithExplicitId()", file="ReflectionDelegateFactory.cs", label="Assert.AreEqual(''MyExplicitId'', schema.Id)", span="295-295"];
m87_89 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithExplicitId()", file="ReflectionDelegateFactory.cs", label="Assert.AreEqual(JsonSchemaType.Object | JsonSchemaType.Null, schema.Properties[''Child''].Type)", span="296-296"];
m87_90 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithExplicitId()", file="ReflectionDelegateFactory.cs", label="Assert.AreEqual(schema, schema.Properties[''Child''])", span="297-297"];
m87_91 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithExplicitId()", file="ReflectionDelegateFactory.cs", label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithExplicitId()", span="288-288"];
m87_123 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="ReflectionDelegateFactory.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", span="357-357"];
m87_237 [file="ReflectionDelegateFactory.cs", label="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CustomDirectoryInfoMapper", span=""];
m87_238 [file="ReflectionDelegateFactory.cs", label=errors, span=""];
m87_239 [file="ReflectionDelegateFactory.cs", label=errors, span=""];
m88_7 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="ReflectionObject.cs", label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="447-447"];
m88_27 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionObject.cs", label="Entry Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="100-100"];
m88_28 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionObject.cs", label="throw new NotSupportedException();", span="102-102"];
m88_29 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionObject.cs", label="Exit Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="100-100"];
m88_44 [cluster="Newtonsoft.Json.Linq.JToken.Load(Newtonsoft.Json.JsonReader)", file="ReflectionObject.cs", label="Entry Newtonsoft.Json.Linq.JToken.Load(Newtonsoft.Json.JsonReader)", span="2221-2221"];
m88_49 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.CanConvert(System.Type)", file="ReflectionObject.cs", label="Entry Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.CanConvert(System.Type)", span="130-130"];
m88_50 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.CanConvert(System.Type)", file="ReflectionObject.cs", label="return typeof(ICollection).IsAssignableFrom(objectType);", span="132-132"];
m88_51 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.CanConvert(System.Type)", file="ReflectionObject.cs", label="Exit Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.CanConvert(System.Type)", span="130-130"];
m88_0 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.Test()", file="ReflectionObject.cs", label="Entry Newtonsoft.Json.Tests.Issues.Issue1576.Test()", span="46-46"];
m88_1 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.Test()", file="ReflectionObject.cs", label="var settings = new JsonSerializerSettings()\r\n            {\r\n                ContractResolver = new CustomContractResolver()\r\n            }", span="48-51"];
m88_2 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.Test()", file="ReflectionObject.cs", label="var result = JsonConvert.DeserializeObject<TestClass>(''{ 'Items': '11' }'', settings)", span="53-53"];
m88_3 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.Test()", file="ReflectionObject.cs", label="Assert.IsNotNull(result)", span="55-55"];
m88_4 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.Test()", file="ReflectionObject.cs", label="Assert.AreEqual(result.Items.Count, 1)", span="56-56"];
m88_5 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.Test()", file="ReflectionObject.cs", label="Assert.AreEqual(result.Items[0], 11)", span="57-57"];
m88_6 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.Test()", file="ReflectionObject.cs", label="Exit Newtonsoft.Json.Tests.Issues.Issue1576.Test()", span="46-46"];
m88_19 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.CustomContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="ReflectionObject.cs", label="Entry Newtonsoft.Json.Tests.Issues.Issue1576.CustomContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", span="83-83"];
m88_20 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.CustomContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="ReflectionObject.cs", label="var property = base.CreateProperty(member, memberSerialization)", span="85-85"];
m88_21 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.CustomContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="ReflectionObject.cs", label="member.Name == ''Items''", span="87-87"];
m88_22 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.CustomContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="ReflectionObject.cs", label="property.Converter = new OneItemListJsonConverter()", span="89-89"];
m88_23 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.CustomContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="ReflectionObject.cs", label="return property;", span="92-92"];
m88_24 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.CustomContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="ReflectionObject.cs", label="Exit Newtonsoft.Json.Tests.Issues.Issue1576.CustomContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", span="83-83"];
m88_31 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionObject.cs", label="Entry Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="105-105"];
m88_32 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionObject.cs", label="var token = JToken.Load(reader)", span="107-107"];
m88_34 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionObject.cs", label="return token.ToObject(objectType, serializer);", span="110-110"];
m88_37 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionObject.cs", label="var list = array.ToObject(objectType, serializer) as IEnumerable", span="116-116"];
m88_38 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionObject.cs", label="var existing = existingValue as IList", span="117-117"];
m88_33 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionObject.cs", label="token.Type == JTokenType.Array", span="108-108"];
m88_36 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionObject.cs", label="array.Add(token)", span="114-114"];
m88_35 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionObject.cs", label="var array = new JArray()", span="113-113"];
m88_39 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionObject.cs", label="list != null && existing != null", span="119-119"];
m88_40 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionObject.cs", label=list, span="121-121"];
m88_42 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionObject.cs", label="return list;", span="127-127"];
m88_41 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionObject.cs", label="existing.Add(item)", span="123-123"];
m88_43 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionObject.cs", label="Exit Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="105-105"];
m88_45 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type, Newtonsoft.Json.JsonSerializer)", file="ReflectionObject.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToObject(System.Type, Newtonsoft.Json.JsonSerializer)", span="2065-2065"];
m88_30 [cluster="System.NotSupportedException.NotSupportedException()", file="ReflectionObject.cs", label="Entry System.NotSupportedException.NotSupportedException()", span="0-0"];
m88_47 [cluster="Newtonsoft.Json.Linq.JArray.Add(Newtonsoft.Json.Linq.JToken)", file="ReflectionObject.cs", label="Entry Newtonsoft.Json.Linq.JArray.Add(Newtonsoft.Json.Linq.JToken)", span="338-338"];
m88_11 [cluster="Unk.AreEqual", file="ReflectionObject.cs", label="Entry Unk.AreEqual", span=""];
m88_26 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.OneItemListJsonConverter()", file="ReflectionObject.cs", label="Entry Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.OneItemListJsonConverter()", span="96-96"];
m88_10 [cluster="Unk.IsNotNull", file="ReflectionObject.cs", label="Entry Unk.IsNotNull", span=""];
m88_18 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="ReflectionObject.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="703-703"];
m88_25 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="ReflectionObject.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", span="1385-1385"];
m88_52 [cluster="System.Type.IsAssignableFrom(System.Type)", file="ReflectionObject.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m88_9 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="ReflectionObject.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="766-766"];
m88_46 [cluster="Newtonsoft.Json.Linq.JArray.JArray()", file="ReflectionObject.cs", label="Entry Newtonsoft.Json.Linq.JArray.JArray()", span="59-59"];
m88_48 [cluster="System.Collections.IList.Add(object)", file="ReflectionObject.cs", label="Entry System.Collections.IList.Add(object)", span="0-0"];
m88_8 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.CustomContractResolver.CustomContractResolver()", file="ReflectionObject.cs", label="Entry Newtonsoft.Json.Tests.Issues.Issue1576.CustomContractResolver.CustomContractResolver()", span="81-81"];
m88_12 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.Test_WithJsonConverterAttribute()", file="ReflectionObject.cs", label="Entry Newtonsoft.Json.Tests.Issues.Issue1576.Test_WithJsonConverterAttribute()", span="61-61"];
m88_13 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.Test_WithJsonConverterAttribute()", file="ReflectionObject.cs", label="var result = JsonConvert.DeserializeObject<TestClassWithJsonConverter>(''{ 'Items': '11' }'')", span="63-63"];
m88_14 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.Test_WithJsonConverterAttribute()", file="ReflectionObject.cs", label="Assert.IsNotNull(result)", span="65-65"];
m88_15 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.Test_WithJsonConverterAttribute()", file="ReflectionObject.cs", label="Assert.AreEqual(result.Items.Count, 1)", span="66-66"];
m88_16 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.Test_WithJsonConverterAttribute()", file="ReflectionObject.cs", label="Assert.AreEqual(result.Items[0], 11)", span="67-67"];
m88_17 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.Test_WithJsonConverterAttribute()", file="ReflectionObject.cs", label="Exit Newtonsoft.Json.Tests.Issues.Issue1576.Test_WithJsonConverterAttribute()", span="61-61"];
m88_53 [file="ReflectionObject.cs", label="Newtonsoft.Json.Tests.Issues.Issue1576.CustomContractResolver", span=""];
m89_7 [cluster="Unk.CreateComment", file="ReflectionUtils.cs", label="Entry Unk.CreateComment", span=""];
m89_452 [cluster="XmlDocument.cstr", file="ReflectionUtils.cs", label="Entry XmlDocument.cstr", span=""];
m89_160 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.GetLocalName(string)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.GetLocalName(string)", span="136-136"];
m89_507 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", span="1243-1243"];
m89_509 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="ReflectionUtils.cs", label="reader.TokenType == JsonToken.String", span="1245-1245"];
m89_510 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="ReflectionUtils.cs", label="return reader.Value.ToString();", span="1247-1247"];
m89_511 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="ReflectionUtils.cs", label="reader.TokenType == JsonToken.Integer", span="1249-1249"];
m89_512 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="ReflectionUtils.cs", label="return XmlConvert.ToString(Convert.ToInt64(reader.Value, CultureInfo.InvariantCulture));", span="1251-1251"];
m89_513 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="ReflectionUtils.cs", label="reader.TokenType == JsonToken.Float", span="1253-1253"];
m89_514 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="ReflectionUtils.cs", label="return XmlConvert.ToString(Convert.ToDouble(reader.Value, CultureInfo.InvariantCulture));", span="1255-1255"];
m89_515 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="ReflectionUtils.cs", label="reader.TokenType == JsonToken.Boolean", span="1257-1257"];
m89_516 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="ReflectionUtils.cs", label="return XmlConvert.ToString(Convert.ToBoolean(reader.Value, CultureInfo.InvariantCulture));", span="1259-1259"];
m89_517 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="ReflectionUtils.cs", label="reader.TokenType == JsonToken.Date", span="1261-1261"];
m89_518 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="ReflectionUtils.cs", label="DateTime d = Convert.ToDateTime(reader.Value, CultureInfo.InvariantCulture)", span="1263-1263"];
m89_520 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="ReflectionUtils.cs", label="reader.TokenType == JsonToken.Null", span="1270-1270"];
m89_522 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="ReflectionUtils.cs", label="throw new Exception(''Cannot get an XML string value from token type '{0}'.''.FormatWith(CultureInfo.InvariantCulture, reader.TokenType));", span="1276-1276"];
m89_519 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="ReflectionUtils.cs", label="return XmlConvert.ToString(d, DateTimeUtils.ToSerializationMode(d.Kind));", span="1265-1265"];
m89_521 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="ReflectionUtils.cs", label="return null;", span="1272-1272"];
m89_523 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", span="1243-1243"];
m89_28 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateProcessingInstruction(string, string)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateProcessingInstruction(string, string)", span="84-84"];
m89_29 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateProcessingInstruction(string, string)", file="ReflectionUtils.cs", label="return new XmlNodeWrapper(_document.CreateProcessingInstruction(target, data));", span="86-86"];
m89_30 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateProcessingInstruction(string, string)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateProcessingInstruction(string, string)", span="84-84"];
m89_409 [cluster="Unk.All", file="ReflectionUtils.cs", label="Entry Unk.All", span=""];
m89_226 [cluster="XAttributeWrapper.cstr", file="ReflectionUtils.cs", label="Entry XAttributeWrapper.cstr", span=""];
m89_123 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateComment(string)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateComment(string)", span="383-383"];
m89_124 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateComment(string)", file="ReflectionUtils.cs", label="return new XObjectWrapper(new XComment(text));", span="385-385"];
m89_125 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateComment(string)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateComment(string)", span="383-383"];
m89_90 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateComment(string)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateComment(string)", span="281-281"];
m89_91 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateComment(string)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateComment(string)", span="281-281"];
m89_102 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateProcessingInstruction(string, string)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateProcessingInstruction(string, string)", span="287-287"];
m89_103 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateProcessingInstruction(string, string)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateProcessingInstruction(string, string)", span="287-287"];
m89_474 [cluster="object.ToString()", file="ReflectionUtils.cs", label="Entry object.ToString()", span="0-0"];
m89_663 [cluster="string.StartsWith(string, System.StringComparison)", file="ReflectionUtils.cs", label="Entry string.StartsWith(string, System.StringComparison)", span="0-0"];
m89_189 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", span="578-578"];
m89_190 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="ReflectionUtils.cs", label="node is XDocument", span="580-580"];
m89_191 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="ReflectionUtils.cs", label="return new XDocumentWrapper((XDocument)node);", span="581-581"];
m89_192 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="ReflectionUtils.cs", label="node is XElement", span="582-582"];
m89_193 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="ReflectionUtils.cs", label="return new XElementWrapper((XElement)node);", span="583-583"];
m89_194 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="ReflectionUtils.cs", label="node is XContainer", span="584-584"];
m89_195 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="ReflectionUtils.cs", label="return new XContainerWrapper((XContainer)node);", span="585-585"];
m89_196 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="ReflectionUtils.cs", label="node is XProcessingInstruction", span="586-586"];
m89_197 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="ReflectionUtils.cs", label="return new XProcessingInstructionWrapper((XProcessingInstruction)node);", span="587-587"];
m89_198 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="ReflectionUtils.cs", label="node is XText", span="588-588"];
m89_199 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="ReflectionUtils.cs", label="return new XTextWrapper((XText)node);", span="589-589"];
m89_200 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="ReflectionUtils.cs", label="node is XComment", span="590-590"];
m89_201 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="ReflectionUtils.cs", label="return new XCommentWrapper((XComment)node);", span="591-591"];
m89_202 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="ReflectionUtils.cs", label="node is XAttribute", span="592-592"];
m89_203 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="ReflectionUtils.cs", label="return new XAttributeWrapper((XAttribute) node);", span="593-593"];
m89_204 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="ReflectionUtils.cs", label="return new XObjectWrapper(node);", span="595-595"];
m89_205 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", span="578-578"];
m89_156 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string, string)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string, string)", span="423-423"];
m89_157 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string, string)", file="ReflectionUtils.cs", label="string localName = MiscellaneousUtils.GetLocalName(qualifiedName)", span="425-425"];
m89_158 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string, string)", file="ReflectionUtils.cs", label="return new XElementWrapper(new XElement(XName.Get(localName, namespaceUri)));", span="426-426"];
m89_159 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string, string)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string, string)", span="423-423"];
m89_453 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", span="1176-1176"];
m89_477 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="ReflectionUtils.cs", label="string.IsNullOrEmpty(propertyName)", span="1178-1178"];
m89_479 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="ReflectionUtils.cs", label="Dictionary<string, string> attributeNameValues = ReadAttributeElements(reader, manager)", span="1181-1181"];
m89_480 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="ReflectionUtils.cs", label="string elementPrefix = MiscellaneousUtils.GetPrefix(propertyName)", span="1183-1183"];
m89_481 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="ReflectionUtils.cs", label="propertyName.StartsWith(''@'')", span="1185-1185"];
m89_482 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="ReflectionUtils.cs", label="var attributeName = propertyName.Substring(1)", span="1187-1187"];
m89_483 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="ReflectionUtils.cs", label="var attributeValue = reader.Value.ToString()", span="1188-1188"];
m89_485 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="ReflectionUtils.cs", label="var attribute = (!string.IsNullOrEmpty(attributePrefix))\r\n                                 ? document.CreateAttribute(attributeName, manager.LookupNamespace(attributePrefix), attributeValue)\r\n                                 : document.CreateAttribute(attributeName, attributeValue)", span="1192-1194"];
m89_486 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="ReflectionUtils.cs", label="((IXmlElement)currentNode).SetAttributeNode(attribute)", span="1196-1196"];
m89_487 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="ReflectionUtils.cs", label="IXmlElement element = CreateElement(propertyName, document, elementPrefix, manager)", span="1200-1200"];
m89_488 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="ReflectionUtils.cs", label="currentNode.AppendChild(element)", span="1202-1202"];
m89_491 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="ReflectionUtils.cs", label="IXmlNode attribute = (!string.IsNullOrEmpty(attributePrefix))\r\n                                 ? document.CreateAttribute(nameValue.Key, manager.LookupNamespace(attributePrefix), nameValue.Value)\r\n                                 : document.CreateAttribute(nameValue.Key, nameValue.Value)", span="1209-1211"];
m89_493 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="ReflectionUtils.cs", label="reader.TokenType == JsonToken.String\r\n            || reader.TokenType == JsonToken.Integer\r\n            || reader.TokenType == JsonToken.Float\r\n            || reader.TokenType == JsonToken.Boolean\r\n            || reader.TokenType == JsonToken.Date", span="1216-1220"];
m89_494 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="ReflectionUtils.cs", label="element.AppendChild(document.CreateTextNode(ConvertTokenToXmlValue(reader)))", span="1222-1222"];
m89_495 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="ReflectionUtils.cs", label="reader.TokenType == JsonToken.Null", span="1224-1224"];
m89_496 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="ReflectionUtils.cs", label="reader.TokenType != JsonToken.EndObject", span="1231-1231"];
m89_497 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="ReflectionUtils.cs", label="manager.PushScope()", span="1233-1233"];
m89_498 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="ReflectionUtils.cs", label="DeserializeNode(reader, document, manager, element)", span="1235-1235"];
m89_499 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="ReflectionUtils.cs", label="manager.PopScope()", span="1237-1237"];
m89_478 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="ReflectionUtils.cs", label="throw new JsonSerializationException(''XmlNodeConverter cannot convert JSON with an empty property name to XML.'');", span="1179-1179"];
m89_489 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="ReflectionUtils.cs", label=attributeNameValues, span="1205-1205"];
m89_484 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="ReflectionUtils.cs", label="var attributePrefix = MiscellaneousUtils.GetPrefix(attributeName)", span="1190-1190"];
m89_492 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="ReflectionUtils.cs", label="element.SetAttributeNode(attribute)", span="1213-1213"];
m89_490 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="ReflectionUtils.cs", label="string attributePrefix = MiscellaneousUtils.GetPrefix(nameValue.Key)", span="1207-1207"];
m89_500 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", span="1176-1176"];
m89_45 [cluster="Unk.CreateAttribute", file="ReflectionUtils.cs", label="Entry Unk.CreateAttribute", span=""];
m89_110 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute(string, string, string)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute(string, string, string)", span="291-291"];
m89_111 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute(string, string, string)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute(string, string, string)", span="291-291"];
m89_546 [cluster="System.Collections.IEnumerable.CastValid<T>()", file="ReflectionUtils.cs", label="Entry System.Collections.IEnumerable.CastValid<T>()", span="43-43"];
m89_165 [cluster="Newtonsoft.Json.Converters.XAttributeWrapper.XAttributeWrapper(XAttribute)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.XAttributeWrapper.XAttributeWrapper(XAttribute)", span="668-668"];
m89_217 [cluster="Newtonsoft.Json.Converters.XAttributeWrapper.XAttributeWrapper(XAttribute)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.XAttributeWrapper.XAttributeWrapper(XAttribute)", span="668-668"];
m89_306 [cluster="JsonSerializationException.cstr", file="ReflectionUtils.cs", label="Entry JsonSerializationException.cstr", span=""];
m89_139 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateSignificantWhitespace(string)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateSignificantWhitespace(string)", span="403-403"];
m89_140 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateSignificantWhitespace(string)", file="ReflectionUtils.cs", label="return new XObjectWrapper(new XText(text));", span="405-405"];
m89_141 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateSignificantWhitespace(string)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateSignificantWhitespace(string)", span="403-403"];
m89_66 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.XmlNodeWrapper(XmlNode)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeWrapper.XmlNodeWrapper(XmlNode)", span="182-182"];
m89_67 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.XmlNodeWrapper(XmlNode)", file="ReflectionUtils.cs", label="_node = node", span="184-184"];
m89_68 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.XmlNodeWrapper(XmlNode)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeWrapper.XmlNodeWrapper(XmlNode)", span="182-182"];
m89_51 [cluster="Newtonsoft.Json.Converters.XmlElementWrapper.XmlElementWrapper(XmlElement)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.XmlElementWrapper.XmlElementWrapper(XmlElement)", span="131-131"];
m89_52 [cluster="Newtonsoft.Json.Converters.XmlElementWrapper.XmlElementWrapper(XmlElement)", file="ReflectionUtils.cs", label="_element = element", span="134-134"];
m89_53 [cluster="Newtonsoft.Json.Converters.XmlElementWrapper.XmlElementWrapper(XmlElement)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.XmlElementWrapper.XmlElementWrapper(XmlElement)", span="131-131"];
m89_316 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", span="900-900"];
m89_317 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="Dictionary<string, List<IXmlNode>> nodesGroupedByName = new Dictionary<string, List<IXmlNode>>()", span="903-903"];
m89_319 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="i < node.ChildNodes.Count", span="905-905"];
m89_320 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="IXmlNode childNode = node.ChildNodes[i]", span="907-907"];
m89_321 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="string nodeName = GetPropertyName(childNode, manager)", span="908-908"];
m89_335 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="SerializeNode(writer, groupedNodes[0], manager, writePropertyName)", span="938-938"];
m89_337 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label=writePropertyName, span="944-944"];
m89_338 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="writer.WritePropertyName(elementNames)", span="945-945"];
m89_339 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="writer.WriteStartArray()", span="947-947"];
m89_342 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="SerializeNode(writer, groupedNodes[i], manager, false)", span="951-951"];
m89_344 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="writer.WriteEndArray()", span="954-954"];
m89_318 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="int i = 0", span="905-905"];
m89_323 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="!nodesGroupedByName.TryGetValue(nodeName, out nodes)", span="911-911"];
m89_325 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="nodesGroupedByName.Add(nodeName, nodes)", span="914-914"];
m89_328 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label=nodesGroupedByName, span="922-922"];
m89_327 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="i++", span="905-905"];
m89_326 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="nodes.Add(childNode)", span="917-917"];
m89_322 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="List<IXmlNode> nodes", span="910-910"];
m89_324 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="nodes = new List<IXmlNode>()", span="913-913"];
m89_329 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="List<IXmlNode> groupedNodes = nodeNameGroup.Value", span="924-924"];
m89_330 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="bool writeArray", span="925-925"];
m89_331 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="groupedNodes.Count == 1", span="927-927"];
m89_332 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="writeArray = IsArray(groupedNodes[0])", span="929-929"];
m89_336 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="string elementNames = nodeNameGroup.Key", span="942-942"];
m89_341 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="i < groupedNodes.Count", span="949-949"];
m89_333 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="writeArray = true", span="933-933"];
m89_334 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="!writeArray", span="936-936"];
m89_340 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="int i = 0", span="949-949"];
m89_343 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="i++", span="949-949"];
m89_345 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", span="900-900"];
m89_11 [cluster="Unk.CreateTextNode", file="ReflectionUtils.cs", label="Entry Unk.CreateTextNode", span=""];
m89_73 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", span="212-212"];
m89_74 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", file="ReflectionUtils.cs", label="node.NodeType", span="214-214"];
m89_76 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", file="ReflectionUtils.cs", label="return new XmlElementWrapper((XmlElement) node);", span="217-217"];
m89_78 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", file="ReflectionUtils.cs", label="return new XmlDeclarationWrapper((XmlDeclaration) node);", span="219-219"];
m89_79 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", file="ReflectionUtils.cs", label="return new XmlNodeWrapper(node);", span="221-221"];
m89_75 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", file="ReflectionUtils.cs", label="XmlNodeType.Element", span="216-216"];
m89_77 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", file="ReflectionUtils.cs", label="XmlNodeType.XmlDeclaration", span="218-218"];
m89_80 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", span="212-212"];
m89_504 [cluster="string.Substring(int)", file="ReflectionUtils.cs", label="Entry string.Substring(int)", span="0-0"];
m89_63 [cluster="Newtonsoft.Json.Converters.XmlDeclarationWrapper.XmlDeclarationWrapper(XmlDeclaration)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.XmlDeclarationWrapper.XmlDeclarationWrapper(XmlDeclaration)", span="154-154"];
m89_64 [cluster="Newtonsoft.Json.Converters.XmlDeclarationWrapper.XmlDeclarationWrapper(XmlDeclaration)", file="ReflectionUtils.cs", label="_declaration = declaration", span="157-157"];
m89_65 [cluster="Newtonsoft.Json.Converters.XmlDeclarationWrapper.XmlDeclarationWrapper(XmlDeclaration)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.XmlDeclarationWrapper.XmlDeclarationWrapper(XmlDeclaration)", span="154-154"];
m89_58 [cluster="Unk.SetAttributeNode", file="ReflectionUtils.cs", label="Entry Unk.SetAttributeNode", span=""];
m89_92 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateTextNode(string)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateTextNode(string)", span="282-282"];
m89_93 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateTextNode(string)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateTextNode(string)", span="282-282"];
m89_171 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="451-451"];
m89_172 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="XDeclarationWrapper declarationWrapper = newChild as XDeclarationWrapper", span="453-453"];
m89_176 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="return base.AppendChild(newChild);", span="461-461"];
m89_173 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="declarationWrapper != null", span="454-454"];
m89_174 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="Document.Declaration = declarationWrapper.Declaration", span="456-456"];
m89_175 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="return declarationWrapper;", span="457-457"];
m89_177 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="451-451"];
m89_528 [cluster="System.Convert.ToDateTime(object, System.IFormatProvider)", file="ReflectionUtils.cs", label="Entry System.Convert.ToDateTime(object, System.IFormatProvider)", span="0-0"];
m89_667 [cluster="Unk.Where", file="ReflectionUtils.cs", label="Entry Unk.Where", span=""];
m89_24 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDeclaration(string, string, string)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDeclaration(string, string, string)", span="79-79"];
m89_25 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDeclaration(string, string, string)", file="ReflectionUtils.cs", label="return new XmlNodeWrapper(_document.CreateXmlDeclaration(version, encoding, standalone));", span="81-81"];
m89_26 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDeclaration(string, string, string)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDeclaration(string, string, string)", span="79-79"];
m89_167 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string, string)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string, string)", span="434-434"];
m89_168 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string, string)", file="ReflectionUtils.cs", label="string localName = MiscellaneousUtils.GetLocalName(qualifiedName)", span="436-436"];
m89_169 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string, string)", file="ReflectionUtils.cs", label="return new XAttributeWrapper(new XAttribute(XName.Get(localName, namespaceUri), value));", span="437-437"];
m89_170 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string, string)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string, string)", span="434-434"];
m89_210 [cluster="Unk.Add", file="ReflectionUtils.cs", label="Entry Unk.Add", span=""];
m89_413 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", span="57-57"];
m89_131 [cluster="XText.cstr", file="ReflectionUtils.cs", label="Entry XText.cstr", span=""];
m89_530 [cluster="System.Exception.Exception(string)", file="ReflectionUtils.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m89_524 [cluster="System.Convert.ToInt64(object, System.IFormatProvider)", file="ReflectionUtils.cs", label="Entry System.Convert.ToInt64(object, System.IFormatProvider)", span="0-0"];
m89_531 [cluster="string.FormatWith(System.IFormatProvider, params object[])", file="ReflectionUtils.cs", label="Entry string.FormatWith(System.IFormatProvider, params object[])", span="47-47"];
m89_54 [cluster="Newtonsoft.Json.Converters.XmlElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.XmlElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", span="137-137"];
m89_55 [cluster="Newtonsoft.Json.Converters.XmlElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="XmlNodeWrapper xmlAttributeWrapper = (XmlNodeWrapper)attribute", span="139-139"];
m89_56 [cluster="Newtonsoft.Json.Converters.XmlElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="_element.SetAttributeNode((XmlAttribute) xmlAttributeWrapper.WrappedNode)", span="141-141"];
m89_57 [cluster="Newtonsoft.Json.Converters.XmlElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.XmlElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", span="137-137"];
m89_273 [cluster="Unk.AddNamespace", file="ReflectionUtils.cs", label="Entry Unk.AddNamespace", span=""];
m89_475 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", span="1412-1412"];
m89_598 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="ReflectionUtils.cs", label="propertyName == DeclarationName", span="1414-1414"];
m89_602 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="ReflectionUtils.cs", label="reader.Read() && reader.TokenType != JsonToken.EndObject", span="1419-1419"];
m89_603 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="ReflectionUtils.cs", label="reader.Value.ToString()", span="1421-1421"];
m89_605 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="ReflectionUtils.cs", label="reader.Read()", span="1424-1424"];
m89_606 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="ReflectionUtils.cs", label="version = reader.Value.ToString()", span="1425-1425"];
m89_608 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="ReflectionUtils.cs", label="reader.Read()", span="1428-1428"];
m89_609 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="ReflectionUtils.cs", label="encoding = reader.Value.ToString()", span="1429-1429"];
m89_611 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="ReflectionUtils.cs", label="reader.Read()", span="1432-1432"];
m89_612 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="ReflectionUtils.cs", label="standalone = reader.Value.ToString()", span="1433-1433"];
m89_613 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="ReflectionUtils.cs", label="throw new JsonSerializationException(''Unexpected property name encountered while deserializing XmlDeclaration: '' + reader.Value);", span="1436-1436"];
m89_614 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="ReflectionUtils.cs", label="IXmlNode declaration = document.CreateXmlDeclaration(version, encoding, standalone)", span="1440-1440"];
m89_615 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="ReflectionUtils.cs", label="currentNode.AppendChild(declaration)", span="1441-1441"];
m89_616 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="ReflectionUtils.cs", label="IXmlNode instruction = document.CreateProcessingInstruction(propertyName.Substring(1), reader.Value.ToString())", span="1445-1445"];
m89_617 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="ReflectionUtils.cs", label="currentNode.AppendChild(instruction)", span="1446-1446"];
m89_599 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="ReflectionUtils.cs", label="string version = null", span="1416-1416"];
m89_600 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="ReflectionUtils.cs", label="string encoding = null", span="1417-1417"];
m89_601 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="ReflectionUtils.cs", label="string standalone = null", span="1418-1418"];
m89_604 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="ReflectionUtils.cs", label="''@version''", span="1423-1423"];
m89_607 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="ReflectionUtils.cs", label="''@encoding''", span="1427-1427"];
m89_610 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="ReflectionUtils.cs", label="''@standalone''", span="1431-1431"];
m89_618 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", span="1412-1412"];
m89_213 [cluster="Newtonsoft.Json.Converters.XObjectWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.XObjectWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="650-650"];
m89_214 [cluster="Newtonsoft.Json.Converters.XObjectWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="throw new InvalidOperationException();", span="652-652"];
m89_215 [cluster="Newtonsoft.Json.Converters.XObjectWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.XObjectWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="650-650"];
m89_8 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateTextNode(string)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateTextNode(string)", span="59-59"];
m89_9 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateTextNode(string)", file="ReflectionUtils.cs", label="return new XmlNodeWrapper(_document.CreateTextNode(text));", span="61-61"];
m89_10 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateTextNode(string)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateTextNode(string)", span="59-59"];
m89_19 [cluster="Unk.CreateWhitespace", file="ReflectionUtils.cs", label="Entry Unk.CreateWhitespace", span=""];
m89_0 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.XmlDocumentWrapper(XmlDocument)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.XmlDocumentWrapper(XmlDocument)", span="48-48"];
m89_1 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.XmlDocumentWrapper(XmlDocument)", file="ReflectionUtils.cs", label="_document = document", span="51-51"];
m89_2 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.XmlDocumentWrapper(XmlDocument)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.XmlDocumentWrapper(XmlDocument)", span="48-48"];
m89_502 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.GetPrefix(string)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.GetPrefix(string)", span="127-127"];
m89_27 [cluster="Unk.CreateXmlDeclaration", file="ReflectionUtils.cs", label="Entry Unk.CreateXmlDeclaration", span=""];
m89_526 [cluster="System.Convert.ToDouble(object, System.IFormatProvider)", file="ReflectionUtils.cs", label="Entry System.Convert.ToDouble(object, System.IFormatProvider)", span="0-0"];
m89_106 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string, string)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string, string)", span="289-289"];
m89_107 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string, string)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string, string)", span="289-289"];
m89_135 [cluster="XCData.cstr", file="ReflectionUtils.cs", label="Entry XCData.cstr", span=""];
m89_348 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="ReflectionUtils.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m89_142 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDeclaration(string, string, string)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDeclaration(string, string, string)", span="408-408"];
m89_143 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDeclaration(string, string, string)", file="ReflectionUtils.cs", label="return new XDeclarationWrapper(new XDeclaration(version, encoding, standalone));", span="410-410"];
m89_144 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDeclaration(string, string, string)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDeclaration(string, string, string)", span="408-408"];
m89_664 [cluster="string.Substring(int, int)", file="ReflectionUtils.cs", label="Entry string.Substring(int, int)", span="0-0"];
m89_3 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateComment(string)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateComment(string)", span="54-54"];
m89_4 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateComment(string)", file="ReflectionUtils.cs", label="return new XmlNodeWrapper(_document.CreateComment(data));", span="56-56"];
m89_5 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateComment(string)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateComment(string)", span="54-54"];
m89_450 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="52-52"];
m89_20 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateSignificantWhitespace(string)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateSignificantWhitespace(string)", span="74-74"];
m89_21 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateSignificantWhitespace(string)", file="ReflectionUtils.cs", label="return new XmlNodeWrapper(_document.CreateSignificantWhitespace(text));", span="76-76"];
m89_22 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateSignificantWhitespace(string)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateSignificantWhitespace(string)", span="74-74"];
m89_6 [cluster="XmlNodeWrapper.cstr", file="ReflectionUtils.cs", label="Entry XmlNodeWrapper.cstr", span=""];
m89_457 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", span="1137-1137"];
m89_458 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label=propertyName, span="1139-1139"];
m89_460 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="currentNode.AppendChild(document.CreateTextNode(reader.Value.ToString()))", span="1142-1142"];
m89_462 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="currentNode.AppendChild(document.CreateCDataSection(reader.Value.ToString()))", span="1145-1145"];
m89_464 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="currentNode.AppendChild(document.CreateWhitespace(reader.Value.ToString()))", span="1148-1148"];
m89_466 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="currentNode.AppendChild(document.CreateSignificantWhitespace(reader.Value.ToString()))", span="1151-1151"];
m89_467 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="!string.IsNullOrEmpty(propertyName) && propertyName[0] == '?'", span="1155-1155"];
m89_468 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="CreateInstruction(reader, document, currentNode, propertyName)", span="1157-1157"];
m89_469 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="reader.TokenType == JsonToken.StartArray", span="1161-1161"];
m89_470 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="ReadArrayElements(reader, document, propertyName, currentNode, manager)", span="1164-1164"];
m89_472 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="ReadElement(reader, document, currentNode, propertyName, manager)", span="1170-1170"];
m89_459 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label=TextName, span="1141-1141"];
m89_461 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label=CDataName, span="1144-1144"];
m89_463 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label=WhitespaceName, span="1147-1147"];
m89_465 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label=SignificantWhitespaceName, span="1150-1150"];
m89_471 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="return;", span="1165-1165"];
m89_473 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", span="1137-1137"];
m89_527 [cluster="System.Convert.ToBoolean(object, System.IFormatProvider)", file="ReflectionUtils.cs", label="Entry System.Convert.ToBoolean(object, System.IFormatProvider)", span="0-0"];
m89_181 [cluster="Newtonsoft.Json.Converters.XCommentWrapper.XCommentWrapper(XComment)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.XCommentWrapper.XCommentWrapper(XComment)", span="503-503"];
m89_182 [cluster="Newtonsoft.Json.Converters.XCommentWrapper.XCommentWrapper(XComment)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.XCommentWrapper.XCommentWrapper(XComment)", span="503-503"];
m89_312 [cluster="Unk.ToBoolean", file="ReflectionUtils.cs", label="Entry Unk.ToBoolean", span=""];
m89_89 [cluster="Unk.AppendChild", file="ReflectionUtils.cs", label="Entry Unk.AppendChild", span=""];
m89_529 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", span="25-25"];
m89_154 [cluster="Newtonsoft.Json.Converters.XElementWrapper.XElementWrapper(XElement)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.XElementWrapper.XElementWrapper(XElement)", span="708-708"];
m89_218 [cluster="Newtonsoft.Json.Converters.XElementWrapper.XElementWrapper(XElement)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.XElementWrapper.XElementWrapper(XElement)", span="708-708"];
m89_274 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="849-849"];
m89_275 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ReflectionUtils.cs", label="string prefix = (node.NamespaceUri == null || (node.LocalName == ''xmlns'' && node.NamespaceUri == ''http://www.w3.org/2000/xmlns/''))\r\n                        ? null\r\n                        : manager.LookupPrefix(node.NamespaceUri)", span="851-853"];
m89_277 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ReflectionUtils.cs", label="return prefix + '':'' + node.LocalName;", span="856-856"];
m89_278 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ReflectionUtils.cs", label="return node.LocalName;", span="858-858"];
m89_276 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ReflectionUtils.cs", label="!string.IsNullOrEmpty(prefix)", span="855-855"];
m89_279 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="849-849"];
m89_253 [cluster="System.ArgumentException.ArgumentException(string, string)", file="ReflectionUtils.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m89_414 [cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="717-717"];
m89_227 [cluster="Newtonsoft.Json.Converters.XElementWrapper.GetPrefixOfNamespace(string)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.XElementWrapper.GetPrefixOfNamespace(string)", span="740-740"];
m89_228 [cluster="Newtonsoft.Json.Converters.XElementWrapper.GetPrefixOfNamespace(string)", file="ReflectionUtils.cs", label="return Element.GetPrefixOfNamespace(namespaceUri);", span="742-742"];
m89_229 [cluster="Newtonsoft.Json.Converters.XElementWrapper.GetPrefixOfNamespace(string)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.XElementWrapper.GetPrefixOfNamespace(string)", span="740-740"];
m89_503 [cluster="string.StartsWith(string)", file="ReflectionUtils.cs", label="Entry string.StartsWith(string)", span="0-0"];
m89_410 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Converters.IXmlNode>)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Converters.IXmlNode>)", span="1538-1538"];
m89_665 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Converters.IXmlNode>)", file="ReflectionUtils.cs", label="return c.Where(a => a.NamespaceUri != JsonNamespaceUri);", span="1540-1540"];
m89_666 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Converters.IXmlNode>)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Converters.IXmlNode>)", span="1538-1538"];
m89_271 [cluster="System.Collections.Generic.List<T>.Reverse()", file="ReflectionUtils.cs", label="Entry System.Collections.Generic.List<T>.Reverse()", span="0-0"];
m89_98 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateSignificantWhitespace(string)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateSignificantWhitespace(string)", span="285-285"];
m89_99 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateSignificantWhitespace(string)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateSignificantWhitespace(string)", span="285-285"];
m89_178 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.XContainerWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="598-598"];
m89_207 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="Container.Add(newChild.WrappedNode)", span="600-600"];
m89_208 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="return newChild;", span="601-601"];
m89_209 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.XContainerWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="598-598"];
m89_307 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsArray(Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.IsArray(Newtonsoft.Json.Converters.IXmlNode)", span="891-891"];
m89_308 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsArray(Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="IXmlNode jsonArrayAttribute = (node.Attributes != null)\r\n                                      ? node.Attributes.SingleOrDefault(a => a.LocalName == ''Array'' && a.NamespaceUri == JsonNamespaceUri)\r\n                                      : null", span="893-895"];
m89_309 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsArray(Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="return (jsonArrayAttribute != null && XmlConvert.ToBoolean(jsonArrayAttribute.Value));", span="897-897"];
m89_310 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsArray(Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.IsArray(Newtonsoft.Json.Converters.IXmlNode)", span="891-891"];
m89_146 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateProcessingInstruction(string, string)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateProcessingInstruction(string, string)", span="413-413"];
m89_147 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateProcessingInstruction(string, string)", file="ReflectionUtils.cs", label="return new XProcessingInstructionWrapper(new XProcessingInstruction(target, data));", span="415-415"];
m89_148 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateProcessingInstruction(string, string)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateProcessingInstruction(string, string)", span="413-413"];
m89_72 [cluster="Unk.WrapNode", file="ReflectionUtils.cs", label="Entry Unk.WrapNode", span=""];
m89_23 [cluster="Unk.CreateSignificantWhitespace", file="ReflectionUtils.cs", label="Entry Unk.CreateSignificantWhitespace", span=""];
m89_35 [cluster="XmlElementWrapper.cstr", file="ReflectionUtils.cs", label="Entry XmlElementWrapper.cstr", span=""];
m89_282 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="861-861"];
m89_283 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ReflectionUtils.cs", label="node.NodeType", span="863-863"];
m89_285 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ReflectionUtils.cs", label="node.NamespaceUri == JsonNamespaceUri", span="866-866"];
m89_286 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ReflectionUtils.cs", label="return ''$'' + node.LocalName;", span="867-867"];
m89_293 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ReflectionUtils.cs", label="return ResolveFullName(node, manager);", span="875-875"];
m89_295 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ReflectionUtils.cs", label="return ''?'' + ResolveFullName(node, manager);", span="877-877"];
m89_304 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ReflectionUtils.cs", label="throw new JsonSerializationException(''Unexpected XmlNodeType when getting node name: '' + node.NodeType);", span="887-887"];
m89_284 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ReflectionUtils.cs", label="XmlNodeType.Attribute", span="865-865"];
m89_288 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ReflectionUtils.cs", label="XmlNodeType.CDATA", span="870-870"];
m89_290 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ReflectionUtils.cs", label="XmlNodeType.Comment", span="872-872"];
m89_292 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ReflectionUtils.cs", label="XmlNodeType.Element", span="874-874"];
m89_294 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ReflectionUtils.cs", label="XmlNodeType.ProcessingInstruction", span="876-876"];
m89_296 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ReflectionUtils.cs", label="XmlNodeType.XmlDeclaration", span="878-878"];
m89_298 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ReflectionUtils.cs", label="XmlNodeType.SignificantWhitespace", span="880-880"];
m89_300 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ReflectionUtils.cs", label="XmlNodeType.Text", span="882-882"];
m89_302 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ReflectionUtils.cs", label="XmlNodeType.Whitespace", span="884-884"];
m89_289 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ReflectionUtils.cs", label="return CDataName;", span="871-871"];
m89_291 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ReflectionUtils.cs", label="return CommentName;", span="873-873"];
m89_297 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ReflectionUtils.cs", label="return DeclarationName;", span="879-879"];
m89_299 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ReflectionUtils.cs", label="return SignificantWhitespaceName;", span="881-881"];
m89_301 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ReflectionUtils.cs", label="return TextName;", span="883-883"];
m89_303 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ReflectionUtils.cs", label="return WhitespaceName;", span="885-885"];
m89_305 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="861-861"];
m89_454 [cluster="Newtonsoft.Json.JsonReader.Read()", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.JsonReader.Read()", span="272-272"];
m89_151 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string)", span="418-418"];
m89_152 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string)", file="ReflectionUtils.cs", label="return new XElementWrapper(new XElement(elementName));", span="420-420"];
m89_153 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string)", span="418-418"];
m89_150 [cluster="XProcessingInstruction.cstr", file="ReflectionUtils.cs", label="Entry XProcessingInstruction.cstr", span=""];
m89_419 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="1077-1077"];
m89_420 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionUtils.cs", label="XmlNamespaceManager manager = new XmlNamespaceManager(new NameTable())", span="1079-1079"];
m89_423 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionUtils.cs", label="typeof(XObject).IsAssignableFrom(objectType)", span="1084-1084"];
m89_424 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionUtils.cs", label="objectType != typeof (XDocument) && objectType != typeof (XElement)", span="1086-1086"];
m89_429 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionUtils.cs", label="typeof(XmlNode).IsAssignableFrom(objectType)", span="1095-1095"];
m89_430 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionUtils.cs", label="objectType != typeof (XmlDocument)", span="1097-1097"];
m89_436 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionUtils.cs", label="throw new JsonSerializationException(''Unexpected type when converting XML: '' + objectType);", span="1107-1107"];
m89_437 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionUtils.cs", label="reader.TokenType != JsonToken.StartObject", span="1109-1109"];
m89_440 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionUtils.cs", label="ReadElement(reader, document, rootNode, DeserializeRootElementName, manager)", span="1116-1116"];
m89_441 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionUtils.cs", label="reader.Read()", span="1120-1120"];
m89_442 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionUtils.cs", label="DeserializeNode(reader, document, manager, rootNode)", span="1121-1121"];
m89_443 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionUtils.cs", label="objectType == typeof(XElement)", span="1125-1125"];
m89_421 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionUtils.cs", label="IXmlDocument document = null", span="1080-1080"];
m89_422 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionUtils.cs", label="IXmlNode rootNode = null", span="1081-1081"];
m89_435 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionUtils.cs", label="document == null || rootNode == null", span="1106-1106"];
m89_444 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionUtils.cs", label="XElement element = (XElement)document.DocumentElement.WrappedNode", span="1127-1127"];
m89_447 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionUtils.cs", label="return document.WrappedNode;", span="1134-1134"];
m89_425 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionUtils.cs", label="throw new JsonSerializationException(''XmlNodeConverter only supports deserializing XDocument or XElement.'');", span="1087-1087"];
m89_426 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionUtils.cs", label="XDocument d = new XDocument()", span="1089-1089"];
m89_427 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionUtils.cs", label="document = new XDocumentWrapper(d)", span="1090-1090"];
m89_428 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionUtils.cs", label="rootNode = document", span="1091-1091"];
m89_431 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionUtils.cs", label="throw new JsonSerializationException(''XmlNodeConverter only supports deserializing XmlDocuments'');", span="1098-1098"];
m89_432 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionUtils.cs", label="XmlDocument d = new XmlDocument()", span="1100-1100"];
m89_433 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionUtils.cs", label="document = new XmlDocumentWrapper(d)", span="1101-1101"];
m89_434 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionUtils.cs", label="rootNode = document", span="1102-1102"];
m89_438 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionUtils.cs", label="throw new JsonSerializationException(''XmlNodeConverter can only convert JSON that begins with an object.'');", span="1110-1110"];
m89_439 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionUtils.cs", label="!string.IsNullOrEmpty(DeserializeRootElementName)", span="1112-1112"];
m89_445 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionUtils.cs", label="element.Remove()", span="1128-1128"];
m89_446 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionUtils.cs", label="return element;", span="1130-1130"];
m89_448 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="1077-1077"];
m89_132 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateCDataSection(string)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateCDataSection(string)", span="393-393"];
m89_133 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateCDataSection(string)", file="ReflectionUtils.cs", label="return new XObjectWrapper(new XCData(data));", span="395-395"];
m89_134 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateCDataSection(string)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateCDataSection(string)", span="393-393"];
m89_508 [cluster="Unk.PopScope", file="ReflectionUtils.cs", label="Entry Unk.PopScope", span=""];
m89_241 [cluster="XmlNamespaceManager.cstr", file="ReflectionUtils.cs", label="Entry XmlNamespaceManager.cstr", span=""];
m89_270 [cluster="System.Collections.Generic.List<T>.Add(T)", file="ReflectionUtils.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m89_415 [cluster="Newtonsoft.Json.JsonWriter.WriteComment(string)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteComment(string)", span="1257-1257"];
m89_162 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string)", span="429-429"];
m89_163 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string)", file="ReflectionUtils.cs", label="return new XAttributeWrapper(new XAttribute(name, value));", span="431-431"];
m89_164 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string)", span="429-429"];
m89_412 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="753-753"];
m89_346 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ReflectionUtils.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m89_476 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="1280-1280"];
m89_532 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ReflectionUtils.cs", label="string elementPrefix = MiscellaneousUtils.GetPrefix(propertyName)", span="1282-1282"];
m89_533 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ReflectionUtils.cs", label="IXmlElement nestedArrayElement = CreateElement(propertyName, document, elementPrefix, manager)", span="1284-1284"];
m89_534 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ReflectionUtils.cs", label="currentNode.AppendChild(nestedArrayElement)", span="1286-1286"];
m89_536 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ReflectionUtils.cs", label="reader.Read() && reader.TokenType != JsonToken.EndArray", span="1289-1289"];
m89_537 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ReflectionUtils.cs", label="DeserializeValue(reader, document, manager, propertyName, nestedArrayElement)", span="1291-1291"];
m89_540 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ReflectionUtils.cs", label="AddJsonArrayAttribute(nestedArrayElement, document)", span="1297-1297"];
m89_542 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ReflectionUtils.cs", label="IXmlElement arrayElement = nestedArrayElement.ChildNodes.CastValid<IXmlElement>().Single(n => n.LocalName == propertyName)", span="1302-1302"];
m89_543 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ReflectionUtils.cs", label="AddJsonArrayAttribute(arrayElement, document)", span="1303-1303"];
m89_535 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ReflectionUtils.cs", label="int count = 0", span="1288-1288"];
m89_538 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ReflectionUtils.cs", label="count++", span="1292-1292"];
m89_541 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ReflectionUtils.cs", label="count == 1 && WriteArrayAttribute", span="1300-1300"];
m89_539 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ReflectionUtils.cs", label=WriteArrayAttribute, span="1295-1295"];
m89_544 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="1280-1280"];
m89_118 [cluster="Newtonsoft.Json.Converters.XDeclarationWrapper.XDeclarationWrapper(XDeclaration)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.XDeclarationWrapper.XDeclarationWrapper(XDeclaration)", span="329-329"];
m89_119 [cluster="Newtonsoft.Json.Converters.XDeclarationWrapper.XDeclarationWrapper(XDeclaration)", file="ReflectionUtils.cs", label="Declaration = declaration", span="332-332"];
m89_120 [cluster="Newtonsoft.Json.Converters.XDeclarationWrapper.XDeclarationWrapper(XDeclaration)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.XDeclarationWrapper.XDeclarationWrapper(XDeclaration)", span="329-329"];
m89_349 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="372-372"];
m89_112 [cluster="Newtonsoft.Json.Converters.IXmlElement.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.IXmlElement.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", span="305-305"];
m89_113 [cluster="Newtonsoft.Json.Converters.IXmlElement.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.IXmlElement.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", span="305-305"];
m89_126 [cluster="XObjectWrapper.cstr", file="ReflectionUtils.cs", label="Entry XObjectWrapper.cstr", span=""];
m89_149 [cluster="Newtonsoft.Json.Converters.XProcessingInstructionWrapper.XProcessingInstructionWrapper(XProcessingInstruction)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.XProcessingInstructionWrapper.XProcessingInstructionWrapper(XProcessingInstruction)", span="533-533"];
m89_183 [cluster="Newtonsoft.Json.Converters.XProcessingInstructionWrapper.XProcessingInstructionWrapper(XProcessingInstruction)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.XProcessingInstructionWrapper.XProcessingInstructionWrapper(XProcessingInstruction)", span="533-533"];
m89_136 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateWhitespace(string)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateWhitespace(string)", span="398-398"];
m89_137 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateWhitespace(string)", file="ReflectionUtils.cs", label="return new XObjectWrapper(new XText(text));", span="400-400"];
m89_138 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateWhitespace(string)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateWhitespace(string)", span="398-398"];
m89_525 [cluster="Unk.ToString", file="ReflectionUtils.cs", label="Entry Unk.ToString", span=""];
m89_596 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", span="1519-1519"];
m89_653 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="ReflectionUtils.cs", label="attributeName.StartsWith(''xmlns'', StringComparison.Ordinal)", span="1521-1521"];
m89_654 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="ReflectionUtils.cs", label="attributeName.Length == 5", span="1523-1523"];
m89_657 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="ReflectionUtils.cs", label="attributeName[5] == ':'", span="1528-1528"];
m89_658 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="ReflectionUtils.cs", label="prefix = attributeName.Substring(6, attributeName.Length - 6)", span="1530-1530"];
m89_660 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="ReflectionUtils.cs", label="prefix = null", span="1534-1534"];
m89_655 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="ReflectionUtils.cs", label="prefix = string.Empty", span="1525-1525"];
m89_656 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="ReflectionUtils.cs", label="return true;", span="1526-1526"];
m89_659 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="ReflectionUtils.cs", label="return true;", span="1531-1531"];
m89_661 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="ReflectionUtils.cs", label="return false;", span="1535-1535"];
m89_662 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", span="1519-1519"];
m89_12 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateCDataSection(string)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateCDataSection(string)", span="64-64"];
m89_13 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateCDataSection(string)", file="ReflectionUtils.cs", label="return new XmlNodeWrapper(_document.CreateCDataSection(data));", span="66-66"];
m89_14 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateCDataSection(string)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateCDataSection(string)", span="64-64"];
m89_166 [cluster="XAttribute.cstr", file="ReflectionUtils.cs", label="Entry XAttribute.cstr", span=""];
m89_351 [cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="345-345"];
m89_179 [cluster="Newtonsoft.Json.Converters.XTextWrapper.XTextWrapper(XText)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.XTextWrapper.XTextWrapper(XText)", span="473-473"];
m89_180 [cluster="Newtonsoft.Json.Converters.XTextWrapper.XTextWrapper(XText)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.XTextWrapper.XTextWrapper(XText)", span="473-473"];
m89_100 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDeclaration(string, string, string)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDeclaration(string, string, string)", span="286-286"];
m89_101 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDeclaration(string, string, string)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDeclaration(string, string, string)", span="286-286"];
m89_104 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string)", span="288-288"];
m89_105 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string)", span="288-288"];
m89_206 [cluster="Newtonsoft.Json.Converters.XObjectWrapper.XObjectWrapper(XObject)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.XObjectWrapper.XObjectWrapper(XObject)", span="609-609"];
m89_211 [cluster="Newtonsoft.Json.Converters.XObjectWrapper.XObjectWrapper(XObject)", file="ReflectionUtils.cs", label="_xmlObject = xmlObject", span="611-611"];
m89_212 [cluster="Newtonsoft.Json.Converters.XObjectWrapper.XObjectWrapper(XObject)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.XObjectWrapper.XObjectWrapper(XObject)", span="609-609"];
m89_671 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", span="1551-1551"];
m89_672 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", file="ReflectionUtils.cs", label="typeof(XObject).IsAssignableFrom(valueType)", span="1554-1554"];
m89_674 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", file="ReflectionUtils.cs", label="typeof(XmlNode).IsAssignableFrom(valueType)", span="1558-1558"];
m89_673 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", file="ReflectionUtils.cs", label="return true;", span="1555-1555"];
m89_675 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", file="ReflectionUtils.cs", label="return true;", span="1559-1559"];
m89_676 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", file="ReflectionUtils.cs", label="return false;", span="1562-1562"];
m89_677 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", span="1551-1551"];
m89_46 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)", span="107-107"];
m89_47 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)", file="ReflectionUtils.cs", label="XmlNodeWrapper attribute = new XmlNodeWrapper(_document.CreateAttribute(qualifiedName, namespaceUri))", span="109-109"];
m89_48 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)", file="ReflectionUtils.cs", label="attribute.Value = value", span="110-110"];
m89_49 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)", file="ReflectionUtils.cs", label="return attribute;", span="112-112"];
m89_50 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)", span="107-107"];
m89_449 [cluster="System.Type.IsAssignableFrom(System.Type)", file="ReflectionUtils.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m89_128 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateTextNode(string)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateTextNode(string)", span="388-388"];
m89_129 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateTextNode(string)", file="ReflectionUtils.cs", label="return new XObjectWrapper(new XText(text));", span="390-390"];
m89_130 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateTextNode(string)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateTextNode(string)", span="388-388"];
m89_545 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", span="1307-1307"];
m89_551 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", file="ReflectionUtils.cs", label="element.SetAttributeNode(document.CreateAttribute(''json:Array'', JsonNamespaceUri, ''true''))", span="1309-1309"];
m89_552 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", file="ReflectionUtils.cs", label="element is XElementWrapper", span="1313-1313"];
m89_553 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", file="ReflectionUtils.cs", label="element.GetPrefixOfNamespace(JsonNamespaceUri) == null", span="1315-1315"];
m89_554 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", file="ReflectionUtils.cs", label="element.SetAttributeNode(document.CreateAttribute(''xmlns:json'', ''http://www.w3.org/2000/xmlns/'', JsonNamespaceUri))", span="1317-1317"];
m89_555 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", span="1307-1307"];
m89_668 [cluster="lambda expression", file="ReflectionUtils.cs", label="Entry lambda expression", span="1540-1540"];
m89_69 [cluster="lambda expression", file="ReflectionUtils.cs", label="Entry lambda expression", span="209-209"];
m89_70 [cluster="lambda expression", file="ReflectionUtils.cs", label="WrapNode(n)", span="209-209"];
m89_71 [cluster="lambda expression", file="ReflectionUtils.cs", label="Exit lambda expression", span="209-209"];
m89_81 [cluster="lambda expression", file="ReflectionUtils.cs", label="Entry lambda expression", span="232-232"];
m89_82 [cluster="lambda expression", file="ReflectionUtils.cs", label="WrapNode(a)", span="232-232"];
m89_83 [cluster="lambda expression", file="ReflectionUtils.cs", label="Exit lambda expression", span="232-232"];
m89_186 [cluster="lambda expression", file="ReflectionUtils.cs", label="Entry lambda expression", span="564-564"];
m89_187 [cluster="lambda expression", file="ReflectionUtils.cs", label="WrapNode(n)", span="564-564"];
m89_188 [cluster="lambda expression", file="ReflectionUtils.cs", label="Exit lambda expression", span="564-564"];
m89_223 [cluster="lambda expression", file="ReflectionUtils.cs", label="Entry lambda expression", span="721-721"];
m89_224 [cluster="lambda expression", file="ReflectionUtils.cs", label="new XAttributeWrapper(a)", span="721-721"];
m89_225 [cluster="lambda expression", file="ReflectionUtils.cs", label="Exit lambda expression", span="721-721"];
m89_313 [cluster="lambda expression", file="ReflectionUtils.cs", label="Entry lambda expression", span="894-894"];
m89_314 [cluster="lambda expression", file="ReflectionUtils.cs", label="a.LocalName == ''Array'' && a.NamespaceUri == JsonNamespaceUri", span="894-894"];
m89_315 [cluster="lambda expression", file="ReflectionUtils.cs", label="Exit lambda expression", span="894-894"];
m89_417 [cluster="lambda expression", file="ReflectionUtils.cs", label="n.LocalName == node.LocalName", span="968-968"];
m89_416 [cluster="lambda expression", file="ReflectionUtils.cs", label="Entry lambda expression", span="968-968"];
m89_418 [cluster="lambda expression", file="ReflectionUtils.cs", label="Exit lambda expression", span="968-968"];
m89_549 [cluster="lambda expression", file="ReflectionUtils.cs", label="n.LocalName == propertyName", span="1302-1302"];
m89_548 [cluster="lambda expression", file="ReflectionUtils.cs", label="Entry lambda expression", span="1302-1302"];
m89_550 [cluster="lambda expression", file="ReflectionUtils.cs", label="Exit lambda expression", span="1302-1302"];
m89_651 [cluster="lambda expression", file="ReflectionUtils.cs", label="n.LocalName == propertyName", span="1483-1483"];
m89_650 [cluster="lambda expression", file="ReflectionUtils.cs", label="Entry lambda expression", span="1483-1483"];
m89_652 [cluster="lambda expression", file="ReflectionUtils.cs", label="Exit lambda expression", span="1483-1483"];
m89_669 [cluster="lambda expression", file="ReflectionUtils.cs", label="a.NamespaceUri != JsonNamespaceUri", span="1540-1540"];
m89_670 [cluster="lambda expression", file="ReflectionUtils.cs", label="Exit lambda expression", span="1540-1540"];
m89_451 [cluster="XDocument.cstr", file="ReflectionUtils.cs", label="Entry XDocument.cstr", span=""];
m89_281 [cluster="string.IsNullOrEmpty(string)", file="ReflectionUtils.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m89_121 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.XDocumentWrapper(XDocument)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.XDocumentWrapper(XDocument)", span="365-365"];
m89_122 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.XDocumentWrapper(XDocument)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.XDocumentWrapper(XDocument)", span="365-365"];
m89_411 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="ReflectionUtils.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m89_116 [cluster="Newtonsoft.Json.Converters.IXmlNode.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.IXmlNode.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="317-317"];
m89_117 [cluster="Newtonsoft.Json.Converters.IXmlNode.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.IXmlNode.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="317-317"];
m89_37 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string, string)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string, string)", span="94-94"];
m89_38 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string, string)", file="ReflectionUtils.cs", label="return new XmlElementWrapper(_document.CreateElement(qualifiedName, namespaceUri));", span="96-96"];
m89_39 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string, string)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string, string)", span="94-94"];
m89_36 [cluster="Unk.CreateElement", file="ReflectionUtils.cs", label="Entry Unk.CreateElement", span=""];
m89_114 [cluster="Newtonsoft.Json.Converters.IXmlElement.GetPrefixOfNamespace(string)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.IXmlElement.GetPrefixOfNamespace(string)", span="306-306"];
m89_115 [cluster="Newtonsoft.Json.Converters.IXmlElement.GetPrefixOfNamespace(string)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.IXmlElement.GetPrefixOfNamespace(string)", span="306-306"];
m89_244 [cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="319-319"];
m89_347 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="ReflectionUtils.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m89_216 [cluster="System.InvalidOperationException.InvalidOperationException()", file="ReflectionUtils.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m89_547 [cluster="Unk.Single", file="ReflectionUtils.cs", label="Entry Unk.Single", span=""];
m89_269 [cluster="System.Collections.Generic.List<T>.List()", file="ReflectionUtils.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m89_597 [cluster="System.Nullable<T>.GetValueOrDefault()", file="ReflectionUtils.cs", label="Entry System.Nullable<T>.GetValueOrDefault()", span="0-0"];
m89_184 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.XContainerWrapper(XContainer)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.XContainerWrapper.XContainerWrapper(XContainer)", span="557-557"];
m89_185 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.XContainerWrapper(XContainer)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.XContainerWrapper.XContainerWrapper(XContainer)", span="557-557"];
m89_94 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateCDataSection(string)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateCDataSection(string)", span="283-283"];
m89_95 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateCDataSection(string)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateCDataSection(string)", span="283-283"];
m89_350 [cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="336-336"];
m89_59 [cluster="Newtonsoft.Json.Converters.XmlElementWrapper.GetPrefixOfNamespace(string)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.XmlElementWrapper.GetPrefixOfNamespace(string)", span="144-144"];
m89_60 [cluster="Newtonsoft.Json.Converters.XmlElementWrapper.GetPrefixOfNamespace(string)", file="ReflectionUtils.cs", label="return _element.GetPrefixOfNamespace(namespaceUri);", span="146-146"];
m89_61 [cluster="Newtonsoft.Json.Converters.XmlElementWrapper.GetPrefixOfNamespace(string)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.XmlElementWrapper.GetPrefixOfNamespace(string)", span="144-144"];
m89_230 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="787-787"];
m89_231 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionUtils.cs", label="IXmlNode node = WrapXml(value)", span="789-789"];
m89_235 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionUtils.cs", label="writer.WriteStartObject()", span="795-795"];
m89_236 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionUtils.cs", label="SerializeNode(writer, node, manager, !OmitRootObject)", span="797-797"];
m89_238 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionUtils.cs", label="writer.WriteEndObject()", span="800-800"];
m89_232 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionUtils.cs", label="XmlNamespaceManager manager = new XmlNamespaceManager(new NameTable())", span="791-791"];
m89_233 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionUtils.cs", label="PushParentNamespaces(node, manager)", span="792-792"];
m89_234 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionUtils.cs", label="!OmitRootObject", span="794-794"];
m89_237 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionUtils.cs", label="!OmitRootObject", span="799-799"];
m89_239 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="787-787"];
m89_145 [cluster="XDeclaration.cstr", file="ReflectionUtils.cs", label="Entry XDeclaration.cstr", span=""];
m89_155 [cluster="XElement.cstr", file="ReflectionUtils.cs", label="Entry XElement.cstr", span=""];
m89_32 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string)", span="89-89"];
m89_33 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string)", file="ReflectionUtils.cs", label="return new XmlElementWrapper(_document.CreateElement(elementName));", span="91-91"];
m89_34 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string)", span="89-89"];
m89_219 [cluster="Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", span="713-713"];
m89_220 [cluster="Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="XObjectWrapper wrapper = (XObjectWrapper)attribute", span="715-715"];
m89_221 [cluster="Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="Element.Add(wrapper.WrappedNode)", span="716-716"];
m89_222 [cluster="Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", span="713-713"];
m89_242 [cluster="NameTable.cstr", file="ReflectionUtils.cs", label="Entry NameTable.cstr", span=""];
m89_127 [cluster="XComment.cstr", file="ReflectionUtils.cs", label="Entry XComment.cstr", span=""];
m89_15 [cluster="Unk.CreateCDataSection", file="ReflectionUtils.cs", label="Entry Unk.CreateCDataSection", span=""];
m89_240 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", span="803-803"];
m89_247 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", file="ReflectionUtils.cs", label="value is XObject", span="806-806"];
m89_248 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", file="ReflectionUtils.cs", label="return XContainerWrapper.WrapNode((XObject)value);", span="807-807"];
m89_249 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", file="ReflectionUtils.cs", label="value is XmlNode", span="810-810"];
m89_250 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", file="ReflectionUtils.cs", label="return new XmlNodeWrapper((XmlNode)value);", span="811-811"];
m89_251 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", file="ReflectionUtils.cs", label="throw new ArgumentException(''Value must be an XML object.'', ''value'');", span="814-814"];
m89_252 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", span="803-803"];
m89_16 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateWhitespace(string)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateWhitespace(string)", span="69-69"];
m89_17 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateWhitespace(string)", file="ReflectionUtils.cs", label="return new XmlNodeWrapper(_document.CreateWhitespace(text));", span="71-71"];
m89_18 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateWhitespace(string)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateWhitespace(string)", span="69-69"];
m89_31 [cluster="Unk.CreateProcessingInstruction", file="ReflectionUtils.cs", label="Entry Unk.CreateProcessingInstruction", span=""];
m89_246 [cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="328-328"];
m89_40 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", span="99-99"];
m89_41 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", file="ReflectionUtils.cs", label="XmlNodeWrapper attribute = new XmlNodeWrapper(_document.CreateAttribute(name))", span="101-101"];
m89_42 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", file="ReflectionUtils.cs", label="attribute.Value = value", span="102-102"];
m89_43 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", file="ReflectionUtils.cs", label="return attribute;", span="104-104"];
m89_44 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", span="99-99"];
m89_96 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateWhitespace(string)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateWhitespace(string)", span="284-284"];
m89_97 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateWhitespace(string)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateWhitespace(string)", span="284-284"];
m89_108 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute(string, string)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute(string, string)", span="290-290"];
m89_109 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute(string, string)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute(string, string)", span="290-290"];
m89_161 [cluster="Unk.Get", file="ReflectionUtils.cs", label="Entry Unk.Get", span=""];
m89_506 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)", span="1450-1450"];
m89_619 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)", file="ReflectionUtils.cs", label="string ns = string.IsNullOrEmpty(elementPrefix) ? manager.DefaultNamespace : manager.LookupNamespace(elementPrefix)", span="1452-1452"];
m89_620 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)", file="ReflectionUtils.cs", label="IXmlElement element = (!string.IsNullOrEmpty(ns)) ? document.CreateElement(elementName, ns) : document.CreateElement(elementName)", span="1454-1454"];
m89_621 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)", file="ReflectionUtils.cs", label="return element;", span="1456-1456"];
m89_622 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)", span="1450-1450"];
m89_62 [cluster="Unk.GetPrefixOfNamespace", file="ReflectionUtils.cs", label="Entry Unk.GetPrefixOfNamespace", span=""];
m89_456 [cluster="Unk.Remove", file="ReflectionUtils.cs", label="Entry Unk.Remove", span=""];
m89_84 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="257-257"];
m89_85 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="XmlNodeWrapper xmlNodeWrapper = (XmlNodeWrapper) newChild", span="259-259"];
m89_87 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="return newChild;", span="262-262"];
m89_86 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="_node.AppendChild(xmlNodeWrapper._node)", span="260-260"];
m89_88 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="257-257"];
m89_245 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", span="959-959"];
m89_352 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="node.NodeType", span="961-961"];
m89_355 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="SerializeGroupedNodes(writer, node, manager, writePropertyName)", span="965-965"];
m89_357 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="IsArray(node) && node.ChildNodes.All(n => n.LocalName == node.LocalName) && node.ChildNodes.Count > 0", span="968-968"];
m89_358 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="SerializeGroupedNodes(writer, node, manager, false)", span="970-970"];
m89_359 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="node.Attributes", span="974-974"];
m89_362 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="manager.AddNamespace(prefix, attribute.Value)", span="982-982"];
m89_363 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label=writePropertyName, span="986-986"];
m89_364 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="writer.WritePropertyName(GetPropertyName(node, manager))", span="987-987"];
m89_365 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="!ValueAttributes(node.Attributes).Any() && node.ChildNodes.Count == 1\r\n                && node.ChildNodes[0].NodeType == XmlNodeType.Text", span="989-990"];
m89_366 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="writer.WriteValue(node.ChildNodes[0].Value)", span="993-993"];
m89_367 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="node.ChildNodes.Count == 0 && CollectionUtils.IsNullOrEmpty(node.Attributes)", span="995-995"];
m89_368 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="writer.WriteNull()", span="998-998"];
m89_369 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="writer.WriteStartObject()", span="1002-1002"];
m89_371 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="i < node.Attributes.Count", span="1004-1004"];
m89_372 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="SerializeNode(writer, node.Attributes[i], manager, true)", span="1006-1006"];
m89_374 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="SerializeGroupedNodes(writer, node, manager, true)", span="1009-1009"];
m89_375 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="writer.WriteEndObject()", span="1011-1011"];
m89_377 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label=writePropertyName, span="1017-1017"];
m89_378 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="writer.WriteComment(node.Value)", span="1018-1018"];
m89_385 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="node.NamespaceUri == ''http://www.w3.org/2000/xmlns/'' && node.Value == JsonNamespaceUri", span="1026-1026"];
m89_387 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="node.NamespaceUri == JsonNamespaceUri", span="1029-1029"];
m89_388 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="node.LocalName == ''Array''", span="1031-1031"];
m89_390 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label=writePropertyName, span="1035-1035"];
m89_391 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="writer.WritePropertyName(GetPropertyName(node, manager))", span="1036-1036"];
m89_392 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="writer.WriteValue(node.Value)", span="1037-1037"];
m89_394 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="IXmlDeclaration declaration = (IXmlDeclaration)node", span="1040-1040"];
m89_395 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="writer.WritePropertyName(GetPropertyName(node, manager))", span="1041-1041"];
m89_396 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="writer.WriteStartObject()", span="1042-1042"];
m89_398 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="writer.WritePropertyName(''@version'')", span="1046-1046"];
m89_399 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="writer.WriteValue(declaration.Version)", span="1047-1047"];
m89_401 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="writer.WritePropertyName(''@encoding'')", span="1051-1051"];
m89_402 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="writer.WriteValue(declaration.Encoding)", span="1052-1052"];
m89_404 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="writer.WritePropertyName(''@standalone'')", span="1056-1056"];
m89_405 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="writer.WriteValue(declaration.Standalone)", span="1057-1057"];
m89_406 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="writer.WriteEndObject()", span="1060-1060"];
m89_407 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="throw new JsonSerializationException(''Unexpected XmlNodeType when serializing nodes: '' + node.NodeType);", span="1063-1063"];
m89_353 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="XmlNodeType.Document", span="963-963"];
m89_356 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="XmlNodeType.Element", span="967-967"];
m89_376 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="XmlNodeType.Comment", span="1016-1016"];
m89_379 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="XmlNodeType.Attribute", span="1020-1020"];
m89_393 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="XmlNodeType.XmlDeclaration", span="1039-1039"];
m89_354 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="XmlNodeType.DocumentFragment", span="964-964"];
m89_360 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="attribute.NamespaceUri == ''http://www.w3.org/2000/xmlns/''", span="976-976"];
m89_361 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="string prefix = (attribute.LocalName != ''xmlns'')\r\n                                  ? attribute.LocalName\r\n                                  : string.Empty", span="978-980"];
m89_370 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="int i = 0", span="1004-1004"];
m89_373 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="i++", span="1004-1004"];
m89_380 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="XmlNodeType.Text", span="1021-1021"];
m89_381 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="XmlNodeType.CDATA", span="1022-1022"];
m89_382 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="XmlNodeType.ProcessingInstruction", span="1023-1023"];
m89_383 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="XmlNodeType.Whitespace", span="1024-1024"];
m89_384 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="XmlNodeType.SignificantWhitespace", span="1025-1025"];
m89_386 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="return;", span="1027-1027"];
m89_389 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="return;", span="1032-1032"];
m89_397 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="!string.IsNullOrEmpty(declaration.Version)", span="1044-1044"];
m89_400 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="!string.IsNullOrEmpty(declaration.Encoding)", span="1049-1049"];
m89_403 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="!string.IsNullOrEmpty(declaration.Standalone)", span="1054-1054"];
m89_408 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", span="959-959"];
m89_243 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="817-817"];
m89_254 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ReflectionUtils.cs", label="List<IXmlNode> parentElements = null", span="819-819"];
m89_255 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ReflectionUtils.cs", label="IXmlNode parent = node", span="821-821"];
m89_264 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ReflectionUtils.cs", label="manager.PushScope()", span="839-839"];
m89_267 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ReflectionUtils.cs", label="manager.AddNamespace(attribute.LocalName, attribute.Value)", span="843-843"];
m89_258 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ReflectionUtils.cs", label="parentElements == null", span="826-826"];
m89_260 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ReflectionUtils.cs", label="parentElements.Add(parent)", span="829-829"];
m89_261 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ReflectionUtils.cs", label="parentElements != null", span="833-833"];
m89_262 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ReflectionUtils.cs", label="parentElements.Reverse()", span="835-835"];
m89_263 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ReflectionUtils.cs", label=parentElements, span="837-837"];
m89_256 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ReflectionUtils.cs", label="(parent = parent.ParentNode) != null", span="822-822"];
m89_257 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ReflectionUtils.cs", label="parent.NodeType == XmlNodeType.Element", span="824-824"];
m89_259 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ReflectionUtils.cs", label="parentElements = new List<IXmlNode>()", span="827-827"];
m89_265 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ReflectionUtils.cs", label="parentElement.Attributes", span="840-840"];
m89_266 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ReflectionUtils.cs", label="attribute.NamespaceUri == ''http://www.w3.org/2000/xmlns/'' && attribute.LocalName != ''xmlns''", span="842-842"];
m89_268 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="817-817"];
m89_505 [cluster="Unk.LookupNamespace", file="ReflectionUtils.cs", label="Entry Unk.LookupNamespace", span=""];
m89_501 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", span="1323-1323"];
m89_556 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ReflectionUtils.cs", label="Dictionary<string, string> attributeNameValues = new Dictionary<string, string>()", span="1325-1325"];
m89_559 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ReflectionUtils.cs", label="reader.TokenType != JsonToken.String\r\n          && reader.TokenType != JsonToken.Null\r\n          && reader.TokenType != JsonToken.Boolean\r\n          && reader.TokenType != JsonToken.Integer\r\n          && reader.TokenType != JsonToken.Float\r\n          && reader.TokenType != JsonToken.Date\r\n          && reader.TokenType != JsonToken.StartConstructor", span="1330-1336"];
m89_560 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ReflectionUtils.cs", label="!finishedAttributes && !finishedElement && reader.Read()", span="1339-1339"];
m89_561 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ReflectionUtils.cs", label="reader.TokenType", span="1341-1341"];
m89_563 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ReflectionUtils.cs", label="string attributeName = reader.Value.ToString()", span="1344-1344"];
m89_570 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ReflectionUtils.cs", label="reader.Read()", span="1355-1355"];
m89_571 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ReflectionUtils.cs", label="attributeValue = ConvertTokenToXmlValue(reader)", span="1356-1356"];
m89_575 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ReflectionUtils.cs", label="manager.AddNamespace(namespacePrefix, attributeValue)", span="1362-1362"];
m89_578 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ReflectionUtils.cs", label="reader.Read()", span="1367-1367"];
m89_579 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ReflectionUtils.cs", label="attributeValue = reader.Value.ToString()", span="1368-1368"];
m89_580 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ReflectionUtils.cs", label="string jsonPrefix = manager.LookupPrefix(JsonNamespaceUri)", span="1372-1372"];
m89_583 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ReflectionUtils.cs", label="manager.LookupNamespace(''json'' + i) != null", span="1377-1377"];
m89_587 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ReflectionUtils.cs", label="manager.AddNamespace(jsonPrefix, JsonNamespaceUri)", span="1384-1384"];
m89_593 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ReflectionUtils.cs", label="throw new JsonSerializationException(''Unexpected JsonToken: '' + reader.TokenType);", span="1404-1404"];
m89_557 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ReflectionUtils.cs", label="bool finishedAttributes = false", span="1326-1326"];
m89_572 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ReflectionUtils.cs", label="attributeNameValues.Add(attributeName, attributeValue)", span="1357-1357"];
m89_586 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ReflectionUtils.cs", label="attributeNameValues.Add(''xmlns:'' + jsonPrefix, JsonNamespaceUri)", span="1383-1383"];
m89_588 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ReflectionUtils.cs", label="attributeNameValues.Add(jsonPrefix + '':'' + attributeName, attributeValue)", span="1387-1387"];
m89_594 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ReflectionUtils.cs", label="return attributeNameValues;", span="1409-1409"];
m89_558 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ReflectionUtils.cs", label="bool finishedElement = false", span="1327-1327"];
m89_562 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ReflectionUtils.cs", label="JsonToken.PropertyName", span="1343-1343"];
m89_591 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ReflectionUtils.cs", label="JsonToken.EndObject", span="1400-1400"];
m89_564 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ReflectionUtils.cs", label="!string.IsNullOrEmpty(attributeName)", span="1346-1346"];
m89_565 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ReflectionUtils.cs", label="char firstChar = attributeName[0]", span="1348-1348"];
m89_569 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ReflectionUtils.cs", label="attributeName = attributeName.Substring(1)", span="1354-1354"];
m89_590 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ReflectionUtils.cs", label="finishedAttributes = true", span="1396-1396"];
m89_566 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ReflectionUtils.cs", label="string attributeValue", span="1349-1349"];
m89_567 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ReflectionUtils.cs", label=firstChar, span="1351-1351"];
m89_568 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ReflectionUtils.cs", label="'@'", span="1353-1353"];
m89_576 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ReflectionUtils.cs", label="'$'", span="1365-1365"];
m89_589 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ReflectionUtils.cs", label="finishedAttributes = true", span="1390-1390"];
m89_574 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ReflectionUtils.cs", label="IsNamespaceAttribute(attributeName, out namespacePrefix)", span="1360-1360"];
m89_577 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ReflectionUtils.cs", label="attributeName = attributeName.Substring(1)", span="1366-1366"];
m89_573 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ReflectionUtils.cs", label="string namespacePrefix", span="1359-1359"];
m89_581 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ReflectionUtils.cs", label="jsonPrefix == null", span="1373-1373"];
m89_582 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ReflectionUtils.cs", label="int? i = null", span="1376-1376"];
m89_584 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ReflectionUtils.cs", label="i = i.GetValueOrDefault() + 1", span="1379-1379"];
m89_585 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ReflectionUtils.cs", label="jsonPrefix = ''json'' + i", span="1381-1381"];
m89_592 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ReflectionUtils.cs", label="finishedElement = true", span="1401-1401"];
m89_595 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", span="1323-1323"];
m89_311 [cluster="Unk.SingleOrDefault", file="ReflectionUtils.cs", label="Entry Unk.SingleOrDefault", span=""];
m89_280 [cluster="Unk.LookupPrefix", file="ReflectionUtils.cs", label="Entry Unk.LookupPrefix", span=""];
m89_455 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", span="1459-1459"];
m89_623 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="reader.TokenType", span="1463-1463"];
m89_625 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="currentNode.NodeType == XmlNodeType.Document && document.DocumentElement != null", span="1466-1466"];
m89_627 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="string propertyName = reader.Value.ToString()", span="1469-1469"];
m89_628 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="reader.Read()", span="1470-1470"];
m89_629 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="reader.TokenType == JsonToken.StartArray", span="1472-1472"];
m89_631 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="reader.Read() && reader.TokenType != JsonToken.EndArray", span="1475-1475"];
m89_632 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="DeserializeValue(reader, document, manager, propertyName, currentNode)", span="1477-1477"];
m89_635 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="IXmlElement arrayElement = currentNode.ChildNodes.CastValid<IXmlElement>().Single(n => n.LocalName == propertyName)", span="1483-1483"];
m89_636 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="AddJsonArrayAttribute(arrayElement, document)", span="1484-1484"];
m89_637 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="DeserializeValue(reader, document, manager, propertyName, currentNode)", span="1489-1489"];
m89_639 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="string constructorName = reader.Value.ToString()", span="1493-1493"];
m89_640 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="reader.Read() && reader.TokenType != JsonToken.EndConstructor", span="1495-1495"];
m89_641 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="DeserializeValue(reader, document, manager, constructorName, currentNode)", span="1497-1497"];
m89_643 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="currentNode.AppendChild(document.CreateComment((string)reader.Value))", span="1501-1501"];
m89_647 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="throw new JsonSerializationException(''Unexpected JsonToken when deserializing node: '' + reader.TokenType);", span="1507-1507"];
m89_648 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="reader.TokenType == JsonToken.PropertyName || reader.Read()", span="1509-1509"];
m89_624 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="JsonToken.PropertyName", span="1465-1465"];
m89_638 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="JsonToken.StartConstructor", span="1492-1492"];
m89_642 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="JsonToken.Comment", span="1500-1500"];
m89_644 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="JsonToken.EndObject", span="1503-1503"];
m89_626 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="throw new JsonSerializationException(''JSON root object has multiple properties. The root object must have a single property in order to create a valid XML document. Consider specifing a DeserializeRootElementName.'');", span="1467-1467"];
m89_630 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="int count = 0", span="1474-1474"];
m89_633 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="count++", span="1478-1478"];
m89_634 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="count == 1 && WriteArrayAttribute", span="1481-1481"];
m89_645 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="JsonToken.EndArray", span="1504-1504"];
m89_646 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="return;", span="1505-1505"];
m89_649 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ReflectionUtils.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", span="1459-1459"];
m89_272 [cluster="Unk.PushScope", file="ReflectionUtils.cs", label="Entry Unk.PushScope", span=""];
m89_678 [file="ReflectionUtils.cs", label="Newtonsoft.Json.Converters.XmlDocumentWrapper", span=""];
m89_679 [file="ReflectionUtils.cs", label="Newtonsoft.Json.Converters.XmlElementWrapper", span=""];
m89_680 [file="ReflectionUtils.cs", label="Newtonsoft.Json.Converters.XmlDeclarationWrapper", span=""];
m89_681 [file="ReflectionUtils.cs", label="Newtonsoft.Json.Converters.XmlNodeWrapper", span=""];
m89_682 [file="ReflectionUtils.cs", label="Newtonsoft.Json.Converters.XDeclarationWrapper", span=""];
m89_683 [file="ReflectionUtils.cs", label="Newtonsoft.Json.Converters.XDocumentWrapper", span=""];
m89_684 [file="ReflectionUtils.cs", label="Newtonsoft.Json.Converters.XContainerWrapper", span=""];
m89_685 [file="ReflectionUtils.cs", label="Newtonsoft.Json.Converters.XObjectWrapper", span=""];
m89_686 [file="ReflectionUtils.cs", label="Newtonsoft.Json.Converters.XElementWrapper", span=""];
m89_687 [file="ReflectionUtils.cs", label="Newtonsoft.Json.Converters.XmlNodeConverter", span=""];
m89_688 [file="ReflectionUtils.cs", label="Newtonsoft.Json.Converters.IXmlNode", span=""];
m89_689 [file="ReflectionUtils.cs", label=string, span=""];
m89_690 [file="ReflectionUtils.cs", label=propertyName, span=""];
m90_10 [cluster="System.Runtime.Serialization.SerializationBinder.BindToName(System.Type, out string, out string)", file="SerializationBinderAdapter.cs", label="Entry System.Runtime.Serialization.SerializationBinder.BindToName(System.Type, out string, out string)", span="0-0"];
m90_7 [cluster="Newtonsoft.Json.Serialization.SerializationBinderAdapter.BindToName(System.Type, out string, out string)", file="SerializationBinderAdapter.cs", label="Entry Newtonsoft.Json.Serialization.SerializationBinderAdapter.BindToName(System.Type, out string, out string)", span="44-44"];
m90_8 [cluster="Newtonsoft.Json.Serialization.SerializationBinderAdapter.BindToName(System.Type, out string, out string)", file="SerializationBinderAdapter.cs", label="SerializationBinder.BindToName(serializedType, out assemblyName, out typeName)", span="47-47"];
m90_9 [cluster="Newtonsoft.Json.Serialization.SerializationBinderAdapter.BindToName(System.Type, out string, out string)", file="SerializationBinderAdapter.cs", label="Exit Newtonsoft.Json.Serialization.SerializationBinderAdapter.BindToName(System.Type, out string, out string)", span="44-44"];
m90_3 [cluster="Newtonsoft.Json.Serialization.SerializationBinderAdapter.BindToType(string, string)", file="SerializationBinderAdapter.cs", label="Entry Newtonsoft.Json.Serialization.SerializationBinderAdapter.BindToType(string, string)", span="39-39"];
m90_4 [cluster="Newtonsoft.Json.Serialization.SerializationBinderAdapter.BindToType(string, string)", file="SerializationBinderAdapter.cs", label="return SerializationBinder.BindToType(assemblyName, typeName);", span="41-41"];
m90_5 [cluster="Newtonsoft.Json.Serialization.SerializationBinderAdapter.BindToType(string, string)", file="SerializationBinderAdapter.cs", label="Exit Newtonsoft.Json.Serialization.SerializationBinderAdapter.BindToType(string, string)", span="39-39"];
m90_6 [cluster="System.Runtime.Serialization.SerializationBinder.BindToType(string, string)", file="SerializationBinderAdapter.cs", label="Entry System.Runtime.Serialization.SerializationBinder.BindToType(string, string)", span="0-0"];
m90_0 [cluster="Newtonsoft.Json.Serialization.SerializationBinderAdapter.SerializationBinderAdapter(System.Runtime.Serialization.SerializationBinder)", file="SerializationBinderAdapter.cs", label="Entry Newtonsoft.Json.Serialization.SerializationBinderAdapter.SerializationBinderAdapter(System.Runtime.Serialization.SerializationBinder)", span="34-34"];
m90_1 [cluster="Newtonsoft.Json.Serialization.SerializationBinderAdapter.SerializationBinderAdapter(System.Runtime.Serialization.SerializationBinder)", file="SerializationBinderAdapter.cs", label="SerializationBinder = serializationBinder", span="36-36"];
m90_2 [cluster="Newtonsoft.Json.Serialization.SerializationBinderAdapter.SerializationBinderAdapter(System.Runtime.Serialization.SerializationBinder)", file="SerializationBinderAdapter.cs", label="Exit Newtonsoft.Json.Serialization.SerializationBinderAdapter.SerializationBinderAdapter(System.Runtime.Serialization.SerializationBinder)", span="34-34"];
m90_11 [file="SerializationBinderAdapter.cs", label="Newtonsoft.Json.Serialization.SerializationBinderAdapter", span=""];
m91_263 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ObjectWithDateTimeOffset.ObjectWithDateTimeOffset()", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JValueTests.ObjectWithDateTimeOffset.ObjectWithDateTimeOffset()", span="386-386"];
m91_182 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.SetValue()", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JValueTests.SetValue()", span="293-293"];
m91_183 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.SetValue()", file="StringEnumConverter.cs", label="ExceptionAssert.Throws<InvalidOperationException>(''Cannot set child value on Newtonsoft.Json.Linq.JValue.'',\r\n        () =>\r\n          {\r\n            JToken t = new JValue(5L);\r\n            t[0] = new JValue(3);\r\n          })", span="295-300"];
m91_184 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.SetValue()", file="StringEnumConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JValueTests.SetValue()", span="293-293"];
m91_218 [cluster="System.Collections.IEnumerable.Cast<TResult>()", file="StringEnumConverter.cs", label="Entry System.Collections.IEnumerable.Cast<TResult>()", span="0-0"];
m91_104 [cluster="System.Guid.Guid(string)", file="StringEnumConverter.cs", label="Entry System.Guid.Guid(string)", span="0-0"];
m91_54 [cluster="System.Guid.NewGuid()", file="StringEnumConverter.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m91_409 [cluster="Newtonsoft.Json.Linq.JArray.JArray(params object[])", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Linq.JArray.JArray(params object[])", span="81-81"];
m91_160 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.Previous()", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JValueTests.Previous()", span="265-265"];
m91_161 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.Previous()", file="StringEnumConverter.cs", label="JValue v = new JValue(true)", span="267-267"];
m91_162 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.Previous()", file="StringEnumConverter.cs", label="Assert.IsNull(v.Previous)", span="268-268"];
m91_163 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.Previous()", file="StringEnumConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JValueTests.Previous()", span="265-265"];
m91_164 [cluster="Unk.IsNull", file="StringEnumConverter.cs", label="Entry Unk.IsNull", span=""];
m91_70 [cluster="Newtonsoft.Json.Linq.JValue.CreateString(string)", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Linq.JValue.CreateString(string)", span="517-517"];
m91_322 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToUInt16()", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToUInt16()", span="491-491"];
m91_323 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToUInt16()", file="StringEnumConverter.cs", label="Assert.AreEqual(UInt16.MaxValue, Convert.ToUInt16(new JValue(UInt16.MaxValue)))", span="493-493"];
m91_324 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToUInt16()", file="StringEnumConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToUInt16()", span="491-491"];
m91_221 [cluster="Unk.ToList", file="StringEnumConverter.cs", label="Entry Unk.ToList", span=""];
m91_176 [cluster="Unk.IsTrue", file="StringEnumConverter.cs", label="Entry Unk.IsTrue", span=""];
m91_381 [cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, int, System.TimeSpan)", file="StringEnumConverter.cs", label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, int, System.TimeSpan)", span="0-0"];
m91_265 [cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="323-323"];
m91_302 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToInt32_BigInteger()", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToInt32_BigInteger()", span="460-460"];
m91_303 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToInt32_BigInteger()", file="StringEnumConverter.cs", label="Assert.AreEqual(123, Convert.ToInt32(new JValue(BigInteger.Parse(''123''))))", span="462-462"];
m91_304 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToInt32_BigInteger()", file="StringEnumConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToInt32_BigInteger()", span="460-460"];
m91_291 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToBoolean()", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToBoolean()", span="441-441"];
m91_292 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToBoolean()", file="StringEnumConverter.cs", label="Assert.AreEqual(true, Convert.ToBoolean(new JValue(true)))", span="443-443"];
m91_293 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToBoolean()", file="StringEnumConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToBoolean()", span="441-441"];
m91_155 [cluster="Newtonsoft.Json.Linq.JToken.Remove()", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Linq.JToken.Remove()", span="360-360"];
m91_126 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.First()", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JValueTests.First()", span="214-214"];
m91_127 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.First()", file="StringEnumConverter.cs", label="ExceptionAssert.Throws<InvalidOperationException>(''Cannot access child value on Newtonsoft.Json.Linq.JValue.'',\r\n        () =>\r\n          {\r\n            JValue v = new JValue(true);\r\n            JToken first = v.First;\r\n          })", span="216-221"];
m91_128 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.First()", file="StringEnumConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JValueTests.First()", span="214-214"];
m91_55 [cluster="Unk.Parse", file="StringEnumConverter.cs", label="Entry Unk.Parse", span=""];
m91_282 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ReadDatesAsDateTimeOffsetViaJsonConvert()", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JValueTests.ReadDatesAsDateTimeOffsetViaJsonConvert()", span="426-426"];
m91_283 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ReadDatesAsDateTimeOffsetViaJsonConvert()", file="StringEnumConverter.cs", label="var content = @''{''''startDateTime'''':''''2012-07-19T14:30:00+09:30''''}''", span="428-428"];
m91_284 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ReadDatesAsDateTimeOffsetViaJsonConvert()", file="StringEnumConverter.cs", label="var jsonSerializerSettings = new JsonSerializerSettings() { DateFormatHandling = DateFormatHandling.IsoDateFormat, DateParseHandling = DateParseHandling.DateTimeOffset, DateTimeZoneHandling = DateTimeZoneHandling.RoundtripKind }", span="430-430"];
m91_285 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ReadDatesAsDateTimeOffsetViaJsonConvert()", file="StringEnumConverter.cs", label="JObject obj = (JObject)JsonConvert.DeserializeObject(content, jsonSerializerSettings)", span="431-431"];
m91_286 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ReadDatesAsDateTimeOffsetViaJsonConvert()", file="StringEnumConverter.cs", label="object startDateTime = obj[''startDateTime'']", span="433-433"];
m91_287 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ReadDatesAsDateTimeOffsetViaJsonConvert()", file="StringEnumConverter.cs", label="CustomAssert.IsInstanceOfType(typeof(DateTimeOffset), startDateTime)", span="435-435"];
m91_288 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ReadDatesAsDateTimeOffsetViaJsonConvert()", file="StringEnumConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JValueTests.ReadDatesAsDateTimeOffsetViaJsonConvert()", span="426-426"];
m91_105 [cluster="JValue.cstr", file="StringEnumConverter.cs", label="Entry JValue.cstr", span=""];
m91_375 [cluster="Newtonsoft.Json.Linq.JValue.JValue(System.DateTime)", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.DateTime)", span="115-115"];
m91_214 [cluster="Newtonsoft.Json.Linq.JObject.JObject(params object[])", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject(params object[])", span="102-102"];
m91_103 [cluster="Newtonsoft.Json.Linq.JValue.JValue(System.Guid)", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.Guid)", span="142-142"];
m91_350 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToDecimal_Int64()", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToDecimal_Int64()", span="533-533"];
m91_351 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToDecimal_Int64()", file="StringEnumConverter.cs", label="Assert.AreEqual(123, Convert.ToDecimal(new JValue(123)))", span="535-535"];
m91_352 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToDecimal_Int64()", file="StringEnumConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToDecimal_Int64()", span="533-533"];
m91_102 [cluster="Newtonsoft.Json.Linq.JValue.JValue(System.TimeSpan)", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.TimeSpan)", span="160-160"];
m91_52 [cluster="System.Uri.Uri(string)", file="StringEnumConverter.cs", label="Entry System.Uri.Uri(string)", span="0-0"];
m91_228 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.WriteSingle()", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JValueTests.WriteSingle()", span="347-347"];
m91_229 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.WriteSingle()", file="StringEnumConverter.cs", label="float f = 5.2f", span="349-349"];
m91_230 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.WriteSingle()", file="StringEnumConverter.cs", label="JValue value = new JValue(f)", span="350-350"];
m91_231 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.WriteSingle()", file="StringEnumConverter.cs", label="string json = value.ToString(Formatting.None)", span="352-352"];
m91_232 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.WriteSingle()", file="StringEnumConverter.cs", label="Assert.AreEqual(''5.2'', json)", span="354-354"];
m91_233 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.WriteSingle()", file="StringEnumConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JValueTests.WriteSingle()", span="347-347"];
m91_125 [cluster="Newtonsoft.Json.Linq.JToken.Children()", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Linq.JToken.Children()", span="332-332"];
m91_400 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ToStringFormat()", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JValueTests.ToStringFormat()", span="617-617"];
m91_401 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ToStringFormat()", file="StringEnumConverter.cs", label="JValue v = new JValue(new DateTime(2013, 02, 01, 01, 02, 03, 04))", span="619-619"];
m91_402 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ToStringFormat()", file="StringEnumConverter.cs", label="Assert.AreEqual(''2013'', v.ToString(''yyyy''))", span="621-621"];
m91_403 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ToStringFormat()", file="StringEnumConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JValueTests.ToStringFormat()", span="617-617"];
m91_206 [cluster="System.IFormattable.ToString(string, System.IFormatProvider)", file="StringEnumConverter.cs", label="Entry System.IFormattable.ToString(string, System.IFormatProvider)", span="0-0"];
m91_341 [cluster="System.Convert.ToSingle(object)", file="StringEnumConverter.cs", label="Entry System.Convert.ToSingle(object)", span="0-0"];
m91_405 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ToStringNewTypes()", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JValueTests.ToStringNewTypes()", span="626-626"];
m91_406 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ToStringNewTypes()", file="StringEnumConverter.cs", label="JArray a = new JArray(\r\n        new JValue(new DateTimeOffset(2013, 02, 01, 01, 02, 03, 04, TimeSpan.FromHours(1))),\r\n        new JValue(new BigInteger(5)),\r\n        new JValue(1.1f)\r\n        )", span="628-632"];
m91_407 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ToStringNewTypes()", file="StringEnumConverter.cs", label="Assert.AreEqual(@''[\r\n  ''''2013-02-01T01:02:03.004+01:00'''',\r\n  5,\r\n  1.1\r\n]'', a.ToString())", span="634-638"];
m91_408 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ToStringNewTypes()", file="StringEnumConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JValueTests.ToStringNewTypes()", span="626-626"];
m91_289 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="296-296"];
m91_280 [cluster="Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader)", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader)", span="287-287"];
m91_309 [cluster="System.Convert.ToChar(object)", file="StringEnumConverter.cs", label="Entry System.Convert.ToChar(object)", span="0-0"];
m91_97 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Linq.JValue.ToString(string, System.IFormatProvider)", span="792-792"];
m91_156 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.Root()", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JValueTests.Root()", span="258-258"];
m91_157 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.Root()", file="StringEnumConverter.cs", label="JValue v = new JValue(true)", span="260-260"];
m91_158 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.Root()", file="StringEnumConverter.cs", label="Assert.AreEqual(v, v.Root)", span="261-261"];
m91_159 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.Root()", file="StringEnumConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JValueTests.Root()", span="258-258"];
m91_201 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertValueToFormattableType()", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JValueTests.ConvertValueToFormattableType()", span="322-322"];
m91_202 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertValueToFormattableType()", file="StringEnumConverter.cs", label="IFormattable f = (new JValue(1).Value<IFormattable>())", span="324-324"];
m91_203 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertValueToFormattableType()", file="StringEnumConverter.cs", label="Assert.AreEqual(1L, f)", span="325-325"];
m91_204 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertValueToFormattableType()", file="StringEnumConverter.cs", label="Assert.AreEqual(''01'', f.ToString(''00'', CultureInfo.InvariantCulture))", span="327-327"];
m91_205 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertValueToFormattableType()", file="StringEnumConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JValueTests.ConvertValueToFormattableType()", span="322-322"];
m91_334 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToUInt64()", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToUInt64()", span="509-509"];
m91_335 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToUInt64()", file="StringEnumConverter.cs", label="Assert.AreEqual(UInt64.MaxValue, Convert.ToUInt64(new JValue(UInt64.MaxValue)))", span="511-511"];
m91_336 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToUInt64()", file="StringEnumConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToUInt64()", span="509-509"];
m91_133 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.Item()", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JValueTests.Item()", span="225-225"];
m91_134 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.Item()", file="StringEnumConverter.cs", label="ExceptionAssert.Throws<InvalidOperationException>(''Cannot access child value on Newtonsoft.Json.Linq.JValue.'',\r\n        () =>\r\n          {\r\n            JValue v = new JValue(true);\r\n            JToken first = v[0];\r\n          })", span="227-232"];
m91_135 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.Item()", file="StringEnumConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JValueTests.Item()", span="225-225"];
m91_178 [cluster="Newtonsoft.Json.Linq.JValue.JValue(ulong)", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(ulong)", span="88-88"];
m91_254 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.SetDateTimeOffsetProperty()", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JValueTests.SetDateTimeOffsetProperty()", span="392-392"];
m91_255 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.SetDateTimeOffsetProperty()", file="StringEnumConverter.cs", label="var dateTimeOffset = new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(3))", span="394-394"];
m91_256 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.SetDateTimeOffsetProperty()", file="StringEnumConverter.cs", label="var json = JsonConvert.SerializeObject(\r\n        new ObjectWithDateTimeOffset\r\n          {\r\n            DateTimeOffset = dateTimeOffset\r\n          })", span="395-399"];
m91_258 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.SetDateTimeOffsetProperty()", file="StringEnumConverter.cs", label="o.Property(''DateTimeOffset'').Value = dateTimeOffset", span="402-402"];
m91_257 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.SetDateTimeOffsetProperty()", file="StringEnumConverter.cs", label="var o = JObject.Parse(json)", span="401-401"];
m91_259 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.SetDateTimeOffsetProperty()", file="StringEnumConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JValueTests.SetDateTimeOffsetProperty()", span="392-392"];
m91_111 [cluster="Newtonsoft.Json.Linq.JToken.Parse(string)", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Linq.JToken.Parse(string)", span="1796-1796"];
m91_267 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ParseAndConvertDateTimeOffset()", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JValueTests.ParseAndConvertDateTimeOffset()", span="405-405"];
m91_268 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ParseAndConvertDateTimeOffset()", file="StringEnumConverter.cs", label="var json = @''{ d: ''''\/Date(0+0100)\/'''' }''", span="407-407"];
m91_269 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ParseAndConvertDateTimeOffset()", file="StringEnumConverter.cs", label="var stringReader = new StringReader(json)", span="409-409"];
m91_270 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ParseAndConvertDateTimeOffset()", file="StringEnumConverter.cs", label="var jsonReader = new JsonTextReader(stringReader)", span="410-410"];
m91_271 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ParseAndConvertDateTimeOffset()", file="StringEnumConverter.cs", label="jsonReader.DateParseHandling = DateParseHandling.DateTimeOffset", span="412-412"];
m91_272 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ParseAndConvertDateTimeOffset()", file="StringEnumConverter.cs", label="var obj = JObject.Load(jsonReader)", span="414-414"];
m91_273 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ParseAndConvertDateTimeOffset()", file="StringEnumConverter.cs", label="var d = (JValue)obj[''d'']", span="415-415"];
m91_274 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ParseAndConvertDateTimeOffset()", file="StringEnumConverter.cs", label="CustomAssert.IsInstanceOfType(typeof(DateTimeOffset), d.Value)", span="417-417"];
m91_275 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ParseAndConvertDateTimeOffset()", file="StringEnumConverter.cs", label="TimeSpan offset = ((DateTimeOffset)d.Value).Offset", span="418-418"];
m91_277 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ParseAndConvertDateTimeOffset()", file="StringEnumConverter.cs", label="DateTimeOffset dateTimeOffset = (DateTimeOffset) d", span="421-421"];
m91_276 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ParseAndConvertDateTimeOffset()", file="StringEnumConverter.cs", label="Assert.AreEqual(TimeSpan.FromHours(1), offset)", span="419-419"];
m91_278 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ParseAndConvertDateTimeOffset()", file="StringEnumConverter.cs", label="Assert.AreEqual(TimeSpan.FromHours(1), dateTimeOffset.Offset)", span="422-422"];
m91_279 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ParseAndConvertDateTimeOffset()", file="StringEnumConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JValueTests.ParseAndConvertDateTimeOffset()", span="405-405"];
m91_290 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", span="992-992"];
m91_112 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.Last()", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JValueTests.Last()", span="195-195"];
m91_113 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.Last()", file="StringEnumConverter.cs", label="ExceptionAssert.Throws<InvalidOperationException>(''Cannot access child value on Newtonsoft.Json.Linq.JValue.'',\r\n        () =>\r\n          {\r\n            JValue v = new JValue(true);\r\n            JToken last = v.Last;\r\n          })", span="197-202"];
m91_114 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.Last()", file="StringEnumConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JValueTests.Last()", span="195-195"];
m91_353 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToString_Decimal()", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToString_Decimal()", span="539-539"];
m91_354 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToString_Decimal()", file="StringEnumConverter.cs", label="Assert.AreEqual(''79228162514264337593543950335'', Convert.ToString(new JValue(Decimal.MaxValue)))", span="541-541"];
m91_355 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToString_Decimal()", file="StringEnumConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToString_Decimal()", span="539-539"];
m91_217 [cluster="System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Values()", file="StringEnumConverter.cs", label="Entry System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Values()", span="112-112"];
m91_326 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToUInt32()", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToUInt32()", span="497-497"];
m91_327 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToUInt32()", file="StringEnumConverter.cs", label="Assert.AreEqual(UInt32.MaxValue, Convert.ToUInt32(new JValue(UInt32.MaxValue)))", span="499-499"];
m91_328 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToUInt32()", file="StringEnumConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToUInt32()", span="497-497"];
m91_177 [cluster="Unk.IsFalse", file="StringEnumConverter.cs", label="Entry Unk.IsFalse", span=""];
m91_215 [cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", span="192-192"];
m91_10 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ChangeValue()", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JValueTests.ChangeValue()", span="66-66"];
m91_11 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ChangeValue()", file="StringEnumConverter.cs", label="JValue v = new JValue(true)", span="68-68"];
m91_12 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ChangeValue()", file="StringEnumConverter.cs", label="Assert.AreEqual(true, v.Value)", span="69-69"];
m91_13 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ChangeValue()", file="StringEnumConverter.cs", label="Assert.AreEqual(JTokenType.Boolean, v.Type)", span="70-70"];
m91_14 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ChangeValue()", file="StringEnumConverter.cs", label="v.Value = ''Pie''", span="72-72"];
m91_15 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ChangeValue()", file="StringEnumConverter.cs", label="Assert.AreEqual(''Pie'', v.Value)", span="73-73"];
m91_16 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ChangeValue()", file="StringEnumConverter.cs", label="Assert.AreEqual(JTokenType.String, v.Type)", span="74-74"];
m91_17 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ChangeValue()", file="StringEnumConverter.cs", label="v.Value = null", span="76-76"];
m91_18 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ChangeValue()", file="StringEnumConverter.cs", label="Assert.AreEqual(null, v.Value)", span="77-77"];
m91_19 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ChangeValue()", file="StringEnumConverter.cs", label="Assert.AreEqual(JTokenType.Null, v.Type)", span="78-78"];
m91_20 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ChangeValue()", file="StringEnumConverter.cs", label="v.Value = (int?) null", span="80-80"];
m91_21 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ChangeValue()", file="StringEnumConverter.cs", label="Assert.AreEqual(null, v.Value)", span="81-81"];
m91_22 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ChangeValue()", file="StringEnumConverter.cs", label="Assert.AreEqual(JTokenType.Null, v.Type)", span="82-82"];
m91_23 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ChangeValue()", file="StringEnumConverter.cs", label="v.Value = ''Pie''", span="84-84"];
m91_24 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ChangeValue()", file="StringEnumConverter.cs", label="Assert.AreEqual(''Pie'', v.Value)", span="85-85"];
m91_25 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ChangeValue()", file="StringEnumConverter.cs", label="Assert.AreEqual(JTokenType.String, v.Type)", span="86-86"];
m91_26 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ChangeValue()", file="StringEnumConverter.cs", label="v.Value = DBNull.Value", span="89-89"];
m91_27 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ChangeValue()", file="StringEnumConverter.cs", label="Assert.AreEqual(DBNull.Value, v.Value)", span="90-90"];
m91_28 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ChangeValue()", file="StringEnumConverter.cs", label="Assert.AreEqual(JTokenType.Null, v.Type)", span="91-91"];
m91_30 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ChangeValue()", file="StringEnumConverter.cs", label="v.Value = data", span="95-95"];
m91_31 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ChangeValue()", file="StringEnumConverter.cs", label="Assert.AreEqual(data, v.Value)", span="97-97"];
m91_32 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ChangeValue()", file="StringEnumConverter.cs", label="Assert.AreEqual(JTokenType.Bytes, v.Type)", span="98-98"];
m91_33 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ChangeValue()", file="StringEnumConverter.cs", label="v.Value = StringComparison.OrdinalIgnoreCase", span="100-100"];
m91_34 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ChangeValue()", file="StringEnumConverter.cs", label="Assert.AreEqual(StringComparison.OrdinalIgnoreCase, v.Value)", span="101-101"];
m91_35 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ChangeValue()", file="StringEnumConverter.cs", label="Assert.AreEqual(JTokenType.Integer, v.Type)", span="102-102"];
m91_36 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ChangeValue()", file="StringEnumConverter.cs", label="v.Value = new Uri(''http://json.codeplex.com/'')", span="104-104"];
m91_37 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ChangeValue()", file="StringEnumConverter.cs", label="Assert.AreEqual(new Uri(''http://json.codeplex.com/''), v.Value)", span="105-105"];
m91_38 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ChangeValue()", file="StringEnumConverter.cs", label="Assert.AreEqual(JTokenType.Uri, v.Type)", span="106-106"];
m91_39 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ChangeValue()", file="StringEnumConverter.cs", label="v.Value = TimeSpan.FromDays(1)", span="108-108"];
m91_40 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ChangeValue()", file="StringEnumConverter.cs", label="Assert.AreEqual(TimeSpan.FromDays(1), v.Value)", span="109-109"];
m91_41 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ChangeValue()", file="StringEnumConverter.cs", label="Assert.AreEqual(JTokenType.TimeSpan, v.Type)", span="110-110"];
m91_43 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ChangeValue()", file="StringEnumConverter.cs", label="v.Value = g", span="113-113"];
m91_44 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ChangeValue()", file="StringEnumConverter.cs", label="Assert.AreEqual(g, v.Value)", span="114-114"];
m91_45 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ChangeValue()", file="StringEnumConverter.cs", label="Assert.AreEqual(JTokenType.Guid, v.Type)", span="115-115"];
m91_47 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ChangeValue()", file="StringEnumConverter.cs", label="v.Value = i", span="119-119"];
m91_48 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ChangeValue()", file="StringEnumConverter.cs", label="Assert.AreEqual(i, v.Value)", span="120-120"];
m91_49 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ChangeValue()", file="StringEnumConverter.cs", label="Assert.AreEqual(JTokenType.Integer, v.Type)", span="121-121"];
m91_29 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ChangeValue()", file="StringEnumConverter.cs", label="byte[] data = new byte[0]", span="94-94"];
m91_42 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ChangeValue()", file="StringEnumConverter.cs", label="Guid g = Guid.NewGuid()", span="112-112"];
m91_46 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ChangeValue()", file="StringEnumConverter.cs", label="BigInteger i = BigInteger.Parse(''123456789999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999990'')", span="118-118"];
m91_50 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ChangeValue()", file="StringEnumConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JValueTests.ChangeValue()", span="66-66"];
m91_234 [cluster="Newtonsoft.Json.Linq.JValue.JValue(float)", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(float)", span="106-106"];
m91_196 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertValueToCompatibleType()", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JValueTests.ConvertValueToCompatibleType()", span="315-315"];
m91_197 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertValueToCompatibleType()", file="StringEnumConverter.cs", label="IComparable c = (new JValue(1).Value<IComparable>())", span="317-317"];
m91_198 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertValueToCompatibleType()", file="StringEnumConverter.cs", label="Assert.AreEqual(1L, c)", span="318-318"];
m91_199 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertValueToCompatibleType()", file="StringEnumConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JValueTests.ConvertValueToCompatibleType()", span="315-315"];
m91_235 [cluster="Newtonsoft.Json.Linq.JToken.ToString(Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToString(Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", span="404-404"];
m91_120 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.Children()", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JValueTests.Children()", span="206-206"];
m91_121 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.Children()", file="StringEnumConverter.cs", label="JValue v = new JValue(true)", span="208-208"];
m91_122 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.Children()", file="StringEnumConverter.cs", label="var c = v.Children()", span="209-209"];
m91_123 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.Children()", file="StringEnumConverter.cs", label="Assert.AreEqual(JEnumerable<JToken>.Empty, c)", span="210-210"];
m91_124 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.Children()", file="StringEnumConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JValueTests.Children()", span="206-206"];
m91_349 [cluster="System.Convert.ToDecimal(object)", file="StringEnumConverter.cs", label="Entry System.Convert.ToDecimal(object)", span="0-0"];
m91_253 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", span="568-568"];
m91_338 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToSingle()", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToSingle()", span="515-515"];
m91_339 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToSingle()", file="StringEnumConverter.cs", label="Assert.AreEqual(Single.MaxValue, Convert.ToSingle(new JValue(Single.MaxValue)))", span="517-517"];
m91_340 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToSingle()", file="StringEnumConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToSingle()", span="515-515"];
m91_382 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.GetTypeCode()", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JValueTests.GetTypeCode()", span="587-587"];
m91_383 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.GetTypeCode()", file="StringEnumConverter.cs", label="IConvertible v = new JValue(new Guid(''0B5D4F85-E94C-4143-94C8-35F2AAEBB100''))", span="589-589"];
m91_384 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.GetTypeCode()", file="StringEnumConverter.cs", label="Assert.AreEqual(TypeCode.Object, v.GetTypeCode())", span="590-590"];
m91_385 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.GetTypeCode()", file="StringEnumConverter.cs", label="v = new JValue(new Uri(''http://www.google.com''))", span="592-592"];
m91_386 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.GetTypeCode()", file="StringEnumConverter.cs", label="Assert.AreEqual(TypeCode.Object, v.GetTypeCode())", span="593-593"];
m91_387 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.GetTypeCode()", file="StringEnumConverter.cs", label="v = new JValue(new BigInteger(3))", span="596-596"];
m91_388 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.GetTypeCode()", file="StringEnumConverter.cs", label="Assert.AreEqual(TypeCode.Object, v.GetTypeCode())", span="597-597"];
m91_389 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.GetTypeCode()", file="StringEnumConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JValueTests.GetTypeCode()", span="587-587"];
m91_295 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToBoolean_String()", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToBoolean_String()", span="447-447"];
m91_296 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToBoolean_String()", file="StringEnumConverter.cs", label="Assert.AreEqual(true, Convert.ToBoolean(new JValue(''true'')))", span="449-449"];
m91_297 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToBoolean_String()", file="StringEnumConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToBoolean_String()", span="447-447"];
m91_0 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.FloatParseHandling()", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JValueTests.FloatParseHandling()", span="53-53"];
m91_1 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.FloatParseHandling()", file="StringEnumConverter.cs", label="JValue v = (JValue) JToken.ReadFrom(\r\n        new JsonTextReader(new StringReader(''9.9''))\r\n          {\r\n            FloatParseHandling = Json.FloatParseHandling.Decimal\r\n          })", span="55-59"];
m91_2 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.FloatParseHandling()", file="StringEnumConverter.cs", label="Assert.AreEqual(9.9m, v.Value)", span="61-61"];
m91_3 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.FloatParseHandling()", file="StringEnumConverter.cs", label="Assert.AreEqual(typeof(decimal), v.Value.GetType())", span="62-62"];
m91_4 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.FloatParseHandling()", file="StringEnumConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JValueTests.FloatParseHandling()", span="53-53"];
m91_5 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="73-73"];
m91_179 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.HasValues()", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JValueTests.HasValues()", span="287-287"];
m91_180 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.HasValues()", file="StringEnumConverter.cs", label="Assert.IsFalse((new JValue(5L)).HasValues)", span="289-289"];
m91_181 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.HasValues()", file="StringEnumConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JValueTests.HasValues()", span="287-287"];
m91_174 [cluster="Newtonsoft.Json.Linq.JValue.JValue(long)", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(long)", span="69-69"];
m91_363 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToString_Guid()", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToString_Guid()", span="557-557"];
m91_364 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToString_Guid()", file="StringEnumConverter.cs", label="Guid g = new Guid(''0B5D4F85-E94C-4143-94C8-35F2AAEBB100'')", span="559-559"];
m91_365 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToString_Guid()", file="StringEnumConverter.cs", label="Assert.AreEqual(''0b5d4f85-e94c-4143-94c8-35f2aaebb100'', Convert.ToString(new JValue(g)))", span="561-561"];
m91_366 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToString_Guid()", file="StringEnumConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToString_Guid()", span="557-557"];
m91_345 [cluster="System.Convert.ToDouble(object)", file="StringEnumConverter.cs", label="Entry System.Convert.ToDouble(object)", span="0-0"];
m91_189 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.CastNullValueToNonNullable()", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JValueTests.CastNullValueToNonNullable()", span="304-304"];
m91_190 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.CastNullValueToNonNullable()", file="StringEnumConverter.cs", label="ExceptionAssert.Throws<ArgumentException>(''Can not convert Null to Int32.'',\r\n        () =>\r\n          {\r\n            JValue v = new JValue((object) null);\r\n            int i = (int) v;\r\n          })", span="306-311"];
m91_191 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.CastNullValueToNonNullable()", file="StringEnumConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JValueTests.CastNullValueToNonNullable()", span="304-304"];
m91_317 [cluster="System.Convert.ToByte(object)", file="StringEnumConverter.cs", label="Entry System.Convert.ToByte(object)", span="0-0"];
m91_106 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.JValueParse()", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JValueTests.JValueParse()", span="185-185"];
m91_107 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.JValueParse()", file="StringEnumConverter.cs", label="JValue v = (JValue)JToken.Parse(''123456789999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999990'')", span="187-187"];
m91_108 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.JValueParse()", file="StringEnumConverter.cs", label="Assert.AreEqual(JTokenType.Integer, v.Type)", span="189-189"];
m91_109 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.JValueParse()", file="StringEnumConverter.cs", label="Assert.AreEqual(BigInteger.Parse(''123456789999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999990''), v.Value)", span="190-190"];
m91_110 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.JValueParse()", file="StringEnumConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JValueTests.JValueParse()", span="185-185"];
m91_220 [cluster="Unk.Select", file="StringEnumConverter.cs", label="Entry Unk.Select", span=""];
m91_330 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToInt64()", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToInt64()", span="503-503"];
m91_331 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToInt64()", file="StringEnumConverter.cs", label="Assert.AreEqual(Int64.MaxValue, Convert.ToInt64(new JValue(Int64.MaxValue)))", span="505-505"];
m91_332 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToInt64()", file="StringEnumConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToInt64()", span="503-503"];
m91_95 [cluster="Newtonsoft.Json.Linq.JValue.JValue(object)", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(object)", span="169-169"];
m91_53 [cluster="System.TimeSpan.FromDays(double)", file="StringEnumConverter.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m91_301 [cluster="System.Convert.ToInt32(object)", file="StringEnumConverter.cs", label="Entry System.Convert.ToInt32(object)", span="0-0"];
m91_313 [cluster="System.Convert.ToSByte(object)", file="StringEnumConverter.cs", label="Entry System.Convert.ToSByte(object)", span="0-0"];
m91_342 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToDouble()", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToDouble()", span="521-521"];
m91_343 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToDouble()", file="StringEnumConverter.cs", label="Assert.AreEqual(Double.MaxValue, Convert.ToDouble(new JValue(Double.MaxValue)))", span="523-523"];
m91_344 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToDouble()", file="StringEnumConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToDouble()", span="521-521"];
m91_207 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.Ordering()", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JValueTests.Ordering()", span="331-331"];
m91_208 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.Ordering()", file="StringEnumConverter.cs", label="JObject o = new JObject(\r\n        new JProperty(''Integer'', new JValue(1)),\r\n        new JProperty(''Float'', new JValue(1.2d)),\r\n        new JProperty(''Decimal'', new JValue(1.1m))\r\n        )", span="333-337"];
m91_209 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.Ordering()", file="StringEnumConverter.cs", label="IList<object> orderedValues = o.Values().Cast<JValue>().OrderBy(v => v).Select(v => v.Value).ToList()", span="339-339"];
m91_210 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.Ordering()", file="StringEnumConverter.cs", label="Assert.AreEqual(1L, orderedValues[0])", span="341-341"];
m91_211 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.Ordering()", file="StringEnumConverter.cs", label="Assert.AreEqual(1.1m, orderedValues[1])", span="342-342"];
m91_212 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.Ordering()", file="StringEnumConverter.cs", label="Assert.AreEqual(1.2d, orderedValues[2])", span="343-343"];
m91_213 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.Ordering()", file="StringEnumConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JValueTests.Ordering()", span="331-331"];
m91_245 [cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="393-393"];
m91_244 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="692-692"];
m91_360 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToString_Null()", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToString_Null()", span="551-551"];
m91_361 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToString_Null()", file="StringEnumConverter.cs", label="Assert.AreEqual(string.Empty, Convert.ToString(new JValue((object)null)))", span="553-553"];
m91_362 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToString_Null()", file="StringEnumConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToString_Null()", span="551-551"];
m91_243 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="438-438"];
m91_357 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToString_Uri()", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToString_Uri()", span="545-545"];
m91_358 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToString_Uri()", file="StringEnumConverter.cs", label="Assert.AreEqual(''http://www.google.com/'', Convert.ToString(new JValue(new Uri(''http://www.google.com''))))", span="547-547"];
m91_359 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToString_Uri()", file="StringEnumConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToString_Uri()", span="545-545"];
m91_98 [cluster="Newtonsoft.Json.Linq.JValue.JValue(string)", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(string)", span="133-133"];
m91_392 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ToType()", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JValueTests.ToType()", span="602-602"];
m91_393 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ToType()", file="StringEnumConverter.cs", label="IConvertible v = new JValue(9.0m)", span="604-604"];
m91_394 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ToType()", file="StringEnumConverter.cs", label="int i = (int)v.ToType(typeof (int), CultureInfo.InvariantCulture)", span="606-606"];
m91_396 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ToType()", file="StringEnumConverter.cs", label="BigInteger bi = (BigInteger)v.ToType(typeof(BigInteger), CultureInfo.InvariantCulture)", span="610-610"];
m91_395 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ToType()", file="StringEnumConverter.cs", label="Assert.AreEqual(9, i)", span="607-607"];
m91_397 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ToType()", file="StringEnumConverter.cs", label="Assert.AreEqual(new BigInteger(9), bi)", span="611-611"];
m91_398 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ToType()", file="StringEnumConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JValueTests.ToType()", span="602-602"];
m91_8 [cluster="Unk.AreEqual", file="StringEnumConverter.cs", label="Entry Unk.AreEqual", span=""];
m91_101 [cluster="Newtonsoft.Json.Linq.JValue.JValue(System.Uri)", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.Uri)", span="151-151"];
m91_404 [cluster="Newtonsoft.Json.Linq.JValue.ToString(string)", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Linq.JValue.ToString(string)", span="767-767"];
m91_261 [cluster="System.DateTime.DateTime(int, int, int)", file="StringEnumConverter.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m91_318 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToInt16()", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToInt16()", span="485-485"];
m91_319 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToInt16()", file="StringEnumConverter.cs", label="Assert.AreEqual(Int16.MaxValue, Convert.ToInt16(new JValue(Int16.MaxValue)))", span="487-487"];
m91_320 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToInt16()", file="StringEnumConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToInt16()", span="485-485"];
m91_51 [cluster="Newtonsoft.Json.Linq.JValue.JValue(bool)", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(bool)", span="124-124"];
m91_346 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToDecimal()", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToDecimal()", span="527-527"];
m91_347 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToDecimal()", file="StringEnumConverter.cs", label="Assert.AreEqual(Decimal.MaxValue, Convert.ToDecimal(new JValue(Decimal.MaxValue)))", span="529-529"];
m91_348 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToDecimal()", file="StringEnumConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToDecimal()", span="527-527"];
m91_140 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.Values()", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JValueTests.Values()", span="236-236"];
m91_141 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.Values()", file="StringEnumConverter.cs", label="ExceptionAssert.Throws<InvalidOperationException>(''Cannot access child value on Newtonsoft.Json.Linq.JValue.'',\r\n        () =>\r\n          {\r\n            JValue v = new JValue(true);\r\n            v.Values<int>();\r\n          })", span="238-243"];
m91_142 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.Values()", file="StringEnumConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JValueTests.Values()", span="236-236"];
m91_390 [cluster="System.IConvertible.GetTypeCode()", file="StringEnumConverter.cs", label="Entry System.IConvertible.GetTypeCode()", span="0-0"];
m91_147 [cluster="Newtonsoft.Json.Linq.JToken.Values<T>()", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Linq.JToken.Values<T>()", span="352-352"];
m91_321 [cluster="System.Convert.ToInt16(object)", file="StringEnumConverter.cs", label="Entry System.Convert.ToInt16(object)", span="0-0"];
m91_219 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="StringEnumConverter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m91_56 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.CreateComment()", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JValueTests.CreateComment()", span="126-126"];
m91_57 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.CreateComment()", file="StringEnumConverter.cs", label="JValue commentValue = JValue.CreateComment(null)", span="128-128"];
m91_58 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.CreateComment()", file="StringEnumConverter.cs", label="Assert.AreEqual(null, commentValue.Value)", span="129-129"];
m91_59 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.CreateComment()", file="StringEnumConverter.cs", label="Assert.AreEqual(JTokenType.Comment, commentValue.Type)", span="130-130"];
m91_60 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.CreateComment()", file="StringEnumConverter.cs", label="commentValue.Value = ''Comment''", span="132-132"];
m91_61 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.CreateComment()", file="StringEnumConverter.cs", label="Assert.AreEqual(''Comment'', commentValue.Value)", span="133-133"];
m91_62 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.CreateComment()", file="StringEnumConverter.cs", label="Assert.AreEqual(JTokenType.Comment, commentValue.Type)", span="134-134"];
m91_63 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.CreateComment()", file="StringEnumConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JValueTests.CreateComment()", span="126-126"];
m91_367 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToType()", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToType()", span="565-565"];
m91_368 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToType()", file="StringEnumConverter.cs", label="Assert.AreEqual(Int32.MaxValue, Convert.ChangeType(new JValue(Int32.MaxValue), typeof(Int32), CultureInfo.InvariantCulture))", span="567-567"];
m91_369 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToType()", file="StringEnumConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToType()", span="565-565"];
m91_225 [cluster="lambda expression", file="StringEnumConverter.cs", label="Entry lambda expression", span="339-339"];
m91_116 [cluster="lambda expression", file="StringEnumConverter.cs", label="Entry lambda expression", span="198-202"];
m91_117 [cluster="lambda expression", file="StringEnumConverter.cs", label="JValue v = new JValue(true)", span="200-200"];
m91_118 [cluster="lambda expression", file="StringEnumConverter.cs", label="JToken last = v.Last", span="201-201"];
m91_119 [cluster="lambda expression", file="StringEnumConverter.cs", label="Exit lambda expression", span="198-202"];
m91_129 [cluster="lambda expression", file="StringEnumConverter.cs", label="Entry lambda expression", span="217-221"];
m91_130 [cluster="lambda expression", file="StringEnumConverter.cs", label="JValue v = new JValue(true)", span="219-219"];
m91_131 [cluster="lambda expression", file="StringEnumConverter.cs", label="JToken first = v.First", span="220-220"];
m91_132 [cluster="lambda expression", file="StringEnumConverter.cs", label="Exit lambda expression", span="217-221"];
m91_136 [cluster="lambda expression", file="StringEnumConverter.cs", label="Entry lambda expression", span="228-232"];
m91_137 [cluster="lambda expression", file="StringEnumConverter.cs", label="JValue v = new JValue(true)", span="230-230"];
m91_138 [cluster="lambda expression", file="StringEnumConverter.cs", label="JToken first = v[0]", span="231-231"];
m91_139 [cluster="lambda expression", file="StringEnumConverter.cs", label="Exit lambda expression", span="228-232"];
m91_143 [cluster="lambda expression", file="StringEnumConverter.cs", label="Entry lambda expression", span="239-243"];
m91_144 [cluster="lambda expression", file="StringEnumConverter.cs", label="JValue v = new JValue(true)", span="241-241"];
m91_145 [cluster="lambda expression", file="StringEnumConverter.cs", label="v.Values<int>()", span="242-242"];
m91_146 [cluster="lambda expression", file="StringEnumConverter.cs", label="Exit lambda expression", span="239-243"];
m91_151 [cluster="lambda expression", file="StringEnumConverter.cs", label="Entry lambda expression", span="250-254"];
m91_152 [cluster="lambda expression", file="StringEnumConverter.cs", label="JValue v = new JValue(true)", span="252-252"];
m91_153 [cluster="lambda expression", file="StringEnumConverter.cs", label="v.Remove()", span="253-253"];
m91_154 [cluster="lambda expression", file="StringEnumConverter.cs", label="Exit lambda expression", span="250-254"];
m91_185 [cluster="lambda expression", file="StringEnumConverter.cs", label="Entry lambda expression", span="296-300"];
m91_186 [cluster="lambda expression", file="StringEnumConverter.cs", label="JToken t = new JValue(5L)", span="298-298"];
m91_187 [cluster="lambda expression", file="StringEnumConverter.cs", label="t[0] = new JValue(3)", span="299-299"];
m91_188 [cluster="lambda expression", file="StringEnumConverter.cs", label="Exit lambda expression", span="296-300"];
m91_192 [cluster="lambda expression", file="StringEnumConverter.cs", label="Entry lambda expression", span="307-311"];
m91_193 [cluster="lambda expression", file="StringEnumConverter.cs", label="JValue v = new JValue((object) null)", span="309-309"];
m91_194 [cluster="lambda expression", file="StringEnumConverter.cs", label="int i = (int) v", span="310-310"];
m91_195 [cluster="lambda expression", file="StringEnumConverter.cs", label="Exit lambda expression", span="307-311"];
m91_222 [cluster="lambda expression", file="StringEnumConverter.cs", label="Entry lambda expression", span="339-339"];
m91_223 [cluster="lambda expression", file="StringEnumConverter.cs", label=v, span="339-339"];
m91_224 [cluster="lambda expression", file="StringEnumConverter.cs", label="Exit lambda expression", span="339-339"];
m91_226 [cluster="lambda expression", file="StringEnumConverter.cs", label="v.Value", span="339-339"];
m91_227 [cluster="lambda expression", file="StringEnumConverter.cs", label="Exit lambda expression", span="339-339"];
m91_9 [cluster="object.GetType()", file="StringEnumConverter.cs", label="Entry object.GetType()", span="0-0"];
m91_371 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToDateTime()", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToDateTime()", span="571-571"];
m91_372 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToDateTime()", file="StringEnumConverter.cs", label="Assert.AreEqual(new DateTime(2013, 02, 01, 01, 02, 03, 04), Convert.ToDateTime(new JValue(new DateTime(2013, 02, 01, 01, 02, 03, 04))))", span="573-573"];
m91_373 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToDateTime()", file="StringEnumConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToDateTime()", span="571-571"];
m91_7 [cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", span="1763-1763"];
m91_298 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToInt32()", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToInt32()", span="453-453"];
m91_299 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToInt32()", file="StringEnumConverter.cs", label="Assert.AreEqual(Int32.MaxValue, Convert.ToInt32(new JValue(Int32.MaxValue)))", span="455-455"];
m91_300 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToInt32()", file="StringEnumConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToInt32()", span="453-453"];
m91_236 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.WriteFullDecimalPrecision()", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JValueTests.WriteFullDecimalPrecision()", span="365-365"];
m91_237 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.WriteFullDecimalPrecision()", file="StringEnumConverter.cs", label="var jTokenWriter = new JTokenWriter()", span="367-367"];
m91_238 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.WriteFullDecimalPrecision()", file="StringEnumConverter.cs", label="new JsonSerializer().Serialize(jTokenWriter, rate)", span="368-368"];
m91_239 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.WriteFullDecimalPrecision()", file="StringEnumConverter.cs", label="string json = jTokenWriter.Token.ToString()", span="369-369"];
m91_240 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.WriteFullDecimalPrecision()", file="StringEnumConverter.cs", label="Assert.AreEqual(@''{\r\n  ''''Compoundings'''': 12.166666666666666666666666667\r\n}'', json)", span="370-372"];
m91_241 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.WriteFullDecimalPrecision()", file="StringEnumConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JValueTests.WriteFullDecimalPrecision()", span="365-365"];
m91_376 [cluster="System.Convert.ToDateTime(object)", file="StringEnumConverter.cs", label="Entry System.Convert.ToDateTime(object)", span="0-0"];
m91_281 [cluster="Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", span="96-96"];
m91_308 [cluster="Newtonsoft.Json.Linq.JValue.JValue(char)", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(char)", span="78-78"];
m91_6 [cluster="System.IO.StringReader.StringReader(string)", file="StringEnumConverter.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m91_337 [cluster="System.Convert.ToUInt64(object)", file="StringEnumConverter.cs", label="Entry System.Convert.ToUInt64(object)", span="0-0"];
m91_200 [cluster="System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Value<U>()", file="StringEnumConverter.cs", label="Entry System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Value<U>()", span="146-146"];
m91_370 [cluster="System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", file="StringEnumConverter.cs", label="Entry System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", span="0-0"];
m91_260 [cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", file="StringEnumConverter.cs", label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", span="0-0"];
m91_115 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", span="121-121"];
m91_169 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.DeepEquals()", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JValueTests.DeepEquals()", span="279-279"];
m91_170 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.DeepEquals()", file="StringEnumConverter.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(5L), new JValue(5)))", span="281-281"];
m91_171 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.DeepEquals()", file="StringEnumConverter.cs", label="Assert.IsFalse(JToken.DeepEquals(new JValue(5M), new JValue(5)))", span="282-282"];
m91_172 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.DeepEquals()", file="StringEnumConverter.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue((ulong) long.MaxValue), new JValue(long.MaxValue)))", span="283-283"];
m91_173 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.DeepEquals()", file="StringEnumConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JValueTests.DeepEquals()", span="279-279"];
m91_252 [cluster="Newtonsoft.Json.Linq.JTokenReader.JTokenReader(Newtonsoft.Json.Linq.JToken)", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Linq.JTokenReader.JTokenReader(Newtonsoft.Json.Linq.JToken)", span="43-43"];
m91_262 [cluster="System.TimeSpan.FromHours(double)", file="StringEnumConverter.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m91_266 [cluster="Newtonsoft.Json.Linq.JObject.Property(string)", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Linq.JObject.Property(string)", span="203-203"];
m91_333 [cluster="System.Convert.ToInt64(object)", file="StringEnumConverter.cs", label="Entry System.Convert.ToInt64(object)", span="0-0"];
m91_314 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToByte()", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToByte()", span="479-479"];
m91_315 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToByte()", file="StringEnumConverter.cs", label="Assert.AreEqual(Byte.MaxValue, Convert.ToByte(new JValue(Byte.MaxValue)))", span="481-481"];
m91_316 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToByte()", file="StringEnumConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToByte()", span="479-479"];
m91_377 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToDateTime_DateTimeOffset()", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToDateTime_DateTimeOffset()", span="578-578"];
m91_378 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToDateTime_DateTimeOffset()", file="StringEnumConverter.cs", label="var offset = new DateTimeOffset(2013, 02, 01, 01, 02, 03, 04, TimeSpan.Zero)", span="580-580"];
m91_379 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToDateTime_DateTimeOffset()", file="StringEnumConverter.cs", label="Assert.AreEqual(new DateTime(2013, 02, 01, 01, 02, 03, 04), Convert.ToDateTime(new JValue(offset)))", span="582-582"];
m91_380 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToDateTime_DateTimeOffset()", file="StringEnumConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToDateTime_DateTimeOffset()", span="578-578"];
m91_99 [cluster="Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", span="50-50"];
m91_399 [cluster="System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="StringEnumConverter.cs", label="Entry System.IConvertible.ToType(System.Type, System.IFormatProvider)", span="0-0"];
m91_391 [cluster="BigInteger.cstr", file="StringEnumConverter.cs", label="Entry BigInteger.cstr", span=""];
m91_64 [cluster="Newtonsoft.Json.Linq.JValue.CreateComment(string)", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Linq.JValue.CreateComment(string)", span="507-507"];
m91_310 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToSByte()", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToSByte()", span="473-473"];
m91_311 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToSByte()", file="StringEnumConverter.cs", label="Assert.AreEqual(SByte.MaxValue, Convert.ToSByte(new JValue(SByte.MaxValue)))", span="475-475"];
m91_312 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToSByte()", file="StringEnumConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToSByte()", span="473-473"];
m91_148 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.RemoveParentNull()", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JValueTests.RemoveParentNull()", span="247-247"];
m91_149 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.RemoveParentNull()", file="StringEnumConverter.cs", label="ExceptionAssert.Throws<InvalidOperationException>(''The parent is missing.'',\r\n        () =>\r\n          {\r\n            JValue v = new JValue(true);\r\n            v.Remove();\r\n          })", span="249-254"];
m91_150 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.RemoveParentNull()", file="StringEnumConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JValueTests.RemoveParentNull()", span="247-247"];
m91_374 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, int)", file="StringEnumConverter.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, int)", span="0-0"];
m91_264 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="824-824"];
m91_305 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToChar()", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToChar()", span="467-467"];
m91_306 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToChar()", file="StringEnumConverter.cs", label="Assert.AreEqual('c', Convert.ToChar(new JValue('c')))", span="469-469"];
m91_307 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToChar()", file="StringEnumConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JValueTests.ConvertsToChar()", span="467-467"];
m91_71 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.JValueToString()", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JValueTests.JValueToString()", span="146-146"];
m91_72 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.JValueToString()", file="StringEnumConverter.cs", label="JValue v", span="148-148"];
m91_73 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.JValueToString()", file="StringEnumConverter.cs", label="v = new JValue(true)", span="150-150"];
m91_74 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.JValueToString()", file="StringEnumConverter.cs", label="Assert.AreEqual(''True'', v.ToString())", span="151-151"];
m91_75 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.JValueToString()", file="StringEnumConverter.cs", label="v = new JValue(Encoding.UTF8.GetBytes(''Blah''))", span="153-153"];
m91_76 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.JValueToString()", file="StringEnumConverter.cs", label="Assert.AreEqual(''System.Byte[]'', v.ToString(null, CultureInfo.InvariantCulture))", span="154-154"];
m91_77 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.JValueToString()", file="StringEnumConverter.cs", label="v = new JValue(''I am a string!'')", span="156-156"];
m91_78 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.JValueToString()", file="StringEnumConverter.cs", label="Assert.AreEqual(''I am a string!'', v.ToString())", span="157-157"];
m91_79 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.JValueToString()", file="StringEnumConverter.cs", label="v = new JValue(null, JTokenType.Null)", span="159-159"];
m91_80 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.JValueToString()", file="StringEnumConverter.cs", label="Assert.AreEqual('''', v.ToString())", span="160-160"];
m91_81 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.JValueToString()", file="StringEnumConverter.cs", label="v = new JValue(null, JTokenType.Null)", span="162-162"];
m91_82 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.JValueToString()", file="StringEnumConverter.cs", label="Assert.AreEqual('''', v.ToString(null, CultureInfo.InvariantCulture))", span="163-163"];
m91_83 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.JValueToString()", file="StringEnumConverter.cs", label="v = new JValue(new DateTime(2000, 12, 12, 20, 59, 59, DateTimeKind.Utc), JTokenType.Date)", span="165-165"];
m91_84 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.JValueToString()", file="StringEnumConverter.cs", label="Assert.AreEqual(''12/12/2000 20:59:59'', v.ToString(null, CultureInfo.InvariantCulture))", span="166-166"];
m91_85 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.JValueToString()", file="StringEnumConverter.cs", label="v = new JValue(new Uri(''http://json.codeplex.com/''))", span="168-168"];
m91_86 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.JValueToString()", file="StringEnumConverter.cs", label="Assert.AreEqual(''http://json.codeplex.com/'', v.ToString(null, CultureInfo.InvariantCulture))", span="169-169"];
m91_87 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.JValueToString()", file="StringEnumConverter.cs", label="v = new JValue(TimeSpan.FromDays(1))", span="171-171"];
m91_88 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.JValueToString()", file="StringEnumConverter.cs", label="Assert.AreEqual(''1.00:00:00'', v.ToString(null, CultureInfo.InvariantCulture))", span="172-172"];
m91_89 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.JValueToString()", file="StringEnumConverter.cs", label="v = new JValue(new Guid(''B282ADE7-C520-496C-A448-4084F6803DE5''))", span="174-174"];
m91_90 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.JValueToString()", file="StringEnumConverter.cs", label="Assert.AreEqual(''b282ade7-c520-496c-a448-4084f6803de5'', v.ToString(null, CultureInfo.InvariantCulture))", span="175-175"];
m91_91 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.JValueToString()", file="StringEnumConverter.cs", label="v = new JValue(BigInteger.Parse(''123456789999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999990''))", span="178-178"];
m91_92 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.JValueToString()", file="StringEnumConverter.cs", label="Assert.AreEqual(''123456789999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999990'', v.ToString(null, CultureInfo.InvariantCulture))", span="179-179"];
m91_93 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.JValueToString()", file="StringEnumConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JValueTests.JValueToString()", span="146-146"];
m91_100 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="StringEnumConverter.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m91_242 [cluster="Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", span="74-74"];
m91_165 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.Next()", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JValueTests.Next()", span="272-272"];
m91_166 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.Next()", file="StringEnumConverter.cs", label="JValue v = new JValue(true)", span="274-274"];
m91_167 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.Next()", file="StringEnumConverter.cs", label="Assert.IsNull(v.Next)", span="275-275"];
m91_168 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.Next()", file="StringEnumConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JValueTests.Next()", span="272-272"];
m91_325 [cluster="System.Convert.ToUInt16(object)", file="StringEnumConverter.cs", label="Entry System.Convert.ToUInt16(object)", span="0-0"];
m91_94 [cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Linq.JValue.ToString()", span="752-752"];
m91_246 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.RoundTripDecimal()", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JValueTests.RoundTripDecimal()", span="376-376"];
m91_247 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.RoundTripDecimal()", file="StringEnumConverter.cs", label="var jTokenWriter = new JTokenWriter()", span="378-378"];
m91_248 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.RoundTripDecimal()", file="StringEnumConverter.cs", label="new JsonSerializer().Serialize(jTokenWriter, rate)", span="379-379"];
m91_249 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.RoundTripDecimal()", file="StringEnumConverter.cs", label="var rate2 = new JsonSerializer().Deserialize<Rate>(new JTokenReader(jTokenWriter.Token))", span="380-380"];
m91_250 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.RoundTripDecimal()", file="StringEnumConverter.cs", label="Assert.AreEqual(rate.Compoundings, rate2.Compoundings)", span="382-382"];
m91_251 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.RoundTripDecimal()", file="StringEnumConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JValueTests.RoundTripDecimal()", span="376-376"];
m91_329 [cluster="System.Convert.ToUInt32(object)", file="StringEnumConverter.cs", label="Entry System.Convert.ToUInt32(object)", span="0-0"];
m91_96 [cluster="System.Text.Encoding.GetBytes(string)", file="StringEnumConverter.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m91_216 [cluster="Newtonsoft.Json.Linq.JValue.JValue(double)", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(double)", span="97-97"];
m91_65 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.CreateString()", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Tests.Linq.JValueTests.CreateString()", span="138-138"];
m91_66 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.CreateString()", file="StringEnumConverter.cs", label="JValue stringValue = JValue.CreateString(null)", span="140-140"];
m91_67 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.CreateString()", file="StringEnumConverter.cs", label="Assert.AreEqual(null, stringValue.Value)", span="141-141"];
m91_68 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.CreateString()", file="StringEnumConverter.cs", label="Assert.AreEqual(JTokenType.String, stringValue.Type)", span="142-142"];
m91_69 [cluster="Newtonsoft.Json.Tests.Linq.JValueTests.CreateString()", file="StringEnumConverter.cs", label="Exit Newtonsoft.Json.Tests.Linq.JValueTests.CreateString()", span="138-138"];
m91_356 [cluster="System.Convert.ToString(object)", file="StringEnumConverter.cs", label="Entry System.Convert.ToString(object)", span="0-0"];
m91_294 [cluster="System.Convert.ToBoolean(object)", file="StringEnumConverter.cs", label="Entry System.Convert.ToBoolean(object)", span="0-0"];
m91_175 [cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="StringEnumConverter.cs", label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="148-148"];
m91_410 [file="StringEnumConverter.cs", label="Newtonsoft.Json.Tests.Linq.JValueTests", span=""];
m92_16 [cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.AddValue(TKey)", file="ThreadSafeStore.cs", label="Entry Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.AddValue(TKey)", span="63-63"];
m92_17 [cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.AddValue(TKey)", file="ThreadSafeStore.cs", label="TValue value = _creator(key)", span="65-65"];
m92_21 [cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.AddValue(TKey)", file="ThreadSafeStore.cs", label="_store[key] = value", span="72-72"];
m92_23 [cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.AddValue(TKey)", file="ThreadSafeStore.cs", label="_store.TryGetValue(key, out checkValue)", span="78-78"];
m92_26 [cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.AddValue(TKey)", file="ThreadSafeStore.cs", label="newStore[key] = value", span="84-84"];
m92_18 [cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.AddValue(TKey)", file="ThreadSafeStore.cs", label=_lock, span="67-67"];
m92_29 [cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.AddValue(TKey)", file="ThreadSafeStore.cs", label="return value;", span="92-92"];
m92_19 [cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.AddValue(TKey)", file="ThreadSafeStore.cs", label="_store == null", span="69-69"];
m92_20 [cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.AddValue(TKey)", file="ThreadSafeStore.cs", label="_store = new Dictionary<TKey, TValue>()", span="71-71"];
m92_22 [cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.AddValue(TKey)", file="ThreadSafeStore.cs", label="TValue checkValue", span="77-77"];
m92_24 [cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.AddValue(TKey)", file="ThreadSafeStore.cs", label="return checkValue;", span="80-80"];
m92_25 [cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.AddValue(TKey)", file="ThreadSafeStore.cs", label="Dictionary<TKey, TValue> newStore = new Dictionary<TKey, TValue>(_store)", span="83-83"];
m92_28 [cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.AddValue(TKey)", file="ThreadSafeStore.cs", label="_store = newStore", span="89-89"];
m92_27 [cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.AddValue(TKey)", file="ThreadSafeStore.cs", label="Thread.MemoryBarrier()", span="87-87"];
m92_30 [cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.AddValue(TKey)", file="ThreadSafeStore.cs", label="Exit Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.AddValue(TKey)", span="63-63"];
m92_15 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="ThreadSafeStore.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m92_9 [cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.Get(TKey)", file="ThreadSafeStore.cs", label="Entry Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.Get(TKey)", span="52-52"];
m92_10 [cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.Get(TKey)", file="ThreadSafeStore.cs", label="TValue value", span="54-54"];
m92_11 [cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.Get(TKey)", file="ThreadSafeStore.cs", label="!_store.TryGetValue(key, out value)", span="55-55"];
m92_12 [cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.Get(TKey)", file="ThreadSafeStore.cs", label="return AddValue(key);", span="57-57"];
m92_13 [cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.Get(TKey)", file="ThreadSafeStore.cs", label="return value;", span="60-60"];
m92_14 [cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.Get(TKey)", file="ThreadSafeStore.cs", label="Exit Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.Get(TKey)", span="52-52"];
m92_33 [cluster="System.Threading.Thread.MemoryBarrier()", file="ThreadSafeStore.cs", label="Entry System.Threading.Thread.MemoryBarrier()", span="0-0"];
m92_31 [cluster="System.Func<T, TResult>.Invoke(T)", file="ThreadSafeStore.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m92_0 [cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.ThreadSafeStore(System.Func<TKey, TValue>)", file="ThreadSafeStore.cs", label="Entry Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.ThreadSafeStore(System.Func<TKey, TValue>)", span="41-41"];
m92_1 [cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.ThreadSafeStore(System.Func<TKey, TValue>)", file="ThreadSafeStore.cs", label="creator == null", span="43-43"];
m92_2 [cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.ThreadSafeStore(System.Func<TKey, TValue>)", file="ThreadSafeStore.cs", label="throw new ArgumentNullException(nameof(creator));", span="45-45"];
m92_3 [cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.ThreadSafeStore(System.Func<TKey, TValue>)", file="ThreadSafeStore.cs", label="_creator = creator", span="48-48"];
m92_4 [cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.ThreadSafeStore(System.Func<TKey, TValue>)", file="ThreadSafeStore.cs", label="_store = new Dictionary<TKey, TValue>()", span="49-49"];
m92_5 [cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.ThreadSafeStore(System.Func<TKey, TValue>)", file="ThreadSafeStore.cs", label="Exit Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.ThreadSafeStore(System.Func<TKey, TValue>)", span="41-41"];
m92_32 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="ThreadSafeStore.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m92_6 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ThreadSafeStore.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m92_7 [cluster="Unk.nameof", file="ThreadSafeStore.cs", label="Entry Unk.nameof", span=""];
m92_8 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ThreadSafeStore.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m92_34 [file="ThreadSafeStore.cs", label="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>", span=""];
m93_31 [cluster="Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", file="TraceJsonReader.cs", label="Entry Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", span="38-38"];
m93_2 [cluster="Newtonsoft.Json.JsonReaderException.JsonReaderException(string)", file="TraceJsonReader.cs", label="Entry Newtonsoft.Json.JsonReaderException.JsonReaderException(string)", span="70-70"];
m93_3 [cluster="Newtonsoft.Json.JsonReaderException.JsonReaderException(string)", file="TraceJsonReader.cs", label="Exit Newtonsoft.Json.JsonReaderException.JsonReaderException(string)", span="70-70"];
m93_13 [cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", file="TraceJsonReader.cs", label="Entry Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", span="108-108"];
m93_14 [cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", file="TraceJsonReader.cs", label="return Create(reader, message, null);", span="110-110"];
m93_15 [cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", file="TraceJsonReader.cs", label="Exit Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", span="108-108"];
m93_6 [cluster="Newtonsoft.Json.JsonReaderException.JsonReaderException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="TraceJsonReader.cs", label="Entry Newtonsoft.Json.JsonReaderException.JsonReaderException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="94-94"];
m93_7 [cluster="Newtonsoft.Json.JsonReaderException.JsonReaderException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="TraceJsonReader.cs", label="Exit Newtonsoft.Json.JsonReaderException.JsonReaderException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="94-94"];
m93_0 [cluster="Newtonsoft.Json.JsonReaderException.JsonReaderException()", file="TraceJsonReader.cs", label="Entry Newtonsoft.Json.JsonReaderException.JsonReaderException()", span="61-61"];
m93_1 [cluster="Newtonsoft.Json.JsonReaderException.JsonReaderException()", file="TraceJsonReader.cs", label="Exit Newtonsoft.Json.JsonReaderException.JsonReaderException()", span="61-61"];
m93_30 [cluster="Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", file="TraceJsonReader.cs", label="Entry Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", span="104-104"];
m93_19 [cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", file="TraceJsonReader.cs", label="Entry Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", span="118-118"];
m93_20 [cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", file="TraceJsonReader.cs", label="message = JsonPosition.FormatMessage(lineInfo, path, message)", span="120-120"];
m93_23 [cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", file="TraceJsonReader.cs", label="lineInfo != null && lineInfo.HasLineInfo()", span="124-124"];
m93_24 [cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", file="TraceJsonReader.cs", label="lineNumber = lineInfo.LineNumber", span="126-126"];
m93_25 [cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", file="TraceJsonReader.cs", label="linePosition = lineInfo.LinePosition", span="127-127"];
m93_28 [cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", file="TraceJsonReader.cs", label="return new JsonReaderException(message, ex, path, lineNumber, linePosition);", span="135-135"];
m93_21 [cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", file="TraceJsonReader.cs", label="int lineNumber", span="122-122"];
m93_22 [cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", file="TraceJsonReader.cs", label="int linePosition", span="123-123"];
m93_26 [cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", file="TraceJsonReader.cs", label="lineNumber = 0", span="131-131"];
m93_27 [cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", file="TraceJsonReader.cs", label="linePosition = 0", span="132-132"];
m93_29 [cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", file="TraceJsonReader.cs", label="Exit Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", span="118-118"];
m93_8 [cluster="Newtonsoft.Json.JsonReaderException.JsonReaderException(string, System.Exception, string, int, int)", file="TraceJsonReader.cs", label="Entry Newtonsoft.Json.JsonReaderException.JsonReaderException(string, System.Exception, string, int, int)", span="100-100"];
m93_9 [cluster="Newtonsoft.Json.JsonReaderException.JsonReaderException(string, System.Exception, string, int, int)", file="TraceJsonReader.cs", label="Path = path", span="103-103"];
m93_10 [cluster="Newtonsoft.Json.JsonReaderException.JsonReaderException(string, System.Exception, string, int, int)", file="TraceJsonReader.cs", label="LineNumber = lineNumber", span="104-104"];
m93_11 [cluster="Newtonsoft.Json.JsonReaderException.JsonReaderException(string, System.Exception, string, int, int)", file="TraceJsonReader.cs", label="LinePosition = linePosition", span="105-105"];
m93_12 [cluster="Newtonsoft.Json.JsonReaderException.JsonReaderException(string, System.Exception, string, int, int)", file="TraceJsonReader.cs", label="Exit Newtonsoft.Json.JsonReaderException.JsonReaderException(string, System.Exception, string, int, int)", span="100-100"];
m93_16 [cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", file="TraceJsonReader.cs", label="Entry Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", span="113-113"];
m93_17 [cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", file="TraceJsonReader.cs", label="return Create(reader as IJsonLineInfo, reader.Path, message, ex);", span="115-115"];
m93_18 [cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", file="TraceJsonReader.cs", label="Exit Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", span="113-113"];
m93_4 [cluster="Newtonsoft.Json.JsonReaderException.JsonReaderException(string, System.Exception)", file="TraceJsonReader.cs", label="Entry Newtonsoft.Json.JsonReaderException.JsonReaderException(string, System.Exception)", span="81-81"];
m93_5 [cluster="Newtonsoft.Json.JsonReaderException.JsonReaderException(string, System.Exception)", file="TraceJsonReader.cs", label="Exit Newtonsoft.Json.JsonReaderException.JsonReaderException(string, System.Exception)", span="81-81"];
m93_32 [file="TraceJsonReader.cs", label="Newtonsoft.Json.JsonReaderException", span=""];
m94_335 [cluster="Newtonsoft.Json.JsonTextWriter.WriteWhitespace(string)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteWhitespace(string)", span="789-789"];
m94_351 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteEndArray()", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteEndArray()", span="494-494"];
m94_352 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteEndArray()", file="TraceJsonWriter.cs", label="_textWriter.WriteEndArray()", span="496-496"];
m94_353 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteEndArray()", file="TraceJsonWriter.cs", label="_innerWriter.WriteEndArray()", span="497-497"];
m94_354 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteEndArray()", file="TraceJsonWriter.cs", label="base.WriteEndArray()", span="498-498"];
m94_355 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteEndArray()", file="TraceJsonWriter.cs", label="Exit Newtonsoft.Json.Serialization.TraceJsonWriter.WriteEndArray()", span="494-494"];
m94_172 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.Guid?)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.Guid?)", span="245-245"];
m94_173 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.Guid?)", file="TraceJsonWriter.cs", label="_textWriter.WriteValue(value)", span="247-247"];
m94_174 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.Guid?)", file="TraceJsonWriter.cs", label="_innerWriter.WriteValue(value)", span="248-248"];
m94_175 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.Guid?)", file="TraceJsonWriter.cs", label="value.HasValue", span="249-249"];
m94_176 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.Guid?)", file="TraceJsonWriter.cs", label="base.WriteValue(value.GetValueOrDefault())", span="251-251"];
m94_177 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.Guid?)", file="TraceJsonWriter.cs", label="base.WriteUndefined()", span="255-255"];
m94_178 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.Guid?)", file="TraceJsonWriter.cs", label="Exit Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.Guid?)", span="245-245"];
m94_391 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteEndObject()", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteEndObject()", span="538-538"];
m94_392 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteEndObject()", file="TraceJsonWriter.cs", label="_textWriter.WriteEndObject()", span="540-540"];
m94_393 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteEndObject()", file="TraceJsonWriter.cs", label="_innerWriter.WriteEndObject()", span="541-541"];
m94_394 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteEndObject()", file="TraceJsonWriter.cs", label="base.WriteEndObject()", span="542-542"];
m94_395 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteEndObject()", file="TraceJsonWriter.cs", label="Exit Newtonsoft.Json.Serialization.TraceJsonWriter.WriteEndObject()", span="538-538"];
m94_41 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(bool)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(bool)", span="556-556"];
m94_305 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(ulong?)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(ulong?)", span="1134-1134"];
m94_389 [cluster="Newtonsoft.Json.JsonTextWriter.WriteStartObject()", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteStartObject()", span="209-209"];
m94_291 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(ulong)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(ulong)", span="417-417"];
m94_292 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(ulong)", file="TraceJsonWriter.cs", label="_textWriter.WriteValue(value)", span="419-419"];
m94_293 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(ulong)", file="TraceJsonWriter.cs", label="_innerWriter.WriteValue(value)", span="420-420"];
m94_294 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(ulong)", file="TraceJsonWriter.cs", label="base.WriteValue(value)", span="421-421"];
m94_295 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(ulong)", file="TraceJsonWriter.cs", label="Exit Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(ulong)", span="417-417"];
m94_71 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(char)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(char)", span="587-587"];
m94_416 [cluster="Newtonsoft.Json.JsonWriter.Close()", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.Close()", span="397-397"];
m94_314 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.Uri)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.Uri)", span="1378-1378"];
m94_72 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(char)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(char)", span="1009-1009"];
m94_402 [cluster="Newtonsoft.Json.JsonWriter.WriteRawValue(string)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteRawValue(string)", span="904-904"];
m94_119 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTimeOffset?)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.DateTimeOffset?)", span="1313-1313"];
m94_25 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(decimal)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(decimal)", span="1037-1037"];
m94_142 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteNull()", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteNull()", span="210-210"];
m94_143 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteNull()", file="TraceJsonWriter.cs", label="_textWriter.WriteNull()", span="212-212"];
m94_144 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteNull()", file="TraceJsonWriter.cs", label="_innerWriter.WriteNull()", span="213-213"];
m94_145 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteNull()", file="TraceJsonWriter.cs", label="base.WriteUndefined()", span="214-214"];
m94_146 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteNull()", file="TraceJsonWriter.cs", label="Exit Newtonsoft.Json.Serialization.TraceJsonWriter.WriteNull()", span="210-210"];
m94_43 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(bool?)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(bool?)", span="67-67"];
m94_44 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(bool?)", file="TraceJsonWriter.cs", label="_textWriter.WriteValue(value)", span="69-69"];
m94_45 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(bool?)", file="TraceJsonWriter.cs", label="_innerWriter.WriteValue(value)", span="70-70"];
m94_46 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(bool?)", file="TraceJsonWriter.cs", label="value.HasValue", span="71-71"];
m94_47 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(bool?)", file="TraceJsonWriter.cs", label="base.WriteValue(value.GetValueOrDefault())", span="73-73"];
m94_48 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(bool?)", file="TraceJsonWriter.cs", label="base.WriteUndefined()", span="77-77"];
m94_49 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(bool?)", file="TraceJsonWriter.cs", label="Exit Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(bool?)", span="67-67"];
m94_155 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(float)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(float)", span="963-963"];
m94_382 [cluster="Newtonsoft.Json.JsonTextWriter.WritePropertyName(string, bool)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WritePropertyName(string, bool)", span="279-279"];
m94_315 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(ushort)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(ushort)", span="452-452"];
m94_316 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(ushort)", file="TraceJsonWriter.cs", label="_textWriter.WriteValue(value)", span="454-454"];
m94_317 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(ushort)", file="TraceJsonWriter.cs", label="_innerWriter.WriteValue(value)", span="455-455"];
m94_318 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(ushort)", file="TraceJsonWriter.cs", label="base.WriteValue(value)", span="456-456"];
m94_319 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(ushort)", file="TraceJsonWriter.cs", label="Exit Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(ushort)", span="452-452"];
m94_281 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(uint)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(uint)", span="471-471"];
m94_253 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(short?)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(short?)", span="1198-1198"];
m94_268 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.TimeSpan?)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.TimeSpan?)", span="382-382"];
m94_269 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.TimeSpan?)", file="TraceJsonWriter.cs", label="_textWriter.WriteValue(value)", span="384-384"];
m94_270 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.TimeSpan?)", file="TraceJsonWriter.cs", label="_innerWriter.WriteValue(value)", span="385-385"];
m94_271 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.TimeSpan?)", file="TraceJsonWriter.cs", label="value.HasValue", span="386-386"];
m94_272 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.TimeSpan?)", file="TraceJsonWriter.cs", label="base.WriteValue(value.GetValueOrDefault())", span="388-388"];
m94_273 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.TimeSpan?)", file="TraceJsonWriter.cs", label="base.WriteUndefined()", span="392-392"];
m94_274 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.TimeSpan?)", file="TraceJsonWriter.cs", label="Exit Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.TimeSpan?)", span="382-382"];
m94_163 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(float?)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(float?)", span="512-512"];
m94_336 [cluster="Newtonsoft.Json.JsonWriter.WriteWhitespace(string)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteWhitespace(string)", span="1430-1430"];
m94_120 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(double)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(double)", span="182-182"];
m94_121 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(double)", file="TraceJsonWriter.cs", label="_textWriter.WriteValue(value)", span="184-184"];
m94_122 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(double)", file="TraceJsonWriter.cs", label="_innerWriter.WriteValue(value)", span="185-185"];
m94_123 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(double)", file="TraceJsonWriter.cs", label="base.WriteValue(value)", span="186-186"];
m94_124 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(double)", file="TraceJsonWriter.cs", label="Exit Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(double)", span="182-182"];
m94_246 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(short?)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(short?)", span="354-354"];
m94_247 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(short?)", file="TraceJsonWriter.cs", label="_textWriter.WriteValue(value)", span="356-356"];
m94_248 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(short?)", file="TraceJsonWriter.cs", label="_innerWriter.WriteValue(value)", span="357-357"];
m94_249 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(short?)", file="TraceJsonWriter.cs", label="value.HasValue", span="358-358"];
m94_250 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(short?)", file="TraceJsonWriter.cs", label="base.WriteValue(value.GetValueOrDefault())", span="360-360"];
m94_251 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(short?)", file="TraceJsonWriter.cs", label="base.WriteUndefined()", span="364-364"];
m94_252 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(short?)", file="TraceJsonWriter.cs", label="Exit Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(short?)", span="354-354"];
m94_410 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.Close()", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.Close()", span="561-561"];
m94_411 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.Close()", file="TraceJsonWriter.cs", label="_textWriter.Close()", span="563-563"];
m94_412 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.Close()", file="TraceJsonWriter.cs", label="_innerWriter.Close()", span="564-564"];
m94_413 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.Close()", file="TraceJsonWriter.cs", label="base.Close()", span="565-565"];
m94_414 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.Close()", file="TraceJsonWriter.cs", label="Exit Newtonsoft.Json.Serialization.TraceJsonWriter.Close()", span="561-561"];
m94_244 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(short)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(short)", span="566-566"];
m94_156 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(float?)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(float?)", span="224-224"];
m94_157 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(float?)", file="TraceJsonWriter.cs", label="_textWriter.WriteValue(value)", span="226-226"];
m94_158 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(float?)", file="TraceJsonWriter.cs", label="_innerWriter.WriteValue(value)", span="227-227"];
m94_159 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(float?)", file="TraceJsonWriter.cs", label="value.HasValue", span="228-228"];
m94_160 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(float?)", file="TraceJsonWriter.cs", label="base.WriteValue(value.GetValueOrDefault())", span="230-230"];
m94_161 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(float?)", file="TraceJsonWriter.cs", label="base.WriteUndefined()", span="234-234"];
m94_162 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(float?)", file="TraceJsonWriter.cs", label="Exit Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(float?)", span="224-224"];
m94_422 [cluster="Newtonsoft.Json.JsonWriter.Flush()", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.Flush()", span="391-391"];
m94_18 [cluster="System.IO.StringWriter.ToString()", file="TraceJsonWriter.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m94_375 [cluster="Newtonsoft.Json.JsonTextWriter.WritePropertyName(string)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WritePropertyName(string)", span="265-265"];
m94_259 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(string)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(string)", span="436-436"];
m94_224 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(sbyte)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(sbyte)", span="326-326"];
m94_225 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(sbyte)", file="TraceJsonWriter.cs", label="_textWriter.WriteValue(value)", span="328-328"];
m94_226 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(sbyte)", file="TraceJsonWriter.cs", label="_innerWriter.WriteValue(value)", span="329-329"];
m94_227 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(sbyte)", file="TraceJsonWriter.cs", label="base.WriteValue(value)", span="330-330"];
m94_228 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(sbyte)", file="TraceJsonWriter.cs", label="Exit Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(sbyte)", span="326-326"];
m94_403 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteRaw(string)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteRaw(string)", span="554-554"];
m94_404 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteRaw(string)", file="TraceJsonWriter.cs", label="_textWriter.WriteRaw(json)", span="556-556"];
m94_405 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteRaw(string)", file="TraceJsonWriter.cs", label="_innerWriter.WriteRaw(json)", span="557-557"];
m94_406 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteRaw(string)", file="TraceJsonWriter.cs", label="base.WriteRaw(json)", span="558-558"];
m94_407 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteRaw(string)", file="TraceJsonWriter.cs", label="Exit Newtonsoft.Json.Serialization.TraceJsonWriter.WriteRaw(string)", span="554-554"];
m94_57 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(byte)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(byte)", span="1018-1018"];
m94_110 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", span="683-683"];
m94_201 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(long)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(long)", span="944-944"];
m94_297 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(ulong)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(ulong)", span="954-954"];
m94_282 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(uint)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(uint)", span="935-935"];
m94_342 [cluster="Newtonsoft.Json.JsonTextWriter.WriteComment(string)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteComment(string)", span="776-776"];
m94_195 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(long)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(long)", span="280-280"];
m94_196 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(long)", file="TraceJsonWriter.cs", label="_textWriter.WriteValue(value)", span="282-282"];
m94_197 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(long)", file="TraceJsonWriter.cs", label="_innerWriter.WriteValue(value)", span="283-283"];
m94_198 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(long)", file="TraceJsonWriter.cs", label="base.WriteValue(value)", span="284-284"];
m94_199 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(long)", file="TraceJsonWriter.cs", label="Exit Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(long)", span="280-280"];
m94_296 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(ulong)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(ulong)", span="492-492"];
m94_384 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteStartObject()", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteStartObject()", span="531-531"];
m94_385 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteStartObject()", file="TraceJsonWriter.cs", label="_textWriter.WriteStartObject()", span="533-533"];
m94_386 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteStartObject()", file="TraceJsonWriter.cs", label="_innerWriter.WriteStartObject()", span="534-534"];
m94_387 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteStartObject()", file="TraceJsonWriter.cs", label="base.WriteStartObject()", span="535-535"];
m94_388 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteStartObject()", file="TraceJsonWriter.cs", label="Exit Newtonsoft.Json.Serialization.TraceJsonWriter.WriteStartObject()", span="531-531"];
m94_95 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", span="628-628"];
m94_12 [cluster="System.IO.StringWriter.StringWriter(System.IFormatProvider)", file="TraceJsonWriter.cs", label="Entry System.IO.StringWriter.StringWriter(System.IFormatProvider)", span="0-0"];
m94_65 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(byte?)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(byte?)", span="1247-1247"];
m94_33 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(decimal?)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(decimal?)", span="1280-1280"];
m94_90 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.DateTime)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.DateTime)", span="137-137"];
m94_91 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.DateTime)", file="TraceJsonWriter.cs", label="_textWriter.WriteValue(value)", span="139-139"];
m94_92 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.DateTime)", file="TraceJsonWriter.cs", label="_innerWriter.WriteValue(value)", span="140-140"];
m94_93 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.DateTime)", file="TraceJsonWriter.cs", label="base.WriteValue(value)", span="141-141"];
m94_94 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.DateTime)", file="TraceJsonWriter.cs", label="Exit Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.DateTime)", span="137-137"];
m94_111 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTimeOffset)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.DateTimeOffset)", span="1056-1056"];
m94_149 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(float)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(float)", span="217-217"];
m94_150 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(float)", file="TraceJsonWriter.cs", label="_textWriter.WriteValue(value)", span="219-219"];
m94_151 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(float)", file="TraceJsonWriter.cs", label="_innerWriter.WriteValue(value)", span="220-220"];
m94_152 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(float)", file="TraceJsonWriter.cs", label="base.WriteValue(value)", span="221-221"];
m94_153 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(float)", file="TraceJsonWriter.cs", label="Exit Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(float)", span="217-217"];
m94_134 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(double?)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(double?)", span="539-539"];
m94_306 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.Uri)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.Uri)", span="438-438"];
m94_307 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.Uri)", file="TraceJsonWriter.cs", label="_textWriter.WriteValue(value)", span="440-440"];
m94_308 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.Uri)", file="TraceJsonWriter.cs", label="_innerWriter.WriteValue(value)", span="441-441"];
m94_309 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.Uri)", file="TraceJsonWriter.cs", label="value == null", span="442-442"];
m94_311 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.Uri)", file="TraceJsonWriter.cs", label="base.WriteValue(value)", span="448-448"];
m94_310 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.Uri)", file="TraceJsonWriter.cs", label="base.WriteUndefined()", span="444-444"];
m94_312 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.Uri)", file="TraceJsonWriter.cs", label="Exit Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.Uri)", span="438-438"];
m94_19 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(decimal)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(decimal)", span="39-39"];
m94_20 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(decimal)", file="TraceJsonWriter.cs", label="_textWriter.WriteValue(value)", span="41-41"];
m94_21 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(decimal)", file="TraceJsonWriter.cs", label="_innerWriter.WriteValue(value)", span="42-42"];
m94_22 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(decimal)", file="TraceJsonWriter.cs", label="base.WriteValue(value)", span="43-43"];
m94_23 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(decimal)", file="TraceJsonWriter.cs", label="Exit Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(decimal)", span="39-39"];
m94_125 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(double)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(double)", span="529-529"];
m94_231 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(sbyte?)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(sbyte?)", span="333-333"];
m94_232 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(sbyte?)", file="TraceJsonWriter.cs", label="_textWriter.WriteValue(value)", span="335-335"];
m94_233 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(sbyte?)", file="TraceJsonWriter.cs", label="_innerWriter.WriteValue(value)", span="336-336"];
m94_234 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(sbyte?)", file="TraceJsonWriter.cs", label="value.HasValue", span="337-337"];
m94_235 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(sbyte?)", file="TraceJsonWriter.cs", label="base.WriteValue(value.GetValueOrDefault())", span="339-339"];
m94_236 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(sbyte?)", file="TraceJsonWriter.cs", label="base.WriteUndefined()", span="343-343"];
m94_237 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(sbyte?)", file="TraceJsonWriter.cs", label="Exit Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(sbyte?)", span="333-333"];
m94_223 [cluster="Newtonsoft.Json.JsonWriter.InternalWriteValue(Newtonsoft.Json.JsonToken)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.InternalWriteValue(Newtonsoft.Json.JsonToken)", span="1692-1692"];
m94_154 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(float)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(float)", span="502-502"];
m94_313 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.Uri)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(System.Uri)", span="758-758"];
m94_266 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.TimeSpan)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(System.TimeSpan)", span="738-738"];
m94_377 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WritePropertyName(string, bool)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WritePropertyName(string, bool)", span="522-522"];
m94_378 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WritePropertyName(string, bool)", file="TraceJsonWriter.cs", label="_textWriter.WritePropertyName(name, escape)", span="524-524"];
m94_379 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WritePropertyName(string, bool)", file="TraceJsonWriter.cs", label="_innerWriter.WritePropertyName(name, escape)", span="525-525"];
m94_380 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WritePropertyName(string, bool)", file="TraceJsonWriter.cs", label="base.WritePropertyName(name)", span="528-528"];
m94_381 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WritePropertyName(string, bool)", file="TraceJsonWriter.cs", label="Exit Newtonsoft.Json.Serialization.TraceJsonWriter.WritePropertyName(string, bool)", span="522-522"];
m94_337 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteComment(string)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteComment(string)", span="480-480"];
m94_338 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteComment(string)", file="TraceJsonWriter.cs", label="_textWriter.WriteComment(text)", span="482-482"];
m94_339 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteComment(string)", file="TraceJsonWriter.cs", label="_innerWriter.WriteComment(text)", span="483-483"];
m94_340 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteComment(string)", file="TraceJsonWriter.cs", label="base.WriteComment(text)", span="484-484"];
m94_341 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteComment(string)", file="TraceJsonWriter.cs", label="Exit Newtonsoft.Json.Serialization.TraceJsonWriter.WriteComment(string)", span="480-480"];
m94_148 [cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="878-878"];
m94_50 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool?)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(bool?)", span="1182-1182"];
m94_209 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(long?)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(long?)", span="1117-1117"];
m94_180 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(int)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(int)", span="259-259"];
m94_181 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(int)", file="TraceJsonWriter.cs", label="_textWriter.WriteValue(value)", span="261-261"];
m94_182 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(int)", file="TraceJsonWriter.cs", label="_innerWriter.WriteValue(value)", span="262-262"];
m94_183 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(int)", file="TraceJsonWriter.cs", label="base.WriteValue(value)", span="263-263"];
m94_184 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(int)", file="TraceJsonWriter.cs", label="Exit Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(int)", span="259-259"];
m94_97 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.DateTime?)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.DateTime?)", span="144-144"];
m94_98 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.DateTime?)", file="TraceJsonWriter.cs", label="_textWriter.WriteValue(value)", span="146-146"];
m94_99 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.DateTime?)", file="TraceJsonWriter.cs", label="_innerWriter.WriteValue(value)", span="147-147"];
m94_100 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.DateTime?)", file="TraceJsonWriter.cs", label="value.HasValue", span="148-148"];
m94_101 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.DateTime?)", file="TraceJsonWriter.cs", label="base.WriteValue(value.GetValueOrDefault())", span="150-150"];
m94_102 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.DateTime?)", file="TraceJsonWriter.cs", label="base.WriteUndefined()", span="154-154"];
m94_103 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.DateTime?)", file="TraceJsonWriter.cs", label="Exit Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.DateTime?)", span="144-144"];
m94_369 [cluster="Newtonsoft.Json.JsonWriter.WriteEndConstructor()", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndConstructor()", span="446-446"];
m94_164 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(float?)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(float?)", span="1150-1150"];
m94_221 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(object)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(object)", span="388-388"];
m94_42 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(bool)", span="981-981"];
m94_147 [cluster="Newtonsoft.Json.JsonTextWriter.WriteNull()", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteNull()", span="406-406"];
m94_80 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(char?)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(char?)", span="1231-1231"];
m94_415 [cluster="Newtonsoft.Json.JsonTextWriter.Close()", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.Close()", span="181-181"];
m94_362 [cluster="Newtonsoft.Json.JsonTextWriter.WriteStartConstructor(string)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteStartConstructor(string)", span="230-230"];
m94_383 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string, bool)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string, bool)", span="465-465"];
m94_170 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.Guid)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(System.Guid)", span="717-717"];
m94_185 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(int)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(int)", span="460-460"];
m94_298 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(ulong?)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(ulong?)", span="424-424"];
m94_299 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(ulong?)", file="TraceJsonWriter.cs", label="_textWriter.WriteValue(value)", span="426-426"];
m94_300 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(ulong?)", file="TraceJsonWriter.cs", label="_innerWriter.WriteValue(value)", span="427-427"];
m94_301 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(ulong?)", file="TraceJsonWriter.cs", label="value.HasValue", span="428-428"];
m94_302 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(ulong?)", file="TraceJsonWriter.cs", label="base.WriteValue(value.GetValueOrDefault())", span="430-430"];
m94_303 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(ulong?)", file="TraceJsonWriter.cs", label="base.WriteUndefined()", span="434-434"];
m94_304 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(ulong?)", file="TraceJsonWriter.cs", label="Exit Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(ulong?)", span="424-424"];
m94_81 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(byte[])", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(byte[])", span="123-123"];
m94_82 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(byte[])", file="TraceJsonWriter.cs", label="_textWriter.WriteValue(value)", span="125-125"];
m94_83 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(byte[])", file="TraceJsonWriter.cs", label="_innerWriter.WriteValue(value)", span="126-126"];
m94_84 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(byte[])", file="TraceJsonWriter.cs", label="value == null", span="127-127"];
m94_86 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(byte[])", file="TraceJsonWriter.cs", label="base.WriteValue(value)", span="133-133"];
m94_85 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(byte[])", file="TraceJsonWriter.cs", label="base.WriteUndefined()", span="129-129"];
m94_87 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(byte[])", file="TraceJsonWriter.cs", label="Exit Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(byte[])", span="123-123"];
m94_194 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(int?)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(int?)", span="1084-1084"];
m94_127 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(double?)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(double?)", span="189-189"];
m94_128 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(double?)", file="TraceJsonWriter.cs", label="_textWriter.WriteValue(value)", span="191-191"];
m94_129 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(double?)", file="TraceJsonWriter.cs", label="_innerWriter.WriteValue(value)", span="192-192"];
m94_130 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(double?)", file="TraceJsonWriter.cs", label="value.HasValue", span="193-193"];
m94_131 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(double?)", file="TraceJsonWriter.cs", label="base.WriteValue(value.GetValueOrDefault())", span="195-195"];
m94_132 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(double?)", file="TraceJsonWriter.cs", label="base.WriteUndefined()", span="199-199"];
m94_133 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(double?)", file="TraceJsonWriter.cs", label="Exit Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(double?)", span="189-189"];
m94_171 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.Guid)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.Guid)", span="1066-1066"];
m94_229 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(sbyte)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(sbyte)", span="608-608"];
m94_66 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(char)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(char)", span="102-102"];
m94_67 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(char)", file="TraceJsonWriter.cs", label="_textWriter.WriteValue(value)", span="104-104"];
m94_68 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(char)", file="TraceJsonWriter.cs", label="_innerWriter.WriteValue(value)", span="105-105"];
m94_69 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(char)", file="TraceJsonWriter.cs", label="base.WriteValue(value)", span="106-106"];
m94_70 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(char)", file="TraceJsonWriter.cs", label="Exit Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(char)", span="102-102"];
m94_329 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(ushort?)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(ushort?)", span="1215-1215"];
m94_35 [cluster="Newtonsoft.Json.JsonWriter.WriteUndefined()", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteUndefined()", span="886-886"];
m94_0 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.TraceJsonWriter(Newtonsoft.Json.JsonWriter)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.TraceJsonWriter(Newtonsoft.Json.JsonWriter)", span="17-17"];
m94_1 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.TraceJsonWriter(Newtonsoft.Json.JsonWriter)", file="TraceJsonWriter.cs", label="_innerWriter = innerWriter", span="19-19"];
m94_6 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.TraceJsonWriter(Newtonsoft.Json.JsonWriter)", file="TraceJsonWriter.cs", label="_textWriter.Culture = innerWriter.Culture", span="27-27"];
m94_7 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.TraceJsonWriter(Newtonsoft.Json.JsonWriter)", file="TraceJsonWriter.cs", label="_textWriter.DateFormatHandling = innerWriter.DateFormatHandling", span="28-28"];
m94_8 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.TraceJsonWriter(Newtonsoft.Json.JsonWriter)", file="TraceJsonWriter.cs", label="_textWriter.DateFormatString = innerWriter.DateFormatString", span="29-29"];
m94_9 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.TraceJsonWriter(Newtonsoft.Json.JsonWriter)", file="TraceJsonWriter.cs", label="_textWriter.DateTimeZoneHandling = innerWriter.DateTimeZoneHandling", span="30-30"];
m94_10 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.TraceJsonWriter(Newtonsoft.Json.JsonWriter)", file="TraceJsonWriter.cs", label="_textWriter.FloatFormatHandling = innerWriter.FloatFormatHandling", span="31-31"];
m94_2 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.TraceJsonWriter(Newtonsoft.Json.JsonWriter)", file="TraceJsonWriter.cs", label="_sw = new StringWriter(CultureInfo.InvariantCulture)", span="21-21"];
m94_3 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.TraceJsonWriter(Newtonsoft.Json.JsonWriter)", file="TraceJsonWriter.cs", label="_sw.Write(''Serialized JSON: '' + Environment.NewLine)", span="23-23"];
m94_4 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.TraceJsonWriter(Newtonsoft.Json.JsonWriter)", file="TraceJsonWriter.cs", label="_textWriter = new JsonTextWriter(_sw)", span="25-25"];
m94_5 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.TraceJsonWriter(Newtonsoft.Json.JsonWriter)", file="TraceJsonWriter.cs", label="_textWriter.Formatting = Formatting.Indented", span="26-26"];
m94_11 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.TraceJsonWriter(Newtonsoft.Json.JsonWriter)", file="TraceJsonWriter.cs", label="Exit Newtonsoft.Json.Serialization.TraceJsonWriter.TraceJsonWriter(Newtonsoft.Json.JsonWriter)", span="17-17"];
m94_165 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.Guid)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.Guid)", span="238-238"];
m94_166 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.Guid)", file="TraceJsonWriter.cs", label="_textWriter.WriteValue(value)", span="240-240"];
m94_167 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.Guid)", file="TraceJsonWriter.cs", label="_innerWriter.WriteValue(value)", span="241-241"];
m94_168 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.Guid)", file="TraceJsonWriter.cs", label="base.WriteValue(value)", span="242-242"];
m94_169 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.Guid)", file="TraceJsonWriter.cs", label="Exit Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.Guid)", span="238-238"];
m94_343 [cluster="Newtonsoft.Json.JsonWriter.WriteComment(string)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteComment(string)", span="1421-1421"];
m94_260 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="916-916"];
m94_89 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(byte[])", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(byte[])", span="1362-1362"];
m94_24 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", span="618-618"];
m94_96 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime)", span="1046-1046"];
m94_376 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="455-455"];
m94_200 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(long)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(long)", span="481-481"];
m94_344 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteStartArray()", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteStartArray()", span="487-487"];
m94_345 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteStartArray()", file="TraceJsonWriter.cs", label="_textWriter.WriteStartArray()", span="489-489"];
m94_346 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteStartArray()", file="TraceJsonWriter.cs", label="_innerWriter.WriteStartArray()", span="490-490"];
m94_347 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteStartArray()", file="TraceJsonWriter.cs", label="base.WriteStartArray()", span="491-491"];
m94_348 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteStartArray()", file="TraceJsonWriter.cs", label="Exit Newtonsoft.Json.Serialization.TraceJsonWriter.WriteStartArray()", span="487-487"];
m94_321 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(ushort)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(ushort)", span="1000-1000"];
m94_267 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.TimeSpan)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.TimeSpan)", span="1075-1075"];
m94_356 [cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="429-429"];
m94_421 [cluster="Newtonsoft.Json.JsonTextWriter.Flush()", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.Flush()", span="172-172"];
m94_36 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(bool)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(bool)", span="60-60"];
m94_37 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(bool)", file="TraceJsonWriter.cs", label="_textWriter.WriteValue(value)", span="62-62"];
m94_38 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(bool)", file="TraceJsonWriter.cs", label="_innerWriter.WriteValue(value)", span="63-63"];
m94_39 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(bool)", file="TraceJsonWriter.cs", label="base.WriteValue(value)", span="64-64"];
m94_40 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(bool)", file="TraceJsonWriter.cs", label="Exit Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(bool)", span="60-60"];
m94_104 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime?)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime?)", span="1296-1296"];
m94_14 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="149-149"];
m94_330 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteWhitespace(string)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteWhitespace(string)", span="473-473"];
m94_331 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteWhitespace(string)", file="TraceJsonWriter.cs", label="_textWriter.WriteWhitespace(ws)", span="475-475"];
m94_332 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteWhitespace(string)", file="TraceJsonWriter.cs", label="_innerWriter.WriteWhitespace(ws)", span="476-476"];
m94_333 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteWhitespace(string)", file="TraceJsonWriter.cs", label="base.WriteWhitespace(ws)", span="477-477"];
m94_334 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteWhitespace(string)", file="TraceJsonWriter.cs", label="Exit Newtonsoft.Json.Serialization.TraceJsonWriter.WriteWhitespace(string)", span="473-473"];
m94_409 [cluster="Newtonsoft.Json.JsonWriter.WriteRaw(string)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteRaw(string)", span="895-895"];
m94_58 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(byte?)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(byte?)", span="88-88"];
m94_59 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(byte?)", file="TraceJsonWriter.cs", label="_textWriter.WriteValue(value)", span="90-90"];
m94_60 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(byte?)", file="TraceJsonWriter.cs", label="_innerWriter.WriteValue(value)", span="91-91"];
m94_61 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(byte?)", file="TraceJsonWriter.cs", label="value.HasValue", span="92-92"];
m94_62 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(byte?)", file="TraceJsonWriter.cs", label="base.WriteValue(value.GetValueOrDefault())", span="94-94"];
m94_63 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(byte?)", file="TraceJsonWriter.cs", label="base.WriteUndefined()", span="98-98"];
m94_64 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(byte?)", file="TraceJsonWriter.cs", label="Exit Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(byte?)", span="88-88"];
m94_13 [cluster="System.IO.StringWriter.Write(string)", file="TraceJsonWriter.cs", label="Entry System.IO.StringWriter.Write(string)", span="0-0"];
m94_105 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.DateTimeOffset)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.DateTimeOffset)", span="159-159"];
m94_106 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.DateTimeOffset)", file="TraceJsonWriter.cs", label="_textWriter.WriteValue(value)", span="161-161"];
m94_107 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.DateTimeOffset)", file="TraceJsonWriter.cs", label="_innerWriter.WriteValue(value)", span="162-162"];
m94_108 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.DateTimeOffset)", file="TraceJsonWriter.cs", label="base.WriteValue(value)", span="163-163"];
m94_109 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.DateTimeOffset)", file="TraceJsonWriter.cs", label="Exit Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.DateTimeOffset)", span="159-159"];
m94_261 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.TimeSpan)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.TimeSpan)", span="375-375"];
m94_262 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.TimeSpan)", file="TraceJsonWriter.cs", label="_textWriter.WriteValue(value)", span="377-377"];
m94_263 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.TimeSpan)", file="TraceJsonWriter.cs", label="_innerWriter.WriteValue(value)", span="378-378"];
m94_264 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.TimeSpan)", file="TraceJsonWriter.cs", label="base.WriteValue(value)", span="379-379"];
m94_265 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.TimeSpan)", file="TraceJsonWriter.cs", label="Exit Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.TimeSpan)", span="375-375"];
m94_390 [cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="405-405"];
m94_275 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.TimeSpan?)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.TimeSpan?)", span="1346-1346"];
m94_357 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteStartConstructor(string)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteStartConstructor(string)", span="501-501"];
m94_358 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteStartConstructor(string)", file="TraceJsonWriter.cs", label="_textWriter.WriteStartConstructor(name)", span="503-503"];
m94_359 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteStartConstructor(string)", file="TraceJsonWriter.cs", label="_innerWriter.WriteStartConstructor(name)", span="504-504"];
m94_360 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteStartConstructor(string)", file="TraceJsonWriter.cs", label="base.WriteStartConstructor(name)", span="505-505"];
m94_361 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteStartConstructor(string)", file="TraceJsonWriter.cs", label="Exit Newtonsoft.Json.Serialization.TraceJsonWriter.WriteStartConstructor(string)", span="501-501"];
m94_56 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(byte)", span="597-597"];
m94_408 [cluster="Newtonsoft.Json.JsonTextWriter.WriteRaw(string)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteRaw(string)", span="425-425"];
m94_73 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(char?)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(char?)", span="109-109"];
m94_74 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(char?)", file="TraceJsonWriter.cs", label="_textWriter.WriteValue(value)", span="111-111"];
m94_75 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(char?)", file="TraceJsonWriter.cs", label="_innerWriter.WriteValue(value)", span="112-112"];
m94_76 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(char?)", file="TraceJsonWriter.cs", label="value.HasValue", span="113-113"];
m94_77 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(char?)", file="TraceJsonWriter.cs", label="base.WriteValue(value.GetValueOrDefault())", span="115-115"];
m94_78 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(char?)", file="TraceJsonWriter.cs", label="base.WriteUndefined()", span="119-119"];
m94_79 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(char?)", file="TraceJsonWriter.cs", label="Exit Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(char?)", span="109-109"];
m94_51 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(byte)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(byte)", span="81-81"];
m94_52 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(byte)", file="TraceJsonWriter.cs", label="_textWriter.WriteValue(value)", span="83-83"];
m94_53 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(byte)", file="TraceJsonWriter.cs", label="_innerWriter.WriteValue(value)", span="84-84"];
m94_54 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(byte)", file="TraceJsonWriter.cs", label="base.WriteValue(value)", span="85-85"];
m94_55 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(byte)", file="TraceJsonWriter.cs", label="Exit Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(byte)", span="81-81"];
m94_179 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.Guid?)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.Guid?)", span="1330-1330"];
m94_34 [cluster="System.Nullable<T>.GetValueOrDefault()", file="TraceJsonWriter.cs", label="Entry System.Nullable<T>.GetValueOrDefault()", span="0-0"];
m94_350 [cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="421-421"];
m94_397 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteRawValue(string)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteRawValue(string)", span="545-545"];
m94_398 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteRawValue(string)", file="TraceJsonWriter.cs", label="_textWriter.WriteRawValue(json)", span="547-547"];
m94_399 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteRawValue(string)", file="TraceJsonWriter.cs", label="_innerWriter.WriteRawValue(json)", span="548-548"];
m94_400 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteRawValue(string)", file="TraceJsonWriter.cs", label="InternalWriteValue(JsonToken.Undefined)", span="551-551"];
m94_401 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteRawValue(string)", file="TraceJsonWriter.cs", label="Exit Newtonsoft.Json.Serialization.TraceJsonWriter.WriteRawValue(string)", span="545-545"];
m94_135 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(double?)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(double?)", span="1166-1166"];
m94_239 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(short)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(short)", span="347-347"];
m94_240 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(short)", file="TraceJsonWriter.cs", label="_textWriter.WriteValue(value)", span="349-349"];
m94_241 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(short)", file="TraceJsonWriter.cs", label="_innerWriter.WriteValue(value)", span="350-350"];
m94_242 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(short)", file="TraceJsonWriter.cs", label="base.WriteValue(value)", span="351-351"];
m94_243 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(short)", file="TraceJsonWriter.cs", label="Exit Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(short)", span="347-347"];
m94_322 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(ushort?)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(ushort?)", span="459-459"];
m94_323 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(ushort?)", file="TraceJsonWriter.cs", label="_textWriter.WriteValue(value)", span="461-461"];
m94_324 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(ushort?)", file="TraceJsonWriter.cs", label="_innerWriter.WriteValue(value)", span="462-462"];
m94_325 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(ushort?)", file="TraceJsonWriter.cs", label="value.HasValue", span="463-463"];
m94_326 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(ushort?)", file="TraceJsonWriter.cs", label="base.WriteValue(value.GetValueOrDefault())", span="465-465"];
m94_327 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(ushort?)", file="TraceJsonWriter.cs", label="base.WriteUndefined()", span="469-469"];
m94_328 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(ushort?)", file="TraceJsonWriter.cs", label="Exit Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(ushort?)", span="459-459"];
m94_15 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.GetSerializedJsonMessage()", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.GetSerializedJsonMessage()", span="34-34"];
m94_16 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.GetSerializedJsonMessage()", file="TraceJsonWriter.cs", label="return _sw.ToString();", span="36-36"];
m94_17 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.GetSerializedJsonMessage()", file="TraceJsonWriter.cs", label="Exit Newtonsoft.Json.Serialization.TraceJsonWriter.GetSerializedJsonMessage()", span="34-34"];
m94_276 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(uint)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(uint)", span="396-396"];
m94_277 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(uint)", file="TraceJsonWriter.cs", label="_textWriter.WriteValue(value)", span="398-398"];
m94_278 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(uint)", file="TraceJsonWriter.cs", label="_innerWriter.WriteValue(value)", span="399-399"];
m94_279 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(uint)", file="TraceJsonWriter.cs", label="base.WriteValue(value)", span="400-400"];
m94_280 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(uint)", file="TraceJsonWriter.cs", label="Exit Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(uint)", span="396-396"];
m94_230 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(sbyte)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(sbyte)", span="1028-1028"];
m94_363 [cluster="Newtonsoft.Json.JsonWriter.WriteStartConstructor(string)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartConstructor(string)", span="438-438"];
m94_370 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WritePropertyName(string)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WritePropertyName(string)", span="515-515"];
m94_371 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WritePropertyName(string)", file="TraceJsonWriter.cs", label="_textWriter.WritePropertyName(name)", span="517-517"];
m94_372 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WritePropertyName(string)", file="TraceJsonWriter.cs", label="_innerWriter.WritePropertyName(name)", span="518-518"];
m94_373 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WritePropertyName(string)", file="TraceJsonWriter.cs", label="base.WritePropertyName(name)", span="519-519"];
m94_374 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WritePropertyName(string)", file="TraceJsonWriter.cs", label="Exit Newtonsoft.Json.Serialization.TraceJsonWriter.WritePropertyName(string)", span="515-515"];
m94_202 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(long?)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(long?)", span="287-287"];
m94_203 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(long?)", file="TraceJsonWriter.cs", label="_textWriter.WriteValue(value)", span="289-289"];
m94_204 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(long?)", file="TraceJsonWriter.cs", label="_innerWriter.WriteValue(value)", span="290-290"];
m94_205 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(long?)", file="TraceJsonWriter.cs", label="value.HasValue", span="291-291"];
m94_206 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(long?)", file="TraceJsonWriter.cs", label="base.WriteValue(value.GetValueOrDefault())", span="293-293"];
m94_207 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(long?)", file="TraceJsonWriter.cs", label="base.WriteUndefined()", span="297-297"];
m94_208 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(long?)", file="TraceJsonWriter.cs", label="Exit Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(long?)", span="287-287"];
m94_290 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(uint?)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(uint?)", span="1101-1101"];
m94_396 [cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="413-413"];
m94_136 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteUndefined()", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteUndefined()", span="203-203"];
m94_137 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteUndefined()", file="TraceJsonWriter.cs", label="_textWriter.WriteUndefined()", span="205-205"];
m94_138 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteUndefined()", file="TraceJsonWriter.cs", label="_innerWriter.WriteUndefined()", span="206-206"];
m94_139 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteUndefined()", file="TraceJsonWriter.cs", label="base.WriteUndefined()", span="207-207"];
m94_140 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteUndefined()", file="TraceJsonWriter.cs", label="Exit Newtonsoft.Json.Serialization.TraceJsonWriter.WriteUndefined()", span="203-203"];
m94_187 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(int?)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(int?)", span="266-266"];
m94_188 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(int?)", file="TraceJsonWriter.cs", label="_textWriter.WriteValue(value)", span="268-268"];
m94_189 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(int?)", file="TraceJsonWriter.cs", label="_innerWriter.WriteValue(value)", span="269-269"];
m94_190 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(int?)", file="TraceJsonWriter.cs", label="value.HasValue", span="270-270"];
m94_191 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(int?)", file="TraceJsonWriter.cs", label="base.WriteValue(value.GetValueOrDefault())", span="272-272"];
m94_192 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(int?)", file="TraceJsonWriter.cs", label="base.WriteUndefined()", span="276-276"];
m94_193 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(int?)", file="TraceJsonWriter.cs", label="Exit Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(int?)", span="266-266"];
m94_245 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(short)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(short)", span="990-990"];
m94_364 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteEndConstructor()", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteEndConstructor()", span="508-508"];
m94_365 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteEndConstructor()", file="TraceJsonWriter.cs", label="_textWriter.WriteEndConstructor()", span="510-510"];
m94_366 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteEndConstructor()", file="TraceJsonWriter.cs", label="_innerWriter.WriteEndConstructor()", span="511-511"];
m94_367 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteEndConstructor()", file="TraceJsonWriter.cs", label="base.WriteEndConstructor()", span="512-512"];
m94_368 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteEndConstructor()", file="TraceJsonWriter.cs", label="Exit Newtonsoft.Json.Serialization.TraceJsonWriter.WriteEndConstructor()", span="508-508"];
m94_112 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.DateTimeOffset?)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.DateTimeOffset?)", span="166-166"];
m94_113 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.DateTimeOffset?)", file="TraceJsonWriter.cs", label="_textWriter.WriteValue(value)", span="168-168"];
m94_114 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.DateTimeOffset?)", file="TraceJsonWriter.cs", label="_innerWriter.WriteValue(value)", span="169-169"];
m94_115 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.DateTimeOffset?)", file="TraceJsonWriter.cs", label="value.HasValue", span="170-170"];
m94_116 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.DateTimeOffset?)", file="TraceJsonWriter.cs", label="base.WriteValue(value.GetValueOrDefault())", span="172-172"];
m94_117 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.DateTimeOffset?)", file="TraceJsonWriter.cs", label="base.WriteUndefined()", span="176-176"];
m94_118 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.DateTimeOffset?)", file="TraceJsonWriter.cs", label="Exit Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(System.DateTimeOffset?)", span="166-166"];
m94_126 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(double)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(double)", span="972-972"];
m94_222 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(object)", span="1395-1395"];
m94_417 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.Flush()", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.Flush()", span="568-568"];
m94_418 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.Flush()", file="TraceJsonWriter.cs", label="_textWriter.Flush()", span="570-570"];
m94_419 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.Flush()", file="TraceJsonWriter.cs", label="_innerWriter.Flush()", span="571-571"];
m94_420 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.Flush()", file="TraceJsonWriter.cs", label="Exit Newtonsoft.Json.Serialization.TraceJsonWriter.Flush()", span="568-568"];
m94_238 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(sbyte?)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(sbyte?)", span="1264-1264"];
m94_349 [cluster="Newtonsoft.Json.JsonTextWriter.WriteStartArray()", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteStartArray()", span="219-219"];
m94_210 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(object)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(object)", span="301-301"];
m94_211 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(object)", file="TraceJsonWriter.cs", label="value is BigInteger", span="304-304"];
m94_212 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(object)", file="TraceJsonWriter.cs", label="_textWriter.WriteValue(value)", span="306-306"];
m94_213 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(object)", file="TraceJsonWriter.cs", label="_innerWriter.WriteValue(value)", span="307-307"];
m94_215 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(object)", file="TraceJsonWriter.cs", label="_textWriter.WriteValue(value)", span="313-313"];
m94_216 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(object)", file="TraceJsonWriter.cs", label="_innerWriter.WriteValue(value)", span="314-314"];
m94_217 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(object)", file="TraceJsonWriter.cs", label="value == null", span="315-315"];
m94_219 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(object)", file="TraceJsonWriter.cs", label="base.WriteValue(value)", span="321-321"];
m94_214 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(object)", file="TraceJsonWriter.cs", label="InternalWriteValue(JsonToken.Integer)", span="308-308"];
m94_218 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(object)", file="TraceJsonWriter.cs", label="base.WriteUndefined()", span="317-317"];
m94_220 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(object)", file="TraceJsonWriter.cs", label="Exit Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(object)", span="301-301"];
m94_26 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(decimal?)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(decimal?)", span="46-46"];
m94_27 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(decimal?)", file="TraceJsonWriter.cs", label="_textWriter.WriteValue(value)", span="48-48"];
m94_28 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(decimal?)", file="TraceJsonWriter.cs", label="_innerWriter.WriteValue(value)", span="49-49"];
m94_29 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(decimal?)", file="TraceJsonWriter.cs", label="value.HasValue", span="50-50"];
m94_30 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(decimal?)", file="TraceJsonWriter.cs", label="base.WriteValue(value.GetValueOrDefault())", span="52-52"];
m94_31 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(decimal?)", file="TraceJsonWriter.cs", label="base.WriteUndefined()", span="56-56"];
m94_32 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(decimal?)", file="TraceJsonWriter.cs", label="Exit Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(decimal?)", span="46-46"];
m94_283 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(uint?)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(uint?)", span="403-403"];
m94_284 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(uint?)", file="TraceJsonWriter.cs", label="_textWriter.WriteValue(value)", span="405-405"];
m94_285 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(uint?)", file="TraceJsonWriter.cs", label="_innerWriter.WriteValue(value)", span="406-406"];
m94_286 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(uint?)", file="TraceJsonWriter.cs", label="value.HasValue", span="407-407"];
m94_287 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(uint?)", file="TraceJsonWriter.cs", label="base.WriteValue(value.GetValueOrDefault())", span="409-409"];
m94_288 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(uint?)", file="TraceJsonWriter.cs", label="base.WriteUndefined()", span="413-413"];
m94_289 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(uint?)", file="TraceJsonWriter.cs", label="Exit Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(uint?)", span="403-403"];
m94_141 [cluster="Newtonsoft.Json.JsonTextWriter.WriteUndefined()", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteUndefined()", span="415-415"];
m94_88 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte[])", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(byte[])", span="662-662"];
m94_320 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(ushort)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(ushort)", span="577-577"];
m94_186 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(int)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(int)", span="925-925"];
m94_254 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(string)", file="TraceJsonWriter.cs", label="Entry Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(string)", span="368-368"];
m94_255 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(string)", file="TraceJsonWriter.cs", label="_textWriter.WriteValue(value)", span="370-370"];
m94_256 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(string)", file="TraceJsonWriter.cs", label="_innerWriter.WriteValue(value)", span="371-371"];
m94_257 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(string)", file="TraceJsonWriter.cs", label="base.WriteValue(value)", span="372-372"];
m94_258 [cluster="Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(string)", file="TraceJsonWriter.cs", label="Exit Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue(string)", span="368-368"];
m94_423 [file="TraceJsonWriter.cs", label="Newtonsoft.Json.Serialization.TraceJsonWriter", span=""];
m96_12 [cluster="Newtonsoft.Json.Converters.RegexConverter.WriteBson(Newtonsoft.Json.Bson.BsonWriter, System.Text.RegularExpressions.Regex)", file="TypeExtensions.cs", label="string options = null", span="72-72"];
m96_13 [cluster="Newtonsoft.Json.Converters.RegexConverter.WriteBson(Newtonsoft.Json.Bson.BsonWriter, System.Text.RegularExpressions.Regex)", file="TypeExtensions.cs", label="HasFlag(regex.Options, RegexOptions.IgnoreCase)", span="74-74"];
m96_14 [cluster="Newtonsoft.Json.Converters.RegexConverter.WriteBson(Newtonsoft.Json.Bson.BsonWriter, System.Text.RegularExpressions.Regex)", file="TypeExtensions.cs", label="options += ''i''", span="75-75"];
m96_62 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadRegexString(Newtonsoft.Json.JsonReader)", file="TypeExtensions.cs", label="options |= RegexOptions.Singleline", span="142-142"];
m96_63 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadRegexString(Newtonsoft.Json.JsonReader)", file="TypeExtensions.cs", label="'x'", span="144-144"];
m96_64 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadRegexString(Newtonsoft.Json.JsonReader)", file="TypeExtensions.cs", label="options |= RegexOptions.ExplicitCapture", span="145-145"];
m96_65 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadRegexString(Newtonsoft.Json.JsonReader)", file="TypeExtensions.cs", label="return new Regex(patternText, options);", span="150-150"];
m96_7 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.ContainsGenericParameters(System.Type)", file="TypeExtensions.cs", label="return type.ContainsGenericParameters;", span="138-138"];
m96_15 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsGenericTypeDefinition(System.Type)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.IsGenericTypeDefinition(System.Type)", span="162-162"];
m96_17 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsGenericTypeDefinition(System.Type)", file="TypeExtensions.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.IsGenericTypeDefinition(System.Type)", span="162-162"];
m96_20 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.BaseType(System.Type)", file="TypeExtensions.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.BaseType(System.Type)", span="171-171"];
m96_22 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.Assembly(System.Type)", file="TypeExtensions.cs", label="return type.Assembly;", span="183-183"];
m96_16 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsGenericTypeDefinition(System.Type)", file="TypeExtensions.cs", label="return type.IsGenericTypeDefinition;", span="165-165"];
m96_18 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.BaseType(System.Type)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.BaseType(System.Type)", span="171-171"];
m96_19 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.BaseType(System.Type)", file="TypeExtensions.cs", label="return type.BaseType;", span="174-174"];
m96_21 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.Assembly(System.Type)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.Assembly(System.Type)", span="180-180"];
m96_23 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.Assembly(System.Type)", file="TypeExtensions.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.Assembly(System.Type)", span="180-180"];
m96_40 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsValueType(System.Type)", file="TypeExtensions.cs", label="return type.IsValueType;", span="538-538"];
m96_42 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsPrimitive(System.Type)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.IsPrimitive(System.Type)", span="544-544"];
m96_41 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsValueType(System.Type)", file="TypeExtensions.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.IsValueType(System.Type)", span="535-535"];
m96_44 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsPrimitive(System.Type)", file="TypeExtensions.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.IsPrimitive(System.Type)", span="544-544"];
m96_43 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsPrimitive(System.Type)", file="TypeExtensions.cs", label="return type.IsPrimitive;", span="547-547"];
m96_45 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", span="553-553"];
m96_46 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="TypeExtensions.cs", label="Type current = type", span="555-555"];
m96_48 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="TypeExtensions.cs", label="string.Equals(current.FullName, fullTypeName, StringComparison.Ordinal)", span="559-559"];
m96_52 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="TypeExtensions.cs", label="type.GetInterfaces()", span="568-568"];
m96_54 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="TypeExtensions.cs", label="match = type", span="572-572"];
m96_55 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="TypeExtensions.cs", label="return true;", span="573-573"];
m96_50 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="TypeExtensions.cs", label="return true;", span="562-562"];
m96_51 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="TypeExtensions.cs", label="current = current.BaseType()", span="565-565"];
m96_53 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="TypeExtensions.cs", label="string.Equals(i.Name, fullTypeName, StringComparison.Ordinal)", span="570-570"];
m96_58 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="TypeExtensions.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", span="553-553"];
m96_60 [cluster="System.Type.BaseType()", file="TypeExtensions.cs", label="Entry System.Type.BaseType()", span="171-171"];
m96_56 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="TypeExtensions.cs", label="match = null", span="577-577"];
m96_57 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="TypeExtensions.cs", label="return false;", span="578-578"];
m96_59 [cluster="string.Equals(string, string, System.StringComparison)", file="TypeExtensions.cs", label="Entry string.Equals(string, string, System.StringComparison)", span="0-0"];
m96_61 [cluster="System.Type.GetInterfaces()", file="TypeExtensions.cs", label="Entry System.Type.GetInterfaces()", span="0-0"];
m96_66 [cluster="System.Type.AssignableToTypeName(string, out System.Type)", file="TypeExtensions.cs", label="Entry System.Type.AssignableToTypeName(string, out System.Type)", span="553-553"];
m96_93 [cluster="string.Equals(string, string, System.StringComparison)", file="TypeExtensions.cs", label="Entry string.Equals(string, string, System.StringComparison)", span="0-0"];
m96_91 [cluster="Newtonsoft.Json.JsonReader.Read()", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.JsonReader.Read()", span="405-405"];
m96_24 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsEnum(System.Type)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.IsEnum(System.Type)", span="189-189"];
m96_36 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="454-454"];
m96_37 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="873-873"];
m96_38 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="882-882"];
m96_3 [cluster="Newtonsoft.Json.Converters.RegexConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="TypeExtensions.cs", label="bsonWriter != null", span="52-52"];
m96_4 [cluster="Newtonsoft.Json.Converters.RegexConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="TypeExtensions.cs", label="WriteBson(bsonWriter, regex)", span="53-53"];
m96_5 [cluster="Newtonsoft.Json.Converters.RegexConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="TypeExtensions.cs", label="WriteJson(writer, regex, serializer)", span="55-55"];
m96_35 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsAbstract(System.Type)", file="TypeExtensions.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.IsAbstract(System.Type)", span="517-517"];
m96_33 [cluster="Newtonsoft.Json.Converters.RegexConverter.WriteJson(Newtonsoft.Json.JsonWriter, System.Text.RegularExpressions.Regex, Newtonsoft.Json.JsonSerializer)", file="TypeExtensions.cs", label="Exit Newtonsoft.Json.Converters.RegexConverter.WriteJson(Newtonsoft.Json.JsonWriter, System.Text.RegularExpressions.Regex, Newtonsoft.Json.JsonSerializer)", span="91-91"];
m96_34 [cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="404-404"];
m96_27 [cluster="Newtonsoft.Json.Converters.RegexConverter.WriteJson(Newtonsoft.Json.JsonWriter, System.Text.RegularExpressions.Regex, Newtonsoft.Json.JsonSerializer)", file="TypeExtensions.cs", label="writer.WriteStartObject()", span="95-95"];
m96_28 [cluster="Newtonsoft.Json.Converters.RegexConverter.WriteJson(Newtonsoft.Json.JsonWriter, System.Text.RegularExpressions.Regex, Newtonsoft.Json.JsonSerializer)", file="TypeExtensions.cs", label="writer.WritePropertyName((resolver != null) ? resolver.GetResolvedPropertyName(PatternName) : PatternName)", span="96-96"];
m96_29 [cluster="Newtonsoft.Json.Converters.RegexConverter.WriteJson(Newtonsoft.Json.JsonWriter, System.Text.RegularExpressions.Regex, Newtonsoft.Json.JsonSerializer)", file="TypeExtensions.cs", label="writer.WriteValue(regex.ToString())", span="97-97"];
m96_8 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.ContainsGenericParameters(System.Type)", file="TypeExtensions.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.ContainsGenericParameters(System.Type)", span="135-135"];
m96_32 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsSealed(System.Type)", color=green, community=0, file="TypeExtensions.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.IsSealed(System.Type)", prediction=30, span="207-207"];
m96_31 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsSealed(System.Type)", file="TypeExtensions.cs", label="return type.IsSealed;", span="210-210"];
m96_26 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsEnum(System.Type)", file="TypeExtensions.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.IsEnum(System.Type)", span="189-189"];
m96_30 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsSealed(System.Type)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.IsSealed(System.Type)", span="207-207"];
m96_25 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsEnum(System.Type)", file="TypeExtensions.cs", label="return type.IsEnum;", span="192-192"];
m96_0 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.Method(System.Delegate)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.Method(System.Delegate)", span="98-98"];
m96_1 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.Method(System.Delegate)", file="TypeExtensions.cs", label="return d.Method;", span="101-101"];
m96_2 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.Method(System.Delegate)", file="TypeExtensions.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.Method(System.Delegate)", span="98-98"];
m96_6 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.ContainsGenericParameters(System.Type)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.ContainsGenericParameters(System.Type)", span="135-135"];
m96_92 [cluster="object.ToString()", file="TypeExtensions.cs", label="Entry object.ToString()", span="0-0"];
m96_68 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.ImplementInterface(System.Type, System.Type)", file="TypeExtensions.cs", label="Type currentType = type", span="589-589"];
m96_39 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsValueType(System.Type)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.IsValueType(System.Type)", span="535-535"];
m96_9 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsInterface(System.Type)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.IsInterface(System.Type)", span="144-144"];
m96_10 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsInterface(System.Type)", file="TypeExtensions.cs", label="return type.IsInterface;", span="147-147"];
m96_11 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsInterface(System.Type)", file="TypeExtensions.cs", label="Exit Newtonsoft.Json.Utilities.TypeExtensions.IsInterface(System.Type)", span="144-144"];
m96_67 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.ImplementInterface(System.Type, System.Type)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Utilities.TypeExtensions.ImplementInterface(System.Type, System.Type)", span="587-587"];
m96_47 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadRegexObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.JsonSerializer)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.Converters.RegexConverter.ReadRegexObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.JsonSerializer)", span="153-153"];
m96_49 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", span="82-82"];
m96_94 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", span="696-696"];
m96_77 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadRegexObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.JsonSerializer)", file="TypeExtensions.cs", label="!reader.Read()", span="165-165"];
m96_69 [cluster="Newtonsoft.Json.Utilities.TypeExtensions.ImplementInterface(System.Type, System.Type)", file="TypeExtensions.cs", label="currentType != null", span="589-589"];
m96_95 [cluster="Newtonsoft.Json.JsonReader.Skip()", file="TypeExtensions.cs", label="Entry Newtonsoft.Json.JsonReader.Skip()", span="857-857"];
m96_72 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadRegexObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.JsonSerializer)", file="TypeExtensions.cs", label="RegexOptions? options = null", span="156-156"];
m96_70 [cluster="System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)", file="TypeExtensions.cs", label="Entry System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)", span="0-0"];
m96_74 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadRegexObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.JsonSerializer)", file="TypeExtensions.cs", label="reader.TokenType", span="160-160"];
m96_75 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadRegexObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.JsonSerializer)", file="TypeExtensions.cs", label="JsonToken.PropertyName", span="162-162"];
m96_71 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadRegexObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.JsonSerializer)", color=green, community=0, file="TypeExtensions.cs", label="string pattern = null", prediction=31, span="155-155"];
m96_73 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadRegexObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.JsonSerializer)", file="TypeExtensions.cs", label="reader.Read()", span="158-158"];
m96_76 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadRegexObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.JsonSerializer)", file="TypeExtensions.cs", label="string propertyName = reader.Value.ToString()", span="163-163"];
m96_86 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadRegexObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.JsonSerializer)", file="TypeExtensions.cs", label="pattern == null", span="178-178"];
m96_88 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadRegexObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.JsonSerializer)", file="TypeExtensions.cs", label="return new Regex(pattern, options ?? RegexOptions.None);", span="181-181"];
m96_83 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadRegexObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.JsonSerializer)", color=green, community=0, file="TypeExtensions.cs", label="reader.Skip()", prediction=32, span="173-173"];
m96_81 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadRegexObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.JsonSerializer)", file="TypeExtensions.cs", label="string.Equals(propertyName, OptionsName, StringComparison.OrdinalIgnoreCase)", span="170-170"];
m96_78 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadRegexObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.JsonSerializer)", file="TypeExtensions.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected end when reading Regex.'');", span="166-166"];
m96_80 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadRegexObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.JsonSerializer)", file="TypeExtensions.cs", label="pattern = (string)reader.Value", span="169-169"];
m96_82 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadRegexObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.JsonSerializer)", file="TypeExtensions.cs", label="options = serializer.Deserialize<RegexOptions>(reader)", span="171-171"];
m96_87 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadRegexObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.JsonSerializer)", file="TypeExtensions.cs", label="throw JsonSerializationException.Create(reader, ''Error deserializing Regex. No pattern found.'');", span="179-179"];
m96_89 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadRegexObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.JsonSerializer)", file="TypeExtensions.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected end when reading Regex.'');", span="185-185"];
m96_85 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadRegexObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.JsonSerializer)", file="TypeExtensions.cs", label="JsonToken.EndObject", span="177-177"];
m96_79 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadRegexObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.JsonSerializer)", file="TypeExtensions.cs", label="string.Equals(propertyName, PatternName, StringComparison.OrdinalIgnoreCase)", span="168-168"];
m96_84 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadRegexObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.JsonSerializer)", file="TypeExtensions.cs", label="JsonToken.Comment", span="175-175"];
m96_90 [cluster="Newtonsoft.Json.Converters.RegexConverter.ReadRegexObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.JsonSerializer)", file="TypeExtensions.cs", label="Exit Newtonsoft.Json.Converters.RegexConverter.ReadRegexObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.JsonSerializer)", span="153-153"];
m96_99 [file="TypeExtensions.cs", label="Newtonsoft.Json.Converters.RegexConverter", span=""];
m0_44 -> m0_46  [color=darkseagreen4, key=1, label="System.IO.TextReader", style=dashed];
m0_46 -> m0_46  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m0_34 -> m0_36  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m0_36 -> m0_36  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m0_29 -> m0_31  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m0_31 -> m0_31  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m0_39 -> m0_41  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m0_41 -> m0_41  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m0_10 -> m0_10  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m0_24 -> m0_26  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m0_26 -> m0_26  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m0_3 -> m0_3  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m0_17 -> m0_17  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m0_7 -> m0_7  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m2_14 -> m2_16  [color=darkseagreen4, key=1, label="System.Exception", style=dashed];
m3_6 -> m3_10  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m3_6 -> m3_15  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m3_24 -> m3_27  [color=darkseagreen4, key=1, label=v, style=dashed];
m3_24 -> m3_30  [color=darkseagreen4, key=1, label=v, style=dashed];
m3_24 -> m3_33  [color=darkseagreen4, key=1, label=v, style=dashed];
m3_24 -> m3_36  [color=darkseagreen4, key=1, label=v, style=dashed];
m3_24 -> m3_39  [color=darkseagreen4, key=1, label=v, style=dashed];
m3_24 -> m3_42  [color=darkseagreen4, key=1, label=v, style=dashed];
m3_50 -> m3_54  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m3_50 -> m3_58  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m3_50 -> m3_61  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m3_50 -> m3_62  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m3_50 -> m3_63  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m3_56 -> m3_73  [color=darkseagreen4, key=1, label=queryValueString, style=dashed];
m3_60 -> m3_62  [color=darkseagreen4, key=1, label=writer, style=dashed];
m3_60 -> m3_63  [color=darkseagreen4, key=1, label=writer, style=dashed];
m3_83 -> m3_7  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.CompositeExpression", style=dashed];
m3_83 -> m3_9  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.CompositeExpression", style=dashed];
m3_83 -> m3_14  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.CompositeExpression", style=dashed];
m3_84 -> m3_25  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression", style=dashed];
m3_84 -> m3_27  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression", style=dashed];
m3_84 -> m3_30  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression", style=dashed];
m3_84 -> m3_33  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression", style=dashed];
m3_84 -> m3_36  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression", style=dashed];
m3_84 -> m3_39  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression", style=dashed];
m3_84 -> m3_42  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression", style=dashed];
m4_314 -> m4_316  [color=darkseagreen4, key=1, label=s, style=dashed];
m4_177 -> m4_258  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonType", style=dashed];
m4_197 -> m4_199  [color=darkseagreen4, key=1, label=d, style=dashed];
m4_197 -> m4_200  [color=darkseagreen4, key=1, label=d, style=dashed];
m4_360 -> m4_363  [color=darkseagreen4, key=1, label=byte, style=dashed];
m4_360 -> m4_365  [color=darkseagreen4, key=1, label=byte, style=dashed];
m4_360 -> m4_367  [color=darkseagreen4, key=1, label=byte, style=dashed];
m4_130 -> m4_397  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_270 -> m4_274  [color=darkseagreen4, key=1, label=dataLength, style=dashed];
m4_271 -> m4_275  [color=darkseagreen4, key=1, label="out Newtonsoft.Json.Bson.BsonBinaryType", style=dashed];
m4_133 -> m4_135  [color=darkseagreen4, key=1, label=token, style=dashed];
m4_149 -> m4_153  [color=darkseagreen4, key=1, label=context, style=dashed];
m4_149 -> m4_154  [color=darkseagreen4, key=1, label=context, style=dashed];
m4_149 -> m4_160  [color=darkseagreen4, key=1, label=context, style=dashed];
m4_149 -> m4_165  [color=darkseagreen4, key=1, label=context, style=dashed];
m4_152 -> m4_160  [color=darkseagreen4, key=1, label=lengthMinusEnd, style=dashed];
m4_90 -> m4_93  [color=darkseagreen4, key=1, label=result, style=dashed];
m4_318 -> m4_331  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_318 -> m4_343  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_336 -> m4_338  [color=darkseagreen4, key=1, label=builder, style=dashed];
m4_336 -> m4_344  [color=darkseagreen4, key=1, label=builder, style=dashed];
m4_322 -> m4_335  [color=darkseagreen4, key=1, label=builder, style=dashed];
m4_322 -> m4_338  [color=darkseagreen4, key=1, label=builder, style=dashed];
m4_322 -> m4_344  [color=darkseagreen4, key=1, label=builder, style=dashed];
m4_329 -> m4_343  [color=darkseagreen4, key=1, label=totalBytesRead, style=dashed];
m4_330 -> m4_339  [color=darkseagreen4, key=1, label=byteCount, style=dashed];
m4_334 -> m4_339  [color=darkseagreen4, key=1, label=lastFullCharStop, style=dashed];
m4_334 -> m4_341  [color=darkseagreen4, key=1, label=lastFullCharStop, style=dashed];
m4_277 -> m4_287  [color=darkseagreen4, key=1, label=builder, style=dashed];
m4_277 -> m4_293  [color=darkseagreen4, key=1, label=builder, style=dashed];
m4_277 -> m4_295  [color=darkseagreen4, key=1, label=builder, style=dashed];
m4_277 -> m4_301  [color=darkseagreen4, key=1, label=builder, style=dashed];
m4_286 -> m4_289  [color=darkseagreen4, key=1, label=totalBytesRead, style=dashed];
m4_286 -> m4_300  [color=darkseagreen4, key=1, label=totalBytesRead, style=dashed];
m4_281 -> m4_287  [color=darkseagreen4, key=1, label=count, style=dashed];
m4_281 -> m4_299  [color=darkseagreen4, key=1, label=count, style=dashed];
m4_285 -> m4_296  [color=darkseagreen4, key=1, label=byteCount, style=dashed];
m4_284 -> m4_287  [color=darkseagreen4, key=1, label=count, style=dashed];
m4_284 -> m4_299  [color=darkseagreen4, key=1, label=count, style=dashed];
m4_291 -> m4_296  [color=darkseagreen4, key=1, label=lastFullCharStop, style=dashed];
m4_291 -> m4_298  [color=darkseagreen4, key=1, label=lastFullCharStop, style=dashed];
m4_288 -> m4_290  [color=darkseagreen4, key=1, label=length, style=dashed];
m4_292 -> m4_295  [color=darkseagreen4, key=1, label=charCount, style=dashed];
m4_294 -> m4_301  [color=darkseagreen4, key=1, label=builder, style=dashed];
m4_307 -> m4_356  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_307 -> m4_357  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_348 -> m4_350  [color=darkseagreen4, key=1, label=lookbackPos, style=dashed];
m4_348 -> m4_353  [color=darkseagreen4, key=1, label=lookbackPos, style=dashed];
m4_348 -> m4_355  [color=darkseagreen4, key=1, label=lookbackPos, style=dashed];
m4_348 -> m4_356  [color=darkseagreen4, key=1, label=lookbackPos, style=dashed];
m4_348 -> m4_358  [color=darkseagreen4, key=1, label=lookbackPos, style=dashed];
m4_349 -> m4_356  [color=darkseagreen4, key=1, label=bis, style=dashed];
m4_351 -> m4_354  [color=darkseagreen4, key=1, label=bis, style=dashed];
m4_351 -> m4_356  [color=darkseagreen4, key=1, label=bis, style=dashed];
m4_353 -> m4_353  [color=darkseagreen4, key=1, label=lookbackPos, style=dashed];
m4_353 -> m4_356  [color=darkseagreen4, key=1, label=lookbackPos, style=dashed];
m4_353 -> m4_358  [color=darkseagreen4, key=1, label=lookbackPos, style=dashed];
m4_355 -> m4_355  [color=darkseagreen4, key=1, label=lookbackPos, style=dashed];
m4_355 -> m4_358  [color=darkseagreen4, key=1, label=lookbackPos, style=dashed];
m4_401 -> m4_34  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_47  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_49  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_53  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_63  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_64  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_65  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_69  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_71  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_75  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_76  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_80  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_81  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_83  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_86  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_91  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_95  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_105  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_107  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_111  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_112  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_114  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_115  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_117  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_119  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_120  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_123  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_124  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_127  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_128  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_131  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_135  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_137  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_144  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_155  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_156  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_158  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_161  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_162  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_163  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_164  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_165  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_167  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_169  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_181  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_182  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_187  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_191  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_192  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_198  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_199  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_200  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_203  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_205  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_207  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_210  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_212  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_218  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_220  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_223  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_226  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_231  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_237  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_239  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_244  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_246  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_249  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_251  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_254  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_257  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_272  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_274  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_276  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_289  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_290  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_295  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_298  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_300  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_313  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_315  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_321  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_333  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_338  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_341  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_371  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_373  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_378  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_379  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_382  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_383  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_386  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_387  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_390  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_391  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_396  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m4_401 -> m4_397  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m5_20 -> m5_22  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_33 -> m5_44  [color=darkseagreen4, key=1, label=o, style=dashed];
m5_37 -> m5_46  [color=darkseagreen4, key=1, label=sw, style=dashed];
m5_37 -> m5_47  [color=darkseagreen4, key=1, label=sw, style=dashed];
m5_39 -> m5_45  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_45 -> m5_45  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_41 -> m5_44  [color=darkseagreen4, key=1, label=file, style=dashed];
m5_42 -> m5_44  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m5_81 -> m5_84  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_88 -> m5_97  [color=darkseagreen4, key=1, label=sw, style=dashed];
m5_88 -> m5_98  [color=darkseagreen4, key=1, label=sw, style=dashed];
m5_90 -> m5_96  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_96 -> m5_96  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_92 -> m5_95  [color=darkseagreen4, key=1, label=json, style=dashed];
m5_59 -> m5_61  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m5_65 -> m5_74  [color=darkseagreen4, key=1, label=sw, style=dashed];
m5_65 -> m5_75  [color=darkseagreen4, key=1, label=sw, style=dashed];
m5_67 -> m5_73  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_73 -> m5_73  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_70 -> m5_72  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m6_23 -> m6_25  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_91 -> m6_93  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_134 -> m6_136  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_134 -> m6_137  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_134 -> m6_138  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_155 -> m6_157  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_155 -> m6_158  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_64 -> m6_66  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_64 -> m6_67  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_64 -> m6_68  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_69 -> m6_71  [color=darkseagreen4, key=1, label=l, style=dashed];
m6_69 -> m6_72  [color=darkseagreen4, key=1, label=l, style=dashed];
m6_69 -> m6_73  [color=darkseagreen4, key=1, label=l, style=dashed];
m6_69 -> m6_74  [color=darkseagreen4, key=1, label=l, style=dashed];
m6_75 -> m6_77  [color=darkseagreen4, key=1, label=l, style=dashed];
m6_75 -> m6_78  [color=darkseagreen4, key=1, label=l, style=dashed];
m6_75 -> m6_79  [color=darkseagreen4, key=1, label=l, style=dashed];
m6_75 -> m6_80  [color=darkseagreen4, key=1, label=l, style=dashed];
m6_83 -> m6_85  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_145 -> m6_147  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_145 -> m6_148  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_44 -> m6_46  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_44 -> m6_47  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_48 -> m6_50  [color=darkseagreen4, key=1, label=l, style=dashed];
m6_48 -> m6_51  [color=darkseagreen4, key=1, label=l, style=dashed];
m6_48 -> m6_52  [color=darkseagreen4, key=1, label=l, style=dashed];
m6_53 -> m6_55  [color=darkseagreen4, key=1, label=l, style=dashed];
m6_53 -> m6_56  [color=darkseagreen4, key=1, label=l, style=dashed];
m6_53 -> m6_57  [color=darkseagreen4, key=1, label=l, style=dashed];
m6_115 -> m6_117  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_115 -> m6_118  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_115 -> m6_119  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_101 -> m6_103  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_101 -> m6_104  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_101 -> m6_105  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_101 -> m6_108  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_2 -> m6_4  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_165 -> m6_176  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_167 -> m6_176  [color=darkseagreen4, key=1, label="System.ComponentModel.PropertyChangedEventArgs", style=dashed];
m6_126 -> m6_128  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_126 -> m6_129  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_14 -> m6_16  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_179 -> m6_176  [color=darkseagreen4, key=1, label=o, style=dashed];
m7_87 -> m7_90  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_87 -> m7_91  [color=darkseagreen4, key=1, label=int, style=dashed];
m7_65 -> m7_102  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_13 -> m7_15  [color=darkseagreen4, key=1, label=T, style=dashed];
m7_13 -> m7_16  [color=darkseagreen4, key=1, label=T, style=dashed];
m7_34 -> m7_36  [color=darkseagreen4, key=1, label="T[]", style=dashed];
m7_34 -> m7_37  [color=darkseagreen4, key=1, label="T[]", style=dashed];
m7_66 -> m7_68  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_81 -> m7_84  [color=darkseagreen4, key=1, label=int, style=dashed];
m7_94 -> m7_96  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_27 -> m7_29  [color=darkseagreen4, key=1, label=T, style=dashed];
m7_27 -> m7_30  [color=darkseagreen4, key=1, label=T, style=dashed];
m7_41 -> m7_43  [color=darkseagreen4, key=1, label=T, style=dashed];
m7_41 -> m7_46  [color=darkseagreen4, key=1, label=T, style=dashed];
m7_44 -> m7_47  [color=darkseagreen4, key=1, label=contains, style=dashed];
m7_72 -> m7_75  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_72 -> m7_76  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_60 -> m7_62  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_112 -> m7_14  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.CollectionWrapper<T>", style=dashed];
m7_112 -> m7_15  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.CollectionWrapper<T>", style=dashed];
m7_112 -> m7_16  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.CollectionWrapper<T>", style=dashed];
m7_112 -> m7_21  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.CollectionWrapper<T>", style=dashed];
m7_112 -> m7_22  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.CollectionWrapper<T>", style=dashed];
m7_112 -> m7_23  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.CollectionWrapper<T>", style=dashed];
m7_112 -> m7_28  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.CollectionWrapper<T>", style=dashed];
m7_112 -> m7_29  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.CollectionWrapper<T>", style=dashed];
m7_112 -> m7_30  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.CollectionWrapper<T>", style=dashed];
m7_112 -> m7_35  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.CollectionWrapper<T>", style=dashed];
m7_112 -> m7_36  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.CollectionWrapper<T>", style=dashed];
m7_112 -> m7_37  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.CollectionWrapper<T>", style=dashed];
m7_112 -> m7_42  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.CollectionWrapper<T>", style=dashed];
m7_112 -> m7_43  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.CollectionWrapper<T>", style=dashed];
m7_112 -> m7_46  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.CollectionWrapper<T>", style=dashed];
m7_112 -> m7_52  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.CollectionWrapper<T>", style=dashed];
m7_112 -> m7_57  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.CollectionWrapper<T>", style=dashed];
m7_112 -> m7_62  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.CollectionWrapper<T>", style=dashed];
m7_112 -> m7_63  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.CollectionWrapper<T>", style=dashed];
m7_112 -> m7_68  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.CollectionWrapper<T>", style=dashed];
m7_112 -> m7_73  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.CollectionWrapper<T>", style=dashed];
m7_112 -> m7_76  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.CollectionWrapper<T>", style=dashed];
m7_112 -> m7_82  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.CollectionWrapper<T>", style=dashed];
m7_112 -> m7_84  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.CollectionWrapper<T>", style=dashed];
m7_112 -> m7_88  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.CollectionWrapper<T>", style=dashed];
m7_112 -> m7_91  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.CollectionWrapper<T>", style=dashed];
m7_112 -> m7_96  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.CollectionWrapper<T>", style=dashed];
m7_112 -> m7_99  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.CollectionWrapper<T>", style=dashed];
m9_2 -> m9_4  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_2 -> m9_5  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_2 -> m9_6  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_2 -> m9_8  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_0 -> m12_3  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m13_202 -> m13_499  [color=darkseagreen4, key=1, label="System.Reflection.ICustomAttributeProvider", style=dashed];
m13_202 -> m13_500  [color=darkseagreen4, key=1, label="Newtonsoft.Json.MemberSerialization", style=dashed];
m13_202 -> m13_516  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m13_202 -> m13_524  [color=darkseagreen4, key=1, label="Newtonsoft.Json.MemberSerialization", style=dashed];
m13_519 -> m13_529  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m13_521 -> m13_529  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m13_470 -> m13_474  [color=darkseagreen4, key=1, label=dataContractAttribute, style=dashed];
m13_472 -> m13_474  [color=darkseagreen4, key=1, label=memberInfo, style=dashed];
m13_477 -> m13_522  [color=darkseagreen4, key=1, label=propertyAttribute, style=dashed];
m13_477 -> m13_481  [color=darkseagreen4, key=1, label=propertyAttribute, style=dashed];
m13_477 -> m13_489  [color=darkseagreen4, key=1, label=propertyAttribute, style=dashed];
m13_477 -> m13_516  [color=darkseagreen4, key=1, label=propertyAttribute, style=dashed];
m13_475 -> m13_483  [color=darkseagreen4, key=1, label=dataMemberAttribute, style=dashed];
m13_475 -> m13_494  [color=darkseagreen4, key=1, label=dataMemberAttribute, style=dashed];
m13_475 -> m13_526  [color=darkseagreen4, key=1, label=dataMemberAttribute, style=dashed];
m13_476 -> m13_483  [color=darkseagreen4, key=1, label=dataMemberAttribute, style=dashed];
m13_476 -> m13_494  [color=darkseagreen4, key=1, label=dataMemberAttribute, style=dashed];
m13_476 -> m13_526  [color=darkseagreen4, key=1, label=dataMemberAttribute, style=dashed];
m13_523 -> m13_529  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m13_525 -> m13_529  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m13_527 -> m13_529  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m13_51 -> m13_358  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m13_51 -> m13_360  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m13_51 -> m13_362  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m13_51 -> m13_364  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m13_51 -> m13_366  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m13_51 -> m13_368  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m13_51 -> m13_370  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m13_51 -> m13_372  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m13_51 -> m13_374  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m13_362 -> m13_367  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m13_362 -> m13_368  [color=darkseagreen4, key=1, label="char[]", style=dashed];
m13_362 -> m13_370  [color=darkseagreen4, key=1, label="char[]", style=dashed];
m13_362 -> m13_372  [color=darkseagreen4, key=1, label="char[]", style=dashed];
m13_362 -> m13_374  [color=darkseagreen4, key=1, label="char[]", style=dashed];
m13_362 -> m13_378  [color=darkseagreen4, key=1, label="char[]", style=dashed];
m13_362 -> m13_386  [color=darkseagreen4, key=1, label="char[]", style=dashed];
m13_362 -> m13_388  [color=darkseagreen4, key=1, label=int, style=dashed];
m13_361 -> m13_398  [color=darkseagreen4, key=1, label="char[]", style=dashed];
m13_361 -> m13_400  [color=darkseagreen4, key=1, label="Newtonsoft.Json.DateFormatHandling", style=dashed];
m13_361 -> m13_401  [color=darkseagreen4, key=1, label="char[]", style=dashed];
m13_361 -> m13_403  [color=darkseagreen4, key=1, label="char[]", style=dashed];
m13_363 -> m13_387  [color=darkseagreen4, key=1, label=length, style=dashed];
m13_363 -> m13_388  [color=darkseagreen4, key=1, label=length, style=dashed];
m13_367 -> m13_370  [color=darkseagreen4, key=1, label=month, style=dashed];
m13_367 -> m13_372  [color=darkseagreen4, key=1, label=day, style=dashed];
m13_354 -> m13_357  [color=darkseagreen4, key=1, label=t, style=dashed];
m13_354 -> m13_359  [color=darkseagreen4, key=1, label=t, style=dashed];
m13_354 -> m13_361  [color=darkseagreen4, key=1, label=t, style=dashed];
m13_354 -> m13_365  [color=darkseagreen4, key=1, label=t, style=dashed];
m13_354 -> m13_367  [color=darkseagreen4, key=1, label=t, style=dashed];
m13_340 -> m13_344  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m13_341 -> m13_343  [color=darkseagreen4, key=1, label=contract, style=dashed];
m13_341 -> m13_344  [color=darkseagreen4, key=1, label=contract, style=dashed];
m13_341 -> m13_345  [color=darkseagreen4, key=1, label=contract, style=dashed];
m13_243 -> m13_245  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.StringReference", style=dashed];
m13_245 -> m13_245  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.StringReference", style=dashed];
m13_245 -> m13_247  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.StringReference", style=dashed];
m13_245 -> m13_248  [color=darkseagreen4, key=1, label=index, style=dashed];
m13_245 -> m13_254  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.StringReference", style=dashed];
m13_247 -> m13_247  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.StringReference", style=dashed];
m13_247 -> m13_254  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.StringReference", style=dashed];
m13_248 -> m13_254  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m13_250 -> m13_284  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m13_254 -> m13_254  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.StringReference", style=dashed];
m13_254 -> m13_260  [color=darkseagreen4, key=1, label=baseType, style=dashed];
m13_249 -> m13_284  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m13_249 -> m13_265  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m13_253 -> m13_281  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>", style=dashed];
m13_253 -> m13_284  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>", style=dashed];
m13_251 -> m13_284  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m13_252 -> m13_284  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m13_252 -> m13_277  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m13_256 -> m13_268  [color=darkseagreen4, key=1, label=currentOnSerialized, style=dashed];
m13_422 -> m13_431  [color=darkseagreen4, key=1, label=y100, style=dashed];
m13_225 -> m13_298  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_391 -> m13_393  [color=darkseagreen4, key=1, label="char[]", style=dashed];
m13_391 -> m13_394  [color=darkseagreen4, key=1, label=int, style=dashed];
m13_392 -> m13_392  [color=darkseagreen4, key=1, label=int, style=dashed];
m13_394 -> m13_394  [color=darkseagreen4, key=1, label=int, style=dashed];
m13_152 -> m13_157  [color=darkseagreen4, key=1, label=is24Hour, style=dashed];
m13_18 -> m13_21  [color=darkseagreen4, key=1, label=bool, style=dashed];
m13_20 -> m13_23  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m13_319 -> m13_321  [color=darkseagreen4, key=1, label=contract, style=dashed];
m13_141 -> m13_165  [color=darkseagreen4, key=1, label="System.Reflection.ConstructorInfo", style=dashed];
m13_141 -> m13_167  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonPropertyCollection", style=dashed];
m13_141 -> m13_145  [color=darkseagreen4, key=1, label=offset, style=dashed];
m13_170 -> m13_172  [color=darkseagreen4, key=1, label=property, style=dashed];
m13_167 -> m13_170  [color=darkseagreen4, key=1, label=matchingMemberProperty, style=dashed];
m13_167 -> m13_167  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.StringReference", style=dashed];
m13_166 -> m13_170  [color=darkseagreen4, key=1, label=parameterInfo, style=dashed];
m13_166 -> m13_168  [color=darkseagreen4, key=1, label=parameterInfo, style=dashed];
m13_166 -> m13_171  [color=darkseagreen4, key=1, label=i, style=dashed];
m13_168 -> m13_168  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.StringReference", style=dashed];
m13_168 -> m13_175  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.StringReference", style=dashed];
m13_171 -> m13_171  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.StringReference", style=dashed];
m13_171 -> m13_175  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.StringReference", style=dashed];
m13_164 -> m13_169  [color=darkseagreen4, key=1, label="Newtonsoft.Json.DateTimeZoneHandling", style=dashed];
m13_164 -> m13_172  [color=darkseagreen4, key=1, label="Newtonsoft.Json.DateTimeZoneHandling", style=dashed];
m13_164 -> m13_174  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_165 -> m13_172  [color=darkseagreen4, key=1, label=parameterCollection, style=dashed];
m13_165 -> m13_173  [color=darkseagreen4, key=1, label=parameterCollection, style=dashed];
m13_165 -> m13_165  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.StringReference", style=dashed];
m13_158 -> m13_160  [color=green, key=1, label=constructors, style=dashed];
m13_229 -> m13_235  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m13_229 -> m13_237  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m13_229 -> m13_241  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m13_229 -> m13_243  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m13_229 -> m13_244  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m13_229 -> m13_246  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m13_235 -> m13_237  [color=darkseagreen4, key=1, label=onSerializing, style=dashed];
m13_235 -> m13_238  [color=darkseagreen4, key=1, label=onSerialized, style=dashed];
m13_235 -> m13_240  [color=darkseagreen4, key=1, label=onDeserializing, style=dashed];
m13_235 -> m13_241  [color=darkseagreen4, key=1, label=onDeserializing, style=dashed];
m13_235 -> m13_242  [color=darkseagreen4, key=1, label=onDeserialized, style=dashed];
m13_235 -> m13_244  [color=darkseagreen4, key=1, label=onDeserialized, style=dashed];
m13_235 -> m13_245  [color=darkseagreen4, key=1, label=onError, style=dashed];
m13_235 -> m13_246  [color=darkseagreen4, key=1, label=onError, style=dashed];
m13_239 -> m13_241  [color=darkseagreen4, key=1, label="out System.DateTimeOffset", style=dashed];
m13_469 -> m13_550  [color=darkseagreen4, key=1, label=bool, style=dashed];
m13_543 -> m13_546  [color=darkseagreen4, key=1, label=specifiedMember, style=dashed];
m13_543 -> m13_550  [color=darkseagreen4, key=1, label=specifiedMember, style=dashed];
m13_545 -> m13_550  [color=darkseagreen4, key=1, label=specifiedMember, style=dashed];
m13_549 -> m13_558  [color=darkseagreen4, key=1, label=object, style=dashed];
m13_548 -> m13_558  [color=darkseagreen4, key=1, label=specifiedPropertyGet, style=dashed];
m13_178 -> m13_183  [color=darkseagreen4, key=1, label="System.Reflection.ParameterInfo", style=dashed];
m13_178 -> m13_181  [color=darkseagreen4, key=1, label="System.Reflection.ParameterInfo", style=dashed];
m13_178 -> m13_186  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m13_178 -> m13_187  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m13_178 -> m13_188  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m13_178 -> m13_189  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m13_178 -> m13_190  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m13_178 -> m13_191  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m13_178 -> m13_192  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m13_178 -> m13_193  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m13_178 -> m13_194  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m13_178 -> m13_196  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m13_178 -> m13_197  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m13_178 -> m13_198  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m13_180 -> m13_183  [color=darkseagreen4, key=1, label=property, style=dashed];
m13_180 -> m13_184  [color=darkseagreen4, key=1, label=property, style=dashed];
m13_180 -> m13_185  [color=darkseagreen4, key=1, label=property, style=dashed];
m13_180 -> m13_187  [color=darkseagreen4, key=1, label=property, style=dashed];
m13_180 -> m13_188  [color=darkseagreen4, key=1, label=property, style=dashed];
m13_180 -> m13_189  [color=darkseagreen4, key=1, label=property, style=dashed];
m13_180 -> m13_190  [color=darkseagreen4, key=1, label=property, style=dashed];
m13_180 -> m13_191  [color=darkseagreen4, key=1, label=property, style=dashed];
m13_180 -> m13_192  [color=darkseagreen4, key=1, label=property, style=dashed];
m13_180 -> m13_193  [color=darkseagreen4, key=1, label=property, style=dashed];
m13_180 -> m13_194  [color=darkseagreen4, key=1, label=property, style=dashed];
m13_180 -> m13_196  [color=darkseagreen4, key=1, label=property, style=dashed];
m13_180 -> m13_197  [color=darkseagreen4, key=1, label=property, style=dashed];
m13_180 -> m13_198  [color=darkseagreen4, key=1, label=property, style=dashed];
m13_180 -> m13_199  [color=darkseagreen4, key=1, label=property, style=dashed];
m13_182 -> m13_263  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.StringReference", style=dashed];
m13_186 -> m13_278  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_187 -> m13_189  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_187 -> m13_190  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_187 -> m13_191  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_187 -> m13_193  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_187 -> m13_194  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_187 -> m13_197  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_187 -> m13_198  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_200 -> m13_202  [color=darkseagreen4, key=1, label="out System.DateTime", style=dashed];
m13_62 -> m13_64  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m13_62 -> m13_65  [color=darkseagreen4, key=1, label=defaultMembers, style=dashed];
m13_62 -> m13_99  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_63 -> m13_66  [color=darkseagreen4, key=1, label=member, style=dashed];
m13_63 -> m13_67  [color=darkseagreen4, key=1, label=member, style=dashed];
m13_63 -> m13_68  [color=darkseagreen4, key=1, label=member, style=dashed];
m13_63 -> m13_69  [color=darkseagreen4, key=1, label=member, style=dashed];
m13_63 -> m13_70  [color=darkseagreen4, key=1, label=member, style=dashed];
m13_63 -> m13_71  [color=darkseagreen4, key=1, label=member, style=dashed];
m13_63 -> m13_72  [color=darkseagreen4, key=1, label=member, style=dashed];
m13_65 -> m13_65  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m13_65 -> m13_68  [color=darkseagreen4, key=1, label=ticks, style=dashed];
m13_65 -> m13_70  [color=darkseagreen4, key=1, label=ticks, style=dashed];
m13_136 -> m13_217  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m13_136 -> m13_220  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m13_136 -> m13_222  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m13_136 -> m13_213  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m13_136 -> m13_214  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m13_136 -> m13_216  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m13_136 -> m13_218  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m13_136 -> m13_219  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m13_215 -> m13_215  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.StringReference", style=dashed];
m13_215 -> m13_219  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.StringReference", style=dashed];
m13_219 -> m13_219  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.StringReference", style=dashed];
m13_221 -> m13_223  [color=darkseagreen4, key=1, label="out System.DateTimeOffset", style=dashed];
m13_211 -> m13_213  [color=darkseagreen4, key=1, label=containerAttribute, style=dashed];
m13_211 -> m13_211  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.StringReference", style=dashed];
m13_212 -> m13_212  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.StringReference", style=dashed];
m13_212 -> m13_219  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.StringReference", style=dashed];
m13_417 -> m13_419  [color=darkseagreen4, key=1, label=n, style=dashed];
m13_419 -> m13_419  [color=darkseagreen4, key=1, label=n, style=dashed];
m13_419 -> m13_423  [color=darkseagreen4, key=1, label=n, style=dashed];
m13_429 -> m13_438  [color=darkseagreen4, key=1, label="out int", style=dashed];
m13_429 -> m13_431  [color=darkseagreen4, key=1, label=property, style=dashed];
m13_420 -> m13_423  [color=darkseagreen4, key=1, label=y100, style=dashed];
m13_420 -> m13_431  [color=darkseagreen4, key=1, label=y100, style=dashed];
m13_423 -> m13_423  [color=darkseagreen4, key=1, label=n, style=dashed];
m13_423 -> m13_425  [color=darkseagreen4, key=1, label=n, style=dashed];
m13_424 -> m13_431  [color=darkseagreen4, key=1, label=y4, style=dashed];
m13_424 -> m13_428  [color=darkseagreen4, key=1, label=members, style=dashed];
m13_425 -> m13_425  [color=darkseagreen4, key=1, label=n, style=dashed];
m13_425 -> m13_430  [color=darkseagreen4, key=1, label=n, style=dashed];
m13_426 -> m13_430  [color=darkseagreen4, key=1, label=y1, style=dashed];
m13_426 -> m13_431  [color=darkseagreen4, key=1, label=y1, style=dashed];
m13_430 -> m13_430  [color=darkseagreen4, key=1, label=n, style=dashed];
m13_430 -> m13_433  [color=darkseagreen4, key=1, label=n, style=dashed];
m13_430 -> m13_434  [color=darkseagreen4, key=1, label=n, style=dashed];
m13_430 -> m13_437  [color=darkseagreen4, key=1, label=n, style=dashed];
m13_427 -> m13_431  [color=darkseagreen4, key=1, label=properties, style=dashed];
m13_428 -> m13_430  [color=darkseagreen4, key=1, label=y1, style=dashed];
m13_428 -> m13_431  [color=darkseagreen4, key=1, label=y1, style=dashed];
m13_433 -> m13_435  [color=darkseagreen4, key=1, label=m, style=dashed];
m13_433 -> m13_436  [color=darkseagreen4, key=1, label=m, style=dashed];
m13_433 -> m13_437  [color=darkseagreen4, key=1, label=m, style=dashed];
m13_432 -> m13_434  [color=darkseagreen4, key=1, label=days, style=dashed];
m13_432 -> m13_437  [color=darkseagreen4, key=1, label=days, style=dashed];
m13_432 -> m13_438  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_435 -> m13_435  [color=darkseagreen4, key=1, label=m, style=dashed];
m13_435 -> m13_436  [color=darkseagreen4, key=1, label=m, style=dashed];
m13_435 -> m13_437  [color=darkseagreen4, key=1, label=m, style=dashed];
m13_436 -> m13_438  [color=darkseagreen4, key=1, label="out int", style=dashed];
m13_436 -> m13_455  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m13_436 -> m13_462  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m13_436 -> m13_456  [color=darkseagreen4, key=1, label="Newtonsoft.Json.MemberSerialization", style=dashed];
m13_33 -> m13_48  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m13_33 -> m13_50  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m13_33 -> m13_52  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m13_33 -> m13_54  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m13_33 -> m13_37  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m13_33 -> m13_40  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m13_54 -> m13_58  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m13_54 -> m13_57  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m13_54 -> m13_61  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m13_54 -> m13_74  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m13_126 -> m13_128  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.StringReference", style=dashed];
m13_128 -> m13_128  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.StringReference", style=dashed];
m13_128 -> m13_133  [color=darkseagreen4, key=1, label=dateTimeParser, style=dashed];
m13_128 -> m13_137  [color=darkseagreen4, key=1, label=dateTimeParser, style=dashed];
m13_129 -> m13_132  [color=darkseagreen4, key=1, label=constructor, style=dashed];
m13_131 -> m13_140  [color=darkseagreen4, key=1, label=d, style=dashed];
m13_131 -> m13_145  [color=darkseagreen4, key=1, label=d, style=dashed];
m13_140 -> m13_148  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m13_140 -> m13_149  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m13_145 -> m13_147  [color=darkseagreen4, key=1, label="out System.DateTimeOffset", style=dashed];
m13_143 -> m13_155  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_143 -> m13_146  [color=darkseagreen4, key=1, label=markedConstructors, style=dashed];
m13_143 -> m13_147  [color=darkseagreen4, key=1, label=markedConstructors, style=dashed];
m13_226 -> m13_228  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_226 -> m13_229  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_226 -> m13_230  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_226 -> m13_232  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_226 -> m13_233  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_226 -> m13_234  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_226 -> m13_236  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_226 -> m13_237  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_112 -> m13_116  [color=darkseagreen4, key=1, label=contract, style=dashed];
m13_112 -> m13_120  [color=darkseagreen4, key=1, label=contract, style=dashed];
m13_112 -> m13_121  [color=darkseagreen4, key=1, label=contract, style=dashed];
m13_112 -> m13_123  [color=darkseagreen4, key=1, label=contract, style=dashed];
m13_112 -> m13_124  [color=darkseagreen4, key=1, label=contract, style=dashed];
m13_112 -> m13_125  [color=darkseagreen4, key=1, label=contract, style=dashed];
m13_112 -> m13_128  [color=darkseagreen4, key=1, label=contract, style=dashed];
m13_112 -> m13_132  [color=darkseagreen4, key=1, label=contract, style=dashed];
m13_112 -> m13_133  [color=darkseagreen4, key=1, label=contract, style=dashed];
m13_121 -> m13_123  [color=darkseagreen4, key=1, label=overrideConstructor, style=dashed];
m13_121 -> m13_124  [color=darkseagreen4, key=1, label=overrideConstructor, style=dashed];
m13_124 -> m13_151  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.DateTimeParser", style=dashed];
m13_124 -> m13_155  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.DateTimeParser", style=dashed];
m13_124 -> m13_156  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.DateTimeParser", style=dashed];
m13_118 -> m13_120  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m13_339 -> m13_341  [color=darkseagreen4, key=1, label=pos, style=dashed];
m13_276 -> m13_276  [color=darkseagreen4, key=1, label=prevAttributeType, style=dashed];
m13_323 -> m13_327  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m13_323 -> m13_328  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m13_325 -> m13_327  [color=darkseagreen4, key=1, label=chars, style=dashed];
m13_325 -> m13_330  [color=darkseagreen4, key=1, label=contract, style=dashed];
m13_325 -> m13_331  [color=darkseagreen4, key=1, label=contract, style=dashed];
m13_327 -> m13_329  [color=darkseagreen4, key=1, label=constructorInfo, style=dashed];
m13_330 -> m13_335  [color=darkseagreen4, key=1, label="Newtonsoft.Json.DateFormatHandling", style=dashed];
m13_330 -> m13_338  [color=darkseagreen4, key=1, label="char[]", style=dashed];
m13_330 -> m13_341  [color=darkseagreen4, key=1, label="char[]", style=dashed];
m13_330 -> m13_343  [color=darkseagreen4, key=1, label="System.DateTimeKind", style=dashed];
m13_330 -> m13_345  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m13_330 -> m13_349  [color=darkseagreen4, key=1, label="char[]", style=dashed];
m13_330 -> m13_352  [color=darkseagreen4, key=1, label="System.DateTimeKind", style=dashed];
m13_56 -> m13_58  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m13_56 -> m13_59  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m13_75 -> m13_75  [color=darkseagreen4, key=1, label=serializableMembers, style=dashed];
m13_58 -> m13_95  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_58 -> m13_63  [color=darkseagreen4, key=1, label=allMembers, style=dashed];
m13_58 -> m13_76  [color=darkseagreen4, key=1, label=allMembers, style=dashed];
m13_57 -> m13_60  [color=darkseagreen4, key=1, label=memberSerialization, style=dashed];
m13_57 -> m13_71  [color=darkseagreen4, key=1, label=memberSerialization, style=dashed];
m13_61 -> m13_69  [color=darkseagreen4, key=1, label=dataContractAttribute, style=dashed];
m13_59 -> m13_75  [color=darkseagreen4, key=1, label=serializableMembers, style=dashed];
m13_59 -> m13_66  [color=darkseagreen4, key=1, label=serializableMembers, style=dashed];
m13_59 -> m13_68  [color=darkseagreen4, key=1, label=serializableMembers, style=dashed];
m13_59 -> m13_70  [color=darkseagreen4, key=1, label=serializableMembers, style=dashed];
m13_59 -> m13_72  [color=darkseagreen4, key=1, label=serializableMembers, style=dashed];
m13_59 -> m13_79  [color=darkseagreen4, key=1, label=serializableMembers, style=dashed];
m13_59 -> m13_80  [color=darkseagreen4, key=1, label=serializableMembers, style=dashed];
m13_76 -> m13_79  [color=darkseagreen4, key=1, label=member, style=dashed];
m13_37 -> m13_39  [color=darkseagreen4, key=1, label=key, style=dashed];
m13_37 -> m13_44  [color=darkseagreen4, key=1, label=key, style=dashed];
m13_40 -> m13_44  [color=darkseagreen4, key=1, label=contract, style=dashed];
m13_40 -> m13_46  [color=darkseagreen4, key=1, label=contract, style=dashed];
m13_43 -> m13_45  [color=darkseagreen4, key=1, label=updatedCache, style=dashed];
m13_156 -> m13_156  [color=darkseagreen4, key=1, label=d, style=dashed];
m13_156 -> m13_159  [color=darkseagreen4, key=1, label=d, style=dashed];
m13_154 -> m13_157  [color=darkseagreen4, key=1, label=is24Hour, style=dashed];
m13_153 -> m13_156  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.DateTimeParser", style=dashed];
m13_301 -> m13_303  [color=darkseagreen4, key=1, label="out System.DateTimeOffset", style=dashed];
m13_300 -> m13_302  [color=darkseagreen4, key=1, label=contract, style=dashed];
m13_300 -> m13_303  [color=darkseagreen4, key=1, label=contract, style=dashed];
m13_304 -> m13_306  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.StringReference", style=dashed];
m13_304 -> m13_315  [color=darkseagreen4, key=1, label=negative, style=dashed];
m13_258 -> m13_306  [color=darkseagreen4, key=1, label=int, style=dashed];
m13_258 -> m13_310  [color=darkseagreen4, key=1, label=int, style=dashed];
m13_258 -> m13_311  [color=darkseagreen4, key=1, label=int, style=dashed];
m13_258 -> m13_276  [color=darkseagreen4, key=1, label=currentOnDeserialized, style=dashed];
m13_306 -> m13_306  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.StringReference", style=dashed];
m13_306 -> m13_310  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.StringReference", style=dashed];
m13_306 -> m13_314  [color=darkseagreen4, key=1, label=hours, style=dashed];
m13_310 -> m13_310  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.StringReference", style=dashed];
m13_311 -> m13_311  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.StringReference", style=dashed];
m13_307 -> m13_309  [color=darkseagreen4, key=1, label=contract, style=dashed];
m13_309 -> m13_314  [color=darkseagreen4, key=1, label=minutes, style=dashed];
m13_314 -> m13_316  [color=darkseagreen4, key=1, label="out System.TimeSpan", style=dashed];
m13_314 -> m13_318  [color=darkseagreen4, key=1, label="out System.TimeSpan", style=dashed];
m13_313 -> m13_315  [color=darkseagreen4, key=1, label=contract, style=dashed];
m13_316 -> m13_316  [color=darkseagreen4, key=1, label="out System.TimeSpan", style=dashed];
m13_316 -> m13_318  [color=darkseagreen4, key=1, label="out System.TimeSpan", style=dashed];
m13_379 -> m13_382  [color=darkseagreen4, key=1, label=fraction, style=dashed];
m13_379 -> m13_384  [color=darkseagreen4, key=1, label=fraction, style=dashed];
m13_379 -> m13_386  [color=darkseagreen4, key=1, label=fraction, style=dashed];
m13_8 -> m13_16  [color=darkseagreen4, key=1, label="System.DateTimeKind", style=dashed];
m13_455 -> m13_462  [color=darkseagreen4, key=1, label=allowNonPublicAccess, style=dashed];
m13_450 -> m13_455  [color=darkseagreen4, key=1, label=property, style=dashed];
m13_450 -> m13_462  [color=darkseagreen4, key=1, label=property, style=dashed];
m13_450 -> m13_463  [color=darkseagreen4, key=1, label=property, style=dashed];
m13_175 -> m13_175  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.StringReference", style=dashed];
m13_177 -> m13_179  [color=darkseagreen4, key=1, label="out System.DateTime", style=dashed];
m13_224 -> m13_288  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.StringReference", style=dashed];
m13_288 -> m13_292  [color=darkseagreen4, key=1, label=offset, style=dashed];
m13_287 -> m13_398  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m13_287 -> m13_400  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m13_287 -> m13_402  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m13_287 -> m13_404  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m13_287 -> m13_407  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m13_287 -> m13_409  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m13_287 -> m13_397  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m13_287 -> m13_399  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
m13_287 -> m13_401  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m13_287 -> m13_403  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m13_287 -> m13_405  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m13_287 -> m13_406  [color=darkseagreen4, key=1, label="System.Reflection.ParameterInfo[]", style=dashed];
m13_287 -> m13_408  [color=darkseagreen4, key=1, label="System.Reflection.ParameterInfo[]", style=dashed];
m13_291 -> m13_293  [color=darkseagreen4, key=1, label=current, style=dashed];
m13_290 -> m13_293  [color=darkseagreen4, key=1, label=ret, style=dashed];
m13_290 -> m13_295  [color=darkseagreen4, key=1, label=ret, style=dashed];
m13_290 -> m13_296  [color=darkseagreen4, key=1, label=ret, style=dashed];
m13_208 -> m13_218  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_208 -> m13_219  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_209 -> m13_209  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.StringReference", style=dashed];
m13_396 -> m13_396  [color=darkseagreen4, key=1, label=int, style=dashed];
m13_396 -> m13_398  [color=darkseagreen4, key=1, label=int, style=dashed];
m13_396 -> m13_399  [color=darkseagreen4, key=1, label=int, style=dashed];
m13_401 -> m13_401  [color=darkseagreen4, key=1, label=int, style=dashed];
m13_401 -> m13_403  [color=darkseagreen4, key=1, label=int, style=dashed];
m13_401 -> m13_404  [color=darkseagreen4, key=1, label=int, style=dashed];
m13_397 -> m13_397  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m13_397 -> m13_402  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m13_399 -> m13_399  [color=darkseagreen4, key=1, label=int, style=dashed];
m13_399 -> m13_401  [color=darkseagreen4, key=1, label=int, style=dashed];
m13_399 -> m13_403  [color=darkseagreen4, key=1, label=int, style=dashed];
m13_399 -> m13_404  [color=darkseagreen4, key=1, label=int, style=dashed];
m13_402 -> m13_402  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m13_404 -> m13_404  [color=darkseagreen4, key=1, label=int, style=dashed];
m13_32 -> m13_38  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m13_32 -> m13_40  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m13_32 -> m13_42  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m13_32 -> m13_43  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m13_413 -> m13_418  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m13_413 -> m13_419  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m13_413 -> m13_413  [color=darkseagreen4, key=1, label="System.DateTimeOffset", style=dashed];
m13_1 -> m13_566  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ResolverContractKey", style=dashed];
m13_2 -> m13_566  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ResolverContractKey", style=dashed];
m13_533 -> m13_536  [color=darkseagreen4, key=1, label=shouldSerializeMethod, style=dashed];
m13_537 -> m13_541  [color=darkseagreen4, key=1, label=object, style=dashed];
m13_536 -> m13_541  [color=darkseagreen4, key=1, label=shouldSerializeCall, style=dashed];
m13_260 -> m13_263  [color=darkseagreen4, key=1, label=method, style=dashed];
m13_260 -> m13_267  [color=darkseagreen4, key=1, label=method, style=dashed];
m13_260 -> m13_268  [color=darkseagreen4, key=1, label=method, style=dashed];
m13_260 -> m13_270  [color=darkseagreen4, key=1, label=method, style=dashed];
m13_260 -> m13_274  [color=darkseagreen4, key=1, label=method, style=dashed];
m13_260 -> m13_275  [color=darkseagreen4, key=1, label=method, style=dashed];
m13_260 -> m13_276  [color=darkseagreen4, key=1, label=method, style=dashed];
m13_260 -> m13_278  [color=darkseagreen4, key=1, label=method, style=dashed];
m13_260 -> m13_283  [color=darkseagreen4, key=1, label=method, style=dashed];
m13_281 -> m13_284  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>", style=dashed];
m13_281 -> m13_281  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>", style=dashed];
m13_263 -> m13_268  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m13_263 -> m13_276  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m13_263 -> m13_267  [color=darkseagreen4, key=1, label=kind, style=dashed];
m13_268 -> m13_268  [color=darkseagreen4, key=1, label=prevAttributeType, style=dashed];
m13_282 -> m13_284  [color=darkseagreen4, key=1, label="out System.DateTime", style=dashed];
m13_265 -> m13_284  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m13_265 -> m13_265  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m13_269 -> m13_284  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m13_273 -> m13_284  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m13_273 -> m13_275  [color=darkseagreen4, key=1, label="out System.DateTime", style=dashed];
m13_277 -> m13_284  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m13_277 -> m13_277  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m13_210 -> m13_210  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.StringReference", style=dashed];
m13_210 -> m13_215  [color=darkseagreen4, key=1, label=i, style=dashed];
m13_28 -> m13_31  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.ResolverContractKey, Newtonsoft.Json.Serialization.JsonContract>", style=dashed];
m13_28 -> m13_30  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.ResolverContractKey, Newtonsoft.Json.Serialization.JsonContract>", style=dashed];
m13_385 -> m13_387  [color=darkseagreen4, key=1, label=converter, style=dashed];
m13_387 -> m13_387  [color=darkseagreen4, key=1, label=length, style=dashed];
m13_384 -> m13_384  [color=darkseagreen4, key=1, label=fraction, style=dashed];
m13_384 -> m13_386  [color=darkseagreen4, key=1, label=fraction, style=dashed];
m13_384 -> m13_389  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m13_381 -> m13_383  [color=darkseagreen4, key=1, label=digits, style=dashed];
m13_381 -> m13_386  [color=darkseagreen4, key=1, label=digits, style=dashed];
m13_381 -> m13_387  [color=darkseagreen4, key=1, label=digits, style=dashed];
m13_383 -> m13_383  [color=darkseagreen4, key=1, label=digits, style=dashed];
m13_383 -> m13_386  [color=darkseagreen4, key=1, label=digits, style=dashed];
m13_383 -> m13_387  [color=darkseagreen4, key=1, label=digits, style=dashed];
m13_91 -> m13_93  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.StringReference", style=dashed];
m13_93 -> m13_93  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.StringReference", style=dashed];
m13_93 -> m13_98  [color=darkseagreen4, key=1, label=dateTimeParser, style=dashed];
m13_93 -> m13_102  [color=darkseagreen4, key=1, label=dateTimeParser, style=dashed];
m13_96 -> m13_100  [color=darkseagreen4, key=1, label=d, style=dashed];
m13_100 -> m13_100  [color=darkseagreen4, key=1, label=d, style=dashed];
m13_100 -> m13_106  [color=darkseagreen4, key=1, label=d, style=dashed];
m13_103 -> m13_105  [color=darkseagreen4, key=1, label=propertyInfo, style=dashed];
m13_103 -> m13_106  [color=darkseagreen4, key=1, label=ticks, style=dashed];
m13_106 -> m13_106  [color=darkseagreen4, key=1, label=ticks, style=dashed];
m13_334 -> m13_338  [color=darkseagreen4, key=1, label=pos, style=dashed];
m13_23 -> m13_23  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m13_23 -> m13_25  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m13_25 -> m13_25  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m13_25 -> m13_27  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m13_27 -> m13_27  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m13_408 -> m13_412  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m13_408 -> m13_413  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m13_410 -> m13_412  [color=darkseagreen4, key=1, label=chars, style=dashed];
m13_569 -> m13_19  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m13_569 -> m13_20  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m13_569 -> m13_21  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m13_569 -> m13_24  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m13_569 -> m13_26  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m13_569 -> m13_29  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m13_569 -> m13_31  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m13_569 -> m13_37  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m13_569 -> m13_38  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m13_569 -> m13_40  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m13_569 -> m13_42  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m13_569 -> m13_45  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m13_569 -> m13_56  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m13_569 -> m13_64  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m13_569 -> m13_75  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m13_569 -> m13_113  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m13_569 -> m13_121  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m13_569 -> m13_124  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m13_569 -> m13_132  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m13_569 -> m13_170  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m13_569 -> m13_183  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m13_569 -> m13_217  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m13_569 -> m13_220  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m13_569 -> m13_222  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m13_569 -> m13_235  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m13_569 -> m13_254  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m13_569 -> m13_302  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m13_569 -> m13_308  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m13_569 -> m13_314  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m13_569 -> m13_320  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m13_569 -> m13_343  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m13_569 -> m13_344  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m13_569 -> m13_358  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m13_569 -> m13_360  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m13_569 -> m13_362  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m13_569 -> m13_364  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m13_569 -> m13_366  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m13_569 -> m13_368  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m13_569 -> m13_370  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m13_569 -> m13_372  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m13_569 -> m13_374  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m13_569 -> m13_443  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m13_569 -> m13_455  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m13_569 -> m13_462  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m13_569 -> m13_520  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m13_569 -> m13_564  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m13_572 -> m13_558  [color=darkseagreen4, key=1, label=specifiedPropertyGet, style=dashed];
m13_571 -> m13_541  [color=darkseagreen4, key=1, label=shouldSerializeCall, style=dashed];
m14_2 -> m14_4  [color=darkseagreen4, key=1, label=json, style=dashed];
m14_4 -> m14_7  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m15_499 -> m15_502  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m15_499 -> m15_503  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m15_499 -> m15_504  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m15_499 -> m15_505  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m15_499 -> m15_506  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m15_499 -> m15_507  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m15_499 -> m15_508  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m15_499 -> m15_509  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m15_499 -> m15_512  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m15_499 -> m15_514  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m15_90 -> m15_92  [color=darkseagreen4, key=1, label=susan, style=dashed];
m15_189 -> m15_191  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m15_189 -> m15_192  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m15_189 -> m15_193  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m15_189 -> m15_194  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m15_189 -> m15_195  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m15_189 -> m15_196  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m15_189 -> m15_197  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m15_189 -> m15_198  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m15_189 -> m15_199  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m15_189 -> m15_200  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m15_189 -> m15_201  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m15_189 -> m15_202  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m15_189 -> m15_203  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m15_189 -> m15_204  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m15_453 -> m15_482  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m15_453 -> m15_487  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m15_453 -> m15_488  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m15_453 -> m15_489  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m15_453 -> m15_490  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m15_453 -> m15_491  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m15_453 -> m15_492  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m15_453 -> m15_493  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m15_479 -> m15_483  [color=darkseagreen4, key=1, label=attributeNameValues, style=dashed];
m15_481 -> m15_486  [color=darkseagreen4, key=1, label=element, style=dashed];
m15_481 -> m15_488  [color=darkseagreen4, key=1, label=element, style=dashed];
m15_481 -> m15_492  [color=darkseagreen4, key=1, label=element, style=dashed];
m15_156 -> m15_158  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_16 -> m15_19  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m15_88 -> m15_92  [color=darkseagreen4, key=1, label=arnie, style=dashed];
m15_89 -> m15_93  [color=darkseagreen4, key=1, label=mike, style=dashed];
m15_316 -> m15_335  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m15_316 -> m15_342  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m15_316 -> m15_319  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m15_316 -> m15_337  [color=darkseagreen4, key=1, label=bool, style=dashed];
m15_316 -> m15_338  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m15_316 -> m15_339  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m15_316 -> m15_344  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m15_321 -> m15_323  [color=darkseagreen4, key=1, label=nodeName, style=dashed];
m15_321 -> m15_325  [color=darkseagreen4, key=1, label=nodeName, style=dashed];
m15_320 -> m15_326  [color=darkseagreen4, key=1, label=childNode, style=dashed];
m15_329 -> m15_335  [color=darkseagreen4, key=1, label=groupedNodes, style=dashed];
m15_329 -> m15_342  [color=darkseagreen4, key=1, label=groupedNodes, style=dashed];
m15_329 -> m15_331  [color=darkseagreen4, key=1, label=groupedNodes, style=dashed];
m15_329 -> m15_341  [color=darkseagreen4, key=1, label=groupedNodes, style=dashed];
m15_340 -> m15_342  [color=darkseagreen4, key=1, label=i, style=dashed];
m15_340 -> m15_343  [color=darkseagreen4, key=1, label=i, style=dashed];
m15_343 -> m15_343  [color=darkseagreen4, key=1, label=i, style=dashed];
m15_317 -> m15_323  [color=darkseagreen4, key=1, label=nodesGroupedByName, style=dashed];
m15_317 -> m15_325  [color=darkseagreen4, key=1, label=nodesGroupedByName, style=dashed];
m15_317 -> m15_328  [color=darkseagreen4, key=1, label=nodesGroupedByName, style=dashed];
m15_318 -> m15_327  [color=darkseagreen4, key=1, label=i, style=dashed];
m15_324 -> m15_326  [color=darkseagreen4, key=1, label=nodes, style=dashed];
m15_336 -> m15_338  [color=darkseagreen4, key=1, label=elementNames, style=dashed];
m15_327 -> m15_327  [color=darkseagreen4, key=1, label=i, style=dashed];
m15_73 -> m15_76  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m15_79 -> m15_81  [color=darkseagreen4, key=1, label=susan, style=dashed];
m15_78 -> m15_82  [color=darkseagreen4, key=1, label=mike, style=dashed];
m15_77 -> m15_81  [color=darkseagreen4, key=1, label=arnie, style=dashed];
m15_47 -> m15_49  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m15_171 -> m15_176  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m15_172 -> m15_175  [color=darkseagreen4, key=1, label=declarationWrapper, style=dashed];
m15_167 -> m15_169  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_475 -> m15_606  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m15_475 -> m15_595  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m15_475 -> m15_596  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m15_475 -> m15_598  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m15_475 -> m15_601  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m15_475 -> m15_604  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m15_475 -> m15_608  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m15_475 -> m15_610  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m15_84 -> m15_87  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m15_3 -> m15_8  [color=darkseagreen4, key=1, label=json, style=dashed];
m15_457 -> m15_472  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m15_457 -> m15_467  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_457 -> m15_468  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m15_457 -> m15_470  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m15_457 -> m15_460  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m15_457 -> m15_462  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m15_457 -> m15_464  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m15_457 -> m15_466  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m15_457 -> m15_469  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m15_99 -> m15_101  [color=darkseagreen4, key=1, label=mike, style=dashed];
m15_99 -> m15_102  [color=darkseagreen4, key=1, label=mike, style=dashed];
m15_100 -> m15_102  [color=darkseagreen4, key=1, label=susan, style=dashed];
m15_274 -> m15_277  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m15_274 -> m15_278  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m15_275 -> m15_277  [color=darkseagreen4, key=1, label=prefix, style=dashed];
m15_658 -> m15_661  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_178 -> m15_208  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m15_308 -> m15_313  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_282 -> m15_287  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m15_282 -> m15_293  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m15_282 -> m15_295  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m15_282 -> m15_285  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m15_282 -> m15_286  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m15_282 -> m15_304  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m15_419 -> m15_440  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m15_419 -> m15_442  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m15_419 -> m15_430  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m15_419 -> m15_429  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m15_419 -> m15_436  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m15_419 -> m15_437  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m15_419 -> m15_423  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m15_419 -> m15_424  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m15_419 -> m15_441  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m15_419 -> m15_443  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m15_433 -> m15_435  [color=darkseagreen4, key=1, label=document, style=dashed];
m15_433 -> m15_440  [color=darkseagreen4, key=1, label=document, style=dashed];
m15_433 -> m15_442  [color=darkseagreen4, key=1, label=document, style=dashed];
m15_433 -> m15_447  [color=darkseagreen4, key=1, label=document, style=dashed];
m15_434 -> m15_440  [color=darkseagreen4, key=1, label=rootNode, style=dashed];
m15_434 -> m15_442  [color=darkseagreen4, key=1, label=rootNode, style=dashed];
m15_444 -> m15_446  [color=darkseagreen4, key=1, label=element, style=dashed];
m15_421 -> m15_435  [color=darkseagreen4, key=1, label=document, style=dashed];
m15_421 -> m15_440  [color=darkseagreen4, key=1, label=document, style=dashed];
m15_421 -> m15_442  [color=darkseagreen4, key=1, label=document, style=dashed];
m15_421 -> m15_447  [color=darkseagreen4, key=1, label=document, style=dashed];
m15_422 -> m15_435  [color=darkseagreen4, key=1, label=rootNode, style=dashed];
m15_422 -> m15_440  [color=darkseagreen4, key=1, label=rootNode, style=dashed];
m15_422 -> m15_442  [color=darkseagreen4, key=1, label=rootNode, style=dashed];
m15_427 -> m15_435  [color=darkseagreen4, key=1, label=document, style=dashed];
m15_427 -> m15_440  [color=darkseagreen4, key=1, label=document, style=dashed];
m15_427 -> m15_442  [color=darkseagreen4, key=1, label=document, style=dashed];
m15_427 -> m15_447  [color=darkseagreen4, key=1, label=document, style=dashed];
m15_428 -> m15_435  [color=darkseagreen4, key=1, label=rootNode, style=dashed];
m15_428 -> m15_440  [color=darkseagreen4, key=1, label=rootNode, style=dashed];
m15_428 -> m15_442  [color=darkseagreen4, key=1, label=rootNode, style=dashed];
m15_420 -> m15_440  [color=darkseagreen4, key=1, label=manager, style=dashed];
m15_420 -> m15_442  [color=darkseagreen4, key=1, label=manager, style=dashed];
m15_70 -> m15_73  [color=darkseagreen4, key=1, label=s, style=dashed];
m15_476 -> m15_529  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m15_476 -> m15_532  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlDocument", style=dashed];
m15_476 -> m15_535  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlDocument", style=dashed];
m15_476 -> m15_526  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m15_476 -> m15_528  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m15_476 -> m15_541  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_525 -> m15_529  [color=darkseagreen4, key=1, label=nestedArrayElement, style=dashed];
m15_525 -> m15_532  [color=darkseagreen4, key=1, label=nestedArrayElement, style=dashed];
m15_534 -> m15_540  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_530 -> m15_533  [color=darkseagreen4, key=1, label=count, style=dashed];
m15_530 -> m15_530  [color=darkseagreen4, key=1, label=count, style=dashed];
m15_527 -> m15_533  [color=darkseagreen4, key=1, label=count, style=dashed];
m15_527 -> m15_530  [color=darkseagreen4, key=1, label=count, style=dashed];
m15_589 -> m15_647  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_589 -> m15_650  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_653 -> m15_655  [color=darkseagreen4, key=1, label="out string", style=dashed];
m15_664 -> m15_667  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m15_537 -> m15_546  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlElement", style=dashed];
m15_537 -> m15_544  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlElement", style=dashed];
m15_537 -> m15_545  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlElement", style=dashed];
m15_41 -> m15_43  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m15_230 -> m15_236  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m15_230 -> m15_235  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m15_230 -> m15_238  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m15_231 -> m15_233  [color=darkseagreen4, key=1, label=node, style=dashed];
m15_231 -> m15_236  [color=darkseagreen4, key=1, label=node, style=dashed];
m15_232 -> m15_236  [color=darkseagreen4, key=1, label=manager, style=dashed];
m15_240 -> m15_248  [color=darkseagreen4, key=1, label=object, style=dashed];
m15_240 -> m15_249  [color=darkseagreen4, key=1, label=object, style=dashed];
m15_240 -> m15_250  [color=darkseagreen4, key=1, label=object, style=dashed];
m15_245 -> m15_355  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m15_245 -> m15_357  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m15_245 -> m15_358  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m15_245 -> m15_364  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m15_245 -> m15_365  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m15_245 -> m15_372  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m15_245 -> m15_374  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m15_245 -> m15_391  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m15_245 -> m15_395  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m15_245 -> m15_396  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m15_245 -> m15_398  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m15_245 -> m15_399  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m15_245 -> m15_401  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m15_245 -> m15_402  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m15_245 -> m15_404  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m15_245 -> m15_406  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m15_245 -> m15_417  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m15_245 -> m15_359  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m15_245 -> m15_362  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m15_245 -> m15_363  [color=darkseagreen4, key=1, label=bool, style=dashed];
m15_245 -> m15_366  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m15_245 -> m15_367  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m15_245 -> m15_368  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m15_245 -> m15_369  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m15_245 -> m15_371  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m15_245 -> m15_375  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m15_245 -> m15_377  [color=darkseagreen4, key=1, label=bool, style=dashed];
m15_245 -> m15_378  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m15_245 -> m15_385  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m15_245 -> m15_387  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m15_245 -> m15_388  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m15_245 -> m15_390  [color=darkseagreen4, key=1, label=bool, style=dashed];
m15_245 -> m15_392  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m15_245 -> m15_405  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m15_245 -> m15_407  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m15_357 -> m15_416  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_394 -> m15_397  [color=darkseagreen4, key=1, label=declaration, style=dashed];
m15_394 -> m15_400  [color=darkseagreen4, key=1, label=declaration, style=dashed];
m15_394 -> m15_403  [color=darkseagreen4, key=1, label=declaration, style=dashed];
m15_394 -> m15_399  [color=darkseagreen4, key=1, label=declaration, style=dashed];
m15_394 -> m15_402  [color=darkseagreen4, key=1, label=declaration, style=dashed];
m15_394 -> m15_405  [color=darkseagreen4, key=1, label=declaration, style=dashed];
m15_359 -> m15_362  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m15_370 -> m15_372  [color=darkseagreen4, key=1, label=i, style=dashed];
m15_370 -> m15_373  [color=darkseagreen4, key=1, label=i, style=dashed];
m15_373 -> m15_373  [color=darkseagreen4, key=1, label=i, style=dashed];
m15_243 -> m15_264  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m15_243 -> m15_267  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m15_254 -> m15_258  [color=darkseagreen4, key=1, label=parentElements, style=dashed];
m15_254 -> m15_260  [color=darkseagreen4, key=1, label=parentElements, style=dashed];
m15_254 -> m15_261  [color=darkseagreen4, key=1, label=parentElements, style=dashed];
m15_254 -> m15_262  [color=darkseagreen4, key=1, label=parentElements, style=dashed];
m15_254 -> m15_263  [color=darkseagreen4, key=1, label=parentElements, style=dashed];
m15_263 -> m15_265  [color=darkseagreen4, key=1, label=parentElement, style=dashed];
m15_265 -> m15_267  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m15_256 -> m15_260  [color=darkseagreen4, key=1, label=parent, style=dashed];
m15_259 -> m15_263  [color=darkseagreen4, key=1, label=parentElements, style=dashed];
m15_259 -> m15_261  [color=darkseagreen4, key=1, label=parentElements, style=dashed];
m15_259 -> m15_262  [color=darkseagreen4, key=1, label=parentElements, style=dashed];
m15_495 -> m15_575  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m15_495 -> m15_551  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m15_495 -> m15_552  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m15_495 -> m15_553  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m15_495 -> m15_562  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m15_495 -> m15_567  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m15_495 -> m15_570  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m15_495 -> m15_579  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m15_495 -> m15_585  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m15_563 -> m15_567  [color=darkseagreen4, key=1, label=attributeValue, style=dashed];
m15_557 -> m15_559  [color=darkseagreen4, key=1, label=firstChar, style=dashed];
m15_577 -> m15_579  [color=darkseagreen4, key=1, label=jsonPrefix, style=dashed];
m15_577 -> m15_580  [color=darkseagreen4, key=1, label=jsonPrefix, style=dashed];
m15_561 -> m15_566  [color=darkseagreen4, key=1, label=attributeName, style=dashed];
m15_561 -> m15_564  [color=darkseagreen4, key=1, label=attributeName, style=dashed];
m15_548 -> m15_564  [color=darkseagreen4, key=1, label=attributeNameValues, style=dashed];
m15_548 -> m15_578  [color=darkseagreen4, key=1, label=attributeNameValues, style=dashed];
m15_548 -> m15_580  [color=darkseagreen4, key=1, label=attributeNameValues, style=dashed];
m15_548 -> m15_586  [color=darkseagreen4, key=1, label=attributeNameValues, style=dashed];
m15_571 -> m15_580  [color=darkseagreen4, key=1, label=attributeValue, style=dashed];
m15_572 -> m15_580  [color=darkseagreen4, key=1, label=jsonPrefix, style=dashed];
m15_569 -> m15_580  [color=darkseagreen4, key=1, label=attributeName, style=dashed];
m15_549 -> m15_552  [color=darkseagreen4, key=1, label=finishedAttributes, style=dashed];
m15_550 -> m15_552  [color=darkseagreen4, key=1, label=finishedElement, style=dashed];
m15_455 -> m15_618  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlDocument", style=dashed];
m15_455 -> m15_621  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m15_455 -> m15_622  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m15_455 -> m15_624  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m15_455 -> m15_625  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m15_455 -> m15_629  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlDocument", style=dashed];
m15_455 -> m15_630  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m15_455 -> m15_633  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m15_455 -> m15_634  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m15_455 -> m15_636  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m15_455 -> m15_640  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m15_455 -> m15_641  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m15_620 -> m15_625  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m15_620 -> m15_630  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m15_620 -> m15_644  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m15_628 -> m15_643  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_632 -> m15_634  [color=darkseagreen4, key=1, label=constructorName, style=dashed];
m15_626 -> m15_627  [color=darkseagreen4, key=1, label=count, style=dashed];
m15_626 -> m15_626  [color=darkseagreen4, key=1, label=count, style=dashed];
m15_623 -> m15_627  [color=darkseagreen4, key=1, label=count, style=dashed];
m15_623 -> m15_626  [color=darkseagreen4, key=1, label=count, style=dashed];
m15_671 -> m15_21  [color=green, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
m15_671 -> m15_9  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
m15_671 -> m15_13  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
m15_671 -> m15_17  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
m15_671 -> m15_29  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
m15_671 -> m15_33  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
m15_680 -> m15_440  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m15_680 -> m15_442  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m15_680 -> m15_233  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m15_680 -> m15_234  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m15_680 -> m15_236  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m15_680 -> m15_237  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m15_680 -> m15_287  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m15_680 -> m15_293  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m15_680 -> m15_295  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m15_680 -> m15_335  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m15_680 -> m15_342  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m15_680 -> m15_355  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m15_680 -> m15_357  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m15_680 -> m15_358  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m15_680 -> m15_364  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m15_680 -> m15_365  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m15_680 -> m15_372  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m15_680 -> m15_374  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m15_680 -> m15_391  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m15_680 -> m15_395  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m15_680 -> m15_439  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m15_680 -> m15_468  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m15_680 -> m15_470  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m15_680 -> m15_472  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m15_680 -> m15_488  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m15_680 -> m15_492  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m15_680 -> m15_529  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m15_680 -> m15_531  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m15_680 -> m15_532  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m15_680 -> m15_533  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m15_680 -> m15_535  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m15_680 -> m15_566  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m15_680 -> m15_625  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m15_680 -> m15_627  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m15_680 -> m15_629  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m15_680 -> m15_630  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m15_680 -> m15_634  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m15_683 -> m15_644  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m15_681 -> m15_417  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m15_682 -> m15_541  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_674 -> m15_67  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeWrapper", style=dashed];
m15_674 -> m15_70  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeWrapper", style=dashed];
m15_674 -> m15_82  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeWrapper", style=dashed];
m15_674 -> m15_86  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeWrapper", style=dashed];
m15_672 -> m15_52  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlElementWrapper", style=dashed];
m15_672 -> m15_60  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlElementWrapper", style=dashed];
m15_673 -> m15_64  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDeclarationWrapper", style=dashed];
m15_677 -> m15_187  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XContainerWrapper", style=dashed];
m15_677 -> m15_207  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XContainerWrapper", style=dashed];
m15_679 -> m15_228  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XElementWrapper", style=dashed];
m15_679 -> m15_221  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XElementWrapper", style=dashed];
m15_676 -> m15_176  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XDocumentWrapper", style=dashed];
m16_112 -> m16_115  [color=darkseagreen4, key=1, label=constructorName, style=dashed];
m16_161 -> m16_163  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_164  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_165  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_166  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_167  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_168  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_169  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_170  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_171  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_172  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_173  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_174  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_175  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_176  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_177  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_178  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_179  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_180  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_181  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_182  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_183  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_184  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_185  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_186  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_187  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_188  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_189  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_190  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_191  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_192  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_193  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_194  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_195  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_196  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_197  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_198  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_199  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_200  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_201  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_202  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_203  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_204  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_205  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_206  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_207  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_208  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_209  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_210  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_211  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_212  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_213  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_214  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_215  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_216  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_217  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_218  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_219  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_220  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_221  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_222  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_223  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_224  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_225  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_226  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_227  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_228  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_229  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_230  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_231  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_232  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_233  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_234  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_235  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_236  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_237  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_238  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_239  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_240  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_241  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_242  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_243  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_244  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_245  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_246  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_247  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_248  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_249  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_250  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_251  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_252  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_253  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_254  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_255  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_256  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_257  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_258  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_259  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_260  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_261  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_262  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_263  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_264  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_265  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_266  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_267  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_268  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_269  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_270  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_271  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_272  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_273  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_274  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_275  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_276  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_277  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_278  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_279  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_280  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_281  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_161 -> m16_282  [color=darkseagreen4, key=1, label=reader, style=dashed];
m16_293 -> m16_11  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader", style=dashed];
m16_293 -> m16_13  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader", style=dashed];
m16_293 -> m16_14  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader", style=dashed];
m16_293 -> m16_20  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader", style=dashed];
m16_293 -> m16_22  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader", style=dashed];
m16_293 -> m16_25  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader", style=dashed];
m16_293 -> m16_26  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader", style=dashed];
m16_293 -> m16_32  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader", style=dashed];
m16_293 -> m16_34  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader", style=dashed];
m16_293 -> m16_35  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader", style=dashed];
m16_293 -> m16_36  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader", style=dashed];
m16_293 -> m16_37  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader", style=dashed];
m16_293 -> m16_40  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader", style=dashed];
m16_293 -> m16_41  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader", style=dashed];
m16_293 -> m16_42  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader", style=dashed];
m16_293 -> m16_43  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader", style=dashed];
m16_293 -> m16_46  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader", style=dashed];
m16_293 -> m16_47  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader", style=dashed];
m16_293 -> m16_48  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader", style=dashed];
m16_293 -> m16_49  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader", style=dashed];
m16_293 -> m16_51  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader", style=dashed];
m16_293 -> m16_52  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader", style=dashed];
m16_293 -> m16_53  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader", style=dashed];
m16_293 -> m16_56  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader", style=dashed];
m16_293 -> m16_58  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader", style=dashed];
m16_293 -> m16_60  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader", style=dashed];
m16_293 -> m16_65  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader", style=dashed];
m16_293 -> m16_67  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader", style=dashed];
m16_293 -> m16_69  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader", style=dashed];
m16_293 -> m16_71  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader", style=dashed];
m16_293 -> m16_73  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader", style=dashed];
m16_293 -> m16_94  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader", style=dashed];
m16_293 -> m16_96  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader", style=dashed];
m16_293 -> m16_98  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader", style=dashed];
m16_293 -> m16_99  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader", style=dashed];
m16_293 -> m16_102  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader", style=dashed];
m16_293 -> m16_103  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader", style=dashed];
m16_293 -> m16_107  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader", style=dashed];
m16_293 -> m16_108  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader", style=dashed];
m16_293 -> m16_115  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader", style=dashed];
m16_293 -> m16_116  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader", style=dashed];
m16_293 -> m16_122  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader", style=dashed];
m16_293 -> m16_124  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader", style=dashed];
m16_293 -> m16_128  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader", style=dashed];
m16_293 -> m16_130  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader", style=dashed];
m16_293 -> m16_133  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader", style=dashed];
m16_293 -> m16_135  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader", style=dashed];
m16_293 -> m16_138  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader", style=dashed];
m16_293 -> m16_140  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader", style=dashed];
m16_293 -> m16_144  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader", style=dashed];
m16_293 -> m16_146  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader", style=dashed];
m16_293 -> m16_150  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader", style=dashed];
m16_293 -> m16_152  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Documentation.Samples.Json.XmlJsonReader", style=dashed];
m17_7 -> m17_17  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_4 -> m18_6  [color=darkseagreen4, key=1, label=json, style=dashed];
m19_472 -> m19_475  [color=darkseagreen4, key=1, label="System.Dynamic.BinaryOperationBinder", style=dashed];
m19_472 -> m19_502  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m19_474 -> m19_502  [color=darkseagreen4, key=1, label=compareValue, style=dashed];
m19_505 -> m19_507  [color=darkseagreen4, key=1, label="out object", style=dashed];
m19_523 -> m19_526  [color=darkseagreen4, key=1, label=convertable, style=dashed];
m19_161 -> m19_163  [color=darkseagreen4, key=1, label=d1, style=dashed];
m19_161 -> m19_165  [color=darkseagreen4, key=1, label=d1, style=dashed];
m19_162 -> m19_165  [color=darkseagreen4, key=1, label=d2, style=dashed];
m19_421 -> m19_424  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m19_284 -> m19_287  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_284 -> m19_289  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_284 -> m19_290  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenType?", style=dashed];
m19_284 -> m19_291  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_284 -> m19_293  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_284 -> m19_295  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_284 -> m19_297  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_284 -> m19_299  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_284 -> m19_301  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_284 -> m19_303  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_284 -> m19_305  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_284 -> m19_307  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_284 -> m19_309  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_284 -> m19_311  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_284 -> m19_313  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_64 -> m19_67  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_64 -> m19_69  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_64 -> m19_71  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenType", style=dashed];
m19_64 -> m19_73  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_64 -> m19_74  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_64 -> m19_75  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_64 -> m19_76  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_64 -> m19_77  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_64 -> m19_78  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_64 -> m19_79  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_64 -> m19_80  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_64 -> m19_81  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_64 -> m19_83  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_64 -> m19_84  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_64 -> m19_85  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_64 -> m19_86  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_64 -> m19_87  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_64 -> m19_99  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_64 -> m19_102  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_64 -> m19_108  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_64 -> m19_120  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_64 -> m19_132  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_64 -> m19_137  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenType", style=dashed];
m19_91 -> m19_93  [color=darkseagreen4, key=1, label=s1, style=dashed];
m19_95 -> m19_97  [color=darkseagreen4, key=1, label=b1, style=dashed];
m19_100 -> m19_105  [color=darkseagreen4, key=1, label=date1, style=dashed];
m19_106 -> m19_111  [color=darkseagreen4, key=1, label=date1, style=dashed];
m19_113 -> m19_118  [color=darkseagreen4, key=1, label=bytes2, style=dashed];
m19_116 -> m19_118  [color=darkseagreen4, key=1, label=bytes1, style=dashed];
m19_122 -> m19_124  [color=darkseagreen4, key=1, label=guid1, style=dashed];
m19_126 -> m19_130  [color=darkseagreen4, key=1, label=uri2, style=dashed];
m19_134 -> m19_136  [color=darkseagreen4, key=1, label=ts1, style=dashed];
m19_111 -> m19_111  [color=darkseagreen4, key=1, label=date1, style=dashed];
m19_124 -> m19_124  [color=darkseagreen4, key=1, label=guid1, style=dashed];
m19_136 -> m19_136  [color=darkseagreen4, key=1, label=ts1, style=dashed];
m19_442 -> m19_450  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_448 -> m19_450  [color=darkseagreen4, key=1, label=formattable, style=dashed];
m19_315 -> m19_319  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenType?", style=dashed];
m19_315 -> m19_323  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenType?", style=dashed];
m19_168 -> m19_170  [color=darkseagreen4, key=1, label="System.Linq.Expressions.ExpressionType", style=dashed];
m19_168 -> m19_173  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_168 -> m19_174  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_168 -> m19_179  [color=darkseagreen4, key=1, label="System.Linq.Expressions.ExpressionType", style=dashed];
m19_168 -> m19_196  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_168 -> m19_197  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_168 -> m19_202  [color=darkseagreen4, key=1, label="System.Linq.Expressions.ExpressionType", style=dashed];
m19_168 -> m19_219  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_168 -> m19_220  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_168 -> m19_225  [color=darkseagreen4, key=1, label="System.Linq.Expressions.ExpressionType", style=dashed];
m19_168 -> m19_242  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_168 -> m19_243  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_168 -> m19_248  [color=darkseagreen4, key=1, label="System.Linq.Expressions.ExpressionType", style=dashed];
m19_265 -> m19_267  [color=darkseagreen4, key=1, label="out object", style=dashed];
m19_459 -> m19_466  [color=darkseagreen4, key=1, label="System.Dynamic.ConvertBinder", style=dashed];
m19_467 -> m19_469  [color=darkseagreen4, key=1, label="out object", style=dashed];
m19_327 -> m19_331  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m19_327 -> m19_335  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m19_327 -> m19_338  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m19_327 -> m19_341  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m19_327 -> m19_344  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m19_327 -> m19_348  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m19_327 -> m19_350  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m19_327 -> m19_352  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m19_327 -> m19_354  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m19_327 -> m19_355  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m19_327 -> m19_359  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m19_327 -> m19_361  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m19_327 -> m19_363  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m19_327 -> m19_364  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m19_327 -> m19_367  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m19_327 -> m19_370  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m19_327 -> m19_374  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m19_327 -> m19_375  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m19_327 -> m19_378  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m19_327 -> m19_381  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m19_327 -> m19_384  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m19_327 -> m19_387  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m19_329 -> m19_331  [color=darkseagreen4, key=1, label=matchingConverter, style=dashed];
m19_43 -> m19_47  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_43 -> m19_50  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_44 -> m19_46  [color=darkseagreen4, key=1, label=result, style=dashed];
m19_44 -> m19_53  [color=darkseagreen4, key=1, label=result, style=dashed];
m19_515 -> m19_518  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m19_35 -> m19_38  [color=darkseagreen4, key=1, label=other, style=dashed];
m19_35 -> m19_40  [color=darkseagreen4, key=1, label=other, style=dashed];
m19_575 -> m19_38  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m19_575 -> m19_40  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m19_575 -> m19_270  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m19_575 -> m19_328  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m19_575 -> m19_331  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m19_575 -> m19_333  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m19_575 -> m19_335  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m19_575 -> m19_338  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m19_575 -> m19_347  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m19_575 -> m19_348  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m19_575 -> m19_349  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m19_575 -> m19_350  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m19_575 -> m19_351  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m19_575 -> m19_352  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m19_575 -> m19_353  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m19_575 -> m19_354  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m19_575 -> m19_355  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m19_575 -> m19_358  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m19_575 -> m19_359  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m19_575 -> m19_360  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m19_575 -> m19_361  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m19_575 -> m19_362  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m19_575 -> m19_363  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m19_575 -> m19_364  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m19_575 -> m19_367  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m19_575 -> m19_370  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m19_575 -> m19_373  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m19_575 -> m19_374  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m19_575 -> m19_375  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m19_575 -> m19_378  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m19_575 -> m19_381  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m19_575 -> m19_384  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m19_575 -> m19_387  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m19_575 -> m19_390  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m19_575 -> m19_415  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m19_575 -> m19_424  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m19_575 -> m19_427  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m19_575 -> m19_430  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m19_575 -> m19_432  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m19_575 -> m19_435  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m19_575 -> m19_437  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m19_575 -> m19_440  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m19_575 -> m19_444  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m19_575 -> m19_446  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m19_575 -> m19_451  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m19_575 -> m19_455  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m19_575 -> m19_513  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m19_575 -> m19_518  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m19_575 -> m19_521  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m19_575 -> m19_530  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m19_575 -> m19_533  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m19_575 -> m19_536  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m19_575 -> m19_539  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m19_575 -> m19_542  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m19_575 -> m19_545  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m19_575 -> m19_548  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m19_575 -> m19_551  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m19_575 -> m19_554  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m19_575 -> m19_557  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m19_575 -> m19_560  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m19_575 -> m19_563  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m19_575 -> m19_566  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m19_575 -> m19_569  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m19_575 -> m19_572  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m23_18 -> m23_21  [color=darkseagreen4, key=1, label=object, style=dashed];
m23_18 -> m23_23  [color=darkseagreen4, key=1, label=object, style=dashed];
m23_6 -> m23_9  [color=darkseagreen4, key=1, label=object, style=dashed];
m23_6 -> m23_11  [color=darkseagreen4, key=1, label=object, style=dashed];
m23_27 -> m23_7  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DynamicValueProvider", style=dashed];
m23_27 -> m23_9  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DynamicValueProvider", style=dashed];
m23_27 -> m23_11  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DynamicValueProvider", style=dashed];
m23_27 -> m23_19  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DynamicValueProvider", style=dashed];
m23_27 -> m23_21  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DynamicValueProvider", style=dashed];
m23_27 -> m23_23  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DynamicValueProvider", style=dashed];
m24_102 -> m24_106  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_102 -> m24_108  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_102 -> m24_109  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_102 -> m24_110  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_102 -> m24_112  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_102 -> m24_113  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_102 -> m24_116  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_102 -> m24_117  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_107 -> m24_110  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m24_107 -> m24_111  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m24_104 -> m24_111  [color=darkseagreen4, key=1, label=writer, style=dashed];
m24_104 -> m24_112  [color=darkseagreen4, key=1, label=writer, style=dashed];
m24_104 -> m24_114  [color=darkseagreen4, key=1, label=writer, style=dashed];
m24_104 -> m24_115  [color=darkseagreen4, key=1, label=writer, style=dashed];
m24_73 -> m24_1014  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_73 -> m24_1018  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_73 -> m24_1020  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_73 -> m24_1023  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_73 -> m24_1025  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_73 -> m24_1027  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_73 -> m24_1029  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_73 -> m24_1031  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_73 -> m24_1033  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_73 -> m24_1035  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_47 -> m24_52  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_47 -> m24_54  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_47 -> m24_60  [color=darkseagreen4, key=1, label=bool, style=dashed];
m24_47 -> m24_61  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_47 -> m24_65  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_47 -> m24_66  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_50 -> m24_52  [color=darkseagreen4, key=1, label=contract, style=dashed];
m24_50 -> m24_53  [color=darkseagreen4, key=1, label=contract, style=dashed];
m24_50 -> m24_54  [color=darkseagreen4, key=1, label=contract, style=dashed];
m24_50 -> m24_65  [color=darkseagreen4, key=1, label=contract, style=dashed];
m24_58 -> m24_63  [color=darkseagreen4, key=1, label=deserializedValue, style=dashed];
m24_59 -> m24_63  [color=darkseagreen4, key=1, label=deserializedValue, style=dashed];
m24_51 -> m24_57  [color=darkseagreen4, key=1, label=converter, style=dashed];
m24_74 -> m24_968  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonConverter", style=dashed];
m24_74 -> m24_971  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonConverter", style=dashed];
m24_969 -> m24_972  [color=darkseagreen4, key=1, label=value, style=dashed];
m24_559 -> m24_561  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_559 -> m24_562  [color=darkseagreen4, key=1, label=string, style=dashed];
m24_559 -> m24_564  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_36 -> m24_423  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_72 -> m24_182  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonConverter", style=dashed];
m24_72 -> m24_184  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m24_72 -> m24_186  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContainerContract", style=dashed];
m24_72 -> m24_188  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m24_72 -> m24_190  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m24_72 -> m24_194  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m24_181 -> m24_196  [color=darkseagreen4, key=1, label=converter, style=dashed];
m24_86 -> m24_88  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m24_86 -> m24_89  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m24_86 -> m24_90  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_86 -> m24_91  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_86 -> m24_95  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_288 -> m24_834  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDynamicContract", style=dashed];
m24_288 -> m24_835  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_288 -> m24_836  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDynamicContract", style=dashed];
m24_288 -> m24_838  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_288 -> m24_839  [color=darkseagreen4, key=1, label=string, style=dashed];
m24_288 -> m24_840  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_288 -> m24_841  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_288 -> m24_844  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_288 -> m24_847  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_288 -> m24_848  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_288 -> m24_854  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_288 -> m24_855  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_288 -> m24_863  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDynamicContract", style=dashed];
m24_288 -> m24_865  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_288 -> m24_866  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_288 -> m24_870  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_288 -> m24_871  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_288 -> m24_873  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_288 -> m24_874  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_833 -> m24_840  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m24_833 -> m24_841  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m24_833 -> m24_854  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m24_833 -> m24_863  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m24_833 -> m24_865  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m24_833 -> m24_873  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m24_833 -> m24_874  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m24_833 -> m24_875  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m24_837 -> m24_840  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m24_837 -> m24_841  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m24_837 -> m24_854  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m24_837 -> m24_863  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m24_837 -> m24_865  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m24_837 -> m24_873  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m24_837 -> m24_874  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m24_837 -> m24_875  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m24_842 -> m24_866  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m24_846 -> m24_848  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m24_846 -> m24_863  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m24_846 -> m24_865  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m24_849 -> m24_851  [color=darkseagreen4, key=1, label=property, style=dashed];
m24_849 -> m24_854  [color=darkseagreen4, key=1, label=property, style=dashed];
m24_858 -> m24_860  [color=darkseagreen4, key=1, label=dynamicMemberConverter, style=dashed];
m24_869 -> m24_872  [color=darkseagreen4, key=1, label=finished, style=dashed];
m24_78 -> m24_1153  [color=darkseagreen4, key=1, label=bool, style=dashed];
m24_78 -> m24_1154  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_78 -> m24_1155  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_78 -> m24_1156  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_824 -> m24_828  [color=darkseagreen4, key=1, label=itemConverter, style=dashed];
m24_33 -> m24_752  [color=darkseagreen4, key=1, label=string, style=dashed];
m24_33 -> m24_753  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_33 -> m24_754  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
m24_33 -> m24_755  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_33 -> m24_757  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_33 -> m24_759  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m24_33 -> m24_764  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_33 -> m24_765  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_33 -> m24_773  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
m24_33 -> m24_776  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_33 -> m24_777  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_33 -> m24_779  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_33 -> m24_784  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_33 -> m24_785  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_751 -> m24_753  [color=darkseagreen4, key=1, label=underlyingList, style=dashed];
m24_751 -> m24_756  [color=darkseagreen4, key=1, label=underlyingList, style=dashed];
m24_751 -> m24_757  [color=darkseagreen4, key=1, label=underlyingList, style=dashed];
m24_751 -> m24_776  [color=darkseagreen4, key=1, label=underlyingList, style=dashed];
m24_751 -> m24_784  [color=darkseagreen4, key=1, label=underlyingList, style=dashed];
m24_751 -> m24_785  [color=darkseagreen4, key=1, label=underlyingList, style=dashed];
m24_751 -> m24_786  [color=darkseagreen4, key=1, label=underlyingList, style=dashed];
m24_758 -> m24_777  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m24_761 -> m24_764  [color=darkseagreen4, key=1, label=collectionItemConverter, style=dashed];
m24_761 -> m24_770  [color=darkseagreen4, key=1, label=collectionItemConverter, style=dashed];
m24_775 -> m24_778  [color=darkseagreen4, key=1, label=errorPosition, style=dashed];
m24_762 -> m24_778  [color=darkseagreen4, key=1, label=previousErrorIndex, style=dashed];
m24_763 -> m24_782  [color=darkseagreen4, key=1, label=finished, style=dashed];
m24_763 -> m24_783  [color=darkseagreen4, key=1, label=finished, style=dashed];
m24_767 -> m24_783  [color=darkseagreen4, key=1, label=finished, style=dashed];
m24_412 -> m24_414  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_412 -> m24_419  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_415 -> m24_420  [color=darkseagreen4, key=1, label=arrayContract, style=dashed];
m24_42 -> m24_45  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m24_281 -> m24_293  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m24_281 -> m24_311  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m24_281 -> m24_312  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m24_281 -> m24_319  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
m24_281 -> m24_323  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m24_281 -> m24_324  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m24_281 -> m24_325  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m24_281 -> m24_327  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m24_281 -> m24_328  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m24_281 -> m24_337  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m24_281 -> m24_339  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m24_281 -> m24_341  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
m24_291 -> m24_341  [color=darkseagreen4, key=1, label="out string", style=dashed];
m24_319 -> m24_319  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
m24_319 -> m24_341  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
m24_336 -> m24_341  [color=darkseagreen4, key=1, label="out object", style=dashed];
m24_292 -> m24_341  [color=darkseagreen4, key=1, label="out object", style=dashed];
m24_295 -> m24_297  [color=darkseagreen4, key=1, label=refToken, style=dashed];
m24_295 -> m24_298  [color=darkseagreen4, key=1, label=refToken, style=dashed];
m24_299 -> m24_301  [color=darkseagreen4, key=1, label=property, style=dashed];
m24_299 -> m24_303  [color=darkseagreen4, key=1, label=property, style=dashed];
m24_305 -> m24_311  [color=darkseagreen4, key=1, label=reference, style=dashed];
m24_300 -> m24_307  [color=darkseagreen4, key=1, label=additionalContent, style=dashed];
m24_300 -> m24_308  [color=darkseagreen4, key=1, label=additionalContent, style=dashed];
m24_302 -> m24_307  [color=darkseagreen4, key=1, label=additionalContent, style=dashed];
m24_302 -> m24_308  [color=darkseagreen4, key=1, label=additionalContent, style=dashed];
m24_304 -> m24_307  [color=darkseagreen4, key=1, label=additionalContent, style=dashed];
m24_304 -> m24_308  [color=darkseagreen4, key=1, label=additionalContent, style=dashed];
m24_309 -> m24_311  [color=darkseagreen4, key=1, label="out object", style=dashed];
m24_309 -> m24_341  [color=darkseagreen4, key=1, label="out object", style=dashed];
m24_316 -> m24_319  [color=darkseagreen4, key=1, label=qualifiedTypeName, style=dashed];
m24_317 -> m24_319  [color=darkseagreen4, key=1, label=typeTokenReader, style=dashed];
m24_331 -> m24_341  [color=darkseagreen4, key=1, label="out string", style=dashed];
m24_951 -> m24_1128  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>", style=dashed];
m24_951 -> m24_1136  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_951 -> m24_1140  [color=darkseagreen4, key=1, label=object, style=dashed];
m24_951 -> m24_1143  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_951 -> m24_1145  [color=darkseagreen4, key=1, label=object, style=dashed];
m24_951 -> m24_1146  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_1132 -> m24_1135  [color=darkseagreen4, key=1, label=resolvedRequired, style=dashed];
m24_1132 -> m24_1142  [color=darkseagreen4, key=1, label=resolvedRequired, style=dashed];
m24_1129 -> m24_1136  [color=darkseagreen4, key=1, label=property, style=dashed];
m24_1129 -> m24_1137  [color=darkseagreen4, key=1, label=property, style=dashed];
m24_1129 -> m24_1139  [color=darkseagreen4, key=1, label=property, style=dashed];
m24_1129 -> m24_1140  [color=darkseagreen4, key=1, label=property, style=dashed];
m24_1129 -> m24_1143  [color=darkseagreen4, key=1, label=property, style=dashed];
m24_1129 -> m24_1145  [color=darkseagreen4, key=1, label=property, style=dashed];
m24_1130 -> m24_1133  [color=darkseagreen4, key=1, label=presence, style=dashed];
m24_623 -> m24_625  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_623 -> m24_626  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m24_460 -> m24_578  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_460 -> m24_579  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m24_460 -> m24_582  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m24_460 -> m24_585  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m24_460 -> m24_587  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m24_460 -> m24_591  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m24_460 -> m24_593  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m24_460 -> m24_594  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m24_460 -> m24_595  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_460 -> m24_596  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_581 -> m24_584  [color=darkseagreen4, key=1, label=list, style=dashed];
m24_586 -> m24_590  [color=darkseagreen4, key=1, label=list, style=dashed];
m24_588 -> m24_590  [color=darkseagreen4, key=1, label=list, style=dashed];
m24_580 -> m24_597  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m24_589 -> m24_597  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m24_592 -> m24_597  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m24_161 -> m24_469  [color=darkseagreen4, key=1, label=object, style=dashed];
m24_161 -> m24_471  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m24_161 -> m24_472  [color=darkseagreen4, key=1, label=object, style=dashed];
m24_161 -> m24_474  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m24_161 -> m24_476  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m24_161 -> m24_477  [color=darkseagreen4, key=1, label=object, style=dashed];
m24_161 -> m24_478  [color=darkseagreen4, key=1, label=object, style=dashed];
m24_161 -> m24_480  [color=darkseagreen4, key=1, label=object, style=dashed];
m24_161 -> m24_481  [color=darkseagreen4, key=1, label=object, style=dashed];
m24_161 -> m24_482  [color=darkseagreen4, key=1, label=object, style=dashed];
m24_161 -> m24_483  [color=darkseagreen4, key=1, label=object, style=dashed];
m24_161 -> m24_484  [color=darkseagreen4, key=1, label=object, style=dashed];
m24_161 -> m24_486  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_161 -> m24_487  [color=darkseagreen4, key=1, label=object, style=dashed];
m24_475 -> m24_479  [color=darkseagreen4, key=1, label=primitiveContract, style=dashed];
m24_159 -> m24_202  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_159 -> m24_218  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m24_159 -> m24_220  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_159 -> m24_222  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_159 -> m24_224  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m24_159 -> m24_225  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_159 -> m24_226  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m24_159 -> m24_231  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m24_159 -> m24_236  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_159 -> m24_239  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_159 -> m24_240  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_159 -> m24_241  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_159 -> m24_242  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_159 -> m24_244  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_159 -> m24_249  [color=darkseagreen4, key=1, label=object, style=dashed];
m24_159 -> m24_254  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_159 -> m24_255  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m24_159 -> m24_256  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_159 -> m24_257  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m24_159 -> m24_258  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_159 -> m24_260  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_159 -> m24_261  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_159 -> m24_271  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_159 -> m24_274  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_159 -> m24_277  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_200 -> m24_218  [color=darkseagreen4, key=1, label=resolvedObjectType, style=dashed];
m24_200 -> m24_222  [color=darkseagreen4, key=1, label=resolvedObjectType, style=dashed];
m24_200 -> m24_231  [color=darkseagreen4, key=1, label=resolvedObjectType, style=dashed];
m24_205 -> m24_218  [color=darkseagreen4, key=1, label=tokenReader, style=dashed];
m24_218 -> m24_218  [color=darkseagreen4, key=1, label=resolvedObjectType, style=dashed];
m24_218 -> m24_226  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m24_218 -> m24_231  [color=darkseagreen4, key=1, label=resolvedObjectType, style=dashed];
m24_218 -> m24_236  [color=darkseagreen4, key=1, label=id, style=dashed];
m24_218 -> m24_253  [color=darkseagreen4, key=1, label=id, style=dashed];
m24_218 -> m24_254  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m24_218 -> m24_255  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m24_218 -> m24_256  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m24_218 -> m24_257  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m24_218 -> m24_258  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m24_218 -> m24_260  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m24_218 -> m24_261  [color=darkseagreen4, key=1, label=id, style=dashed];
m24_218 -> m24_271  [color=darkseagreen4, key=1, label=id, style=dashed];
m24_218 -> m24_274  [color=darkseagreen4, key=1, label=id, style=dashed];
m24_222 -> m24_222  [color=darkseagreen4, key=1, label=resolvedObjectType, style=dashed];
m24_222 -> m24_226  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m24_222 -> m24_231  [color=darkseagreen4, key=1, label=resolvedObjectType, style=dashed];
m24_222 -> m24_236  [color=darkseagreen4, key=1, label=id, style=dashed];
m24_222 -> m24_253  [color=darkseagreen4, key=1, label=id, style=dashed];
m24_222 -> m24_254  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m24_222 -> m24_255  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m24_222 -> m24_256  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m24_222 -> m24_257  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m24_222 -> m24_258  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m24_222 -> m24_260  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m24_222 -> m24_261  [color=darkseagreen4, key=1, label=id, style=dashed];
m24_222 -> m24_271  [color=darkseagreen4, key=1, label=id, style=dashed];
m24_222 -> m24_274  [color=darkseagreen4, key=1, label=id, style=dashed];
m24_229 -> m24_236  [color=darkseagreen4, key=1, label=objectContract, style=dashed];
m24_232 -> m24_235  [color=darkseagreen4, key=1, label=targetObject, style=dashed];
m24_232 -> m24_236  [color=darkseagreen4, key=1, label=targetObject, style=dashed];
m24_233 -> m24_235  [color=darkseagreen4, key=1, label=targetObject, style=dashed];
m24_233 -> m24_236  [color=darkseagreen4, key=1, label=targetObject, style=dashed];
m24_243 -> m24_245  [color=darkseagreen4, key=1, label=value, style=dashed];
m24_247 -> m24_259  [color=darkseagreen4, key=1, label=dictionaryContract, style=dashed];
m24_247 -> m24_261  [color=darkseagreen4, key=1, label=dictionaryContract, style=dashed];
m24_247 -> m24_263  [color=darkseagreen4, key=1, label=dictionaryContract, style=dashed];
m24_251 -> m24_261  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m24_251 -> m24_262  [color=darkseagreen4, key=1, label=createdFromNonDefaultCreator, style=dashed];
m24_251 -> m24_263  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m24_251 -> m24_264  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m24_251 -> m24_265  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m24_203 -> m24_236  [color=darkseagreen4, key=1, label=id, style=dashed];
m24_203 -> m24_253  [color=darkseagreen4, key=1, label=id, style=dashed];
m24_203 -> m24_261  [color=darkseagreen4, key=1, label=id, style=dashed];
m24_203 -> m24_271  [color=darkseagreen4, key=1, label=id, style=dashed];
m24_203 -> m24_274  [color=darkseagreen4, key=1, label=id, style=dashed];
m24_208 -> m24_215  [color=darkseagreen4, key=1, label=tokenReader, style=dashed];
m24_208 -> m24_218  [color=darkseagreen4, key=1, label=tokenReader, style=dashed];
m24_216 -> m24_225  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_216 -> m24_236  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_216 -> m24_239  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_216 -> m24_240  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_216 -> m24_241  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_216 -> m24_242  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_216 -> m24_244  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_216 -> m24_254  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_216 -> m24_256  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_216 -> m24_258  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_216 -> m24_260  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_216 -> m24_261  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_216 -> m24_271  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_216 -> m24_274  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_216 -> m24_277  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_228 -> m24_234  [color=darkseagreen4, key=1, label=createdFromNonDefaultCreator, style=dashed];
m24_683 -> m24_746  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_683 -> m24_747  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_497 -> m24_502  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m24_497 -> m24_506  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m24_497 -> m24_510  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m24_497 -> m24_511  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m24_497 -> m24_512  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m24_497 -> m24_514  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m24_497 -> m24_515  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m24_502 -> m24_502  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonConverter", style=dashed];
m24_502 -> m24_505  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonConverter", style=dashed];
m24_502 -> m24_506  [color=darkseagreen4, key=1, label=gottenCurrentValue, style=dashed];
m24_502 -> m24_510  [color=darkseagreen4, key=1, label=currentValue, style=dashed];
m24_502 -> m24_517  [color=darkseagreen4, key=1, label=useExistingValue, style=dashed];
m24_507 -> m24_510  [color=darkseagreen4, key=1, label=currentValue, style=dashed];
m24_508 -> m24_511  [color=darkseagreen4, key=1, label=value, style=dashed];
m24_509 -> m24_511  [color=darkseagreen4, key=1, label=value, style=dashed];
m24_348 -> m24_395  [color=darkseagreen4, key=1, label=string, style=dashed];
m24_348 -> m24_399  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_348 -> m24_401  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_348 -> m24_403  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_348 -> m24_404  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
m24_348 -> m24_405  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_348 -> m24_408  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
m24_397 -> m24_403  [color=darkseagreen4, key=1, label=specifiedType, style=dashed];
m24_397 -> m24_404  [color=darkseagreen4, key=1, label=specifiedType, style=dashed];
m24_397 -> m24_405  [color=darkseagreen4, key=1, label=specifiedType, style=dashed];
m24_406 -> m24_408  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
m24_617 -> m24_619  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_617 -> m24_620  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m24_160 -> m24_426  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m24_160 -> m24_427  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_160 -> m24_429  [color=darkseagreen4, key=1, label=object, style=dashed];
m24_160 -> m24_433  [color=darkseagreen4, key=1, label=string, style=dashed];
m24_160 -> m24_434  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_160 -> m24_435  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m24_160 -> m24_436  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_160 -> m24_437  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m24_160 -> m24_438  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_160 -> m24_440  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_160 -> m24_442  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_160 -> m24_443  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_160 -> m24_456  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_428 -> m24_439  [color=darkseagreen4, key=1, label=arrayContract, style=dashed];
m24_428 -> m24_441  [color=darkseagreen4, key=1, label=arrayContract, style=dashed];
m24_428 -> m24_442  [color=darkseagreen4, key=1, label=arrayContract, style=dashed];
m24_428 -> m24_443  [color=darkseagreen4, key=1, label=arrayContract, style=dashed];
m24_428 -> m24_445  [color=darkseagreen4, key=1, label=arrayContract, style=dashed];
m24_428 -> m24_447  [color=darkseagreen4, key=1, label=arrayContract, style=dashed];
m24_428 -> m24_451  [color=darkseagreen4, key=1, label=arrayContract, style=dashed];
m24_428 -> m24_455  [color=darkseagreen4, key=1, label=arrayContract, style=dashed];
m24_431 -> m24_442  [color=darkseagreen4, key=1, label=list, style=dashed];
m24_431 -> m24_443  [color=darkseagreen4, key=1, label=list, style=dashed];
m24_431 -> m24_444  [color=darkseagreen4, key=1, label=createdFromNonDefaultCreator, style=dashed];
m24_431 -> m24_449  [color=darkseagreen4, key=1, label=list, style=dashed];
m24_431 -> m24_451  [color=darkseagreen4, key=1, label=list, style=dashed];
m24_431 -> m24_452  [color=darkseagreen4, key=1, label=list, style=dashed];
m24_431 -> m24_453  [color=darkseagreen4, key=1, label=list, style=dashed];
m24_521 -> m24_571  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m24_521 -> m24_573  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m24_942 -> m24_978  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_942 -> m24_986  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_942 -> m24_987  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_942 -> m24_996  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_942 -> m24_997  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_942 -> m24_999  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m24_942 -> m24_1001  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_942 -> m24_1005  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_942 -> m24_1009  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_942 -> m24_1010  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_975 -> m24_1002  [color=darkseagreen4, key=1, label="out System.Collections.Generic.IDictionary<string, object>", style=dashed];
m24_975 -> m24_1012  [color=darkseagreen4, key=1, label="out System.Collections.Generic.IDictionary<string, object>", style=dashed];
m24_980 -> m24_987  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m24_980 -> m24_997  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m24_980 -> m24_999  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m24_980 -> m24_1001  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m24_981 -> m24_983  [color=darkseagreen4, key=1, label=property, style=dashed];
m24_981 -> m24_986  [color=darkseagreen4, key=1, label=property, style=dashed];
m24_981 -> m24_988  [color=darkseagreen4, key=1, label=property, style=dashed];
m24_981 -> m24_989  [color=darkseagreen4, key=1, label=property, style=dashed];
m24_985 -> m24_992  [color=darkseagreen4, key=1, label=propertyConverter, style=dashed];
m24_976 -> m24_1011  [color=darkseagreen4, key=1, label=propertyValues, style=dashed];
m24_286 -> m24_602  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m24_286 -> m24_603  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m24_286 -> m24_605  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m24_286 -> m24_609  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m24_286 -> m24_611  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m24_286 -> m24_612  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m24_286 -> m24_613  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_286 -> m24_614  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_604 -> m24_608  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m24_606 -> m24_608  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m24_601 -> m24_615  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m24_607 -> m24_615  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m24_610 -> m24_615  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m24_285 -> m24_1044  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m24_285 -> m24_1045  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m24_285 -> m24_1047  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_285 -> m24_1049  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m24_285 -> m24_1051  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m24_285 -> m24_1053  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_285 -> m24_1055  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m24_285 -> m24_1056  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_285 -> m24_1057  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_1043 -> m24_1054  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m24_1043 -> m24_1059  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m24_1048 -> m24_1059  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m24_1050 -> m24_1059  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m24_1058 -> m24_1060  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m24_461 -> m24_685  [color=darkseagreen4, key=1, label=string, style=dashed];
m24_461 -> m24_686  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
m24_461 -> m24_687  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
m24_461 -> m24_692  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
m24_461 -> m24_697  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_461 -> m24_698  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_461 -> m24_711  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
m24_461 -> m24_712  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_461 -> m24_714  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_461 -> m24_717  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_461 -> m24_718  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_461 -> m24_730  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_461 -> m24_733  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
m24_461 -> m24_734  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
m24_461 -> m24_735  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
m24_684 -> m24_696  [color=darkseagreen4, key=1, label=rank, style=dashed];
m24_688 -> m24_697  [color=darkseagreen4, key=1, label=collectionItemContract, style=dashed];
m24_689 -> m24_697  [color=darkseagreen4, key=1, label=collectionItemConverter, style=dashed];
m24_689 -> m24_705  [color=darkseagreen4, key=1, label=collectionItemConverter, style=dashed];
m24_693 -> m24_721  [color=darkseagreen4, key=1, label=currentList, style=dashed];
m24_695 -> m24_712  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m24_710 -> m24_713  [color=darkseagreen4, key=1, label=errorPosition, style=dashed];
m24_690 -> m24_713  [color=darkseagreen4, key=1, label=previousErrorIndex, style=dashed];
m24_691 -> m24_696  [color=darkseagreen4, key=1, label=listStack, style=dashed];
m24_691 -> m24_700  [color=darkseagreen4, key=1, label=listStack, style=dashed];
m24_691 -> m24_722  [color=darkseagreen4, key=1, label=listStack, style=dashed];
m24_691 -> m24_725  [color=darkseagreen4, key=1, label=listStack, style=dashed];
m24_691 -> m24_726  [color=darkseagreen4, key=1, label=listStack, style=dashed];
m24_701 -> m24_708  [color=darkseagreen4, key=1, label=currentList, style=dashed];
m24_694 -> m24_731  [color=darkseagreen4, key=1, label=finished, style=dashed];
m24_694 -> m24_732  [color=darkseagreen4, key=1, label=finished, style=dashed];
m24_702 -> m24_713  [color=darkseagreen4, key=1, label=previousErrorIndex, style=dashed];
m24_720 -> m24_722  [color=darkseagreen4, key=1, label=newList, style=dashed];
m24_728 -> m24_732  [color=darkseagreen4, key=1, label=finished, style=dashed];
m24_75 -> m24_125  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_75 -> m24_126  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_75 -> m24_128  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_75 -> m24_130  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_75 -> m24_136  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_75 -> m24_139  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m24_75 -> m24_141  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m24_75 -> m24_143  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_75 -> m24_146  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_75 -> m24_149  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m24_75 -> m24_151  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_75 -> m24_153  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_75 -> m24_155  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_75 -> m24_156  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_75 -> m24_157  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_138 -> m24_142  [color=darkseagreen4, key=1, label=s, style=dashed];
m24_138 -> m24_143  [color=darkseagreen4, key=1, label=s, style=dashed];
m24_2 -> m24_6  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_2 -> m24_7  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_2 -> m24_8  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_2 -> m24_11  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_2 -> m24_12  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_2 -> m24_13  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_2 -> m24_14  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_2 -> m24_16  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_2 -> m24_17  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_2 -> m24_19  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_2 -> m24_22  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_2 -> m24_24  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_2 -> m24_25  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_2 -> m24_26  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_4 -> m24_12  [color=darkseagreen4, key=1, label=objectType, style=dashed];
m24_4 -> m24_25  [color=darkseagreen4, key=1, label=objectType, style=dashed];
m24_18 -> m24_22  [color=darkseagreen4, key=1, label=id, style=dashed];
m24_18 -> m24_24  [color=darkseagreen4, key=1, label=id, style=dashed];
m24_5 -> m24_9  [color=darkseagreen4, key=1, label=contract, style=dashed];
m24_5 -> m24_20  [color=darkseagreen4, key=1, label=contract, style=dashed];
m24_5 -> m24_23  [color=darkseagreen4, key=1, label=contract, style=dashed];
m24_5 -> m24_24  [color=darkseagreen4, key=1, label=contract, style=dashed];
m24_15 -> m24_22  [color=darkseagreen4, key=1, label=id, style=dashed];
m24_15 -> m24_24  [color=darkseagreen4, key=1, label=id, style=dashed];
m24_41 -> m24_1063  [color=darkseagreen4, key=1, label=string, style=dashed];
m24_41 -> m24_1064  [color=darkseagreen4, key=1, label=object, style=dashed];
m24_41 -> m24_1067  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_41 -> m24_1070  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_41 -> m24_1074  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_41 -> m24_1076  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_41 -> m24_1077  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_41 -> m24_1078  [color=darkseagreen4, key=1, label=object, style=dashed];
m24_41 -> m24_1082  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_41 -> m24_1083  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_41 -> m24_1084  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_41 -> m24_1085  [color=darkseagreen4, key=1, label=object, style=dashed];
m24_41 -> m24_1086  [color=darkseagreen4, key=1, label=object, style=dashed];
m24_41 -> m24_1088  [color=darkseagreen4, key=1, label=object, style=dashed];
m24_41 -> m24_1089  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_41 -> m24_1094  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_41 -> m24_1095  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_41 -> m24_1097  [color=darkseagreen4, key=1, label=object, style=dashed];
m24_41 -> m24_1098  [color=darkseagreen4, key=1, label=object, style=dashed];
m24_41 -> m24_1099  [color=darkseagreen4, key=1, label=object, style=dashed];
m24_41 -> m24_1100  [color=darkseagreen4, key=1, label=object, style=dashed];
m24_1062 -> m24_1104  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_1062 -> m24_1107  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_1062 -> m24_1084  [color=darkseagreen4, key=1, label=propertiesPresence, style=dashed];
m24_1062 -> m24_1098  [color=darkseagreen4, key=1, label=propertiesPresence, style=dashed];
m24_1065 -> m24_1089  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m24_1065 -> m24_1098  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m24_1069 -> m24_1074  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m24_1069 -> m24_1076  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m24_1069 -> m24_1078  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m24_1069 -> m24_1083  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m24_1069 -> m24_1086  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m24_1069 -> m24_1088  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m24_1071 -> m24_1079  [color=darkseagreen4, key=1, label=property, style=dashed];
m24_1071 -> m24_1082  [color=darkseagreen4, key=1, label=property, style=dashed];
m24_1071 -> m24_1084  [color=darkseagreen4, key=1, label=property, style=dashed];
m24_1071 -> m24_1085  [color=darkseagreen4, key=1, label=property, style=dashed];
m24_1081 -> m24_1085  [color=darkseagreen4, key=1, label=propertyConverter, style=dashed];
m24_1092 -> m24_1096  [color=darkseagreen4, key=1, label=finished, style=dashed];
m24_1102 -> m24_1122  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m24_1102 -> m24_1124  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m24_1102 -> m24_1125  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_120 -> m24_1111  [color=darkseagreen4, key=1, label=string, style=dashed];
m24_120 -> m24_1116  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_289 -> m24_792  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_289 -> m24_794  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_289 -> m24_797  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_289 -> m24_800  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_289 -> m24_801  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_289 -> m24_802  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_289 -> m24_806  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_289 -> m24_807  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_289 -> m24_809  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_289 -> m24_810  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonISerializableContract", style=dashed];
m24_289 -> m24_811  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_289 -> m24_813  [color=darkseagreen4, key=1, label=string, style=dashed];
m24_289 -> m24_814  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_289 -> m24_815  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_289 -> m24_816  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_788 -> m24_811  [color=darkseagreen4, key=1, label=objectType, style=dashed];
m24_795 -> m24_802  [color=darkseagreen4, key=1, label=serializationInfo, style=dashed];
m24_795 -> m24_809  [color=darkseagreen4, key=1, label=serializationInfo, style=dashed];
m24_799 -> m24_801  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m24_799 -> m24_802  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m24_812 -> m24_814  [color=darkseagreen4, key=1, label=createdObject, style=dashed];
m24_812 -> m24_815  [color=darkseagreen4, key=1, label=createdObject, style=dashed];
m24_812 -> m24_816  [color=darkseagreen4, key=1, label=createdObject, style=dashed];
m24_812 -> m24_817  [color=darkseagreen4, key=1, label=createdObject, style=dashed];
m24_805 -> m24_808  [color=darkseagreen4, key=1, label=finished, style=dashed];
m24_519 -> m24_528  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m24_519 -> m24_531  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m24_519 -> m24_533  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m24_519 -> m24_534  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m24_519 -> m24_540  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m24_519 -> m24_542  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m24_519 -> m24_544  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m24_519 -> m24_549  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m24_519 -> m24_552  [color=darkseagreen4, key=1, label="ref Newtonsoft.Json.JsonConverter", style=dashed];
m24_524 -> m24_546  [color=darkseagreen4, key=1, label="out object", style=dashed];
m24_524 -> m24_552  [color=darkseagreen4, key=1, label="out object", style=dashed];
m24_530 -> m24_534  [color=darkseagreen4, key=1, label=tokenType, style=dashed];
m24_530 -> m24_542  [color=darkseagreen4, key=1, label=tokenType, style=dashed];
m24_530 -> m24_544  [color=darkseagreen4, key=1, label=tokenType, style=dashed];
m24_535 -> m24_537  [color=darkseagreen4, key=1, label="out object", style=dashed];
m24_535 -> m24_546  [color=darkseagreen4, key=1, label="out object", style=dashed];
m24_535 -> m24_552  [color=darkseagreen4, key=1, label="out object", style=dashed];
m24_547 -> m24_552  [color=darkseagreen4, key=1, label="out Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m24_550 -> m24_552  [color=darkseagreen4, key=1, label="ref Newtonsoft.Json.JsonConverter", style=dashed];
m24_525 -> m24_540  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m24_525 -> m24_552  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m24_548 -> m24_552  [color=darkseagreen4, key=1, label="out Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m24_527 -> m24_552  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m24_536 -> m24_552  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m24_539 -> m24_552  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m24_879 -> m24_885  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_879 -> m24_893  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m24_879 -> m24_905  [color=darkseagreen4, key=1, label=string, style=dashed];
m24_879 -> m24_906  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_879 -> m24_907  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_879 -> m24_933  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m24_879 -> m24_934  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_879 -> m24_935  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_881 -> m24_952  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_881 -> m24_955  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_881 -> m24_900  [color=darkseagreen4, key=1, label=propertiesPresence, style=dashed];
m24_881 -> m24_934  [color=darkseagreen4, key=1, label=propertiesPresence, style=dashed];
m24_884 -> m24_958  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_887 -> m24_890  [color=darkseagreen4, key=1, label=propertyValues, style=dashed];
m24_887 -> m24_931  [color=darkseagreen4, key=1, label=extensionData, style=dashed];
m24_887 -> m24_932  [color=darkseagreen4, key=1, label=extensionData, style=dashed];
m24_895 -> m24_961  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_904 -> m24_906  [color=darkseagreen4, key=1, label=createdObject, style=dashed];
m24_904 -> m24_907  [color=darkseagreen4, key=1, label=createdObject, style=dashed];
m24_904 -> m24_912  [color=darkseagreen4, key=1, label=createdObject, style=dashed];
m24_904 -> m24_933  [color=darkseagreen4, key=1, label=createdObject, style=dashed];
m24_904 -> m24_934  [color=darkseagreen4, key=1, label=createdObject, style=dashed];
m24_904 -> m24_935  [color=darkseagreen4, key=1, label=createdObject, style=dashed];
m24_904 -> m24_936  [color=darkseagreen4, key=1, label=createdObject, style=dashed];
m24_933 -> m24_933  [color=darkseagreen4, key=1, label=e, style=dashed];
m24_901 -> m24_964  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_889 -> m24_899  [color=darkseagreen4, key=1, label=remainingPropertyValues, style=dashed];
m24_889 -> m24_908  [color=darkseagreen4, key=1, label=remainingPropertyValues, style=dashed];
m24_891 -> m24_893  [color=darkseagreen4, key=1, label=property, style=dashed];
m24_891 -> m24_899  [color=darkseagreen4, key=1, label=propertyValue, style=dashed];
m24_891 -> m24_965  [color=darkseagreen4, key=1, label=property, style=dashed];
m24_909 -> m24_911  [color=darkseagreen4, key=1, label=property, style=dashed];
m24_909 -> m24_912  [color=darkseagreen4, key=1, label=property, style=dashed];
m24_909 -> m24_913  [color=darkseagreen4, key=1, label=property, style=dashed];
m24_910 -> m24_912  [color=darkseagreen4, key=1, label=value, style=dashed];
m24_910 -> m24_913  [color=darkseagreen4, key=1, label=value, style=dashed];
m24_914 -> m24_923  [color=darkseagreen4, key=1, label=propertyContract, style=dashed];
m24_919 -> m24_922  [color=darkseagreen4, key=1, label=createdObjectCollectionWrapper, style=dashed];
m24_927 -> m24_930  [color=darkseagreen4, key=1, label=targetDictionary, style=dashed];
m24_930 -> m24_930  [color=darkseagreen4, key=1, label=newValue, style=dashed];
m24_282 -> m24_351  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_282 -> m24_357  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_282 -> m24_358  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_282 -> m24_359  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_282 -> m24_361  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_282 -> m24_363  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_282 -> m24_364  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_282 -> m24_367  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_282 -> m24_371  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_282 -> m24_373  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_282 -> m24_374  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_282 -> m24_377  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_282 -> m24_379  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_282 -> m24_382  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_282 -> m24_384  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_282 -> m24_388  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_282 -> m24_390  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
m24_349 -> m24_390  [color=darkseagreen4, key=1, label="out string", style=dashed];
m24_355 -> m24_370  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m24_355 -> m24_376  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m24_355 -> m24_381  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m24_360 -> m24_362  [color=darkseagreen4, key=1, label=reference, style=dashed];
m24_360 -> m24_367  [color=darkseagreen4, key=1, label=reference, style=dashed];
m24_373 -> m24_373  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
m24_373 -> m24_390  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
m24_378 -> m24_390  [color=darkseagreen4, key=1, label="out string", style=dashed];
m24_350 -> m24_390  [color=darkseagreen4, key=1, label="out object", style=dashed];
m24_354 -> m24_388  [color=darkseagreen4, key=1, label=metadataProperty, style=dashed];
m24_365 -> m24_367  [color=darkseagreen4, key=1, label="out object", style=dashed];
m24_365 -> m24_390  [color=darkseagreen4, key=1, label="out object", style=dashed];
m24_385 -> m24_390  [color=darkseagreen4, key=1, label="out object", style=dashed];
m24_40 -> m24_631  [color=darkseagreen4, key=1, label=string, style=dashed];
m24_40 -> m24_632  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_40 -> m24_633  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_40 -> m24_635  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m24_40 -> m24_637  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m24_40 -> m24_642  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_40 -> m24_645  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_40 -> m24_656  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_40 -> m24_660  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_40 -> m24_661  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_40 -> m24_662  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_40 -> m24_669  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_40 -> m24_670  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_40 -> m24_675  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_40 -> m24_676  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_40 -> m24_678  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_40 -> m24_679  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m24_630 -> m24_632  [color=darkseagreen4, key=1, label=underlyingDictionary, style=dashed];
m24_630 -> m24_633  [color=darkseagreen4, key=1, label=underlyingDictionary, style=dashed];
m24_630 -> m24_669  [color=darkseagreen4, key=1, label=underlyingDictionary, style=dashed];
m24_630 -> m24_678  [color=darkseagreen4, key=1, label=underlyingDictionary, style=dashed];
m24_630 -> m24_679  [color=darkseagreen4, key=1, label=underlyingDictionary, style=dashed];
m24_630 -> m24_680  [color=darkseagreen4, key=1, label=underlyingDictionary, style=dashed];
m24_634 -> m24_670  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m24_639 -> m24_661  [color=darkseagreen4, key=1, label=dictionaryValueConverter, style=dashed];
m24_639 -> m24_664  [color=darkseagreen4, key=1, label=dictionaryValueConverter, style=dashed];
m24_640 -> m24_647  [color=darkseagreen4, key=1, label=keyTypeCode, style=dashed];
m24_644 -> m24_656  [color=darkseagreen4, key=1, label=keyValue, style=dashed];
m24_658 -> m24_669  [color=darkseagreen4, key=1, label=keyValue, style=dashed];
m24_654 -> m24_656  [color=darkseagreen4, key=1, label=dateParseHandling, style=dashed];
m24_657 -> m24_669  [color=darkseagreen4, key=1, label=keyValue, style=dashed];
m24_674 -> m24_677  [color=darkseagreen4, key=1, label=finished, style=dashed];
m24_1158 -> m24_11  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_14  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_16  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_17  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_19  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_22  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_24  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_45  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_52  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_65  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_66  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_68  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_81  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_83  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_110  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_125  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_128  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_130  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_136  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_143  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_146  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_151  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_201  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_202  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_204  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_215  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_218  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_220  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_222  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_224  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_225  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_236  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_239  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_240  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_244  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_261  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_271  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_274  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_310  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_311  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_318  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_319  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_323  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_327  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_335  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_339  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_357  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_361  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_366  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_367  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_371  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_373  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_374  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_377  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_379  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_382  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_384  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_391  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_402  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_403  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_426  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_427  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_442  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_443  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_502  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_510  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_513  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_514  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_533  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_542  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_544  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_560  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_561  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_562  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_569  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_571  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_585  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_603  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_618  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_619  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_620  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_624  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_625  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_626  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_632  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_633  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_645  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_661  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_669  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_670  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_678  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_679  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_686  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_687  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_697  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_711  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_712  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_733  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_734  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_746  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_747  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_753  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_757  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_764  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_776  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_777  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_784  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_785  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_793  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_794  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_809  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_814  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_815  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_816  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_826  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_836  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_840  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_841  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_854  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_865  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_866  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_873  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_874  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_883  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_885  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_906  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_907  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_911  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_934  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_935  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_967  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_968  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_970  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_971  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_986  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_998  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_999  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_1000  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_1047  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_1049  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_1053  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_1061  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_1064  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_1070  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_1073  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_1074  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_1075  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_1078  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_1082  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_1084  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_1085  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_1086  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_1088  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_1089  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_1097  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_1098  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_1099  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_1110  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_1139  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_1140  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_1145  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_1146  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1158 -> m24_1152  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m24_1159 -> m24_965  [color=darkseagreen4, key=1, label=property, style=dashed];
m26_182 -> m26_184  [color=darkseagreen4, key=1, label=table, style=dashed];
m26_182 -> m26_185  [color=darkseagreen4, key=1, label=table, style=dashed];
m26_182 -> m26_186  [color=darkseagreen4, key=1, label=table, style=dashed];
m26_182 -> m26_187  [color=darkseagreen4, key=1, label=table, style=dashed];
m26_172 -> m26_174  [color=darkseagreen4, key=1, label=table, style=dashed];
m26_172 -> m26_175  [color=darkseagreen4, key=1, label=table, style=dashed];
m26_172 -> m26_176  [color=darkseagreen4, key=1, label=table, style=dashed];
m26_172 -> m26_177  [color=darkseagreen4, key=1, label=table, style=dashed];
m26_282 -> m26_284  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m26_282 -> m26_285  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m26_36 -> m26_38  [color=darkseagreen4, key=1, label=deserializedDataTable, style=dashed];
m26_36 -> m26_39  [color=darkseagreen4, key=1, label=deserializedDataTable, style=dashed];
m26_36 -> m26_40  [color=darkseagreen4, key=1, label=deserializedDataTable, style=dashed];
m26_36 -> m26_41  [color=darkseagreen4, key=1, label=deserializedDataTable, style=dashed];
m26_36 -> m26_42  [color=darkseagreen4, key=1, label=deserializedDataTable, style=dashed];
m26_36 -> m26_43  [color=darkseagreen4, key=1, label=deserializedDataTable, style=dashed];
m26_36 -> m26_44  [color=darkseagreen4, key=1, label=deserializedDataTable, style=dashed];
m26_45 -> m26_47  [color=darkseagreen4, key=1, label=dr1, style=dashed];
m26_48 -> m26_50  [color=darkseagreen4, key=1, label=dr2, style=dashed];
m26_276 -> m26_279  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m26_127 -> m26_131  [color=darkseagreen4, key=1, label=t1, style=dashed];
m26_204 -> m26_206  [color=darkseagreen4, key=1, label=table, style=dashed];
m26_204 -> m26_207  [color=darkseagreen4, key=1, label=table, style=dashed];
m26_204 -> m26_208  [color=darkseagreen4, key=1, label=table, style=dashed];
m26_204 -> m26_209  [color=darkseagreen4, key=1, label=table, style=dashed];
m26_204 -> m26_210  [color=darkseagreen4, key=1, label=table, style=dashed];
m26_56 -> m26_59  [color=darkseagreen4, key=1, label=myTable, style=dashed];
m26_56 -> m26_62  [color=darkseagreen4, key=1, label=myTable, style=dashed];
m26_56 -> m26_65  [color=darkseagreen4, key=1, label=myTable, style=dashed];
m26_56 -> m26_68  [color=darkseagreen4, key=1, label=myTable, style=dashed];
m26_56 -> m26_72  [color=darkseagreen4, key=1, label=myTable, style=dashed];
m26_56 -> m26_75  [color=darkseagreen4, key=1, label=myTable, style=dashed];
m26_56 -> m26_78  [color=darkseagreen4, key=1, label=myTable, style=dashed];
m26_56 -> m26_81  [color=darkseagreen4, key=1, label=myTable, style=dashed];
m26_56 -> m26_84  [color=darkseagreen4, key=1, label=myTable, style=dashed];
m26_56 -> m26_102  [color=darkseagreen4, key=1, label=myTable, style=dashed];
m26_85 -> m26_102  [color=darkseagreen4, key=1, label=myNewRow, style=dashed];
m26_94 -> m26_97  [color=darkseagreen4, key=1, label=nestedTable, style=dashed];
m26_94 -> m26_100  [color=darkseagreen4, key=1, label=nestedTable, style=dashed];
m26_98 -> m26_100  [color=darkseagreen4, key=1, label=myNewNestedRow, style=dashed];
m26_193 -> m26_195  [color=darkseagreen4, key=1, label=table, style=dashed];
m26_193 -> m26_196  [color=darkseagreen4, key=1, label=table, style=dashed];
m26_193 -> m26_197  [color=darkseagreen4, key=1, label=table, style=dashed];
m26_193 -> m26_198  [color=darkseagreen4, key=1, label=table, style=dashed];
m26_193 -> m26_199  [color=darkseagreen4, key=1, label=table, style=dashed];
m26_114 -> m26_116  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m26_2 -> m26_4  [color=darkseagreen4, key=1, label=deserializedDataTable, style=dashed];
m26_2 -> m26_5  [color=darkseagreen4, key=1, label=deserializedDataTable, style=dashed];
m26_2 -> m26_6  [color=darkseagreen4, key=1, label=deserializedDataTable, style=dashed];
m26_2 -> m26_7  [color=darkseagreen4, key=1, label=deserializedDataTable, style=dashed];
m26_2 -> m26_8  [color=darkseagreen4, key=1, label=deserializedDataTable, style=dashed];
m26_2 -> m26_9  [color=darkseagreen4, key=1, label=deserializedDataTable, style=dashed];
m26_2 -> m26_10  [color=darkseagreen4, key=1, label=deserializedDataTable, style=dashed];
m26_2 -> m26_11  [color=darkseagreen4, key=1, label=deserializedDataTable, style=dashed];
m26_2 -> m26_12  [color=darkseagreen4, key=1, label=deserializedDataTable, style=dashed];
m26_2 -> m26_13  [color=darkseagreen4, key=1, label=deserializedDataTable, style=dashed];
m26_2 -> m26_14  [color=darkseagreen4, key=1, label=deserializedDataTable, style=dashed];
m26_2 -> m26_15  [color=darkseagreen4, key=1, label=deserializedDataTable, style=dashed];
m26_2 -> m26_16  [color=darkseagreen4, key=1, label=deserializedDataTable, style=dashed];
m26_17 -> m26_19  [color=darkseagreen4, key=1, label=dr1, style=dashed];
m26_17 -> m26_20  [color=darkseagreen4, key=1, label=dr1, style=dashed];
m26_17 -> m26_21  [color=darkseagreen4, key=1, label=dr1, style=dashed];
m26_17 -> m26_22  [color=darkseagreen4, key=1, label=dr1, style=dashed];
m26_23 -> m26_25  [color=darkseagreen4, key=1, label=dr2, style=dashed];
m26_23 -> m26_26  [color=darkseagreen4, key=1, label=dr2, style=dashed];
m26_23 -> m26_27  [color=darkseagreen4, key=1, label=dr2, style=dashed];
m26_23 -> m26_28  [color=darkseagreen4, key=1, label=dr2, style=dashed];
m26_136 -> m26_140  [color=darkseagreen4, key=1, label=g, style=dashed];
m26_136 -> m26_157  [color=darkseagreen4, key=1, label=g, style=dashed];
m26_137 -> m26_139  [color=darkseagreen4, key=1, label=table, style=dashed];
m26_137 -> m26_140  [color=darkseagreen4, key=1, label=table, style=dashed];
m26_137 -> m26_144  [color=darkseagreen4, key=1, label=table, style=dashed];
m26_141 -> m26_144  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m26_147 -> m26_149  [color=darkseagreen4, key=1, label=deserializedDataTable, style=dashed];
m26_147 -> m26_150  [color=darkseagreen4, key=1, label=deserializedDataTable, style=dashed];
m26_147 -> m26_151  [color=darkseagreen4, key=1, label=deserializedDataTable, style=dashed];
m26_147 -> m26_152  [color=darkseagreen4, key=1, label=deserializedDataTable, style=dashed];
m26_147 -> m26_153  [color=darkseagreen4, key=1, label=deserializedDataTable, style=dashed];
m26_147 -> m26_154  [color=darkseagreen4, key=1, label=deserializedDataTable, style=dashed];
m26_155 -> m26_157  [color=darkseagreen4, key=1, label=dr1, style=dashed];
m26_262 -> m26_267  [color=darkseagreen4, key=1, label=json, style=dashed];
m26_263 -> m26_265  [color=darkseagreen4, key=1, label=ds, style=dashed];
m26_213 -> m26_217  [color=darkseagreen4, key=1, label=table, style=dashed];
m26_213 -> m26_218  [color=darkseagreen4, key=1, label=table, style=dashed];
m26_213 -> m26_222  [color=darkseagreen4, key=1, label=table, style=dashed];
m26_219 -> m26_221  [color=darkseagreen4, key=1, label=r, style=dashed];
m26_219 -> m26_222  [color=darkseagreen4, key=1, label=r, style=dashed];
m26_215 -> m26_217  [color=darkseagreen4, key=1, label=idColumn, style=dashed];
m26_216 -> m26_218  [color=darkseagreen4, key=1, label=itemColumn, style=dashed];
m26_227 -> m26_227  [color=darkseagreen4, key=1, label=pair2, style=dashed];
m26_228 -> m26_228  [color=darkseagreen4, key=1, label=pair2, style=dashed];
m26_229 -> m26_229  [color=darkseagreen4, key=1, label=pair2, style=dashed];
m27_22 -> m27_24  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m27_22 -> m27_25  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m27_22 -> m27_26  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m27_22 -> m27_28  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m27_22 -> m27_29  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m27_22 -> m27_30  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m27_22 -> m27_31  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m27_22 -> m27_32  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m27_22 -> m27_35  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m27_22 -> m27_36  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m27_22 -> m27_37  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m27_23 -> m27_38  [color=darkseagreen4, key=1, label=t, style=dashed];
m27_34 -> m27_39  [color=darkseagreen4, key=1, label=d, style=dashed];
m27_34 -> m27_40  [color=darkseagreen4, key=1, label=d, style=dashed];
m27_0 -> m27_2  [color=darkseagreen4, key=1, label=object, style=dashed];
m27_0 -> m27_6  [color=darkseagreen4, key=1, label=object, style=dashed];
m27_0 -> m27_11  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m27_0 -> m27_12  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m27_0 -> m27_13  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m27_1 -> m27_12  [color=darkseagreen4, key=1, label=ticks, style=dashed];
m27_5 -> m27_12  [color=darkseagreen4, key=1, label=ticks, style=dashed];
m27_9 -> m27_12  [color=darkseagreen4, key=1, label=ticks, style=dashed];
m28_6 -> m28_9  [color=darkseagreen4, key=1, label=object, style=dashed];
m28_6 -> m28_11  [color=darkseagreen4, key=1, label=object, style=dashed];
m28_18 -> m28_21  [color=darkseagreen4, key=1, label=object, style=dashed];
m28_18 -> m28_23  [color=darkseagreen4, key=1, label=object, style=dashed];
m28_27 -> m28_7  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ExpressionValueProvider", style=dashed];
m28_27 -> m28_9  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ExpressionValueProvider", style=dashed];
m28_27 -> m28_11  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ExpressionValueProvider", style=dashed];
m28_27 -> m28_19  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ExpressionValueProvider", style=dashed];
m28_27 -> m28_21  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ExpressionValueProvider", style=dashed];
m28_27 -> m28_23  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ExpressionValueProvider", style=dashed];
m30_0 -> m30_8  [color=darkseagreen4, key=1, label=bool, style=dashed];
m30_0 -> m30_10  [color=darkseagreen4, key=1, label=bool, style=dashed];
m30_5 -> m30_7  [color=darkseagreen4, key=1, label=v, style=dashed];
m30_4 -> m30_9  [color=darkseagreen4, key=1, label=name, style=dashed];
m30_22 -> m30_4  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.FieldMultipleFilter", style=dashed];
m34_20 -> m34_22  [color=darkseagreen4, key=1, label="System.Reflection.Emit.ILGenerator", style=dashed];
m34_20 -> m34_23  [color=darkseagreen4, key=1, label="System.Reflection.Emit.ILGenerator", style=dashed];
m34_9 -> m34_11  [color=darkseagreen4, key=1, label="System.Reflection.Emit.ILGenerator", style=dashed];
m34_9 -> m34_12  [color=darkseagreen4, key=1, label="System.Reflection.Emit.ILGenerator", style=dashed];
m34_25 -> m34_27  [color=darkseagreen4, key=1, label="System.Reflection.Emit.ILGenerator", style=dashed];
m34_25 -> m34_28  [color=darkseagreen4, key=1, label="System.Reflection.Emit.ILGenerator", style=dashed];
m34_15 -> m34_17  [color=darkseagreen4, key=1, label="System.Reflection.Emit.ILGenerator", style=dashed];
m34_15 -> m34_18  [color=darkseagreen4, key=1, label="System.Reflection.Emit.ILGenerator", style=dashed];
m34_0 -> m34_2  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m34_0 -> m34_3  [color=darkseagreen4, key=1, label="System.Reflection.Emit.ILGenerator", style=dashed];
m34_0 -> m34_4  [color=darkseagreen4, key=1, label="System.Reflection.Emit.ILGenerator", style=dashed];
m35_4 -> m35_6  [color=darkseagreen4, key=1, label=person, style=dashed];
m36_0 -> m36_4  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m36_0 -> m36_6  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m36_2 -> m36_4  [color=darkseagreen4, key=1, label=i, style=dashed];
m36_2 -> m36_5  [color=darkseagreen4, key=1, label=i, style=dashed];
m36_5 -> m36_5  [color=darkseagreen4, key=1, label=i, style=dashed];
m36_15 -> m36_17  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m36_15 -> m36_18  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m36_15 -> m36_19  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m36_15 -> m36_20  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m36_15 -> m36_21  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m36_15 -> m36_23  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m36_15 -> m36_24  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m36_22 -> m36_24  [color=darkseagreen4, key=1, label=a, style=dashed];
m36_22 -> m36_25  [color=darkseagreen4, key=1, label=a, style=dashed];
m36_35 -> m36_3  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JArray", style=dashed];
m36_35 -> m36_4  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JArray", style=dashed];
m37_46 -> m37_104  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m37_46 -> m37_106  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m37_46 -> m37_108  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m37_46 -> m37_110  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m37_46 -> m37_112  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m37_46 -> m37_114  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m37_46 -> m37_116  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m37_46 -> m37_118  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m37_46 -> m37_120  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m37_46 -> m37_122  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m37_46 -> m37_124  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m37_46 -> m37_126  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m37_46 -> m37_128  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m37_46 -> m37_130  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m37_46 -> m37_132  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m37_46 -> m37_133  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m37_45 -> m37_54  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m37_45 -> m37_55  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m37_45 -> m37_57  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m37_63 -> m37_96  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JContainer", style=dashed];
m37_90 -> m37_92  [color=darkseagreen4, key=1, label=endToken, style=dashed];
m37_36 -> m37_38  [color=darkseagreen4, key=1, label=container, style=dashed];
m37_44 -> m37_84  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JContainer", style=dashed];
m37_82 -> m37_85  [color=darkseagreen4, key=1, label=firstChild, style=dashed];
m37_69 -> m37_79  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JContainer", style=dashed];
m37_147 -> m37_9  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m37_147 -> m37_13  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m37_147 -> m37_17  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m37_147 -> m37_21  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m37_147 -> m37_25  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m37_147 -> m37_29  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m37_147 -> m37_33  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m37_147 -> m37_34  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m37_147 -> m37_37  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m37_147 -> m37_38  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m37_147 -> m37_39  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m37_147 -> m37_41  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m37_147 -> m37_49  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m37_147 -> m37_51  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m37_147 -> m37_52  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m37_147 -> m37_56  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m37_147 -> m37_57  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m37_147 -> m37_59  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m37_147 -> m37_65  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m37_147 -> m37_84  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m37_147 -> m37_85  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m37_147 -> m37_92  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m37_147 -> m37_96  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m37_147 -> m37_100  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m37_147 -> m37_102  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m37_147 -> m37_104  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m37_147 -> m37_106  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m37_147 -> m37_108  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m37_147 -> m37_110  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m37_147 -> m37_112  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m37_147 -> m37_114  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m37_147 -> m37_116  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m37_147 -> m37_118  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m37_147 -> m37_120  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m37_147 -> m37_122  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m37_147 -> m37_124  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m37_147 -> m37_126  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m37_147 -> m37_128  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m37_147 -> m37_130  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m37_147 -> m37_132  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m37_147 -> m37_141  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m38_169 -> m38_174  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m38_169 -> m38_175  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_172 -> m38_174  [color=darkseagreen4, key=1, label=task, style=dashed];
m38_198 -> m38_201  [color=darkseagreen4, key=1, label=int, style=dashed];
m38_198 -> m38_202  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_198 -> m38_203  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m38_198 -> m38_208  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_198 -> m38_210  [color=darkseagreen4, key=1, label="bool[]", style=dashed];
m38_198 -> m38_230  [color=darkseagreen4, key=1, label="bool[]", style=dashed];
m38_198 -> m38_231  [color=darkseagreen4, key=1, label="Newtonsoft.Json.StringEscapeHandling", style=dashed];
m38_198 -> m38_233  [color=darkseagreen4, key=1, label="Newtonsoft.Json.StringEscapeHandling", style=dashed];
m38_198 -> m38_235  [color=darkseagreen4, key=1, label="char[]", style=dashed];
m38_198 -> m38_237  [color=darkseagreen4, key=1, label="char[]", style=dashed];
m38_198 -> m38_239  [color=darkseagreen4, key=1, label=int, style=dashed];
m38_198 -> m38_242  [color=darkseagreen4, key=1, label="char[]", style=dashed];
m38_198 -> m38_244  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_198 -> m38_245  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m38_198 -> m38_248  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m38_198 -> m38_249  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m38_198 -> m38_254  [color=darkseagreen4, key=1, label="char[]", style=dashed];
m38_198 -> m38_256  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_198 -> m38_257  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m38_200 -> m38_202  [color=darkseagreen4, key=1, label="char[]", style=dashed];
m38_200 -> m38_203  [color=darkseagreen4, key=1, label="char[]", style=dashed];
m38_200 -> m38_235  [color=darkseagreen4, key=1, label="char[]", style=dashed];
m38_200 -> m38_237  [color=darkseagreen4, key=1, label="char[]", style=dashed];
m38_200 -> m38_242  [color=darkseagreen4, key=1, label="char[]", style=dashed];
m38_200 -> m38_244  [color=darkseagreen4, key=1, label="char[]", style=dashed];
m38_200 -> m38_245  [color=darkseagreen4, key=1, label="char[]", style=dashed];
m38_200 -> m38_249  [color=darkseagreen4, key=1, label="char[]", style=dashed];
m38_200 -> m38_254  [color=darkseagreen4, key=1, label="char[]", style=dashed];
m38_200 -> m38_256  [color=darkseagreen4, key=1, label="char[]", style=dashed];
m38_200 -> m38_257  [color=darkseagreen4, key=1, label="char[]", style=dashed];
m38_207 -> m38_239  [color=darkseagreen4, key=1, label=i, style=dashed];
m38_207 -> m38_251  [color=darkseagreen4, key=1, label=i, style=dashed];
m38_209 -> m38_211  [color=darkseagreen4, key=1, label=c, style=dashed];
m38_209 -> m38_230  [color=darkseagreen4, key=1, label=c, style=dashed];
m38_209 -> m38_231  [color=darkseagreen4, key=1, label=c, style=dashed];
m38_209 -> m38_233  [color=darkseagreen4, key=1, label=c, style=dashed];
m38_209 -> m38_237  [color=darkseagreen4, key=1, label=c, style=dashed];
m38_236 -> m38_242  [color=darkseagreen4, key=1, label="char[]", style=dashed];
m38_236 -> m38_244  [color=darkseagreen4, key=1, label="char[]", style=dashed];
m38_236 -> m38_245  [color=darkseagreen4, key=1, label="char[]", style=dashed];
m38_236 -> m38_249  [color=darkseagreen4, key=1, label="char[]", style=dashed];
m38_236 -> m38_254  [color=darkseagreen4, key=1, label="char[]", style=dashed];
m38_236 -> m38_256  [color=darkseagreen4, key=1, label="char[]", style=dashed];
m38_236 -> m38_257  [color=darkseagreen4, key=1, label="char[]", style=dashed];
m38_240 -> m38_242  [color=darkseagreen4, key=1, label=length, style=dashed];
m38_240 -> m38_244  [color=darkseagreen4, key=1, label=length, style=dashed];
m38_240 -> m38_245  [color=darkseagreen4, key=1, label=length, style=dashed];
m38_243 -> m38_245  [color=darkseagreen4, key=1, label="char[]", style=dashed];
m38_243 -> m38_249  [color=darkseagreen4, key=1, label="char[]", style=dashed];
m38_243 -> m38_254  [color=darkseagreen4, key=1, label="char[]", style=dashed];
m38_243 -> m38_256  [color=darkseagreen4, key=1, label="char[]", style=dashed];
m38_243 -> m38_257  [color=darkseagreen4, key=1, label="char[]", style=dashed];
m38_252 -> m38_254  [color=darkseagreen4, key=1, label=length, style=dashed];
m38_252 -> m38_256  [color=darkseagreen4, key=1, label=length, style=dashed];
m38_252 -> m38_257  [color=darkseagreen4, key=1, label=length, style=dashed];
m38_255 -> m38_257  [color=darkseagreen4, key=1, label="char[]", style=dashed];
m38_205 -> m38_247  [color=darkseagreen4, key=1, label=isEscapedUnicodeText, style=dashed];
m38_241 -> m38_244  [color=darkseagreen4, key=1, label=start, style=dashed];
m38_241 -> m38_245  [color=darkseagreen4, key=1, label=start, style=dashed];
m38_246 -> m38_256  [color=darkseagreen4, key=1, label=int, style=dashed];
m38_251 -> m38_251  [color=darkseagreen4, key=1, label=i, style=dashed];
m38_229 -> m38_248  [color=darkseagreen4, key=1, label=escapedValue, style=dashed];
m38_232 -> m38_248  [color=darkseagreen4, key=1, label=escapedValue, style=dashed];
m38_234 -> m38_248  [color=darkseagreen4, key=1, label=escapedValue, style=dashed];
m38_238 -> m38_247  [color=darkseagreen4, key=1, label=isEscapedUnicodeText, style=dashed];
m38_11 -> m38_13  [color=darkseagreen4, key=1, label=int, style=dashed];
m38_11 -> m38_14  [color=darkseagreen4, key=1, label="char[]", style=dashed];
m38_11 -> m38_15  [color=darkseagreen4, key=1, label="Newtonsoft.Json.IArrayPool<char>", style=dashed];
m38_11 -> m38_16  [color=darkseagreen4, key=1, label="Newtonsoft.Json.IArrayPool<char>", style=dashed];
m38_183 -> m38_192  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m38_19 -> m38_22  [color=darkseagreen4, key=1, label=escapeChars, style=dashed];
m38_19 -> m38_24  [color=darkseagreen4, key=1, label=escapeChars, style=dashed];
m38_19 -> m38_26  [color=darkseagreen4, key=1, label=escapeChars, style=dashed];
m38_19 -> m38_28  [color=darkseagreen4, key=1, label=escapeChars, style=dashed];
m38_20 -> m38_22  [color=darkseagreen4, key=1, label=i, style=dashed];
m38_20 -> m38_23  [color=darkseagreen4, key=1, label=i, style=dashed];
m38_23 -> m38_23  [color=darkseagreen4, key=1, label=i, style=dashed];
m38_126 -> m38_144  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_126 -> m38_146  [color=darkseagreen4, key=1, label="bool[]", style=dashed];
m38_126 -> m38_147  [color=darkseagreen4, key=1, label="bool[]", style=dashed];
m38_126 -> m38_149  [color=darkseagreen4, key=1, label="Newtonsoft.Json.StringEscapeHandling", style=dashed];
m38_143 -> m38_148  [color=darkseagreen4, key=1, label=i, style=dashed];
m38_143 -> m38_150  [color=darkseagreen4, key=1, label=i, style=dashed];
m38_143 -> m38_155  [color=darkseagreen4, key=1, label=i, style=dashed];
m38_143 -> m38_156  [color=darkseagreen4, key=1, label=i, style=dashed];
m38_145 -> m38_147  [color=darkseagreen4, key=1, label=c, style=dashed];
m38_145 -> m38_151  [color=darkseagreen4, key=1, label=c, style=dashed];
m38_156 -> m38_156  [color=darkseagreen4, key=1, label=i, style=dashed];
m38_34 -> m38_37  [color=darkseagreen4, key=1, label=char, style=dashed];
m38_0 -> m38_2  [color=darkseagreen4, key=1, label=int, style=dashed];
m38_171 -> m38_195  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m38_134 -> m38_138  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_135 -> m38_138  [color=darkseagreen4, key=1, label=charEscapeFlags, style=dashed];
m38_136 -> m38_138  [color=darkseagreen4, key=1, label=w, style=dashed];
m38_136 -> m38_139  [color=darkseagreen4, key=1, label=w, style=dashed];
m38_138 -> m38_138  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m38_159 -> m38_162  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_159 -> m38_163  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m38_159 -> m38_164  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_159 -> m38_166  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m38_160 -> m38_160  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m38_160 -> m38_163  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m38_160 -> m38_165  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m38_160 -> m38_166  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m38_41 -> m38_44  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_41 -> m38_45  [color=darkseagreen4, key=1, label="bool[]", style=dashed];
m38_49 -> m38_51  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m38_49 -> m38_52  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_49 -> m38_55  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m38_49 -> m38_57  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m38_49 -> m38_59  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_49 -> m38_60  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m38_49 -> m38_63  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_49 -> m38_65  [color=darkseagreen4, key=1, label="bool[]", style=dashed];
m38_49 -> m38_86  [color=darkseagreen4, key=1, label="bool[]", style=dashed];
m38_49 -> m38_87  [color=darkseagreen4, key=1, label="Newtonsoft.Json.StringEscapeHandling", style=dashed];
m38_49 -> m38_89  [color=darkseagreen4, key=1, label="Newtonsoft.Json.StringEscapeHandling", style=dashed];
m38_49 -> m38_91  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m38_49 -> m38_93  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m38_49 -> m38_101  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m38_49 -> m38_104  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m38_49 -> m38_105  [color=darkseagreen4, key=1, label="Newtonsoft.Json.IArrayPool<char>", style=dashed];
m38_49 -> m38_107  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_49 -> m38_108  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m38_49 -> m38_111  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m38_49 -> m38_112  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m38_49 -> m38_117  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m38_49 -> m38_119  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_49 -> m38_120  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m38_49 -> m38_121  [color=darkseagreen4, key=1, label=bool, style=dashed];
m38_49 -> m38_122  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m38_49 -> m38_123  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m38_53 -> m38_56  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m38_53 -> m38_57  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m38_53 -> m38_59  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m38_53 -> m38_60  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m38_53 -> m38_98  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m38_53 -> m38_107  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m38_53 -> m38_114  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m38_53 -> m38_119  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m38_58 -> m38_60  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m38_58 -> m38_91  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m38_58 -> m38_93  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m38_58 -> m38_101  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m38_58 -> m38_104  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m38_58 -> m38_105  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m38_58 -> m38_107  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m38_58 -> m38_108  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m38_58 -> m38_112  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m38_58 -> m38_117  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m38_58 -> m38_119  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m38_58 -> m38_120  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m38_58 -> m38_123  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m38_64 -> m38_67  [color=darkseagreen4, key=1, label=c, style=dashed];
m38_64 -> m38_86  [color=darkseagreen4, key=1, label=c, style=dashed];
m38_64 -> m38_87  [color=darkseagreen4, key=1, label=c, style=dashed];
m38_64 -> m38_89  [color=darkseagreen4, key=1, label=c, style=dashed];
m38_64 -> m38_93  [color=darkseagreen4, key=1, label=c, style=dashed];
m38_92 -> m38_101  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m38_92 -> m38_104  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m38_92 -> m38_105  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m38_92 -> m38_107  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m38_92 -> m38_108  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m38_92 -> m38_112  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m38_92 -> m38_117  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m38_92 -> m38_119  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m38_92 -> m38_120  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m38_92 -> m38_123  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m38_102 -> m38_104  [color=darkseagreen4, key=1, label=newBuffer, style=dashed];
m38_115 -> m38_117  [color=darkseagreen4, key=1, label=length, style=dashed];
m38_115 -> m38_119  [color=darkseagreen4, key=1, label=length, style=dashed];
m38_115 -> m38_120  [color=darkseagreen4, key=1, label=length, style=dashed];
m38_118 -> m38_120  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m38_118 -> m38_123  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m38_62 -> m38_98  [color=darkseagreen4, key=1, label=i, style=dashed];
m38_62 -> m38_113  [color=darkseagreen4, key=1, label=i, style=dashed];
m38_99 -> m38_101  [color=darkseagreen4, key=1, label=length, style=dashed];
m38_99 -> m38_107  [color=darkseagreen4, key=1, label=length, style=dashed];
m38_99 -> m38_108  [color=darkseagreen4, key=1, label=length, style=dashed];
m38_109 -> m38_114  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m38_109 -> m38_119  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m38_113 -> m38_113  [color=darkseagreen4, key=1, label=i, style=dashed];
m38_95 -> m38_111  [color=darkseagreen4, key=1, label=escapedValue, style=dashed];
m38_88 -> m38_111  [color=darkseagreen4, key=1, label=escapedValue, style=dashed];
m38_90 -> m38_111  [color=darkseagreen4, key=1, label=escapedValue, style=dashed];
m38_94 -> m38_111  [color=darkseagreen4, key=1, label=escapedValue, style=dashed];
m38_97 -> m38_103  [color=darkseagreen4, key=1, label=isEscapedUnicodeText, style=dashed];
m38_97 -> m38_110  [color=darkseagreen4, key=1, label=isEscapedUnicodeText, style=dashed];
m38_100 -> m38_107  [color=darkseagreen4, key=1, label=start, style=dashed];
m38_100 -> m38_108  [color=darkseagreen4, key=1, label=start, style=dashed];
m38_106 -> m38_108  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m38_106 -> m38_112  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m38_106 -> m38_117  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m38_106 -> m38_119  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m38_106 -> m38_120  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m38_106 -> m38_123  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m38_182 -> m38_185  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_182 -> m38_186  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m38_182 -> m38_187  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m39_4 -> m39_10  [color=darkseagreen4, key=1, label=string, style=dashed];
m39_5 -> m39_9  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m39_13 -> m39_10  [color=darkseagreen4, key=1, label=string, style=dashed];
m40_106 -> m40_109  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<T>", style=dashed];
m40_50 -> m40_53  [color=darkseagreen4, key=1, label=object, style=dashed];
m40_50 -> m40_70  [color=darkseagreen4, key=1, label=object, style=dashed];
m40_50 -> m40_56  [color=darkseagreen4, key=1, label=object, style=dashed];
m40_50 -> m40_57  [color=darkseagreen4, key=1, label=object, style=dashed];
m40_50 -> m40_58  [color=darkseagreen4, key=1, label=object, style=dashed];
m40_50 -> m40_59  [color=darkseagreen4, key=1, label=object, style=dashed];
m40_54 -> m40_56  [color=darkseagreen4, key=1, label=collectionItemType, style=dashed];
m40_93 -> m40_97  [color=darkseagreen4, key=1, label="System.Array", style=dashed];
m40_96 -> m40_98  [color=darkseagreen4, key=1, label=destinationArray, style=dashed];
m40_113 -> m40_116  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<TSource>", style=dashed];
m40_113 -> m40_118  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<TSource>", style=dashed];
m40_113 -> m40_119  [color=darkseagreen4, key=1, label=TSource, style=dashed];
m40_115 -> m40_119  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEqualityComparer<TSource>", style=dashed];
m40_38 -> m40_40  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_38 -> m40_42  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_38 -> m40_44  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_149 -> m40_152  [color=darkseagreen4, key=1, label=dimensions, style=dashed];
m40_149 -> m40_157  [color=darkseagreen4, key=1, label=dimensions, style=dashed];
m40_150 -> m40_152  [color=darkseagreen4, key=1, label=currentArray, style=dashed];
m40_150 -> m40_153  [color=darkseagreen4, key=1, label=currentArray, style=dashed];
m40_160 -> m40_162  [color=darkseagreen4, key=1, label="System.Array", style=dashed];
m40_160 -> m40_163  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
m40_160 -> m40_176  [color=darkseagreen4, key=1, label="System.Array", style=dashed];
m40_160 -> m40_178  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
m40_161 -> m40_172  [color=darkseagreen4, key=1, label=dimension, style=dashed];
m40_161 -> m40_176  [color=darkseagreen4, key=1, label=dimension, style=dashed];
m40_165 -> m40_168  [color=darkseagreen4, key=1, label=dimensionLength, style=dashed];
m40_170 -> m40_178  [color=darkseagreen4, key=1, label=newIndices, style=dashed];
m40_171 -> m40_174  [color=darkseagreen4, key=1, label=i, style=dashed];
m40_174 -> m40_174  [color=darkseagreen4, key=1, label=i, style=dashed];
m40_175 -> m40_179  [color=darkseagreen4, key=1, label=i, style=dashed];
m40_179 -> m40_179  [color=darkseagreen4, key=1, label=i, style=dashed];
m40_0 -> m40_2  [color=darkseagreen4, key=1, label="System.Collections.IEnumerable", style=dashed];
m40_2 -> m40_8  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m40_195 -> m40_197  [color=darkseagreen4, key=1, label=int, style=dashed];
m40_195 -> m40_200  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
m40_196 -> m40_198  [color=darkseagreen4, key=1, label=dimensions, style=dashed];
m40_199 -> m40_201  [color=darkseagreen4, key=1, label=multidimensionalArray, style=dashed];
m40_181 -> m40_187  [color=darkseagreen4, key=1, label="int[]", style=dashed];
m40_181 -> m40_189  [color=darkseagreen4, key=1, label="int[]", style=dashed];
m40_185 -> m40_190  [color=darkseagreen4, key=1, label=currentList, style=dashed];
m40_185 -> m40_193  [color=darkseagreen4, key=1, label=currentList, style=dashed];
m40_188 -> m40_190  [color=darkseagreen4, key=1, label=index, style=dashed];
m40_186 -> m40_189  [color=darkseagreen4, key=1, label=i, style=dashed];
m40_186 -> m40_192  [color=darkseagreen4, key=1, label=i, style=dashed];
m40_191 -> m40_193  [color=darkseagreen4, key=1, label=currentList, style=dashed];
m40_192 -> m40_192  [color=darkseagreen4, key=1, label=i, style=dashed];
m40_140 -> m40_142  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<TSource>", style=dashed];
m40_140 -> m40_143  [color=darkseagreen4, key=1, label=TSource, style=dashed];
m40_141 -> m40_144  [color=darkseagreen4, key=1, label=index, style=dashed];
m40_141 -> m40_145  [color=darkseagreen4, key=1, label=index, style=dashed];
m40_145 -> m40_145  [color=darkseagreen4, key=1, label=index, style=dashed];
m40_131 -> m40_133  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
m40_131 -> m40_134  [color=darkseagreen4, key=1, label="System.Func<T, bool>", style=dashed];
m40_132 -> m40_135  [color=darkseagreen4, key=1, label=index, style=dashed];
m40_132 -> m40_136  [color=darkseagreen4, key=1, label=index, style=dashed];
m40_136 -> m40_136  [color=darkseagreen4, key=1, label=index, style=dashed];
m40_74 -> m40_77  [color=darkseagreen4, key=1, label=object, style=dashed];
m40_74 -> m40_91  [color=darkseagreen4, key=1, label=object, style=dashed];
m40_74 -> m40_81  [color=darkseagreen4, key=1, label=object, style=dashed];
m40_74 -> m40_82  [color=darkseagreen4, key=1, label=object, style=dashed];
m40_74 -> m40_83  [color=darkseagreen4, key=1, label=object, style=dashed];
m40_74 -> m40_84  [color=darkseagreen4, key=1, label=object, style=dashed];
m40_78 -> m40_81  [color=darkseagreen4, key=1, label=dictionaryKeyType, style=dashed];
m40_79 -> m40_81  [color=darkseagreen4, key=1, label=dictionaryValueType, style=dashed];
m40_124 -> m40_126  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
m40_124 -> m40_127  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<T>", style=dashed];
m40_125 -> m40_129  [color=darkseagreen4, key=1, label=allAdded, style=dashed];
m40_128 -> m40_129  [color=darkseagreen4, key=1, label=allAdded, style=dashed];
m40_26 -> m40_29  [color=darkseagreen4, key=1, label="System.Collections.IEnumerable", style=dashed];
m40_16 -> m40_19  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
m40_16 -> m40_21  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
m40_16 -> m40_22  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<T>", style=dashed];
m40_11 -> m40_13  [color=darkseagreen4, key=1, label="System.Collections.Generic.ICollection<T>", style=dashed];
m40_33 -> m40_35  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m40_206 -> m40_70  [color=darkseagreen4, key=1, label=object, style=dashed];
m40_208 -> m40_91  [color=darkseagreen4, key=1, label=object, style=dashed];
m41_12 -> m41_14  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m41_12 -> m41_15  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m41_19 -> m41_1  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m41_19 -> m41_3  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m41_19 -> m41_6  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m41_19 -> m41_10  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m41_19 -> m41_13  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m41_19 -> m41_14  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m41_19 -> m41_15  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m42_11 -> m42_30  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JEnumerable<T>", style=dashed];
m42_17 -> m42_19  [color=darkseagreen4, key=1, label=object, style=dashed];
m42_19 -> m42_31  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JEnumerable<T>", style=dashed];
m42_2 -> m42_28  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JEnumerable<T>", style=dashed];
m42_29 -> m42_7  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JEnumerable<T>", style=dashed];
m42_29 -> m42_11  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JEnumerable<T>", style=dashed];
m42_29 -> m42_14  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JEnumerable<T>", style=dashed];
m42_29 -> m42_19  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JEnumerable<T>", style=dashed];
m42_29 -> m42_23  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JEnumerable<T>", style=dashed];
m42_29 -> m42_25  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JEnumerable<T>", style=dashed];
m42_30 -> m42_12  [color=darkseagreen4, key=1, label="ref Newtonsoft.Json.Linq.JEnumerable<T>", style=dashed];
m42_31 -> m42_21  [color=darkseagreen4, key=1, label="ref Newtonsoft.Json.Linq.JEnumerable<T>", style=dashed];
m43_374 -> m43_377  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_374 -> m43_378  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_374 -> m43_379  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_374 -> m43_380  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_374 -> m43_382  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_374 -> m43_383  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_903 -> m43_906  [color=darkseagreen4, key=1, label=data, style=dashed];
m43_254 -> m43_257  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_254 -> m43_258  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_156 -> m43_159  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_156 -> m43_160  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_156 -> m43_161  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_156 -> m43_162  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_156 -> m43_163  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_156 -> m43_164  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_156 -> m43_166  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_156 -> m43_167  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_156 -> m43_170  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_156 -> m43_171  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_309 -> m43_312  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_309 -> m43_313  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_349 -> m43_352  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_349 -> m43_353  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_349 -> m43_354  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_349 -> m43_355  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_349 -> m43_356  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_349 -> m43_357  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_349 -> m43_359  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_349 -> m43_360  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_349 -> m43_363  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_349 -> m43_364  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_16 -> m43_18  [color=darkseagreen4, key=1, label=schema, style=dashed];
m43_14 -> m43_18  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_14 -> m43_19  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_14 -> m43_20  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_14 -> m43_21  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_14 -> m43_22  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_14 -> m43_23  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_14 -> m43_24  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_14 -> m43_25  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_14 -> m43_26  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_14 -> m43_27  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_14 -> m43_28  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_14 -> m43_29  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_14 -> m43_30  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_14 -> m43_31  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_14 -> m43_32  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_14 -> m43_33  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_14 -> m43_34  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_14 -> m43_35  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_14 -> m43_36  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_14 -> m43_37  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_14 -> m43_38  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_14 -> m43_39  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_14 -> m43_40  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_14 -> m43_41  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_14 -> m43_42  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_14 -> m43_43  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_14 -> m43_44  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_14 -> m43_45  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_14 -> m43_46  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_14 -> m43_47  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_14 -> m43_48  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_14 -> m43_49  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_14 -> m43_50  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_14 -> m43_51  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_14 -> m43_52  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_14 -> m43_53  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_14 -> m43_54  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_14 -> m43_55  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_14 -> m43_56  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_14 -> m43_57  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_14 -> m43_58  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_125 -> m43_128  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_125 -> m43_129  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_668 -> m43_683  [color=darkseagreen4, key=1, label=errors, style=dashed];
m43_668 -> m43_676  [color=darkseagreen4, key=1, label=errors, style=dashed];
m43_668 -> m43_677  [color=darkseagreen4, key=1, label=errors, style=dashed];
m43_671 -> m43_674  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_671 -> m43_675  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_950 -> m43_952  [color=darkseagreen4, key=1, label=values, style=dashed];
m43_950 -> m43_953  [color=darkseagreen4, key=1, label=values, style=dashed];
m43_950 -> m43_954  [color=darkseagreen4, key=1, label=values, style=dashed];
m43_529 -> m43_532  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_529 -> m43_533  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_529 -> m43_534  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_529 -> m43_535  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_529 -> m43_536  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_529 -> m43_537  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_939 -> m43_941  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m43_743 -> m43_755  [color=darkseagreen4, key=1, label=errors, style=dashed];
m43_743 -> m43_751  [color=darkseagreen4, key=1, label=errors, style=dashed];
m43_743 -> m43_752  [color=darkseagreen4, key=1, label=errors, style=dashed];
m43_744 -> m43_747  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_744 -> m43_748  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_744 -> m43_749  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_744 -> m43_750  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_745 -> m43_755  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.ValidationEventArgs", style=dashed];
m43_633 -> m43_636  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_633 -> m43_637  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_633 -> m43_638  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_633 -> m43_639  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_633 -> m43_640  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_633 -> m43_641  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_633 -> m43_642  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_633 -> m43_643  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_633 -> m43_645  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_633 -> m43_646  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_633 -> m43_647  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_633 -> m43_648  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_633 -> m43_649  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_633 -> m43_650  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_633 -> m43_652  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_633 -> m43_653  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_633 -> m43_654  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_633 -> m43_655  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_633 -> m43_656  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_633 -> m43_657  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_633 -> m43_659  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_633 -> m43_660  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_432 -> m43_436  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m43_181 -> m43_184  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_181 -> m43_185  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_324 -> m43_327  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_324 -> m43_328  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_324 -> m43_329  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_324 -> m43_330  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_324 -> m43_331  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_324 -> m43_332  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_324 -> m43_334  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_324 -> m43_335  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_324 -> m43_338  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_324 -> m43_339  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_504 -> m43_507  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_504 -> m43_508  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_504 -> m43_509  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_504 -> m43_510  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_504 -> m43_511  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_504 -> m43_512  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_504 -> m43_513  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_504 -> m43_514  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_504 -> m43_515  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_504 -> m43_516  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_504 -> m43_517  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_504 -> m43_518  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_786 -> m43_789  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_786 -> m43_790  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_786 -> m43_791  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_786 -> m43_792  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_786 -> m43_794  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_786 -> m43_795  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_786 -> m43_796  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_786 -> m43_797  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_786 -> m43_799  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_786 -> m43_800  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_786 -> m43_801  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_786 -> m43_802  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_786 -> m43_804  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_786 -> m43_805  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_786 -> m43_807  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_786 -> m43_808  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_786 -> m43_810  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_786 -> m43_811  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_786 -> m43_812  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_786 -> m43_813  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_786 -> m43_814  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_213 -> m43_216  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_213 -> m43_217  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_294 -> m43_297  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_294 -> m43_298  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_829 -> m43_832  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_829 -> m43_833  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_829 -> m43_834  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_829 -> m43_835  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_829 -> m43_836  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_829 -> m43_838  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_829 -> m43_839  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_829 -> m43_840  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_829 -> m43_841  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_829 -> m43_842  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_829 -> m43_843  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_829 -> m43_844  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_829 -> m43_845  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_829 -> m43_846  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_829 -> m43_849  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_829 -> m43_850  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_829 -> m43_851  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_829 -> m43_853  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_829 -> m43_854  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_829 -> m43_856  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_829 -> m43_857  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_829 -> m43_858  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_829 -> m43_860  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_829 -> m43_861  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_829 -> m43_862  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_829 -> m43_867  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_829 -> m43_868  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_829 -> m43_869  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_829 -> m43_871  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_829 -> m43_872  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_829 -> m43_873  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_829 -> m43_876  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_829 -> m43_877  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_829 -> m43_878  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_829 -> m43_879  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_829 -> m43_880  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_828 -> m43_885  [color=darkseagreen4, key=1, label=errors, style=dashed];
m43_828 -> m43_847  [color=darkseagreen4, key=1, label=errors, style=dashed];
m43_828 -> m43_848  [color=darkseagreen4, key=1, label=errors, style=dashed];
m43_828 -> m43_852  [color=darkseagreen4, key=1, label=errors, style=dashed];
m43_828 -> m43_855  [color=darkseagreen4, key=1, label=errors, style=dashed];
m43_828 -> m43_859  [color=darkseagreen4, key=1, label=errors, style=dashed];
m43_828 -> m43_863  [color=darkseagreen4, key=1, label=errors, style=dashed];
m43_828 -> m43_864  [color=darkseagreen4, key=1, label=errors, style=dashed];
m43_828 -> m43_865  [color=darkseagreen4, key=1, label=errors, style=dashed];
m43_828 -> m43_866  [color=darkseagreen4, key=1, label=errors, style=dashed];
m43_828 -> m43_870  [color=darkseagreen4, key=1, label=errors, style=dashed];
m43_828 -> m43_874  [color=darkseagreen4, key=1, label=errors, style=dashed];
m43_828 -> m43_875  [color=darkseagreen4, key=1, label=errors, style=dashed];
m43_962 -> m43_965  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_962 -> m43_966  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_962 -> m43_967  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_962 -> m43_968  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_962 -> m43_970  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_962 -> m43_971  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_962 -> m43_973  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_962 -> m43_974  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_610 -> m43_613  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_610 -> m43_614  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_610 -> m43_615  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_610 -> m43_616  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_610 -> m43_617  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_610 -> m43_618  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_610 -> m43_619  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_610 -> m43_620  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_610 -> m43_622  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_610 -> m43_623  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_443 -> m43_446  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_443 -> m43_447  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_443 -> m43_448  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_443 -> m43_449  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_443 -> m43_450  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_443 -> m43_451  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_74 -> m43_77  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_74 -> m43_78  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_74 -> m43_79  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_74 -> m43_80  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_74 -> m43_81  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_74 -> m43_82  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_74 -> m43_83  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_74 -> m43_84  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_74 -> m43_85  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_74 -> m43_86  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_74 -> m43_87  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_74 -> m43_88  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_74 -> m43_89  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_74 -> m43_90  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_74 -> m43_91  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_74 -> m43_92  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_74 -> m43_93  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_74 -> m43_94  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_74 -> m43_95  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_74 -> m43_96  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_74 -> m43_97  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_74 -> m43_98  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_74 -> m43_99  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_74 -> m43_100  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_74 -> m43_101  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_74 -> m43_102  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_74 -> m43_103  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_74 -> m43_104  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_74 -> m43_105  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_74 -> m43_106  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_74 -> m43_107  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_74 -> m43_108  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_74 -> m43_109  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_74 -> m43_110  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_74 -> m43_111  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_74 -> m43_112  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_74 -> m43_113  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_74 -> m43_114  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_74 -> m43_115  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_412 -> m43_415  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_412 -> m43_416  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_412 -> m43_417  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_412 -> m43_418  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_412 -> m43_422  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_412 -> m43_423  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_229 -> m43_237  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m43_229 -> m43_231  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_229 -> m43_232  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_197 -> m43_200  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_197 -> m43_201  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_585 -> m43_588  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_585 -> m43_589  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_585 -> m43_590  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_585 -> m43_591  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_585 -> m43_592  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_585 -> m43_593  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_585 -> m43_594  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_585 -> m43_595  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_585 -> m43_597  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_585 -> m43_598  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_141 -> m43_144  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_141 -> m43_145  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_548 -> m43_551  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_548 -> m43_552  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_922 -> m43_925  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m43_241 -> m43_244  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m43_761 -> m43_764  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_761 -> m43_765  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_761 -> m43_766  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_761 -> m43_767  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_761 -> m43_769  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_761 -> m43_770  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_761 -> m43_772  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_761 -> m43_773  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_761 -> m43_775  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_761 -> m43_776  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_761 -> m43_777  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_392 -> m43_395  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_392 -> m43_396  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_392 -> m43_397  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_392 -> m43_398  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_392 -> m43_401  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_392 -> m43_402  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_699 -> m43_702  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_699 -> m43_703  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_699 -> m43_704  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_699 -> m43_705  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_699 -> m43_706  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_699 -> m43_708  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_699 -> m43_709  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_699 -> m43_710  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_699 -> m43_712  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_699 -> m43_713  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_699 -> m43_714  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_699 -> m43_716  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_699 -> m43_717  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_699 -> m43_718  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_699 -> m43_720  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_699 -> m43_721  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_699 -> m43_722  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_699 -> m43_724  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_699 -> m43_725  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_699 -> m43_726  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_699 -> m43_727  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_699 -> m43_728  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_699 -> m43_729  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_699 -> m43_731  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_699 -> m43_732  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_699 -> m43_733  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_699 -> m43_734  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_699 -> m43_735  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_699 -> m43_736  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_890 -> m43_898  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_890 -> m43_895  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_891 -> m43_894  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_892 -> m43_898  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.ValidationEventArgs", style=dashed];
m43_481 -> m43_484  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_481 -> m43_485  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_481 -> m43_486  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_481 -> m43_487  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_481 -> m43_489  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_481 -> m43_490  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_481 -> m43_493  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_481 -> m43_494  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_2 -> m43_4  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_563 -> m43_566  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_563 -> m43_567  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_563 -> m43_568  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_563 -> m43_569  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_563 -> m43_571  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_563 -> m43_572  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_563 -> m43_574  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_563 -> m43_575  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_68 -> m43_59  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_119 -> m43_116  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_135 -> m43_130  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_135 -> m43_131  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_150 -> m43_146  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_150 -> m43_147  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_175 -> m43_165  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_175 -> m43_168  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_175 -> m43_169  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_175 -> m43_172  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_191 -> m43_186  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_191 -> m43_187  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_191 -> m43_188  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_207 -> m43_202  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_207 -> m43_203  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_207 -> m43_204  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_223 -> m43_218  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_223 -> m43_219  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_223 -> m43_220  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_246 -> m43_248  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_263 -> m43_259  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_263 -> m43_260  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_288 -> m43_278  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_288 -> m43_281  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_288 -> m43_282  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_288 -> m43_285  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_303 -> m43_299  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_303 -> m43_300  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_318 -> m43_314  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_318 -> m43_315  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_343 -> m43_333  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_343 -> m43_336  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_343 -> m43_337  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_343 -> m43_340  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_368 -> m43_358  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_368 -> m43_361  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_368 -> m43_362  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_368 -> m43_365  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_386 -> m43_381  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_406 -> m43_399  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_406 -> m43_400  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_406 -> m43_403  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_426 -> m43_419  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_426 -> m43_420  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_426 -> m43_421  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_455 -> m43_452  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_475 -> m43_468  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_475 -> m43_469  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_475 -> m43_472  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_498 -> m43_488  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_498 -> m43_491  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_498 -> m43_492  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_498 -> m43_495  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_523 -> m43_519  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_523 -> m43_520  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_542 -> m43_538  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_542 -> m43_539  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_557 -> m43_553  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_557 -> m43_554  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_579 -> m43_570  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_579 -> m43_573  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_579 -> m43_576  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_604 -> m43_596  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_604 -> m43_599  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_604 -> m43_600  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_604 -> m43_601  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_627 -> m43_621  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_627 -> m43_624  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_664 -> m43_644  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_664 -> m43_651  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_664 -> m43_658  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_664 -> m43_661  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_682 -> m43_678  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_682 -> m43_684  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_739 -> m43_707  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_739 -> m43_711  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_739 -> m43_715  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_739 -> m43_719  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_739 -> m43_723  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_739 -> m43_730  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_780 -> m43_768  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_780 -> m43_771  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_780 -> m43_774  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_817 -> m43_793  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_817 -> m43_798  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_817 -> m43_803  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_817 -> m43_806  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_817 -> m43_809  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_884 -> m43_837  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_884 -> m43_886  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_980 -> m43_969  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_980 -> m43_972  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_980 -> m43_975  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_980 -> m43_976  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_1002 -> m43_993  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_1002 -> m43_996  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_1002 -> m43_999  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m43_269 -> m43_272  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_269 -> m43_273  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_269 -> m43_274  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_269 -> m43_275  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_269 -> m43_276  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_269 -> m43_277  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_269 -> m43_279  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_269 -> m43_280  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_269 -> m43_283  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_269 -> m43_284  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_986 -> m43_989  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_986 -> m43_990  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_986 -> m43_991  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_986 -> m43_992  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_986 -> m43_994  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_986 -> m43_995  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_986 -> m43_997  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_986 -> m43_998  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_461 -> m43_464  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_461 -> m43_465  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_461 -> m43_466  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_461 -> m43_467  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_461 -> m43_470  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_461 -> m43_471  [color=darkseagreen4, key=1, label=reader, style=dashed];
m43_1004 -> m43_683  [color=darkseagreen4, key=1, label=errors, style=dashed];
m43_1006 -> m43_755  [color=darkseagreen4, key=1, label=errors, style=dashed];
m43_1007 -> m43_885  [color=darkseagreen4, key=1, label=errors, style=dashed];
m43_1008 -> m43_898  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m44_444 -> m44_449  [color=green, key=1, label=reader, style=dashed];
m44_444 -> m44_446  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_444 -> m44_447  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_444 -> m44_448  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_444 -> m44_450  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_444 -> m44_451  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_444 -> m44_452  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_444 -> m44_453  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_444 -> m44_454  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_444 -> m44_455  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_212 -> m44_214  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>[]", style=dashed];
m44_212 -> m44_215  [color=green, key=1, label="lambda expression", style=dashed];
m44_212 -> m44_216  [color=darkseagreen4, key=1, label=int, style=dashed];
m44_212 -> m44_219  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>[]", style=dashed];
m44_212 -> m44_223  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>[]", style=dashed];
m44_217 -> m44_221  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_217 -> m44_222  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_217 -> m44_220  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_217 -> m44_223  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_221 -> m44_223  [color=darkseagreen4, key=1, label=index, style=dashed];
m44_221 -> m44_224  [color=darkseagreen4, key=1, label=index, style=dashed];
m44_224 -> m44_224  [color=darkseagreen4, key=1, label=index, style=dashed];
m44_210 -> m44_210  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>", style=dashed];
m44_139 -> m44_141  [color=darkseagreen4, key=1, label=token, style=dashed];
m44_139 -> m44_142  [color=darkseagreen4, key=1, label=token, style=dashed];
m44_303 -> m44_305  [color=darkseagreen4, key=1, label="out object", style=dashed];
m44_287 -> m44_289  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_287 -> m44_291  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_287 -> m44_293  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_287 -> m44_294  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_287 -> m44_295  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_287 -> m44_290  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_287 -> m44_292  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_120 -> m44_129  [color=green, key=1, label=lineInfo, style=dashed];
m44_120 -> m44_122  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m44_120 -> m44_123  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m44_120 -> m44_124  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m44_120 -> m44_128  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m44_120 -> m44_130  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m44_120 -> m44_135  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m44_120 -> m44_136  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m44_120 -> m44_137  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m44_120 -> m44_142  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m44_120 -> m44_143  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m44_120 -> m44_144  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m44_120 -> m44_149  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m44_120 -> m44_150  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m44_120 -> m44_151  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m44_120 -> m44_155  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m44_120 -> m44_156  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m44_120 -> m44_157  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m44_120 -> m44_163  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m44_120 -> m44_164  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m44_120 -> m44_169  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m44_120 -> m44_170  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m44_120 -> m44_171  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m44_120 -> m44_175  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m44_120 -> m44_176  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m44_120 -> m44_177  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m44_120 -> m44_181  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m44_120 -> m44_182  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m44_120 -> m44_183  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m44_119 -> m44_121  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_119 -> m44_125  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_119 -> m44_131  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_119 -> m44_132  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_119 -> m44_133  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_119 -> m44_134  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_119 -> m44_138  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_119 -> m44_139  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_119 -> m44_140  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_119 -> m44_141  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_119 -> m44_145  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_119 -> m44_146  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_119 -> m44_148  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_119 -> m44_152  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_119 -> m44_153  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_119 -> m44_154  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_119 -> m44_158  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_119 -> m44_159  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_119 -> m44_160  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_119 -> m44_161  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_119 -> m44_165  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_119 -> m44_166  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_119 -> m44_167  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_119 -> m44_168  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_119 -> m44_172  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_119 -> m44_174  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_119 -> m44_178  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_119 -> m44_179  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_119 -> m44_180  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_119 -> m44_185  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_119 -> m44_186  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_119 -> m44_187  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_119 -> m44_188  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_119 -> m44_189  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_119 -> m44_190  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_150 -> m44_150  [color=darkseagreen4, key=1, label=i, style=dashed];
m44_162 -> m44_164  [color=darkseagreen4, key=1, label=property, style=dashed];
m44_127 -> m44_130  [color=darkseagreen4, key=1, label=o, style=dashed];
m44_145 -> m44_149  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m44_145 -> m44_151  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m44_184 -> m44_187  [color=darkseagreen4, key=1, label=property, style=dashed];
m44_147 -> m44_149  [color=darkseagreen4, key=1, label=i, style=dashed];
m44_147 -> m44_150  [color=darkseagreen4, key=1, label=i, style=dashed];
m44_118 -> m44_131  [color=darkseagreen4, key=1, label=o, style=dashed];
m44_118 -> m44_138  [color=darkseagreen4, key=1, label=o, style=dashed];
m44_118 -> m44_145  [color=darkseagreen4, key=1, label=o, style=dashed];
m44_118 -> m44_152  [color=darkseagreen4, key=1, label=o, style=dashed];
m44_118 -> m44_158  [color=darkseagreen4, key=1, label=o, style=dashed];
m44_118 -> m44_165  [color=darkseagreen4, key=1, label=o, style=dashed];
m44_118 -> m44_172  [color=darkseagreen4, key=1, label=o, style=dashed];
m44_118 -> m44_178  [color=darkseagreen4, key=1, label=o, style=dashed];
m44_126 -> m44_128  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_126 -> m44_129  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_159 -> m44_165  [color=darkseagreen4, key=1, label="System.StringComparison", style=dashed];
m44_159 -> m44_167  [color=darkseagreen4, key=1, label=string, style=dashed];
m44_166 -> m44_168  [color=darkseagreen4, key=1, label=p, style=dashed];
m44_173 -> m44_175  [color=darkseagreen4, key=1, label="out Newtonsoft.Json.Linq.JToken", style=dashed];
m44_413 -> m44_416  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_413 -> m44_418  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_413 -> m44_420  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_413 -> m44_422  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_413 -> m44_424  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_413 -> m44_415  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_413 -> m44_417  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_413 -> m44_419  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_413 -> m44_421  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_413 -> m44_423  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_1 -> m44_8  [color=darkseagreen4, key=1, label=json, style=dashed];
m44_103 -> m44_107  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m44_103 -> m44_108  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m44_103 -> m44_109  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m44_103 -> m44_110  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m44_103 -> m44_112  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m44_103 -> m44_113  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m44_106 -> m44_110  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_106 -> m44_112  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_106 -> m44_113  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_106 -> m44_114  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_106 -> m44_109  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_106 -> m44_111  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_111 -> m44_113  [color=darkseagreen4, key=1, label=o, style=dashed];
m44_111 -> m44_114  [color=darkseagreen4, key=1, label=o, style=dashed];
m44_306 -> m44_309  [color=darkseagreen4, key=1, label=object, style=dashed];
m44_306 -> m44_310  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JObject", style=dashed];
m44_307 -> m44_310  [color=darkseagreen4, key=1, label=v, style=dashed];
m44_278 -> m44_280  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m44_300 -> m44_304  [color=darkseagreen4, key=1, label=o, style=dashed];
m44_300 -> m44_307  [color=darkseagreen4, key=1, label=o, style=dashed];
m44_300 -> m44_309  [color=darkseagreen4, key=1, label=o, style=dashed];
m44_301 -> m44_304  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_301 -> m44_307  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_301 -> m44_309  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_301 -> m44_303  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_301 -> m44_306  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_301 -> m44_310  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_301 -> m44_311  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_301 -> m44_312  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_301 -> m44_305  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_301 -> m44_308  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_63 -> m44_66  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JProperty", style=dashed];
m44_63 -> m44_68  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JProperty", style=dashed];
m44_45 -> m44_56  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonMergeSettings", style=dashed];
m44_45 -> m44_58  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonMergeSettings", style=dashed];
m44_46 -> m44_49  [color=darkseagreen4, key=1, label=o, style=dashed];
m44_56 -> m44_56  [color=darkseagreen4, key=1, label=contentItem, style=dashed];
m44_58 -> m44_58  [color=darkseagreen4, key=1, label=contentItem, style=dashed];
m44_50 -> m44_50  [color=darkseagreen4, key=1, label=contentItem, style=dashed];
m44_50 -> m44_53  [color=darkseagreen4, key=1, label=contentItem, style=dashed];
m44_50 -> m44_54  [color=darkseagreen4, key=1, label=existingProperty, style=dashed];
m44_50 -> m44_57  [color=darkseagreen4, key=1, label=existingProperty, style=dashed];
m44_52 -> m44_54  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_52 -> m44_55  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_52 -> m44_57  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_52 -> m44_58  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_52 -> m44_60  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_52 -> m44_56  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_52 -> m44_59  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_53 -> m44_53  [color=darkseagreen4, key=1, label=contentItem, style=dashed];
m44_53 -> m44_55  [color=darkseagreen4, key=1, label=contentItem, style=dashed];
m44_54 -> m44_58  [color=darkseagreen4, key=1, label=existingContainer, style=dashed];
m44_57 -> m44_57  [color=darkseagreen4, key=1, label=contentItem, style=dashed];
m44_55 -> m44_55  [color=darkseagreen4, key=1, label=contentItem, style=dashed];
m44_21 -> m44_24  [color=darkseagreen4, key=1, label=int, style=dashed];
m44_2 -> m44_6  [color=green, key=1, label="lambda expression", style=dashed];
m44_277 -> m44_279  [color=darkseagreen4, key=1, label=o, style=dashed];
m44_280 -> m44_282  [color=darkseagreen4, key=1, label=c, style=dashed];
m44_84 -> m44_86  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_315 -> m44_317  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_323 -> m44_325  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_320 -> m44_14  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JObject", style=dashed];
m44_320 -> m44_18  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JObject", style=dashed];
m44_320 -> m44_24  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JObject", style=dashed];
m44_320 -> m44_30  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JObject", style=dashed];
m44_320 -> m44_36  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JObject", style=dashed];
m44_320 -> m44_37  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JObject", style=dashed];
m44_320 -> m44_50  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JObject", style=dashed];
m44_320 -> m44_64  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JObject", style=dashed];
m44_320 -> m44_65  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JObject", style=dashed];
m44_320 -> m44_66  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JObject", style=dashed];
m44_320 -> m44_67  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JObject", style=dashed];
m44_320 -> m44_68  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JObject", style=dashed];
m44_320 -> m44_76  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JObject", style=dashed];
m44_320 -> m44_80  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JObject", style=dashed];
m44_320 -> m44_83  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JObject", style=dashed];
m44_320 -> m44_89  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JObject", style=dashed];
m44_320 -> m44_93  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JObject", style=dashed];
m44_320 -> m44_148  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JObject", style=dashed];
m44_320 -> m44_149  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JObject", style=dashed];
m44_320 -> m44_157  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JObject", style=dashed];
m44_320 -> m44_166  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JObject", style=dashed];
m44_320 -> m44_176  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JObject", style=dashed];
m44_320 -> m44_180  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JObject", style=dashed];
m44_320 -> m44_192  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JObject", style=dashed];
m44_320 -> m44_200  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JObject", style=dashed];
m44_320 -> m44_203  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JObject", style=dashed];
m44_320 -> m44_207  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JObject", style=dashed];
m44_320 -> m44_219  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JObject", style=dashed];
m44_320 -> m44_222  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JObject", style=dashed];
m44_320 -> m44_230  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JObject", style=dashed];
m44_320 -> m44_232  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JObject", style=dashed];
m44_320 -> m44_238  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JObject", style=dashed];
m44_320 -> m44_242  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JObject", style=dashed];
m44_320 -> m44_245  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JObject", style=dashed];
m44_320 -> m44_259  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JObject", style=dashed];
m44_320 -> m44_298  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JObject", style=dashed];
m44_318 -> m44_323  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_318 -> m44_320  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_318 -> m44_322  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_318 -> m44_321  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_318 -> m44_326  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_363 -> m44_365  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_358 -> m44_363  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_358 -> m44_360  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_358 -> m44_362  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_358 -> m44_361  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_358 -> m44_366  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_16 -> m44_19  [color=green, key=1, label=lineInfo, style=dashed];
m44_16 -> m44_23  [color=green, key=1, label=lineInfo, style=dashed];
m44_16 -> m44_27  [color=green, key=1, label=lineInfo, style=dashed];
m44_16 -> m44_28  [color=green, key=1, label=lineInfo, style=dashed];
m44_16 -> m44_29  [color=green, key=1, label=lineInfo, style=dashed];
m44_15 -> m44_17  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_15 -> m44_18  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_15 -> m44_20  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_15 -> m44_21  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_15 -> m44_22  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_15 -> m44_24  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_15 -> m44_25  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_15 -> m44_26  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_15 -> m44_30  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_15 -> m44_32  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_15 -> m44_34  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_15 -> m44_35  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_15 -> m44_36  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_15 -> m44_37  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_15 -> m44_38  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_15 -> m44_39  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_15 -> m44_40  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_15 -> m44_41  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_15 -> m44_42  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_15 -> m44_43  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_15 -> m44_44  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_15 -> m44_45  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_15 -> m44_46  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_15 -> m44_47  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_15 -> m44_48  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_15 -> m44_49  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_15 -> m44_50  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_15 -> m44_51  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_27 -> m44_29  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m44_27 -> m44_30  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m44_27 -> m44_32  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m44_31 -> m44_34  [color=darkseagreen4, key=1, label=newProperty, style=dashed];
m44_31 -> m44_36  [color=darkseagreen4, key=1, label=newProperty, style=dashed];
m44_31 -> m44_37  [color=darkseagreen4, key=1, label=newProperty, style=dashed];
m44_60 -> m44_89  [color=darkseagreen4, key=1, label=string, style=dashed];
m44_376 -> m44_378  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_371 -> m44_376  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_371 -> m44_373  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_371 -> m44_375  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_371 -> m44_374  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_371 -> m44_379  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_232 -> m44_232  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>", style=dashed];
m44_229 -> m44_232  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>", style=dashed];
m44_260 -> m44_260  [color=darkseagreen4, key=1, label=propertyValue, style=dashed];
m44_264 -> m44_267  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m44_263 -> m44_266  [color=darkseagreen4, key=1, label=o, style=dashed];
m44_267 -> m44_269  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m44_11 -> m44_14  [color=darkseagreen4, key=1, label=t, style=dashed];
m44_428 -> m44_431  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_428 -> m44_433  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_428 -> m44_435  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_428 -> m44_437  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_428 -> m44_439  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_428 -> m44_430  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_428 -> m44_432  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_428 -> m44_434  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_428 -> m44_436  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_428 -> m44_438  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_207 -> m44_207  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>", style=dashed];
m44_207 -> m44_210  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>", style=dashed];
m44_396 -> m44_399  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_396 -> m44_401  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_396 -> m44_403  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_396 -> m44_405  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_396 -> m44_407  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_396 -> m44_398  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_396 -> m44_400  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_396 -> m44_402  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_396 -> m44_404  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_396 -> m44_406  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_79 -> m44_84  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_79 -> m44_81  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_79 -> m44_83  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_79 -> m44_82  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_79 -> m44_87  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_192 -> m44_196  [color=darkseagreen4, key=1, label=property, style=dashed];
m44_193 -> m44_202  [color=darkseagreen4, key=1, label=data, style=dashed];
m44_196 -> m44_198  [color=darkseagreen4, key=1, label="out Newtonsoft.Json.Linq.JToken", style=dashed];
m44_195 -> m44_197  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_195 -> m44_199  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_195 -> m44_200  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_195 -> m44_204  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_195 -> m44_206  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_195 -> m44_201  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_195 -> m44_203  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_195 -> m44_205  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m44_200 -> m44_200  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>", style=dashed];
m44_384 -> m44_386  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_384 -> m44_388  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_384 -> m44_390  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_384 -> m44_391  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_384 -> m44_392  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_384 -> m44_387  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_384 -> m44_389  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_98 -> m44_100  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_258 -> m44_260  [color=darkseagreen4, key=1, label=descriptors, style=dashed];
m44_258 -> m44_261  [color=darkseagreen4, key=1, label=descriptors, style=dashed];
m44_93 -> m44_98  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_93 -> m44_95  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_93 -> m44_97  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_93 -> m44_96  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_93 -> m44_101  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_345 -> m44_347  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_345 -> m44_349  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_345 -> m44_351  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_345 -> m44_352  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_345 -> m44_353  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_345 -> m44_348  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_345 -> m44_350  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_337 -> m44_339  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_332 -> m44_337  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_332 -> m44_334  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_332 -> m44_336  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_332 -> m44_335  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_332 -> m44_340  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_457 -> m44_8  [color=darkseagreen4, key=1, label=json, style=dashed];
m44_458 -> m44_87  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_459 -> m44_101  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_460 -> m44_326  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_461 -> m44_340  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_462 -> m44_366  [color=darkseagreen4, key=1, label=reader, style=dashed];
m44_463 -> m44_379  [color=darkseagreen4, key=1, label=reader, style=dashed];
m45_8 -> m45_10  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m45_21 -> m45_30  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m45_21 -> m45_23  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m45_21 -> m45_24  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m45_21 -> m45_25  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m45_21 -> m45_26  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m45_21 -> m45_27  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m45_21 -> m45_29  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m45_28 -> m45_30  [color=darkseagreen4, key=1, label=p, style=dashed];
m45_28 -> m45_31  [color=darkseagreen4, key=1, label=p, style=dashed];
m45_23 -> m45_2  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeExtensionData.DirectoryAccount", style=dashed];
m45_23 -> m45_3  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeExtensionData.DirectoryAccount", style=dashed];
m45_23 -> m45_7  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeExtensionData.DirectoryAccount", style=dashed];
m45_0 -> m45_3  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m45_0 -> m45_4  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m45_1 -> m45_3  [color=darkseagreen4, key=1, label=samAccountName, style=dashed];
m45_1 -> m45_4  [color=green, key=1, label=task, style=dashed];
m45_12 -> m45_14  [color=darkseagreen4, key=1, label=account, style=dashed];
m45_12 -> m45_15  [color=darkseagreen4, key=1, label=account, style=dashed];
m45_12 -> m45_16  [color=darkseagreen4, key=1, label=account, style=dashed];
m45_12 -> m45_17  [color=darkseagreen4, key=1, label=account, style=dashed];
m45_12 -> m45_18  [color=darkseagreen4, key=1, label=account, style=dashed];
m45_7 -> m45_14  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m45_41 -> m45_3  [color=green, key=1, label="Newtonsoft.Json.Linq.JProperty", style=dashed];
m45_41 -> m45_4  [color=green, key=1, label="Newtonsoft.Json.Linq.JProperty", style=dashed];
m45_41 -> m45_10  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JProperty", style=dashed];
m47_0 -> m47_3  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m47_1 -> m47_4  [color=darkseagreen4, key=1, label=sw, style=dashed];
m48_408 -> m48_411  [color=darkseagreen4, key=1, label=a, style=dashed];
m48_409 -> m48_411  [color=darkseagreen4, key=1, label=a2, style=dashed];
m48_435 -> m48_437  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m48_10 -> m48_12  [color=darkseagreen4, key=1, label=p, style=dashed];
m48_388 -> m48_390  [color=darkseagreen4, key=1, label=a, style=dashed];
m48_388 -> m48_391  [color=darkseagreen4, key=1, label=a, style=dashed];
m48_388 -> m48_392  [color=darkseagreen4, key=1, label=a, style=dashed];
m48_388 -> m48_393  [color=darkseagreen4, key=1, label=a, style=dashed];
m48_388 -> m48_394  [color=darkseagreen4, key=1, label=a, style=dashed];
m48_388 -> m48_395  [color=darkseagreen4, key=1, label=a, style=dashed];
m48_388 -> m48_396  [color=darkseagreen4, key=1, label=a, style=dashed];
m48_388 -> m48_397  [color=darkseagreen4, key=1, label=a, style=dashed];
m48_388 -> m48_398  [color=darkseagreen4, key=1, label=a, style=dashed];
m48_388 -> m48_399  [color=darkseagreen4, key=1, label=a, style=dashed];
m48_388 -> m48_400  [color=darkseagreen4, key=1, label=a, style=dashed];
m48_388 -> m48_401  [color=darkseagreen4, key=1, label=a, style=dashed];
m48_388 -> m48_402  [color=darkseagreen4, key=1, label=a, style=dashed];
m48_388 -> m48_403  [color=darkseagreen4, key=1, label=a, style=dashed];
m48_388 -> m48_404  [color=darkseagreen4, key=1, label=a, style=dashed];
m48_418 -> m48_421  [color=darkseagreen4, key=1, label=a, style=dashed];
m48_320 -> m48_323  [color=darkseagreen4, key=1, label=a, style=dashed];
m48_320 -> m48_324  [color=darkseagreen4, key=1, label=a, style=dashed];
m48_321 -> m48_325  [color=darkseagreen4, key=1, label=first, style=dashed];
m48_321 -> m48_326  [color=darkseagreen4, key=1, label=first, style=dashed];
m48_330 -> m48_333  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m48_107 -> m48_109  [color=green, key=1, label=a, style=dashed];
m48_212 -> m48_214  [color=darkseagreen4, key=1, label=a, style=dashed];
m48_212 -> m48_215  [color=darkseagreen4, key=1, label=a, style=dashed];
m48_376 -> m48_378  [color=darkseagreen4, key=1, label=a, style=dashed];
m48_376 -> m48_379  [color=darkseagreen4, key=1, label=a, style=dashed];
m48_376 -> m48_380  [color=darkseagreen4, key=1, label=a, style=dashed];
m48_376 -> m48_381  [color=darkseagreen4, key=1, label=a, style=dashed];
m48_376 -> m48_382  [color=darkseagreen4, key=1, label=a, style=dashed];
m48_376 -> m48_383  [color=darkseagreen4, key=1, label=a, style=dashed];
m48_376 -> m48_384  [color=darkseagreen4, key=1, label=a, style=dashed];
m48_6 -> m48_8  [color=darkseagreen4, key=1, label=changedProperties, style=dashed];
m48_20 -> m48_17  [color=darkseagreen4, key=1, label=o, style=dashed];
m48_1 -> m48_17  [color=darkseagreen4, key=1, label=o, style=dashed];
m48_3 -> m48_17  [color=darkseagreen4, key=1, label="System.ComponentModel.PropertyChangedEventArgs", style=dashed];
m48_7 -> m48_9  [color=darkseagreen4, key=1, label=reader, style=dashed];
m48_13 -> m48_15  [color=darkseagreen4, key=1, label=c, style=dashed];
m48_305 -> m48_307  [color=darkseagreen4, key=1, label=a, style=dashed];
m48_305 -> m48_308  [color=darkseagreen4, key=1, label=a, style=dashed];
m48_305 -> m48_309  [color=darkseagreen4, key=1, label=a, style=dashed];
m48_305 -> m48_310  [color=darkseagreen4, key=1, label=a, style=dashed];
m48_305 -> m48_311  [color=darkseagreen4, key=1, label=a, style=dashed];
m48_305 -> m48_312  [color=darkseagreen4, key=1, label=a, style=dashed];
m48_305 -> m48_313  [color=darkseagreen4, key=1, label=a, style=dashed];
m48_305 -> m48_314  [color=darkseagreen4, key=1, label=a, style=dashed];
m48_305 -> m48_315  [color=darkseagreen4, key=1, label=a, style=dashed];
m48_305 -> m48_316  [color=darkseagreen4, key=1, label=a, style=dashed];
m48_45 -> m48_47  [color=darkseagreen4, key=1, label=v, style=dashed];
m48_45 -> m48_48  [color=darkseagreen4, key=1, label=v, style=dashed];
m48_45 -> m48_50  [color=darkseagreen4, key=1, label=v, style=dashed];
m48_45 -> m48_51  [color=darkseagreen4, key=1, label=v, style=dashed];
m48_45 -> m48_52  [color=darkseagreen4, key=1, label=v, style=dashed];
m48_45 -> m48_53  [color=darkseagreen4, key=1, label=v, style=dashed];
m48_47 -> m48_50  [color=darkseagreen4, key=1, label=o, style=dashed];
m48_47 -> m48_53  [color=darkseagreen4, key=1, label=o, style=dashed];
m48_47 -> m48_54  [color=darkseagreen4, key=1, label=o, style=dashed];
m48_47 -> m48_56  [color=darkseagreen4, key=1, label=o, style=dashed];
m48_47 -> m48_57  [color=darkseagreen4, key=1, label=o, style=dashed];
m48_49 -> m48_52  [color=darkseagreen4, key=1, label=p, style=dashed];
m48_49 -> m48_51  [color=darkseagreen4, key=1, label=p, style=dashed];
m48_55 -> m48_60  [color=darkseagreen4, key=1, label=o1, style=dashed];
m48_55 -> m48_61  [color=darkseagreen4, key=1, label=o1, style=dashed];
m48_55 -> m48_62  [color=darkseagreen4, key=1, label=o1, style=dashed];
m48_55 -> m48_59  [color=darkseagreen4, key=1, label=o1, style=dashed];
m48_58 -> m48_60  [color=darkseagreen4, key=1, label=o2, style=dashed];
m48_58 -> m48_61  [color=darkseagreen4, key=1, label=o2, style=dashed];
m48_58 -> m48_62  [color=darkseagreen4, key=1, label=o2, style=dashed];
m48_273 -> m48_276  [color=darkseagreen4, key=1, label=descendants, style=dashed];
m48_273 -> m48_275  [color=darkseagreen4, key=1, label=descendants, style=dashed];
m48_273 -> m48_277  [color=darkseagreen4, key=1, label=descendants, style=dashed];
m48_273 -> m48_278  [color=darkseagreen4, key=1, label=descendants, style=dashed];
m48_273 -> m48_279  [color=darkseagreen4, key=1, label=descendants, style=dashed];
m48_283 -> m48_286  [color=darkseagreen4, key=1, label=a, style=dashed];
m48_283 -> m48_288  [color=darkseagreen4, key=1, label=a, style=dashed];
m48_283 -> m48_289  [color=darkseagreen4, key=1, label=a, style=dashed];
m48_283 -> m48_294  [color=darkseagreen4, key=1, label=a, style=dashed];
m48_283 -> m48_295  [color=darkseagreen4, key=1, label=a, style=dashed];
m48_284 -> m48_287  [color=darkseagreen4, key=1, label=writer, style=dashed];
m48_284 -> m48_290  [color=darkseagreen4, key=1, label=writer, style=dashed];
m48_284 -> m48_291  [color=darkseagreen4, key=1, label=writer, style=dashed];
m48_284 -> m48_292  [color=darkseagreen4, key=1, label=writer, style=dashed];
m48_284 -> m48_293  [color=darkseagreen4, key=1, label=writer, style=dashed];
m48_425 -> m48_427  [color=darkseagreen4, key=1, label=a, style=dashed];
m48_429 -> m48_431  [color=darkseagreen4, key=1, label=v1, style=dashed];
m48_204 -> m48_206  [color=darkseagreen4, key=1, label=emptyData, style=dashed];
m48_347 -> m48_349  [color=darkseagreen4, key=1, label=a, style=dashed];
m48_347 -> m48_350  [color=darkseagreen4, key=1, label=a, style=dashed];
m48_347 -> m48_351  [color=darkseagreen4, key=1, label=a, style=dashed];
m48_347 -> m48_352  [color=darkseagreen4, key=1, label=a, style=dashed];
m48_347 -> m48_353  [color=darkseagreen4, key=1, label=a, style=dashed];
m48_347 -> m48_354  [color=darkseagreen4, key=1, label=a, style=dashed];
m48_347 -> m48_355  [color=darkseagreen4, key=1, label=a, style=dashed];
m48_347 -> m48_356  [color=darkseagreen4, key=1, label=a, style=dashed];
m48_100 -> m48_102  [color=darkseagreen4, key=1, label=a, style=dashed];
m48_219 -> m48_221  [color=darkseagreen4, key=1, label=a, style=dashed];
m48_219 -> m48_222  [color=darkseagreen4, key=1, label=a, style=dashed];
m48_219 -> m48_223  [color=darkseagreen4, key=1, label=a, style=dashed];
m48_219 -> m48_224  [color=darkseagreen4, key=1, label=a, style=dashed];
m48_219 -> m48_225  [color=darkseagreen4, key=1, label=a, style=dashed];
m48_219 -> m48_228  [color=darkseagreen4, key=1, label=a, style=dashed];
m48_219 -> m48_234  [color=darkseagreen4, key=1, label=a, style=dashed];
m48_226 -> m48_229  [color=darkseagreen4, key=1, label=t, style=dashed];
m48_226 -> m48_230  [color=darkseagreen4, key=1, label=t, style=dashed];
m48_226 -> m48_231  [color=darkseagreen4, key=1, label=t, style=dashed];
m48_232 -> m48_235  [color=darkseagreen4, key=1, label=t, style=dashed];
m48_232 -> m48_236  [color=darkseagreen4, key=1, label=t, style=dashed];
m48_232 -> m48_237  [color=darkseagreen4, key=1, label=t, style=dashed];
m48_253 -> m48_255  [color=darkseagreen4, key=1, label=beforeTokens, style=dashed];
m48_253 -> m48_256  [color=darkseagreen4, key=1, label=beforeTokens, style=dashed];
m48_243 -> m48_245  [color=darkseagreen4, key=1, label=afterTokens, style=dashed];
m48_243 -> m48_246  [color=darkseagreen4, key=1, label=afterTokens, style=dashed];
m48_263 -> m48_267  [color=darkseagreen4, key=1, label=a, style=dashed];
m48_263 -> m48_268  [color=darkseagreen4, key=1, label=a, style=dashed];
m48_265 -> m48_267  [color=darkseagreen4, key=1, label=ancestors, style=dashed];
m48_265 -> m48_268  [color=darkseagreen4, key=1, label=ancestors, style=dashed];
m49_1 -> m49_3  [color=darkseagreen4, key=1, label=jsonContainerAttribute, style=dashed];
m54_0 -> m54_2  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonISerializableContract", style=dashed];
m54_15 -> m54_19  [color=darkseagreen4, key=1, label=object, style=dashed];
m54_15 -> m54_20  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m54_17 -> m54_20  [color=darkseagreen4, key=1, label=token, style=dashed];
m54_24 -> m54_26  [color=darkseagreen4, key=1, label=object, style=dashed];
m54_24 -> m54_28  [color=darkseagreen4, key=1, label=object, style=dashed];
m54_76 -> m54_20  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonFormatterConverter", style=dashed];
m54_76 -> m54_32  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonFormatterConverter", style=dashed];
m54_76 -> m54_35  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonFormatterConverter", style=dashed];
m54_76 -> m54_38  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonFormatterConverter", style=dashed];
m54_76 -> m54_41  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonFormatterConverter", style=dashed];
m54_76 -> m54_44  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonFormatterConverter", style=dashed];
m54_76 -> m54_47  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonFormatterConverter", style=dashed];
m54_76 -> m54_50  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonFormatterConverter", style=dashed];
m54_76 -> m54_53  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonFormatterConverter", style=dashed];
m54_76 -> m54_56  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonFormatterConverter", style=dashed];
m54_76 -> m54_59  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonFormatterConverter", style=dashed];
m54_76 -> m54_62  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonFormatterConverter", style=dashed];
m54_76 -> m54_65  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonFormatterConverter", style=dashed];
m54_76 -> m54_68  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonFormatterConverter", style=dashed];
m54_76 -> m54_71  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonFormatterConverter", style=dashed];
m54_76 -> m54_74  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonFormatterConverter", style=dashed];
m56_13 -> m56_7  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m56_13 -> m56_8  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m57_10 -> m57_5  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonPrimitiveContract", style=dashed];
m58_12 -> m58_14  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m58_12 -> m58_15  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m58_19 -> m58_1  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m58_19 -> m58_3  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m58_19 -> m58_6  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m58_19 -> m58_10  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m58_19 -> m58_13  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m58_19 -> m58_14  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m58_19 -> m58_15  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m59_79 -> m59_81  [color=darkseagreen4, key=1, label=schema, style=dashed];
m59_79 -> m59_82  [color=darkseagreen4, key=1, label=schema, style=dashed];
m59_79 -> m59_83  [color=darkseagreen4, key=1, label=schema, style=dashed];
m59_107 -> m59_109  [color=darkseagreen4, key=1, label=schema, style=dashed];
m59_107 -> m59_110  [color=darkseagreen4, key=1, label=schema, style=dashed];
m59_128 -> m59_130  [color=darkseagreen4, key=1, label=properties, style=dashed];
m59_129 -> m59_131  [color=darkseagreen4, key=1, label=c, style=dashed];
m59_130 -> m59_137  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m59_97 -> m59_101  [color=darkseagreen4, key=1, label=schema, style=dashed];
m59_2 -> m59_8  [color=darkseagreen4, key=1, label=schema, style=dashed];
m59_144 -> m59_154  [color=darkseagreen4, key=1, label=schema, style=dashed];
m59_154 -> m59_164  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m59_147 -> m59_152  [color=darkseagreen4, key=1, label=temp, style=dashed];
m59_148 -> m59_152  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m59_148 -> m59_154  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m59_149 -> m59_152  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m59_153 -> m59_165  [color=darkseagreen4, key=1, label=errors, style=dashed];
m59_153 -> m59_155  [color=darkseagreen4, key=1, label=errors, style=dashed];
m59_120 -> m59_122  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m59_120 -> m59_123  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m59_40 -> m59_42  [color=darkseagreen4, key=1, label=schema, style=dashed];
m59_40 -> m59_43  [color=darkseagreen4, key=1, label=schema, style=dashed];
m59_40 -> m59_44  [color=darkseagreen4, key=1, label=schema, style=dashed];
m59_88 -> m59_90  [color=darkseagreen4, key=1, label=schema, style=dashed];
m59_88 -> m59_91  [color=darkseagreen4, key=1, label=schema, style=dashed];
m59_88 -> m59_92  [color=darkseagreen4, key=1, label=schema, style=dashed];
m59_205 -> m59_122  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CustomDirectoryInfoMapper", style=dashed];
m59_205 -> m59_123  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CustomDirectoryInfoMapper", style=dashed];
m59_206 -> m59_165  [color=darkseagreen4, key=1, label=errors, style=dashed];
m60_19 -> m60_23  [color=darkseagreen4, key=1, label="Newtonsoft.Json.IJsonLineInfo", style=dashed];
m60_19 -> m60_28  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_20 -> m60_28  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_24 -> m60_28  [color=darkseagreen4, key=1, label=lineNumber, style=dashed];
m60_26 -> m60_28  [color=darkseagreen4, key=1, label=lineNumber, style=dashed];
m64_374 -> m64_377  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_374 -> m64_378  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_374 -> m64_379  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_374 -> m64_380  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_374 -> m64_382  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_374 -> m64_383  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_349 -> m64_352  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_349 -> m64_353  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_349 -> m64_354  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_349 -> m64_355  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_349 -> m64_356  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_349 -> m64_357  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_349 -> m64_359  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_349 -> m64_360  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_349 -> m64_363  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_349 -> m64_364  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_156 -> m64_159  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_156 -> m64_160  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_156 -> m64_161  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_156 -> m64_162  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_156 -> m64_163  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_156 -> m64_164  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_156 -> m64_166  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_156 -> m64_167  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_156 -> m64_170  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_156 -> m64_171  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_125 -> m64_128  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_125 -> m64_129  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_950 -> m64_952  [color=darkseagreen4, key=1, label=values, style=dashed];
m64_950 -> m64_953  [color=darkseagreen4, key=1, label=values, style=dashed];
m64_950 -> m64_954  [color=darkseagreen4, key=1, label=values, style=dashed];
m64_2 -> m64_4  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_743 -> m64_755  [color=darkseagreen4, key=1, label=errors, style=dashed];
m64_743 -> m64_751  [color=darkseagreen4, key=1, label=errors, style=dashed];
m64_743 -> m64_752  [color=darkseagreen4, key=1, label=errors, style=dashed];
m64_744 -> m64_747  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_744 -> m64_748  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_744 -> m64_749  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_744 -> m64_750  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_745 -> m64_755  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.ValidationEventArgs", style=dashed];
m64_610 -> m64_613  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_610 -> m64_614  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_610 -> m64_615  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_610 -> m64_616  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_610 -> m64_617  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_610 -> m64_618  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_610 -> m64_619  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_610 -> m64_620  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_610 -> m64_622  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_610 -> m64_623  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_922 -> m64_925  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m64_241 -> m64_244  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m64_392 -> m64_395  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_392 -> m64_396  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_392 -> m64_397  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_392 -> m64_398  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_392 -> m64_401  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_392 -> m64_402  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_481 -> m64_484  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_481 -> m64_485  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_481 -> m64_486  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_481 -> m64_487  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_481 -> m64_489  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_481 -> m64_490  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_481 -> m64_493  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_481 -> m64_494  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_269 -> m64_272  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_269 -> m64_273  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_269 -> m64_274  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_269 -> m64_275  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_269 -> m64_276  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_269 -> m64_277  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_269 -> m64_279  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_269 -> m64_280  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_269 -> m64_283  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_269 -> m64_284  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_254 -> m64_257  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_254 -> m64_258  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_181 -> m64_184  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_181 -> m64_185  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_829 -> m64_832  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_829 -> m64_833  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_829 -> m64_834  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_829 -> m64_835  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_829 -> m64_836  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_829 -> m64_838  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_829 -> m64_839  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_829 -> m64_840  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_829 -> m64_841  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_829 -> m64_842  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_829 -> m64_843  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_829 -> m64_844  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_829 -> m64_845  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_829 -> m64_846  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_829 -> m64_849  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_829 -> m64_850  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_829 -> m64_851  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_829 -> m64_853  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_829 -> m64_854  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_829 -> m64_856  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_829 -> m64_857  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_829 -> m64_858  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_829 -> m64_860  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_829 -> m64_861  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_829 -> m64_862  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_829 -> m64_867  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_829 -> m64_868  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_829 -> m64_869  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_829 -> m64_871  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_829 -> m64_872  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_829 -> m64_873  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_829 -> m64_876  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_829 -> m64_877  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_829 -> m64_878  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_829 -> m64_879  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_829 -> m64_880  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_828 -> m64_885  [color=darkseagreen4, key=1, label=errors, style=dashed];
m64_828 -> m64_847  [color=darkseagreen4, key=1, label=errors, style=dashed];
m64_828 -> m64_848  [color=darkseagreen4, key=1, label=errors, style=dashed];
m64_828 -> m64_852  [color=darkseagreen4, key=1, label=errors, style=dashed];
m64_828 -> m64_855  [color=darkseagreen4, key=1, label=errors, style=dashed];
m64_828 -> m64_859  [color=darkseagreen4, key=1, label=errors, style=dashed];
m64_828 -> m64_863  [color=darkseagreen4, key=1, label=errors, style=dashed];
m64_828 -> m64_864  [color=darkseagreen4, key=1, label=errors, style=dashed];
m64_828 -> m64_865  [color=darkseagreen4, key=1, label=errors, style=dashed];
m64_828 -> m64_866  [color=darkseagreen4, key=1, label=errors, style=dashed];
m64_828 -> m64_870  [color=darkseagreen4, key=1, label=errors, style=dashed];
m64_828 -> m64_874  [color=darkseagreen4, key=1, label=errors, style=dashed];
m64_828 -> m64_875  [color=darkseagreen4, key=1, label=errors, style=dashed];
m64_213 -> m64_216  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_213 -> m64_217  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_294 -> m64_297  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_294 -> m64_298  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_74 -> m64_77  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_74 -> m64_78  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_74 -> m64_79  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_74 -> m64_80  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_74 -> m64_81  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_74 -> m64_82  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_74 -> m64_83  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_74 -> m64_84  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_74 -> m64_85  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_74 -> m64_86  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_74 -> m64_87  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_74 -> m64_88  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_74 -> m64_89  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_74 -> m64_90  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_74 -> m64_91  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_74 -> m64_92  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_74 -> m64_93  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_74 -> m64_94  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_74 -> m64_95  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_74 -> m64_96  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_74 -> m64_97  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_74 -> m64_98  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_74 -> m64_99  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_74 -> m64_100  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_74 -> m64_101  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_74 -> m64_102  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_74 -> m64_103  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_74 -> m64_104  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_74 -> m64_105  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_74 -> m64_106  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_74 -> m64_107  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_74 -> m64_108  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_74 -> m64_109  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_74 -> m64_110  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_74 -> m64_111  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_74 -> m64_112  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_74 -> m64_113  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_74 -> m64_114  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_74 -> m64_115  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_412 -> m64_415  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_412 -> m64_416  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_412 -> m64_417  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_412 -> m64_418  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_412 -> m64_422  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_412 -> m64_423  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_585 -> m64_588  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_585 -> m64_589  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_585 -> m64_590  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_585 -> m64_591  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_585 -> m64_592  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_585 -> m64_593  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_585 -> m64_594  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_585 -> m64_595  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_585 -> m64_597  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_585 -> m64_598  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_986 -> m64_989  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_986 -> m64_990  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_986 -> m64_991  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_986 -> m64_992  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_986 -> m64_994  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_986 -> m64_995  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_986 -> m64_997  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_986 -> m64_998  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_309 -> m64_312  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_309 -> m64_313  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_14 -> m64_19  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_14 -> m64_20  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_14 -> m64_21  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_14 -> m64_22  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_14 -> m64_23  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_14 -> m64_24  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_14 -> m64_25  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_14 -> m64_26  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_14 -> m64_27  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_14 -> m64_28  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_14 -> m64_29  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_14 -> m64_30  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_14 -> m64_31  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_14 -> m64_32  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_14 -> m64_33  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_14 -> m64_34  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_14 -> m64_35  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_14 -> m64_36  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_14 -> m64_37  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_14 -> m64_38  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_14 -> m64_39  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_14 -> m64_40  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_14 -> m64_41  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_14 -> m64_42  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_14 -> m64_43  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_14 -> m64_44  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_14 -> m64_45  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_14 -> m64_46  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_14 -> m64_47  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_14 -> m64_48  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_14 -> m64_49  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_14 -> m64_50  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_14 -> m64_51  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_14 -> m64_52  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_14 -> m64_53  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_14 -> m64_54  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_14 -> m64_55  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_14 -> m64_56  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_14 -> m64_57  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_14 -> m64_58  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_27 -> m64_32  [color=green, key=1, label="lambda expression", style=dashed];
m64_27 -> m64_35  [color=green, key=1, label="lambda expression", style=dashed];
m64_38 -> m64_5  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaNode", style=dashed];
m64_38 -> m64_4  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaNode", style=dashed];
m64_38 -> m64_25  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaNode", style=dashed];
m64_529 -> m64_532  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_529 -> m64_533  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_529 -> m64_534  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_529 -> m64_535  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_529 -> m64_536  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_529 -> m64_537  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_939 -> m64_941  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m64_633 -> m64_636  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_633 -> m64_637  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_633 -> m64_638  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_633 -> m64_639  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_633 -> m64_640  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_633 -> m64_641  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_633 -> m64_642  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_633 -> m64_643  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_633 -> m64_645  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_633 -> m64_646  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_633 -> m64_647  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_633 -> m64_648  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_633 -> m64_649  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_633 -> m64_650  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_633 -> m64_652  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_633 -> m64_653  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_633 -> m64_654  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_633 -> m64_655  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_633 -> m64_656  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_633 -> m64_657  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_633 -> m64_659  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_633 -> m64_660  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_432 -> m64_436  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m64_324 -> m64_327  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_324 -> m64_328  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_324 -> m64_329  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_324 -> m64_330  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_324 -> m64_331  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_324 -> m64_332  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_324 -> m64_334  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_324 -> m64_335  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_324 -> m64_338  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_324 -> m64_339  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_504 -> m64_507  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_504 -> m64_508  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_504 -> m64_509  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_504 -> m64_510  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_504 -> m64_511  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_504 -> m64_512  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_504 -> m64_513  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_504 -> m64_514  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_504 -> m64_515  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_504 -> m64_516  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_504 -> m64_517  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_504 -> m64_518  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_443 -> m64_446  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_443 -> m64_447  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_443 -> m64_448  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_443 -> m64_449  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_443 -> m64_450  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_443 -> m64_451  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_229 -> m64_237  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m64_229 -> m64_231  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_229 -> m64_232  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_197 -> m64_200  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_197 -> m64_201  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_548 -> m64_551  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_548 -> m64_552  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_890 -> m64_898  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_890 -> m64_895  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_891 -> m64_894  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_892 -> m64_898  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.ValidationEventArgs", style=dashed];
m64_699 -> m64_702  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_699 -> m64_703  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_699 -> m64_704  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_699 -> m64_705  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_699 -> m64_706  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_699 -> m64_708  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_699 -> m64_709  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_699 -> m64_710  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_699 -> m64_712  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_699 -> m64_713  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_699 -> m64_714  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_699 -> m64_716  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_699 -> m64_717  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_699 -> m64_718  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_699 -> m64_720  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_699 -> m64_721  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_699 -> m64_722  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_699 -> m64_724  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_699 -> m64_725  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_699 -> m64_726  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_699 -> m64_727  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_699 -> m64_728  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_699 -> m64_729  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_699 -> m64_731  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_699 -> m64_732  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_699 -> m64_733  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_699 -> m64_734  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_699 -> m64_735  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_699 -> m64_736  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_563 -> m64_566  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_563 -> m64_567  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_563 -> m64_568  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_563 -> m64_569  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_563 -> m64_571  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_563 -> m64_572  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_563 -> m64_574  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_563 -> m64_575  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_68 -> m64_59  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_119 -> m64_116  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_135 -> m64_130  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_135 -> m64_131  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_150 -> m64_146  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_150 -> m64_147  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_175 -> m64_165  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_175 -> m64_168  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_175 -> m64_169  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_175 -> m64_172  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_191 -> m64_186  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_191 -> m64_187  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_191 -> m64_188  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_207 -> m64_202  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_207 -> m64_203  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_207 -> m64_204  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_223 -> m64_218  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_223 -> m64_219  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_223 -> m64_220  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_246 -> m64_248  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_263 -> m64_259  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_263 -> m64_260  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_288 -> m64_278  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_288 -> m64_281  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_288 -> m64_282  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_288 -> m64_285  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_303 -> m64_299  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_303 -> m64_300  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_318 -> m64_314  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_318 -> m64_315  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_343 -> m64_333  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_343 -> m64_336  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_343 -> m64_337  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_343 -> m64_340  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_368 -> m64_358  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_368 -> m64_361  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_368 -> m64_362  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_368 -> m64_365  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_386 -> m64_381  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_406 -> m64_399  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_406 -> m64_400  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_406 -> m64_403  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_426 -> m64_419  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_426 -> m64_420  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_426 -> m64_421  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_455 -> m64_452  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_475 -> m64_468  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_475 -> m64_469  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_475 -> m64_472  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_498 -> m64_488  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_498 -> m64_491  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_498 -> m64_492  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_498 -> m64_495  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_523 -> m64_519  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_523 -> m64_520  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_542 -> m64_538  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_542 -> m64_539  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_557 -> m64_553  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_557 -> m64_554  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_579 -> m64_570  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_579 -> m64_573  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_579 -> m64_576  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_604 -> m64_596  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_604 -> m64_599  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_604 -> m64_600  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_604 -> m64_601  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_627 -> m64_621  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_627 -> m64_624  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_664 -> m64_644  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_664 -> m64_651  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_664 -> m64_658  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_664 -> m64_661  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_682 -> m64_678  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_682 -> m64_684  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_739 -> m64_707  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_739 -> m64_711  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_739 -> m64_715  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_739 -> m64_719  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_739 -> m64_723  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_739 -> m64_730  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_780 -> m64_768  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_780 -> m64_771  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_780 -> m64_774  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_817 -> m64_793  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_817 -> m64_798  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_817 -> m64_803  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_817 -> m64_806  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_817 -> m64_809  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_884 -> m64_837  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_884 -> m64_886  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_980 -> m64_969  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_980 -> m64_972  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_980 -> m64_975  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_980 -> m64_976  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_1002 -> m64_993  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_1002 -> m64_996  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_1002 -> m64_999  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m64_461 -> m64_464  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_461 -> m64_465  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_461 -> m64_466  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_461 -> m64_467  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_461 -> m64_470  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_461 -> m64_471  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_903 -> m64_906  [color=darkseagreen4, key=1, label=data, style=dashed];
m64_668 -> m64_683  [color=darkseagreen4, key=1, label=errors, style=dashed];
m64_668 -> m64_676  [color=darkseagreen4, key=1, label=errors, style=dashed];
m64_668 -> m64_677  [color=darkseagreen4, key=1, label=errors, style=dashed];
m64_671 -> m64_674  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_671 -> m64_675  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_786 -> m64_789  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_786 -> m64_790  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_786 -> m64_791  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_786 -> m64_792  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_786 -> m64_794  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_786 -> m64_795  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_786 -> m64_796  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_786 -> m64_797  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_786 -> m64_799  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_786 -> m64_800  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_786 -> m64_801  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_786 -> m64_802  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_786 -> m64_804  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_786 -> m64_805  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_786 -> m64_807  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_786 -> m64_808  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_786 -> m64_810  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_786 -> m64_811  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_786 -> m64_812  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_786 -> m64_813  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_786 -> m64_814  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_962 -> m64_965  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_962 -> m64_966  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_962 -> m64_967  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_962 -> m64_968  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_962 -> m64_970  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_962 -> m64_971  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_962 -> m64_973  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_962 -> m64_974  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_141 -> m64_144  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_141 -> m64_145  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_761 -> m64_764  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_761 -> m64_765  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_761 -> m64_766  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_761 -> m64_767  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_761 -> m64_769  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_761 -> m64_770  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_761 -> m64_772  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_761 -> m64_773  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_761 -> m64_775  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_761 -> m64_776  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_761 -> m64_777  [color=darkseagreen4, key=1, label=reader, style=dashed];
m64_1004 -> m64_683  [color=darkseagreen4, key=1, label=errors, style=dashed];
m64_1006 -> m64_755  [color=darkseagreen4, key=1, label=errors, style=dashed];
m64_1007 -> m64_885  [color=darkseagreen4, key=1, label=errors, style=dashed];
m64_1008 -> m64_898  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m65_4 -> m65_12  [color=darkseagreen4, key=1, label=string, style=dashed];
m65_4 -> m65_16  [color=darkseagreen4, key=1, label=string, style=dashed];
m65_5 -> m65_11  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_5 -> m65_8  [color=darkseagreen4, key=1, label=schema, style=dashed];
m65_7 -> m65_15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_19 -> m65_12  [color=darkseagreen4, key=1, label=string, style=dashed];
m65_19 -> m65_16  [color=darkseagreen4, key=1, label=string, style=dashed];
m66_20 -> m66_22  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m66_20 -> m66_23  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m66_20 -> m66_25  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m66_20 -> m66_26  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m66_20 -> m66_27  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m66_20 -> m66_28  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m66_20 -> m66_29  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m66_20 -> m66_30  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m66_20 -> m66_31  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m66_20 -> m66_32  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m66_20 -> m66_33  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m66_20 -> m66_34  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m66_20 -> m66_36  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m66_20 -> m66_37  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m66_20 -> m66_39  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m66_20 -> m66_40  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m66_20 -> m66_42  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m66_20 -> m66_43  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m66_20 -> m66_45  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m66_20 -> m66_46  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m66_20 -> m66_47  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m66_20 -> m66_48  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m66_20 -> m66_49  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m66_20 -> m66_50  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m66_20 -> m66_51  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m66_20 -> m66_52  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m66_20 -> m66_53  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m66_20 -> m66_54  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m66_20 -> m66_55  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m66_20 -> m66_56  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m66_20 -> m66_57  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m66_20 -> m66_58  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m66_20 -> m66_59  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m66_20 -> m66_60  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m66_20 -> m66_63  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m66_20 -> m66_66  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m66_20 -> m66_68  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m66_20 -> m66_69  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m66_20 -> m66_70  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m66_20 -> m66_71  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m66_20 -> m66_73  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m66_20 -> m66_74  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m66_20 -> m66_76  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m66_83 -> m66_140  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m66_83 -> m66_141  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m66_85 -> m66_116  [color=darkseagreen4, key=1, label=string, style=dashed];
m66_85 -> m66_117  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m66_85 -> m66_120  [color=darkseagreen4, key=1, label=string, style=dashed];
m66_85 -> m66_123  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m66_85 -> m66_124  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m66_85 -> m66_125  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m66_85 -> m66_127  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m66_85 -> m66_128  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m66_118 -> m66_136  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m66_118 -> m66_122  [color=darkseagreen4, key=1, label=en, style=dashed];
m66_118 -> m66_125  [color=darkseagreen4, key=1, label=en, style=dashed];
m66_118 -> m66_126  [color=darkseagreen4, key=1, label=en, style=dashed];
m66_121 -> m66_124  [color=darkseagreen4, key=1, label=first, style=dashed];
m66_121 -> m66_128  [color=darkseagreen4, key=1, label=first, style=dashed];
m66_7 -> m66_11  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m66_7 -> m66_13  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m66_87 -> m66_93  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m66_87 -> m66_94  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m66_87 -> m66_95  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Schema.JsonSchema>", style=dashed];
m66_87 -> m66_96  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m66_87 -> m66_98  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m66_96 -> m66_96  [color=darkseagreen4, key=1, label=property, style=dashed];
m66_97 -> m66_97  [color=darkseagreen4, key=1, label=property, style=dashed];
m66_88 -> m66_103  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m66_88 -> m66_104  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m66_88 -> m66_105  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m66_88 -> m66_110  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m66_88 -> m66_111  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchema", style=dashed];
m66_144 -> m66_8  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaWriter", style=dashed];
m66_144 -> m66_9  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaWriter", style=dashed];
m66_144 -> m66_10  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaWriter", style=dashed];
m66_144 -> m66_11  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaWriter", style=dashed];
m66_144 -> m66_12  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaWriter", style=dashed];
m66_144 -> m66_13  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaWriter", style=dashed];
m66_144 -> m66_22  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaWriter", style=dashed];
m66_144 -> m66_23  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaWriter", style=dashed];
m66_144 -> m66_24  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaWriter", style=dashed];
m66_144 -> m66_25  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaWriter", style=dashed];
m66_144 -> m66_26  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaWriter", style=dashed];
m66_144 -> m66_27  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaWriter", style=dashed];
m66_144 -> m66_28  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaWriter", style=dashed];
m66_144 -> m66_29  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaWriter", style=dashed];
m66_144 -> m66_30  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaWriter", style=dashed];
m66_144 -> m66_31  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaWriter", style=dashed];
m66_144 -> m66_33  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaWriter", style=dashed];
m66_144 -> m66_35  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaWriter", style=dashed];
m66_144 -> m66_36  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaWriter", style=dashed];
m66_144 -> m66_38  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaWriter", style=dashed];
m66_144 -> m66_39  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaWriter", style=dashed];
m66_144 -> m66_41  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaWriter", style=dashed];
m66_144 -> m66_42  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaWriter", style=dashed];
m66_144 -> m66_44  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaWriter", style=dashed];
m66_144 -> m66_45  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaWriter", style=dashed];
m66_144 -> m66_46  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaWriter", style=dashed];
m66_144 -> m66_47  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaWriter", style=dashed];
m66_144 -> m66_48  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaWriter", style=dashed];
m66_144 -> m66_49  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaWriter", style=dashed];
m66_144 -> m66_50  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaWriter", style=dashed];
m66_144 -> m66_51  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaWriter", style=dashed];
m66_144 -> m66_52  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaWriter", style=dashed];
m66_144 -> m66_53  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaWriter", style=dashed];
m66_144 -> m66_54  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaWriter", style=dashed];
m66_144 -> m66_55  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaWriter", style=dashed];
m66_144 -> m66_56  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaWriter", style=dashed];
m66_144 -> m66_57  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaWriter", style=dashed];
m66_144 -> m66_58  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaWriter", style=dashed];
m66_144 -> m66_59  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaWriter", style=dashed];
m66_144 -> m66_61  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaWriter", style=dashed];
m66_144 -> m66_62  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaWriter", style=dashed];
m66_144 -> m66_64  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaWriter", style=dashed];
m66_144 -> m66_65  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaWriter", style=dashed];
m66_144 -> m66_67  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaWriter", style=dashed];
m66_144 -> m66_68  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaWriter", style=dashed];
m66_144 -> m66_70  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaWriter", style=dashed];
m66_144 -> m66_72  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaWriter", style=dashed];
m66_144 -> m66_74  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaWriter", style=dashed];
m66_144 -> m66_75  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaWriter", style=dashed];
m66_144 -> m66_77  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaWriter", style=dashed];
m66_144 -> m66_78  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaWriter", style=dashed];
m66_144 -> m66_79  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaWriter", style=dashed];
m66_144 -> m66_97  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaWriter", style=dashed];
m66_144 -> m66_102  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaWriter", style=dashed];
m66_144 -> m66_105  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaWriter", style=dashed];
m66_144 -> m66_106  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaWriter", style=dashed];
m66_144 -> m66_107  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaWriter", style=dashed];
m66_144 -> m66_109  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaWriter", style=dashed];
m66_144 -> m66_112  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaWriter", style=dashed];
m66_144 -> m66_113  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaWriter", style=dashed];
m67_14 -> m67_16  [color=darkseagreen4, key=1, label="System.Exception", style=dashed];
m68_111 -> m68_120  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m68_111 -> m68_121  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m68_111 -> m68_126  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m68_111 -> m68_113  [color=darkseagreen4, key=1, label=object, style=dashed];
m68_111 -> m68_123  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m68_120 -> m68_126  [color=darkseagreen4, key=1, label=previousCulture, style=dashed];
m68_121 -> m68_123  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m68_121 -> m68_124  [color=darkseagreen4, key=1, label=traceJsonReader, style=dashed];
m68_121 -> m68_125  [color=darkseagreen4, key=1, label=traceJsonReader, style=dashed];
m68_112 -> m68_114  [color=darkseagreen4, key=1, label=c2, style=dashed];
m68_112 -> m68_115  [color=darkseagreen4, key=1, label=c2, style=dashed];
m68_112 -> m68_116  [color=darkseagreen4, key=1, label=c2, style=dashed];
m68_301 -> m68_304  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m68_302 -> m68_304  [color=darkseagreen4, key=1, label=error, style=dashed];
m68_21 -> m68_24  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m68_22 -> m68_24  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m68_22 -> m68_25  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m68_23 -> m68_26  [color=darkseagreen4, key=1, label=values, style=dashed];
m68_23 -> m68_27  [color=darkseagreen4, key=1, label=values, style=dashed];
m68_307 -> m68_309  [color=darkseagreen4, key=1, label=dic, style=dashed];
m68_307 -> m68_310  [color=darkseagreen4, key=1, label=dic, style=dashed];
m68_307 -> m68_311  [color=darkseagreen4, key=1, label=dic, style=dashed];
m68_307 -> m68_208  [color=green, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m68_307 -> m68_8  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m68_307 -> m68_9  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m68_307 -> m68_10  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m68_307 -> m68_11  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m68_307 -> m68_12  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m68_307 -> m68_13  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m68_307 -> m68_105  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m68_307 -> m68_109  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m68_307 -> m68_120  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m68_307 -> m68_121  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m68_307 -> m68_122  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m68_307 -> m68_125  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m68_307 -> m68_126  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m68_307 -> m68_137  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m68_307 -> m68_141  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m68_307 -> m68_144  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m68_307 -> m68_146  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m68_307 -> m68_156  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m68_307 -> m68_161  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m68_307 -> m68_162  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m68_307 -> m68_166  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m68_307 -> m68_170  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m68_307 -> m68_172  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m68_307 -> m68_174  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m68_307 -> m68_178  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m68_307 -> m68_180  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m68_307 -> m68_182  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m68_307 -> m68_188  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m68_307 -> m68_192  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m68_307 -> m68_206  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m68_307 -> m68_215  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m68_307 -> m68_220  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m68_307 -> m68_224  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m68_307 -> m68_226  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m68_307 -> m68_230  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m68_307 -> m68_234  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m68_307 -> m68_238  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m68_307 -> m68_242  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m68_307 -> m68_246  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m68_307 -> m68_250  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m68_307 -> m68_254  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m68_307 -> m68_261  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m68_307 -> m68_272  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m68_307 -> m68_282  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m68_307 -> m68_284  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m68_307 -> m68_288  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m68_307 -> m68_302  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m68_307 -> m68_304  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m68_290 -> m68_294  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>", style=dashed];
m68_290 -> m68_295  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m68_293 -> m68_295  [color=darkseagreen4, key=1, label=list, style=dashed];
m68_293 -> m68_296  [color=darkseagreen4, key=1, label=list, style=dashed];
m68_293 -> m68_297  [color=darkseagreen4, key=1, label=list, style=dashed];
m68_292 -> m68_294  [color=darkseagreen4, key=1, label=i, style=dashed];
m68_292 -> m68_297  [color=darkseagreen4, key=1, label=i, style=dashed];
m68_297 -> m68_297  [color=darkseagreen4, key=1, label=i, style=dashed];
m68_294 -> m68_296  [color=darkseagreen4, key=1, label=converter, style=dashed];
m68_247 -> m68_270  [color=darkseagreen4, key=1, label=previousStringEscapeHandling, style=dashed];
m68_235 -> m68_264  [color=darkseagreen4, key=1, label=previousDateFormatHandling, style=dashed];
m68_237 -> m68_266  [color=darkseagreen4, key=1, label=previousDateTimeZoneHandling, style=dashed];
m68_239 -> m68_266  [color=darkseagreen4, key=1, label=previousDateTimeZoneHandling, style=dashed];
m68_374 -> m68_376  [color=darkseagreen4, key=1, label=c, style=dashed];
m68_378 -> m68_380  [color=darkseagreen4, key=1, label=newValue, style=dashed];
m68_156 -> m68_162  [color=darkseagreen4, key=1, label=previousCulture, style=dashed];
m68_157 -> m68_160  [color=darkseagreen4, key=1, label=traceJsonReader, style=dashed];
m68_157 -> m68_161  [color=darkseagreen4, key=1, label=traceJsonReader, style=dashed];
m68_158 -> m68_160  [color=darkseagreen4, key=1, label=json, style=dashed];
m68_160 -> m68_162  [color=darkseagreen4, key=1, label=d2, style=dashed];
m68_160 -> m68_163  [color=darkseagreen4, key=1, label=d2, style=dashed];
m68_644 -> m68_648  [color=darkseagreen4, key=1, label=json, style=dashed];
m68_645 -> m68_647  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m68_476 -> m68_478  [color=darkseagreen4, key=1, label=values, style=dashed];
m68_476 -> m68_479  [color=darkseagreen4, key=1, label=values, style=dashed];
m68_476 -> m68_480  [color=darkseagreen4, key=1, label=values, style=dashed];
m68_476 -> m68_481  [color=darkseagreen4, key=1, label=values, style=dashed];
m68_476 -> m68_482  [color=darkseagreen4, key=1, label=values, style=dashed];
m68_476 -> m68_483  [color=darkseagreen4, key=1, label=values, style=dashed];
m68_476 -> m68_484  [color=darkseagreen4, key=1, label=values, style=dashed];
m68_476 -> m68_485  [color=darkseagreen4, key=1, label=values, style=dashed];
m68_476 -> m68_486  [color=darkseagreen4, key=1, label=values, style=dashed];
m68_279 -> m68_281  [color=darkseagreen4, key=1, label=l, style=dashed];
m68_279 -> m68_282  [color=darkseagreen4, key=1, label=l, style=dashed];
m68_54 -> m68_57  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m68_286 -> m68_288  [color=darkseagreen4, key=1, label=list, style=dashed];
m68_286 -> m68_289  [color=darkseagreen4, key=1, label=list, style=dashed];
m68_286 -> m68_290  [color=darkseagreen4, key=1, label=list, style=dashed];
m68_34 -> m68_37  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m68_34 -> m68_36  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m68_35 -> m68_37  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m68_35 -> m68_38  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m68_39 -> m68_42  [color=darkseagreen4, key=1, label=c1, style=dashed];
m68_39 -> m68_43  [color=darkseagreen4, key=1, label=c1, style=dashed];
m68_727 -> m68_730  [color=darkseagreen4, key=1, label=name, style=dashed];
m68_727 -> m68_731  [color=darkseagreen4, key=1, label=name, style=dashed];
m68_728 -> m68_730  [color=darkseagreen4, key=1, label=p1, style=dashed];
m68_729 -> m68_731  [color=darkseagreen4, key=1, label=p2, style=dashed];
m68_734 -> m68_736  [color=darkseagreen4, key=1, label=newName, style=dashed];
m68_734 -> m68_737  [color=darkseagreen4, key=1, label=newName, style=dashed];
m68_734 -> m68_738  [color=darkseagreen4, key=1, label=newName, style=dashed];
m68_667 -> m68_675  [color=darkseagreen4, key=1, label=json, style=dashed];
m68_668 -> m68_670  [color=darkseagreen4, key=1, label=aa, style=dashed];
m68_668 -> m68_671  [color=darkseagreen4, key=1, label=aa, style=dashed];
m68_668 -> m68_672  [color=darkseagreen4, key=1, label=aa, style=dashed];
m68_668 -> m68_673  [color=darkseagreen4, key=1, label=aa, style=dashed];
m68_360 -> m68_364  [color=darkseagreen4, key=1, label=s, style=dashed];
m68_360 -> m68_367  [color=darkseagreen4, key=1, label=s, style=dashed];
m68_363 -> m68_365  [color=darkseagreen4, key=1, label=d1, style=dashed];
m68_366 -> m68_368  [color=darkseagreen4, key=1, label=d2, style=dashed];
m68_591 -> m68_601  [color=darkseagreen4, key=1, label=json, style=dashed];
m68_592 -> m68_594  [color=darkseagreen4, key=1, label=aa, style=dashed];
m68_592 -> m68_595  [color=darkseagreen4, key=1, label=aa, style=dashed];
m68_592 -> m68_596  [color=darkseagreen4, key=1, label=aa, style=dashed];
m68_592 -> m68_597  [color=darkseagreen4, key=1, label=aa, style=dashed];
m68_592 -> m68_598  [color=darkseagreen4, key=1, label=aa, style=dashed];
m68_592 -> m68_599  [color=darkseagreen4, key=1, label=aa, style=dashed];
m68_229 -> m68_262  [color=darkseagreen4, key=1, label=previousFormatting, style=dashed];
m68_383 -> m68_385  [color=darkseagreen4, key=1, label=list, style=dashed];
m68_388 -> m68_390  [color=darkseagreen4, key=1, label=result, style=dashed];
m68_388 -> m68_391  [color=darkseagreen4, key=1, label=result, style=dashed];
m68_388 -> m68_392  [color=darkseagreen4, key=1, label=result, style=dashed];
m68_388 -> m68_393  [color=darkseagreen4, key=1, label=result, style=dashed];
m68_783 -> m68_786  [color=darkseagreen4, key=1, label=a1, style=dashed];
m68_784 -> m68_787  [color=darkseagreen4, key=1, label=a2, style=dashed];
m68_785 -> m68_787  [color=darkseagreen4, key=1, label=articles1, style=dashed];
m68_785 -> m68_790  [color=darkseagreen4, key=1, label=articles1, style=dashed];
m68_785 -> m68_791  [color=darkseagreen4, key=1, label=articles1, style=dashed];
m68_789 -> m68_791  [color=darkseagreen4, key=1, label=articles2, style=dashed];
m68_442 -> m68_444  [color=darkseagreen4, key=1, label=v2, style=dashed];
m68_442 -> m68_445  [color=darkseagreen4, key=1, label=v2, style=dashed];
m68_442 -> m68_446  [color=darkseagreen4, key=1, label=v2, style=dashed];
m68_611 -> m68_615  [color=darkseagreen4, key=1, label=json, style=dashed];
m68_612 -> m68_614  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m68_803 -> m68_806  [color=darkseagreen4, key=1, label=p1, style=dashed];
m68_804 -> m68_807  [color=darkseagreen4, key=1, label=p2, style=dashed];
m68_805 -> m68_807  [color=darkseagreen4, key=1, label=products, style=dashed];
m68_300 -> m68_302  [color=darkseagreen4, key=1, label=list, style=dashed];
m68_300 -> m68_303  [color=darkseagreen4, key=1, label=list, style=dashed];
m68_300 -> m68_304  [color=darkseagreen4, key=1, label=list, style=dashed];
m68_223 -> m68_225  [color=darkseagreen4, key=1, label=result, style=dashed];
m68_223 -> m68_226  [color=darkseagreen4, key=1, label=result, style=dashed];
m68_223 -> m68_227  [color=darkseagreen4, key=1, label=result, style=dashed];
m68_618 -> m68_622  [color=darkseagreen4, key=1, label=json, style=dashed];
m68_619 -> m68_621  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m68_249 -> m68_274  [color=darkseagreen4, key=1, label=previousCulture, style=dashed];
m68_251 -> m68_274  [color=darkseagreen4, key=1, label=previousCulture, style=dashed];
m68_241 -> m68_268  [color=darkseagreen4, key=1, label=previousFloatFormatHandling, style=dashed];
m68_243 -> m68_268  [color=darkseagreen4, key=1, label=previousFloatFormatHandling, style=dashed];
m68_107 -> m68_109  [color=darkseagreen4, key=1, label=c1, style=dashed];
m68_107 -> m68_110  [color=darkseagreen4, key=1, label=c1, style=dashed];
m68_145 -> m68_147  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m68_129 -> m68_131  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m68_129 -> m68_170  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m68_129 -> m68_172  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m68_129 -> m68_174  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m68_129 -> m68_178  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m68_129 -> m68_180  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m68_129 -> m68_182  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m68_129 -> m68_188  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m68_129 -> m68_167  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m68_129 -> m68_171  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m68_129 -> m68_175  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m68_129 -> m68_187  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m68_129 -> m68_190  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m68_430 -> m68_432  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m68_17 -> m68_19  [color=darkseagreen4, key=1, label=c1, style=dashed];
m68_17 -> m68_20  [color=darkseagreen4, key=1, label=c1, style=dashed];
m68_27 -> m68_77  [color=green, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m68_27 -> m68_79  [color=green, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m68_27 -> m68_42  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m68_27 -> m68_43  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m68_27 -> m68_45  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m68_27 -> m68_47  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m68_27 -> m68_49  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m68_27 -> m68_51  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m68_27 -> m68_53  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m68_27 -> m68_55  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m68_27 -> m68_56  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m68_27 -> m68_57  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m68_27 -> m68_58  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m68_27 -> m68_59  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m68_27 -> m68_60  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m68_27 -> m68_61  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m68_27 -> m68_63  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m68_27 -> m68_65  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m68_27 -> m68_66  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m68_27 -> m68_67  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m68_27 -> m68_69  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m68_27 -> m68_70  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m68_27 -> m68_73  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m68_27 -> m68_74  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m68_27 -> m68_75  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m68_27 -> m68_76  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m68_27 -> m68_80  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m68_27 -> m68_81  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m68_27 -> m68_82  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m68_27 -> m68_83  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m68_27 -> m68_84  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m68_27 -> m68_85  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m68_27 -> m68_86  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m68_27 -> m68_87  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m68_27 -> m68_90  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m68_27 -> m68_92  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m68_27 -> m68_94  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m68_27 -> m68_96  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m68_27 -> m68_98  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m68_708 -> m68_710  [color=darkseagreen4, key=1, label=o, style=dashed];
m68_708 -> m68_711  [color=darkseagreen4, key=1, label=o, style=dashed];
m68_708 -> m68_712  [color=darkseagreen4, key=1, label=o, style=dashed];
m68_708 -> m68_713  [color=darkseagreen4, key=1, label=o, style=dashed];
m68_708 -> m68_714  [color=darkseagreen4, key=1, label=o, style=dashed];
m68_708 -> m68_715  [color=darkseagreen4, key=1, label=o, style=dashed];
m68_708 -> m68_716  [color=darkseagreen4, key=1, label=o, style=dashed];
m68_708 -> m68_717  [color=darkseagreen4, key=1, label=o, style=dashed];
m68_177 -> m68_195  [color=darkseagreen4, key=1, label="out Newtonsoft.Json.DateParseHandling?", style=dashed];
m68_89 -> m68_92  [color=darkseagreen4, key=1, label=c1, style=dashed];
m68_94 -> m68_96  [color=darkseagreen4, key=1, label=c2, style=dashed];
m68_94 -> m68_98  [color=darkseagreen4, key=1, label=c2, style=dashed];
m68_222 -> m68_259  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m68_222 -> m68_230  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m68_222 -> m68_234  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m68_222 -> m68_238  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m68_222 -> m68_242  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m68_222 -> m68_246  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m68_222 -> m68_250  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m68_222 -> m68_254  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m68_222 -> m68_231  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m68_565 -> m68_574  [color=darkseagreen4, key=1, label=json, style=dashed];
m68_566 -> m68_568  [color=darkseagreen4, key=1, label=aa, style=dashed];
m68_566 -> m68_569  [color=darkseagreen4, key=1, label=aa, style=dashed];
m68_566 -> m68_570  [color=darkseagreen4, key=1, label=aa, style=dashed];
m68_566 -> m68_571  [color=darkseagreen4, key=1, label=aa, style=dashed];
m68_566 -> m68_572  [color=darkseagreen4, key=1, label=aa, style=dashed];
m68_412 -> m68_415  [color=darkseagreen4, key=1, label=p, style=dashed];
m68_412 -> m68_416  [color=darkseagreen4, key=1, label=p, style=dashed];
m68_412 -> m68_417  [color=darkseagreen4, key=1, label=p, style=dashed];
m68_423 -> m68_426  [color=darkseagreen4, key=1, label=p, style=dashed];
m68_692 -> m68_694  [color=darkseagreen4, key=1, label=values2, style=dashed];
m68_179 -> m68_195  [color=darkseagreen4, key=1, label="out Newtonsoft.Json.FloatParseHandling?", style=dashed];
m68_138 -> m68_140  [color=darkseagreen4, key=1, label=d, style=dashed];
m68_138 -> m68_141  [color=darkseagreen4, key=1, label=d, style=dashed];
m68_138 -> m68_142  [color=darkseagreen4, key=1, label=d, style=dashed];
m68_41 -> m68_43  [color=darkseagreen4, key=1, label=i, style=dashed];
m68_41 -> m68_44  [color=darkseagreen4, key=1, label=i, style=dashed];
m68_44 -> m68_44  [color=darkseagreen4, key=1, label=i, style=dashed];
m68_45 -> m68_47  [color=darkseagreen4, key=1, label=values, style=dashed];
m68_45 -> m68_49  [color=darkseagreen4, key=1, label=values, style=dashed];
m68_743 -> m68_747  [color=darkseagreen4, key=1, label=collection, style=dashed];
m68_743 -> m68_750  [color=darkseagreen4, key=1, label=collection, style=dashed];
m68_744 -> m68_747  [color=darkseagreen4, key=1, label=jsonSerializer, style=dashed];
m68_746 -> m68_748  [color=darkseagreen4, key=1, label=sw, style=dashed];
m68_554 -> m68_556  [color=darkseagreen4, key=1, label=aa, style=dashed];
m68_554 -> m68_557  [color=darkseagreen4, key=1, label=aa, style=dashed];
m68_554 -> m68_558  [color=darkseagreen4, key=1, label=aa, style=dashed];
m68_554 -> m68_559  [color=darkseagreen4, key=1, label=aa, style=dashed];
m68_554 -> m68_560  [color=darkseagreen4, key=1, label=aa, style=dashed];
m68_554 -> m68_561  [color=darkseagreen4, key=1, label=aa, style=dashed];
m68_453 -> m68_455  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m68_453 -> m68_456  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m68_135 -> m68_207  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m68_135 -> m68_209  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m68_135 -> m68_200  [color=darkseagreen4, key=1, label="Newtonsoft.Json.DateTimeZoneHandling?", style=dashed];
m68_135 -> m68_201  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m68_135 -> m68_202  [color=darkseagreen4, key=1, label="Newtonsoft.Json.DateParseHandling?", style=dashed];
m68_135 -> m68_203  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m68_135 -> m68_204  [color=darkseagreen4, key=1, label="Newtonsoft.Json.FloatParseHandling?", style=dashed];
m68_135 -> m68_205  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m68_168 -> m68_171  [color=darkseagreen4, key=1, label=onebasedArray, style=dashed];
m68_172 -> m68_172  [color=darkseagreen4, key=1, label=i, style=dashed];
m68_184 -> m68_188  [color=darkseagreen4, key=1, label=i, style=dashed];
m68_184 -> m68_190  [color=darkseagreen4, key=1, label=i, style=dashed];
m68_186 -> m68_188  [color=darkseagreen4, key=1, label=j, style=dashed];
m68_192 -> m68_194  [color=darkseagreen4, key=1, label=resolver, style=dashed];
m68_167 -> m68_195  [color=darkseagreen4, key=1, label="out System.Globalization.CultureInfo", style=dashed];
m68_169 -> m68_195  [color=darkseagreen4, key=1, label="out System.Globalization.CultureInfo", style=dashed];
m68_169 -> m68_171  [color=darkseagreen4, key=1, label=i, style=dashed];
m68_169 -> m68_172  [color=darkseagreen4, key=1, label=i, style=dashed];
m68_171 -> m68_195  [color=darkseagreen4, key=1, label="out Newtonsoft.Json.DateTimeZoneHandling?", style=dashed];
m68_173 -> m68_195  [color=darkseagreen4, key=1, label="out Newtonsoft.Json.DateTimeZoneHandling?", style=dashed];
m68_175 -> m68_195  [color=darkseagreen4, key=1, label="out Newtonsoft.Json.DateParseHandling?", style=dashed];
m68_181 -> m68_195  [color=darkseagreen4, key=1, label="out Newtonsoft.Json.FloatParseHandling?", style=dashed];
m68_183 -> m68_195  [color=darkseagreen4, key=1, label="out int?", style=dashed];
m68_183 -> m68_185  [color=darkseagreen4, key=1, label=onebasedArray, style=dashed];
m68_183 -> m68_187  [color=darkseagreen4, key=1, label=onebasedArray, style=dashed];
m68_183 -> m68_188  [color=darkseagreen4, key=1, label=onebasedArray, style=dashed];
m68_185 -> m68_195  [color=darkseagreen4, key=1, label="out int?", style=dashed];
m68_187 -> m68_195  [color=darkseagreen4, key=1, label="out string", style=dashed];
m68_189 -> m68_195  [color=darkseagreen4, key=1, label="out string", style=dashed];
m68_189 -> m68_189  [color=darkseagreen4, key=1, label=j, style=dashed];
m68_190 -> m68_194  [color=darkseagreen4, key=1, label=textReader, style=dashed];
m68_190 -> m68_190  [color=darkseagreen4, key=1, label=i, style=dashed];
m68_402 -> m68_404  [color=darkseagreen4, key=1, label=result, style=dashed];
m68_402 -> m68_405  [color=darkseagreen4, key=1, label=result, style=dashed];
m68_402 -> m68_406  [color=darkseagreen4, key=1, label=result, style=dashed];
m68_402 -> m68_407  [color=darkseagreen4, key=1, label=result, style=dashed];
m68_265 -> m68_268  [color=darkseagreen4, key=1, label=list, style=dashed];
m68_813 -> m68_815  [color=darkseagreen4, key=1, label=products, style=dashed];
m68_814 -> m68_816  [color=darkseagreen4, key=1, label=p1, style=dashed];
m68_63 -> m68_65  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m68_633 -> m68_641  [color=darkseagreen4, key=1, label=json, style=dashed];
m68_634 -> m68_636  [color=darkseagreen4, key=1, label=aa, style=dashed];
m68_634 -> m68_637  [color=darkseagreen4, key=1, label=aa, style=dashed];
m68_634 -> m68_638  [color=darkseagreen4, key=1, label=aa, style=dashed];
m68_634 -> m68_639  [color=darkseagreen4, key=1, label=aa, style=dashed];
m68_72 -> m68_74  [color=darkseagreen4, key=1, label=l, style=dashed];
m68_72 -> m68_75  [color=darkseagreen4, key=1, label=l, style=dashed];
m68_72 -> m68_76  [color=darkseagreen4, key=1, label=l, style=dashed];
m68_83 -> m68_83  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, int>", style=dashed];
m68_86 -> m68_86  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, int>", style=dashed];
m68_604 -> m68_608  [color=darkseagreen4, key=1, label=json, style=dashed];
m68_605 -> m68_607  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m68_148 -> m68_156  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m68_148 -> m68_162  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m68_245 -> m68_270  [color=darkseagreen4, key=1, label=previousStringEscapeHandling, style=dashed];
m68_257 -> m68_260  [color=green, key=1, label=traceJsonWriter, style=dashed];
m68_257 -> m68_259  [color=darkseagreen4, key=1, label=traceJsonWriter, style=dashed];
m68_257 -> m68_261  [color=darkseagreen4, key=1, label=traceJsonWriter, style=dashed];
m68_516 -> m68_518  [color=darkseagreen4, key=1, label=c2, style=dashed];
m68_516 -> m68_519  [color=darkseagreen4, key=1, label=c2, style=dashed];
m68_516 -> m68_520  [color=darkseagreen4, key=1, label=c2, style=dashed];
m68_516 -> m68_521  [color=darkseagreen4, key=1, label=c2, style=dashed];
m68_516 -> m68_522  [color=darkseagreen4, key=1, label=c2, style=dashed];
m68_516 -> m68_523  [color=darkseagreen4, key=1, label=c2, style=dashed];
m68_577 -> m68_581  [color=darkseagreen4, key=1, label=json, style=dashed];
m68_578 -> m68_580  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m68_199 -> m68_201  [color=darkseagreen4, key=1, label=myOtherResult, style=dashed];
m68_199 -> m68_202  [color=darkseagreen4, key=1, label=myOtherResult, style=dashed];
m68_199 -> m68_203  [color=darkseagreen4, key=1, label=myOtherResult, style=dashed];
m68_199 -> m68_204  [color=darkseagreen4, key=1, label=myOtherResult, style=dashed];
m68_199 -> m68_205  [color=darkseagreen4, key=1, label=myOtherResult, style=dashed];
m68_231 -> m68_262  [color=darkseagreen4, key=1, label=previousFormatting, style=dashed];
m68_233 -> m68_264  [color=darkseagreen4, key=1, label=previousDateFormatHandling, style=dashed];
m68_315 -> m68_317  [color=darkseagreen4, key=1, label=dic, style=dashed];
m68_315 -> m68_318  [color=darkseagreen4, key=1, label=dic, style=dashed];
m68_463 -> m68_465  [color=darkseagreen4, key=1, label=values, style=dashed];
m68_463 -> m68_466  [color=darkseagreen4, key=1, label=values, style=dashed];
m68_463 -> m68_467  [color=darkseagreen4, key=1, label=values, style=dashed];
m68_463 -> m68_468  [color=darkseagreen4, key=1, label=values, style=dashed];
m68_463 -> m68_469  [color=darkseagreen4, key=1, label=values, style=dashed];
m68_463 -> m68_470  [color=darkseagreen4, key=1, label=values, style=dashed];
m68_463 -> m68_471  [color=darkseagreen4, key=1, label=values, style=dashed];
m68_463 -> m68_472  [color=darkseagreen4, key=1, label=values, style=dashed];
m68_489 -> m68_493  [color=darkseagreen4, key=1, label=json, style=dashed];
m68_490 -> m68_492  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m68_699 -> m68_701  [color=darkseagreen4, key=1, label=o, style=dashed];
m68_699 -> m68_702  [color=darkseagreen4, key=1, label=o, style=dashed];
m68_699 -> m68_703  [color=darkseagreen4, key=1, label=o, style=dashed];
m68_699 -> m68_704  [color=darkseagreen4, key=1, label=o, style=dashed];
m68_658 -> m68_664  [color=darkseagreen4, key=1, label=json, style=dashed];
m68_659 -> m68_661  [color=darkseagreen4, key=1, label=aa, style=dashed];
m68_659 -> m68_662  [color=darkseagreen4, key=1, label=aa, style=dashed];
m68_856 -> m68_859  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m68_856 -> m68_860  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m68_856 -> m68_863  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m68_858 -> m68_862  [color=darkseagreen4, key=1, label=newStrings, style=dashed];
m68_858 -> m68_864  [color=darkseagreen4, key=1, label=newStrings, style=dashed];
m68_651 -> m68_655  [color=darkseagreen4, key=1, label=json, style=dashed];
m68_652 -> m68_654  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m68_796 -> m68_800  [color=darkseagreen4, key=1, label=r1, style=dashed];
m68_881 -> m68_9  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized", style=dashed];
m68_882 -> m68_151  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomConcurrentDictionary", style=dashed];
m68_883 -> m68_215  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>", style=dashed];
m68_883 -> m68_219  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>", style=dashed];
m68_884 -> m68_238  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>", style=dashed];
m68_886 -> m68_262  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrivateDefaultCtorWithIEnumerableCtorList<T>", style=dashed];
m68_887 -> m68_324  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>", style=dashed];
m68_887 -> m68_328  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>", style=dashed];
m68_887 -> m68_332  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>", style=dashed];
m68_887 -> m68_335  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>", style=dashed];
m68_888 -> m68_348  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>", style=dashed];
m68_888 -> m68_351  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>", style=dashed];
m68_890 -> m68_493  [color=darkseagreen4, key=1, label=json, style=dashed];
m68_892 -> m68_581  [color=darkseagreen4, key=1, label=json, style=dashed];
m68_894 -> m68_608  [color=darkseagreen4, key=1, label=json, style=dashed];
m68_895 -> m68_615  [color=darkseagreen4, key=1, label=json, style=dashed];
m68_896 -> m68_622  [color=darkseagreen4, key=1, label=json, style=dashed];
m68_897 -> m68_648  [color=darkseagreen4, key=1, label=json, style=dashed];
m68_898 -> m68_655  [color=darkseagreen4, key=1, label=json, style=dashed];
m68_899 -> m68_835  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList", style=dashed];
m68_899 -> m68_839  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList", style=dashed];
m68_900 -> m68_844  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>", style=dashed];
m68_900 -> m68_845  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>", style=dashed];
m68_900 -> m68_850  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>", style=dashed];
m69_367 -> m69_411  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m69_367 -> m69_412  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m69_367 -> m69_419  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_367 -> m69_422  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m69_367 -> m69_415  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_367 -> m69_420  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_367 -> m69_421  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m69_411 -> m69_411  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m69_411 -> m69_416  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m69_412 -> m69_418  [color=darkseagreen4, key=1, label=includeTypeDetails, style=dashed];
m69_413 -> m69_423  [color=darkseagreen4, key=1, label=writeMetadataObject, style=dashed];
m69_413 -> m69_416  [color=darkseagreen4, key=1, label=ret, style=dashed];
m69_413 -> m69_418  [color=darkseagreen4, key=1, label=ret, style=dashed];
m69_413 -> m69_419  [color=darkseagreen4, key=1, label=ret, style=dashed];
m69_414 -> m69_416  [color=darkseagreen4, key=1, label=current, style=dashed];
m69_424 -> m69_439  [color=darkseagreen4, key=1, label=contract, style=dashed];
m69_424 -> m69_441  [color=darkseagreen4, key=1, label=contract, style=dashed];
m69_138 -> m69_144  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m69_138 -> m69_145  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m69_138 -> m69_146  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContainerContract", style=dashed];
m69_138 -> m69_147  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContainerContract", style=dashed];
m69_138 -> m69_151  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m69_138 -> m69_153  [color=darkseagreen4, key=1, label=object, style=dashed];
m69_138 -> m69_156  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_138 -> m69_159  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_158 -> m69_170  [color=darkseagreen4, key=1, label=extensionDataAttribute, style=dashed];
m69_158 -> m69_177  [color=darkseagreen4, key=1, label=extensionDataAttribute, style=dashed];
m69_163 -> m69_178  [color=darkseagreen4, key=1, label=keyType, style=dashed];
m69_153 -> m69_159  [color=darkseagreen4, key=1, label=message, style=dashed];
m69_153 -> m69_153  [color=darkseagreen4, key=1, label=message, style=dashed];
m69_153 -> m69_156  [color=darkseagreen4, key=1, label=message, style=dashed];
m69_143 -> m69_154  [color=darkseagreen4, key=1, label=referenceLoopHandling, style=dashed];
m69_143 -> m69_146  [color=darkseagreen4, key=1, label=referenceLoopHandling, style=dashed];
m69_145 -> m69_154  [color=darkseagreen4, key=1, label=referenceLoopHandling, style=dashed];
m69_147 -> m69_154  [color=darkseagreen4, key=1, label=referenceLoopHandling, style=dashed];
m69_141 -> m69_154  [color=darkseagreen4, key=1, label=referenceLoopHandling, style=dashed];
m69_141 -> m69_144  [color=darkseagreen4, key=1, label=referenceLoopHandling, style=dashed];
m69_141 -> m69_146  [color=darkseagreen4, key=1, label=referenceLoopHandling, style=dashed];
m69_161 -> m69_166  [color=darkseagreen4, key=1, label=t, style=dashed];
m69_161 -> m69_168  [color=darkseagreen4, key=1, label=t, style=dashed];
m69_164 -> m69_178  [color=darkseagreen4, key=1, label=valueType, style=dashed];
m69_164 -> m69_183  [color=darkseagreen4, key=1, label=valueType, style=dashed];
m69_150 -> m69_153  [color=darkseagreen4, key=1, label=message, style=dashed];
m69_482 -> m69_485  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m69_482 -> m69_488  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m69_482 -> m69_490  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m69_482 -> m69_492  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m69_482 -> m69_494  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m69_482 -> m69_496  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m69_482 -> m69_500  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m69_482 -> m69_501  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m69_485 -> m69_493  [color=darkseagreen4, key=1, label=t, style=dashed];
m69_485 -> m69_495  [color=darkseagreen4, key=1, label=t, style=dashed];
m69_485 -> m69_497  [color=darkseagreen4, key=1, label=t, style=dashed];
m69_485 -> m69_498  [color=darkseagreen4, key=1, label=t, style=dashed];
m69_485 -> m69_499  [color=darkseagreen4, key=1, label=t, style=dashed];
m69_494 -> m69_497  [color=darkseagreen4, key=1, label=resolvedTypeNameHandling, style=dashed];
m69_486 -> m69_489  [color=darkseagreen4, key=1, label=object, style=dashed];
m69_486 -> m69_491  [color=darkseagreen4, key=1, label=containerAttribute, style=dashed];
m69_302 -> m69_307  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m69_304 -> m69_307  [color=darkseagreen4, key=1, label=objectContract, style=dashed];
m69_190 -> m69_194  [color=darkseagreen4, key=1, label=object, style=dashed];
m69_191 -> m69_193  [color=darkseagreen4, key=1, label=converter, style=dashed];
m69_191 -> m69_194  [color=darkseagreen4, key=1, label=converter, style=dashed];
m69_197 -> m69_203  [color=darkseagreen4, key=1, label=object, style=dashed];
m69_197 -> m69_204  [color=darkseagreen4, key=1, label=string, style=dashed];
m69_198 -> m69_204  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m69_202 -> m69_204  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m69_91 -> m69_208  [color=darkseagreen4, key=1, label=object, style=dashed];
m69_91 -> m69_209  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_91 -> m69_210  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_211 -> m69_214  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m69_101 -> m69_104  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m69_101 -> m69_106  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m69_101 -> m69_108  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m69_240 -> m69_240  [color=darkseagreen4, key=1, label=index, style=dashed];
m69_88 -> m69_225  [color=darkseagreen4, key=1, label=object, style=dashed];
m69_88 -> m69_226  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_88 -> m69_227  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_88 -> m69_229  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m69_88 -> m69_233  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_88 -> m69_234  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_88 -> m69_235  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_88 -> m69_237  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_88 -> m69_238  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_88 -> m69_241  [color=darkseagreen4, key=1, label=object, style=dashed];
m69_88 -> m69_249  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m69_88 -> m69_251  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_88 -> m69_253  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_88 -> m69_254  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_88 -> m69_257  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_247 -> m69_249  [color=darkseagreen4, key=1, label=e, style=dashed];
m69_244 -> m69_244  [color=darkseagreen4, key=1, label=e, style=dashed];
m69_245 -> m69_245  [color=darkseagreen4, key=1, label=e, style=dashed];
m69_245 -> m69_249  [color=darkseagreen4, key=1, label=valueContract, style=dashed];
m69_245 -> m69_254  [color=darkseagreen4, key=1, label=valueContract, style=dashed];
m69_248 -> m69_253  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m69_248 -> m69_251  [color=darkseagreen4, key=1, label=en, style=dashed];
m69_249 -> m69_249  [color=darkseagreen4, key=1, label=e, style=dashed];
m69_249 -> m69_251  [color=darkseagreen4, key=1, label=e, style=dashed];
m69_224 -> m69_224  [color=darkseagreen4, key=1, label=item, style=dashed];
m69_227 -> m69_238  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m69_230 -> m69_233  [color=darkseagreen4, key=1, label=en, style=dashed];
m69_230 -> m69_234  [color=darkseagreen4, key=1, label=property, style=dashed];
m69_230 -> m69_235  [color=darkseagreen4, key=1, label=property, style=dashed];
m69_230 -> m69_237  [color=darkseagreen4, key=1, label=property, style=dashed];
m69_230 -> m69_244  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m69_233 -> m69_235  [color=darkseagreen4, key=1, label=memberValue, style=dashed];
m69_241 -> m69_243  [color=darkseagreen4, key=1, label=extensionData, style=dashed];
m69_250 -> m69_258  [color=darkseagreen4, key=1, label=constructor, style=dashed];
m69_251 -> m69_251  [color=darkseagreen4, key=1, label=e, style=dashed];
m69_252 -> m69_254  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m69_254 -> m69_254  [color=darkseagreen4, key=1, label=e, style=dashed];
m69_232 -> m69_235  [color=darkseagreen4, key=1, label=conInfo, style=dashed];
m69_228 -> m69_240  [color=darkseagreen4, key=1, label=index, style=dashed];
m69_543 -> m69_548  [color=darkseagreen4, key=1, label=members, style=dashed];
m69_106 -> m69_269  [color=darkseagreen4, key=1, label="System.Reflection.ConstructorInfo", style=dashed];
m69_269 -> m69_275  [color=darkseagreen4, key=1, label=parameterCollection, style=dashed];
m69_269 -> m69_276  [color=darkseagreen4, key=1, label=parameterCollection, style=dashed];
m69_271 -> m69_273  [color=darkseagreen4, key=1, label="out object", style=dashed];
m69_271 -> m69_274  [color=darkseagreen4, key=1, label="out object", style=dashed];
m69_271 -> m69_276  [color=darkseagreen4, key=1, label="out object", style=dashed];
m69_271 -> m69_278  [color=darkseagreen4, key=1, label="out object", style=dashed];
m69_271 -> m69_280  [color=darkseagreen4, key=1, label="out object", style=dashed];
m69_270 -> m69_273  [color=darkseagreen4, key=1, label=parameterInfo, style=dashed];
m69_272 -> m69_274  [color=darkseagreen4, key=1, label="out Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m69_272 -> m69_278  [color=darkseagreen4, key=1, label="out Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m69_273 -> m69_275  [color=darkseagreen4, key=1, label=property, style=dashed];
m69_380 -> m69_394  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m69_380 -> m69_395  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m69_380 -> m69_396  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_380 -> m69_397  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_380 -> m69_398  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_380 -> m69_400  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_380 -> m69_401  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_380 -> m69_403  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_380 -> m69_385  [color=darkseagreen4, key=1, label="int[]", style=dashed];
m69_380 -> m69_387  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_380 -> m69_388  [color=darkseagreen4, key=1, label="System.Array", style=dashed];
m69_380 -> m69_389  [color=darkseagreen4, key=1, label="System.Array", style=dashed];
m69_380 -> m69_391  [color=darkseagreen4, key=1, label="System.Array", style=dashed];
m69_380 -> m69_405  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_394 -> m69_397  [color=darkseagreen4, key=1, label=valueContract, style=dashed];
m69_394 -> m69_398  [color=darkseagreen4, key=1, label=valueContract, style=dashed];
m69_393 -> m69_395  [color=darkseagreen4, key=1, label=value, style=dashed];
m69_393 -> m69_396  [color=darkseagreen4, key=1, label=value, style=dashed];
m69_393 -> m69_397  [color=darkseagreen4, key=1, label=value, style=dashed];
m69_393 -> m69_398  [color=darkseagreen4, key=1, label=value, style=dashed];
m69_404 -> m69_404  [color=darkseagreen4, key=1, label=i, style=dashed];
m69_388 -> m69_400  [color=darkseagreen4, key=1, label=i, style=dashed];
m69_388 -> m69_404  [color=darkseagreen4, key=1, label=i, style=dashed];
m69_388 -> m69_390  [color=darkseagreen4, key=1, label=i, style=dashed];
m69_388 -> m69_518  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m69_388 -> m69_519  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m69_388 -> m69_520  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
m69_388 -> m69_521  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m69_388 -> m69_522  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m69_388 -> m69_523  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m69_388 -> m69_524  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m69_388 -> m69_525  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m69_388 -> m69_526  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m69_388 -> m69_527  [color=darkseagreen4, key=1, label="System.Reflection.ParameterInfo[]", style=dashed];
m69_388 -> m69_528  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m69_388 -> m69_529  [color=darkseagreen4, key=1, label="System.Reflection.ParameterInfo[]", style=dashed];
m69_388 -> m69_530  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m69_382 -> m69_403  [color=darkseagreen4, key=1, label=newIndices, style=dashed];
m69_382 -> m69_385  [color=darkseagreen4, key=1, label=newIndices, style=dashed];
m69_382 -> m69_390  [color=darkseagreen4, key=1, label=newIndices, style=dashed];
m69_382 -> m69_391  [color=darkseagreen4, key=1, label=newIndices, style=dashed];
m69_381 -> m69_384  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>", style=dashed];
m69_381 -> m69_388  [color=darkseagreen4, key=1, label=dimension, style=dashed];
m69_381 -> m69_389  [color=darkseagreen4, key=1, label=dimension, style=dashed];
m69_381 -> m69_390  [color=darkseagreen4, key=1, label=dimension, style=dashed];
m69_383 -> m69_385  [color=darkseagreen4, key=1, label=i, style=dashed];
m69_383 -> m69_386  [color=darkseagreen4, key=1, label=i, style=dashed];
m69_386 -> m69_386  [color=darkseagreen4, key=1, label=i, style=dashed];
m69_2 -> m69_5  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m69_2 -> m69_7  [color=darkseagreen4, key=1, label=object, style=dashed];
m69_2 -> m69_9  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_2 -> m69_10  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_2 -> m69_12  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_2 -> m69_13  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_332 -> m69_335  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m69_332 -> m69_337  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m69_332 -> m69_339  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m69_332 -> m69_341  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m69_344 -> m69_346  [color=darkseagreen4, key=1, label=underlyingList, style=dashed];
m69_105 -> m69_108  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m69_511 -> m69_513  [color=darkseagreen4, key=1, label=underlyingDictionary, style=dashed];
m69_511 -> m69_514  [color=darkseagreen4, key=1, label=underlyingDictionary, style=dashed];
m69_511 -> m69_535  [color=darkseagreen4, key=1, label=underlyingDictionary, style=dashed];
m69_511 -> m69_540  [color=darkseagreen4, key=1, label=underlyingDictionary, style=dashed];
m69_5 -> m69_7  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m69_7 -> m69_10  [color=darkseagreen4, key=1, label=contract, style=dashed];
m69_7 -> m69_12  [color=darkseagreen4, key=1, label=contract, style=dashed];
m69_13 -> m69_20  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m69_16 -> m69_19  [color=darkseagreen4, key=1, label=memberSerialization, style=dashed];
m69_16 -> m69_29  [color=darkseagreen4, key=1, label=memberSerialization, style=dashed];
m69_675 -> m69_683  [color=darkseagreen4, key=1, label=bool, style=dashed];
m69_676 -> m69_679  [color=darkseagreen4, key=1, label=specifiedMember, style=dashed];
m69_676 -> m69_683  [color=darkseagreen4, key=1, label=specifiedMember, style=dashed];
m69_678 -> m69_683  [color=darkseagreen4, key=1, label=specifiedMember, style=dashed];
m69_682 -> m69_689  [color=darkseagreen4, key=1, label=object, style=dashed];
m69_681 -> m69_689  [color=darkseagreen4, key=1, label=specifiedPropertyGet, style=dashed];
m69_263 -> m69_265  [color=darkseagreen4, key=1, label=constructors, style=dashed];
m69_279 -> m69_290  [color=darkseagreen4, key=1, label="System.Reflection.ParameterInfo", style=dashed];
m69_279 -> m69_291  [color=darkseagreen4, key=1, label="System.Reflection.ParameterInfo", style=dashed];
m69_279 -> m69_292  [color=darkseagreen4, key=1, label="System.Reflection.ParameterInfo", style=dashed];
m69_279 -> m69_295  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m69_279 -> m69_297  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m69_279 -> m69_298  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m69_279 -> m69_299  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m69_279 -> m69_300  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m69_279 -> m69_301  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m69_279 -> m69_303  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m69_289 -> m69_291  [color=darkseagreen4, key=1, label="out object", style=dashed];
m69_289 -> m69_292  [color=darkseagreen4, key=1, label=property, style=dashed];
m69_289 -> m69_293  [color=darkseagreen4, key=1, label=property, style=dashed];
m69_289 -> m69_294  [color=darkseagreen4, key=1, label=property, style=dashed];
m69_289 -> m69_297  [color=darkseagreen4, key=1, label=property, style=dashed];
m69_289 -> m69_298  [color=darkseagreen4, key=1, label=property, style=dashed];
m69_289 -> m69_299  [color=darkseagreen4, key=1, label=property, style=dashed];
m69_289 -> m69_300  [color=darkseagreen4, key=1, label=property, style=dashed];
m69_289 -> m69_301  [color=darkseagreen4, key=1, label=property, style=dashed];
m69_289 -> m69_303  [color=darkseagreen4, key=1, label=property, style=dashed];
m69_289 -> m69_307  [color=darkseagreen4, key=1, label=property, style=dashed];
m69_292 -> m69_599  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_303 -> m69_312  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_303 -> m69_313  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_303 -> m69_314  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_293 -> m69_608  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_50 -> m69_495  [color=darkseagreen4, key=1, label="Newtonsoft.Json.TypeNameHandling", style=dashed];
m69_50 -> m69_498  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m69_50 -> m69_499  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m69_50 -> m69_501  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContainerContract", style=dashed];
m69_50 -> m69_502  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m69_50 -> m69_506  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m69_99 -> m69_321  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m69_99 -> m69_322  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m69_99 -> m69_323  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m69_99 -> m69_324  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m69_99 -> m69_325  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m69_99 -> m69_326  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m69_99 -> m69_327  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m69_99 -> m69_102  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m69_99 -> m69_104  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m69_99 -> m69_106  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m69_99 -> m69_108  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m69_319 -> m69_321  [color=darkseagreen4, key=1, label=containerAttribute, style=dashed];
m69_429 -> m69_446  [color=darkseagreen4, key=1, label=string, style=dashed];
m69_433 -> m69_435  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m69_433 -> m69_437  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m69_435 -> m69_435  [color=darkseagreen4, key=1, label=serializationEntry, style=dashed];
m69_435 -> m69_439  [color=darkseagreen4, key=1, label=valueContract, style=dashed];
m69_435 -> m69_441  [color=darkseagreen4, key=1, label=valueContract, style=dashed];
m69_439 -> m69_439  [color=darkseagreen4, key=1, label=serializationEntry, style=dashed];
m69_441 -> m69_441  [color=darkseagreen4, key=1, label=serializationEntry, style=dashed];
m69_427 -> m69_427  [color=darkseagreen4, key=1, label=message, style=dashed];
m69_95 -> m69_439  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_95 -> m69_441  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_95 -> m69_444  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_95 -> m69_427  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.ISerializable", style=dashed];
m69_95 -> m69_432  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonISerializableContract", style=dashed];
m69_95 -> m69_437  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_95 -> m69_442  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_434 -> m69_437  [color=darkseagreen4, key=1, label=expectedParameterType, style=dashed];
m69_434 -> m69_439  [color=darkseagreen4, key=1, label=expectedParameterType, style=dashed];
m69_437 -> m69_437  [color=darkseagreen4, key=1, label=serializationEntry, style=dashed];
m69_428 -> m69_446  [color=darkseagreen4, key=1, label=namingStrategy, style=dashed];
m69_24 -> m69_589  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_24 -> m69_590  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_24 -> m69_591  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_24 -> m69_592  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_260 -> m69_297  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m69_260 -> m69_298  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_260 -> m69_299  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m69_260 -> m69_300  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_38 -> m69_44  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_38 -> m69_40  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonPrimitiveContract", style=dashed];
m69_38 -> m69_42  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_38 -> m69_43  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_38 -> m69_45  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_38 -> m69_46  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_38 -> m69_48  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_22 -> m69_59  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m69_22 -> m69_65  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_22 -> m69_74  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_22 -> m69_76  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m69_22 -> m69_79  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_69 -> m69_113  [color=darkseagreen4, key=1, label=namingStrategy, style=dashed];
m69_70 -> m69_113  [color=darkseagreen4, key=1, label=string, style=dashed];
m69_57 -> m69_62  [color=darkseagreen4, key=1, label=contract, style=dashed];
m69_57 -> m69_74  [color=darkseagreen4, key=1, label=contract, style=dashed];
m69_57 -> m69_78  [color=darkseagreen4, key=1, label=contract, style=dashed];
m69_57 -> m69_79  [color=darkseagreen4, key=1, label=contract, style=dashed];
m69_57 -> m69_84  [color=darkseagreen4, key=1, label=contract, style=dashed];
m69_57 -> m69_86  [color=darkseagreen4, key=1, label=contract, style=dashed];
m69_57 -> m69_89  [color=darkseagreen4, key=1, label=contract, style=dashed];
m69_57 -> m69_90  [color=darkseagreen4, key=1, label=contract, style=dashed];
m69_57 -> m69_92  [color=darkseagreen4, key=1, label=contract, style=dashed];
m69_57 -> m69_93  [color=darkseagreen4, key=1, label=contract, style=dashed];
m69_64 -> m69_68  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m69_75 -> m69_78  [color=darkseagreen4, key=1, label=overrideConstructor, style=dashed];
m69_89 -> m69_345  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_89 -> m69_352  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m69_346 -> m69_352  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m69_347 -> m69_384  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m69_352 -> m69_360  [color=darkseagreen4, key=1, label=baseType, style=dashed];
m69_353 -> m69_364  [color=darkseagreen4, key=1, label=currentOnSerializing, style=dashed];
m69_354 -> m69_368  [color=darkseagreen4, key=1, label=currentOnSerialized, style=dashed];
m69_356 -> m69_376  [color=darkseagreen4, key=1, label=currentOnDeserialized, style=dashed];
m69_358 -> m69_364  [color=darkseagreen4, key=1, label=skipSerializing, style=dashed];
m69_359 -> m69_376  [color=darkseagreen4, key=1, label=skipDeserialized, style=dashed];
m69_364 -> m69_364  [color=darkseagreen4, key=1, label=prevAttributeType, style=dashed];
m69_365 -> m69_384  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m69_351 -> m69_384  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>", style=dashed];
m69_349 -> m69_373  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m69_349 -> m69_384  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m69_350 -> m69_377  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m69_350 -> m69_384  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m69_348 -> m69_369  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m69_348 -> m69_384  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m69_357 -> m69_380  [color=darkseagreen4, key=1, label=currentOnError, style=dashed];
m69_360 -> m69_364  [color=darkseagreen4, key=1, label=method, style=dashed];
m69_360 -> m69_368  [color=darkseagreen4, key=1, label=method, style=dashed];
m69_360 -> m69_370  [color=darkseagreen4, key=1, label=method, style=dashed];
m69_360 -> m69_371  [color=darkseagreen4, key=1, label=method, style=dashed];
m69_360 -> m69_374  [color=darkseagreen4, key=1, label=method, style=dashed];
m69_360 -> m69_375  [color=darkseagreen4, key=1, label=method, style=dashed];
m69_360 -> m69_376  [color=darkseagreen4, key=1, label=method, style=dashed];
m69_360 -> m69_378  [color=darkseagreen4, key=1, label=method, style=dashed];
m69_360 -> m69_379  [color=darkseagreen4, key=1, label=method, style=dashed];
m69_360 -> m69_380  [color=darkseagreen4, key=1, label=method, style=dashed];
m69_360 -> m69_382  [color=darkseagreen4, key=1, label=method, style=dashed];
m69_363 -> m69_368  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m69_363 -> m69_376  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m69_363 -> m69_380  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m69_54 -> m69_56  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m69_86 -> m69_89  [color=darkseagreen4, key=1, label=constructor, style=dashed];
m69_90 -> m69_92  [color=darkseagreen4, key=1, label=extensionDataMember, style=dashed];
m69_90 -> m69_371  [color=darkseagreen4, key=1, label="System.Array", style=dashed];
m69_90 -> m69_373  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_90 -> m69_377  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_90 -> m69_375  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_93 -> m69_524  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_93 -> m69_512  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_93 -> m69_514  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_93 -> m69_515  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m69_93 -> m69_516  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m69_93 -> m69_517  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m69_93 -> m69_518  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m69_93 -> m69_519  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_93 -> m69_520  [color=darkseagreen4, key=1, label="System.Collections.IDictionary", style=dashed];
m69_93 -> m69_525  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m69_93 -> m69_527  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m69_93 -> m69_528  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m69_93 -> m69_529  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_93 -> m69_530  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_93 -> m69_532  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_93 -> m69_533  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_93 -> m69_535  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_93 -> m69_536  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_93 -> m69_538  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_93 -> m69_540  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_87 -> m69_331  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_87 -> m69_332  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_87 -> m69_334  [color=darkseagreen4, key=1, label=object, style=dashed];
m69_87 -> m69_336  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_87 -> m69_337  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_87 -> m69_339  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_94 -> m69_450  [color=darkseagreen4, key=1, label="System.Dynamic.IDynamicMetaObjectProvider", style=dashed];
m69_94 -> m69_459  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_94 -> m69_461  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_94 -> m69_463  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_94 -> m69_464  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_94 -> m69_472  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_94 -> m69_475  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_94 -> m69_477  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_94 -> m69_478  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_94 -> m69_482  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_94 -> m69_452  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_94 -> m69_455  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDynamicContract", style=dashed];
m69_94 -> m69_467  [color=darkseagreen4, key=1, label="System.Dynamic.IDynamicMetaObjectProvider", style=dashed];
m69_94 -> m69_469  [color=darkseagreen4, key=1, label="System.Dynamic.IDynamicMetaObjectProvider", style=dashed];
m69_94 -> m69_474  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_94 -> m69_480  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_261 -> m69_269  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m69_261 -> m69_273  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m69_261 -> m69_274  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContainerContract", style=dashed];
m69_261 -> m69_275  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_261 -> m69_276  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_261 -> m69_278  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_261 -> m69_281  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContainerContract", style=dashed];
m69_261 -> m69_282  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m69_261 -> m69_284  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_261 -> m69_286  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_282 -> m69_285  [color=darkseagreen4, key=1, label=resolvedRequired, style=dashed];
m69_288 -> m69_291  [color=darkseagreen4, key=1, label="out Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m69_283 -> m69_286  [color=darkseagreen4, key=1, label=property, style=dashed];
m69_470 -> m69_472  [color=darkseagreen4, key=1, label=valueContract, style=dashed];
m69_470 -> m69_475  [color=darkseagreen4, key=1, label=valueContract, style=dashed];
m69_17 -> m69_47  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m69_17 -> m69_21  [color=darkseagreen4, key=1, label=allMembers, style=dashed];
m69_17 -> m69_31  [color=darkseagreen4, key=1, label=allMembers, style=dashed];
m69_20 -> m69_51  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m69_20 -> m69_23  [color=darkseagreen4, key=1, label=defaultMembers, style=dashed];
m69_20 -> m69_112  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m69_20 -> m69_116  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m69_20 -> m69_121  [color=darkseagreen4, key=1, label=object, style=dashed];
m69_19 -> m69_34  [color=darkseagreen4, key=1, label=object, style=dashed];
m69_18 -> m69_24  [color=darkseagreen4, key=1, label=serializableMembers, style=dashed];
m69_18 -> m69_26  [color=darkseagreen4, key=1, label=serializableMembers, style=dashed];
m69_18 -> m69_30  [color=darkseagreen4, key=1, label=serializableMembers, style=dashed];
m69_18 -> m69_34  [color=darkseagreen4, key=1, label=serializableMembers, style=dashed];
m69_18 -> m69_35  [color=darkseagreen4, key=1, label=serializableMembers, style=dashed];
m69_21 -> m69_23  [color=darkseagreen4, key=1, label=member, style=dashed];
m69_21 -> m69_24  [color=darkseagreen4, key=1, label=member, style=dashed];
m69_21 -> m69_25  [color=darkseagreen4, key=1, label=member, style=dashed];
m69_21 -> m69_26  [color=darkseagreen4, key=1, label=member, style=dashed];
m69_21 -> m69_27  [color=darkseagreen4, key=1, label=member, style=dashed];
m69_21 -> m69_29  [color=darkseagreen4, key=1, label=member, style=dashed];
m69_21 -> m69_30  [color=darkseagreen4, key=1, label=member, style=dashed];
m69_21 -> m69_175  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_21 -> m69_176  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_21 -> m69_177  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_21 -> m69_178  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_21 -> m69_179  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_31 -> m69_34  [color=darkseagreen4, key=1, label=member, style=dashed];
m69_52 -> m69_318  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_52 -> m69_319  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_52 -> m69_320  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_316 -> m69_318  [color=darkseagreen4, key=1, label=typeName, style=dashed];
m69_316 -> m69_320  [color=darkseagreen4, key=1, label=typeName, style=dashed];
m69_116 -> m69_123  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m69_117 -> m69_132  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m69_264 -> m69_559  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_264 -> m69_545  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m69_264 -> m69_550  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_264 -> m69_553  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_264 -> m69_563  [color=darkseagreen4, key=1, label=object, style=dashed];
m69_264 -> m69_568  [color=darkseagreen4, key=1, label=object, style=dashed];
m69_264 -> m69_572  [color=darkseagreen4, key=1, label=object, style=dashed];
m69_264 -> m69_573  [color=darkseagreen4, key=1, label=object, style=dashed];
m69_264 -> m69_577  [color=darkseagreen4, key=1, label=object, style=dashed];
m69_181 -> m69_187  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_574 -> m69_578  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m69_103 -> m69_106  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m69_103 -> m69_108  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m69_477 -> m69_479  [color=darkseagreen4, key=1, label=contract, style=dashed];
m69_558 -> m69_577  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m69_558 -> m69_578  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m69_558 -> m69_579  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m69_558 -> m69_581  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m69_558 -> m69_582  [color=darkseagreen4, key=1, label="Newtonsoft.Json.MemberSerialization", style=dashed];
m69_558 -> m69_583  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m69_558 -> m69_590  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m69_558 -> m69_560  [color=darkseagreen4, key=1, label=sw, style=dashed];
m69_576 -> m69_578  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m69_576 -> m69_579  [color=darkseagreen4, key=1, label=property, style=dashed];
m69_576 -> m69_581  [color=darkseagreen4, key=1, label=property, style=dashed];
m69_576 -> m69_583  [color=darkseagreen4, key=1, label=property, style=dashed];
m69_576 -> m69_585  [color=darkseagreen4, key=1, label=property, style=dashed];
m69_576 -> m69_586  [color=darkseagreen4, key=1, label=property, style=dashed];
m69_576 -> m69_590  [color=darkseagreen4, key=1, label=property, style=dashed];
m69_576 -> m69_591  [color=darkseagreen4, key=1, label=property, style=dashed];
m69_172 -> m69_175  [color=darkseagreen4, key=1, label=createExtensionDataDictionary, style=dashed];
m69_547 -> m69_553  [color=darkseagreen4, key=1, label=properties, style=dashed];
m69_546 -> m69_551  [color=darkseagreen4, key=1, label=nameTable, style=dashed];
m69_571 -> m69_578  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m69_549 -> m69_553  [color=darkseagreen4, key=1, label=property, style=dashed];
m69_550 -> m69_553  [color=darkseagreen4, key=1, label=dt, style=dashed];
m69_563 -> m69_565  [color=darkseagreen4, key=1, label=d, style=dashed];
m69_573 -> m69_575  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m69_554 -> m69_562  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m69_127 -> m69_130  [color=darkseagreen4, key=1, label=object, style=dashed];
m69_132 -> m69_136  [color=darkseagreen4, key=1, label="?", style=dashed];
m69_132 -> m69_138  [color=darkseagreen4, key=1, label="?", style=dashed];
m69_132 -> m69_139  [color=darkseagreen4, key=1, label="?", style=dashed];
m69_132 -> m69_146  [color=darkseagreen4, key=1, label="?", style=dashed];
m69_171 -> m69_175  [color=darkseagreen4, key=1, label=setExtensionDataDictionary, style=dashed];
m69_171 -> m69_200  [color=darkseagreen4, key=1, label=setExtensionDataDictionary, style=dashed];
m69_171 -> m69_203  [color=darkseagreen4, key=1, label=setExtensionDataDictionary, style=dashed];
m69_169 -> m69_175  [color=darkseagreen4, key=1, label=getExtensionDataDictionary, style=dashed];
m69_534 -> m69_538  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m69_534 -> m69_539  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m69_111 -> m69_175  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m69_111 -> m69_201  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m69_111 -> m69_176  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m69_111 -> m69_183  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m69_175 -> m69_203  [color=darkseagreen4, key=1, label=object, style=dashed];
m69_175 -> m69_204  [color=darkseagreen4, key=1, label=string, style=dashed];
m69_173 -> m69_175  [color=darkseagreen4, key=1, label=reference, style=dashed];
m69_173 -> m69_178  [color=darkseagreen4, key=1, label=reference, style=dashed];
m69_174 -> m69_204  [color=darkseagreen4, key=1, label=setExtensionDataDictionaryValue, style=dashed];
m69_180 -> m69_214  [color=darkseagreen4, key=1, label=createEnumerableWrapper, style=dashed];
m69_666 -> m69_669  [color=darkseagreen4, key=1, label=shouldSerializeMethod, style=dashed];
m69_669 -> m69_673  [color=darkseagreen4, key=1, label=shouldSerializeCall, style=dashed];
m69_670 -> m69_673  [color=darkseagreen4, key=1, label=object, style=dashed];
m69_369 -> m69_369  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m69_369 -> m69_384  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m69_373 -> m69_373  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m69_373 -> m69_384  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m69_377 -> m69_377  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m69_377 -> m69_384  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m69_368 -> m69_368  [color=darkseagreen4, key=1, label=prevAttributeType, style=dashed];
m69_372 -> m69_374  [color=darkseagreen4, key=1, label=hasWrittenMetadataObject, style=dashed];
m69_376 -> m69_376  [color=darkseagreen4, key=1, label=prevAttributeType, style=dashed];
m69_310 -> m69_312  [color=darkseagreen4, key=1, label=reference, style=dashed];
m69_310 -> m69_314  [color=darkseagreen4, key=1, label=reference, style=dashed];
m69_98 -> m69_100  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m69_98 -> m69_102  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m69_98 -> m69_104  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContainerContract", style=dashed];
m69_123 -> m69_125  [color=darkseagreen4, key=1, label="?", style=dashed];
m69_123 -> m69_126  [color=darkseagreen4, key=1, label="?", style=dashed];
m69_606 -> m69_608  [color=darkseagreen4, key=1, label=isSpecified, style=dashed];
m69_606 -> m69_610  [color=darkseagreen4, key=1, label=containerAttribute, style=dashed];
m69_606 -> m69_611  [color=darkseagreen4, key=1, label=containerAttribute, style=dashed];
m69_449 -> m69_459  [color=darkseagreen4, key=1, label=contract, style=dashed];
m69_449 -> m69_461  [color=darkseagreen4, key=1, label=contract, style=dashed];
m69_459 -> m69_461  [color=darkseagreen4, key=1, label=memberValue, style=dashed];
m69_455 -> m69_459  [color=darkseagreen4, key=1, label=property, style=dashed];
m69_455 -> m69_461  [color=darkseagreen4, key=1, label=property, style=dashed];
m69_455 -> m69_463  [color=darkseagreen4, key=1, label=property, style=dashed];
m69_452 -> m69_464  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m69_452 -> m69_478  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m69_454 -> m69_457  [color=darkseagreen4, key=1, label=expectedParameterType, style=dashed];
m69_454 -> m69_459  [color=darkseagreen4, key=1, label=expectedParameterType, style=dashed];
m69_466 -> m69_466  [color=darkseagreen4, key=1, label=index, style=dashed];
m69_465 -> m69_467  [color=darkseagreen4, key=1, label=contract, style=dashed];
m69_469 -> m69_471  [color=darkseagreen4, key=1, label=memberValue, style=dashed];
m69_469 -> m69_472  [color=darkseagreen4, key=1, label=memberValue, style=dashed];
m69_469 -> m69_475  [color=darkseagreen4, key=1, label=memberValue, style=dashed];
m69_467 -> m69_477  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m69_467 -> m69_469  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m69_453 -> m69_455  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m69_453 -> m69_466  [color=darkseagreen4, key=1, label=index, style=dashed];
m69_453 -> m69_457  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m69_522 -> m69_524  [color=darkseagreen4, key=1, label=entry, style=dashed];
m69_524 -> m69_524  [color=darkseagreen4, key=1, label=entry, style=dashed];
m69_524 -> m69_526  [color=darkseagreen4, key=1, label=entry, style=dashed];
m69_524 -> m69_529  [color=darkseagreen4, key=1, label=escape, style=dashed];
m69_524 -> m69_532  [color=darkseagreen4, key=1, label=escape, style=dashed];
m69_525 -> m69_525  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m69_525 -> m69_529  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m69_525 -> m69_532  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m69_525 -> m69_535  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m69_526 -> m69_526  [color=darkseagreen4, key=1, label=entry, style=dashed];
m69_526 -> m69_528  [color=darkseagreen4, key=1, label=value, style=dashed];
m69_526 -> m69_530  [color=darkseagreen4, key=1, label=value, style=dashed];
m69_526 -> m69_533  [color=darkseagreen4, key=1, label=value, style=dashed];
m69_519 -> m69_536  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m69_520 -> m69_522  [color=darkseagreen4, key=1, label=e, style=dashed];
m69_527 -> m69_533  [color=darkseagreen4, key=1, label=valueContract, style=dashed];
m69_531 -> m69_533  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
m69_104 -> m69_236  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m69_104 -> m69_237  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m69_213 -> m69_220  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_213 -> m69_221  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m69_664 -> m69_692  [color=darkseagreen4, key=1, label=string, style=dashed];
m69_664 -> m69_693  [color=darkseagreen4, key=1, label=string, style=dashed];
m69_598 -> m69_641  [color=darkseagreen4, key=1, label=requiredAttribute, style=dashed];
m69_597 -> m69_599  [color=darkseagreen4, key=1, label=shouldSerialize, style=dashed];
m69_597 -> m69_600  [color=darkseagreen4, key=1, label=shouldSerialize, style=dashed];
m69_597 -> m69_601  [color=darkseagreen4, key=1, label=propertyAttribute, style=dashed];
m69_597 -> m69_608  [color=darkseagreen4, key=1, label=propertyAttribute, style=dashed];
m69_597 -> m69_618  [color=darkseagreen4, key=1, label=propertyAttribute, style=dashed];
m69_596 -> m69_645  [color=darkseagreen4, key=1, label=object, style=dashed];
m69_596 -> m69_646  [color=darkseagreen4, key=1, label="Newtonsoft.Json.MemberSerialization", style=dashed];
m69_596 -> m69_659  [color=darkseagreen4, key=1, label="Newtonsoft.Json.MemberSerialization", style=dashed];
m69_701 -> m69_703  [color=darkseagreen4, key=1, label=string, style=dashed];
m69_701 -> m69_704  [color=darkseagreen4, key=1, label=string, style=dashed];
m69_114 -> m69_119  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m69_124 -> m69_126  [color=darkseagreen4, key=1, label=m, style=dashed];
m69_124 -> m69_127  [color=darkseagreen4, key=1, label=m, style=dashed];
m69_212 -> m69_215  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m69_212 -> m69_216  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m69_611 -> m69_524  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_244  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_5  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_7  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_9  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_10  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_12  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_13  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_14  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_27  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_29  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_34  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_40  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_43  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_59  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_65  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_74  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_79  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_121  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_128  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_130  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_154  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_159  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_162  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_174  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_175  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_184  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_206  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_210  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_214  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_215  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_216  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_220  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_221  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_224  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_225  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_226  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_233  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_235  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_237  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_238  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_245  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_249  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_251  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_254  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_256  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_257  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_268  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_273  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_274  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_276  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_278  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_297  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_298  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_299  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_300  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_310  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_311  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_312  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_316  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_317  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_318  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_330  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_331  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_332  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_334  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_335  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_336  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_337  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_338  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_339  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_340  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_345  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_346  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_352  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_364  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_370  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_371  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_373  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_376  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_377  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_394  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_395  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_396  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_397  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_398  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_400  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_401  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_403  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_410  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_411  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_412  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_419  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_422  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_435  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_439  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_441  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_443  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_444  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_450  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_459  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_461  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_463  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_464  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_471  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_472  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_475  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_477  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_478  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_481  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_482  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_487  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_489  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_494  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_495  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_497  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_504  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_505  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_512  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_513  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_514  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_516  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_518  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_527  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_528  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_530  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_533  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_535  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_536  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_539  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_540  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_599  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_607  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_611 -> m69_608  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m69_617 -> m69_657  [color=darkseagreen4, key=1, label=hasMemberAttribute, style=dashed];
m69_622 -> m69_657  [color=darkseagreen4, key=1, label=hasMemberAttribute, style=dashed];
m69_643 -> m69_657  [color=darkseagreen4, key=1, label=hasMemberAttribute, style=dashed];
m69_654 -> m69_661  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m69_656 -> m69_661  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m69_658 -> m69_661  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m69_262 -> m69_284  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m69_695 -> m69_697  [color=darkseagreen4, key=1, label=string, style=dashed];
m69_695 -> m69_698  [color=darkseagreen4, key=1, label=string, style=dashed];
m69_709 -> m69_2  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m69_709 -> m69_20  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m69_709 -> m69_22  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m69_709 -> m69_58  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m69_709 -> m69_62  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m69_709 -> m69_78  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m69_709 -> m69_84  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m69_709 -> m69_86  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m69_709 -> m69_89  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m69_709 -> m69_90  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m69_709 -> m69_116  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m69_709 -> m69_139  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m69_709 -> m69_146  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m69_709 -> m69_273  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m69_709 -> m69_292  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m69_709 -> m69_322  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m69_709 -> m69_325  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m69_709 -> m69_327  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m69_709 -> m69_333  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m69_709 -> m69_352  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m69_709 -> m69_425  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m69_709 -> m69_450  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m69_709 -> m69_466  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m69_709 -> m69_472  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m69_709 -> m69_478  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m69_709 -> m69_488  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m69_709 -> m69_490  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m69_709 -> m69_492  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m69_709 -> m69_494  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m69_709 -> m69_496  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m69_709 -> m69_498  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m69_709 -> m69_500  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m69_709 -> m69_501  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m69_709 -> m69_565  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m69_709 -> m69_569  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m69_709 -> m69_579  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m69_709 -> m69_581  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m69_709 -> m69_587  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m69_709 -> m69_589  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m69_709 -> m69_590  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m69_709 -> m69_655  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m69_709 -> m69_691  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m69_709 -> m69_692  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m69_709 -> m69_696  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m69_709 -> m69_697  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m69_709 -> m69_702  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m69_709 -> m69_703  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m69_709 -> m69_704  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m69_709 -> m69_707  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m69_710 -> m69_113  [color=darkseagreen4, key=1, label=namingStrategy, style=dashed];
m69_712 -> m69_200  [color=darkseagreen4, key=1, label=setExtensionDataDictionary, style=dashed];
m69_712 -> m69_203  [color=darkseagreen4, key=1, label=setExtensionDataDictionary, style=dashed];
m69_713 -> m69_201  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m69_715 -> m69_204  [color=darkseagreen4, key=1, label=setExtensionDataDictionaryValue, style=dashed];
m69_716 -> m69_214  [color=darkseagreen4, key=1, label=createEnumerableWrapper, style=dashed];
m69_717 -> m69_223  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>", style=dashed];
m69_717 -> m69_228  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>", style=dashed];
m69_718 -> m69_446  [color=darkseagreen4, key=1, label=namingStrategy, style=dashed];
m69_719 -> m69_673  [color=darkseagreen4, key=1, label=shouldSerializeCall, style=dashed];
m69_720 -> m69_689  [color=darkseagreen4, key=1, label=specifiedPropertyGet, style=dashed];
m71_2 -> m71_7  [color=darkseagreen4, key=1, label=acme, style=dashed];
m71_4 -> m71_8  [color=darkseagreen4, key=1, label=pricyProducts, style=dashed];
m71_4 -> m71_9  [color=darkseagreen4, key=1, label=pricyProducts, style=dashed];
m72_35 -> m72_38  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m72_35 -> m72_40  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m72_38 -> m72_38  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m72_38 -> m72_40  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m72_462 -> m72_464  [color=darkseagreen4, key=1, label=string, style=dashed];
m72_516 -> m72_518  [color=darkseagreen4, key=1, label="System.Uri", style=dashed];
m72_218 -> m72_220  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m72_417 -> m72_419  [color=darkseagreen4, key=1, label=object, style=dashed];
m72_417 -> m72_420  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m72_417 -> m72_421  [color=darkseagreen4, key=1, label=object, style=dashed];
m72_417 -> m72_422  [color=darkseagreen4, key=1, label=object, style=dashed];
m72_417 -> m72_423  [color=darkseagreen4, key=1, label=object, style=dashed];
m72_417 -> m72_424  [color=darkseagreen4, key=1, label=object, style=dashed];
m72_455 -> m72_459  [color=darkseagreen4, key=1, label=string, style=dashed];
m72_455 -> m72_460  [color=darkseagreen4, key=1, label=string, style=dashed];
m72_457 -> m72_460  [color=darkseagreen4, key=1, label=task, style=dashed];
m72_225 -> m72_228  [color=darkseagreen4, key=1, label=string, style=dashed];
m72_64 -> m72_67  [color=darkseagreen4, key=1, label=int, style=dashed];
m72_157 -> m72_160  [color=darkseagreen4, key=1, label=bool, style=dashed];
m72_157 -> m72_161  [color=darkseagreen4, key=1, label=string, style=dashed];
m72_157 -> m72_164  [color=darkseagreen4, key=1, label=string, style=dashed];
m72_110 -> m72_113  [color=darkseagreen4, key=1, label=ulong, style=dashed];
m72_110 -> m72_114  [color=darkseagreen4, key=1, label=ulong, style=dashed];
m72_111 -> m72_114  [color=darkseagreen4, key=1, label=task, style=dashed];
m72_78 -> m72_80  [color=darkseagreen4, key=1, label=string, style=dashed];
m72_534 -> m72_537  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m72_534 -> m72_538  [color=darkseagreen4, key=1, label=string, style=dashed];
m72_534 -> m72_539  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m72_201 -> m72_204  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m72_201 -> m72_205  [color=darkseagreen4, key=1, label=string, style=dashed];
m72_187 -> m72_191  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m72_187 -> m72_192  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m72_189 -> m72_192  [color=darkseagreen4, key=1, label=task, style=dashed];
m72_20 -> m72_24  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m72_20 -> m72_26  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m72_20 -> m72_28  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m72_20 -> m72_29  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonToken", style=dashed];
m72_558 -> m72_563  [color=darkseagreen4, key=1, label=string, style=dashed];
m72_558 -> m72_564  [color=darkseagreen4, key=1, label=string, style=dashed];
m72_561 -> m72_564  [color=darkseagreen4, key=1, label=task, style=dashed];
m72_103 -> m72_105  [color=darkseagreen4, key=1, label=ulong, style=dashed];
m72_103 -> m72_107  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m72_509 -> m72_513  [color=darkseagreen4, key=1, label="System.Uri", style=dashed];
m72_509 -> m72_514  [color=darkseagreen4, key=1, label="System.Uri", style=dashed];
m72_511 -> m72_514  [color=darkseagreen4, key=1, label=task, style=dashed];
m72_568 -> m72_570  [color=darkseagreen4, key=1, label=string, style=dashed];
m72_70 -> m72_73  [color=darkseagreen4, key=1, label=string, style=dashed];
m72_70 -> m72_74  [color=darkseagreen4, key=1, label=string, style=dashed];
m72_71 -> m72_74  [color=darkseagreen4, key=1, label=task, style=dashed];
m72_375 -> m72_379  [color=darkseagreen4, key=1, label="System.Guid", style=dashed];
m72_379 -> m72_379  [color=darkseagreen4, key=1, label="System.Guid", style=dashed];
m72_211 -> m72_215  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m72_211 -> m72_216  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m72_213 -> m72_216  [color=darkseagreen4, key=1, label=task, style=dashed];
m72_261 -> m72_265  [color=darkseagreen4, key=1, label="byte[]", style=dashed];
m72_261 -> m72_266  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m72_572 -> m72_578  [color=darkseagreen4, key=1, label=int, style=dashed];
m72_572 -> m72_581  [color=darkseagreen4, key=1, label=int, style=dashed];
m72_572 -> m72_582  [color=darkseagreen4, key=1, label=int, style=dashed];
m72_580 -> m72_582  [color=darkseagreen4, key=1, label=newBuffer, style=dashed];
m72_580 -> m72_585  [color=darkseagreen4, key=1, label=newBuffer, style=dashed];
m72_574 -> m72_578  [color=darkseagreen4, key=1, label=int, style=dashed];
m72_575 -> m72_578  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m72_575 -> m72_579  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m72_575 -> m72_582  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m72_575 -> m72_583  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m72_289 -> m72_295  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m72_289 -> m72_297  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m72_292 -> m72_297  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m72_54 -> m72_59  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m72_54 -> m72_60  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m72_56 -> m72_58  [color=darkseagreen4, key=1, label=currentIndentCount, style=dashed];
m72_56 -> m72_59  [color=darkseagreen4, key=1, label=currentIndentCount, style=dashed];
m72_56 -> m72_60  [color=darkseagreen4, key=1, label=currentIndentCount, style=dashed];
m72_57 -> m72_59  [color=darkseagreen4, key=1, label=newLineLen, style=dashed];
m72_57 -> m72_60  [color=darkseagreen4, key=1, label=newLineLen, style=dashed];
m72_120 -> m72_124  [color=darkseagreen4, key=1, label=long, style=dashed];
m72_121 -> m72_124  [color=darkseagreen4, key=1, label=negative, style=dashed];
m72_172 -> m72_176  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m72_172 -> m72_177  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m72_174 -> m72_177  [color=darkseagreen4, key=1, label=task, style=dashed];
m72_116 -> m72_118  [color=darkseagreen4, key=1, label=ulong, style=dashed];
m72_136 -> m72_140  [color=darkseagreen4, key=1, label=string, style=dashed];
m72_138 -> m72_140  [color=darkseagreen4, key=1, label=task, style=dashed];
m72_147 -> m72_150  [color=darkseagreen4, key=1, label=string, style=dashed];
m72_314 -> m72_319  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m72_314 -> m72_321  [color=darkseagreen4, key=1, label="System.DateTimeOffset", style=dashed];
m72_321 -> m72_321  [color=darkseagreen4, key=1, label="System.DateTimeOffset", style=dashed];
m72_469 -> m72_472  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m72_469 -> m72_473  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m72_469 -> m72_474  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m72_473 -> m72_473  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m72_590 -> m72_1  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_5  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_10  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_14  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_18  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_24  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_26  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_28  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_29  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_33  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_37  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_39  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_40  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_41  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_47  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_52  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_59  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_60  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_65  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_67  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_73  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_74  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_80  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_83  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_87  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_90  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_94  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_97  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_101  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_105  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_107  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_113  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_114  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_118  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_124  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_127  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_130  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_134  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_140  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_150  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_151  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_155  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_159  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_161  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_162  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_163  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_164  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_165  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_166  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_167  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_170  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_176  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_177  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_182  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_185  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_191  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_192  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_196  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_199  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_203  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_204  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_205  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_206  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_209  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_215  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_216  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_220  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_223  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_227  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_228  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_232  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_236  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_240  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_244  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_248  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_252  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_256  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_259  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_263  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_264  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_265  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_266  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_267  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_272  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_276  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_280  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_284  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_287  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_291  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_293  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_295  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_296  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_297  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_298  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_305  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_309  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_312  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_316  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_317  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_319  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_320  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_321  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_322  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_327  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_331  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_334  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_338  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_342  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_346  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_349  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_353  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_357  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_361  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_365  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_369  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_373  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_377  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_378  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_379  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_380  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_384  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_388  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_391  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_395  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_399  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_402  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_406  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_410  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_413  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_418  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_420  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_422  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_423  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_424  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_431  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_435  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_439  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_442  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_446  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_450  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_453  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_459  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_460  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_464  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_467  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_471  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_472  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_473  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_474  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_478  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_482  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_485  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_489  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_493  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_496  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_500  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_504  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_507  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_513  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_514  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_518  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_521  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_525  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_529  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_532  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_536  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_537  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_538  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_539  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_543  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_548  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_552  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_556  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_560  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_563  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_564  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_570  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m72_590 -> m72_583  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextWriter", style=dashed];
m73_14 -> m73_16  [color=darkseagreen4, key=1, label="System.Exception", style=dashed];
m74_2 -> m74_4  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m75_2 -> m75_4  [color=darkseagreen4, key=1, label=result, style=dashed];
m76_4 -> m76_12  [color=darkseagreen4, key=1, label=string, style=dashed];
m76_4 -> m76_16  [color=darkseagreen4, key=1, label=string, style=dashed];
m76_5 -> m76_11  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m76_5 -> m76_8  [color=darkseagreen4, key=1, label=schema, style=dashed];
m76_7 -> m76_15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m76_19 -> m76_12  [color=darkseagreen4, key=1, label=string, style=dashed];
m76_19 -> m76_16  [color=darkseagreen4, key=1, label=string, style=dashed];
m78_14 -> m78_16  [color=darkseagreen4, key=1, label=string, style=dashed];
m79_60 -> m79_69  [color=darkseagreen4, key=1, label=ctorDelegate, style=dashed];
m79_36 -> m79_42  [color=darkseagreen4, key=1, label=toConvert, style=dashed];
m79_68 -> m79_73  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m79_74 -> m79_74  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<TKey, TValue>", style=dashed];
m79_78 -> m79_42  [color=darkseagreen4, key=1, label=toConvert, style=dashed];
m79_79 -> m79_69  [color=darkseagreen4, key=1, label=ctorDelegate, style=dashed];
m80_0 -> m80_2  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m80_0 -> m80_4  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m80_8 -> m80_2  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenWriter", style=dashed];
m80_8 -> m80_4  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenWriter", style=dashed];
m81_0 -> m81_3  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m82_14 -> m82_16  [color=darkseagreen4, key=1, label=string, style=dashed];
m83_472 -> m83_475  [color=darkseagreen4, key=1, label="System.Dynamic.BinaryOperationBinder", style=dashed];
m83_472 -> m83_502  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m83_474 -> m83_502  [color=darkseagreen4, key=1, label=compareValue, style=dashed];
m83_505 -> m83_507  [color=darkseagreen4, key=1, label="out object", style=dashed];
m83_523 -> m83_526  [color=darkseagreen4, key=1, label=convertable, style=dashed];
m83_161 -> m83_163  [color=darkseagreen4, key=1, label=d1, style=dashed];
m83_161 -> m83_165  [color=darkseagreen4, key=1, label=d1, style=dashed];
m83_162 -> m83_165  [color=darkseagreen4, key=1, label=d2, style=dashed];
m83_421 -> m83_424  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m83_284 -> m83_287  [color=darkseagreen4, key=1, label=object, style=dashed];
m83_284 -> m83_289  [color=darkseagreen4, key=1, label=object, style=dashed];
m83_284 -> m83_290  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenType?", style=dashed];
m83_284 -> m83_291  [color=darkseagreen4, key=1, label=object, style=dashed];
m83_284 -> m83_293  [color=darkseagreen4, key=1, label=object, style=dashed];
m83_284 -> m83_295  [color=darkseagreen4, key=1, label=object, style=dashed];
m83_284 -> m83_297  [color=darkseagreen4, key=1, label=object, style=dashed];
m83_284 -> m83_299  [color=darkseagreen4, key=1, label=object, style=dashed];
m83_284 -> m83_301  [color=darkseagreen4, key=1, label=object, style=dashed];
m83_284 -> m83_303  [color=darkseagreen4, key=1, label=object, style=dashed];
m83_284 -> m83_305  [color=darkseagreen4, key=1, label=object, style=dashed];
m83_284 -> m83_307  [color=darkseagreen4, key=1, label=object, style=dashed];
m83_284 -> m83_309  [color=darkseagreen4, key=1, label=object, style=dashed];
m83_284 -> m83_311  [color=darkseagreen4, key=1, label=object, style=dashed];
m83_284 -> m83_313  [color=darkseagreen4, key=1, label=object, style=dashed];
m83_64 -> m83_67  [color=darkseagreen4, key=1, label=object, style=dashed];
m83_64 -> m83_69  [color=darkseagreen4, key=1, label=object, style=dashed];
m83_64 -> m83_71  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenType", style=dashed];
m83_64 -> m83_73  [color=darkseagreen4, key=1, label=object, style=dashed];
m83_64 -> m83_74  [color=darkseagreen4, key=1, label=object, style=dashed];
m83_64 -> m83_75  [color=darkseagreen4, key=1, label=object, style=dashed];
m83_64 -> m83_76  [color=darkseagreen4, key=1, label=object, style=dashed];
m83_64 -> m83_77  [color=darkseagreen4, key=1, label=object, style=dashed];
m83_64 -> m83_78  [color=darkseagreen4, key=1, label=object, style=dashed];
m83_64 -> m83_79  [color=darkseagreen4, key=1, label=object, style=dashed];
m83_64 -> m83_80  [color=darkseagreen4, key=1, label=object, style=dashed];
m83_64 -> m83_81  [color=darkseagreen4, key=1, label=object, style=dashed];
m83_64 -> m83_83  [color=darkseagreen4, key=1, label=object, style=dashed];
m83_64 -> m83_84  [color=darkseagreen4, key=1, label=object, style=dashed];
m83_64 -> m83_85  [color=darkseagreen4, key=1, label=object, style=dashed];
m83_64 -> m83_86  [color=darkseagreen4, key=1, label=object, style=dashed];
m83_64 -> m83_87  [color=darkseagreen4, key=1, label=object, style=dashed];
m83_64 -> m83_99  [color=darkseagreen4, key=1, label=object, style=dashed];
m83_64 -> m83_102  [color=darkseagreen4, key=1, label=object, style=dashed];
m83_64 -> m83_108  [color=darkseagreen4, key=1, label=object, style=dashed];
m83_64 -> m83_120  [color=darkseagreen4, key=1, label=object, style=dashed];
m83_64 -> m83_132  [color=darkseagreen4, key=1, label=object, style=dashed];
m83_64 -> m83_137  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenType", style=dashed];
m83_91 -> m83_93  [color=darkseagreen4, key=1, label=s1, style=dashed];
m83_95 -> m83_97  [color=darkseagreen4, key=1, label=b1, style=dashed];
m83_100 -> m83_105  [color=green, key=1, label=date1, style=dashed];
m83_106 -> m83_111  [color=darkseagreen4, key=1, label=date1, style=dashed];
m83_113 -> m83_118  [color=darkseagreen4, key=1, label=bytes2, style=dashed];
m83_116 -> m83_118  [color=darkseagreen4, key=1, label=bytes1, style=dashed];
m83_122 -> m83_124  [color=darkseagreen4, key=1, label=guid1, style=dashed];
m83_126 -> m83_130  [color=darkseagreen4, key=1, label=uri2, style=dashed];
m83_134 -> m83_136  [color=darkseagreen4, key=1, label=ts1, style=dashed];
m83_111 -> m83_111  [color=darkseagreen4, key=1, label=date1, style=dashed];
m83_124 -> m83_124  [color=darkseagreen4, key=1, label=guid1, style=dashed];
m83_136 -> m83_136  [color=darkseagreen4, key=1, label=ts1, style=dashed];
m83_442 -> m83_450  [color=darkseagreen4, key=1, label=string, style=dashed];
m83_448 -> m83_450  [color=darkseagreen4, key=1, label=formattable, style=dashed];
m83_315 -> m83_319  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenType?", style=dashed];
m83_315 -> m83_323  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenType?", style=dashed];
m83_168 -> m83_170  [color=darkseagreen4, key=1, label="System.Linq.Expressions.ExpressionType", style=dashed];
m83_168 -> m83_173  [color=darkseagreen4, key=1, label=object, style=dashed];
m83_168 -> m83_174  [color=darkseagreen4, key=1, label=object, style=dashed];
m83_168 -> m83_179  [color=darkseagreen4, key=1, label="System.Linq.Expressions.ExpressionType", style=dashed];
m83_168 -> m83_196  [color=darkseagreen4, key=1, label=object, style=dashed];
m83_168 -> m83_197  [color=darkseagreen4, key=1, label=object, style=dashed];
m83_168 -> m83_202  [color=darkseagreen4, key=1, label="System.Linq.Expressions.ExpressionType", style=dashed];
m83_168 -> m83_219  [color=darkseagreen4, key=1, label=object, style=dashed];
m83_168 -> m83_220  [color=darkseagreen4, key=1, label=object, style=dashed];
m83_168 -> m83_225  [color=darkseagreen4, key=1, label="System.Linq.Expressions.ExpressionType", style=dashed];
m83_168 -> m83_242  [color=darkseagreen4, key=1, label=object, style=dashed];
m83_168 -> m83_243  [color=darkseagreen4, key=1, label=object, style=dashed];
m83_168 -> m83_248  [color=darkseagreen4, key=1, label="System.Linq.Expressions.ExpressionType", style=dashed];
m83_265 -> m83_267  [color=darkseagreen4, key=1, label="out object", style=dashed];
m83_459 -> m83_466  [color=darkseagreen4, key=1, label="System.Dynamic.ConvertBinder", style=dashed];
m83_467 -> m83_469  [color=darkseagreen4, key=1, label="out object", style=dashed];
m83_327 -> m83_331  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m83_327 -> m83_335  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m83_327 -> m83_338  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m83_327 -> m83_341  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m83_327 -> m83_344  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m83_327 -> m83_348  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m83_327 -> m83_350  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m83_327 -> m83_352  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m83_327 -> m83_354  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m83_327 -> m83_355  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m83_327 -> m83_359  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m83_327 -> m83_361  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m83_327 -> m83_363  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m83_327 -> m83_364  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m83_327 -> m83_367  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m83_327 -> m83_370  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m83_327 -> m83_374  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m83_327 -> m83_375  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m83_327 -> m83_378  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m83_327 -> m83_381  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m83_327 -> m83_384  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m83_327 -> m83_387  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m83_329 -> m83_331  [color=darkseagreen4, key=1, label=matchingConverter, style=dashed];
m83_43 -> m83_47  [color=darkseagreen4, key=1, label=object, style=dashed];
m83_43 -> m83_50  [color=darkseagreen4, key=1, label=object, style=dashed];
m83_44 -> m83_46  [color=darkseagreen4, key=1, label=result, style=dashed];
m83_44 -> m83_53  [color=darkseagreen4, key=1, label=result, style=dashed];
m83_515 -> m83_518  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m83_35 -> m83_38  [color=darkseagreen4, key=1, label=other, style=dashed];
m83_35 -> m83_40  [color=darkseagreen4, key=1, label=other, style=dashed];
m83_575 -> m83_38  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m83_575 -> m83_40  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m83_575 -> m83_270  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m83_575 -> m83_328  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m83_575 -> m83_331  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m83_575 -> m83_333  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m83_575 -> m83_335  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m83_575 -> m83_338  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m83_575 -> m83_347  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m83_575 -> m83_348  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m83_575 -> m83_349  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m83_575 -> m83_350  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m83_575 -> m83_351  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m83_575 -> m83_352  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m83_575 -> m83_353  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m83_575 -> m83_354  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m83_575 -> m83_355  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m83_575 -> m83_358  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m83_575 -> m83_359  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m83_575 -> m83_360  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m83_575 -> m83_361  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m83_575 -> m83_362  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m83_575 -> m83_363  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m83_575 -> m83_364  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m83_575 -> m83_367  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m83_575 -> m83_370  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m83_575 -> m83_373  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m83_575 -> m83_374  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m83_575 -> m83_375  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m83_575 -> m83_378  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m83_575 -> m83_381  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m83_575 -> m83_384  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m83_575 -> m83_387  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m83_575 -> m83_390  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m83_575 -> m83_415  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m83_575 -> m83_424  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m83_575 -> m83_427  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m83_575 -> m83_430  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m83_575 -> m83_432  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m83_575 -> m83_435  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m83_575 -> m83_437  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m83_575 -> m83_440  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m83_575 -> m83_444  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m83_575 -> m83_446  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m83_575 -> m83_451  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m83_575 -> m83_455  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m83_575 -> m83_513  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m83_575 -> m83_518  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m83_575 -> m83_521  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m83_575 -> m83_530  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m83_575 -> m83_533  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m83_575 -> m83_536  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m83_575 -> m83_539  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m83_575 -> m83_542  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m83_575 -> m83_545  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m83_575 -> m83_548  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m83_575 -> m83_551  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m83_575 -> m83_554  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m83_575 -> m83_557  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m83_575 -> m83_560  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m83_575 -> m83_563  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m83_575 -> m83_566  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m83_575 -> m83_569  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m83_575 -> m83_572  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m84_31 -> m84_33  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m84_31 -> m84_34  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m84_31 -> m84_41  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m84_35 -> m84_45  [color=darkseagreen4, key=1, label=constructorInfo, style=dashed];
m84_18 -> m84_23  [color=darkseagreen4, key=1, label="System.Reflection.MethodBase", style=dashed];
m84_18 -> m84_29  [color=darkseagreen4, key=1, label="System.Reflection.MethodBase", style=dashed];
m84_20 -> m84_22  [color=darkseagreen4, key=1, label=c, style=dashed];
m84_20 -> m84_26  [color=darkseagreen4, key=1, label=c, style=dashed];
m84_23 -> m84_29  [color=darkseagreen4, key=1, label=T, style=dashed];
m84_22 -> m84_26  [color=darkseagreen4, key=1, label="object[]", style=dashed];
m84_55 -> m84_57  [color=darkseagreen4, key=1, label="System.Reflection.FieldInfo", style=dashed];
m84_55 -> m84_60  [color=darkseagreen4, key=1, label="System.Reflection.FieldInfo", style=dashed];
m84_57 -> m84_60  [color=darkseagreen4, key=1, label=T, style=dashed];
m84_71 -> m84_73  [color=darkseagreen4, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m84_71 -> m84_76  [color=darkseagreen4, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m84_73 -> m84_76  [color=darkseagreen4, key=1, label=T, style=dashed];
m84_63 -> m84_65  [color=darkseagreen4, key=1, label="System.Reflection.FieldInfo", style=dashed];
m84_63 -> m84_68  [color=darkseagreen4, key=1, label="System.Reflection.FieldInfo", style=dashed];
m84_65 -> m84_68  [color=darkseagreen4, key=1, label=T, style=dashed];
m84_0 -> m84_5  [color=darkseagreen4, key=1, label="System.Reflection.MethodBase", style=dashed];
m84_0 -> m84_15  [color=darkseagreen4, key=1, label="System.Reflection.MethodBase", style=dashed];
m84_2 -> m84_11  [color=darkseagreen4, key=1, label=c, style=dashed];
m84_5 -> m84_15  [color=darkseagreen4, key=1, label="object[]", style=dashed];
m84_47 -> m84_49  [color=darkseagreen4, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m84_47 -> m84_52  [color=darkseagreen4, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m84_49 -> m84_52  [color=darkseagreen4, key=1, label=T, style=dashed];
m84_79 -> m84_11  [color=darkseagreen4, key=1, label=c, style=dashed];
m84_80 -> m84_15  [color=darkseagreen4, key=1, label="System.Reflection.MethodBase", style=dashed];
m84_81 -> m84_26  [color=darkseagreen4, key=1, label=c, style=dashed];
m84_82 -> m84_29  [color=darkseagreen4, key=1, label="System.Reflection.MethodBase", style=dashed];
m84_83 -> m84_41  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m84_84 -> m84_45  [color=darkseagreen4, key=1, label=constructorInfo, style=dashed];
m84_85 -> m84_52  [color=darkseagreen4, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m84_86 -> m84_60  [color=darkseagreen4, key=1, label="System.Reflection.FieldInfo", style=dashed];
m84_87 -> m84_68  [color=darkseagreen4, key=1, label="System.Reflection.FieldInfo", style=dashed];
m84_88 -> m84_76  [color=darkseagreen4, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m86_32 -> m86_34  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m86_35 -> m86_43  [color=darkseagreen4, key=1, label=leftResults, style=dashed];
m86_39 -> m86_41  [color=darkseagreen4, key=1, label=leftResult, style=dashed];
m86_38 -> m86_40  [color=darkseagreen4, key=1, label=rightResults, style=dashed];
m86_81 -> m86_85  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m86_81 -> m86_89  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m86_81 -> m86_92  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m86_81 -> m86_93  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m86_81 -> m86_94  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JValue", style=dashed];
m86_87 -> m86_104  [color=darkseagreen4, key=1, label=queryValueString, style=dashed];
m86_91 -> m86_93  [color=darkseagreen4, key=1, label=writer, style=dashed];
m86_91 -> m86_94  [color=darkseagreen4, key=1, label=writer, style=dashed];
m86_6 -> m86_10  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m86_6 -> m86_15  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m86_51 -> m86_53  [color=darkseagreen4, key=1, label=leftValue, style=dashed];
m86_51 -> m86_56  [color=darkseagreen4, key=1, label=leftValue, style=dashed];
m86_51 -> m86_59  [color=darkseagreen4, key=1, label=leftValue, style=dashed];
m86_51 -> m86_62  [color=darkseagreen4, key=1, label=leftValue, style=dashed];
m86_51 -> m86_65  [color=darkseagreen4, key=1, label=leftValue, style=dashed];
m86_51 -> m86_68  [color=darkseagreen4, key=1, label=leftValue, style=dashed];
m86_51 -> m86_71  [color=darkseagreen4, key=1, label=leftValue, style=dashed];
m86_52 -> m86_56  [color=darkseagreen4, key=1, label=rightValue, style=dashed];
m86_52 -> m86_59  [color=darkseagreen4, key=1, label=rightValue, style=dashed];
m86_52 -> m86_62  [color=darkseagreen4, key=1, label=rightValue, style=dashed];
m86_52 -> m86_65  [color=darkseagreen4, key=1, label=rightValue, style=dashed];
m86_52 -> m86_68  [color=darkseagreen4, key=1, label=rightValue, style=dashed];
m86_52 -> m86_71  [color=darkseagreen4, key=1, label=rightValue, style=dashed];
m86_21 -> m86_27  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m86_22 -> m86_24  [color=darkseagreen4, key=1, label=resultToken, style=dashed];
m86_25 -> m86_27  [color=darkseagreen4, key=1, label=pathFilters, style=dashed];
m86_114 -> m86_7  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.CompositeExpression", style=dashed];
m86_114 -> m86_9  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.CompositeExpression", style=dashed];
m86_114 -> m86_14  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.CompositeExpression", style=dashed];
m86_115 -> m86_33  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression", style=dashed];
m86_115 -> m86_34  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression", style=dashed];
m86_115 -> m86_41  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression", style=dashed];
m86_115 -> m86_54  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression", style=dashed];
m86_115 -> m86_56  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression", style=dashed];
m86_115 -> m86_59  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression", style=dashed];
m86_115 -> m86_75  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression", style=dashed];
m87_126 -> m87_128  [color=darkseagreen4, key=1, label=properties, style=dashed];
m87_127 -> m87_129  [color=darkseagreen4, key=1, label=c, style=dashed];
m87_128 -> m87_135  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m87_77 -> m87_79  [color=darkseagreen4, key=1, label=schema, style=dashed];
m87_77 -> m87_80  [color=darkseagreen4, key=1, label=schema, style=dashed];
m87_77 -> m87_81  [color=darkseagreen4, key=1, label=schema, style=dashed];
m87_179 -> m87_187  [color=darkseagreen4, key=1, label=schema, style=dashed];
m87_187 -> m87_200  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m87_182 -> m87_185  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m87_182 -> m87_187  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m87_182 -> m87_189  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m87_183 -> m87_185  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m87_190 -> m87_192  [color=darkseagreen4, key=1, label=version, style=dashed];
m87_190 -> m87_193  [color=darkseagreen4, key=1, label=version, style=dashed];
m87_190 -> m87_194  [color=darkseagreen4, key=1, label=version, style=dashed];
m87_186 -> m87_201  [color=darkseagreen4, key=1, label=errors, style=dashed];
m87_186 -> m87_188  [color=darkseagreen4, key=1, label=errors, style=dashed];
m87_105 -> m87_107  [color=darkseagreen4, key=1, label=schema, style=dashed];
m87_105 -> m87_108  [color=darkseagreen4, key=1, label=schema, style=dashed];
m87_95 -> m87_99  [color=darkseagreen4, key=1, label=schema, style=dashed];
m87_2 -> m87_8  [color=darkseagreen4, key=1, label=schema, style=dashed];
m87_142 -> m87_152  [color=darkseagreen4, key=1, label=schema, style=dashed];
m87_152 -> m87_162  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m87_145 -> m87_150  [color=darkseagreen4, key=1, label=temp, style=dashed];
m87_146 -> m87_150  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m87_146 -> m87_152  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m87_147 -> m87_150  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m87_151 -> m87_163  [color=darkseagreen4, key=1, label=errors, style=dashed];
m87_151 -> m87_153  [color=darkseagreen4, key=1, label=errors, style=dashed];
m87_118 -> m87_120  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m87_118 -> m87_121  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m87_40 -> m87_42  [color=darkseagreen4, key=1, label=schema, style=dashed];
m87_40 -> m87_43  [color=darkseagreen4, key=1, label=schema, style=dashed];
m87_40 -> m87_44  [color=darkseagreen4, key=1, label=schema, style=dashed];
m87_67 -> m87_70  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m87_86 -> m87_88  [color=darkseagreen4, key=1, label=schema, style=dashed];
m87_86 -> m87_89  [color=darkseagreen4, key=1, label=schema, style=dashed];
m87_86 -> m87_90  [color=darkseagreen4, key=1, label=schema, style=dashed];
m87_237 -> m87_120  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CustomDirectoryInfoMapper", style=dashed];
m87_237 -> m87_121  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CustomDirectoryInfoMapper", style=dashed];
m87_238 -> m87_163  [color=darkseagreen4, key=1, label=errors, style=dashed];
m87_239 -> m87_201  [color=darkseagreen4, key=1, label=errors, style=dashed];
m88_2 -> m88_4  [color=darkseagreen4, key=1, label=result, style=dashed];
m88_2 -> m88_5  [color=darkseagreen4, key=1, label=result, style=dashed];
m88_19 -> m88_21  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m88_20 -> m88_23  [color=darkseagreen4, key=1, label=property, style=dashed];
m88_31 -> m88_34  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m88_32 -> m88_34  [color=darkseagreen4, key=1, label=token, style=dashed];
m88_32 -> m88_36  [color=darkseagreen4, key=1, label=token, style=dashed];
m88_37 -> m88_39  [color=darkseagreen4, key=1, label=list, style=dashed];
m88_37 -> m88_40  [color=darkseagreen4, key=1, label=list, style=dashed];
m88_37 -> m88_42  [color=darkseagreen4, key=1, label=list, style=dashed];
m88_38 -> m88_41  [color=darkseagreen4, key=1, label=existing, style=dashed];
m88_13 -> m88_15  [color=darkseagreen4, key=1, label=result, style=dashed];
m88_13 -> m88_16  [color=darkseagreen4, key=1, label=result, style=dashed];
m89_507 -> m89_510  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m89_507 -> m89_511  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m89_507 -> m89_512  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m89_507 -> m89_513  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m89_507 -> m89_514  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m89_507 -> m89_515  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m89_507 -> m89_516  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m89_507 -> m89_517  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m89_507 -> m89_520  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m89_507 -> m89_522  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m89_189 -> m89_191  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m89_189 -> m89_192  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m89_189 -> m89_193  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m89_189 -> m89_194  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m89_189 -> m89_195  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m89_189 -> m89_196  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m89_189 -> m89_197  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m89_189 -> m89_198  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m89_189 -> m89_199  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m89_189 -> m89_200  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m89_189 -> m89_201  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m89_189 -> m89_202  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m89_189 -> m89_203  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m89_189 -> m89_204  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m89_156 -> m89_158  [color=darkseagreen4, key=1, label=string, style=dashed];
m89_453 -> m89_481  [color=darkseagreen4, key=1, label=string, style=dashed];
m89_453 -> m89_486  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m89_453 -> m89_488  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m89_453 -> m89_493  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m89_453 -> m89_494  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m89_453 -> m89_495  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m89_453 -> m89_496  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m89_453 -> m89_497  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m89_453 -> m89_498  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m89_453 -> m89_499  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m89_479 -> m89_489  [color=darkseagreen4, key=1, label=attributeNameValues, style=dashed];
m89_487 -> m89_492  [color=darkseagreen4, key=1, label=element, style=dashed];
m89_487 -> m89_494  [color=darkseagreen4, key=1, label=element, style=dashed];
m89_487 -> m89_498  [color=darkseagreen4, key=1, label=element, style=dashed];
m89_316 -> m89_319  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m89_316 -> m89_335  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m89_316 -> m89_337  [color=darkseagreen4, key=1, label=bool, style=dashed];
m89_316 -> m89_338  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m89_316 -> m89_339  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m89_316 -> m89_342  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m89_316 -> m89_344  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m89_317 -> m89_323  [color=darkseagreen4, key=1, label=nodesGroupedByName, style=dashed];
m89_317 -> m89_325  [color=darkseagreen4, key=1, label=nodesGroupedByName, style=dashed];
m89_317 -> m89_328  [color=darkseagreen4, key=1, label=nodesGroupedByName, style=dashed];
m89_320 -> m89_326  [color=darkseagreen4, key=1, label=childNode, style=dashed];
m89_321 -> m89_323  [color=darkseagreen4, key=1, label=nodeName, style=dashed];
m89_321 -> m89_325  [color=darkseagreen4, key=1, label=nodeName, style=dashed];
m89_318 -> m89_327  [color=darkseagreen4, key=1, label=i, style=dashed];
m89_327 -> m89_327  [color=darkseagreen4, key=1, label=i, style=dashed];
m89_324 -> m89_326  [color=darkseagreen4, key=1, label=nodes, style=dashed];
m89_329 -> m89_331  [color=darkseagreen4, key=1, label=groupedNodes, style=dashed];
m89_329 -> m89_335  [color=darkseagreen4, key=1, label=groupedNodes, style=dashed];
m89_329 -> m89_341  [color=darkseagreen4, key=1, label=groupedNodes, style=dashed];
m89_329 -> m89_342  [color=darkseagreen4, key=1, label=groupedNodes, style=dashed];
m89_336 -> m89_338  [color=darkseagreen4, key=1, label=elementNames, style=dashed];
m89_340 -> m89_342  [color=darkseagreen4, key=1, label=i, style=dashed];
m89_340 -> m89_343  [color=darkseagreen4, key=1, label=i, style=dashed];
m89_343 -> m89_343  [color=darkseagreen4, key=1, label=i, style=dashed];
m89_73 -> m89_76  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m89_73 -> m89_78  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m89_73 -> m89_79  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m89_171 -> m89_176  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m89_172 -> m89_175  [color=darkseagreen4, key=1, label=declarationWrapper, style=dashed];
m89_167 -> m89_169  [color=darkseagreen4, key=1, label=string, style=dashed];
m89_475 -> m89_602  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m89_475 -> m89_603  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m89_475 -> m89_605  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m89_475 -> m89_608  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m89_475 -> m89_611  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m89_475 -> m89_613  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m89_475 -> m89_615  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m89_475 -> m89_617  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m89_457 -> m89_460  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m89_457 -> m89_462  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m89_457 -> m89_464  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m89_457 -> m89_466  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m89_457 -> m89_467  [color=darkseagreen4, key=1, label=string, style=dashed];
m89_457 -> m89_468  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m89_457 -> m89_469  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m89_457 -> m89_470  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m89_457 -> m89_472  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m89_274 -> m89_277  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m89_274 -> m89_278  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m89_275 -> m89_277  [color=darkseagreen4, key=1, label=prefix, style=dashed];
m89_665 -> m89_668  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m89_178 -> m89_208  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m89_308 -> m89_313  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m89_282 -> m89_285  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m89_282 -> m89_286  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m89_282 -> m89_293  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m89_282 -> m89_295  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m89_282 -> m89_304  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m89_419 -> m89_423  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m89_419 -> m89_424  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m89_419 -> m89_429  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m89_419 -> m89_430  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m89_419 -> m89_436  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m89_419 -> m89_437  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m89_419 -> m89_440  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m89_419 -> m89_441  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m89_419 -> m89_442  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m89_419 -> m89_443  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m89_420 -> m89_440  [color=darkseagreen4, key=1, label=manager, style=dashed];
m89_420 -> m89_442  [color=darkseagreen4, key=1, label=manager, style=dashed];
m89_421 -> m89_435  [color=darkseagreen4, key=1, label=document, style=dashed];
m89_421 -> m89_440  [color=darkseagreen4, key=1, label=document, style=dashed];
m89_421 -> m89_442  [color=darkseagreen4, key=1, label=document, style=dashed];
m89_421 -> m89_447  [color=darkseagreen4, key=1, label=document, style=dashed];
m89_422 -> m89_435  [color=darkseagreen4, key=1, label=rootNode, style=dashed];
m89_422 -> m89_440  [color=darkseagreen4, key=1, label=rootNode, style=dashed];
m89_422 -> m89_442  [color=darkseagreen4, key=1, label=rootNode, style=dashed];
m89_444 -> m89_446  [color=darkseagreen4, key=1, label=element, style=dashed];
m89_427 -> m89_435  [color=darkseagreen4, key=1, label=document, style=dashed];
m89_427 -> m89_440  [color=darkseagreen4, key=1, label=document, style=dashed];
m89_427 -> m89_442  [color=darkseagreen4, key=1, label=document, style=dashed];
m89_427 -> m89_447  [color=darkseagreen4, key=1, label=document, style=dashed];
m89_428 -> m89_435  [color=darkseagreen4, key=1, label=rootNode, style=dashed];
m89_428 -> m89_440  [color=darkseagreen4, key=1, label=rootNode, style=dashed];
m89_428 -> m89_442  [color=darkseagreen4, key=1, label=rootNode, style=dashed];
m89_433 -> m89_435  [color=darkseagreen4, key=1, label=document, style=dashed];
m89_433 -> m89_440  [color=darkseagreen4, key=1, label=document, style=dashed];
m89_433 -> m89_442  [color=darkseagreen4, key=1, label=document, style=dashed];
m89_433 -> m89_447  [color=darkseagreen4, key=1, label=document, style=dashed];
m89_434 -> m89_440  [color=darkseagreen4, key=1, label=rootNode, style=dashed];
m89_434 -> m89_442  [color=darkseagreen4, key=1, label=rootNode, style=dashed];
m89_476 -> m89_534  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m89_476 -> m89_536  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m89_476 -> m89_537  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m89_476 -> m89_540  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlDocument", style=dashed];
m89_476 -> m89_549  [color=darkseagreen4, key=1, label=string, style=dashed];
m89_476 -> m89_543  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlDocument", style=dashed];
m89_533 -> m89_537  [color=darkseagreen4, key=1, label=nestedArrayElement, style=dashed];
m89_533 -> m89_540  [color=darkseagreen4, key=1, label=nestedArrayElement, style=dashed];
m89_542 -> m89_548  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m89_535 -> m89_538  [color=darkseagreen4, key=1, label=count, style=dashed];
m89_535 -> m89_541  [color=darkseagreen4, key=1, label=count, style=dashed];
m89_538 -> m89_538  [color=darkseagreen4, key=1, label=count, style=dashed];
m89_538 -> m89_541  [color=darkseagreen4, key=1, label=count, style=dashed];
m89_596 -> m89_654  [color=darkseagreen4, key=1, label=string, style=dashed];
m89_596 -> m89_657  [color=darkseagreen4, key=1, label=string, style=dashed];
m89_660 -> m89_662  [color=darkseagreen4, key=1, label="out string", style=dashed];
m89_671 -> m89_674  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m89_47 -> m89_49  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m89_545 -> m89_552  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlElement", style=dashed];
m89_545 -> m89_553  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlElement", style=dashed];
m89_545 -> m89_554  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlElement", style=dashed];
m89_230 -> m89_235  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m89_230 -> m89_236  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m89_230 -> m89_238  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m89_231 -> m89_233  [color=darkseagreen4, key=1, label=node, style=dashed];
m89_231 -> m89_236  [color=darkseagreen4, key=1, label=node, style=dashed];
m89_232 -> m89_236  [color=darkseagreen4, key=1, label=manager, style=dashed];
m89_240 -> m89_248  [color=darkseagreen4, key=1, label=object, style=dashed];
m89_240 -> m89_249  [color=darkseagreen4, key=1, label=object, style=dashed];
m89_240 -> m89_250  [color=darkseagreen4, key=1, label=object, style=dashed];
m89_41 -> m89_43  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m89_84 -> m89_87  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m89_245 -> m89_355  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m89_245 -> m89_357  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m89_245 -> m89_417  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m89_245 -> m89_358  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m89_245 -> m89_359  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m89_245 -> m89_362  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m89_245 -> m89_363  [color=darkseagreen4, key=1, label=bool, style=dashed];
m89_245 -> m89_364  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m89_245 -> m89_365  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m89_245 -> m89_366  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m89_245 -> m89_367  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m89_245 -> m89_368  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m89_245 -> m89_369  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m89_245 -> m89_371  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m89_245 -> m89_372  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m89_245 -> m89_374  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m89_245 -> m89_375  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m89_245 -> m89_377  [color=darkseagreen4, key=1, label=bool, style=dashed];
m89_245 -> m89_378  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m89_245 -> m89_385  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m89_245 -> m89_387  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m89_245 -> m89_388  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m89_245 -> m89_390  [color=darkseagreen4, key=1, label=bool, style=dashed];
m89_245 -> m89_391  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m89_245 -> m89_392  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m89_245 -> m89_395  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m89_245 -> m89_396  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m89_245 -> m89_398  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m89_245 -> m89_399  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m89_245 -> m89_401  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m89_245 -> m89_402  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m89_245 -> m89_404  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m89_245 -> m89_405  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m89_245 -> m89_406  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m89_245 -> m89_407  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m89_357 -> m89_416  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m89_359 -> m89_362  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m89_394 -> m89_397  [color=darkseagreen4, key=1, label=declaration, style=dashed];
m89_394 -> m89_399  [color=darkseagreen4, key=1, label=declaration, style=dashed];
m89_394 -> m89_400  [color=darkseagreen4, key=1, label=declaration, style=dashed];
m89_394 -> m89_402  [color=darkseagreen4, key=1, label=declaration, style=dashed];
m89_394 -> m89_403  [color=darkseagreen4, key=1, label=declaration, style=dashed];
m89_394 -> m89_405  [color=darkseagreen4, key=1, label=declaration, style=dashed];
m89_370 -> m89_372  [color=darkseagreen4, key=1, label=i, style=dashed];
m89_370 -> m89_373  [color=darkseagreen4, key=1, label=i, style=dashed];
m89_373 -> m89_373  [color=darkseagreen4, key=1, label=i, style=dashed];
m89_243 -> m89_264  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m89_243 -> m89_267  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m89_254 -> m89_258  [color=darkseagreen4, key=1, label=parentElements, style=dashed];
m89_254 -> m89_260  [color=darkseagreen4, key=1, label=parentElements, style=dashed];
m89_254 -> m89_261  [color=darkseagreen4, key=1, label=parentElements, style=dashed];
m89_254 -> m89_262  [color=darkseagreen4, key=1, label=parentElements, style=dashed];
m89_254 -> m89_263  [color=darkseagreen4, key=1, label=parentElements, style=dashed];
m89_263 -> m89_265  [color=darkseagreen4, key=1, label=parentElement, style=dashed];
m89_256 -> m89_260  [color=darkseagreen4, key=1, label=parent, style=dashed];
m89_259 -> m89_261  [color=darkseagreen4, key=1, label=parentElements, style=dashed];
m89_259 -> m89_262  [color=darkseagreen4, key=1, label=parentElements, style=dashed];
m89_259 -> m89_263  [color=darkseagreen4, key=1, label=parentElements, style=dashed];
m89_265 -> m89_267  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m89_501 -> m89_559  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m89_501 -> m89_560  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m89_501 -> m89_561  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m89_501 -> m89_570  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m89_501 -> m89_575  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m89_501 -> m89_578  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m89_501 -> m89_583  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m89_501 -> m89_587  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m89_501 -> m89_593  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m89_556 -> m89_572  [color=darkseagreen4, key=1, label=attributeNameValues, style=dashed];
m89_556 -> m89_586  [color=darkseagreen4, key=1, label=attributeNameValues, style=dashed];
m89_556 -> m89_588  [color=darkseagreen4, key=1, label=attributeNameValues, style=dashed];
m89_556 -> m89_594  [color=darkseagreen4, key=1, label=attributeNameValues, style=dashed];
m89_571 -> m89_575  [color=darkseagreen4, key=1, label=attributeValue, style=dashed];
m89_579 -> m89_588  [color=darkseagreen4, key=1, label=attributeValue, style=dashed];
m89_580 -> m89_588  [color=darkseagreen4, key=1, label=jsonPrefix, style=dashed];
m89_557 -> m89_560  [color=darkseagreen4, key=1, label=finishedAttributes, style=dashed];
m89_558 -> m89_560  [color=darkseagreen4, key=1, label=finishedElement, style=dashed];
m89_565 -> m89_567  [color=darkseagreen4, key=1, label=firstChar, style=dashed];
m89_569 -> m89_572  [color=darkseagreen4, key=1, label=attributeName, style=dashed];
m89_569 -> m89_574  [color=darkseagreen4, key=1, label=attributeName, style=dashed];
m89_577 -> m89_588  [color=darkseagreen4, key=1, label=attributeName, style=dashed];
m89_585 -> m89_587  [color=darkseagreen4, key=1, label=jsonPrefix, style=dashed];
m89_585 -> m89_588  [color=darkseagreen4, key=1, label=jsonPrefix, style=dashed];
m89_455 -> m89_625  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlDocument", style=dashed];
m89_455 -> m89_628  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m89_455 -> m89_629  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m89_455 -> m89_631  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m89_455 -> m89_632  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m89_455 -> m89_636  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlDocument", style=dashed];
m89_455 -> m89_637  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m89_455 -> m89_640  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m89_455 -> m89_641  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m89_455 -> m89_643  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m89_455 -> m89_647  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m89_455 -> m89_648  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m89_627 -> m89_632  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m89_627 -> m89_651  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m89_627 -> m89_637  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m89_635 -> m89_650  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m89_639 -> m89_641  [color=darkseagreen4, key=1, label=constructorName, style=dashed];
m89_630 -> m89_633  [color=darkseagreen4, key=1, label=count, style=dashed];
m89_630 -> m89_634  [color=darkseagreen4, key=1, label=count, style=dashed];
m89_633 -> m89_633  [color=darkseagreen4, key=1, label=count, style=dashed];
m89_633 -> m89_634  [color=darkseagreen4, key=1, label=count, style=dashed];
m89_678 -> m89_4  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
m89_678 -> m89_9  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
m89_678 -> m89_13  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
m89_678 -> m89_17  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
m89_678 -> m89_21  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
m89_678 -> m89_25  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
m89_678 -> m89_29  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
m89_678 -> m89_33  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
m89_678 -> m89_38  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
m89_679 -> m89_56  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlElementWrapper", style=dashed];
m89_679 -> m89_60  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlElementWrapper", style=dashed];
m89_681 -> m89_70  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeWrapper", style=dashed];
m89_681 -> m89_82  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeWrapper", style=dashed];
m89_681 -> m89_86  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeWrapper", style=dashed];
m89_683 -> m89_176  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XDocumentWrapper", style=dashed];
m89_684 -> m89_187  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XContainerWrapper", style=dashed];
m89_684 -> m89_207  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XContainerWrapper", style=dashed];
m89_686 -> m89_221  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XElementWrapper", style=dashed];
m89_686 -> m89_228  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XElementWrapper", style=dashed];
m89_687 -> m89_233  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m89_687 -> m89_234  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m89_687 -> m89_236  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m89_687 -> m89_237  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m89_687 -> m89_293  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m89_687 -> m89_295  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m89_687 -> m89_335  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m89_687 -> m89_342  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m89_687 -> m89_355  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m89_687 -> m89_357  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m89_687 -> m89_358  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m89_687 -> m89_364  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m89_687 -> m89_365  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m89_687 -> m89_372  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m89_687 -> m89_374  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m89_687 -> m89_391  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m89_687 -> m89_395  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m89_687 -> m89_439  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m89_687 -> m89_440  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m89_687 -> m89_442  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m89_687 -> m89_468  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m89_687 -> m89_470  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m89_687 -> m89_472  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m89_687 -> m89_494  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m89_687 -> m89_498  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m89_687 -> m89_537  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m89_687 -> m89_539  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m89_687 -> m89_540  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m89_687 -> m89_541  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m89_687 -> m89_543  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m89_687 -> m89_574  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m89_687 -> m89_632  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m89_687 -> m89_634  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m89_687 -> m89_636  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m89_687 -> m89_637  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m89_687 -> m89_641  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m89_688 -> m89_417  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m89_689 -> m89_549  [color=darkseagreen4, key=1, label=string, style=dashed];
m89_690 -> m89_651  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m90_11 -> m90_4  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.SerializationBinderAdapter", style=dashed];
m90_11 -> m90_8  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.SerializationBinderAdapter", style=dashed];
m91_183 -> m91_185  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m91_127 -> m91_129  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m91_202 -> m91_204  [color=darkseagreen4, key=1, label=f, style=dashed];
m91_134 -> m91_136  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m91_278 -> m91_278  [color=darkseagreen4, key=1, label=dateTimeOffset, style=dashed];
m91_113 -> m91_116  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m91_11 -> m91_13  [color=darkseagreen4, key=1, label=v, style=dashed];
m91_11 -> m91_15  [color=darkseagreen4, key=1, label=v, style=dashed];
m91_11 -> m91_16  [color=darkseagreen4, key=1, label=v, style=dashed];
m91_11 -> m91_18  [color=darkseagreen4, key=1, label=v, style=dashed];
m91_11 -> m91_19  [color=darkseagreen4, key=1, label=v, style=dashed];
m91_11 -> m91_21  [color=darkseagreen4, key=1, label=v, style=dashed];
m91_11 -> m91_22  [color=darkseagreen4, key=1, label=v, style=dashed];
m91_11 -> m91_24  [color=darkseagreen4, key=1, label=v, style=dashed];
m91_11 -> m91_25  [color=darkseagreen4, key=1, label=v, style=dashed];
m91_11 -> m91_27  [color=darkseagreen4, key=1, label=v, style=dashed];
m91_11 -> m91_28  [color=darkseagreen4, key=1, label=v, style=dashed];
m91_11 -> m91_31  [color=darkseagreen4, key=1, label=v, style=dashed];
m91_11 -> m91_32  [color=darkseagreen4, key=1, label=v, style=dashed];
m91_11 -> m91_34  [color=darkseagreen4, key=1, label=v, style=dashed];
m91_11 -> m91_35  [color=darkseagreen4, key=1, label=v, style=dashed];
m91_11 -> m91_37  [color=darkseagreen4, key=1, label=v, style=dashed];
m91_11 -> m91_38  [color=darkseagreen4, key=1, label=v, style=dashed];
m91_11 -> m91_40  [color=darkseagreen4, key=1, label=v, style=dashed];
m91_11 -> m91_41  [color=darkseagreen4, key=1, label=v, style=dashed];
m91_11 -> m91_44  [color=darkseagreen4, key=1, label=v, style=dashed];
m91_11 -> m91_45  [color=darkseagreen4, key=1, label=v, style=dashed];
m91_11 -> m91_48  [color=darkseagreen4, key=1, label=v, style=dashed];
m91_11 -> m91_49  [color=darkseagreen4, key=1, label=v, style=dashed];
m91_29 -> m91_31  [color=darkseagreen4, key=1, label=data, style=dashed];
m91_42 -> m91_44  [color=darkseagreen4, key=1, label=g, style=dashed];
m91_46 -> m91_48  [color=darkseagreen4, key=1, label=i, style=dashed];
m91_1 -> m91_3  [color=darkseagreen4, key=1, label=v, style=dashed];
m91_190 -> m91_192  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m91_107 -> m91_109  [color=darkseagreen4, key=1, label=v, style=dashed];
m91_209 -> m91_222  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m91_209 -> m91_225  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m91_209 -> m91_211  [color=darkseagreen4, key=1, label=orderedValues, style=dashed];
m91_209 -> m91_212  [color=darkseagreen4, key=1, label=orderedValues, style=dashed];
m91_141 -> m91_143  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m91_57 -> m91_59  [color=darkseagreen4, key=1, label=commentValue, style=dashed];
m91_57 -> m91_61  [color=darkseagreen4, key=1, label=commentValue, style=dashed];
m91_57 -> m91_62  [color=darkseagreen4, key=1, label=commentValue, style=dashed];
m91_149 -> m91_151  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m91_66 -> m91_68  [color=darkseagreen4, key=1, label=stringValue, style=dashed];
m91_410 -> m91_238  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Linq.JValueTests", style=dashed];
m91_410 -> m91_248  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Linq.JValueTests", style=dashed];
m91_410 -> m91_250  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Linq.JValueTests", style=dashed];
m92_16 -> m92_23  [color=darkseagreen4, key=1, label=TKey, style=dashed];
m92_17 -> m92_29  [color=darkseagreen4, key=1, label=value, style=dashed];
m92_9 -> m92_11  [color=darkseagreen4, key=1, label=TKey, style=dashed];
m92_9 -> m92_12  [color=darkseagreen4, key=1, label=TKey, style=dashed];
m92_0 -> m92_2  [color=darkseagreen4, key=1, label="System.Func<TKey, TValue>", style=dashed];
m92_34 -> m92_11  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>", style=dashed];
m92_34 -> m92_12  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>", style=dashed];
m92_34 -> m92_18  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>", style=dashed];
m92_34 -> m92_19  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>", style=dashed];
m92_34 -> m92_23  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>", style=dashed];
m93_19 -> m93_23  [color=darkseagreen4, key=1, label="Newtonsoft.Json.IJsonLineInfo", style=dashed];
m93_19 -> m93_28  [color=darkseagreen4, key=1, label=string, style=dashed];
m93_20 -> m93_28  [color=darkseagreen4, key=1, label=string, style=dashed];
m93_24 -> m93_28  [color=darkseagreen4, key=1, label=lineNumber, style=dashed];
m93_26 -> m93_28  [color=darkseagreen4, key=1, label=lineNumber, style=dashed];
m94_172 -> m94_174  [color=darkseagreen4, key=1, label="System.Guid?", style=dashed];
m94_172 -> m94_175  [color=darkseagreen4, key=1, label="System.Guid?", style=dashed];
m94_172 -> m94_176  [color=darkseagreen4, key=1, label="System.Guid?", style=dashed];
m94_291 -> m94_293  [color=darkseagreen4, key=1, label=ulong, style=dashed];
m94_291 -> m94_294  [color=darkseagreen4, key=1, label=ulong, style=dashed];
m94_43 -> m94_45  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m94_43 -> m94_46  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m94_43 -> m94_47  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m94_315 -> m94_317  [color=darkseagreen4, key=1, label=ushort, style=dashed];
m94_315 -> m94_318  [color=darkseagreen4, key=1, label=ushort, style=dashed];
m94_268 -> m94_270  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m94_268 -> m94_271  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m94_268 -> m94_272  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m94_120 -> m94_122  [color=darkseagreen4, key=1, label=double, style=dashed];
m94_120 -> m94_123  [color=darkseagreen4, key=1, label=double, style=dashed];
m94_246 -> m94_248  [color=darkseagreen4, key=1, label="short?", style=dashed];
m94_246 -> m94_249  [color=darkseagreen4, key=1, label="short?", style=dashed];
m94_246 -> m94_250  [color=darkseagreen4, key=1, label="short?", style=dashed];
m94_156 -> m94_158  [color=darkseagreen4, key=1, label="float?", style=dashed];
m94_156 -> m94_159  [color=darkseagreen4, key=1, label="float?", style=dashed];
m94_156 -> m94_160  [color=darkseagreen4, key=1, label="float?", style=dashed];
m94_224 -> m94_226  [color=darkseagreen4, key=1, label=sbyte, style=dashed];
m94_224 -> m94_227  [color=darkseagreen4, key=1, label=sbyte, style=dashed];
m94_403 -> m94_405  [color=darkseagreen4, key=1, label=string, style=dashed];
m94_403 -> m94_406  [color=darkseagreen4, key=1, label=string, style=dashed];
m94_195 -> m94_197  [color=darkseagreen4, key=1, label=long, style=dashed];
m94_195 -> m94_198  [color=darkseagreen4, key=1, label=long, style=dashed];
m94_90 -> m94_92  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m94_90 -> m94_93  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m94_149 -> m94_151  [color=darkseagreen4, key=1, label=float, style=dashed];
m94_149 -> m94_152  [color=darkseagreen4, key=1, label=float, style=dashed];
m94_306 -> m94_308  [color=darkseagreen4, key=1, label="System.Uri", style=dashed];
m94_306 -> m94_309  [color=darkseagreen4, key=1, label="System.Uri", style=dashed];
m94_306 -> m94_311  [color=darkseagreen4, key=1, label="System.Uri", style=dashed];
m94_19 -> m94_21  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m94_19 -> m94_22  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m94_231 -> m94_233  [color=darkseagreen4, key=1, label="sbyte?", style=dashed];
m94_231 -> m94_234  [color=darkseagreen4, key=1, label="sbyte?", style=dashed];
m94_231 -> m94_235  [color=darkseagreen4, key=1, label="sbyte?", style=dashed];
m94_377 -> m94_379  [color=darkseagreen4, key=1, label=string, style=dashed];
m94_377 -> m94_380  [color=darkseagreen4, key=1, label=string, style=dashed];
m94_337 -> m94_339  [color=darkseagreen4, key=1, label=string, style=dashed];
m94_337 -> m94_340  [color=darkseagreen4, key=1, label=string, style=dashed];
m94_180 -> m94_182  [color=darkseagreen4, key=1, label=int, style=dashed];
m94_180 -> m94_183  [color=darkseagreen4, key=1, label=int, style=dashed];
m94_97 -> m94_99  [color=darkseagreen4, key=1, label="System.DateTime?", style=dashed];
m94_97 -> m94_100  [color=darkseagreen4, key=1, label="System.DateTime?", style=dashed];
m94_97 -> m94_101  [color=darkseagreen4, key=1, label="System.DateTime?", style=dashed];
m94_298 -> m94_300  [color=darkseagreen4, key=1, label="ulong?", style=dashed];
m94_298 -> m94_301  [color=darkseagreen4, key=1, label="ulong?", style=dashed];
m94_298 -> m94_302  [color=darkseagreen4, key=1, label="ulong?", style=dashed];
m94_81 -> m94_83  [color=darkseagreen4, key=1, label="byte[]", style=dashed];
m94_81 -> m94_84  [color=darkseagreen4, key=1, label="byte[]", style=dashed];
m94_81 -> m94_86  [color=darkseagreen4, key=1, label="byte[]", style=dashed];
m94_127 -> m94_129  [color=darkseagreen4, key=1, label="double?", style=dashed];
m94_127 -> m94_130  [color=darkseagreen4, key=1, label="double?", style=dashed];
m94_127 -> m94_131  [color=darkseagreen4, key=1, label="double?", style=dashed];
m94_66 -> m94_68  [color=darkseagreen4, key=1, label=char, style=dashed];
m94_66 -> m94_69  [color=darkseagreen4, key=1, label=char, style=dashed];
m94_165 -> m94_167  [color=darkseagreen4, key=1, label="System.Guid", style=dashed];
m94_165 -> m94_168  [color=darkseagreen4, key=1, label="System.Guid", style=dashed];
m94_36 -> m94_38  [color=darkseagreen4, key=1, label=bool, style=dashed];
m94_36 -> m94_39  [color=darkseagreen4, key=1, label=bool, style=dashed];
m94_330 -> m94_332  [color=darkseagreen4, key=1, label=string, style=dashed];
m94_330 -> m94_333  [color=darkseagreen4, key=1, label=string, style=dashed];
m94_58 -> m94_60  [color=darkseagreen4, key=1, label="byte?", style=dashed];
m94_58 -> m94_61  [color=darkseagreen4, key=1, label="byte?", style=dashed];
m94_58 -> m94_62  [color=darkseagreen4, key=1, label="byte?", style=dashed];
m94_105 -> m94_107  [color=darkseagreen4, key=1, label="System.DateTimeOffset", style=dashed];
m94_105 -> m94_108  [color=darkseagreen4, key=1, label="System.DateTimeOffset", style=dashed];
m94_261 -> m94_263  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m94_261 -> m94_264  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m94_357 -> m94_359  [color=darkseagreen4, key=1, label=string, style=dashed];
m94_357 -> m94_360  [color=darkseagreen4, key=1, label=string, style=dashed];
m94_73 -> m94_75  [color=darkseagreen4, key=1, label="char?", style=dashed];
m94_73 -> m94_76  [color=darkseagreen4, key=1, label="char?", style=dashed];
m94_73 -> m94_77  [color=darkseagreen4, key=1, label="char?", style=dashed];
m94_51 -> m94_53  [color=darkseagreen4, key=1, label=byte, style=dashed];
m94_51 -> m94_54  [color=darkseagreen4, key=1, label=byte, style=dashed];
m94_397 -> m94_399  [color=darkseagreen4, key=1, label=string, style=dashed];
m94_239 -> m94_241  [color=darkseagreen4, key=1, label=short, style=dashed];
m94_239 -> m94_242  [color=darkseagreen4, key=1, label=short, style=dashed];
m94_322 -> m94_324  [color=darkseagreen4, key=1, label="ushort?", style=dashed];
m94_322 -> m94_325  [color=darkseagreen4, key=1, label="ushort?", style=dashed];
m94_322 -> m94_326  [color=darkseagreen4, key=1, label="ushort?", style=dashed];
m94_276 -> m94_278  [color=darkseagreen4, key=1, label=uint, style=dashed];
m94_276 -> m94_279  [color=darkseagreen4, key=1, label=uint, style=dashed];
m94_370 -> m94_372  [color=darkseagreen4, key=1, label=string, style=dashed];
m94_370 -> m94_373  [color=darkseagreen4, key=1, label=string, style=dashed];
m94_202 -> m94_204  [color=darkseagreen4, key=1, label="long?", style=dashed];
m94_202 -> m94_205  [color=darkseagreen4, key=1, label="long?", style=dashed];
m94_202 -> m94_206  [color=darkseagreen4, key=1, label="long?", style=dashed];
m94_187 -> m94_189  [color=darkseagreen4, key=1, label="int?", style=dashed];
m94_187 -> m94_190  [color=darkseagreen4, key=1, label="int?", style=dashed];
m94_187 -> m94_191  [color=darkseagreen4, key=1, label="int?", style=dashed];
m94_112 -> m94_114  [color=darkseagreen4, key=1, label="System.DateTimeOffset?", style=dashed];
m94_112 -> m94_115  [color=darkseagreen4, key=1, label="System.DateTimeOffset?", style=dashed];
m94_112 -> m94_116  [color=darkseagreen4, key=1, label="System.DateTimeOffset?", style=dashed];
m94_210 -> m94_212  [color=darkseagreen4, key=1, label=object, style=dashed];
m94_210 -> m94_213  [color=darkseagreen4, key=1, label=object, style=dashed];
m94_210 -> m94_215  [color=darkseagreen4, key=1, label=object, style=dashed];
m94_210 -> m94_216  [color=darkseagreen4, key=1, label=object, style=dashed];
m94_210 -> m94_217  [color=darkseagreen4, key=1, label=object, style=dashed];
m94_210 -> m94_219  [color=darkseagreen4, key=1, label=object, style=dashed];
m94_26 -> m94_28  [color=darkseagreen4, key=1, label="decimal?", style=dashed];
m94_26 -> m94_29  [color=darkseagreen4, key=1, label="decimal?", style=dashed];
m94_26 -> m94_30  [color=darkseagreen4, key=1, label="decimal?", style=dashed];
m94_283 -> m94_285  [color=darkseagreen4, key=1, label="uint?", style=dashed];
m94_283 -> m94_286  [color=darkseagreen4, key=1, label="uint?", style=dashed];
m94_283 -> m94_287  [color=darkseagreen4, key=1, label="uint?", style=dashed];
m94_254 -> m94_256  [color=darkseagreen4, key=1, label=string, style=dashed];
m94_254 -> m94_257  [color=darkseagreen4, key=1, label=string, style=dashed];
m94_423 -> m94_3  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_16  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_20  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_21  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_22  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_27  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_28  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_30  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_31  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_37  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_38  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_39  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_44  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_45  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_47  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_48  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_52  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_53  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_54  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_59  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_60  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_62  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_63  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_67  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_68  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_69  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_74  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_75  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_77  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_78  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_82  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_83  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_85  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_86  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_91  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_92  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_93  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_98  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_99  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_101  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_102  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_106  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_107  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_108  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_113  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_114  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_116  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_117  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_121  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_122  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_123  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_128  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_129  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_131  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_132  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_137  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_138  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_139  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_143  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_144  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_145  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_150  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_151  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_152  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_157  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_158  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_160  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_161  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_166  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_167  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_168  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_173  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_174  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_176  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_177  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_181  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_182  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_183  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_188  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_189  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_191  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_192  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_196  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_197  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_198  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_203  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_204  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_206  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_207  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_212  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_213  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_214  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_215  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_216  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_218  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_219  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_225  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_226  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_227  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_232  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_233  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_235  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_236  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_240  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_241  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_242  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_247  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_248  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_250  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_251  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_255  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_256  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_257  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_262  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_263  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_264  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_269  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_270  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_272  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_273  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_277  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_278  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_279  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_284  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_285  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_287  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_288  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_292  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_293  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_294  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_299  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_300  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_302  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_303  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_307  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_308  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_310  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_311  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_316  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_317  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_318  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_323  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_324  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_326  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_327  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_331  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_332  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_333  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_338  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_339  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_340  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_345  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_346  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_347  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_352  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_353  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_354  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_358  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_359  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_360  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_365  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_366  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_367  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_371  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_372  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_373  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_378  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_379  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_380  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_385  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_386  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_387  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_392  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_393  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_394  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_398  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_399  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_400  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_404  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_405  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_406  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_411  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_412  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_413  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_418  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m94_423 -> m94_419  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.TraceJsonWriter", style=dashed];
m96_12 -> m96_16  [color=darkseagreen4, key=1, label=options, style=dashed];
m96_12 -> m96_18  [color=darkseagreen4, key=1, label=options, style=dashed];
m96_12 -> m96_19  [color=darkseagreen4, key=1, label=options, style=dashed];
m96_14 -> m96_16  [color=darkseagreen4, key=1, label=options, style=dashed];
m96_14 -> m96_18  [color=darkseagreen4, key=1, label=options, style=dashed];
m96_14 -> m96_19  [color=darkseagreen4, key=1, label=options, style=dashed];
m96_7 -> m96_13  [color=darkseagreen4, key=1, label="System.Text.RegularExpressions.Regex", style=dashed];
m96_7 -> m96_15  [color=darkseagreen4, key=1, label="System.Text.RegularExpressions.Regex", style=dashed];
m96_7 -> m96_17  [color=darkseagreen4, key=1, label="System.Text.RegularExpressions.Regex", style=dashed];
m96_7 -> m96_20  [color=darkseagreen4, key=1, label="System.Text.RegularExpressions.Regex", style=dashed];
m96_7 -> m96_22  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonWriter", style=dashed];
m96_16 -> m96_16  [color=darkseagreen4, key=1, label=options, style=dashed];
m96_16 -> m96_18  [color=darkseagreen4, key=1, label=options, style=dashed];
m96_16 -> m96_19  [color=darkseagreen4, key=1, label=options, style=dashed];
m96_18 -> m96_18  [color=darkseagreen4, key=1, label=options, style=dashed];
m96_19 -> m96_22  [color=darkseagreen4, key=1, label=options, style=dashed];
m96_19 -> m96_19  [color=darkseagreen4, key=1, label=options, style=dashed];
m96_19 -> m96_21  [color=darkseagreen4, key=1, label=options, style=dashed];
m96_21 -> m96_21  [color=darkseagreen4, key=1, label=options, style=dashed];
m96_40 -> m96_42  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m96_40 -> m96_43  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m96_40 -> m96_44  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m96_40 -> m96_45  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m96_45 -> m96_48  [color=darkseagreen4, key=1, label=string, style=dashed];
m96_45 -> m96_52  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m96_45 -> m96_53  [color=darkseagreen4, key=1, label=string, style=dashed];
m96_46 -> m96_48  [color=darkseagreen4, key=1, label=current, style=dashed];
m96_46 -> m96_49  [color=darkseagreen4, key=1, label=current, style=dashed];
m96_52 -> m96_65  [color=darkseagreen4, key=1, label=patternText, style=dashed];
m96_54 -> m96_65  [color=darkseagreen4, key=1, label=options, style=dashed];
m96_54 -> m96_58  [color=darkseagreen4, key=1, label=options, style=dashed];
m96_50 -> m96_52  [color=darkseagreen4, key=1, label=regexText, style=dashed];
m96_50 -> m96_53  [color=darkseagreen4, key=1, label=regexText, style=dashed];
m96_51 -> m96_53  [color=darkseagreen4, key=1, label=patternOptionDelimiterIndex, style=dashed];
m96_53 -> m96_55  [color=darkseagreen4, key=1, label=optionsText, style=dashed];
m96_58 -> m96_58  [color=darkseagreen4, key=1, label=options, style=dashed];
m96_58 -> m96_60  [color=darkseagreen4, key=1, label=options, style=dashed];
m96_60 -> m96_60  [color=darkseagreen4, key=1, label=options, style=dashed];
m96_56 -> m96_58  [color=darkseagreen4, key=1, label="out System.Type", style=dashed];
m96_8 -> m96_32  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m96_8 -> m96_27  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m96_8 -> m96_28  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m96_8 -> m96_29  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m96_8 -> m96_30  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m96_8 -> m96_31  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m96_26 -> m96_28  [color=darkseagreen4, key=1, label=resolver, style=dashed];
m96_26 -> m96_30  [color=darkseagreen4, key=1, label=resolver, style=dashed];
m96_0 -> m96_5  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m96_0 -> m96_2  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m96_1 -> m96_5  [color=darkseagreen4, key=1, label=regex, style=dashed];
m96_1 -> m96_4  [color=darkseagreen4, key=1, label=regex, style=dashed];
m96_2 -> m96_4  [color=darkseagreen4, key=1, label=bsonWriter, style=dashed];
m96_68 -> m96_70  [color=darkseagreen4, key=1, label=currentType, style=dashed];
m96_68 -> m96_74  [color=darkseagreen4, key=1, label=currentType, style=dashed];
m96_47 -> m96_83  [color=green, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m96_47 -> m96_73  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m96_47 -> m96_74  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m96_47 -> m96_77  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m96_47 -> m96_78  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m96_47 -> m96_87  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m96_47 -> m96_89  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m96_72 -> m96_88  [color=darkseagreen4, key=1, label=options, style=dashed];
m96_74 -> m96_74  [color=darkseagreen4, key=1, label=currentType, style=dashed];
m96_71 -> m96_86  [color=green, key=1, label=pattern, style=dashed];
m96_71 -> m96_88  [color=green, key=1, label=pattern, style=dashed];
m96_76 -> m96_81  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m96_76 -> m96_79  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m96_80 -> m96_86  [color=darkseagreen4, key=1, label=pattern, style=dashed];
m96_80 -> m96_88  [color=darkseagreen4, key=1, label=pattern, style=dashed];
m96_82 -> m96_88  [color=darkseagreen4, key=1, label=options, style=dashed];
m96_99 -> m96_5  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.RegexConverter", style=dashed];
m96_99 -> m96_42  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.RegexConverter", style=dashed];
m96_99 -> m96_4  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.RegexConverter", style=dashed];
m96_99 -> m96_13  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.RegexConverter", style=dashed];
m96_99 -> m96_15  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.RegexConverter", style=dashed];
m96_99 -> m96_17  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.RegexConverter", style=dashed];
m96_99 -> m96_20  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.RegexConverter", style=dashed];
m96_99 -> m96_44  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.RegexConverter", style=dashed];
}
