digraph  {
n664 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", span="1632-1632"];
n691 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", file="DefaultContractResolver.cs.dot", label="NamingStrategy != null", span="1634-1634"];
n692 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", file="DefaultContractResolver.cs.dot", label="return NamingStrategy.GetPropertyName(propertyName, false);", span="1636-1636"];
n693 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", file="DefaultContractResolver.cs.dot", label="return propertyName;", span="1639-1639"];
n663 [cluster="Newtonsoft.Json.Serialization.NamingStrategy.GetPropertyName(string, bool)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.NamingStrategy.GetPropertyName(string, bool)", span="57-57"];
n694 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", span="1632-1632"];
n672 [cluster="lambda expression", file="DefaultContractResolver.cs.dot", label="Entry lambda expression", span="1601-1601"];
n673 [cluster="lambda expression", file="DefaultContractResolver.cs.dot", label="(bool)shouldSerializeCall(o)", span="1601-1601"];
n674 [cluster="lambda expression", file="DefaultContractResolver.cs.dot", label="Exit lambda expression", span="1601-1601"];
n209 [cluster="Newtonsoft.Json.Utilities.MethodCall<T, TResult>.Invoke(T, params object[])", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Utilities.MethodCall<T, TResult>.Invoke(T, params object[])", span="27-27"];
n675 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, \\nbool)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, \\nbool)", span="1604-1604"];
n676 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, \\nbool)", file="DefaultContractResolver.cs.dot", label="MemberInfo specifiedMember = member.DeclaringType.GetProperty(member.Name + JsonTypeReflector.SpecifiedPostfix, BindingFlags.Instance | \\nBindingFlags.Public | BindingFlags.NonPublic)", span="1606-1606"];
n678 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, \\nbool)", file="DefaultContractResolver.cs.dot", label="specifiedMember = member.DeclaringType.GetField(member.Name + JsonTypeReflector.SpecifiedPostfix, BindingFlags.Instance | BindingFlags.Public | \\nBindingFlags.NonPublic)", span="1609-1609"];
n682 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, \\nbool)", file="DefaultContractResolver.cs.dot", label="property.GetIsSpecified = o => (bool)specifiedPropertyGet(o)", span="1619-1619"];
n683 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, \\nbool)", file="DefaultContractResolver.cs.dot", label="ReflectionUtils.CanSetMemberValue(specifiedMember, allowNonPublicAccess, false)", span="1621-1621"];
n684 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, \\nbool)", file="DefaultContractResolver.cs.dot", label="property.SetIsSpecified = JsonTypeReflector.ReflectionDelegateFactory.CreateSet<object>(specifiedMember)", span="1623-1623"];
n677 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, \\nbool)", file="DefaultContractResolver.cs.dot", label="specifiedMember == null", span="1607-1607"];
n679 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, \\nbool)", file="DefaultContractResolver.cs.dot", label="specifiedMember == null || ReflectionUtils.GetMemberUnderlyingType(specifiedMember) != typeof(bool)", span="1612-1612"];
n681 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, \\nbool)", file="DefaultContractResolver.cs.dot", label="Func<object, object> specifiedPropertyGet = JsonTypeReflector.ReflectionDelegateFactory.CreateGet<object>(specifiedMember)", span="1617-1617"];
n686 [cluster="System.Type.GetProperty(string, System.Reflection.BindingFlags)", file="DefaultContractResolver.cs.dot", label="Entry System.Type.GetProperty(string, System.Reflection.BindingFlags)", span="0-0"];
n687 [cluster="System.Type.GetField(string, System.Reflection.BindingFlags)", file="DefaultContractResolver.cs.dot", label="Entry System.Type.GetField(string, System.Reflection.BindingFlags)", span="0-0"];
n680 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, \\nbool)", file="DefaultContractResolver.cs.dot", label="return;", span="1614-1614"];
n186 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", span="433-433"];
n685 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, \\nbool)", file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, \\nbool)", span="1604-1604"];
n689 [cluster="lambda expression", file="DefaultContractResolver.cs.dot", label="(bool)specifiedPropertyGet(o)", span="1619-1619"];
n189 [cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateGet<T>(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateGet<T>(System.Reflection.MemberInfo)", span="38-38"];
n190 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", span="590-590"];
n191 [cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateSet<T>(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateSet<T>(System.Reflection.MemberInfo)", span="59-59"];
n688 [cluster="lambda expression", file="DefaultContractResolver.cs.dot", label="Entry lambda expression", span="1619-1619"];
n690 [cluster="lambda expression", file="DefaultContractResolver.cs.dot", label="Exit lambda expression", span="1619-1619"];
n206 [cluster="Newtonsoft.Json.Serialization.Func<T, TResult>.Invoke(T)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.Func<T, TResult>.Invoke(T)", span="3037-3037"];
n695 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveExtensionDataName(string)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveExtensionDataName(string)", span="1647-1647"];
n696 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveExtensionDataName(string)", file="DefaultContractResolver.cs.dot", label="NamingStrategy != null", span="1649-1649"];
n697 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveExtensionDataName(string)", file="DefaultContractResolver.cs.dot", label="return NamingStrategy.GetExtensionDataName(extensionDataName);", span="1651-1651"];
n698 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveExtensionDataName(string)", file="DefaultContractResolver.cs.dot", label="return extensionDataName;", span="1654-1654"];
n699 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveExtensionDataName(string)", file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveExtensionDataName(string)", span="1647-1647"];
n700 [cluster="Newtonsoft.Json.Serialization.NamingStrategy.GetExtensionDataName(string)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.NamingStrategy.GetExtensionDataName(string)", span="72-72"];
n701 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(string)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(string)", span="1662-1662"];
n702 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(string)", file="DefaultContractResolver.cs.dot", label="NamingStrategy != null", span="1664-1664"];
n703 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(string)", file="DefaultContractResolver.cs.dot", label="return NamingStrategy.GetDictionaryKey(dictionaryKey);", span="1666-1666"];
n704 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(string)", file="DefaultContractResolver.cs.dot", label="return ResolvePropertyName(dictionaryKey);", span="1669-1669"];
n705 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(string)", file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(string)", span="1662-1662"];
n115 [cluster="Newtonsoft.Json.Serialization.NamingStrategy.GetDictionaryKey(string)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.NamingStrategy.GetDictionaryKey(string)", span="87-87"];
n706 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(string)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(string)", span="1677-1677"];
n707 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(string)", file="DefaultContractResolver.cs.dot", label="return ResolvePropertyName(propertyName);", span="1681-1681"];
n708 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(string)", file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(string)", span="1677-1677"];
n0 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", span="175-175"];
n1 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", file="DefaultContractResolver.cs.dot", label="DefaultMembersSearchFlags = BindingFlags.Instance | BindingFlags.Public", span="182-182"];
n2 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", file="DefaultContractResolver.cs.dot", label="_contractCache = new ThreadSafeStore<Type, JsonContract>(CreateContract)", span="185-185"];
n3 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", span="175-175"];
n5 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", span="193-193"];
n6 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DefaultContractResolver.cs.dot", label="type == null", span="195-195"];
n7 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DefaultContractResolver.cs.dot", label="throw new ArgumentNullException(nameof(type));", span="197-197"];
n8 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DefaultContractResolver.cs.dot", label="return _contractCache.Get(type);", span="200-200"];
n9 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", span="193-193"];
n10 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="DefaultContractResolver.cs.dot", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
n12 [cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.Get(TKey)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.Get(TKey)", span="60-60"];
n197 [cluster="lambda expression", file="DefaultContractResolver.cs.dot", label="Entry lambda expression", span="499-514"];
n198 [cluster="lambda expression", file="DefaultContractResolver.cs.dot", label="object dictionary = getExtensionDataDictionary(o)", span="501-501"];
n203 [cluster="lambda expression", file="DefaultContractResolver.cs.dot", label="setExtensionDataDictionary(o, dictionary)", span="510-510"];
n204 [cluster="lambda expression", file="DefaultContractResolver.cs.dot", label="setExtensionDataDictionaryValue(dictionary, key, value)", span="513-513"];
n199 [cluster="lambda expression", file="DefaultContractResolver.cs.dot", label="dictionary == null", span="502-502"];
n200 [cluster="lambda expression", file="DefaultContractResolver.cs.dot", label="setExtensionDataDictionary == null", span="504-504"];
n201 [cluster="lambda expression", file="DefaultContractResolver.cs.dot", label="throw new JsonSerializationException(''Cannot set value onto extension data member '{0}'. The extension data collection is null \\nand it cannot be set.''.FormatWith(CultureInfo.InvariantCulture, member.Name));", span="506-506"];
n202 [cluster="lambda expression", file="DefaultContractResolver.cs.dot", label="dictionary = createExtensionDataDictionary()", span="509-509"];
n205 [cluster="lambda expression", file="DefaultContractResolver.cs.dot", label="Exit lambda expression", span="499-514"];
n96 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="52-52"];
n97 [cluster="string.FormatWith(System.IFormatProvider, object)", file="DefaultContractResolver.cs.dot", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
n207 [cluster="Newtonsoft.Json.Serialization.Func<TResult>.Invoke()", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.Func<TResult>.Invoke()", span="3035-3035"];
n208 [cluster="Newtonsoft.Json.Serialization.Action<T1, T2>.Invoke(T1, T2)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.Action<T1, T2>.Invoke(T1, T2)", span="3047-3047"];
n210 [cluster="lambda expression", file="DefaultContractResolver.cs.dot", label="Entry lambda expression", span="525-534"];
n211 [cluster="lambda expression", file="DefaultContractResolver.cs.dot", label="object dictionary = getExtensionDataDictionary(o)", span="527-527"];
n212 [cluster="lambda expression", file="DefaultContractResolver.cs.dot", label="dictionary == null", span="528-528"];
n214 [cluster="lambda expression", file="DefaultContractResolver.cs.dot", label="return (IEnumerable<KeyValuePair<object, object>>)createEnumerableWrapper(dictionary);", span="533-533"];
n213 [cluster="lambda expression", file="DefaultContractResolver.cs.dot", label="return null;", span="530-530"];
n215 [cluster="lambda expression", file="DefaultContractResolver.cs.dot", label="Exit lambda expression", span="525-534"];
n216 [cluster="Newtonsoft.Json.Serialization.ObjectConstructor<T>.Invoke(params object[])", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.ObjectConstructor<T>.Invoke(params object[])", span="31-31"];
n217 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.EnumerableDictionaryWrapper(\\nSystem.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TEnumeratorKey, TEnumeratorValue>>)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.EnumerableDictionaryWrapper(\\nSystem.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TEnumeratorKey, TEnumeratorValue>>)", span="548-548"];
n218 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.EnumerableDictionaryWrapper(\\nSystem.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TEnumeratorKey, TEnumeratorValue>>)", file="DefaultContractResolver.cs.dot", label="ValidationUtils.ArgumentNotNull(e, nameof(e))", span="550-550"];
n219 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.EnumerableDictionaryWrapper(\\nSystem.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TEnumeratorKey, TEnumeratorValue>>)", file="DefaultContractResolver.cs.dot", label="_e = e", span="551-551"];
n221 [cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="31-31"];
n220 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.EnumerableDictionaryWrapper(\\nSystem.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TEnumeratorKey, TEnumeratorValue>>)", file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.EnumerableDictionaryWrapper(\\nSystem.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TEnumeratorKey, TEnumeratorValue>>)", span="548-548"];
n47 [cluster="lambda expression", file="DefaultContractResolver.cs.dot", label="Entry lambda expression", span="220-220"];
n48 [cluster="lambda expression", file="DefaultContractResolver.cs.dot", label="!ReflectionUtils.IsIndexedProperty(m)", span="220-220"];
n49 [cluster="lambda expression", file="DefaultContractResolver.cs.dot", label="Exit lambda expression", span="220-220"];
n109 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)", span="592-592"];
n247 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="DefaultContractResolver.cs.dot", label="IEnumerable<ConstructorInfo> constructors = objectType.GetConstructors()", span="594-594"];
n255 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="DefaultContractResolver.cs.dot", label="JsonProperty memberProperty = MatchProperty(memberProperties, parameterInfo.Name, parameterInfo.ParameterType)", span="606-606"];
n195 [cluster="System.Type.GetConstructors()", file="DefaultContractResolver.cs.dot", label="Entry System.Type.GetConstructors()", span="0-0"];
n248 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="DefaultContractResolver.cs.dot", label="IEnumerator<ConstructorInfo> en = constructors.GetEnumerator()", span="595-595"];
n249 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="DefaultContractResolver.cs.dot", label="en.MoveNext()", span="596-596"];
n250 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="DefaultContractResolver.cs.dot", label="ConstructorInfo constructor = en.Current", span="598-598"];
n251 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="DefaultContractResolver.cs.dot", label="!en.MoveNext()", span="599-599"];
n241 [cluster="System.Collections.Generic.IEnumerable<T>.GetEnumerator()", file="DefaultContractResolver.cs.dot", label="Entry System.Collections.Generic.IEnumerable<T>.GetEnumerator()", span="0-0"];
n259 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="DefaultContractResolver.cs.dot", label="return null;", span="618-618"];
n242 [cluster="System.Collections.IEnumerator.MoveNext()", file="DefaultContractResolver.cs.dot", label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0"];
n252 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="DefaultContractResolver.cs.dot", label="ParameterInfo[] parameters = constructor.GetParameters()", span="601-601"];
n258 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="DefaultContractResolver.cs.dot", label="return constructor;", span="613-613"];
n253 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="DefaultContractResolver.cs.dot", label="parameters.Length > 0", span="602-602"];
n254 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="DefaultContractResolver.cs.dot", label=parameters, span="604-604"];
n261 [cluster="System.Reflection.MethodBase.GetParameters()", file="DefaultContractResolver.cs.dot", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
n256 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="DefaultContractResolver.cs.dot", label="memberProperty == null || memberProperty.Writable", span="607-607"];
n262 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.MatchProperty(Newtonsoft.Json.Serialization.JsonPropertyCollection, string, \\nSystem.Type)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.MatchProperty(Newtonsoft.Json.Serialization.JsonPropertyCollection, \\nstring, System.Type)", span="676-676"];
n257 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="DefaultContractResolver.cs.dot", label="return null;", span="609-609"];
n260 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)", span="592-592"];
n51 [cluster="lambda expression", file="DefaultContractResolver.cs.dot", label="Entry lambda expression", span="232-232"];
n52 [cluster="lambda expression", file="DefaultContractResolver.cs.dot", label="!ReflectionUtils.IsIndexedProperty(m)", span="232-232"];
n53 [cluster="lambda expression", file="DefaultContractResolver.cs.dot", label="Exit lambda expression", span="232-232"];
n54 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", span="316-316"];
n55 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs.dot", label="Array.IndexOf(BlacklistedTypeNames, objectType.FullName) != -1", span="320-320"];
n56 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs.dot", label="throw new JsonSerializationException(''Unable to serialize instance of '{0}'.''.FormatWith(CultureInfo.InvariantCulture, objectType));", span="322-322"];
n57 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs.dot", label="JsonObjectContract contract = new JsonObjectContract(objectType)", span="325-325"];
n95 [cluster="System.Array.IndexOf<T>(T[], T)", file="DefaultContractResolver.cs.dot", label="Entry System.Array.IndexOf<T>(T[], T)", span="0-0"];
n94 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", span="316-316"];
n58 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs.dot", label="InitializeContract(contract)", span="326-326"];
n61 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs.dot", label="contract.MemberSerialization = JsonTypeReflector.GetObjectMemberSerialization(contract.NonNullableUnderlyingType, ignoreSerializableAttribute)", span="335-335"];
n62 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs.dot", label="contract.Properties.AddRange(CreateProperties(contract.NonNullableUnderlyingType, contract.MemberSerialization))", span="336-336"];
n64 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs.dot", label="JsonObjectAttribute attribute = JsonTypeReflector.GetCachedAttribute<JsonObjectAttribute>(contract.NonNullableUnderlyingType)", span="340-340"];
n66 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs.dot", label="contract.ItemRequired = attribute._itemRequired", span="343-343"];
n67 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs.dot", label="contract.ItemNullValueHandling = attribute._itemNullValueHandling", span="344-344"];
n73 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs.dot", label="contract.ExtensionDataNameResolver = extensionDataNameResolver", span="358-358"];
n74 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs.dot", label="contract.IsInstantiable", span="360-360"];
n75 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs.dot", label="ConstructorInfo overrideConstructor = GetAttributeConstructor(contract.NonNullableUnderlyingType)", span="362-362"];
n77 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs.dot", label="contract.OverrideCreator = JsonTypeReflector.ReflectionDelegateFactory.CreateParameterizedConstructor(overrideConstructor)", span="367-367"];
n78 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs.dot", label="contract.CreatorParameters.AddRange(CreateConstructorParameters(overrideConstructor, contract.Properties))", span="368-368"];
n79 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs.dot", label="contract.MemberSerialization == MemberSerialization.Fields", span="370-370"];
n80 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs.dot", label="contract.DefaultCreator == null || contract.DefaultCreatorNonPublic", span="381-381"];
n81 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs.dot", label="ConstructorInfo constructor = GetParameterizedConstructor(contract.NonNullableUnderlyingType)", span="383-383"];
n83 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs.dot", label="contract.ParameterizedCreator = JsonTypeReflector.ReflectionDelegateFactory.CreateParameterizedConstructor(constructor)", span="386-386"];
n84 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs.dot", label="contract.CreatorParameters.AddRange(CreateConstructorParameters(constructor, contract.Properties))", span="387-387"];
n85 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs.dot", label="contract.NonNullableUnderlyingType.IsValueType()", span="390-390"];
n86 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs.dot", label="ConstructorInfo constructor = GetImmutableConstructor(contract.NonNullableUnderlyingType, contract.Properties)", span="394-394"];
n88 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs.dot", label="contract.OverrideCreator = JsonTypeReflector.ReflectionDelegateFactory.CreateParameterizedConstructor(constructor)", span="397-397"];
n89 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs.dot", label="contract.CreatorParameters.AddRange(CreateConstructorParameters(constructor, contract.Properties))", span="398-398"];
n90 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs.dot", label="MemberInfo extensionDataMember = GetExtensionDataMemberForType(contract.NonNullableUnderlyingType)", span="403-403"];
n92 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs.dot", label="SetExtensionDataDelegates(contract, extensionDataMember)", span="406-406"];
n93 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs.dot", label="return contract;", span="409-409"];
n98 [cluster="Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", span="168-168"];
n59 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs.dot", label="bool ignoreSerializableAttribute", span="328-328"];
n99 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", span="753-753"];
n60 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs.dot", label="ignoreSerializableAttribute = true", span="332-332"];
n37 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type, bool)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type, bool)", span="151-151"];
n63 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs.dot", label="Func<string, string> extensionDataNameResolver = null", span="338-338"];
n100 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", span="1314-1314"];
n101 [cluster="System.Collections.Generic.IList<T>.AddRange<T>(System.Collections.Generic.IEnumerable<T>)", file="DefaultContractResolver.cs.dot", label="Entry System.Collections.Generic.IList<T>.AddRange<T>(System.Collections.Generic.IEnumerable<T>)", span="68-68"];
n71 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs.dot", label="extensionDataNameResolver == null", span="353-353"];
n65 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs.dot", label="attribute != null", span="341-341"];
n68 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs.dot", label="attribute.NamingStrategyType != null", span="346-346"];
n69 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs.dot", label="NamingStrategy namingStrategy = JsonTypeReflector.GetContainerNamingStrategy(attribute)", span="348-348"];
n102 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetCachedAttribute<T>(object)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetCachedAttribute<T>(object)", span="66-66"];
n70 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs.dot", label="extensionDataNameResolver = s => namingStrategy.GetDictionaryKey(s)", span="349-349"];
n113 [cluster="lambda expression", file="DefaultContractResolver.cs.dot", label="namingStrategy.GetDictionaryKey(s)", span="349-349"];
n103 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetContainerNamingStrategy(Newtonsoft.Json.JsonContainerAttribute)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetContainerNamingStrategy(Newtonsoft.Json.JsonContainerAttribute)", span="212-212"];
n72 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs.dot", label="extensionDataNameResolver = ResolveExtensionDataName", span="355-355"];
n76 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs.dot", label="overrideConstructor != null", span="365-365"];
n104 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", span="568-568"];
n105 [cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateParameterizedConstructor(System.Reflection.MethodBase)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateParameterizedConstructor(System.Reflection.MethodBase)", span="75-75"];
n106 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", span="650-650"];
n82 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs.dot", label="constructor != null", span="384-384"];
n107 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParameterizedConstructor(System.Type)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetParameterizedConstructor(System.Type)", span="621-621"];
n108 [cluster="System.Type.IsValueType()", file="DefaultContractResolver.cs.dot", label="Entry System.Type.IsValueType()", span="547-547"];
n87 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs.dot", label="constructor != null", span="395-395"];
n91 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs.dot", label="extensionDataMember != null", span="404-404"];
n110 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataMemberForType(System.Type)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataMemberForType(System.Type)", span="412-412"];
n111 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.MemberInfo)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.MemberInfo)", span="461-461"];
n116 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataMemberForType(System.Type)", file="DefaultContractResolver.cs.dot", label="IEnumerable<MemberInfo> members = GetClassHierarchyForType(type).SelectMany(baseType =>\n            {\n                IList<MemberInfo> \\nm = new List<MemberInfo>();\n                m.AddRange(baseType.GetProperties(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | \\nBindingFlags.DeclaredOnly));\n                m.AddRange(baseType.GetFields(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | \\nBindingFlags.DeclaredOnly));\n\n                return m;\n            })", span="414-421"];
n117 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataMemberForType(System.Type)", file="DefaultContractResolver.cs.dot", label="MemberInfo extensionDataMember = members.LastOrDefault(m =>\n            {\n                MemberTypes memberType = m.MemberType();\n                \\nif (memberType != MemberTypes.Property && memberType != MemberTypes.Field)\n                {\n                    return false;\n                }\n\n                // \\nlast instance of attribute wins on type if there are multiple\n                if (!m.IsDefined(typeof(JsonExtensionDataAttribute), \\nfalse))\n                {\n                    return false;\n                }\n\n                if (!ReflectionUtils.CanReadMemberValue(\\nm, true))\n                {\n                    throw new JsonException(''Invalid extension data attribute on '{0}'. Member '{\\n1}' must have a getter.''.FormatWith(CultureInfo.InvariantCulture, GetClrTypeFullName(m.DeclaringType), m.Name));\n                }\n\n                \\nType t = ReflectionUtils.GetMemberUnderlyingType(m);\n\n                if (ReflectionUtils.ImplementsGenericDefinition(t, typeof(\\nIDictionary<,>), out Type dictionaryType))\n                {\n                    Type keyType = dictionaryType.GetGenericArguments()[\\n0];\n                    Type valueType = dictionaryType.GetGenericArguments()[1];\n\n                    if (keyType.IsAssignableFrom(\\ntypeof(string)) && valueType.IsAssignableFrom(typeof(JToken)))\n                    {\n                        return true;\n                    }\n                }\n\n                \\nthrow new JsonException(''Invalid extension data attribute on '{0}'. Member '{1}' type must implement IDictionary<string, JToken>\\n.''.FormatWith(CultureInfo.InvariantCulture, GetClrTypeFullName(m.DeclaringType), m.Name));\n            })", span="423-456"];
n120 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", span="946-946"];
n123 [cluster="lambda expression", file="DefaultContractResolver.cs.dot", label="Entry lambda expression", span="414-421"];
n118 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataMemberForType(System.Type)", file="DefaultContractResolver.cs.dot", label="return extensionDataMember;", span="458-458"];
n132 [cluster="lambda expression", file="DefaultContractResolver.cs.dot", label="Entry lambda expression", span="423-456"];
n119 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataMemberForType(System.Type)", file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataMemberForType(System.Type)", span="412-412"];
n158 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.MemberInfo)", file="DefaultContractResolver.cs.dot", label="JsonExtensionDataAttribute extensionDataAttribute = ReflectionUtils.GetAttribute<JsonExtensionDataAttribute>(member)", span="463-463"];
n161 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.MemberInfo)", file="DefaultContractResolver.cs.dot", label="Type t = ReflectionUtils.GetMemberUnderlyingType(member)", span="469-469"];
n169 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.MemberInfo)", file="DefaultContractResolver.cs.dot", label="Func<object, object> getExtensionDataDictionary = JsonTypeReflector.ReflectionDelegateFactory.CreateGet<object>(member)", span="488-488"];
n171 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.MemberInfo)", file="DefaultContractResolver.cs.dot", label="Action<object, object> setExtensionDataDictionary = (ReflectionUtils.CanSetMemberValue(member, true, false))\n                 ? \\nJsonTypeReflector.ReflectionDelegateFactory.CreateSet<object>(member)\n                 : null", span="492-494"];
n175 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.MemberInfo)", file="DefaultContractResolver.cs.dot", label="ExtensionDataSetter extensionDataSetter = (o, key, value) =>\n                {\n                    object dictionary = getExtensionDataDictionary(\\no);\n                    if (dictionary == null)\n                    {\n                        if (setExtensionDataDictionary == \\nnull)\n                        {\n                            throw new JsonSerializationException(''Cannot set value onto extension \\ndata member '{0}'. The extension data collection is null and it cannot be set.''.FormatWith(CultureInfo.InvariantCulture, member.Name));\n                        }\n\n                        \\ndictionary = createExtensionDataDictionary();\n                        setExtensionDataDictionary(o, dictionary);\n                    }\n\n                    \\nsetExtensionDataDictionaryValue(dictionary, key, value);\n                }", span="499-514"];
n176 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.MemberInfo)", file="DefaultContractResolver.cs.dot", label="contract.ExtensionDataSetter = extensionDataSetter", span="516-516"];
n182 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.MemberInfo)", file="DefaultContractResolver.cs.dot", label="contract.ExtensionDataGetter = extensionDataGetter", span="536-536"];
n183 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.MemberInfo)", file="DefaultContractResolver.cs.dot", label="contract.ExtensionDataValueType = valueType", span="539-539"];
n185 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(object)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(object)", span="714-714"];
n159 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.MemberInfo)", file="DefaultContractResolver.cs.dot", label="extensionDataAttribute == null", span="464-464"];
n170 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.MemberInfo)", file="DefaultContractResolver.cs.dot", label="extensionDataAttribute.ReadData", span="490-490"];
n177 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.MemberInfo)", file="DefaultContractResolver.cs.dot", label="extensionDataAttribute.WriteData", span="519-519"];
n160 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.MemberInfo)", file="DefaultContractResolver.cs.dot", label="return;", span="466-466"];
n184 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.MemberInfo)", file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.MemberInfo)", span="461-461"];
n162 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.MemberInfo)", file="DefaultContractResolver.cs.dot", label="ReflectionUtils.ImplementsGenericDefinition(t, typeof(IDictionary<,>), out Type dictionaryType)", span="471-471"];
n166 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.MemberInfo)", file="DefaultContractResolver.cs.dot", label="ReflectionUtils.IsGenericDefinition(t, typeof(IDictionary<,>))", span="479-479"];
n168 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.MemberInfo)", file="DefaultContractResolver.cs.dot", label="createdType = t", span="485-485"];
n173 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.MemberInfo)", file="DefaultContractResolver.cs.dot", label="MethodInfo addMethod = t.GetMethod(''Add'', new[] { keyType, valueType })", span="496-496"];
n163 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.MemberInfo)", file="DefaultContractResolver.cs.dot", label="Type keyType = dictionaryType.GetGenericArguments()[0]", span="473-473"];
n164 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.MemberInfo)", file="DefaultContractResolver.cs.dot", label="Type valueType = dictionaryType.GetGenericArguments()[1]", span="474-474"];
n167 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.MemberInfo)", file="DefaultContractResolver.cs.dot", label="createdType = typeof(Dictionary<,>).MakeGenericType(keyType, valueType)", span="481-481"];
n178 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.MemberInfo)", file="DefaultContractResolver.cs.dot", label="Type enumerableWrapper = typeof(EnumerableDictionaryWrapper<,>).MakeGenericType(keyType, valueType)", span="521-521"];
n165 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.MemberInfo)", file="DefaultContractResolver.cs.dot", label="Type createdType", span="476-476"];
n187 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", span="277-277"];
n188 [cluster="System.Type.MakeGenericType(params System.Type[])", file="DefaultContractResolver.cs.dot", label="Entry System.Type.MakeGenericType(params System.Type[])", span="0-0"];
n172 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.MemberInfo)", file="DefaultContractResolver.cs.dot", label="Func<object> createExtensionDataDictionary = JsonTypeReflector.ReflectionDelegateFactory.CreateDefaultConstructor<object>(createdType)", span="495-495"];
n181 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.MemberInfo)", file="DefaultContractResolver.cs.dot", label="ExtensionDataGetter extensionDataGetter = o =>\n                {\n                    object dictionary = getExtensionDataDictionary(\\no);\n                    if (dictionary == null)\n                    {\n                        return null;\n                    }\n\n                    \\nreturn (IEnumerable<KeyValuePair<object, object>>)createEnumerableWrapper(dictionary);\n                }", span="525-534"];
n192 [cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", span="76-76"];
n193 [cluster="System.Type.GetMethod(string, System.Type[])", file="DefaultContractResolver.cs.dot", label="Entry System.Type.GetMethod(string, System.Type[])", span="0-0"];
n174 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.MemberInfo)", file="DefaultContractResolver.cs.dot", label="MethodCall<object, object> setExtensionDataDictionaryValue = JsonTypeReflector.ReflectionDelegateFactory.CreateMethodCall<object>(\\naddMethod)", span="497-497"];
n194 [cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", span="74-74"];
n179 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.MemberInfo)", file="DefaultContractResolver.cs.dot", label="ConstructorInfo constructors = enumerableWrapper.GetConstructors().First()", span="522-522"];
n196 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="DefaultContractResolver.cs.dot", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="391-391"];
n180 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.MemberInfo)", file="DefaultContractResolver.cs.dot", label="ObjectConstructor<object> createEnumerableWrapper = JsonTypeReflector.ReflectionDelegateFactory.CreateParameterizedConstructor(constructors)", span="523-523"];
n112 [cluster="lambda expression", file="DefaultContractResolver.cs.dot", label="Entry lambda expression", span="349-349"];
n114 [cluster="lambda expression", file="DefaultContractResolver.cs.dot", label="Exit lambda expression", span="349-349"];
n413 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="DefaultContractResolver.cs.dot", label="List<Type> ret = new List<Type>()", span="948-948"];
n414 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="DefaultContractResolver.cs.dot", label="Type current = type", span="950-950"];
n416 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="DefaultContractResolver.cs.dot", label="ret.Add(current)", span="953-953"];
n418 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="DefaultContractResolver.cs.dot", label="ret.Reverse()", span="958-958"];
n419 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="DefaultContractResolver.cs.dot", label="return ret;", span="959-959"];
n40 [cluster="System.Collections.Generic.List<T>.List()", file="DefaultContractResolver.cs.dot", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
n415 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="DefaultContractResolver.cs.dot", label="current != null && current != typeof(object)", span="951-951"];
n417 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="DefaultContractResolver.cs.dot", label="current = current.BaseType()", span="954-954"];
n44 [cluster="System.Collections.Generic.List<T>.Add(T)", file="DefaultContractResolver.cs.dot", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
n421 [cluster="System.Type.BaseType()", file="DefaultContractResolver.cs.dot", label="Entry System.Type.BaseType()", span="171-171"];
n422 [cluster="System.Collections.Generic.List<T>.Reverse()", file="DefaultContractResolver.cs.dot", label="Entry System.Collections.Generic.List<T>.Reverse()", span="0-0"];
n420 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", span="946-946"];
n124 [cluster="lambda expression", file="DefaultContractResolver.cs.dot", label="IList<MemberInfo> m = new List<MemberInfo>()", span="416-416"];
n125 [cluster="lambda expression", file="DefaultContractResolver.cs.dot", label="m.AddRange(baseType.GetProperties(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly))", span="417-417"];
n126 [cluster="lambda expression", file="DefaultContractResolver.cs.dot", label="m.AddRange(baseType.GetFields(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly))", span="418-418"];
n127 [cluster="lambda expression", file="DefaultContractResolver.cs.dot", label="return m;", span="420-420"];
n128 [cluster="lambda expression", file="DefaultContractResolver.cs.dot", label="Exit lambda expression", span="414-421"];
n133 [cluster="lambda expression", file="DefaultContractResolver.cs.dot", label="MemberTypes memberType = m.MemberType()", span="425-425"];
n136 [cluster="lambda expression", file="DefaultContractResolver.cs.dot", label="!m.IsDefined(typeof(JsonExtensionDataAttribute), false)", span="432-432"];
n138 [cluster="lambda expression", file="DefaultContractResolver.cs.dot", label="!ReflectionUtils.CanReadMemberValue(m, true)", span="437-437"];
n139 [cluster="lambda expression", file="DefaultContractResolver.cs.dot", label="throw new JsonException(''Invalid extension data attribute on '{0}'. Member '{1}' must have a getter.''.FormatWith(CultureInfo.InvariantCulture, \\nGetClrTypeFullName(m.DeclaringType), m.Name));", span="439-439"];
n140 [cluster="lambda expression", file="DefaultContractResolver.cs.dot", label="Type t = ReflectionUtils.GetMemberUnderlyingType(m)", span="442-442"];
n146 [cluster="lambda expression", file="DefaultContractResolver.cs.dot", label="throw new JsonException(''Invalid extension data attribute on '{0}'. Member '{1}' type must implement IDictionary<string, JToken>\\n.''.FormatWith(CultureInfo.InvariantCulture, GetClrTypeFullName(m.DeclaringType), m.Name));", span="455-455"];
n134 [cluster="lambda expression", file="DefaultContractResolver.cs.dot", label="memberType != MemberTypes.Property && memberType != MemberTypes.Field", span="426-426"];
n135 [cluster="lambda expression", file="DefaultContractResolver.cs.dot", label="return false;", span="428-428"];
n147 [cluster="lambda expression", file="DefaultContractResolver.cs.dot", label="Exit lambda expression", span="423-456"];
n137 [cluster="lambda expression", file="DefaultContractResolver.cs.dot", label="return false;", span="434-434"];
n151 [cluster="Newtonsoft.Json.JsonException.JsonException(string)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.JsonException.JsonException(string)", span="54-54"];
n141 [cluster="lambda expression", file="DefaultContractResolver.cs.dot", label="ReflectionUtils.ImplementsGenericDefinition(t, typeof(IDictionary<,>), out Type dictionaryType)", span="444-444"];
n142 [cluster="lambda expression", file="DefaultContractResolver.cs.dot", label="Type keyType = dictionaryType.GetGenericArguments()[0]", span="446-446"];
n143 [cluster="lambda expression", file="DefaultContractResolver.cs.dot", label="Type valueType = dictionaryType.GetGenericArguments()[1]", span="447-447"];
n144 [cluster="lambda expression", file="DefaultContractResolver.cs.dot", label="keyType.IsAssignableFrom(typeof(string)) && valueType.IsAssignableFrom(typeof(JToken))", span="449-449"];
n145 [cluster="lambda expression", file="DefaultContractResolver.cs.dot", label="return true;", span="451-451"];
n157 [cluster="System.Type.IsAssignableFrom(System.Type)", file="DefaultContractResolver.cs.dot", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
n13 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", span="208-208"];
n14 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs.dot", label="bool ignoreSerializableAttribute", span="210-210"];
n16 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs.dot", label="MemberSerialization memberSerialization = JsonTypeReflector.GetObjectMemberSerialization(objectType, ignoreSerializableAttribute)", span="217-217"];
n17 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs.dot", label="IEnumerable<MemberInfo> allMembers = ReflectionUtils.GetFieldsAndProperties(objectType, BindingFlags.Public | BindingFlags.NonPublic | \\nBindingFlags.Instance | BindingFlags.Static)\n                .Where(m => !ReflectionUtils.IsIndexedProperty(m))", span="219-220"];
n20 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs.dot", label="List<MemberInfo> defaultMembers = ReflectionUtils.GetFieldsAndProperties(objectType, DefaultMembersSearchFlags)\n                    \\n.Where(m => !ReflectionUtils.IsIndexedProperty(m)).ToList()", span="231-232"];
n15 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs.dot", label="ignoreSerializableAttribute = true", span="214-214"];
n19 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs.dot", label="memberSerialization != MemberSerialization.Fields", span="224-224"];
n29 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs.dot", label="memberSerialization == MemberSerialization.Fields && member.MemberType() == MemberTypes.Field", span="263-263"];
n38 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", span="631-631"];
n18 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs.dot", label="List<MemberInfo> serializableMembers = new List<MemberInfo>()", span="222-222"];
n21 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs.dot", label=allMembers, span="235-235"];
n31 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs.dot", label=allMembers, span="283-283"];
n24 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs.dot", label="serializableMembers.Add(member)", span="243-243"];
n26 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs.dot", label="serializableMembers.Add(member)", span="251-251"];
n28 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs.dot", label="serializableMembers.Add(member)", span="255-255"];
n30 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs.dot", label="serializableMembers.Add(member)", span="265-265"];
n34 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs.dot", label="serializableMembers.Add(member)", span="287-287"];
n35 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs.dot", label="return serializableMembers;", span="292-292"];
n41 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="DefaultContractResolver.cs.dot", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="817-817"];
n23 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs.dot", label="defaultMembers.Contains(member)", span="240-240"];
n22 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs.dot", label="SerializeCompilerGeneratedMembers || !member.IsDefined(typeof(CompilerGeneratedAttribute), true)", span="238-238"];
n25 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs.dot", label="JsonTypeReflector.GetAttribute<JsonPropertyAttribute>(member) != null", span="249-249"];
n27 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs.dot", label="JsonTypeReflector.GetAttribute<JsonRequiredAttribute>(member) != null", span="253-253"];
n42 [cluster="System.Reflection.MemberInfo.IsDefined(System.Type, bool)", file="DefaultContractResolver.cs.dot", label="Entry System.Reflection.MemberInfo.IsDefined(System.Type, bool)", span="0-0"];
n43 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="DefaultContractResolver.cs.dot", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
n45 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(object)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(object)", span="417-417"];
n46 [cluster="System.Reflection.MemberInfo.MemberType()", file="DefaultContractResolver.cs.dot", label="Entry System.Reflection.MemberInfo.MemberType()", span="107-107"];
n32 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs.dot", label="member is FieldInfo", span="285-285"];
n33 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs.dot", label="field && !field.IsStatic", span="285-285"];
n36 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", span="208-208"];
n319 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs.dot", label="JsonContainerAttribute containerAttribute = JsonTypeReflector.GetCachedAttribute<JsonContainerAttribute>(contract.NonNullableUnderlyingType)", span="755-755"];
n321 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs.dot", label="contract.IsReference = containerAttribute._isReference", span="758-758"];
n322 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs.dot", label="contract.Converter = ResolveContractConverter(contract.NonNullableUnderlyingType)", span="772-772"];
n323 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs.dot", label="contract.InternalConverter = JsonSerializer.GetMatchingConverter(BuiltInConverters, contract.NonNullableUnderlyingType)", span="775-775"];
n324 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs.dot", label="contract.IsInstantiable\n                && (ReflectionUtils.HasDefaultConstructor(contract.CreatedType, true) || contract.CreatedType.IsValueType())", span="777-778"];
n325 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs.dot", label="contract.DefaultCreator = GetDefaultCreator(contract.CreatedType)", span="780-780"];
n326 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs.dot", label="contract.DefaultCreatorNonPublic = (!contract.CreatedType.IsValueType() &&\n                                                    \\nReflectionUtils.GetDefaultConstructor(contract.CreatedType) == null)", span="782-783"];
n327 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs.dot", label="ResolveCallbackMethods(contract, contract.NonNullableUnderlyingType)", span="786-786"];
n320 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs.dot", label="containerAttribute != null", span="756-756"];
n312 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", span="740-740"];
n329 [cluster="Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type)", span="1194-1194"];
n330 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", span="223-223"];
n316 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", span="745-745"];
n331 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type)", span="235-235"];
n328 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", span="753-753"];
n332 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", span="789-789"];
n543 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs.dot", label="List<MemberInfo> members = GetSerializableMembers(type)", span="1316-1316"];
n547 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs.dot", label="JsonPropertyCollection properties = new JsonPropertyCollection(type)", span="1324-1324"];
n549 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs.dot", label="JsonProperty property = CreateProperty(member, memberSerialization)", span="1328-1328"];
n544 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs.dot", label="members == null", span="1317-1317"];
n548 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs.dot", label=members, span="1326-1326"];
n545 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs.dot", label="throw new JsonSerializationException(''Null collection of serializable members returned.'');", span="1319-1319"];
n546 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs.dot", label="PropertyNameTable nameTable = GetNameTable()", span="1322-1322"];
n556 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", span="1314-1314"];
n551 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs.dot", label=nameTable, span="1333-1333"];
n552 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs.dot", label="property.PropertyName = nameTable.Add(property.PropertyName)", span="1335-1335"];
n557 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetNameTable()", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetNameTable()", span="1346-1346"];
n553 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs.dot", label="properties.AddProperty(property)", span="1338-1338"];
n554 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs.dot", label="IList<JsonProperty> orderedProperties = properties.OrderBy(p => p.Order ?? -1).ToList()", span="1342-1342"];
n278 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(System.Type)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(System.Type)", span="46-46"];
n550 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs.dot", label="property != null", span="1330-1330"];
n558 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", span="1385-1385"];
n559 [cluster="Newtonsoft.Json.Utilities.PropertyNameTable.Add(string)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Utilities.PropertyNameTable.Add(string)", span="76-76"];
n280 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", span="70-70"];
n555 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs.dot", label="return orderedProperties;", span="1343-1343"];
n562 [cluster="lambda expression", file="DefaultContractResolver.cs.dot", label="Entry lambda expression", span="1342-1342"];
n230 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="DefaultContractResolver.cs.dot", label="IEnumerator<ConstructorInfo> en = objectType.GetConstructors(BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic)\\n.Where(c => c.IsDefined(typeof(JsonConstructorAttribute), true)).GetEnumerator()", span="570-570"];
n236 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="DefaultContractResolver.cs.dot", label="objectType == typeof(Version)", span="584-584"];
n237 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="DefaultContractResolver.cs.dot", label="return objectType.GetConstructor(new[] { typeof(int), typeof(int), typeof(int), typeof(int) });", span="586-586"];
n231 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="DefaultContractResolver.cs.dot", label="en.MoveNext()", span="572-572"];
n232 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="DefaultContractResolver.cs.dot", label="ConstructorInfo conInfo = en.Current", span="574-574"];
n233 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="DefaultContractResolver.cs.dot", label="en.MoveNext()", span="575-575"];
n240 [cluster="System.Type.GetConstructors(System.Reflection.BindingFlags)", file="DefaultContractResolver.cs.dot", label="Entry System.Type.GetConstructors(System.Reflection.BindingFlags)", span="0-0"];
n244 [cluster="lambda expression", file="DefaultContractResolver.cs.dot", label="Entry lambda expression", span="570-570"];
n235 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="DefaultContractResolver.cs.dot", label="return conInfo;", span="580-580"];
n234 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="DefaultContractResolver.cs.dot", label="throw new JsonException(''Multiple constructors with the JsonConstructorAttribute.'');", span="577-577"];
n239 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", span="568-568"];
n238 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="DefaultContractResolver.cs.dot", label="return null;", span="589-589"];
n243 [cluster="System.Type.GetConstructor(System.Type[])", file="DefaultContractResolver.cs.dot", label="Entry System.Type.GetConstructor(System.Type[])", span="0-0"];
n268 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="DefaultContractResolver.cs.dot", label="ParameterInfo[] constructorParameters = constructor.GetParameters()", span="652-652"];
n269 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="DefaultContractResolver.cs.dot", label="JsonPropertyCollection parameterCollection = new JsonPropertyCollection(constructor.DeclaringType)", span="654-654"];
n271 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="DefaultContractResolver.cs.dot", label="JsonProperty matchingMemberProperty = MatchProperty(memberProperties, parameterInfo.Name, parameterInfo.ParameterType)", span="658-658"];
n270 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="DefaultContractResolver.cs.dot", label=constructorParameters, span="656-656"];
n275 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="DefaultContractResolver.cs.dot", label="parameterCollection.AddProperty(property)", span="668-668"];
n276 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="DefaultContractResolver.cs.dot", label="return parameterCollection;", span="673-673"];
n272 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="DefaultContractResolver.cs.dot", label="matchingMemberProperty != null || parameterInfo.Name != null", span="662-662"];
n273 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="DefaultContractResolver.cs.dot", label="JsonProperty property = CreatePropertyFromConstructorParameter(matchingMemberProperty, parameterInfo)", span="664-664"];
n274 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="DefaultContractResolver.cs.dot", label="property != null", span="666-666"];
n279 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ParameterInfo)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ParameterInfo)", span="701-701"];
n277 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", span="650-650"];
n263 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParameterizedConstructor(System.Type)", file="DefaultContractResolver.cs.dot", label="ConstructorInfo[] constructors = objectType.GetConstructors(BindingFlags.Public | BindingFlags.Instance)", span="635-635"];
n264 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParameterizedConstructor(System.Type)", file="DefaultContractResolver.cs.dot", label="constructors.Length == 1", span="636-636"];
n265 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParameterizedConstructor(System.Type)", file="DefaultContractResolver.cs.dot", label="return constructors[0];", span="638-638"];
n266 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParameterizedConstructor(System.Type)", file="DefaultContractResolver.cs.dot", label="return null;", span="641-641"];
n267 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParameterizedConstructor(System.Type)", file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetParameterizedConstructor(System.Type)", span="621-621"];
n222 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.GetEnumerator()", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.GetEnumerator()", span="554-554"];
n223 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.GetEnumerator()", file="DefaultContractResolver.cs.dot", label=_e, span="556-556"];
n224 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.GetEnumerator()", file="DefaultContractResolver.cs.dot", label="yield return new KeyValuePair<object, object>(item.Key, item.Value);", span="558-558"];
n225 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.GetEnumerator()", file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.GetEnumerator()", span="554-554"];
n226 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="DefaultContractResolver.cs.dot", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
n227 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.System.Collections.IEnumerable.GetEnumerator()", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.System.Collections.IEnumerable.GetEnumerator()", span="562-562"];
n228 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.System.Collections.IEnumerable.GetEnumerator()", file="DefaultContractResolver.cs.dot", label="return GetEnumerator();", span="564-564"];
n229 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.System.Collections.IEnumerable.GetEnumerator()", file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.System.Collections.IEnumerable.GetEnumerator()", span="562-562"];
n245 [cluster="lambda expression", file="DefaultContractResolver.cs.dot", label="c.IsDefined(typeof(JsonConstructorAttribute), true)", span="570-570"];
n246 [cluster="lambda expression", file="DefaultContractResolver.cs.dot", label="Exit lambda expression", span="570-570"];
n281 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.MatchProperty(Newtonsoft.Json.Serialization.JsonPropertyCollection, string, \\nSystem.Type)", file="DefaultContractResolver.cs.dot", label="name == null", span="680-680"];
n283 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.MatchProperty(Newtonsoft.Json.Serialization.JsonPropertyCollection, string, \\nSystem.Type)", file="DefaultContractResolver.cs.dot", label="JsonProperty property = properties.GetClosestMatchProperty(name)", span="685-685"];
n284 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.MatchProperty(Newtonsoft.Json.Serialization.JsonPropertyCollection, string, \\nSystem.Type)", file="DefaultContractResolver.cs.dot", label="property == null || property.PropertyType != type", span="687-687"];
n282 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.MatchProperty(Newtonsoft.Json.Serialization.JsonPropertyCollection, string, \\nSystem.Type)", file="DefaultContractResolver.cs.dot", label="return null;", span="682-682"];
n287 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.MatchProperty(Newtonsoft.Json.Serialization.JsonPropertyCollection, string, \\nSystem.Type)", file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.MatchProperty(Newtonsoft.Json.Serialization.JsonPropertyCollection, string, \\nSystem.Type)", span="676-676"];
n286 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.MatchProperty(Newtonsoft.Json.Serialization.JsonPropertyCollection, string, \\nSystem.Type)", file="DefaultContractResolver.cs.dot", label="return property;", span="692-692"];
n288 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty(string)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty(string)", span="125-125"];
n285 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.MatchProperty(Newtonsoft.Json.Serialization.JsonPropertyCollection, string, \\nSystem.Type)", file="DefaultContractResolver.cs.dot", label="return null;", span="689-689"];
n289 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ParameterInfo)", file="DefaultContractResolver.cs.dot", label="JsonProperty property = new JsonProperty()", span="703-703"];
n290 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ParameterInfo)", file="DefaultContractResolver.cs.dot", label="property.PropertyType = parameterInfo.ParameterType", span="704-704"];
n291 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ParameterInfo)", file="DefaultContractResolver.cs.dot", label="property.AttributeProvider = new ReflectionAttributeProvider(parameterInfo)", span="705-705"];
n292 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ParameterInfo)", file="DefaultContractResolver.cs.dot", label="SetPropertySettingsFromAttributes(property, parameterInfo, parameterInfo.Name, parameterInfo.Member.DeclaringType, MemberSerialization.OptOut, \\nout _)", span="707-707"];
n295 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ParameterInfo)", file="DefaultContractResolver.cs.dot", label="matchingMemberProperty != null", span="713-713"];
n296 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ParameterInfo)", file="DefaultContractResolver.cs.dot", label="property.PropertyName = (property.PropertyName != parameterInfo.Name) ? property.PropertyName : matchingMemberProperty.PropertyName", span="715-715"];
n297 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ParameterInfo)", file="DefaultContractResolver.cs.dot", label="property.Converter = property.Converter ?? matchingMemberProperty.Converter", span="716-716"];
n298 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ParameterInfo)", file="DefaultContractResolver.cs.dot", label="!property._hasExplicitDefaultValue && matchingMemberProperty._hasExplicitDefaultValue", span="718-718"];
n299 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ParameterInfo)", file="DefaultContractResolver.cs.dot", label="property.DefaultValue = matchingMemberProperty.DefaultValue", span="720-720"];
n300 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ParameterInfo)", file="DefaultContractResolver.cs.dot", label="property._required = property._required ?? matchingMemberProperty._required", span="723-723"];
n301 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ParameterInfo)", file="DefaultContractResolver.cs.dot", label="property.IsReference = property.IsReference ?? matchingMemberProperty.IsReference", span="724-724"];
n302 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ParameterInfo)", file="DefaultContractResolver.cs.dot", label="property.NullValueHandling = property.NullValueHandling ?? matchingMemberProperty.NullValueHandling", span="725-725"];
n303 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ParameterInfo)", file="DefaultContractResolver.cs.dot", label="property.DefaultValueHandling = property.DefaultValueHandling ?? matchingMemberProperty.DefaultValueHandling", span="726-726"];
n304 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ParameterInfo)", file="DefaultContractResolver.cs.dot", label="property.ReferenceLoopHandling = property.ReferenceLoopHandling ?? matchingMemberProperty.ReferenceLoopHandling", span="727-727"];
n305 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ParameterInfo)", file="DefaultContractResolver.cs.dot", label="property.ObjectCreationHandling = property.ObjectCreationHandling ?? matchingMemberProperty.ObjectCreationHandling", span="728-728"];
n306 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ParameterInfo)", file="DefaultContractResolver.cs.dot", label="property.TypeNameHandling = property.TypeNameHandling ?? matchingMemberProperty.TypeNameHandling", span="729-729"];
n293 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ParameterInfo)", file="DefaultContractResolver.cs.dot", label="property.Readable = false", span="709-709"];
n294 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ParameterInfo)", file="DefaultContractResolver.cs.dot", label="property.Writable = true", span="710-710"];
n307 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ParameterInfo)", file="DefaultContractResolver.cs.dot", label="return property;", span="732-732"];
n309 [cluster="Newtonsoft.Json.Serialization.JsonProperty.JsonProperty()", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.JsonProperty.JsonProperty()", span="38-38"];
n310 [cluster="Newtonsoft.Json.Serialization.ReflectionAttributeProvider.ReflectionAttributeProvider(object)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.ReflectionAttributeProvider.ReflectionAttributeProvider(object)", span="43-43"];
n308 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ParameterInfo)", file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ParameterInfo)", span="701-701"];
n313 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", file="DefaultContractResolver.cs.dot", label="return JsonTypeReflector.GetJsonConverter(objectType);", span="742-742"];
n314 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", span="740-740"];
n315 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(object)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(object)", span="178-178"];
n317 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", file="DefaultContractResolver.cs.dot", label="return JsonTypeReflector.ReflectionDelegateFactory.CreateDefaultConstructor<object>(createdType);", span="747-747"];
n318 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", span="745-745"];
n333 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs.dot", label="GetCallbackMethodsForType(\n                t,\n                out List<SerializationCallback> onSerializing,\n                \\nout List<SerializationCallback> onSerialized,\n                out List<SerializationCallback> onDeserializing,\n                \\nout List<SerializationCallback> onDeserialized,\n                out List<SerializationErrorCallback> onError)", span="791-797"];
n335 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs.dot", label="contract.OnSerializingCallbacks.AddRange(onSerializing)", span="801-801"];
n337 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs.dot", label="contract.OnSerializedCallbacks.AddRange(onSerialized)", span="806-806"];
n339 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs.dot", label="contract.OnDeserializingCallbacks.AddRange(onDeserializing)", span="811-811"];
n341 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs.dot", label="contract.OnDeserializedCallbacks.AddRange(onDeserialized)", span="816-816"];
n343 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs.dot", label="contract.OnErrorCallbacks.AddRange(onError)", span="821-821"];
n334 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs.dot", label="onSerializing != null", span="799-799"];
n336 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs.dot", label="onSerialized != null", span="804-804"];
n338 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs.dot", label="onDeserializing != null", span="809-809"];
n340 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs.dot", label="onDeserialized != null", span="814-814"];
n342 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs.dot", label="onError != null", span="819-819"];
n344 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", span="789-789"];
n346 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", span="825-825"];
n347 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs.dot", label="onSerializing = null", span="827-827"];
n352 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs.dot", label="GetClassHierarchyForType(type)", span="833-833"];
n348 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs.dot", label="onSerialized = null", span="828-828"];
n365 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs.dot", label="onSerializing = onSerializing ?? new List<SerializationCallback>()", span="859-859"];
n384 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", span="825-825"];
n349 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs.dot", label="onDeserializing = null", span="829-829"];
n369 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs.dot", label="onSerialized = onSerialized ?? new List<SerializationCallback>()", span="865-865"];
n350 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs.dot", label="onDeserialized = null", span="830-830"];
n373 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs.dot", label="onDeserializing = onDeserializing ?? new List<SerializationCallback>()", span="871-871"];
n351 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs.dot", label="onError = null", span="831-831"];
n377 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs.dot", label="onDeserialized = onDeserialized ?? new List<SerializationCallback>()", span="877-877"];
n381 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs.dot", label="onError = onError ?? new List<SerializationErrorCallback>()", span="883-883"];
n353 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs.dot", label="MethodInfo currentOnSerializing = null", span="836-836"];
n358 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs.dot", label="bool skipSerializing = ShouldSkipSerializing(baseType)", span="842-842"];
n359 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs.dot", label="bool skipDeserialized = ShouldSkipDeserialized(baseType)", span="843-843"];
n360 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs.dot", label="baseType.GetMethods(BindingFlags.NonPublic | BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly)", span="845-845"];
n354 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs.dot", label="MethodInfo currentOnSerialized = null", span="837-837"];
n364 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs.dot", label="!skipSerializing && IsValidCallback(method, parameters, typeof(OnSerializingAttribute), currentOnSerializing, ref prevAttributeType)", span="857-857"];
n355 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs.dot", label="MethodInfo currentOnDeserializing = null", span="838-838"];
n368 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs.dot", label="IsValidCallback(method, parameters, typeof(OnSerializedAttribute), currentOnSerialized, ref prevAttributeType)", span="863-863"];
n356 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs.dot", label="MethodInfo currentOnDeserialized = null", span="839-839"];
n372 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs.dot", label="IsValidCallback(method, parameters, typeof(OnDeserializingAttribute), currentOnDeserializing, ref prevAttributeType)", span="869-869"];
n357 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs.dot", label="MethodInfo currentOnError = null", span="840-840"];
n376 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs.dot", label="!skipDeserialized && IsValidCallback(method, parameters, typeof(OnDeserializedAttribute), currentOnDeserialized, ref prevAttributeType)", span="875-875"];
n380 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs.dot", label="IsValidCallback(method, parameters, typeof(OnErrorAttribute), currentOnError, ref prevAttributeType)", span="881-881"];
n385 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipSerializing(System.Type)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipSerializing(System.Type)", span="929-929"];
n386 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipDeserialized(System.Type)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipDeserialized(System.Type)", span="911-911"];
n361 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs.dot", label="method.ContainsGenericParameters", span="849-849"];
n363 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs.dot", label="ParameterInfo[] parameters = method.GetParameters()", span="855-855"];
n366 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs.dot", label="onSerializing.Add(JsonContract.CreateSerializationCallback(method))", span="860-860"];
n367 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs.dot", label="currentOnSerializing = method", span="861-861"];
n370 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs.dot", label="onSerialized.Add(JsonContract.CreateSerializationCallback(method))", span="866-866"];
n371 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs.dot", label="currentOnSerialized = method", span="867-867"];
n374 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs.dot", label="onDeserializing.Add(JsonContract.CreateSerializationCallback(method))", span="872-872"];
n375 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs.dot", label="currentOnDeserializing = method", span="873-873"];
n378 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs.dot", label="onDeserialized.Add(JsonContract.CreateSerializationCallback(method))", span="878-878"];
n379 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs.dot", label="currentOnDeserialized = method", span="879-879"];
n382 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs.dot", label="onError.Add(JsonContract.CreateSerializationErrorCallback(method))", span="884-884"];
n383 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs.dot", label="currentOnError = method", span="885-885"];
n387 [cluster="System.Type.GetMethods(System.Reflection.BindingFlags)", file="DefaultContractResolver.cs.dot", label="Entry System.Type.GetMethods(System.Reflection.BindingFlags)", span="0-0"];
n362 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="DefaultContractResolver.cs.dot", label="Type prevAttributeType = null", span="854-854"];
n388 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], \\nSystem.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], \\nSystem.Type, System.Reflection.MethodInfo, ref System.Type)", span="1251-1251"];
n389 [cluster="Newtonsoft.Json.Serialization.JsonContract.CreateSerializationCallback(System.Reflection.MethodInfo)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.JsonContract.CreateSerializationCallback(System.Reflection.MethodInfo)", span="306-306"];
n390 [cluster="Newtonsoft.Json.Serialization.JsonContract.CreateSerializationErrorCallback(System.Reflection.MethodInfo)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.JsonContract.CreateSerializationErrorCallback(System.Reflection.MethodInfo)", span="311-311"];
n409 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipSerializing(System.Type)", file="DefaultContractResolver.cs.dot", label="IsConcurrentOrObservableCollection(t)", span="931-931"];
n410 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipSerializing(System.Type)", file="DefaultContractResolver.cs.dot", label="return true;", span="933-933"];
n411 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipSerializing(System.Type)", file="DefaultContractResolver.cs.dot", label="return false;", span="943-943"];
n391 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsConcurrentOrObservableCollection(System.Type)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.IsConcurrentOrObservableCollection(System.Type)", span="891-891"];
n412 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipSerializing(System.Type)", file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipSerializing(System.Type)", span="929-929"];
n405 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipDeserialized(System.Type)", file="DefaultContractResolver.cs.dot", label="IsConcurrentOrObservableCollection(t)", span="914-914"];
n406 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipDeserialized(System.Type)", file="DefaultContractResolver.cs.dot", label="return true;", span="916-916"];
n407 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipDeserialized(System.Type)", file="DefaultContractResolver.cs.dot", label="return false;", span="926-926"];
n408 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipDeserialized(System.Type)", file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipDeserialized(System.Type)", span="911-911"];
n516 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], \\nSystem.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs.dot", label="!method.IsDefined(attributeType, false)", span="1253-1253"];
n518 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], \\nSystem.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs.dot", label="currentCallback != null", span="1258-1258"];
n519 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], \\nSystem.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs.dot", label="throw new JsonException(''Invalid attribute. Both '{0}' and '{1}' in type '{2}' have '{3}'.''.FormatWith(CultureInfo.InvariantCulture, \\nmethod, currentCallback, GetClrTypeFullName(method.DeclaringType), attributeType));", span="1260-1260"];
n520 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], \\nSystem.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs.dot", label="prevAttributeType != null", span="1263-1263"];
n521 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], \\nSystem.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs.dot", label="throw new JsonException(''Invalid Callback. Method '{3}' in type '{2}' has both '{0}' and '{1}'.''.FormatWith(CultureInfo.InvariantCulture, \\nprevAttributeType, attributeType, GetClrTypeFullName(method.DeclaringType), method));", span="1265-1265"];
n522 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], \\nSystem.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs.dot", label="method.IsVirtual", span="1268-1268"];
n523 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], \\nSystem.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs.dot", label="throw new JsonException(''Virtual Method '{0}' of type '{1}' cannot be marked with '{2}' attribute.''.FormatWith(CultureInfo.InvariantCulture, \\nmethod, GetClrTypeFullName(method.DeclaringType), attributeType));", span="1270-1270"];
n524 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], \\nSystem.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs.dot", label="method.ReturnType != typeof(void)", span="1273-1273"];
n525 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], \\nSystem.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs.dot", label="throw new JsonException(''Serialization Callback '{1}' in type '{0}' must return void.''.FormatWith(CultureInfo.InvariantCulture, \\nGetClrTypeFullName(method.DeclaringType), method));", span="1275-1275"];
n526 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], \\nSystem.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs.dot", label="attributeType == typeof(OnErrorAttribute)", span="1278-1278"];
n527 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], \\nSystem.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs.dot", label="parameters == null || parameters.Length != 2 || parameters[0].ParameterType != typeof(StreamingContext) || parameters[1].ParameterType != \\ntypeof(ErrorContext)", span="1280-1280"];
n528 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], \\nSystem.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs.dot", label="throw new JsonException(''Serialization Error Callback '{1}' in type '{0}' must have two parameters of type '{2}' and '{3}'.''.FormatWith(\\nCultureInfo.InvariantCulture, GetClrTypeFullName(method.DeclaringType), method, typeof(StreamingContext), typeof(ErrorContext)));", span="1282-1282"];
n529 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], \\nSystem.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs.dot", label="parameters == null || parameters.Length != 1 || parameters[0].ParameterType != typeof(StreamingContext)", span="1287-1287"];
n530 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], \\nSystem.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs.dot", label="throw new JsonException(''Serialization Callback '{1}' in type '{0}' must have a single parameter of type '{2}'.''.FormatWith(CultureInfo.InvariantCulture, \\nGetClrTypeFullName(method.DeclaringType), method, typeof(StreamingContext)));", span="1289-1289"];
n531 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], \\nSystem.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs.dot", label="prevAttributeType = attributeType", span="1293-1293"];
n517 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], \\nSystem.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs.dot", label="return false;", span="1255-1255"];
n533 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], \\nSystem.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], \\nSystem.Type, System.Reflection.MethodInfo, ref System.Type)", span="1251-1251"];
n534 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", span="1298-1298"];
n535 [cluster="string.FormatWith(System.IFormatProvider, object, object, object, object)", file="DefaultContractResolver.cs.dot", label="Entry string.FormatWith(System.IFormatProvider, object, object, object, object)", span="62-62"];
n536 [cluster="string.FormatWith(System.IFormatProvider, object, object, object)", file="DefaultContractResolver.cs.dot", label="Entry string.FormatWith(System.IFormatProvider, object, object, object)", span="57-57"];
n444 [cluster="string.FormatWith(System.IFormatProvider, object, object)", file="DefaultContractResolver.cs.dot", label="Entry string.FormatWith(System.IFormatProvider, object, object)", span="52-52"];
n532 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], \\nSystem.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs.dot", label="return true;", span="1295-1295"];
n392 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsConcurrentOrObservableCollection(System.Type)", file="DefaultContractResolver.cs.dot", label="t.IsGenericType()", span="893-893"];
n393 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsConcurrentOrObservableCollection(System.Type)", file="DefaultContractResolver.cs.dot", label="Type definition = t.GetGenericTypeDefinition()", span="895-895"];
n401 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsConcurrentOrObservableCollection(System.Type)", file="DefaultContractResolver.cs.dot", label="return false;", span="908-908"];
n403 [cluster="System.Type.IsGenericType()", file="DefaultContractResolver.cs.dot", label="Entry System.Type.IsGenericType()", span="153-153"];
n394 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsConcurrentOrObservableCollection(System.Type)", file="DefaultContractResolver.cs.dot", label="definition.FullName", span="897-897"];
n404 [cluster="System.Type.GetGenericTypeDefinition()", file="DefaultContractResolver.cs.dot", label="Entry System.Type.GetGenericTypeDefinition()", span="0-0"];
n395 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsConcurrentOrObservableCollection(System.Type)", file="DefaultContractResolver.cs.dot", label="''System.Collections.Concurrent.ConcurrentQueue`1''", span="899-899"];
n396 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsConcurrentOrObservableCollection(System.Type)", file="DefaultContractResolver.cs.dot", label="''System.Collections.Concurrent.ConcurrentStack`1''", span="900-900"];
n397 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsConcurrentOrObservableCollection(System.Type)", file="DefaultContractResolver.cs.dot", label="''System.Collections.Concurrent.ConcurrentBag`1''", span="901-901"];
d398 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsConcurrentOrObservableCollection(System.Type)", color=green, community=0, file="DefaultContractResolver.cs.dot", label="''System.Collections.Concurrent.ConcurrentDictionary`2''", prediction=0, span="902-902"];
n399 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsConcurrentOrObservableCollection(System.Type)", file="DefaultContractResolver.cs.dot", label="''System.Collections.ObjectModel.ObservableCollection`1''", span="903-903"];
n400 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsConcurrentOrObservableCollection(System.Type)", file="DefaultContractResolver.cs.dot", label="return true;", span="904-904"];
n402 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsConcurrentOrObservableCollection(System.Type)", file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.IsConcurrentOrObservableCollection(System.Type)", span="891-891"];
n423 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", span="967-967"];
n424 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DefaultContractResolver.cs.dot", label="JsonDictionaryContract contract = new JsonDictionaryContract(objectType)", span="969-969"];
n426 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DefaultContractResolver.cs.dot", label="JsonContainerAttribute containerAttribute = JsonTypeReflector.GetAttribute<JsonContainerAttribute>(objectType)", span="972-972"];
n425 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DefaultContractResolver.cs.dot", label="InitializeContract(contract)", span="970-970"];
n429 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DefaultContractResolver.cs.dot", label="contract.DictionaryKeyResolver = s => namingStrategy.GetDictionaryKey(s)", span="976-976"];
n430 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DefaultContractResolver.cs.dot", label="contract.DictionaryKeyResolver = ResolveDictionaryKey", span="980-980"];
n431 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DefaultContractResolver.cs.dot", label="ConstructorInfo overrideConstructor = GetAttributeConstructor(contract.NonNullableUnderlyingType)", span="983-983"];
n434 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DefaultContractResolver.cs.dot", label="Type expectedParameterType = (contract.DictionaryKeyType != null && contract.DictionaryValueType != null)\n                    ? \\ntypeof(IEnumerable<>).MakeGenericType(typeof(KeyValuePair<,>).MakeGenericType(contract.DictionaryKeyType, contract.DictionaryValueType))\n                    : \\ntypeof(IDictionary)", span="988-990"];
n436 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DefaultContractResolver.cs.dot", label="contract.HasParameterizedCreator = false", span="994-994"];
n438 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DefaultContractResolver.cs.dot", label="contract.HasParameterizedCreator = true", span="998-998"];
n439 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DefaultContractResolver.cs.dot", label="throw new JsonException(''Constructor for '{0}' must have no parameters or a single parameter that implements '{1}'.''.FormatWith(\\nCultureInfo.InvariantCulture, contract.UnderlyingType, expectedParameterType));", span="1002-1002"];
n440 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DefaultContractResolver.cs.dot", label="contract.OverrideCreator = JsonTypeReflector.ReflectionDelegateFactory.CreateParameterizedConstructor(overrideConstructor)", span="1005-1005"];
n441 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DefaultContractResolver.cs.dot", label="return contract;", span="1008-1008"];
n443 [cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", span="112-112"];
n427 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DefaultContractResolver.cs.dot", label="containerAttribute?.NamingStrategyType != null", span="973-973"];
n428 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DefaultContractResolver.cs.dot", label="NamingStrategy namingStrategy = JsonTypeReflector.GetContainerNamingStrategy(containerAttribute)", span="975-975"];
n446 [cluster="lambda expression", file="DefaultContractResolver.cs.dot", label="namingStrategy.GetDictionaryKey(s)", span="976-976"];
n432 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DefaultContractResolver.cs.dot", label="overrideConstructor != null", span="985-985"];
n433 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DefaultContractResolver.cs.dot", label="ParameterInfo[] parameters = overrideConstructor.GetParameters()", span="987-987"];
n435 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DefaultContractResolver.cs.dot", label="parameters.Length == 0", span="992-992"];
n437 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DefaultContractResolver.cs.dot", label="parameters.Length == 1 && expectedParameterType.IsAssignableFrom(parameters[0].ParameterType)", span="996-996"];
n442 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", span="967-967"];
n445 [cluster="lambda expression", file="DefaultContractResolver.cs.dot", label="Entry lambda expression", span="976-976"];
n447 [cluster="lambda expression", file="DefaultContractResolver.cs.dot", label="Exit lambda expression", span="976-976"];
n448 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", span="1016-1016"];
n449 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="DefaultContractResolver.cs.dot", label="JsonArrayContract contract = new JsonArrayContract(objectType)", span="1018-1018"];
n450 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="DefaultContractResolver.cs.dot", label="InitializeContract(contract)", span="1019-1019"];
n451 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="DefaultContractResolver.cs.dot", label="ConstructorInfo overrideConstructor = GetAttributeConstructor(contract.NonNullableUnderlyingType)", span="1021-1021"];
n454 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="DefaultContractResolver.cs.dot", label="Type expectedParameterType = (contract.CollectionItemType != null)\n                    ? typeof(IEnumerable<>).MakeGenericType(\\ncontract.CollectionItemType)\n                    : typeof(IEnumerable)", span="1026-1028"];
n456 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="DefaultContractResolver.cs.dot", label="contract.HasParameterizedCreator = false", span="1032-1032"];
n458 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="DefaultContractResolver.cs.dot", label="contract.HasParameterizedCreator = true", span="1036-1036"];
n459 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="DefaultContractResolver.cs.dot", label="throw new JsonException(''Constructor for '{0}' must have no parameters or a single parameter that implements '{1}'.''.FormatWith(\\nCultureInfo.InvariantCulture, contract.UnderlyingType, expectedParameterType));", span="1040-1040"];
n460 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="DefaultContractResolver.cs.dot", label="contract.OverrideCreator = JsonTypeReflector.ReflectionDelegateFactory.CreateParameterizedConstructor(overrideConstructor)", span="1043-1043"];
n461 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="DefaultContractResolver.cs.dot", label="return contract;", span="1046-1046"];
n463 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", span="114-114"];
n452 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="DefaultContractResolver.cs.dot", label="overrideConstructor != null", span="1023-1023"];
n453 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="DefaultContractResolver.cs.dot", label="ParameterInfo[] parameters = overrideConstructor.GetParameters()", span="1025-1025"];
n455 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="DefaultContractResolver.cs.dot", label="parameters.Length == 0", span="1030-1030"];
n457 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="DefaultContractResolver.cs.dot", label="parameters.Length == 1 && expectedParameterType.IsAssignableFrom(parameters[0].ParameterType)", span="1034-1034"];
n462 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", span="1016-1016"];
n464 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", span="1054-1054"];
n465 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", file="DefaultContractResolver.cs.dot", label="JsonPrimitiveContract contract = new JsonPrimitiveContract(objectType)", span="1056-1056"];
n466 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", file="DefaultContractResolver.cs.dot", label="InitializeContract(contract)", span="1057-1057"];
n467 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", file="DefaultContractResolver.cs.dot", label="return contract;", span="1059-1059"];
n469 [cluster="Newtonsoft.Json.Serialization.JsonPrimitiveContract.JsonPrimitiveContract(System.Type)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.JsonPrimitiveContract.JsonPrimitiveContract(System.Type)", span="42-42"];
n468 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", span="1054-1054"];
n470 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", span="1067-1067"];
n471 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", file="DefaultContractResolver.cs.dot", label="JsonLinqContract contract = new JsonLinqContract(objectType)", span="1069-1069"];
n472 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", file="DefaultContractResolver.cs.dot", label="InitializeContract(contract)", span="1070-1070"];
n473 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", file="DefaultContractResolver.cs.dot", label="return contract;", span="1072-1072"];
n475 [cluster="Newtonsoft.Json.Serialization.JsonLinqContract.JsonLinqContract(System.Type)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.JsonLinqContract.JsonLinqContract(System.Type)", span="38-38"];
n474 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", span="1067-1067"];
n476 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", span="1131-1131"];
n477 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", file="DefaultContractResolver.cs.dot", label="JsonStringContract contract = new JsonStringContract(objectType)", span="1133-1133"];
n478 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", file="DefaultContractResolver.cs.dot", label="InitializeContract(contract)", span="1134-1134"];
n479 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", file="DefaultContractResolver.cs.dot", label="return contract;", span="1136-1136"];
n481 [cluster="Newtonsoft.Json.Serialization.JsonStringContract.JsonStringContract(System.Type)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.JsonStringContract.JsonStringContract(System.Type)", span="38-38"];
n480 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", span="1131-1131"];
n482 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", span="1144-1144"];
n483 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs.dot", label="IsJsonPrimitiveType(objectType)", span="1146-1146"];
n484 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs.dot", label="return CreatePrimitiveContract(objectType);", span="1148-1148"];
n485 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs.dot", label="Type t = ReflectionUtils.EnsureNotNullableType(objectType)", span="1151-1151"];
n488 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs.dot", label="return CreateObjectContract(objectType);", span="1156-1156"];
n490 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs.dot", label="return CreateArrayContract(objectType);", span="1161-1161"];
n492 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs.dot", label="return CreateDictionaryContract(objectType);", span="1166-1166"];
n494 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs.dot", label="return CreateLinqContract(objectType);", span="1171-1171"];
n496 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs.dot", label="return CreateDictionaryContract(objectType);", span="1176-1176"];
n500 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs.dot", label="return CreateStringContract(objectType);", span="1186-1186"];
n501 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs.dot", label="return CreateObjectContract(objectType);", span="1211-1211"];
n503 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsJsonPrimitiveType(System.Type)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.IsJsonPrimitiveType(System.Type)", span="1214-1214"];
n502 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", span="1144-1144"];
n486 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs.dot", label="JsonContainerAttribute containerAttribute = JsonTypeReflector.GetCachedAttribute<JsonContainerAttribute>(t)", span="1152-1152"];
n493 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs.dot", label="t == typeof(JToken) || t.IsSubclassOf(typeof(JToken))", span="1169-1169"];
n495 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs.dot", label="CollectionUtils.IsDictionaryType(t)", span="1174-1174"];
n497 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs.dot", label="typeof(IEnumerable).IsAssignableFrom(t)", span="1179-1179"];
n498 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs.dot", label="return CreateArrayContract(t);", span="1181-1181"];
n499 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs.dot", label="CanConvertToString(t)", span="1184-1184"];
n504 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.EnsureNotNullableType(System.Type)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.EnsureNotNullableType(System.Type)", span="270-270"];
n487 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs.dot", label="containerAttribute is JsonObjectAttribute", span="1154-1154"];
n489 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs.dot", label="containerAttribute is JsonArrayAttribute", span="1159-1159"];
n491 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs.dot", label="containerAttribute is JsonDictionaryAttribute", span="1164-1164"];
n505 [cluster="System.Type.IsSubclassOf(System.Type)", file="DefaultContractResolver.cs.dot", label="Entry System.Type.IsSubclassOf(System.Type)", span="0-0"];
n506 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", span="96-96"];
n507 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", span="1234-1234"];
n508 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsJsonPrimitiveType(System.Type)", file="DefaultContractResolver.cs.dot", label="PrimitiveTypeCode typeCode = ConvertUtils.GetTypeCode(t)", span="1216-1216"];
n509 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsJsonPrimitiveType(System.Type)", file="DefaultContractResolver.cs.dot", label="return (typeCode != PrimitiveTypeCode.Empty && typeCode != PrimitiveTypeCode.Object);", span="1218-1218"];
n511 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type)", span="187-187"];
n510 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsJsonPrimitiveType(System.Type)", file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.IsJsonPrimitiveType(System.Type)", span="1214-1214"];
n512 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="DefaultContractResolver.cs.dot", label="type == typeof(Type) || type.IsSubclassOf(typeof(Type))", span="1243-1243"];
n513 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="DefaultContractResolver.cs.dot", label="return true;", span="1245-1245"];
n514 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="DefaultContractResolver.cs.dot", label="return false;", span="1248-1248"];
n515 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", span="1234-1234"];
n537 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", file="DefaultContractResolver.cs.dot", label="type.IsGenericTypeDefinition() || !type.ContainsGenericParameters()", span="1300-1300"];
n538 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", file="DefaultContractResolver.cs.dot", label="return type.FullName;", span="1302-1302"];
n539 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", file="DefaultContractResolver.cs.dot", label="return ''{0}.{1}''.FormatWith(CultureInfo.InvariantCulture, type.Namespace, type.Name);", span="1305-1305"];
n541 [cluster="System.Type.IsGenericTypeDefinition()", file="DefaultContractResolver.cs.dot", label="Entry System.Type.IsGenericTypeDefinition()", span="162-162"];
n542 [cluster="System.Type.ContainsGenericParameters()", file="DefaultContractResolver.cs.dot", label="Entry System.Type.ContainsGenericParameters()", span="135-135"];
n540 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", span="1298-1298"];
n565 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetNameTable()", file="DefaultContractResolver.cs.dot", label="return _nameTable;", span="1348-1348"];
n566 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetNameTable()", file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetNameTable()", span="1346-1346"];
n576 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs.dot", label="JsonProperty property = new JsonProperty()", span="1387-1387"];
n577 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs.dot", label="property.PropertyType = ReflectionUtils.GetMemberUnderlyingType(member)", span="1388-1388"];
n578 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs.dot", label="property.DeclaringType = member.DeclaringType", span="1389-1389"];
n579 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs.dot", label="property.ValueProvider = CreateMemberValueProvider(member)", span="1390-1390"];
n580 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs.dot", label="property.AttributeProvider = new ReflectionAttributeProvider(member)", span="1391-1391"];
n581 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs.dot", label="SetPropertySettingsFromAttributes(property, member, member.Name, member.DeclaringType, memberSerialization, out bool allowNonPublicAccess)", span="1393-1393"];
n582 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs.dot", label="memberSerialization != MemberSerialization.Fields", span="1395-1395"];
n583 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs.dot", label="property.Readable = ReflectionUtils.CanReadMemberValue(member, allowNonPublicAccess)", span="1397-1397"];
n584 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs.dot", label="property.Writable = ReflectionUtils.CanSetMemberValue(member, allowNonPublicAccess, property.HasMemberAttribute)", span="1398-1398"];
n588 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs.dot", label="property.ShouldSerialize = CreateShouldSerializeTest(member)", span="1409-1409"];
n590 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs.dot", label="SetIsSpecifiedActions(property, member, allowNonPublicAccess)", span="1414-1414"];
n585 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs.dot", label="property.Readable = true", span="1403-1403"];
n586 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs.dot", label="property.Writable = true", span="1404-1404"];
n591 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs.dot", label="return property;", span="1417-1417"];
n567 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", span="1356-1356"];
n587 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs.dot", label="!IgnoreShouldSerializeMembers", span="1407-1407"];
n589 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs.dot", label="!IgnoreIsSpecifiedMembers", span="1412-1412"];
n594 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", span="1589-1589"];
n592 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", span="1385-1385"];
n563 [cluster="lambda expression", file="DefaultContractResolver.cs.dot", label="p.Order ?? -1", span="1342-1342"];
n564 [cluster="lambda expression", file="DefaultContractResolver.cs.dot", label="Exit lambda expression", span="1342-1342"];
n568 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs.dot", label="IValueProvider valueProvider", span="1359-1359"];
n570 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs.dot", label="valueProvider = new DynamicValueProvider(member)", span="1364-1364"];
n571 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs.dot", label="valueProvider = new ReflectionValueProvider(member)", span="1368-1368"];
n569 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs.dot", label=DynamicCodeGeneration, span="1362-1362"];
n572 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs.dot", label="return valueProvider;", span="1376-1376"];
n575 [cluster="Newtonsoft.Json.Serialization.ReflectionValueProvider.ReflectionValueProvider(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.ReflectionValueProvider.ReflectionValueProvider(System.Reflection.MemberInfo)", span="43-43"];
n573 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", span="1356-1356"];
n666 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs.dot", label="MethodInfo shouldSerializeMethod = member.DeclaringType.GetMethod(JsonTypeReflector.ShouldSerializePrefix + member.Name, ReflectionUtils.EmptyTypes)", span="1591-1591"];
n667 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs.dot", label="shouldSerializeMethod == null || shouldSerializeMethod.ReturnType != typeof(bool)", span="1593-1593"];
n669 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs.dot", label="MethodCall<object, object> shouldSerializeCall =\n                JsonTypeReflector.ReflectionDelegateFactory.CreateMethodCall<object>(\\nshouldSerializeMethod)", span="1598-1599"];
n668 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs.dot", label="return null;", span="1595-1595"];
n671 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", span="1589-1589"];
n670 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs.dot", label="return o => (bool)shouldSerializeCall(o);", span="1601-1601"];
n596 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", span="1420-1420"];
n597 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs.dot", label="JsonPropertyAttribute propertyAttribute = JsonTypeReflector.GetAttribute<JsonPropertyAttribute>(attributeProvider)", span="1438-1438"];
n598 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs.dot", label="JsonRequiredAttribute requiredAttribute = JsonTypeReflector.GetAttribute<JsonRequiredAttribute>(attributeProvider)", span="1439-1439"];
n604 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs.dot", label="mappedName = name", span="1457-1457"];
n606 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs.dot", label="JsonContainerAttribute containerAttribute = JsonTypeReflector.GetAttribute<JsonContainerAttribute>(declaringType)", span="1461-1461"];
n614 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs.dot", label="property.PropertyName = namingStrategy.GetPropertyName(mappedName, hasSpecifiedName)", span="1479-1479"];
n615 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs.dot", label="property.PropertyName = ResolvePropertyName(mappedName)", span="1483-1483"];
n616 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs.dot", label="property.UnderlyingName = name", span="1486-1486"];
n619 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs.dot", label="property._required = propertyAttribute._required", span="1491-1491"];
n620 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs.dot", label="property.Order = propertyAttribute._order", span="1492-1492"];
n621 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs.dot", label="property.DefaultValueHandling = propertyAttribute._defaultValueHandling", span="1493-1493"];
n623 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs.dot", label="property.NullValueHandling = propertyAttribute._nullValueHandling", span="1495-1495"];
n624 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs.dot", label="property.ReferenceLoopHandling = propertyAttribute._referenceLoopHandling", span="1496-1496"];
n625 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs.dot", label="property.ObjectCreationHandling = propertyAttribute._objectCreationHandling", span="1497-1497"];
n626 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs.dot", label="property.TypeNameHandling = propertyAttribute._typeNameHandling", span="1498-1498"];
n627 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs.dot", label="property.IsReference = propertyAttribute._isReference", span="1499-1499"];
n628 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs.dot", label="property.ItemIsReference = propertyAttribute._itemIsReference", span="1501-1501"];
n629 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs.dot", label="property.ItemConverter = propertyAttribute.ItemConverterType != null ? JsonTypeReflector.CreateJsonConverterInstance(propertyAttribute.ItemConverterType, \\npropertyAttribute.ItemConverterParameters) : null", span="1502-1502"];
n630 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs.dot", label="property.ItemReferenceLoopHandling = propertyAttribute._itemReferenceLoopHandling", span="1503-1503"];
n631 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs.dot", label="property.ItemTypeNameHandling = propertyAttribute._itemTypeNameHandling", span="1504-1504"];
n632 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs.dot", label="property.NullValueHandling = null", span="1508-1508"];
n633 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs.dot", label="property.ReferenceLoopHandling = null", span="1509-1509"];
n634 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs.dot", label="property.ObjectCreationHandling = null", span="1510-1510"];
n635 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs.dot", label="property.TypeNameHandling = null", span="1511-1511"];
n636 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs.dot", label="property.IsReference = null", span="1512-1512"];
n637 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs.dot", label="property.ItemIsReference = null", span="1513-1513"];
n638 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs.dot", label="property.ItemConverter = null", span="1514-1514"];
n639 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs.dot", label="property.ItemReferenceLoopHandling = null", span="1515-1515"];
n640 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs.dot", label="property.ItemTypeNameHandling = null", span="1516-1516"];
n642 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs.dot", label="property._required = Required.Always", span="1530-1530"];
n644 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs.dot", label="property.HasMemberAttribute = hasMemberAttribute", span="1534-1534"];
n645 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs.dot", label="bool hasJsonIgnoreAttribute =\n                JsonTypeReflector.GetAttribute<JsonIgnoreAttribute>(attributeProvider) != null\n                    // \\nautomatically ignore extension data dictionary property if it is public\n                || JsonTypeReflector.GetAttribute<JsonExtensionDataAttribute>(\\nattributeProvider) != null", span="1536-1539"];
n646 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs.dot", label="memberSerialization != MemberSerialization.OptIn", span="1545-1545"];
n648 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs.dot", label="property.Ignored = (hasJsonIgnoreAttribute || hasIgnoreDataMemberAttribute)", span="1554-1554"];
n649 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs.dot", label="property.Ignored = (hasJsonIgnoreAttribute || !hasMemberAttribute)", span="1559-1559"];
n650 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs.dot", label="property.Converter = JsonTypeReflector.GetJsonConverter(attributeProvider)", span="1564-1564"];
n651 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs.dot", label="DefaultValueAttribute defaultValueAttribute = JsonTypeReflector.GetAttribute<DefaultValueAttribute>(attributeProvider)", span="1566-1566"];
n653 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs.dot", label="property.DefaultValue = defaultValueAttribute.Value", span="1569-1569"];
n659 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs.dot", label="memberSerialization == MemberSerialization.Fields", span="1583-1583"];
n601 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs.dot", label="propertyAttribute?.PropertyName != null", span="1443-1443"];
n602 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs.dot", label="mappedName = propertyAttribute.PropertyName", span="1445-1445"];
n608 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs.dot", label="propertyAttribute?.NamingStrategyType != null", span="1464-1464"];
n609 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs.dot", label="namingStrategy = JsonTypeReflector.CreateNamingStrategyInstance(propertyAttribute.NamingStrategyType, propertyAttribute.NamingStrategyParameters)", span="1466-1466"];
n618 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs.dot", label="propertyAttribute != null", span="1489-1489"];
n599 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs.dot", label="string mappedName", span="1441-1441"];
n641 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs.dot", label="requiredAttribute != null", span="1528-1528"];
n600 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs.dot", label="bool hasSpecifiedName", span="1442-1442"];
n603 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs.dot", label="hasSpecifiedName = true", span="1446-1446"];
n605 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs.dot", label="hasSpecifiedName = false", span="1458-1458"];
n607 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs.dot", label="NamingStrategy namingStrategy", span="1463-1463"];
n610 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs.dot", label="containerAttribute?.NamingStrategyType != null", span="1468-1468"];
n611 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs.dot", label="namingStrategy = JsonTypeReflector.GetContainerNamingStrategy(containerAttribute)", span="1470-1470"];
n613 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs.dot", label="namingStrategy != null", span="1477-1477"];
n662 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.CreateNamingStrategyInstance(System.Type, object[])", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.CreateNamingStrategyInstance(System.Type, object[])", span="206-206"];
n612 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs.dot", label="namingStrategy = NamingStrategy", span="1474-1474"];
n617 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs.dot", label="bool hasMemberAttribute = false", span="1488-1488"];
n657 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs.dot", label=hasMemberAttribute, span="1579-1579"];
n622 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs.dot", label="hasMemberAttribute = true", span="1494-1494"];
n665 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.CreateJsonConverterInstance(System.Type, object[])", file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.CreateJsonConverterInstance(System.Type, object[])", span="200-200"];
n643 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs.dot", label="hasMemberAttribute = true", span="1531-1531"];
n647 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs.dot", label="bool hasIgnoreDataMemberAttribute = false", span="1547-1547"];
n652 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs.dot", label="defaultValueAttribute != null", span="1567-1567"];
n654 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs.dot", label="allowNonPublicAccess = false", span="1572-1572"];
n655 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs.dot", label="(DefaultMembersSearchFlags & BindingFlags.NonPublic) == BindingFlags.NonPublic", span="1574-1574"];
n661 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", span="1420-1420"];
n656 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs.dot", label="allowNonPublicAccess = true", span="1576-1576"];
n658 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs.dot", label="allowNonPublicAccess = true", span="1581-1581"];
n660 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="DefaultContractResolver.cs.dot", label="allowNonPublicAccess = true", span="1585-1585"];
m0_20 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="Issue1576.cs", label="Entry Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="84-84"];
m0_21 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="Issue1576.cs", label="throw new NotSupportedException();", span="86-86"];
m0_22 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="Issue1576.cs", label="Exit Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="84-84"];
m0_23 [cluster="System.NotSupportedException.NotSupportedException()", file="Issue1576.cs", label="Entry System.NotSupportedException.NotSupportedException()", span="0-0"];
m0_42 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.CanConvert(System.Type)", file="Issue1576.cs", label="Entry Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.CanConvert(System.Type)", span="114-114"];
m0_43 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.CanConvert(System.Type)", file="Issue1576.cs", label="return typeof(ICollection).IsAssignableFrom(objectType);", span="116-116"];
m0_44 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.CanConvert(System.Type)", file="Issue1576.cs", label="Exit Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.CanConvert(System.Type)", span="114-114"];
m0_45 [cluster="System.Type.IsAssignableFrom(System.Type)", file="Issue1576.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m0_0 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.Test()", file="Issue1576.cs", label="Entry Newtonsoft.Json.Tests.Issues.Issue1576.Test()", span="46-46"];
m0_1 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.Test()", file="Issue1576.cs", label="var settings = new JsonSerializerSettings()\n            {\n                ContractResolver = new CustomContractResolver()\n            }", span="48-51"];
m0_8 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.CustomContractResolver.CustomContractResolver()", file="Issue1576.cs", label="Entry Newtonsoft.Json.Tests.Issues.Issue1576.CustomContractResolver.CustomContractResolver()", span="65-65"];
m0_2 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.Test()", file="Issue1576.cs", label="var result = JsonConvert.DeserializeObject<TestClass>(''{ 'Items': '11' }'', settings)", span="53-53"];
m0_7 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="Issue1576.cs", label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="447-447"];
m0_9 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="Issue1576.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="766-766"];
m0_3 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.Test()", file="Issue1576.cs", label="Assert.IsNotNull(result)", span="55-55"];
m0_4 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.Test()", file="Issue1576.cs", label="Assert.AreEqual(result.Items.Count, 1)", span="56-56"];
m0_5 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.Test()", file="Issue1576.cs", label="Assert.AreEqual(result.Items[0], 11)", span="57-57"];
m0_6 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.Test()", file="Issue1576.cs", label="Exit Newtonsoft.Json.Tests.Issues.Issue1576.Test()", span="46-46"];
m0_12 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.CustomContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="Issue1576.cs", label="Entry Newtonsoft.Json.Tests.Issues.Issue1576.CustomContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", span="67-67"];
m0_13 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.CustomContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="Issue1576.cs", label="var property = base.CreateProperty(member, memberSerialization)", span="69-69"];
m0_14 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.CustomContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="Issue1576.cs", label="member.Name == ''Items''", span="71-71"];
m0_18 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="Issue1576.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="703-703"];
m0_15 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.CustomContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="Issue1576.cs", label="property.Converter = new OneItemListJsonConverter()", span="73-73"];
m0_16 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.CustomContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="Issue1576.cs", label="return property;", span="76-76"];
m0_19 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.OneItemListJsonConverter()", file="Issue1576.cs", label="Entry Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.OneItemListJsonConverter()", span="80-80"];
m0_17 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.CustomContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="Issue1576.cs", label="Exit Newtonsoft.Json.Tests.Issues.Issue1576.CustomContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", span="67-67"];
m0_24 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="Issue1576.cs", label="Entry Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, \\nNewtonsoft.Json.JsonSerializer)", span="89-89"];
m0_25 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="Issue1576.cs", label="var token = JToken.Load(reader)", span="91-91"];
m0_27 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="Issue1576.cs", label="return token.ToObject(objectType, serializer);", span="94-94"];
m0_30 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="Issue1576.cs", label="var list = array.ToObject(objectType, serializer) as IEnumerable", span="100-100"];
m0_31 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="Issue1576.cs", label="var existing = existingValue as IList", span="101-101"];
m0_37 [cluster="Newtonsoft.Json.Linq.JToken.Load(Newtonsoft.Json.JsonReader)", file="Issue1576.cs", label="Entry Newtonsoft.Json.Linq.JToken.Load(Newtonsoft.Json.JsonReader)", span="2221-2221"];
m0_26 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="Issue1576.cs", label="token.Type == JTokenType.Array", span="92-92"];
m0_29 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="Issue1576.cs", label="array.Add(token)", span="98-98"];
m0_28 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="Issue1576.cs", label="var array = new JArray()", span="97-97"];
m0_38 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type, Newtonsoft.Json.JsonSerializer)", file="Issue1576.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToObject(System.Type, Newtonsoft.Json.JsonSerializer)", span="2065-2065"];
m0_36 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="Issue1576.cs", label="Exit Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="89-89"];
m0_39 [cluster="Newtonsoft.Json.Linq.JArray.JArray()", file="Issue1576.cs", label="Entry Newtonsoft.Json.Linq.JArray.JArray()", span="59-59"];
m0_40 [cluster="Newtonsoft.Json.Linq.JArray.Add(Newtonsoft.Json.Linq.JToken)", file="Issue1576.cs", label="Entry Newtonsoft.Json.Linq.JArray.Add(Newtonsoft.Json.Linq.JToken)", span="338-338"];
m0_32 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="Issue1576.cs", label="list != null && existing != null", span="103-103"];
m0_33 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="Issue1576.cs", label=list, span="105-105"];
m0_35 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="Issue1576.cs", label="return list;", span="111-111"];
m0_34 [cluster="Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="Issue1576.cs", label="existing.Add(item)", span="107-107"];
m0_41 [cluster="System.Collections.IList.Add(object)", file="Issue1576.cs", label="Entry System.Collections.IList.Add(object)", span="0-0"];
m1_33 [cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper(object)", file="JsonDictionaryContract.cs", label="Entry Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper(object)", span="204-204"];
m1_34 [cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper(object)", file="JsonDictionaryContract.cs", label="_genericWrapperCreator == null", span="206-206"];
m1_38 [cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper(object)", file="JsonDictionaryContract.cs", label="return (IWrappedDictionary)_genericWrapperCreator(dictionary);", span="214-214"];
m1_35 [cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper(object)", file="JsonDictionaryContract.cs", label="_genericWrapperType = typeof(DictionaryWrapper<,>).MakeGenericType(DictionaryKeyType, DictionaryValueType)", span="208-208"];
m1_28 [cluster="System.Type.MakeGenericType(params System.Type[])", file="JsonDictionaryContract.cs", label="Entry System.Type.MakeGenericType(params System.Type[])", span="0-0"];
m1_36 [cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper(object)", file="JsonDictionaryContract.cs", label="ConstructorInfo genericWrapperConstructor = _genericWrapperType.GetConstructor(new[] { _genericCollectionDefinitionType })", span="210-210"];
m1_40 [cluster="System.Type.GetConstructor(System.Type[])", file="JsonDictionaryContract.cs", label="Entry System.Type.GetConstructor(System.Type[])", span="0-0"];
m1_37 [cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper(object)", file="JsonDictionaryContract.cs", label="_genericWrapperCreator = JsonTypeReflector.ReflectionDelegateFactory.CreateParameterizedConstructor(genericWrapperConstructor)", span="211-211"];
m1_41 [cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateParameterizedConstructor(System.Reflection.MethodBase)", file="JsonDictionaryContract.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateParameterizedConstructor(System.Reflection.MethodBase)", span="75-75"];
m1_42 [cluster="Newtonsoft.Json.Serialization.ObjectConstructor<T>.Invoke(params object[])", file="JsonDictionaryContract.cs", label="Entry Newtonsoft.Json.Serialization.ObjectConstructor<T>.Invoke(params object[])", span="31-31"];
m1_39 [cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper(object)", file="JsonDictionaryContract.cs", label="Exit Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper(object)", span="204-204"];
m1_43 [cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateTemporaryDictionary()", file="JsonDictionaryContract.cs", label="Entry Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateTemporaryDictionary()", span="217-217"];
m1_44 [cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateTemporaryDictionary()", file="JsonDictionaryContract.cs", label="_genericTemporaryDictionaryCreator == null", span="219-219"];
m1_45 [cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateTemporaryDictionary()", file="JsonDictionaryContract.cs", label="Type temporaryDictionaryType = typeof(Dictionary<,>).MakeGenericType(DictionaryKeyType ?? typeof(object), DictionaryValueType ?? \\ntypeof(object))", span="221-221"];
m1_47 [cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateTemporaryDictionary()", file="JsonDictionaryContract.cs", label="return (IDictionary)_genericTemporaryDictionaryCreator();", span="226-226"];
m1_46 [cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateTemporaryDictionary()", file="JsonDictionaryContract.cs", label="_genericTemporaryDictionaryCreator = JsonTypeReflector.ReflectionDelegateFactory.CreateDefaultConstructor<object>(temporaryDictionaryType)", span="223-223"];
m1_49 [cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", file="JsonDictionaryContract.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", span="76-76"];
m1_48 [cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateTemporaryDictionary()", file="JsonDictionaryContract.cs", label="Exit Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateTemporaryDictionary()", span="217-217"];
m1_3 [cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonDictionaryContract.cs", label="Entry Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", span="112-112"];
m1_4 [cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonDictionaryContract.cs", label="ContractType = JsonContractType.Dictionary", span="115-115"];
m1_7 [cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonDictionaryContract.cs", label="ReflectionUtils.ImplementsGenericDefinition(underlyingType, typeof(IDictionary<,>), out _genericCollectionDefinitionType)", span="120-120"];
m1_20 [cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonDictionaryContract.cs", label="ImmutableCollectionsUtils.TryBuildImmutableForDictionaryContract(\n                underlyingType,\n                DictionaryKeyType,\n                \\nDictionaryValueType,\n                out Type immutableCreatedType,\n                out ObjectConstructor<object> immutableParameterizedCreator)", span="191-196"];
m1_5 [cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonDictionaryContract.cs", label="Type keyType", span="117-117"];
m1_6 [cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonDictionaryContract.cs", label="Type valueType", span="118-118"];
m1_25 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="JsonDictionaryContract.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", span="293-293"];
m1_8 [cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonDictionaryContract.cs", label="keyType = _genericCollectionDefinitionType.GetGenericArguments()[0]", span="122-122"];
m1_12 [cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonDictionaryContract.cs", label="ReflectionUtils.GetDictionaryKeyValueTypes(UnderlyingType, out keyType, out valueType)", span="150-150"];
m1_26 [cluster="System.Type.GetGenericArguments()", file="JsonDictionaryContract.cs", label="Entry System.Type.GetGenericArguments()", span="0-0"];
m1_9 [cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonDictionaryContract.cs", label="valueType = _genericCollectionDefinitionType.GetGenericArguments()[1]", span="123-123"];
m1_11 [cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonDictionaryContract.cs", label="CreatedType = typeof(Dictionary<,>).MakeGenericType(keyType, valueType)", span="127-127"];
m1_15 [cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonDictionaryContract.cs", label="keyType != null && valueType != null", span="158-158"];
m1_16 [cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonDictionaryContract.cs", label="_parameterizedConstructor = CollectionUtils.ResolveEnumerableCollectionConstructor(\n                    CreatedType,\n                    \\ntypeof(KeyValuePair<,>).MakeGenericType(keyType, valueType),\n                    typeof(IDictionary<,>).MakeGenericType(keyType, \\nvalueType))", span="160-163"];
m1_18 [cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonDictionaryContract.cs", label="DictionaryKeyType = keyType", span="176-176"];
m1_10 [cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonDictionaryContract.cs", label="ReflectionUtils.IsGenericDefinition(UnderlyingType, typeof(IDictionary<,>))", span="125-125"];
m1_19 [cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonDictionaryContract.cs", label="DictionaryValueType = valueType", span="177-177"];
m1_27 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", file="JsonDictionaryContract.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", span="277-277"];
m1_29 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="JsonDictionaryContract.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", span="401-401"];
m1_13 [cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonDictionaryContract.cs", label="UnderlyingType == typeof(IDictionary)", span="152-152"];
m1_14 [cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonDictionaryContract.cs", label="CreatedType = typeof(Dictionary<object, object>)", span="154-154"];
m1_30 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type, System.Type)", file="JsonDictionaryContract.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type, System.Type)", span="125-125"];
m1_31 [cluster="System.Type.IsAssignableFrom(System.Type)", file="JsonDictionaryContract.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m1_21 [cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonDictionaryContract.cs", label="CreatedType = immutableCreatedType", span="198-198"];
m1_24 [cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonDictionaryContract.cs", label="Exit Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", span="112-112"];
m1_22 [cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonDictionaryContract.cs", label="_parameterizedCreator = immutableParameterizedCreator", span="199-199"];
m1_23 [cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonDictionaryContract.cs", label="IsReadOnlyOrFixedSize = true", span="200-200"];
m1_0 [cluster="lambda expression", file="JsonDictionaryContract.cs", label="Entry lambda expression", span="97-97"];
m1_1 [cluster="lambda expression", file="JsonDictionaryContract.cs", label="_overrideCreator = value", span="97-97"];
m1_2 [cluster="lambda expression", file="JsonDictionaryContract.cs", label="Exit lambda expression", span="97-97"];
m2_43 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.TryGetValue(string, out Newtonsoft.Json.Serialization.JsonProperty)", file="JsonPropertyCollection.cs", label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.TryGetValue(string, out Newtonsoft.Json.Serialization.JsonProperty)", span="136-136"];
m2_44 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.TryGetValue(string, out Newtonsoft.Json.Serialization.JsonProperty)", file="JsonPropertyCollection.cs", label="Dictionary == null", span="138-138"];
m2_47 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.TryGetValue(string, out Newtonsoft.Json.Serialization.JsonProperty)", file="JsonPropertyCollection.cs", label="return Dictionary.TryGetValue(key, out item);", span="144-144"];
m2_45 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.TryGetValue(string, out Newtonsoft.Json.Serialization.JsonProperty)", file="JsonPropertyCollection.cs", label="item = default(JsonProperty)", span="140-140"];
m2_46 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.TryGetValue(string, out Newtonsoft.Json.Serialization.JsonProperty)", file="JsonPropertyCollection.cs", label="return false;", span="141-141"];
m2_48 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.TryGetValue(string, out Newtonsoft.Json.Serialization.JsonProperty)", file="JsonPropertyCollection.cs", label="Exit Newtonsoft.Json.Serialization.JsonPropertyCollection.TryGetValue(string, out Newtonsoft.Json.Serialization.JsonProperty)", span="136-136"];
m2_49 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="JsonPropertyCollection.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m2_42 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetProperty(string, System.StringComparison)", file="JsonPropertyCollection.cs", label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.GetProperty(string, System.StringComparison)", span="153-153"];
m2_50 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetProperty(string, System.StringComparison)", file="JsonPropertyCollection.cs", label="comparisonType == StringComparison.Ordinal", span="156-156"];
m2_51 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetProperty(string, System.StringComparison)", file="JsonPropertyCollection.cs", label="TryGetValue(propertyName, out JsonProperty property)", span="158-158"];
m2_57 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetProperty(string, System.StringComparison)", file="JsonPropertyCollection.cs", label="string.Equals(propertyName, property.PropertyName, comparisonType)", span="169-169"];
m2_54 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetProperty(string, System.StringComparison)", file="JsonPropertyCollection.cs", label="int i = 0", span="166-166"];
m2_52 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetProperty(string, System.StringComparison)", file="JsonPropertyCollection.cs", label="return property;", span="160-160"];
m2_53 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetProperty(string, System.StringComparison)", file="JsonPropertyCollection.cs", label="return null;", span="163-163"];
m2_61 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetProperty(string, System.StringComparison)", file="JsonPropertyCollection.cs", label="Exit Newtonsoft.Json.Serialization.JsonPropertyCollection.GetProperty(string, System.StringComparison)", span="153-153"];
m2_55 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetProperty(string, System.StringComparison)", file="JsonPropertyCollection.cs", label="i < _list.Count", span="166-166"];
m2_56 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetProperty(string, System.StringComparison)", file="JsonPropertyCollection.cs", label="JsonProperty property = _list[i]", span="168-168"];
m2_59 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetProperty(string, System.StringComparison)", file="JsonPropertyCollection.cs", label="i++", span="166-166"];
m2_60 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetProperty(string, System.StringComparison)", file="JsonPropertyCollection.cs", label="return null;", span="175-175"];
m2_58 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetProperty(string, System.StringComparison)", file="JsonPropertyCollection.cs", label="return property;", span="171-171"];
m2_63 [cluster="string.Equals(string, string, System.StringComparison)", file="JsonPropertyCollection.cs", label="Entry string.Equals(string, string, System.StringComparison)", span="0-0"];
m2_6 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetKeyForItem(Newtonsoft.Json.Serialization.JsonProperty)", file="JsonPropertyCollection.cs", label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.GetKeyForItem(Newtonsoft.Json.Serialization.JsonProperty)", span="61-61"];
m2_7 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetKeyForItem(Newtonsoft.Json.Serialization.JsonProperty)", file="JsonPropertyCollection.cs", label="return item.PropertyName;", span="63-63"];
m2_8 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetKeyForItem(Newtonsoft.Json.Serialization.JsonProperty)", file="JsonPropertyCollection.cs", label="Exit Newtonsoft.Json.Serialization.JsonPropertyCollection.GetKeyForItem(Newtonsoft.Json.Serialization.JsonProperty)", span="61-61"];
m2_36 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty(string)", file="JsonPropertyCollection.cs", label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty(string)", span="125-125"];
m2_37 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty(string)", file="JsonPropertyCollection.cs", label="JsonProperty property = GetProperty(propertyName, StringComparison.Ordinal)", span="127-127"];
m2_39 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty(string)", file="JsonPropertyCollection.cs", label="property = GetProperty(propertyName, StringComparison.OrdinalIgnoreCase)", span="130-130"];
m2_38 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty(string)", file="JsonPropertyCollection.cs", label="property == null", span="128-128"];
m2_40 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty(string)", file="JsonPropertyCollection.cs", label="return property;", span="133-133"];
m2_41 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty(string)", file="JsonPropertyCollection.cs", label="Exit Newtonsoft.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty(string)", span="125-125"];
m2_9 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", file="JsonPropertyCollection.cs", label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", span="70-70"];
m2_10 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", file="JsonPropertyCollection.cs", label="Contains(property.PropertyName)", span="72-72"];
m2_11 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", file="JsonPropertyCollection.cs", label="property.Ignored", span="75-75"];
m2_13 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", file="JsonPropertyCollection.cs", label="JsonProperty existingProperty = this[property.PropertyName]", span="80-80"];
m2_18 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", file="JsonPropertyCollection.cs", label="property.DeclaringType != null && existingProperty.DeclaringType != null", span="91-91"];
m2_19 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", file="JsonPropertyCollection.cs", label="property.DeclaringType.IsSubclassOf(existingProperty.DeclaringType)\n                            || (existingProperty.DeclaringType.IsInterface() && \\nproperty.DeclaringType.ImplementInterface(existingProperty.DeclaringType))", span="93-94"];
m2_22 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", file="JsonPropertyCollection.cs", label="existingProperty.DeclaringType.IsSubclassOf(property.DeclaringType)\n                            || (property.DeclaringType.IsInterface() && \\nexistingProperty.DeclaringType.ImplementInterface(property.DeclaringType))", span="100-101"];
m2_25 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", file="JsonPropertyCollection.cs", label="throw new JsonSerializationException(''A member with the name '{0}' already exists on '{1}'. Use the JsonPropertyAttribute to specify \\nanother name.''.FormatWith(CultureInfo.InvariantCulture, property.PropertyName, _type));", span="111-111"];
m2_26 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", file="JsonPropertyCollection.cs", label="Add(property)", span="115-115"];
m2_28 [cluster="System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.Contains(TKey)", file="JsonPropertyCollection.cs", label="Entry System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.Contains(TKey)", span="0-0"];
m2_12 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", file="JsonPropertyCollection.cs", label="return;", span="77-77"];
m2_27 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", file="JsonPropertyCollection.cs", label="Exit Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", span="70-70"];
m2_14 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", file="JsonPropertyCollection.cs", label="bool duplicateProperty = true", span="81-81"];
m2_15 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", file="JsonPropertyCollection.cs", label="existingProperty.Ignored", span="83-83"];
m2_16 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", file="JsonPropertyCollection.cs", label="Remove(existingProperty)", span="86-86"];
m2_20 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", file="JsonPropertyCollection.cs", label="Remove(existingProperty)", span="97-97"];
m2_24 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", file="JsonPropertyCollection.cs", label=duplicateProperty, span="109-109"];
m2_29 [cluster="System.Collections.ObjectModel.Collection<T>.Remove(T)", file="JsonPropertyCollection.cs", label="Entry System.Collections.ObjectModel.Collection<T>.Remove(T)", span="0-0"];
m2_17 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", file="JsonPropertyCollection.cs", label="duplicateProperty = false", span="87-87"];
m2_32 [cluster="System.Type.ImplementInterface(System.Type)", file="JsonPropertyCollection.cs", label="Entry System.Type.ImplementInterface(System.Type)", span="602-602"];
m2_31 [cluster="System.Type.IsInterface()", file="JsonPropertyCollection.cs", label="Entry System.Type.IsInterface()", span="144-144"];
m2_30 [cluster="System.Type.IsSubclassOf(System.Type)", file="JsonPropertyCollection.cs", label="Entry System.Type.IsSubclassOf(System.Type)", span="0-0"];
m2_21 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", file="JsonPropertyCollection.cs", label="duplicateProperty = false", span="98-98"];
m2_23 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", file="JsonPropertyCollection.cs", label="return;", span="104-104"];
m2_33 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", file="JsonPropertyCollection.cs", label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="52-52"];
m2_34 [cluster="string.FormatWith(System.IFormatProvider, object, object)", file="JsonPropertyCollection.cs", label="Entry string.FormatWith(System.IFormatProvider, object, object)", span="52-52"];
m2_35 [cluster="System.Collections.ObjectModel.Collection<T>.Add(T)", file="JsonPropertyCollection.cs", label="Entry System.Collections.ObjectModel.Collection<T>.Add(T)", span="0-0"];
m2_0 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(System.Type)", file="JsonPropertyCollection.cs", label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(System.Type)", span="46-46"];
m2_1 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(System.Type)", file="JsonPropertyCollection.cs", label="ValidationUtils.ArgumentNotNull(type, ''type'')", span="49-49"];
m2_2 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(System.Type)", file="JsonPropertyCollection.cs", label="_type = type", span="50-50"];
m2_3 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(System.Type)", file="JsonPropertyCollection.cs", label="_list = (List<JsonProperty>)Items", span="53-53"];
m2_4 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(System.Type)", file="JsonPropertyCollection.cs", label="Exit Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(System.Type)", span="46-46"];
m3_43 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentDictionary()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentDictionary()", span="110-110"];
m3_44 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentDictionary()", file="JsonSerializerCollectionsTests.cs", label="ConcurrentDictionary<int, int> dic1 = new ConcurrentDictionary<int, int>()", span="112-112"];
m3_45 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentDictionary()", file="JsonSerializerCollectionsTests.cs", label="dic1[1] = int.MaxValue", span="113-113"];
m3_46 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentDictionary()", file="JsonSerializerCollectionsTests.cs", label="string output = JsonConvert.SerializeObject(dic1)", span="115-115"];
m3_53 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", span="0-0"];
m3_47 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentDictionary()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(@''{''''1'''':2147483647}'', output)", span="116-116"];
m3_48 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentDictionary()", file="JsonSerializerCollectionsTests.cs", label="ConcurrentDictionary<int, int> dic2 = JsonConvert.DeserializeObject<ConcurrentDictionary<int, int>>(output)", span="118-118"];
m3_12 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="524-524"];
m3_49 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentDictionary()", file="JsonSerializerCollectionsTests.cs", label="int i", span="119-119"];
m3_50 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentDictionary()", file="JsonSerializerCollectionsTests.cs", label="Assert.IsTrue(dic2.TryGetValue(1, out i))", span="120-120"];
m3_14 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="703-703"];
m3_51 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentDictionary()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(int.MaxValue, i)", span="121-121"];
m3_54 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m3_52 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentDictionary()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentDictionary()", span="110-110"];
m3_257 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedMultiArray()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedMultiArray()", span="486-486"];
m3_258 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedMultiArray()", file="JsonSerializerCollectionsTests.cs", label="var onebasedArray = Array.CreateInstance(typeof(string), new[] { 3, 3 }, new[] { 1, 2 })", span="489-489"];
m3_259 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedMultiArray()", file="JsonSerializerCollectionsTests.cs", label="var i = onebasedArray.GetLowerBound(0)", span="492-492"];
m3_260 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedMultiArray()", file="JsonSerializerCollectionsTests.cs", label="i <= onebasedArray.GetUpperBound(0)", span="492-492"];
m3_261 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedMultiArray()", file="JsonSerializerCollectionsTests.cs", label="var j = onebasedArray.GetLowerBound(1)", span="494-494"];
m3_262 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedMultiArray()", file="JsonSerializerCollectionsTests.cs", label="j <= onebasedArray.GetUpperBound(1)", span="494-494"];
m3_263 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedMultiArray()", file="JsonSerializerCollectionsTests.cs", label="onebasedArray.SetValue(i + ''_'' + j, new[] { i, j })", span="496-496"];
m3_266 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedMultiArray()", file="JsonSerializerCollectionsTests.cs", label="string output = JsonConvert.SerializeObject(onebasedArray, Formatting.Indented)", span="501-501"];
m3_251 [cluster="System.Array.CreateInstance(System.Type, int[], int[])", file="JsonSerializerCollectionsTests.cs", label="Entry System.Array.CreateInstance(System.Type, int[], int[])", span="0-0"];
m3_265 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedMultiArray()", file="JsonSerializerCollectionsTests.cs", label="i++", span="492-492"];
m3_252 [cluster="System.Array.GetLowerBound(int)", file="JsonSerializerCollectionsTests.cs", label="Entry System.Array.GetLowerBound(int)", span="0-0"];
m3_253 [cluster="System.Array.GetUpperBound(int)", file="JsonSerializerCollectionsTests.cs", label="Entry System.Array.GetUpperBound(int)", span="0-0"];
m3_264 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedMultiArray()", file="JsonSerializerCollectionsTests.cs", label="j++", span="494-494"];
m3_255 [cluster="System.Array.SetValue(object, params int[])", file="JsonSerializerCollectionsTests.cs", label="Entry System.Array.SetValue(object, params int[])", span="0-0"];
m3_267 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedMultiArray()", file="JsonSerializerCollectionsTests.cs", label="StringAssert.AreEqual(@''[\n  [\n    ''''1_2'''',\n    ''''1_3'''',\n    ''''1_4''''\n  ],\n  [\n    ''''2_2'''',\n    ''''2_3'''',\n    ''''\\n2_4''''\n  ],\n  [\n    ''''3_2'''',\n    ''''3_3'''',\n    ''''3_4''''\n  ]\n]'', output)", span="503-519"];
m3_241 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="537-537"];
m3_268 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedMultiArray()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedMultiArray()", span="486-486"];
m3_256 [cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="341-341"];
m3_676 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooManyItems()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooManyItems()", span="1480-1480"];
m3_677 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooManyItems()", file="JsonSerializerCollectionsTests.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[[1,1,1],[1,1,2,1]],[[1,2,1],[1,2,2]],[[2,1,1],[2,1,2]],[[\\n2,2,1],[2,2,2]]],''''After'''':''''After!''''}''", span="1482-1482"];
m3_678 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooManyItems()", file="JsonSerializerCollectionsTests.cs", label="ExceptionAssert.Throws<Exception>(() => JsonConvert.DeserializeObject<Array3D>(json), ''Cannot deserialize non-cubical array as \\nmultidimensional array.'')", span="1484-1484"];
m3_681 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="JsonConvert.DeserializeObject<Array3D>(json)", span="1484-1484"];
m3_679 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooManyItems()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooManyItems()", span="1480-1480"];
m3_131 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="370-370"];
m3_680 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Entry lambda expression", span="1484-1484"];
m3_432 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()", span="877-877"];
m3_433 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()", file="JsonSerializerCollectionsTests.cs", label="string s = @''host\user''", span="879-879"];
m3_434 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()", file="JsonSerializerCollectionsTests.cs", label="string serialized = JsonConvert.SerializeObject(s)", span="880-880"];
m3_437 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()", file="JsonSerializerCollectionsTests.cs", label="d1.Add(5, s)", span="884-884"];
m3_440 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()", file="JsonSerializerCollectionsTests.cs", label="d2.Add(s, 5)", span="888-888"];
m3_435 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(@''''''host\\user'''''', serialized)", span="881-881"];
m3_436 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()", file="JsonSerializerCollectionsTests.cs", label="Dictionary<int, object> d1 = new Dictionary<int, object>()", span="883-883"];
m3_438 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(@''{''''5'''':''''host\\user''''}'', JsonConvert.SerializeObject(d1))", span="885-885"];
m3_62 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m3_175 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m3_439 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()", file="JsonSerializerCollectionsTests.cs", label="Dictionary<string, object> d2 = new Dictionary<string, object>()", span="887-887"];
m3_441 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(@''{''''host\\user'''':5}'', JsonConvert.SerializeObject(d2))", span="889-889"];
m3_442 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()", span="877-877"];
m3_978 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.RemoveAt(int)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.RemoveAt(int)", span="2179-2179"];
m3_979 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.RemoveAt(int)", file="JsonSerializerCollectionsTests.cs", label="((IList<string>)_storage).RemoveAt(index)", span="2181-2181"];
m3_980 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.RemoveAt(int)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.RemoveAt(int)", span="2179-2179"];
m3_981 [cluster="System.Collections.Generic.IList<T>.RemoveAt(int)", file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Generic.IList<T>.RemoveAt(int)", span="0-0"];
m3_94 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivateParameterized()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivateParameterized()", span="184-184"];
m3_95 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivateParameterized()", file="JsonSerializerCollectionsTests.cs", label="TestCollectionPrivateParameterized c1 = new TestCollectionPrivateParameterized()", span="186-186"];
m3_96 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivateParameterized()", file="JsonSerializerCollectionsTests.cs", label="c1.Add(0)", span="187-187"];
m3_97 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivateParameterized()", file="JsonSerializerCollectionsTests.cs", label="c1.Add(1)", span="188-188"];
m3_98 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivateParameterized()", file="JsonSerializerCollectionsTests.cs", label="c1.Add(2)", span="189-189"];
m3_99 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivateParameterized()", file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(c1)", span="190-190"];
m3_78 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized.TestCollectionPrivateParameterized()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized.TestCollectionPrivateParameterized()", span="162-162"];
m3_86 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized.Add(int)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized.Add(int)", span="173-173"];
m3_100 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivateParameterized()", file="JsonSerializerCollectionsTests.cs", label="TestCollectionPrivateParameterized c2 = JsonConvert.DeserializeObject<TestCollectionPrivateParameterized>(json)", span="191-191"];
m3_101 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivateParameterized()", file="JsonSerializerCollectionsTests.cs", label="List<int> values = c2.ToList()", span="193-193"];
m3_102 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivateParameterized()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, values.Count)", span="195-195"];
m3_103 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivateParameterized()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(0, values[0])", span="196-196"];
m3_104 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivateParameterized()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, values[1])", span="197-197"];
m3_105 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivateParameterized()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, values[2])", span="198-198"];
m3_107 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m3_106 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivateParameterized()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivateParameterized()", span="184-184"];
m3_966 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.IndexOf(string)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.IndexOf(string)", span="2164-2164"];
m3_967 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.IndexOf(string)", file="JsonSerializerCollectionsTests.cs", label="return ((IList<string>)_storage).IndexOf(item);", span="2166-2166"];
m3_968 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.IndexOf(string)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.IndexOf(string)", span="2164-2164"];
m3_969 [cluster="System.Collections.Generic.IList<T>.IndexOf(T)", file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Generic.IList<T>.IndexOf(T)", span="0-0"];
m3_931 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConstructorWithReadonlyArrayProperty()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConstructorWithReadonlyArrayProperty()", span="2062-2062"];
m3_932 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConstructorWithReadonlyArrayProperty()", file="JsonSerializerCollectionsTests.cs", label="string json = @''{''''Endpoint'''':''''http://localhost'''',''''Name'''':''''account1'''',''''Dimensions'''':[{''''Key'''':''''Endpoint'''',''''\\nValue'''':''''http://localhost''''},{''''Key'''':''''Name'''',''''Value'''':''''account1''''}]}''", span="2064-2064"];
m3_933 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConstructorWithReadonlyArrayProperty()", file="JsonSerializerCollectionsTests.cs", label="AccountInfo values = JsonConvert.DeserializeObject<AccountInfo>(json)", span="2066-2066"];
m3_934 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConstructorWithReadonlyArrayProperty()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''http://localhost'', values.Endpoint)", span="2067-2067"];
m3_935 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConstructorWithReadonlyArrayProperty()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''account1'', values.Name)", span="2068-2068"];
m3_936 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConstructorWithReadonlyArrayProperty()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, values.Dimensions.Length)", span="2069-2069"];
m3_937 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConstructorWithReadonlyArrayProperty()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConstructorWithReadonlyArrayProperty()", span="2062-2062"];
m3_388 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionary()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionary()", span="752-752"];
m3_389 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionary()", file="JsonSerializerCollectionsTests.cs", label="ReadOnlyDictionary<string, int> dic = JsonConvert.DeserializeObject<ReadOnlyDictionary<string, int>>(''{'one':1,'two':2}'')", span="754-754"];
m3_390 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionary()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, dic.Count)", span="756-756"];
m3_391 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionary()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, dic[''one''])", span="758-758"];
m3_392 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionary()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, dic[''two''])", span="759-759"];
m3_393 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionary()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionary()", span="752-752"];
m3_1063 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.System.Collections.IEnumerable.GetEnumerator()", span="2441-2441"];
m3_1064 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="return _values.GetEnumerator();", span="2443-2443"];
m3_1065 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.System.Collections.IEnumerable.GetEnumerator()", span="2441-2441"];
m3_291 [cluster="System.Collections.Generic.IEnumerable<T>.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Generic.IEnumerable<T>.GetEnumerator()", span="0-0"];
m3_816 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomCollectionSerialization()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomCollectionSerialization()", span="1820-1820"];
m3_817 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomCollectionSerialization()", file="JsonSerializerCollectionsTests.cs", label="ProductCollection collection = new ProductCollection()\n            {\n                new Product() { Name = ''Test1'' },\n                \\nnew Product() { Name = ''Test2'' },\n                new Product() { Name = ''Test3'' }\n            }", span="1822-1827"];
m3_818 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomCollectionSerialization()", file="JsonSerializerCollectionsTests.cs", label="JsonSerializer jsonSerializer = new JsonSerializer()", span="1829-1829"];
m3_821 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomCollectionSerialization()", file="JsonSerializerCollectionsTests.cs", label="jsonSerializer.Serialize(sw, collection)", span="1834-1834"];
m3_824 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomCollectionSerialization()", file="JsonSerializerCollectionsTests.cs", label="CollectionAssert.AreEqual(collection, collectionNew)", span="1841-1841"];
m3_827 [cluster="Newtonsoft.Json.Tests.TestObjects.Product.Product()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Product.Product()", span="29-29"];
m3_826 [cluster="Newtonsoft.Json.Tests.TestObjects.ProductCollection.ProductCollection()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ProductCollection.ProductCollection()", span="29-29"];
m3_819 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomCollectionSerialization()", file="JsonSerializerCollectionsTests.cs", label="jsonSerializer.ReferenceLoopHandling = ReferenceLoopHandling.Ignore", span="1830-1830"];
m3_823 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomCollectionSerialization()", file="JsonSerializerCollectionsTests.cs", label="ProductCollection collectionNew = (ProductCollection)jsonSerializer.Deserialize(new JsonTextReader(new StringReader(sw.GetStringBuilder()\\n.ToString())), typeof(ProductCollection))", span="1839-1839"];
m3_828 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="557-557"];
m3_820 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomCollectionSerialization()", file="JsonSerializerCollectionsTests.cs", label="StringWriter sw = new StringWriter()", span="1832-1832"];
m3_822 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomCollectionSerialization()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(@''[{''''Name'''':''''Test1'''',''''ExpiryDate'''':''''2000-01-01T00:00:00Z'''',''''Price'''':0.0,''''Sizes'''':\\nnull},{''''Name'''':''''Test2'''',''''ExpiryDate'''':''''2000-01-01T00:00:00Z'''',''''Price'''':0.0,''''Sizes'''':null},{''''Name'''':''''\\nTest3'''',''''ExpiryDate'''':''''2000-01-01T00:00:00Z'''',''''Price'''':0.0,''''Sizes'''':null}]'',\n                sw.GetStringBuilder()\\n.ToString())", span="1836-1837"];
m3_829 [cluster="System.IO.StringWriter.StringWriter()", file="JsonSerializerCollectionsTests.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m3_830 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", span="1023-1023"];
m3_832 [cluster="System.Text.StringBuilder.ToString()", file="JsonSerializerCollectionsTests.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m3_831 [cluster="System.IO.StringWriter.GetStringBuilder()", file="JsonSerializerCollectionsTests.cs", label="Entry System.IO.StringWriter.GetStringBuilder()", span="0-0"];
m3_834 [cluster="System.IO.StringReader.StringReader(string)", file="JsonSerializerCollectionsTests.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m3_835 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", span="877-877"];
m3_833 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="82-82"];
m3_825 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomCollectionSerialization()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomCollectionSerialization()", span="1820-1820"];
m3_898 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EmptyStringInHashtableIsDeserialized()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EmptyStringInHashtableIsDeserialized()", span="2003-2003"];
m3_899 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EmptyStringInHashtableIsDeserialized()", file="JsonSerializerCollectionsTests.cs", label="string externalJson = @''{''''$type'''':''''System.Collections.Hashtable, mscorlib'''',''''testkey'''':''''''''}''", span="2005-2005"];
m3_900 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EmptyStringInHashtableIsDeserialized()", file="JsonSerializerCollectionsTests.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings { TypeNameHandling = TypeNameHandling.All }", span="2007-2007"];
m3_902 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EmptyStringInHashtableIsDeserialized()", file="JsonSerializerCollectionsTests.cs", label="Hashtable deserializeTest2 = JsonConvert.DeserializeObject<Hashtable>(externalJson, settings)", span="2010-2010"];
m3_901 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EmptyStringInHashtableIsDeserialized()", file="JsonSerializerCollectionsTests.cs", label="JsonConvert.SerializeObject(new Hashtable { { ''testkey'', '''' } }, settings)", span="2009-2009"];
m3_328 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="447-447"];
m3_758 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", span="582-582"];
m3_905 [cluster="System.Collections.Hashtable.Hashtable()", file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Hashtable.Hashtable()", span="0-0"];
m3_903 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EmptyStringInHashtableIsDeserialized()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(deserializeTest2[''testkey''], '''')", span="2012-2012"];
m3_329 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="766-766"];
m3_904 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EmptyStringInHashtableIsDeserialized()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EmptyStringInHashtableIsDeserialized()", span="2003-2003"];
m3_321 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrivateDefaultCtorList<T>.PrivateDefaultCtorList()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrivateDefaultCtorList<T>.PrivateDefaultCtorList()", span="639-639"];
m3_322 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrivateDefaultCtorList<T>.PrivateDefaultCtorList()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrivateDefaultCtorList<T>.PrivateDefaultCtorList()", span="639-639"];
m3_292 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>.System.Collections.IEnumerable.GetEnumerator()", span="582-582"];
m3_293 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="return GetEnumerator();", span="584-584"];
m3_294 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>.System.Collections.IEnumerable.GetEnumerator()", span="582-582"];
m3_288 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>.GetEnumerator()", span="577-577"];
m3_856 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", span="1869-1869"];
m3_857 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", file="JsonSerializerCollectionsTests.cs", label="Article a1 = new Article(''a1'')", span="1871-1871"];
m3_858 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", file="JsonSerializerCollectionsTests.cs", label="Article a2 = new Article(''a2'')", span="1872-1872"];
m3_860 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", file="JsonSerializerCollectionsTests.cs", label="articles1.Add(a1)", span="1875-1875"];
m3_867 [cluster="Newtonsoft.Json.Tests.TestObjects.Article.Article(string)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Article.Article(string)", span="35-35"];
m3_859 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", file="JsonSerializerCollectionsTests.cs", label="ArticleCollection articles1 = new ArticleCollection()", span="1874-1874"];
m3_861 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", file="JsonSerializerCollectionsTests.cs", label="articles1.Add(a2)", span="1876-1876"];
m3_862 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", file="JsonSerializerCollectionsTests.cs", label="string jsonText = JsonConvert.SerializeObject(articles1)", span="1878-1878"];
m3_864 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(articles1.Count, articles2.Count)", span="1882-1882"];
m3_865 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(articles1[0].Name, articles2[0].Name)", span="1883-1883"];
m3_868 [cluster="Newtonsoft.Json.Tests.TestObjects.ArticleCollection.ArticleCollection()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ArticleCollection.ArticleCollection()", span="29-29"];
m3_863 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", file="JsonSerializerCollectionsTests.cs", label="ArticleCollection articles2 = JsonConvert.DeserializeObject<ArticleCollection>(jsonText)", span="1880-1880"];
m3_866 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", span="1869-1869"];
m3_920 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericIListAndOverrideConstructor()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericIListAndOverrideConstructor()", span="2041-2041"];
m3_921 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericIListAndOverrideConstructor()", file="JsonSerializerCollectionsTests.cs", label="MyClass deserialized = JsonConvert.DeserializeObject<MyClass>(@''[''''apple'''', ''''monkey'''', ''''goose'''']'')", span="2043-2043"];
m3_922 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericIListAndOverrideConstructor()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''apple'', deserialized[0])", span="2045-2045"];
m3_923 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericIListAndOverrideConstructor()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''monkey'', deserialized[1])", span="2046-2046"];
m3_924 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericIListAndOverrideConstructor()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''goose'', deserialized[2])", span="2047-2047"];
m3_925 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericIListAndOverrideConstructor()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericIListAndOverrideConstructor()", span="2041-2041"];
m3_135 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionBadIEnumerableParameter.TestCollectionBadIEnumerableParameter(\\nSystem.Collections.Generic.List<string>)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionBadIEnumerableParameter.TestCollectionBadIEnumerableParameter(\\nSystem.Collections.Generic.List<string>)", span="251-251"];
m3_136 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionBadIEnumerableParameter.TestCollectionBadIEnumerableParameter(\\nSystem.Collections.Generic.List<string>)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionBadIEnumerableParameter.TestCollectionBadIEnumerableParameter(\\nSystem.Collections.Generic.List<string>)", span="251-251"];
m3_607 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3D()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3D()", span="1277-1277"];
m3_608 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3D()", file="JsonSerializerCollectionsTests.cs", label="Array3D aa = new Array3D()", span="1279-1279"];
m3_609 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3D()", file="JsonSerializerCollectionsTests.cs", label="aa.Before = ''Before!''", span="1280-1280"];
m3_610 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3D()", file="JsonSerializerCollectionsTests.cs", label="aa.After = ''After!''", span="1281-1281"];
m3_611 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3D()", file="JsonSerializerCollectionsTests.cs", label="aa.Coordinates = new[,,] { { { 1, 1, 1 }, { 1, 1, 2 } }, { { 1, 2, 1 }, { 1, 2, 2 } }, { { 2, 1, 1 }, { 2, 1, 2 } }, { { 2, 2, 1 }, { \\n2, 2, 2 } } }", span="1282-1282"];
m3_612 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3D()", file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(aa)", span="1284-1284"];
m3_615 [cluster="Newtonsoft.Json.Tests.Serialization.Array3D.Array3D()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Array3D.Array3D()", span="2529-2529"];
m3_613 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3D()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(@''{''''Before'''':''''Before!'''',''''Coordinates'''':[[[1,1,1],[1,1,2]],[[1,2,1],[1,2,2]],[[2,1,1],[2,1,2]],[[\\n2,2,1],[2,2,2]]],''''After'''':''''After!''''}'', json)", span="1286-1286"];
m3_614 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3D()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3D()", span="1277-1277"];
m3_663 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", span="1460-1460"];
m3_664 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", file="JsonSerializerCollectionsTests.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[[1,1,1],[1,1,2]],[[1,2,1],[1,2,2]],[[2,1,1],[2,1,2]],[[2,\\n2,1],[2,2,2]]],''''After'''':''''After!''''}''", span="1462-1462"];
m3_665 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", file="JsonSerializerCollectionsTests.cs", label="Array3D aa = JsonConvert.DeserializeObject<Array3D>(json)", span="1464-1464"];
m3_674 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(json, after)", span="1476-1476"];
m3_666 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''Before!'', aa.Before)", span="1466-1466"];
m3_667 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''After!'', aa.After)", span="1467-1467"];
m3_668 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(4, aa.Coordinates.GetLength(0))", span="1468-1468"];
m3_669 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, aa.Coordinates.GetLength(1))", span="1469-1469"];
m3_670 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, aa.Coordinates.GetLength(2))", span="1470-1470"];
m3_671 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, aa.Coordinates[0, 0, 0])", span="1471-1471"];
m3_672 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, aa.Coordinates[1, 1, 1])", span="1472-1472"];
m3_673 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", file="JsonSerializerCollectionsTests.cs", label="string after = JsonConvert.SerializeObject(aa)", span="1474-1474"];
m3_636 [cluster="System.Array.GetLength(int)", file="JsonSerializerCollectionsTests.cs", label="Entry System.Array.GetLength(int)", span="0-0"];
m3_675 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", span="1460-1460"];
m3_938 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.AccountInfo.AccountInfo(string, string)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.AccountInfo.AccountInfo(string, string)", span="2076-2076"];
m3_939 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.AccountInfo.AccountInfo(string, string)", file="JsonSerializerCollectionsTests.cs", label="this.Endpoint = endpoint", span="2078-2078"];
m3_940 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.AccountInfo.AccountInfo(string, string)", file="JsonSerializerCollectionsTests.cs", label="this.Name = name", span="2079-2079"];
m3_941 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.AccountInfo.AccountInfo(string, string)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.AccountInfo.AccountInfo(string, string)", span="2076-2076"];
m3_92 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized.System.Collections.IEnumerable.GetEnumerator()", span="180-180"];
m3_93 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized.System.Collections.IEnumerable.GetEnumerator()", span="180-180"];
m3_1111 [cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="2592-2592"];
m3_1112 [cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerCollectionsTests.cs", label="writer.WriteValue(value)", span="2594-2594"];
m3_1113 [cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="2592-2592"];
m3_1114 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(object)", span="1427-1427"];
m3_598 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray2D()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray2D()", span="1264-1264"];
m3_599 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray2D()", file="JsonSerializerCollectionsTests.cs", label="Array2D aa = new Array2D()", span="1266-1266"];
m3_600 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray2D()", file="JsonSerializerCollectionsTests.cs", label="aa.Before = ''Before!''", span="1267-1267"];
m3_601 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray2D()", file="JsonSerializerCollectionsTests.cs", label="aa.After = ''After!''", span="1268-1268"];
m3_602 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray2D()", file="JsonSerializerCollectionsTests.cs", label="aa.Coordinates = new[,] { { 1, 1 }, { 1, 2 }, { 2, 1 }, { 2, 2 } }", span="1269-1269"];
m3_603 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray2D()", file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(aa)", span="1271-1271"];
m3_606 [cluster="Newtonsoft.Json.Tests.Serialization.Array2D.Array2D()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Array2D.Array2D()", span="2522-2522"];
m3_604 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray2D()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(@''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2],[2,1],[2,2]],''''After'''':''''After!''''}'', \\njson)", span="1273-1273"];
m3_605 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray2D()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray2D()", span="1264-1264"];
m3_911 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.ReadOnlyCollectionWithArrayArgument(T[])", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.ReadOnlyCollectionWithArrayArgument(T[])", span="2431-2431"];
m3_1058 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.ReadOnlyCollectionWithArrayArgument(T[])", file="JsonSerializerCollectionsTests.cs", label="_values = args ?? (IList<T>)new List<T>()", span="2433-2433"];
m3_1059 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.ReadOnlyCollectionWithArrayArgument(T[])", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.ReadOnlyCollectionWithArrayArgument(T[])", span="2431-2431"];
m3_81 [cluster="System.Collections.Generic.List<T>.List()", file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m3_996 [cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ExtractGroups()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.CASResponce.ExtractGroups()", span="2275-2275"];
m3_998 [cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ExtractGroups()", file="JsonSerializerCollectionsTests.cs", label="this.Groups = new List<string>()", span="2277-2277"];
m3_999 [cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ExtractGroups()", file="JsonSerializerCollectionsTests.cs", label="this.Person.ContainsKey(''groups'')", span="2278-2278"];
m3_1000 [cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ExtractGroups()", file="JsonSerializerCollectionsTests.cs", label="string groupsString = this.Person[''groups'']", span="2280-2280"];
m3_1004 [cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ExtractGroups()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.CASResponce.ExtractGroups()", span="2275-2275"];
m3_1005 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m3_1001 [cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ExtractGroups()", file="JsonSerializerCollectionsTests.cs", label="string[] stringList = groupsString.Split(',')", span="2281-2281"];
m3_1006 [cluster="string.Split(params char[])", file="JsonSerializerCollectionsTests.cs", label="Entry string.Split(params char[])", span="0-0"];
m3_1002 [cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ExtractGroups()", file="JsonSerializerCollectionsTests.cs", label=stringList, span="2283-2283"];
m3_1003 [cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ExtractGroups()", file="JsonSerializerCollectionsTests.cs", label="this.Groups.Add(group)", span="2285-2285"];
m3_380 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionaryInterface()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionaryInterface()", span="739-739"];
m3_381 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionaryInterface()", file="JsonSerializerCollectionsTests.cs", label="IReadOnlyDictionary<string, int> dic = JsonConvert.DeserializeObject<IReadOnlyDictionary<string, int>>(''{'one':1,'two':2}'')", span="741-741"];
m3_382 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionaryInterface()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, dic.Count)", span="743-743"];
m3_383 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionaryInterface()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, dic[''one''])", span="745-745"];
m3_384 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionaryInterface()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, dic[''two''])", span="746-746"];
m3_385 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionaryInterface()", file="JsonSerializerCollectionsTests.cs", label="CustomAssert.IsInstanceOfType(typeof(ReadOnlyDictionary<string, int>), dic)", span="748-748"];
m3_386 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionaryInterface()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionaryInterface()", span="739-739"];
m3_387 [cluster="Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", span="314-314"];
m3_71 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.FloatKey_MaxValue()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.FloatKey_MaxValue()", span="148-148"];
m3_72 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.FloatKey_MaxValue()", file="JsonSerializerCollectionsTests.cs", label="Dictionary<float, int> dictionary = new Dictionary<float, int> { { float.MaxValue, 1 } }", span="150-150"];
m3_73 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.FloatKey_MaxValue()", file="JsonSerializerCollectionsTests.cs", label="string output = JsonConvert.SerializeObject(dictionary)", span="151-151"];
m3_74 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.FloatKey_MaxValue()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(@''{''''3.40282347E+38'''':1}'', output)", span="152-152"];
m3_75 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.FloatKey_MaxValue()", file="JsonSerializerCollectionsTests.cs", label="Dictionary<float, int> deserializedValue = JsonConvert.DeserializeObject<Dictionary<float, int>>(output)", span="154-154"];
m3_76 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.FloatKey_MaxValue()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(float.MaxValue, deserializedValue.First().Key)", span="155-155"];
m3_77 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.FloatKey_MaxValue()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.FloatKey_MaxValue()", span="148-148"];
m3_63 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m3_373 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollection()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollection()", span="727-727"];
m3_374 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollection()", file="JsonSerializerCollectionsTests.cs", label="ReadOnlyCollection<int> list = JsonConvert.DeserializeObject<ReadOnlyCollection<int>>(''[1,2,3]'')", span="729-729"];
m3_375 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollection()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, list.Count)", span="731-731"];
m3_376 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollection()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, list[0])", span="733-733"];
m3_377 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollection()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, list[1])", span="734-734"];
m3_378 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollection()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, list[2])", span="735-735"];
m3_379 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollection()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollection()", span="727-727"];
m3_625 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()", span="1356-1356"];
m3_626 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()", file="JsonSerializerCollectionsTests.cs", label="string json = @''{\n  ''''Before'''': ''''Before!'''',\n  ''''Coordinates'''': [\n    [\n      [\n        1.0,\n        1.0,\n        \\n1.0\n      ],\n      [\n        1.0,\n        1.0,\n        2.0\n      ]\n    ],\n    [\n      [\n        1.0,\n        2.0,\n        \\n1.0\n      ],\n      [\n        1.0,\n        2.0,\n        2.0\n      ]\n    ],\n    [\n      [\n        2.0,\n        1.0,\n        \\n1.0\n      ],\n      [\n        2.0,\n        1.0,\n        2.0\n      ]\n    ],\n    [\n      [\n        2.0,\n        2.0,\n        \\n1.0\n      ],\n      [\n        2.0,\n        2.0,\n        2.0\n      ]\n    ]\n  ],\n  ''''After'''': ''''After!''''\n}''", span="1358-1411"];
m3_627 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()", file="JsonSerializerCollectionsTests.cs", label="Array3DWithConverter aa = JsonConvert.DeserializeObject<Array3DWithConverter>(json)", span="1413-1413"];
m3_628 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''Before!'', aa.Before)", span="1415-1415"];
m3_629 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''After!'', aa.After)", span="1416-1416"];
m3_630 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(4, aa.Coordinates.GetLength(0))", span="1417-1417"];
m3_631 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, aa.Coordinates.GetLength(1))", span="1418-1418"];
m3_632 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, aa.Coordinates.GetLength(2))", span="1419-1419"];
m3_633 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, aa.Coordinates[0, 0, 0])", span="1420-1420"];
m3_634 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, aa.Coordinates[1, 1, 1])", span="1421-1421"];
m3_635 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()", span="1356-1356"];
m3_793 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArrayAsArrayList()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArrayAsArrayList()", span="1773-1773"];
m3_794 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArrayAsArrayList()", file="JsonSerializerCollectionsTests.cs", label="string jsonText = @''[3, ''''somestring'''',[1,2,3],{}]''", span="1775-1775"];
m3_795 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArrayAsArrayList()", file="JsonSerializerCollectionsTests.cs", label="ArrayList o = JsonConvert.DeserializeObject<ArrayList>(jsonText)", span="1776-1776"];
m3_796 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArrayAsArrayList()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(4, o.Count)", span="1778-1778"];
m3_797 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArrayAsArrayList()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, ((JArray)o[2]).Count)", span="1779-1779"];
m3_798 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArrayAsArrayList()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(0, ((JObject)o[3]).Count)", span="1780-1780"];
m3_799 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArrayAsArrayList()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArrayAsArrayList()", span="1773-1773"];
m3_959 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.CopyTo(string[], int)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.CopyTo(string[], int)", span="2154-2154"];
m3_960 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.CopyTo(string[], int)", file="JsonSerializerCollectionsTests.cs", label="((IList<string>)_storage).CopyTo(array, arrayIndex)", span="2156-2156"];
m3_961 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.CopyTo(string[], int)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.CopyTo(string[], int)", span="2154-2154"];
m3_962 [cluster="System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", span="0-0"];
m3_203 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorBadIEnumerableParameter()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorBadIEnumerableParameter()", span="370-370"];
m3_204 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorBadIEnumerableParameter()", file="JsonSerializerCollectionsTests.cs", label="ExceptionAssert.Throws<JsonException>(\n                () => JsonConvert.SerializeObject(new TestDictionaryBadIEnumerableParameter(\\nnull)),\n                ''Constructor for 'Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests+TestDictionaryBadIEnumerableParameter' \\nmust have no parameters or a single parameter that implements 'System.Collections.Generic.IEnumerable`1[System.Collections.Generic.KeyValuePair`\\n2[System.String,System.Int32]]'.'')", span="372-374"];
m3_205 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorBadIEnumerableParameter()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorBadIEnumerableParameter()", span="370-370"];
m3_206 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Entry lambda expression", span="373-373"];
m3_561 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullToNonNullableKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullToNonNullableKeyValuePairArray()", span="1128-1128"];
m3_562 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullToNonNullableKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="string json = @''[ null ]''", span="1130-1130"];
m3_563 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullToNonNullableKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<IList<KeyValuePair<string, IList<string>>>>(\\njson); }, ''Cannot convert null value to KeyValuePair. Path '[0]', line 1, position 6.'')", span="1132-1132"];
m3_566 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="JsonConvert.DeserializeObject<IList<KeyValuePair<string, IList<string>>>>(json)", span="1132-1132"];
m3_564 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullToNonNullableKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullToNonNullableKeyValuePairArray()", span="1128-1128"];
m3_565 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Entry lambda expression", span="1132-1132"];
m3_79 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized.TestCollectionPrivateParameterized()", file="JsonSerializerCollectionsTests.cs", label="_bars = new List<int>()", span="164-164"];
m3_80 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized.TestCollectionPrivateParameterized()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized.TestCollectionPrivateParameterized()", span="162-162"];
m3_153 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryPrivateParameterized.TestDictionaryPrivateParameterized()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryPrivateParameterized.TestDictionaryPrivateParameterized()", span="289-289"];
m3_154 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryPrivateParameterized.TestDictionaryPrivateParameterized()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryPrivateParameterized.TestDictionaryPrivateParameterized()", span="289-289"];
m3_985 [cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.CASResponce(string)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.CASResponce.CASResponce(string)", span="2262-2262"];
m3_986 [cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.CASResponce(string)", file="JsonSerializerCollectionsTests.cs", label="this.Domain = ''''", span="2264-2264"];
m3_991 [cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.CASResponce(string)", file="JsonSerializerCollectionsTests.cs", label="ParseReplyXML(xmlResponce)", span="2270-2270"];
m3_987 [cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.CASResponce(string)", file="JsonSerializerCollectionsTests.cs", label="this.Mail = ''''", span="2265-2265"];
m3_988 [cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.CASResponce(string)", file="JsonSerializerCollectionsTests.cs", label="this.Surname = ''''", span="2266-2266"];
m3_989 [cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.CASResponce(string)", file="JsonSerializerCollectionsTests.cs", label="this.Givenname = ''''", span="2267-2267"];
m3_990 [cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.CASResponce(string)", file="JsonSerializerCollectionsTests.cs", label="this.CommonName = ''''", span="2268-2268"];
m3_992 [cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.CASResponce(string)", file="JsonSerializerCollectionsTests.cs", label="ExtractGroups()", span="2271-2271"];
m3_995 [cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)", span="2317-2317"];
m3_993 [cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.CASResponce(string)", file="JsonSerializerCollectionsTests.cs", label="ExtractLanguage()", span="2272-2272"];
m3_994 [cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.CASResponce(string)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.CASResponce.CASResponce(string)", span="2262-2262"];
m3_997 [cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ExtractLanguage()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.CASResponce.ExtractLanguage()", span="2291-2291"];
m3_974 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.Remove(string)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.Remove(string)", span="2174-2174"];
m3_975 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.Remove(string)", file="JsonSerializerCollectionsTests.cs", label="return ((IList<string>)_storage).Remove(item);", span="2176-2176"];
m3_976 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.Remove(string)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.Remove(string)", span="2174-2174"];
m3_977 [cluster="System.Collections.Generic.ICollection<T>.Remove(T)", file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Generic.ICollection<T>.Remove(T)", span="0-0"];
m3_1017 [cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)", file="JsonSerializerCollectionsTests.cs", label="System.Xml.Linq.XDocument xDoc = XDocument.Parse(xmlString)", span="2321-2321"];
m3_1049 [cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)", file="JsonSerializerCollectionsTests.cs", label="this.XMLResponce = xmlString", span="2378-2378"];
m3_1018 [cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)", file="JsonSerializerCollectionsTests.cs", label="var root = xDoc.Root", span="2323-2323"];
m3_1019 [cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)", file="JsonSerializerCollectionsTests.cs", label="string ns = ''http://www.yale.edu/tp/cas''", span="2325-2325"];
m3_1020 [cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)", file="JsonSerializerCollectionsTests.cs", label="XElement auth = root.Element(XName.Get(''authenticationSuccess'', ns))", span="2327-2327"];
m3_1022 [cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)", file="JsonSerializerCollectionsTests.cs", label="auth = root.Element(XName.Get(''authenticationFailure'', ns))", span="2330-2330"];
m3_1023 [cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)", file="JsonSerializerCollectionsTests.cs", label="XElement xNodeUser = auth.Element(XName.Get(''user'', ns))", span="2332-2332"];
m3_1021 [cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)", file="JsonSerializerCollectionsTests.cs", label="auth == null", span="2329-2329"];
m3_1024 [cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)", file="JsonSerializerCollectionsTests.cs", label="XElement eduPers = auth.Element(XName.Get(''norEduPerson'', ''''))", span="2334-2334"];
m3_1027 [cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)", file="JsonSerializerCollectionsTests.cs", label="xNodeUser != null", span="2339-2339"];
m3_1028 [cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)", file="JsonSerializerCollectionsTests.cs", label="casUser = xNodeUser.Value", span="2341-2341"];
m3_1025 [cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)", file="JsonSerializerCollectionsTests.cs", label="string casUser = ''''", span="2336-2336"];
m3_1029 [cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)", file="JsonSerializerCollectionsTests.cs", label="eduPers != null", span="2343-2343"];
m3_1030 [cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)", file="JsonSerializerCollectionsTests.cs", label="eduPers.Elements()", span="2345-2345"];
m3_1026 [cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)", file="JsonSerializerCollectionsTests.cs", label="Dictionary<string, string> eduPerson = new Dictionary<string, string>()", span="2337-2337"];
m3_1034 [cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)", file="JsonSerializerCollectionsTests.cs", label="casUser.Trim() != ''''", span="2359-2359"];
m3_1035 [cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)", file="JsonSerializerCollectionsTests.cs", label="this.user = casUser", span="2361-2361"];
m3_1031 [cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)", file="JsonSerializerCollectionsTests.cs", label="!eduPerson.ContainsKey(xPersonValue.Name.LocalName)", span="2347-2347"];
m3_1032 [cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)", file="JsonSerializerCollectionsTests.cs", label="eduPerson.Add(xPersonValue.Name.LocalName, xPersonValue.Value)", span="2349-2349"];
m3_1033 [cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)", file="JsonSerializerCollectionsTests.cs", label="eduPerson[xPersonValue.Name.LocalName] = eduPerson[xPersonValue.Name.LocalName] + '';'' + xPersonValue.Value", span="2353-2353"];
m3_1036 [cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)", file="JsonSerializerCollectionsTests.cs", label="eduPerson.ContainsKey(''domain'')", span="2364-2364"];
m3_1037 [cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)", file="JsonSerializerCollectionsTests.cs", label="this.Domain = eduPerson[''domain'']", span="2365-2365"];
m3_1038 [cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)", file="JsonSerializerCollectionsTests.cs", label="eduPerson.ContainsKey(''organizationName'')", span="2366-2366"];
m3_1039 [cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)", file="JsonSerializerCollectionsTests.cs", label="this.OrganizationName = eduPerson[''organizationName'']", span="2367-2367"];
m3_1040 [cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)", file="JsonSerializerCollectionsTests.cs", label="eduPerson.ContainsKey(''mail'')", span="2368-2368"];
m3_1041 [cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)", file="JsonSerializerCollectionsTests.cs", label="this.Mail = eduPerson[''mail'']", span="2369-2369"];
m3_1042 [cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)", file="JsonSerializerCollectionsTests.cs", label="eduPerson.ContainsKey(''sn'')", span="2370-2370"];
m3_1043 [cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)", file="JsonSerializerCollectionsTests.cs", label="this.Surname = eduPerson[''sn'']", span="2371-2371"];
m3_1044 [cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)", file="JsonSerializerCollectionsTests.cs", label="eduPerson.ContainsKey(''gn'')", span="2372-2372"];
m3_1045 [cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)", file="JsonSerializerCollectionsTests.cs", label="this.Givenname = eduPerson[''gn'']", span="2373-2373"];
m3_1046 [cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)", file="JsonSerializerCollectionsTests.cs", label="eduPerson.ContainsKey(''cn'')", span="2374-2374"];
m3_1047 [cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)", file="JsonSerializerCollectionsTests.cs", label="this.CommonName = eduPerson[''cn'']", span="2375-2375"];
m3_1048 [cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)", file="JsonSerializerCollectionsTests.cs", label="this.Person = eduPerson", span="2377-2377"];
m3_1016 [cluster="string.Trim()", file="JsonSerializerCollectionsTests.cs", label="Entry string.Trim()", span="0-0"];
m3_1050 [cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)", file="JsonSerializerCollectionsTests.cs", label="this.user = ''''", span="2382-2382"];
m3_1051 [cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)", span="2317-2317"];
m3_1137 [cluster="Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.CanConvert(System.Type)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.CanConvert(System.Type)", span="2636-2636"];
m3_1138 [cluster="Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.CanConvert(System.Type)", file="JsonSerializerCollectionsTests.cs", label="return (objectType == typeof(string));", span="2638-2638"];
m3_1139 [cluster="Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.CanConvert(System.Type)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.CanConvert(System.Type)", span="2636-2636"];
m3_64 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DoubleKey_MaxValue()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DoubleKey_MaxValue()", span="137-137"];
m3_65 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DoubleKey_MaxValue()", file="JsonSerializerCollectionsTests.cs", label="Dictionary<double, int> dictionary = new Dictionary<double, int> { { double.MaxValue, 1 } }", span="139-139"];
m3_66 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DoubleKey_MaxValue()", file="JsonSerializerCollectionsTests.cs", label="string output = JsonConvert.SerializeObject(dictionary)", span="140-140"];
m3_67 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DoubleKey_MaxValue()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(@''{''''1.7976931348623157E+308'''':1}'', output)", span="141-141"];
m3_68 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DoubleKey_MaxValue()", file="JsonSerializerCollectionsTests.cs", label="Dictionary<double, int> deserializedValue = JsonConvert.DeserializeObject<Dictionary<double, int>>(output)", span="143-143"];
m3_69 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DoubleKey_MaxValue()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(double.MaxValue, deserializedValue.First().Key)", span="144-144"];
m3_70 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DoubleKey_MaxValue()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DoubleKey_MaxValue()", span="137-137"];
m3_716 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIncomplete3DArray()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIncomplete3DArray()", span="1535-1535"];
m3_717 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIncomplete3DArray()", file="JsonSerializerCollectionsTests.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[/*hi*/[/*hi*/[1/*hi*/,/*hi*/1/*hi*/,1]/*hi*/,/*hi*/[1,1''", span="1537-1537"];
m3_718 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIncomplete3DArray()", file="JsonSerializerCollectionsTests.cs", label="ExceptionAssert.Throws<JsonException>(() => JsonConvert.DeserializeObject<Array3D>(json))", span="1539-1539"];
m3_721 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="JsonConvert.DeserializeObject<Array3D>(json)", span="1539-1539"];
m3_719 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIncomplete3DArray()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIncomplete3DArray()", span="1535-1535"];
m3_720 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Entry lambda expression", span="1539-1539"];
m3_1108 [cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.System.Collections.IEnumerable.GetEnumerator()", span="2580-2580"];
m3_1109 [cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="return GetEnumerator();", span="2582-2582"];
m3_1110 [cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.System.Collections.IEnumerable.GetEnumerator()", span="2580-2580"];
m3_1102 [cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GetEnumerator()", span="2565-2565"];
m3_333 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrivateDefaultCtorWithIEnumerableCtorList<T>.PrivateDefaultCtorWithIEnumerableCtorList()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrivateDefaultCtorWithIEnumerableCtorList<T>.PrivateDefaultCtorWithIEnumerableCtorList()", span="659-659"];
m3_334 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrivateDefaultCtorWithIEnumerableCtorList<T>.PrivateDefaultCtorWithIEnumerableCtorList()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrivateDefaultCtorWithIEnumerableCtorList<T>.PrivateDefaultCtorWithIEnumerableCtorList()", span="659-659"];
m3_495 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringAppenderConverterTest()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringAppenderConverterTest()", span="1004-1004"];
m3_496 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringAppenderConverterTest()", file="JsonSerializerCollectionsTests.cs", label="Movie p = new Movie()", span="1006-1006"];
m3_497 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringAppenderConverterTest()", file="JsonSerializerCollectionsTests.cs", label="p.Name = ''Existing,''", span="1007-1007"];
m3_498 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringAppenderConverterTest()", file="JsonSerializerCollectionsTests.cs", label="JsonConvert.PopulateObject(''{'Name':'Appended'}'', p, new JsonSerializerSettings\n            {\n                Converters = new \\nList<JsonConverter> { new StringAppenderConverter() }\n            })", span="1009-1012"];
m3_499 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringAppenderConverterTest()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''Existing,Appended'', p.Name)", span="1014-1014"];
m3_492 [cluster="Newtonsoft.Json.Tests.TestObjects.Movie.Movie()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Movie.Movie()", span="30-30"];
m3_501 [cluster="Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.StringAppenderConverter()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.StringAppenderConverter()", span="2621-2621"];
m3_494 [cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.JsonConvert.PopulateObject(string, object, Newtonsoft.Json.JsonSerializerSettings)", span="836-836"];
m3_500 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringAppenderConverterTest()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringAppenderConverterTest()", span="1004-1004"];
m3_800 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", span="1785-1785"];
m3_801 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", file="JsonSerializerCollectionsTests.cs", label="Name name = new Name(''The Idiot in Next To Me'')", span="1787-1787"];
m3_802 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", file="JsonSerializerCollectionsTests.cs", label="PhoneNumber p1 = new PhoneNumber(''555-1212'')", span="1789-1789"];
m3_804 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", file="JsonSerializerCollectionsTests.cs", label="name.pNumbers.Add(p1)", span="1792-1792"];
m3_805 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", file="JsonSerializerCollectionsTests.cs", label="name.pNumbers.Add(p2)", span="1793-1793"];
m3_806 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(name, Formatting.Indented)", span="1795-1795"];
m3_814 [cluster="Newtonsoft.Json.Tests.TestObjects.Name.Name(string)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Name.Name(string)", span="35-35"];
m3_815 [cluster="Newtonsoft.Json.Tests.TestObjects.PhoneNumber.PhoneNumber(string)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.PhoneNumber.PhoneNumber(string)", span="31-31"];
m3_803 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", file="JsonSerializerCollectionsTests.cs", label="PhoneNumber p2 = new PhoneNumber(''444-1212'')", span="1790-1790"];
m3_807 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", file="JsonSerializerCollectionsTests.cs", label="StringAssert.AreEqual(@''{\n  ''''personsName'''': ''''The Idiot in Next To Me'''',\n  ''''pNumbers'''': [\n    {\n      ''''phoneNumber'''': ''''\\n555-1212''''\n    },\n    {\n      ''''phoneNumber'''': ''''444-1212''''\n    }\n  ]\n}'', json)", span="1797-1807"];
m3_808 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", file="JsonSerializerCollectionsTests.cs", label="Name newName = JsonConvert.DeserializeObject<Name>(json)", span="1809-1809"];
m3_809 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''The Idiot in Next To Me'', newName.personsName)", span="1811-1811"];
m3_810 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, newName.pNumbers.Count)", span="1814-1814"];
m3_811 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''555-1212'', newName.pNumbers[0].phoneNumber)", span="1815-1815"];
m3_812 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''444-1212'', newName.pNumbers[1].phoneNumber)", span="1816-1816"];
m3_813 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", span="1785-1785"];
m3_242 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedArray()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedArray()", span="467-467"];
m3_243 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedArray()", file="JsonSerializerCollectionsTests.cs", label="var onebasedArray = Array.CreateInstance(typeof(string), new[] { 3 }, new[] { 2 })", span="469-469"];
m3_244 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedArray()", file="JsonSerializerCollectionsTests.cs", label="var i = onebasedArray.GetLowerBound(0)", span="471-471"];
m3_245 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedArray()", file="JsonSerializerCollectionsTests.cs", label="i <= onebasedArray.GetUpperBound(0)", span="471-471"];
m3_246 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedArray()", file="JsonSerializerCollectionsTests.cs", label="onebasedArray.SetValue(i.ToString(CultureInfo.InvariantCulture), new[] { i, })", span="473-473"];
m3_248 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedArray()", file="JsonSerializerCollectionsTests.cs", label="string output = JsonConvert.SerializeObject(onebasedArray, Formatting.Indented)", span="476-476"];
m3_247 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedArray()", file="JsonSerializerCollectionsTests.cs", label="i++", span="471-471"];
m3_254 [cluster="int.ToString(System.IFormatProvider)", file="JsonSerializerCollectionsTests.cs", label="Entry int.ToString(System.IFormatProvider)", span="0-0"];
m3_249 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedArray()", file="JsonSerializerCollectionsTests.cs", label="StringAssert.AreEqual(@''[\n  ''''2'''',\n  ''''3'''',\n  ''''4''''\n]'', output)", span="478-482"];
m3_250 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedArray()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedArray()", span="467-467"];
m3_219 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNameValueCollection()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNameValueCollection()", span="407-407"];
m3_220 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNameValueCollection()", file="JsonSerializerCollectionsTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\n                () => JsonConvert.DeserializeObject<NameValueCollectionTestClass>(''{\\nCollection:[]}''),\n                ''Cannot create and populate list type System.Collections.Specialized.NameValueCollection. Path '\\nCollection', line 1, position 13.'')", span="409-411"];
m3_221 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNameValueCollection()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNameValueCollection()", span="407-407"];
m3_222 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Entry lambda expression", span="410-410"];
m3_780 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", span="1754-1754"];
m3_781 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", file="JsonSerializerCollectionsTests.cs", label="string json = @''{''''action'''':''''Router'''',''''method'''':''''Navigate'''',''''data'''':[''''dashboard'''',[''''id'''', 1, ''''\\nteststring'''', ''''test''''],{''''one'''':1}],''''type'''':''''rpc'''',''''tid'''':2}''", span="1756-1756"];
m3_782 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", file="JsonSerializerCollectionsTests.cs", label="ObjectArrayPropertyTest o = JsonConvert.DeserializeObject<ObjectArrayPropertyTest>(json)", span="1758-1758"];
m3_783 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''Router'', o.Action)", span="1760-1760"];
m3_784 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''Navigate'', o.Method)", span="1761-1761"];
m3_785 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, o.Data.Length)", span="1762-1762"];
m3_786 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''dashboard'', o.Data[0])", span="1763-1763"];
m3_787 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", file="JsonSerializerCollectionsTests.cs", label="CustomAssert.IsInstanceOfType(typeof(JArray), o.Data[1])", span="1764-1764"];
m3_788 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(4, ((JArray)o.Data[1]).Count)", span="1765-1765"];
m3_789 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", file="JsonSerializerCollectionsTests.cs", label="CustomAssert.IsInstanceOfType(typeof(JObject), o.Data[2])", span="1766-1766"];
m3_790 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, ((JObject)o.Data[2]).Count)", span="1767-1767"];
m3_791 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, (int)((JObject)o.Data[2])[''one''])", span="1768-1768"];
m3_792 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", span="1754-1754"];
m3_942 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.MyClass()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.MyClass()", span="2099-2099"];
m3_943 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.MyClass()", file="JsonSerializerCollectionsTests.cs", label="_storage = new List<string>()", span="2101-2101"];
m3_944 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.MyClass()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.MyClass()", span="2099-2099"];
m3_338 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializePrivateListConstructor()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializePrivateListConstructor()", span="671-671"];
m3_339 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializePrivateListConstructor()", file="JsonSerializerCollectionsTests.cs", label="var list = JsonConvert.DeserializeObject<PrivateDefaultCtorWithIEnumerableCtorList<int>>(''[1,2]'')", span="673-673"];
m3_340 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializePrivateListConstructor()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, list.Count)", span="675-675"];
m3_341 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializePrivateListConstructor()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, list[0])", span="676-676"];
m3_342 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializePrivateListConstructor()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, list[1])", span="677-677"];
m3_343 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializePrivateListConstructor()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(0, list[2])", span="678-678"];
m3_344 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializePrivateListConstructor()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializePrivateListConstructor()", span="671-671"];
m3_345 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNonIsoDateDictionaryKey()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNonIsoDateDictionaryKey()", span="682-682"];
m3_346 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNonIsoDateDictionaryKey()", file="JsonSerializerCollectionsTests.cs", label="Dictionary<DateTime, string> d = JsonConvert.DeserializeObject<Dictionary<DateTime, string>>(@''{''''04/28/2013 00:00:00'''':''''\\ntest''''}'')", span="684-684"];
m3_347 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNonIsoDateDictionaryKey()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, d.Count)", span="686-686"];
m3_349 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNonIsoDateDictionaryKey()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''test'', d[key])", span="689-689"];
m3_348 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNonIsoDateDictionaryKey()", file="JsonSerializerCollectionsTests.cs", label="DateTime key = DateTime.Parse(''04/28/2013 00:00:00'', CultureInfo.InvariantCulture)", span="688-688"];
m3_351 [cluster="System.DateTime.Parse(string, System.IFormatProvider)", file="JsonSerializerCollectionsTests.cs", label="Entry System.DateTime.Parse(string, System.IFormatProvider)", span="0-0"];
m3_350 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNonIsoDateDictionaryKey()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNonIsoDateDictionaryKey()", span="682-682"];
m3_145 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorNonGeneric()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorNonGeneric()", span="275-275"];
m3_146 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorNonGeneric()", file="JsonSerializerCollectionsTests.cs", label="string json = @''[1,2,3]''", span="277-277"];
m3_147 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorNonGeneric()", file="JsonSerializerCollectionsTests.cs", label="TestCollectionNonGeneric l = JsonConvert.DeserializeObject<TestCollectionNonGeneric>(json)", span="278-278"];
m3_148 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorNonGeneric()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, l.Count)", span="280-280"];
m3_149 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorNonGeneric()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1L, l[0])", span="281-281"];
m3_150 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorNonGeneric()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2L, l[1])", span="282-282"];
m3_151 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorNonGeneric()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3L, l[2])", span="283-283"];
m3_152 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorNonGeneric()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorNonGeneric()", span="275-275"];
m3_420 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.GetEnumerator()", span="844-844"];
m3_421 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="return _values.GetEnumerator();", span="846-846"];
m3_422 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.GetEnumerator()", span="844-844"];
m3_906 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeCollectionWithConstructorArrayArgument()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeCollectionWithConstructorArrayArgument()", span="2017-2017"];
m3_907 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeCollectionWithConstructorArrayArgument()", file="JsonSerializerCollectionsTests.cs", label="var v = new ReadOnlyCollectionWithArrayArgument<double>(new[] { -0.014147478859765236, -0.011419606805541858, -0.010038461483676238 })", span="2019-2019"];
m3_908 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeCollectionWithConstructorArrayArgument()", file="JsonSerializerCollectionsTests.cs", label="var json = JsonConvert.SerializeObject(v)", span="2020-2020"];
m3_909 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeCollectionWithConstructorArrayArgument()", file="JsonSerializerCollectionsTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\n            {\n                JsonConvert.DeserializeObject<ReadOnlyCollectionWithArrayArgument<\\ndouble>>(json);\n            }, ''Unable to find a constructor to use for type Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument`\\n1[System.Double]. Path '', line 1, position 1.'')", span="2022-2025"];
m3_913 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="JsonConvert.DeserializeObject<ReadOnlyCollectionWithArrayArgument<double>>(json)", span="2024-2024"];
m3_910 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeCollectionWithConstructorArrayArgument()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeCollectionWithConstructorArrayArgument()", span="2017-2017"];
m3_912 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Entry lambda expression", span="2022-2025"];
m3_113 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivate()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivate()", span="215-215"];
m3_114 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivate()", file="JsonSerializerCollectionsTests.cs", label="TestCollectionPrivate c1 = TestCollectionPrivate.Create()", span="217-217"];
m3_115 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivate()", file="JsonSerializerCollectionsTests.cs", label="c1.Add(0)", span="218-218"];
m3_116 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivate()", file="JsonSerializerCollectionsTests.cs", label="c1.Add(1)", span="219-219"];
m3_117 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivate()", file="JsonSerializerCollectionsTests.cs", label="c1.Add(2)", span="220-220"];
m3_118 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivate()", file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(c1)", span="221-221"];
m3_110 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivate.Create()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivate.Create()", span="208-208"];
m3_119 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivate()", file="JsonSerializerCollectionsTests.cs", label="TestCollectionPrivate c2 = JsonConvert.DeserializeObject<TestCollectionPrivate>(json)", span="222-222"];
m3_120 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivate()", file="JsonSerializerCollectionsTests.cs", label="List<int> values = c2.ToList()", span="224-224"];
m3_121 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivate()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, values.Count)", span="226-226"];
m3_122 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivate()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(0, values[0])", span="227-227"];
m3_123 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivate()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, values[1])", span="228-228"];
m3_124 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivate()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, values[2])", span="229-229"];
m3_125 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivate()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivate()", span="215-215"];
m3_201 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryBadIEnumerableParameter.TestDictionaryBadIEnumerableParameter(\\nSystem.Collections.Generic.Dictionary<string, string>)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryBadIEnumerableParameter.TestDictionaryBadIEnumerableParameter(\\nSystem.Collections.Generic.Dictionary<string, string>)", span="364-364"];
m3_202 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryBadIEnumerableParameter.TestDictionaryBadIEnumerableParameter(\\nSystem.Collections.Generic.Dictionary<string, string>)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryBadIEnumerableParameter.TestDictionaryBadIEnumerableParameter(\\nSystem.Collections.Generic.Dictionary<string, string>)", span="364-364"];
m3_963 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.GetEnumerator()", span="2159-2159"];
m3_964 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="return ((IList<string>)_storage).GetEnumerator();", span="2161-2161"];
m3_965 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.GetEnumerator()", span="2159-2159"];
m3_1088 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.RemoveAt(int)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.RemoveAt(int)", span="2483-2483"];
m3_1089 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.RemoveAt(int)", file="JsonSerializerCollectionsTests.cs", label="throw new NotImplementedException();", span="2485-2485"];
m3_1090 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.RemoveAt(int)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.RemoveAt(int)", span="2483-2483"];
m3_1069 [cluster="System.NotImplementedException.NotImplementedException()", file="JsonSerializerCollectionsTests.cs", label="Entry System.NotImplementedException.NotImplementedException()", span="0-0"];
m3_1070 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.Clear()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.Clear()", span="2451-2451"];
m3_1071 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.Clear()", file="JsonSerializerCollectionsTests.cs", label="throw new NotImplementedException();", span="2453-2453"];
m3_1072 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.Clear()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.Clear()", span="2451-2451"];
m3_225 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomConcurrentDictionary.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomConcurrentDictionary.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", span="424-424"];
m3_226 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomConcurrentDictionary.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonSerializerCollectionsTests.cs", label="((IDictionary)this).Add(''key2'', new List<SomeObject>\n                {\n                    new SomeObject\n                    {\n                        \\nText1 = ''value2''\n                    }\n                })", span="426-432"];
m3_228 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SomeObject.SomeObject()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SomeObject.SomeObject()", span="416-416"];
m3_227 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomConcurrentDictionary.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomConcurrentDictionary.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", span="424-424"];
m3_229 [cluster="System.Collections.IDictionary.Add(object, object)", file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.IDictionary.Add(object, object)", span="0-0"];
m3_30 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentStack()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentStack()", span="95-95"];
m3_31 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentStack()", file="JsonSerializerCollectionsTests.cs", label="ConcurrentStack<int> stack1 = new ConcurrentStack<int>()", span="97-97"];
m3_32 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentStack()", file="JsonSerializerCollectionsTests.cs", label="stack1.Push(1)", span="98-98"];
m3_33 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentStack()", file="JsonSerializerCollectionsTests.cs", label="string output = JsonConvert.SerializeObject(stack1)", span="100-100"];
m3_40 [cluster="System.Collections.Concurrent.ConcurrentStack<T>.ConcurrentStack()", file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Concurrent.ConcurrentStack<T>.ConcurrentStack()", span="0-0"];
m3_41 [cluster="System.Collections.Concurrent.ConcurrentStack<T>.Push(T)", file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Concurrent.ConcurrentStack<T>.Push(T)", span="0-0"];
m3_34 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentStack()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(@''[1]'', output)", span="101-101"];
m3_35 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentStack()", file="JsonSerializerCollectionsTests.cs", label="ConcurrentStack<int> stack2 = JsonConvert.DeserializeObject<ConcurrentStack<int>>(output)", span="103-103"];
m3_36 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentStack()", file="JsonSerializerCollectionsTests.cs", label="int i", span="104-104"];
m3_37 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentStack()", file="JsonSerializerCollectionsTests.cs", label="Assert.IsTrue(stack2.TryPop(out i))", span="105-105"];
m3_38 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentStack()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, i)", span="106-106"];
m3_42 [cluster="System.Collections.Concurrent.ConcurrentStack<T>.TryPop(out T)", file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Concurrent.ConcurrentStack<T>.TryPop(out T)", span="0-0"];
m3_39 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentStack()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentStack()", span="95-95"];
m3_401 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out \\nTValue)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, \\nout TValue)", span="781-781"];
m3_402 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out \\nTValue)", file="JsonSerializerCollectionsTests.cs", label="return _dictionary.TryGetValue(key, out value);", span="783-783"];
m3_404 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m3_403 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out \\nTValue)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, \\nout TValue)", span="781-781"];
m3_568 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", span="1153-1153"];
m3_569 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonSerializerCollectionsTests.cs", label="NonReadOnlyList = new List<int> { 1 }", span="1155-1155"];
m3_570 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonSerializerCollectionsTests.cs", label="NonReadOnlyDictionary = new Dictionary<string, int> { { ''first'', 2 } }", span="1156-1156"];
m3_571 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonSerializerCollectionsTests.cs", label="Array = new[] { 3 }", span="1158-1158"];
m3_572 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonSerializerCollectionsTests.cs", label="List = new ReadOnlyCollection<int>(new[] { 4 })", span="1160-1160"];
m3_580 [cluster="System.Collections.ObjectModel.ReadOnlyCollection<T>.ReadOnlyCollection(System.Collections.Generic.IList<T>)", file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.ObjectModel.ReadOnlyCollection<T>.ReadOnlyCollection(System.Collections.Generic.IList<T>)", span="0-0"];
m3_573 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonSerializerCollectionsTests.cs", label="Dictionary = new ReadOnlyDictionary<string, int>(new Dictionary<string, int> { { ''first'', 5 } })", span="1161-1161"];
m3_574 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonSerializerCollectionsTests.cs", label="IReadOnlyCollection = new ReadOnlyCollection<int>(new[] { 6 })", span="1163-1163"];
m3_581 [cluster="System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.ReadOnlyDictionary(System.Collections.Generic.IDictionary<TKey, \\nTValue>)", file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.ReadOnlyDictionary(System.Collections.Generic.IDictionary<\\nTKey, TValue>)", span="0-0"];
m3_575 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonSerializerCollectionsTests.cs", label="ReadOnlyCollection = new ReadOnlyCollection<int>(new[] { 7 })", span="1164-1164"];
m3_576 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonSerializerCollectionsTests.cs", label="IReadOnlyList = new ReadOnlyCollection<int>(new[] { 8 })", span="1165-1165"];
m3_577 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonSerializerCollectionsTests.cs", label="IReadOnlyDictionary = new ReadOnlyDictionary<string, int>(new Dictionary<string, int> { { ''first'', 9 } })", span="1167-1167"];
m3_578 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonSerializerCollectionsTests.cs", label="ReadOnlyDictionary = new ReadOnlyDictionary<string, int>(new Dictionary<string, int> { { ''first'', 10 } })", span="1168-1168"];
m3_579 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", span="1153-1153"];
m3_423 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.System.Collections.IEnumerable.GetEnumerator()", span="849-849"];
m3_424 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="return _values.GetEnumerator();", span="851-851"];
m3_425 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.System.Collections.IEnumerable.GetEnumerator()", span="849-849"];
m3_1097 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.System.Collections.IEnumerable.GetEnumerator()", span="2515-2515"];
m3_1098 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="return GetEnumerator();", span="2517-2517"];
m3_1099 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.System.Collections.IEnumerable.GetEnumerator()", span="2515-2515"];
m3_1093 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.GetEnumerator()", span="2510-2510"];
m3_1103 [cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Items != null", span="2567-2567"];
m3_1105 [cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="yield return item;", span="2571-2571"];
m3_1106 [cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="yield break;", span="2576-2576"];
m3_1104 [cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label=Items, span="2569-2569"];
m3_1107 [cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GetEnumerator()", span="2565-2565"];
m3_759 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeTypeName3DArray()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeTypeName3DArray()", span="1639-1639"];
m3_760 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeTypeName3DArray()", file="JsonSerializerCollectionsTests.cs", label="Event1 e1 = new Event1\n            {\n                EventName = ''EventName!''\n            }", span="1641-1644"];
m3_757 [cluster="Newtonsoft.Json.Tests.TestObjects.Events.Event1.Event1()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Events.Event1.Event1()", span="31-31"];
m3_761 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeTypeName3DArray()", file="JsonSerializerCollectionsTests.cs", label="Event1[,] array1 = new[,] { { e1, e1 }, { e1, e1 } }", span="1645-1645"];
m3_762 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeTypeName3DArray()", file="JsonSerializerCollectionsTests.cs", label="IList<Event1[,]> values1 = new List<Event1[,]>\n            {\n                array1,\n                array1\n            }", span="1646-1650"];
m3_763 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeTypeName3DArray()", file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(values1, new JsonSerializerSettings\n            {\n                TypeNameHandling = \\nTypeNameHandling.All,\n                Formatting = Formatting.Indented\n            })", span="1652-1656"];
m3_764 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeTypeName3DArray()", file="JsonSerializerCollectionsTests.cs", label="StringAssert.AreEqual(@''{\n  ''''$type'''': '''''' + ReflectionUtils.GetTypeName(typeof(List<Event1[,]>), 0, DefaultSerializationBinder.Instance) + @'''''',\n  ''''$\\nvalues'''': [\n    {\n      ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Events.Event1[,], Newtonsoft.Json.Tests'''',\n      ''''$\\nvalues'''': [\n        [\n          {\n            ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Events.Event1, Newtonsoft.Json.Tests'''',\n            ''''\\nEventName'''': ''''EventName!'''',\n            ''''Venue'''': null,\n            ''''Performances'''': null\n          },\n          {\n            ''''$\\ntype'''': ''''Newtonsoft.Json.Tests.TestObjects.Events.Event1, Newtonsoft.Json.Tests'''',\n            ''''EventName'''': ''''EventName!'''',\n            ''''\\nVenue'''': null,\n            ''''Performances'''': null\n          }\n        ],\n        [\n          {\n            ''''$type'''': ''''\\nNewtonsoft.Json.Tests.TestObjects.Events.Event1, Newtonsoft.Json.Tests'''',\n            ''''EventName'''': ''''EventName!'''',\n            ''''\\nVenue'''': null,\n            ''''Performances'''': null\n          },\n          {\n            ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Events.Event1, \\nNewtonsoft.Json.Tests'''',\n            ''''EventName'''': ''''EventName!'''',\n            ''''Venue'''': null,\n            ''''\\nPerformances'''': null\n          }\n        ]\n      ]\n    },\n    {\n      ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Events.Event1[,], \\nNewtonsoft.Json.Tests'''',\n      ''''$values'''': [\n        [\n          {\n            ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Events.Event1, \\nNewtonsoft.Json.Tests'''',\n            ''''EventName'''': ''''EventName!'''',\n            ''''Venue'''': null,\n            ''''\\nPerformances'''': null\n          },\n          {\n            ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Events.Event1, \\nNewtonsoft.Json.Tests'''',\n            ''''EventName'''': ''''EventName!'''',\n            ''''Venue'''': null,\n            ''''\\nPerformances'''': null\n          }\n        ],\n        [\n          {\n            ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Events.Event1, \\nNewtonsoft.Json.Tests'''',\n            ''''EventName'''': ''''EventName!'''',\n            ''''Venue'''': null,\n            ''''\\nPerformances'''': null\n          },\n          {\n            ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Events.Event1, \\nNewtonsoft.Json.Tests'''',\n            ''''EventName'''': ''''EventName!'''',\n            ''''Venue'''': null,\n            ''''\\nPerformances'''': null\n          }\n        ]\n      ]\n    }\n  ]\n}'', json)", span="1658-1728"];
m3_765 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeTypeName3DArray()", file="JsonSerializerCollectionsTests.cs", label="IList<Event1[,]> values2 = (IList<Event1[,]>)JsonConvert.DeserializeObject(json, new JsonSerializerSettings\n            {\n                \\nTypeNameHandling = TypeNameHandling.All\n            })", span="1730-1733"];
m3_769 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, Newtonsoft.Json.TypeNameAssemblyFormatHandling, Newtonsoft.Json.Serialization.ISerializationBinder)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, Newtonsoft.Json.TypeNameAssemblyFormatHandling, Newtonsoft.Json.Serialization.ISerializationBinder)", span="145-145"];
m3_770 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", span="681-681"];
m3_766 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeTypeName3DArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, values2.Count)", span="1735-1735"];
m3_767 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeTypeName3DArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''EventName!'', values2[0][0, 0].EventName)", span="1736-1736"];
m3_768 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeTypeName3DArray()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeTypeName3DArray()", span="1639-1639"];
m3_582 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReadOnlyCollections()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReadOnlyCollections()", span="1173-1173"];
m3_583 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReadOnlyCollections()", file="JsonSerializerCollectionsTests.cs", label="PopulateReadOnlyTestClass c1 = new PopulateReadOnlyTestClass()", span="1175-1175"];
m3_584 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReadOnlyCollections()", file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="1177-1177"];
m3_585 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReadOnlyCollections()", file="JsonSerializerCollectionsTests.cs", label="StringAssert.AreEqual(@''{\n  ''''NonReadOnlyList'''': [\n    1\n  ],\n  ''''NonReadOnlyDictionary'''': {\n    ''''first'''': 2\n  },\n  ''''\\nArray'''': [\n    3\n  ],\n  ''''List'''': [\n    4\n  ],\n  ''''Dictionary'''': {\n    ''''first'''': 5\n  },\n  ''''IReadOnlyCollection'''': [\n    \\n6\n  ],\n  ''''ReadOnlyCollection'''': [\n    7\n  ],\n  ''''IReadOnlyList'''': [\n    8\n  ],\n  ''''IReadOnlyDictionary'''': {\n    ''''\\nfirst'''': 9\n  },\n  ''''ReadOnlyDictionary'''': {\n    ''''first'''': 10\n  }\n}'', json)", span="1179-1210"];
m3_586 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReadOnlyCollections()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReadOnlyCollections()", span="1173-1173"];
m3_1007 [cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ExtractLanguage()", file="JsonSerializerCollectionsTests.cs", label="Person.ContainsKey(''language'')", span="2293-2293"];
m3_1008 [cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ExtractLanguage()", file="JsonSerializerCollectionsTests.cs", label="Person[''language''].Trim()", span="2295-2295"];
m3_1014 [cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ExtractLanguage()", file="JsonSerializerCollectionsTests.cs", label="this.Language = ssoLanguage.Unknown", span="2310-2310"];
m3_1009 [cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ExtractLanguage()", file="JsonSerializerCollectionsTests.cs", label="''da''", span="2297-2297"];
m3_1011 [cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ExtractLanguage()", file="JsonSerializerCollectionsTests.cs", label="''en''", span="2300-2300"];
m3_1013 [cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ExtractLanguage()", file="JsonSerializerCollectionsTests.cs", label="this.Language = ssoLanguage.Unknown", span="2304-2304"];
m3_1010 [cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ExtractLanguage()", file="JsonSerializerCollectionsTests.cs", label="this.Language = ssoLanguage.Danish", span="2298-2298"];
m3_1015 [cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ExtractLanguage()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.CASResponce.ExtractLanguage()", span="2291-2291"];
m3_1012 [cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ExtractLanguage()", file="JsonSerializerCollectionsTests.cs", label="this.Language = ssoLanguage.English", span="2301-2301"];
m3_616 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3DWithConverter()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3DWithConverter()", span="1290-1290"];
m3_617 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3DWithConverter()", file="JsonSerializerCollectionsTests.cs", label="Array3DWithConverter aa = new Array3DWithConverter()", span="1292-1292"];
m3_618 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3DWithConverter()", file="JsonSerializerCollectionsTests.cs", label="aa.Before = ''Before!''", span="1293-1293"];
m3_619 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3DWithConverter()", file="JsonSerializerCollectionsTests.cs", label="aa.After = ''After!''", span="1294-1294"];
m3_620 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3DWithConverter()", file="JsonSerializerCollectionsTests.cs", label="aa.Coordinates = new[,,] { { { 1, 1, 1 }, { 1, 1, 2 } }, { { 1, 2, 1 }, { 1, 2, 2 } }, { { 2, 1, 1 }, { 2, 1, 2 } }, { { 2, 2, 1 }, { \\n2, 2, 2 } } }", span="1295-1295"];
m3_621 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3DWithConverter()", file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(aa, Formatting.Indented)", span="1297-1297"];
m3_624 [cluster="Newtonsoft.Json.Tests.Serialization.Array3DWithConverter.Array3DWithConverter()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Array3DWithConverter.Array3DWithConverter()", span="2536-2536"];
m3_622 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3DWithConverter()", file="JsonSerializerCollectionsTests.cs", label="StringAssert.AreEqual(@''{\n  ''''Before'''': ''''Before!'''',\n  ''''Coordinates'''': [\n    [\n      [\n        1.0,\n        \\n1.0,\n        1.0\n      ],\n      [\n        1.0,\n        1.0,\n        2.0\n      ]\n    ],\n    [\n      [\n        1.0,\n        \\n2.0,\n        1.0\n      ],\n      [\n        1.0,\n        2.0,\n        2.0\n      ]\n    ],\n    [\n      [\n        2.0,\n        \\n1.0,\n        1.0\n      ],\n      [\n        2.0,\n        1.0,\n        2.0\n      ]\n    ],\n    [\n      [\n        2.0,\n        \\n2.0,\n        1.0\n      ],\n      [\n        2.0,\n        2.0,\n        2.0\n      ]\n    ]\n  ],\n  ''''After'''': ''''After!''''\n}'', \\njson)", span="1299-1352"];
m3_623 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3DWithConverter()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3DWithConverter()", span="1290-1290"];
m3_111 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivate.Create()", file="JsonSerializerCollectionsTests.cs", label="return new TestCollectionPrivate();", span="210-210"];
m3_112 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivate.Create()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivate.Create()", span="208-208"];
m3_108 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivate.TestCollectionPrivate()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivate.TestCollectionPrivate()", span="204-204"];
m3_417 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.CustomReadOnlyCollection(System.Collections.Generic.IList<\\nT>)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.CustomReadOnlyCollection(System.Collections.Generic.IList<\\nT>)", span="834-834"];
m3_418 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.CustomReadOnlyCollection(System.Collections.Generic.IList<\\nT>)", file="JsonSerializerCollectionsTests.cs", label="_values = values", span="836-836"];
m3_419 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.CustomReadOnlyCollection(System.Collections.Generic.IList<\\nT>)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.CustomReadOnlyCollection(System.Collections.Generic.IList<\\nT>)", span="834-834"];
m3_836 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", color=green, community=0, file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", prediction=1, span="1845-1845"];
m3_837 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonSerializerCollectionsTests.cs", label="string json", span="1847-1847"];
m3_838 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonSerializerCollectionsTests.cs", label="GenericClass<GenericItem<string>, string> foo1 = new GenericClass<GenericItem<string>, string>()", span="1849-1849"];
m3_839 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonSerializerCollectionsTests.cs", label="foo1.Items.Add(new GenericItem<string> { Value = ''Hello'' })", span="1850-1850"];
m3_840 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonSerializerCollectionsTests.cs", label="json = JsonConvert.SerializeObject(new { selectList = foo1 })", span="1852-1852"];
m3_851 [cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GenericClass()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GenericClass()", span="2560-2560"];
m3_853 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m3_852 [cluster="Newtonsoft.Json.Tests.Serialization.GenericItem<T>.GenericItem()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.GenericItem<T>.GenericItem()", span="2546-2546"];
m3_841 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(@''{''''selectList'''':[{''''Value'''':''''Hello''''}]}'', json)", span="1853-1853"];
m3_842 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonSerializerCollectionsTests.cs", label="GenericClass<NonGenericItem, string> foo2 = new GenericClass<NonGenericItem, string>()", span="1855-1855"];
m3_843 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonSerializerCollectionsTests.cs", label="foo2.Items.Add(new NonGenericItem { Value = ''Hello'' })", span="1856-1856"];
m3_844 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonSerializerCollectionsTests.cs", label="json = JsonConvert.SerializeObject(new { selectList = foo2 })", span="1858-1858"];
m3_854 [cluster="Newtonsoft.Json.Tests.Serialization.NonGenericItem.NonGenericItem()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.NonGenericItem.NonGenericItem()", span="2551-2551"];
m3_845 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(@''{''''selectList'''':[{''''Value'''':''''Hello''''}]}'', json)", span="1859-1859"];
m3_846 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonSerializerCollectionsTests.cs", label="NonGenericClass foo3 = new NonGenericClass()", span="1861-1861"];
m3_847 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonSerializerCollectionsTests.cs", label="foo3.Items.Add(new NonGenericItem { Value = ''Hello'' })", span="1862-1862"];
m3_848 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonSerializerCollectionsTests.cs", label="json = JsonConvert.SerializeObject(new { selectList = foo3 })", span="1864-1864"];
m3_855 [cluster="Newtonsoft.Json.Tests.Serialization.NonGenericClass.NonGenericClass()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.NonGenericClass.NonGenericClass()", span="2586-2586"];
m3_849 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(@''{''''selectList'''':[{''''Value'''':''''Hello''''}]}'', json)", span="1865-1865"];
m3_850 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", span="1845-1845"];
m3_308 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.GetEnumerator()", span="614-614"];
m3_309 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="return _values.GetEnumerator();", span="616-616"];
m3_310 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.GetEnumerator()", span="614-614"];
m3_455 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()", span="917-917"];
m3_456 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()", file="JsonSerializerCollectionsTests.cs", label="List<KeyValuePair<string, string>> list = new List<KeyValuePair<string, string>>()", span="919-919"];
m3_457 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()", file="JsonSerializerCollectionsTests.cs", label="list.Add(new KeyValuePair<string, string>(''key1'', ''value1''))", span="920-920"];
m3_458 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()", file="JsonSerializerCollectionsTests.cs", label="list.Add(new KeyValuePair<string, string>(''key2'', ''value2''))", span="921-921"];
m3_459 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()", file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(list)", span="923-923"];
m3_282 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m3_460 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(@''[{''''Key'''':''''key1'''',''''Value'''':''''value1''''},{''''Key'''':''''key2'''',''''Value'''':''''value2''''}]'', \\njson)", span="925-925"];
m3_461 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()", file="JsonSerializerCollectionsTests.cs", label="List<KeyValuePair<string, string>> result = JsonConvert.DeserializeObject<List<KeyValuePair<string, string>>>(json)", span="927-927"];
m3_462 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, result.Count)", span="928-928"];
m3_463 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''key1'', result[0].Key)", span="929-929"];
m3_464 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''value1'', result[0].Value)", span="930-930"];
m3_465 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''key2'', result[1].Key)", span="931-931"];
m3_466 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''value2'', result[1].Value)", span="932-932"];
m3_467 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()", span="917-917"];
m3_730 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNull3DArray()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNull3DArray()", span="1551-1551"];
m3_731 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNull3DArray()", file="JsonSerializerCollectionsTests.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':null,''''After'''':''''After!''''}''", span="1553-1553"];
m3_732 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNull3DArray()", file="JsonSerializerCollectionsTests.cs", label="Array3D aa = JsonConvert.DeserializeObject<Array3D>(json)", span="1555-1555"];
m3_737 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNull3DArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(json, after)", span="1563-1563"];
m3_733 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNull3DArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''Before!'', aa.Before)", span="1557-1557"];
m3_734 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNull3DArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''After!'', aa.After)", span="1558-1558"];
m3_735 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNull3DArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(null, aa.Coordinates)", span="1559-1559"];
m3_736 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNull3DArray()", file="JsonSerializerCollectionsTests.cs", label="string after = JsonConvert.SerializeObject(aa)", span="1561-1561"];
m3_738 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNull3DArray()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNull3DArray()", span="1551-1551"];
m3_90 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized.GetEnumerator()", span="178-178"];
m3_91 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized.GetEnumerator()", span="178-178"];
m3_739 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()", span="1567-1567"];
m3_740 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[]],''''After'''':''''After!''''}''", span="1569-1569"];
m3_741 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="Array3D aa = JsonConvert.DeserializeObject<Array3D>(json)", span="1571-1571"];
m3_748 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(json, after)", span="1581-1581"];
m3_742 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''Before!'', aa.Before)", span="1573-1573"];
m3_743 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''After!'', aa.After)", span="1574-1574"];
m3_744 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, aa.Coordinates.GetLength(0))", span="1575-1575"];
m3_745 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(0, aa.Coordinates.GetLength(1))", span="1576-1576"];
m3_746 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(0, aa.Coordinates.GetLength(2))", span="1577-1577"];
m3_747 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="string after = JsonConvert.SerializeObject(aa)", span="1579-1579"];
m3_749 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()", span="1567-1567"];
m3_1132 [cluster="Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="2628-2628"];
m3_1133 [cluster="Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerCollectionsTests.cs", label="string existingString = (string)existingValue", span="2630-2630"];
m3_1134 [cluster="Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerCollectionsTests.cs", label="string newString = existingString + (string)reader.Value", span="2631-2631"];
m3_1135 [cluster="Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerCollectionsTests.cs", label="return newString;", span="2633-2633"];
m3_1136 [cluster="Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="2628-2628"];
m3_1129 [cluster="Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="2623-2623"];
m3_1130 [cluster="Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerCollectionsTests.cs", label="writer.WriteValue(value)", span="2625-2625"];
m3_1131 [cluster="Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="2623-2623"];
m3_869 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyCollectionSerialize()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyCollectionSerialize()", span="1887-1887"];
m3_870 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyCollectionSerialize()", file="JsonSerializerCollectionsTests.cs", label="ReadOnlyCollection<int> r1 = new ReadOnlyCollection<int>(new int[] { 0, 1, 2, 3, 4 })", span="1889-1889"];
m3_871 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyCollectionSerialize()", file="JsonSerializerCollectionsTests.cs", label="string jsonText = JsonConvert.SerializeObject(r1)", span="1891-1891"];
m3_874 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyCollectionSerialize()", file="JsonSerializerCollectionsTests.cs", label="CollectionAssert.AreEqual(r1, r2)", span="1897-1897"];
m3_872 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyCollectionSerialize()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''[0,1,2,3,4]'', jsonText)", span="1893-1893"];
m3_873 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyCollectionSerialize()", file="JsonSerializerCollectionsTests.cs", label="ReadOnlyCollection<int> r2 = JsonConvert.DeserializeObject<ReadOnlyCollection<int>>(jsonText)", span="1895-1895"];
m3_875 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyCollectionSerialize()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyCollectionSerialize()", span="1887-1887"];
m3_323 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializePrivateListCtor()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializePrivateListCtor()", span="645-645"];
m3_324 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializePrivateListCtor()", file="JsonSerializerCollectionsTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<PrivateDefaultCtorList<int>>(''[1,2]''), ''\\nUnable to find a constructor to use for type Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests+PrivateDefaultCtorList`\\n1[System.Int32]. Path '', line 1, position 1.'')", span="647-647"];
m3_325 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializePrivateListCtor()", file="JsonSerializerCollectionsTests.cs", label="var list = JsonConvert.DeserializeObject<PrivateDefaultCtorList<int>>(''[1,2]'', new JsonSerializerSettings\n            {\n                \\nConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor\n            })", span="649-652"];
m3_330 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Entry lambda expression", span="647-647"];
m3_326 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializePrivateListCtor()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, list.Count)", span="654-654"];
m3_327 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializePrivateListCtor()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializePrivateListCtor()", span="645-645"];
m3_948 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.Add(string)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.Add(string)", span="2139-2139"];
m3_949 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.Add(string)", file="JsonSerializerCollectionsTests.cs", label="((IList<string>)_storage).Add(item)", span="2141-2141"];
m3_950 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.Add(string)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.Add(string)", span="2139-2139"];
m3_511 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()", span="1033-1033"];
m3_512 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()", file="JsonSerializerCollectionsTests.cs", label="IDictionary<string, int?> v1 = new Dictionary<string, int?>\n            {\n                { ''First'', 1 },\n                { ''\\nSecond'', null },\n                { ''Third'', 3 }\n            }", span="1035-1040"];
m3_513 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()", file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(v1, Formatting.Indented)", span="1042-1042"];
m3_514 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()", file="JsonSerializerCollectionsTests.cs", label="StringAssert.AreEqual(@''{\n  ''''First'''': 1,\n  ''''Second'''': null,\n  ''''Third'''': 3\n}'', json)", span="1044-1048"];
m3_515 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()", file="JsonSerializerCollectionsTests.cs", label="IDictionary<string, int?> v2 = JsonConvert.DeserializeObject<IDictionary<string, int?>>(json)", span="1050-1050"];
m3_516 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, v2.Count)", span="1051-1051"];
m3_517 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, v2[''First''])", span="1052-1052"];
m3_518 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(null, v2[''Second''])", span="1053-1053"];
m3_519 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, v2[''Third''])", span="1054-1054"];
m3_520 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()", span="1033-1033"];
m3_637 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()", span="1425-1425"];
m3_638 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()", file="JsonSerializerCollectionsTests.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2],[2,1],[2,2]],''''After'''':''''After!''''}''", span="1427-1427"];
m3_639 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()", file="JsonSerializerCollectionsTests.cs", label="Array2D aa = JsonConvert.DeserializeObject<Array2D>(json)", span="1429-1429"];
m3_647 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(json, after)", span="1440-1440"];
m3_640 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''Before!'', aa.Before)", span="1431-1431"];
m3_641 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''After!'', aa.After)", span="1432-1432"];
m3_642 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(4, aa.Coordinates.GetLength(0))", span="1433-1433"];
m3_643 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, aa.Coordinates.GetLength(1))", span="1434-1434"];
m3_644 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, aa.Coordinates[0, 0])", span="1435-1435"];
m3_645 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, aa.Coordinates[1, 1])", span="1436-1436"];
m3_646 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()", file="JsonSerializerCollectionsTests.cs", label="string after = JsonConvert.SerializeObject(aa)", span="1438-1438"];
m3_648 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()", span="1425-1425"];
m3_109 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivate.TestCollectionPrivate()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivate.TestCollectionPrivate()", span="204-204"];
m3_507 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIList()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIList()", span="1026-1026"];
m3_508 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIList()", file="JsonSerializerCollectionsTests.cs", label="IList list = JsonConvert.DeserializeObject<IList>(''['1', 'two', 'III']'')", span="1028-1028"];
m3_509 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIList()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, list.Count)", span="1029-1029"];
m3_510 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIList()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIList()", span="1026-1026"];
m3_17 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentBag()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentBag()", span="80-80"];
m3_18 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentBag()", file="JsonSerializerCollectionsTests.cs", label="ConcurrentBag<int> bag1 = new ConcurrentBag<int>()", span="82-82"];
m3_27 [cluster="System.Collections.Concurrent.ConcurrentBag<T>.ConcurrentBag()", file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Concurrent.ConcurrentBag<T>.ConcurrentBag()", span="0-0"];
m3_19 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentBag()", file="JsonSerializerCollectionsTests.cs", label="bag1.Add(1)", span="83-83"];
m3_20 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentBag()", file="JsonSerializerCollectionsTests.cs", label="string output = JsonConvert.SerializeObject(bag1)", span="85-85"];
m3_28 [cluster="System.Collections.Concurrent.ConcurrentBag<T>.Add(T)", file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Concurrent.ConcurrentBag<T>.Add(T)", span="0-0"];
m3_21 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentBag()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(@''[1]'', output)", span="86-86"];
m3_22 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentBag()", file="JsonSerializerCollectionsTests.cs", label="ConcurrentBag<int> bag2 = JsonConvert.DeserializeObject<ConcurrentBag<int>>(output)", span="88-88"];
m3_23 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentBag()", file="JsonSerializerCollectionsTests.cs", label="int i", span="89-89"];
m3_24 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentBag()", file="JsonSerializerCollectionsTests.cs", label="Assert.IsTrue(bag2.TryTake(out i))", span="90-90"];
m3_25 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentBag()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, i)", span="91-91"];
m3_29 [cluster="System.Collections.Concurrent.ConcurrentBag<T>.TryTake(out T)", file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Concurrent.ConcurrentBag<T>.TryTake(out T)", span="0-0"];
m3_26 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentBag()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentBag()", span="80-80"];
m3_547 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", span="1109-1109"];
m3_548 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="string json = @''[ { ''''Value'''': [ ''''1'''', ''''2'''' ], ''''Key'''': ''''aaa'''', ''''BadContent'''': [ 0 ] }, null, { ''''\\nValue'''': [ ''''3'''', ''''4'''' ], ''''Key'''': ''''bbb'''' } ]''", span="1111-1111"];
m3_549 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="IList<KeyValuePair<string, IList<string>>?> values = JsonConvert.DeserializeObject<IList<KeyValuePair<string, IList<string>>?>>(\\njson)", span="1113-1113"];
m3_550 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, values.Count)", span="1115-1115"];
m3_551 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''aaa'', values[0].Value.Key)", span="1116-1116"];
m3_552 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, values[0].Value.Value.Count)", span="1117-1117"];
m3_553 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''1'', values[0].Value.Value[0])", span="1118-1118"];
m3_554 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''2'', values[0].Value.Value[1])", span="1119-1119"];
m3_555 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(null, values[1])", span="1120-1120"];
m3_556 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''bbb'', values[2].Value.Key)", span="1121-1121"];
m3_557 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, values[2].Value.Value.Count)", span="1122-1122"];
m3_558 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''3'', values[2].Value.Value[0])", span="1123-1123"];
m3_559 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''4'', values[2].Value.Value[1])", span="1124-1124"];
m3_560 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", span="1109-1109"];
m3_311 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.System.Collections.IEnumerable.GetEnumerator()", span="619-619"];
m3_312 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="return GetEnumerator();", span="621-621"];
m3_313 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.System.Collections.IEnumerable.GetEnumerator()", span="619-619"];
m3_305 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.EnumerableClassFailure()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.EnumerableClassFailure()", span="609-609"];
m3_306 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.EnumerableClassFailure()", file="JsonSerializerCollectionsTests.cs", label="_values = new List<T>()", span="611-611"];
m3_307 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.EnumerableClassFailure()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.EnumerableClassFailure()", span="609-609"];
m3_405 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.GetEnumerator()", span="801-801"];
m3_406 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="return _dictionary.GetEnumerator();", span="803-803"];
m3_407 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.GetEnumerator()", span="801-801"];
m3_181 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivate()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivate()", span="330-330"];
m3_182 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivate()", file="JsonSerializerCollectionsTests.cs", label="TestDictionaryPrivate c1 = TestDictionaryPrivate.Create()", span="332-332"];
m3_183 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivate()", file="JsonSerializerCollectionsTests.cs", label="c1.Add(''zero'', 0)", span="333-333"];
m3_184 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivate()", file="JsonSerializerCollectionsTests.cs", label="c1.Add(''one'', 1)", span="334-334"];
m3_185 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivate()", file="JsonSerializerCollectionsTests.cs", label="c1.Add(''two'', 2)", span="335-335"];
m3_186 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivate()", file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(c1)", span="336-336"];
m3_178 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryPrivate.Create()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryPrivate.Create()", span="323-323"];
m3_187 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivate()", file="JsonSerializerCollectionsTests.cs", label="TestDictionaryPrivate c2 = JsonConvert.DeserializeObject<TestDictionaryPrivate>(json)", span="337-337"];
m3_188 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivate()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, c2.Count)", span="339-339"];
m3_189 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivate()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(0, c2[''zero''])", span="340-340"];
m3_190 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivate()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, c2[''one''])", span="341-341"];
m3_191 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivate()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, c2[''two''])", span="342-342"];
m3_192 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivate()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivate()", span="330-330"];
m3_1082 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.IndexOf(T)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.IndexOf(T)", span="2473-2473"];
m3_1083 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.IndexOf(T)", file="JsonSerializerCollectionsTests.cs", label="throw new NotImplementedException();", span="2475-2475"];
m3_1084 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.IndexOf(T)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.IndexOf(T)", span="2473-2473"];
m3_885 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeGenericList()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeGenericList()", span="1953-1953"];
m3_886 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeGenericList()", file="JsonSerializerCollectionsTests.cs", label="string json = @''[\n        {\n          ''''Name'''': ''''Product 1'''',\n          ''''ExpiryDate'''': ''''\/Date(978048000000)\/'''',\n          ''''\\nPrice'''': 99.95,\n          ''''Sizes'''': null\n        },\n        {\n          ''''Name'''': ''''Product 2'''',\n          ''''\\nExpiryDate'''': ''''\/Date(1248998400000)\/'''',\n          ''''Price'''': 12.50,\n          ''''Sizes'''': null\n        }\n      ]''", span="1955-1968"];
m3_887 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeGenericList()", file="JsonSerializerCollectionsTests.cs", label="List<Product> products = JsonConvert.DeserializeObject<List<Product>>(json)", span="1970-1970"];
m3_888 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeGenericList()", file="JsonSerializerCollectionsTests.cs", label="Product p1 = products[0]", span="1972-1972"];
m3_889 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeGenericList()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, products.Count)", span="1974-1974"];
m3_890 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeGenericList()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''Product 1'', p1.Name)", span="1975-1975"];
m3_891 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeGenericList()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeGenericList()", span="1953-1953"];
m3_126 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionMultipleParameters.TestCollectionMultipleParameters(\\nstring, string)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionMultipleParameters.TestCollectionMultipleParameters(\\nstring, string)", span="235-235"];
m3_127 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionMultipleParameters.TestCollectionMultipleParameters(\\nstring, string)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionMultipleParameters.TestCollectionMultipleParameters(\\nstring, string)", span="235-235"];
m3_723 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIncompleteNotTopLevel3DArray()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIncompleteNotTopLevel3DArray()", span="1543-1543"];
m3_724 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIncompleteNotTopLevel3DArray()", file="JsonSerializerCollectionsTests.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[/*hi*/[/*hi*/''", span="1545-1545"];
m3_725 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIncompleteNotTopLevel3DArray()", file="JsonSerializerCollectionsTests.cs", label="ExceptionAssert.Throws<JsonException>(() => JsonConvert.DeserializeObject<Array3D>(json))", span="1547-1547"];
m3_728 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="JsonConvert.DeserializeObject<Array3D>(json)", span="1547-1547"];
m3_726 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIncompleteNotTopLevel3DArray()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIncompleteNotTopLevel3DArray()", span="1543-1543"];
m3_727 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Entry lambda expression", span="1547-1547"];
m3_446 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeExistingGenericList()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeExistingGenericList()", span="903-903"];
m3_447 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeExistingGenericList()", file="JsonSerializerCollectionsTests.cs", label="GenericListTestClass c = new GenericListTestClass()", span="905-905"];
m3_448 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeExistingGenericList()", file="JsonSerializerCollectionsTests.cs", label="c.GenericList.Add(''1'')", span="906-906"];
m3_449 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeExistingGenericList()", file="JsonSerializerCollectionsTests.cs", label="c.GenericList.Add(''2'')", span="907-907"];
m3_450 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeExistingGenericList()", file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="909-909"];
m3_443 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericListTestClass.GenericListTestClass()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericListTestClass.GenericListTestClass()", span="896-896"];
m3_451 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeExistingGenericList()", file="JsonSerializerCollectionsTests.cs", label="GenericListTestClass newValue = JsonConvert.DeserializeObject<GenericListTestClass>(json)", span="911-911"];
m3_452 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeExistingGenericList()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, newValue.GenericList.Count)", span="912-912"];
m3_453 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeExistingGenericList()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(typeof(List<string>), newValue.GenericList.GetType())", span="913-913"];
m3_358 [cluster="object.GetType()", file="JsonSerializerCollectionsTests.cs", label="Entry object.GetType()", span="0-0"];
m3_454 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeExistingGenericList()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeExistingGenericList()", span="903-903"];
m3_1085 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.Insert(int, T)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.Insert(int, T)", span="2478-2478"];
m3_1086 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.Insert(int, T)", file="JsonSerializerCollectionsTests.cs", label="throw new NotImplementedException();", span="2480-2480"];
m3_1087 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.Insert(int, T)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.Insert(int, T)", span="2478-2478"];
m3_209 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryNonGeneric.TestDictionaryNonGeneric(System.Collections.IDictionary)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryNonGeneric.TestDictionaryNonGeneric(System.Collections.IDictionary)", span="381-381"];
m3_210 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryNonGeneric.TestDictionaryNonGeneric(System.Collections.IDictionary)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryNonGeneric.TestDictionaryNonGeneric(System.Collections.IDictionary)", span="381-381"];
m3_176 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryPrivate.TestDictionaryPrivate()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryPrivate.TestDictionaryPrivate()", span="319-319"];
m3_177 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryPrivate.TestDictionaryPrivate()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryPrivate.TestDictionaryPrivate()", span="319-319"];
m3_892 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyIntegerList()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyIntegerList()", span="1980-1980"];
m3_893 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyIntegerList()", file="JsonSerializerCollectionsTests.cs", label="ReadOnlyIntegerList l = new ReadOnlyIntegerList(new List<int>\n            {\n                1,\n                2,\n                \\n3,\n                int.MaxValue\n            })", span="1982-1988"];
m3_894 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyIntegerList()", file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(l, Formatting.Indented)", span="1990-1990"];
m3_897 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.ReadOnlyIntegerList(System.Collections.Generic.List<int>)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.ReadOnlyIntegerList(System.Collections.Generic.List<int>)", span="2500-2500"];
m3_895 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyIntegerList()", file="JsonSerializerCollectionsTests.cs", label="StringAssert.AreEqual(@''[\n  1,\n  2,\n  3,\n  2147483647\n]'', json)", span="1992-1997"];
m3_896 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyIntegerList()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyIntegerList()", span="1980-1980"];
m3_484 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringListAppenderConverterTest()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringListAppenderConverterTest()", span="988-988"];
m3_485 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringListAppenderConverterTest()", file="JsonSerializerCollectionsTests.cs", label="Movie p = new Movie()", span="990-990"];
m3_486 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringListAppenderConverterTest()", file="JsonSerializerCollectionsTests.cs", label="p.ReleaseCountries = new List<string> { ''Existing'' }", span="991-991"];
m3_487 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringListAppenderConverterTest()", file="JsonSerializerCollectionsTests.cs", label="JsonConvert.PopulateObject(''{'ReleaseCountries':['Appended']}'', p, new JsonSerializerSettings\n            {\n                \\nConverters = new List<JsonConverter> { new StringListAppenderConverter() }\n            })", span="993-996"];
m3_488 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringListAppenderConverterTest()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, p.ReleaseCountries.Count)", span="998-998"];
m3_489 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringListAppenderConverterTest()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''Existing'', p.ReleaseCountries[0])", span="999-999"];
m3_490 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringListAppenderConverterTest()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''Appended'', p.ReleaseCountries[1])", span="1000-1000"];
m3_493 [cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.StringListAppenderConverter()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.StringListAppenderConverter()", span="2590-2590"];
m3_491 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringListAppenderConverterTest()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringListAppenderConverterTest()", span="988-988"];
m3_137 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorBadIEnumerableParameter()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorBadIEnumerableParameter()", span="257-257"];
m3_138 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorBadIEnumerableParameter()", file="JsonSerializerCollectionsTests.cs", label="ExceptionAssert.Throws<JsonException>(\n                () => JsonConvert.SerializeObject(new TestCollectionBadIEnumerableParameter(\\nnull)),\n                ''Constructor for 'Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests+TestCollectionBadIEnumerableParameter' \\nmust have no parameters or a single parameter that implements 'System.Collections.Generic.IEnumerable`1[System.Int32]'.'')", span="259-261"];
m3_139 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorBadIEnumerableParameter()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorBadIEnumerableParameter()", span="257-257"];
m3_140 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Entry lambda expression", span="260-260"];
m3_285 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>.EnumerableClass(System.Collections.Generic.IEnumerable<\\nT>)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>.EnumerableClass(System.Collections.Generic.IEnumerable<\\nT>)", span="572-572"];
m3_286 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>.EnumerableClass(System.Collections.Generic.IEnumerable<\\nT>)", file="JsonSerializerCollectionsTests.cs", label="_values = new List<T>(values)", span="574-574"];
m3_85 [cluster="System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)", file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m3_287 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>.EnumerableClass(System.Collections.Generic.IEnumerable<\\nT>)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>.EnumerableClass(System.Collections.Generic.IEnumerable<\\nT>)", span="572-572"];
m3_128 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorMultipleParameters()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorMultipleParameters()", span="241-241"];
m3_129 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorMultipleParameters()", file="JsonSerializerCollectionsTests.cs", label="ExceptionAssert.Throws<JsonException>(\n                () => JsonConvert.SerializeObject(new TestCollectionMultipleParameters(null, \\nnull)),\n                ''Constructor for 'Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests+TestCollectionMultipleParameters' \\nmust have no parameters or a single parameter that implements 'System.Collections.Generic.IEnumerable`1[System.Int32]'.'')", span="243-245"];
m3_130 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorMultipleParameters()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorMultipleParameters()", span="241-241"];
m3_132 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Entry lambda expression", span="244-244"];
m3_1073 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.Contains(T)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.Contains(T)", span="2456-2456"];
m3_1074 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.Contains(T)", file="JsonSerializerCollectionsTests.cs", label="throw new NotImplementedException();", span="2458-2458"];
m3_1075 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.Contains(T)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.Contains(T)", span="2456-2456"];
m3_521 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()", span="1059-1059"];
m3_522 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()", file="JsonSerializerCollectionsTests.cs", label="IDictionary<string, TestObjects.Component> components = new Dictionary<string, TestObjects.Component>\n            {\n                { ''\\nKey!'', new TestObjects.Component() }\n            }", span="1061-1064"];
m3_531 [cluster="Newtonsoft.Json.Tests.TestObjects.Component.Component()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Component.Component()", span="34-34"];
m3_523 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()", file="JsonSerializerCollectionsTests.cs", label="GameObject go = new GameObject\n            {\n                Components = new ConcurrentDictionary<string, TestObjects.Component>(\\ncomponents),\n                Id = ''Id!'',\n                Name = ''Name!''\n            }", span="1065-1070"];
m3_533 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<\\nTKey, TValue>>)", file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary(System.Collections.Generic.IEnumerable<\\nSystem.Collections.Generic.KeyValuePair<TKey, TValue>>)", span="0-0"];
m3_524 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()", file="JsonSerializerCollectionsTests.cs", label="string originalJson = JsonConvert.SerializeObject(go, Formatting.Indented)", span="1072-1072"];
m3_532 [cluster="Newtonsoft.Json.Tests.TestObjects.GameObject.GameObject()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.GameObject.GameObject()", span="42-42"];
m3_525 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()", file="JsonSerializerCollectionsTests.cs", label="StringAssert.AreEqual(@''{\n  ''''Components'''': {\n    ''''Key!'''': {}\n  },\n  ''''Id'''': ''''Id!'''',\n  ''''Name'''': ''''\\nName!''''\n}'', originalJson)", span="1074-1080"];
m3_526 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()", file="JsonSerializerCollectionsTests.cs", label="GameObject newObject = JsonConvert.DeserializeObject<GameObject>(originalJson)", span="1082-1082"];
m3_527 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, newObject.Components.Count)", span="1084-1084"];
m3_528 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''Id!'', newObject.Id)", span="1085-1085"];
m3_529 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''Name!'', newObject.Name)", span="1086-1086"];
m3_530 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()", span="1059-1059"];
m3_1091 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.ReadOnlyIntegerList(System.Collections.Generic.List<int>)", file="JsonSerializerCollectionsTests.cs", label="_list = l", span="2502-2502"];
m3_1092 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.ReadOnlyIntegerList(System.Collections.Generic.List<int>)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.ReadOnlyIntegerList(System.Collections.Generic.List<int>)", span="2500-2500"];
m3_945 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.MyClass(System.Collections.Generic.IEnumerable<string>)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.MyClass(System.Collections.Generic.IEnumerable<\\nstring>)", span="2104-2104"];
m3_946 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.MyClass(System.Collections.Generic.IEnumerable<string>)", file="JsonSerializerCollectionsTests.cs", label="_storage = new List<string>(source)", span="2106-2106"];
m3_947 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.MyClass(System.Collections.Generic.IEnumerable<string>)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.MyClass(System.Collections.Generic.IEnumerable<string>)", span="2104-2104"];
m3_970 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.Insert(int, string)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.Insert(int, string)", span="2169-2169"];
m3_971 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.Insert(int, string)", file="JsonSerializerCollectionsTests.cs", label="((IList<string>)_storage).Insert(index, item)", span="2171-2171"];
m3_973 [cluster="System.Collections.Generic.IList<T>.Insert(int, T)", file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Generic.IList<T>.Insert(int, T)", span="0-0"];
m3_972 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.Insert(int, string)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.Insert(int, string)", span="2169-2169"];
m3_1066 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.Add(T)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.Add(T)", span="2446-2446"];
m3_1067 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.Add(T)", file="JsonSerializerCollectionsTests.cs", label="throw new NotImplementedException();", span="2448-2448"];
m3_1068 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.Add(T)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.Add(T)", span="2446-2446"];
m3_750 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReferenceTracked3DArray()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReferenceTracked3DArray()", span="1585-1585"];
m3_751 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReferenceTracked3DArray()", file="JsonSerializerCollectionsTests.cs", label="Event1 e1 = new Event1\n            {\n                EventName = ''EventName!''\n            }", span="1587-1590"];
m3_752 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReferenceTracked3DArray()", file="JsonSerializerCollectionsTests.cs", label="Event1[,] array1 = new[,] { { e1, e1 }, { e1, e1 } }", span="1591-1591"];
m3_753 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReferenceTracked3DArray()", file="JsonSerializerCollectionsTests.cs", label="IList<Event1[,]> values1 = new List<Event1[,]>\n            {\n                array1,\n                array1\n            }", span="1592-1596"];
m3_754 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReferenceTracked3DArray()", file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(values1, new JsonSerializerSettings\n            {\n                PreserveReferencesHandling = \\nPreserveReferencesHandling.All,\n                Formatting = Formatting.Indented\n            })", span="1598-1602"];
m3_755 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReferenceTracked3DArray()", file="JsonSerializerCollectionsTests.cs", label="StringAssert.AreEqual(@''{\n  ''''$id'''': ''''1'''',\n  ''''$values'''': [\n    {\n      ''''$id'''': ''''2'''',\n      ''''$values'''': [\n        [\n          {\n            ''''$\\nid'''': ''''3'''',\n            ''''EventName'''': ''''EventName!'''',\n            ''''Venue'''': null,\n            ''''Performances'''': \\nnull\n          },\n          {\n            ''''$ref'''': ''''3''''\n          }\n        ],\n        [\n          {\n            ''''$\\nref'''': ''''3''''\n          },\n          {\n            ''''$ref'''': ''''3''''\n          }\n        ]\n      ]\n    },\n    {\n      ''''$\\nref'''': ''''2''''\n    }\n  ]\n}'', json)", span="1604-1635"];
m3_756 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReferenceTracked3DArray()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReferenceTracked3DArray()", span="1585-1585"];
m3_0 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentQueue()", color=green, community=0, file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentQueue()", prediction=2, span="65-65"];
m3_1 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentQueue()", file="JsonSerializerCollectionsTests.cs", label="ConcurrentQueue<int> queue1 = new ConcurrentQueue<int>()", span="67-67"];
m3_10 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.ConcurrentQueue()", file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.ConcurrentQueue()", span="0-0"];
m3_2 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentQueue()", file="JsonSerializerCollectionsTests.cs", label="queue1.Enqueue(1)", span="68-68"];
m3_3 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentQueue()", file="JsonSerializerCollectionsTests.cs", label="string output = JsonConvert.SerializeObject(queue1)", span="70-70"];
m3_11 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", span="0-0"];
m3_4 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentQueue()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(@''[1]'', output)", span="71-71"];
m3_5 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentQueue()", file="JsonSerializerCollectionsTests.cs", label="ConcurrentQueue<int> queue2 = JsonConvert.DeserializeObject<ConcurrentQueue<int>>(output)", span="73-73"];
m3_6 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentQueue()", file="JsonSerializerCollectionsTests.cs", label="int i", span="74-74"];
m3_7 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentQueue()", file="JsonSerializerCollectionsTests.cs", label="Assert.IsTrue(queue2.TryDequeue(out i))", span="75-75"];
m3_15 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.TryDequeue(out T)", file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.TryDequeue(out T)", span="0-0"];
m3_8 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentQueue()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, i)", span="76-76"];
m3_9 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentQueue()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentQueue()", span="65-65"];
m3_163 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivateParameterized()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivateParameterized()", span="301-301"];
m3_164 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivateParameterized()", file="JsonSerializerCollectionsTests.cs", label="TestDictionaryPrivateParameterized c1 = new TestDictionaryPrivateParameterized()", span="303-303"];
m3_165 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivateParameterized()", file="JsonSerializerCollectionsTests.cs", label="c1.Add(''zero'', 0)", span="304-304"];
m3_166 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivateParameterized()", file="JsonSerializerCollectionsTests.cs", label="c1.Add(''one'', 1)", span="305-305"];
m3_167 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivateParameterized()", file="JsonSerializerCollectionsTests.cs", label="c1.Add(''two'', 2)", span="306-306"];
m3_168 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivateParameterized()", file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(c1)", span="307-307"];
m3_169 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivateParameterized()", file="JsonSerializerCollectionsTests.cs", label="TestDictionaryPrivateParameterized c2 = JsonConvert.DeserializeObject<TestDictionaryPrivateParameterized>(json)", span="308-308"];
m3_170 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivateParameterized()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, c2.Count)", span="310-310"];
m3_171 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivateParameterized()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(0, c2[''zero''])", span="311-311"];
m3_172 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivateParameterized()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, c2[''one''])", span="312-312"];
m3_173 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivateParameterized()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, c2[''two''])", span="313-313"];
m3_174 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivateParameterized()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivateParameterized()", span="301-301"];
m3_876 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()", span="1901-1901"];
m3_877 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()", file="JsonSerializerCollectionsTests.cs", label="Product p1 = new Product\n            {\n                Name = ''Product 1'',\n                Price = 99.95m,\n                \\nExpiryDate = new DateTime(2000, 12, 29, 0, 0, 0, DateTimeKind.Utc),\n            }", span="1903-1908"];
m3_482 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JsonSerializerCollectionsTests.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m3_878 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()", file="JsonSerializerCollectionsTests.cs", label="Product p2 = new Product\n            {\n                Name = ''Product 2'',\n                Price = 12.50m,\n                \\nExpiryDate = new DateTime(2009, 7, 31, 0, 0, 0, DateTimeKind.Utc),\n            }", span="1909-1914"];
m3_880 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()", file="JsonSerializerCollectionsTests.cs", label="products.Add(p1)", span="1917-1917"];
m3_879 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()", file="JsonSerializerCollectionsTests.cs", label="List<Product> products = new List<Product>()", span="1916-1916"];
m3_881 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()", file="JsonSerializerCollectionsTests.cs", label="products.Add(p2)", span="1918-1918"];
m3_882 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()", file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(products, Formatting.Indented)", span="1920-1920"];
m3_883 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()", file="JsonSerializerCollectionsTests.cs", label="StringAssert.AreEqual(@''[\n  {\n    ''''Name'''': ''''Product 1'''',\n    ''''ExpiryDate'''': ''''2000-12-29T00:00:00Z'''',\n    ''''\\nPrice'''': 99.95,\n    ''''Sizes'''': null\n  },\n  {\n    ''''Name'''': ''''Product 2'''',\n    ''''ExpiryDate'''': ''''2009-07-31T00:\\n00:00Z'''',\n    ''''Price'''': 12.50,\n    ''''Sizes'''': null\n  }\n]'', json)", span="1936-1949"];
m3_884 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()", span="1901-1901"];
m3_656 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D_WithTooFewItems()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D_WithTooFewItems()", span="1452-1452"];
m3_657 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D_WithTooFewItems()", file="JsonSerializerCollectionsTests.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1],[2,1],[2,2]],''''After'''':''''After!''''}''", span="1454-1454"];
m3_658 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D_WithTooFewItems()", file="JsonSerializerCollectionsTests.cs", label="ExceptionAssert.Throws<Exception>(() => JsonConvert.DeserializeObject<Array2D>(json), ''Cannot deserialize non-cubical array as \\nmultidimensional array.'')", span="1456-1456"];
m3_661 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="JsonConvert.DeserializeObject<Array2D>(json)", span="1456-1456"];
m3_659 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D_WithTooFewItems()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D_WithTooFewItems()", span="1452-1452"];
m3_660 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Entry lambda expression", span="1456-1456"];
m3_211 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorNonGeneric()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorNonGeneric()", span="388-388"];
m3_212 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorNonGeneric()", file="JsonSerializerCollectionsTests.cs", label="string json = @''{'zero':0,'one':1,'two':2}''", span="390-390"];
m3_213 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorNonGeneric()", file="JsonSerializerCollectionsTests.cs", label="TestDictionaryNonGeneric d = JsonConvert.DeserializeObject<TestDictionaryNonGeneric>(json)", span="391-391"];
m3_214 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorNonGeneric()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, d.Count)", span="393-393"];
m3_215 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorNonGeneric()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(0L, d[''zero''])", span="394-394"];
m3_216 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorNonGeneric()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1L, d[''one''])", span="395-395"];
m3_217 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorNonGeneric()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2L, d[''two''])", span="396-396"];
m3_218 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorNonGeneric()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorNonGeneric()", span="388-388"];
m3_394 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.CustomReadOnlyDictionary(\\nSystem.Collections.Generic.IDictionary<TKey, TValue>)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.CustomReadOnlyDictionary(\\nSystem.Collections.Generic.IDictionary<TKey, TValue>)", span="766-766"];
m3_395 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.CustomReadOnlyDictionary(\\nSystem.Collections.Generic.IDictionary<TKey, TValue>)", file="JsonSerializerCollectionsTests.cs", label="_dictionary = dictionary", span="768-768"];
m3_396 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.CustomReadOnlyDictionary(\\nSystem.Collections.Generic.IDictionary<TKey, TValue>)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.CustomReadOnlyDictionary(\\nSystem.Collections.Generic.IDictionary<TKey, TValue>)", span="766-766"];
m3_82 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized.TestCollectionPrivateParameterized(\\nSystem.Collections.Generic.IEnumerable<int>)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized.TestCollectionPrivateParameterized(\\nSystem.Collections.Generic.IEnumerable<int>)", span="168-168"];
m3_83 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized.TestCollectionPrivateParameterized(\\nSystem.Collections.Generic.IEnumerable<int>)", file="JsonSerializerCollectionsTests.cs", label="_bars = new List<int>(bars)", span="170-170"];
m3_84 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized.TestCollectionPrivateParameterized(\\nSystem.Collections.Generic.IEnumerable<int>)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized.TestCollectionPrivateParameterized(\\nSystem.Collections.Generic.IEnumerable<int>)", span="168-168"];
m3_1060 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.GetEnumerator()", span="2436-2436"];
m3_1061 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="return _values.GetEnumerator();", span="2438-2438"];
m3_1062 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.GetEnumerator()", span="2436-2436"];
m3_289 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="return _values.GetEnumerator();", span="579-579"];
m3_290 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>.GetEnumerator()", span="577-577"];
m3_697 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeEmpty3DArray()", span="1504-1504"];
m3_698 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="Array3D aa = new Array3D()", span="1506-1506"];
m3_699 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="aa.Before = ''Before!''", span="1507-1507"];
m3_700 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="aa.After = ''After!''", span="1508-1508"];
m3_701 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="aa.Coordinates = new int[0, 0, 0]", span="1509-1509"];
m3_702 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(aa)", span="1511-1511"];
m3_703 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(@''{''''Before'''':''''Before!'''',''''Coordinates'''':[],''''After'''':''''After!''''}'', json)", span="1513-1513"];
m3_704 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeEmpty3DArray()", span="1504-1504"];
m3_444 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericListTestClass.GenericListTestClass()", file="JsonSerializerCollectionsTests.cs", label="GenericList = new List<string>()", span="898-898"];
m3_445 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericListTestClass.GenericListTestClass()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericListTestClass.GenericListTestClass()", span="896-896"];
m3_1094 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="return _list.GetEnumerator();", span="2512-2512"];
m3_1096 [cluster="System.Collections.Generic.List<T>.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Generic.List<T>.GetEnumerator()", span="0-0"];
m3_1095 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.GetEnumerator()", span="2510-2510"];
m3_468 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", span="936-936"];
m3_469 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", file="JsonSerializerCollectionsTests.cs", label="DateTime dateTime = new DateTime(2000, 12, 1, 23, 1, 1, DateTimeKind.Utc)", span="938-938"];
m3_470 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", file="JsonSerializerCollectionsTests.cs", label="List<KeyValuePair<string, WagePerson>> list = new List<KeyValuePair<string, WagePerson>>()", span="940-940"];
m3_471 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", file="JsonSerializerCollectionsTests.cs", label="list.Add(new KeyValuePair<string, WagePerson>(''key1'', new WagePerson\n            {\n                BirthDate = dateTime,\n                \\nDepartment = ''Department1'',\n                LastModified = dateTime,\n                HourlyWage = 1\n            }))", span="941-947"];
m3_472 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", file="JsonSerializerCollectionsTests.cs", label="list.Add(new KeyValuePair<string, WagePerson>(''key2'', new WagePerson\n            {\n                BirthDate = dateTime,\n                \\nDepartment = ''Department2'',\n                LastModified = dateTime,\n                HourlyWage = 2\n            }))", span="948-954"];
m3_473 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(list, Formatting.Indented)", span="956-956"];
m3_483 [cluster="Newtonsoft.Json.Tests.TestObjects.Organization.WagePerson.WagePerson()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Organization.WagePerson.WagePerson()", span="27-27"];
m3_474 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", file="JsonSerializerCollectionsTests.cs", label="StringAssert.AreEqual(@''[\n  {\n    ''''Key'''': ''''key1'''',\n    ''''Value'''': {\n      ''''HourlyWage'''': 1.0,\n      ''''\\nName'''': null,\n      ''''BirthDate'''': ''''2000-12-01T23:01:01Z'''',\n      ''''LastModified'''': ''''2000-12-01T23:01:01Z''''\n    }\n  },\n  {\n    ''''\\nKey'''': ''''key2'''',\n    ''''Value'''': {\n      ''''HourlyWage'''': 2.0,\n      ''''Name'''': null,\n      ''''BirthDate'''': ''''\\n2000-12-01T23:01:01Z'''',\n      ''''LastModified'''': ''''2000-12-01T23:01:01Z''''\n    }\n  }\n]'', json)", span="958-977"];
m3_475 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", file="JsonSerializerCollectionsTests.cs", label="List<KeyValuePair<string, WagePerson>> result = JsonConvert.DeserializeObject<List<KeyValuePair<string, WagePerson>>>(json)", span="979-979"];
m3_476 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, result.Count)", span="980-980"];
m3_477 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''key1'', result[0].Key)", span="981-981"];
m3_478 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, result[0].Value.HourlyWage)", span="982-982"];
m3_479 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''key2'', result[1].Key)", span="983-983"];
m3_480 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, result[1].Value.HourlyWage)", span="984-984"];
m3_481 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", span="936-936"];
m3_426 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyCollection()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyCollection()", span="856-856"];
m3_427 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyCollection()", file="JsonSerializerCollectionsTests.cs", label="IList<int> l = new List<int>\n            {\n                1,\n                2,\n                3\n            }", span="858-863"];
m3_428 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyCollection()", file="JsonSerializerCollectionsTests.cs", label="CustomReadOnlyCollection<int> list = new CustomReadOnlyCollection<int>(l)", span="865-865"];
m3_429 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyCollection()", file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(list, Formatting.Indented)", span="867-867"];
m3_430 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyCollection()", file="JsonSerializerCollectionsTests.cs", label="StringAssert.AreEqual(@''[\n  1,\n  2,\n  3\n]'', json)", span="868-872"];
m3_431 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyCollection()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyCollection()", span="856-856"];
m3_1115 [cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, \\nNewtonsoft.Json.JsonSerializer)", span="2597-2597"];
m3_1116 [cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerCollectionsTests.cs", label="List<string> existingStrings = (List<string>)existingValue", span="2599-2599"];
m3_1118 [cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerCollectionsTests.cs", label="reader.Read()", span="2602-2602"];
m3_1119 [cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerCollectionsTests.cs", label="reader.TokenType != JsonToken.EndArray", span="2604-2604"];
m3_1120 [cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerCollectionsTests.cs", label="string s = (string)reader.Value", span="2606-2606"];
m3_1122 [cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerCollectionsTests.cs", label="reader.Read()", span="2609-2609"];
m3_1117 [cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerCollectionsTests.cs", label="List<string> newStrings = new List<string>(existingStrings)", span="2600-2600"];
m3_1121 [cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerCollectionsTests.cs", label="newStrings.Add(s)", span="2607-2607"];
m3_1123 [cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerCollectionsTests.cs", label="return newStrings;", span="2612-2612"];
m3_1125 [cluster="Newtonsoft.Json.JsonReader.Read()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.JsonReader.Read()", span="392-392"];
m3_1124 [cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="2597-2597"];
m3_502 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIDictionary()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIDictionary()", span="1018-1018"];
m3_503 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIDictionary()", file="JsonSerializerCollectionsTests.cs", label="IDictionary dictionary = JsonConvert.DeserializeObject<IDictionary>(''{'name':'value!'}'')", span="1020-1020"];
m3_504 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIDictionary()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, dictionary.Count)", span="1021-1021"];
m3_505 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIDictionary()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''value!'', dictionary[''name''])", span="1022-1022"];
m3_506 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIDictionary()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIDictionary()", span="1018-1018"];
m3_915 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonDefaultConstructor_DuplicateKeyInDictionary_Replace()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonDefaultConstructor_DuplicateKeyInDictionary_Replace()", span="2030-2030"];
m3_916 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonDefaultConstructor_DuplicateKeyInDictionary_Replace()", file="JsonSerializerCollectionsTests.cs", label="string json = @''{ ''''user'''':''''bpan'''', ''''Person'''':{ ''''groups'''':''''replaced!'''', ''''domain'''':''''adm'''', ''''\\nmail'''':''''bpan@sdu.dk'''', ''''sn'''':''''Pan'''', ''''gn'''':''''Benzhi'''', ''''cn'''':''''Benzhi Pan'''', ''''eo'''':''''BQHLJaVTMr0eWsi1jaIut4Ls/\\npSuMeNEmsWfWsfKo='''', ''''guid'''':''''9A38CE8E5B288942A8DA415CF5E687'''', ''''employeenumber'''':''''2674'''', ''''omk1'''':''''\\n930'''', ''''language'''':''''da'''' }, ''''XMLResponce'''':''''<?xml version='1.0' encoding='iso-8859-1' ?>\n<cas:serviceResponse \\nxmlns:cas='http://www.yale.edu/tp/cas'>\n\t<cas:authenticationSuccess>\n\t\t<cas:user>bpan</cas:user>\n\t\t<norEduPerson>\n\t\t\t<\\ngroups>FNC-PRI-APP-SUNDB-EDOR-A,FNC-RI-APP-SUB-EDITOR-B</groups>\n\t\t\t<domain>adm</domain>\n\t\t\t<mail>bpan@sdu.dk</mail>\n\t\t\t<\\nsn>Pan</sn>\n\t\t\t<gn>Benzhi</gn>\n\t\t\t<cn>Benzhi Pan</cn>\n\t\t\t<eo>BQHLJaVTMr0eWsi1jaIut4Lsfr/pSuMeNEmsWfWsfKo=</eo>\n\t\t\t<\\nguid>9A38CE8E5B288942A8DA415C2C687</guid>\n\t\t\t<employeenumber>274</employeenumber>\n\t\t\t<omk1>930</omk1>\n\t\t\t<language>da</\\nlanguage>\n\t\t</norEduPerson>\n\t</cas:authenticationSuccess>\n</cas:serviceResponse>\n'''', ''''Language'''':1, ''''Groups'''':[ ''''\\nFNC-PRI-APP-SNDB-EDOR-A'''', ''''FNC-PI-APP-SUNDB-EDOR-B'''' ], ''''Domain'''':''''adm'''', ''''Mail'''':''''bpan@sdu.dk'''', ''''\\nSurname'''':''''Pan'''', ''''Givenname'''':''''Benzhi'''', ''''CommonName'''':''''Benzhi Pan'''', ''''OrganizationName'''':null }''", span="2032-2032"];
m3_917 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonDefaultConstructor_DuplicateKeyInDictionary_Replace()", file="JsonSerializerCollectionsTests.cs", label="var result = JsonConvert.DeserializeObject<CASResponce>(json)", span="2034-2034"];
m3_918 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonDefaultConstructor_DuplicateKeyInDictionary_Replace()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''replaced!'', result.Person[''groups''])", span="2036-2036"];
m3_919 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonDefaultConstructor_DuplicateKeyInDictionary_Replace()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonDefaultConstructor_DuplicateKeyInDictionary_Replace()", span="2030-2030"];
m3_408 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator()", span="806-806"];
m3_409 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="return _dictionary.GetEnumerator();", span="808-808"];
m3_410 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator()", span="806-806"];
m3_649 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D_WithTooManyItems()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D_WithTooManyItems()", span="1444-1444"];
m3_650 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D_WithTooManyItems()", file="JsonSerializerCollectionsTests.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2,3],[2,1],[2,2]],''''After'''':''''After!''''}''", span="1446-1446"];
m3_651 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D_WithTooManyItems()", file="JsonSerializerCollectionsTests.cs", label="ExceptionAssert.Throws<Exception>(() => JsonConvert.DeserializeObject<Array2D>(json), ''Cannot deserialize non-cubical array as \\nmultidimensional array.'')", span="1448-1448"];
m3_654 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="JsonConvert.DeserializeObject<Array2D>(json)", span="1448-1448"];
m3_652 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D_WithTooManyItems()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D_WithTooManyItems()", span="1444-1444"];
m3_653 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Entry lambda expression", span="1448-1448"];
m3_155 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryPrivateParameterized.TestDictionaryPrivateParameterized(\\nSystem.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, int>>)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryPrivateParameterized.TestDictionaryPrivateParameterized(\\nSystem.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, int>>)", span="294-294"];
m3_156 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryPrivateParameterized.TestDictionaryPrivateParameterized(\\nSystem.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, int>>)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryPrivateParameterized.TestDictionaryPrivateParameterized(\\nSystem.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, int>>)", span="294-294"];
m3_951 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.Clear()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.Clear()", span="2144-2144"];
m3_952 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.Clear()", file="JsonSerializerCollectionsTests.cs", label="((IList<string>)_storage).Clear()", span="2146-2146"];
m3_954 [cluster="System.Collections.Generic.ICollection<T>.Clear()", file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Generic.ICollection<T>.Clear()", span="0-0"];
m3_953 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.Clear()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.Clear()", span="2144-2144"];
m3_195 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorMultipleParameters()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorMultipleParameters()", span="354-354"];
m3_196 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorMultipleParameters()", file="JsonSerializerCollectionsTests.cs", label="ExceptionAssert.Throws<JsonException>(\n                () => JsonConvert.SerializeObject(new TestDictionaryMultipleParameters(null, \\nnull)),\n                ''Constructor for 'Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests+TestDictionaryMultipleParameters' \\nmust have no parameters or a single parameter that implements 'System.Collections.Generic.IEnumerable`1[System.Collections.Generic.KeyValuePair`\\n2[System.String,System.Int32]]'.'')", span="356-358"];
m3_197 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorMultipleParameters()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorMultipleParameters()", span="354-354"];
m3_198 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Entry lambda expression", span="357-357"];
m3_359 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyListInterface()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyListInterface()", span="704-704"];
m3_360 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyListInterface()", file="JsonSerializerCollectionsTests.cs", label="IReadOnlyList<int> list = JsonConvert.DeserializeObject<IReadOnlyList<int>>(''[1,2,3]'')", span="706-706"];
m3_361 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyListInterface()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, list.Count)", span="708-708"];
m3_362 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyListInterface()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, list[0])", span="709-709"];
m3_363 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyListInterface()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, list[1])", span="710-710"];
m3_364 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyListInterface()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, list[2])", span="711-711"];
m3_365 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyListInterface()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyListInterface()", span="704-704"];
m3_1079 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.Remove(T)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.Remove(T)", span="2466-2466"];
m3_1080 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.Remove(T)", file="JsonSerializerCollectionsTests.cs", label="throw new NotImplementedException();", span="2468-2468"];
m3_1081 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.Remove(T)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.Remove(T)", span="2466-2466"];
m3_269 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", span="523-523"];
m3_270 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="JsonSerializerCollectionsTests.cs", label="object[,] myOtherArray =\n            {\n                { new KeyValuePair<string, double>(''my value'', 0.8), ''foobar'' },\n                { \\ntrue, 0.4d },\n                { 0.05f, 6 }\n            }", span="525-530"];
m3_271 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="JsonSerializerCollectionsTests.cs", label="string myOtherArrayAsString = JsonConvert.SerializeObject(myOtherArray, Formatting.Indented)", span="532-532"];
m3_272 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="JsonSerializerCollectionsTests.cs", label="StringAssert.AreEqual(@''[\n  [\n    {\n      ''''Key'''': ''''my value'''',\n      ''''Value'''': 0.8\n    },\n    ''''foobar''''\n  ],\n  [\n    \\ntrue,\n    0.4\n  ],\n  [\n    0.05,\n    6\n  ]\n]'', myOtherArrayAsString)", span="534-550"];
m3_274 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="JsonSerializerCollectionsTests.cs", label="object[,] myOtherResult = JsonConvert.DeserializeObject<object[,]>(myOtherArrayAsString)", span="557-557"];
m3_273 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="JsonSerializerCollectionsTests.cs", label="JObject o = JObject.Parse(@''{\n              ''''Key'''': ''''my value'''',\n              ''''Value'''': 0.8\n            }'')", span="552-555"];
m3_275 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.IsTrue(JToken.DeepEquals(o, (JToken)myOtherResult[0, 0]))", span="558-558"];
m3_283 [cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="407-407"];
m3_276 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''foobar'', myOtherResult[0, 1])", span="559-559"];
m3_277 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(true, myOtherResult[1, 0])", span="561-561"];
m3_278 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(0.4, myOtherResult[1, 1])", span="562-562"];
m3_279 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(0.05, myOtherResult[2, 0])", span="564-564"];
m3_280 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(6L, myOtherResult[2, 1])", span="565-565"];
m3_284 [cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="154-154"];
m3_281 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", span="523-523"];
m3_193 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryMultipleParameters.TestDictionaryMultipleParameters(\\nstring, string)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryMultipleParameters.TestDictionaryMultipleParameters(\\nstring, string)", span="348-348"];
m3_194 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryMultipleParameters.TestDictionaryMultipleParameters(\\nstring, string)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryMultipleParameters.TestDictionaryMultipleParameters(\\nstring, string)", span="348-348"];
m3_314 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor_Failure()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor_Failure()", span="626-626"];
m3_315 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor_Failure()", file="JsonSerializerCollectionsTests.cs", label="string json = @''[\n  ''''One'''',\n  ''''II'''',\n  ''''3''''\n]''", span="628-632"];
m3_316 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor_Failure()", file="JsonSerializerCollectionsTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<EnumerableClassFailure<string>>(json), ''\\nCannot create and populate list type Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests+EnumerableClassFailure`1[\\nSystem.String]. Path '', line 1, position 1.'')", span="634-634"];
m3_319 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="JsonConvert.DeserializeObject<EnumerableClassFailure<string>>(json)", span="634-634"];
m3_317 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor_Failure()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor_Failure()", span="626-626"];
m3_318 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Entry lambda expression", span="634-634"];
m3_1126 [cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.CanConvert(System.Type)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.CanConvert(System.Type)", span="2615-2615"];
m3_1127 [cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.CanConvert(System.Type)", file="JsonSerializerCollectionsTests.cs", label="return (objectType == typeof(List<string>));", span="2617-2617"];
m3_1128 [cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.CanConvert(System.Type)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.CanConvert(System.Type)", span="2615-2615"];
m3_179 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryPrivate.Create()", file="JsonSerializerCollectionsTests.cs", label="return new TestDictionaryPrivate();", span="325-325"];
m3_180 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryPrivate.Create()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryPrivate.Create()", span="323-323"];
m3_295 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor()", span="589-589"];
m3_296 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor()", file="JsonSerializerCollectionsTests.cs", label="string json = @''[\n  1,\n  2,\n  null\n]''", span="591-595"];
m3_297 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor()", file="JsonSerializerCollectionsTests.cs", label="var result = JsonConvert.DeserializeObject<EnumerableClass<int?>>(json)", span="597-597"];
m3_298 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, result.Count())", span="599-599"];
m3_299 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, result.ElementAt(0))", span="600-600"];
m3_300 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, result.ElementAt(1))", span="601-601"];
m3_301 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(null, result.ElementAt(2))", span="602-602"];
m3_303 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m3_304 [cluster="System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", span="0-0"];
m3_302 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor()", span="589-589"];
m3_397 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)", span="771-771"];
m3_398 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)", file="JsonSerializerCollectionsTests.cs", label="return _dictionary.ContainsKey(key);", span="773-773"];
m3_399 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)", span="771-771"];
m3_400 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m3_534 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", span="1091-1091"];
m3_535 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="string json = @''[ { ''''Value'''': [ ''''1'''', ''''2'''' ], ''''Key'''': ''''aaa'''', ''''BadContent'''': [ 0 ] }, { ''''Value'''': [ ''''\\n3'''', ''''4'''' ], ''''Key'''': ''''bbb'''' } ]''", span="1093-1093"];
m3_536 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="IList<KeyValuePair<string, IList<string>>> values = JsonConvert.DeserializeObject<IList<KeyValuePair<string, IList<string>>>>(json)", span="1095-1095"];
m3_537 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, values.Count)", span="1097-1097"];
m3_538 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''aaa'', values[0].Key)", span="1098-1098"];
m3_539 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, values[0].Value.Count)", span="1099-1099"];
m3_540 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''1'', values[0].Value[0])", span="1100-1100"];
m3_541 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''2'', values[0].Value[1])", span="1101-1101"];
m3_542 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''bbb'', values[1].Key)", span="1102-1102"];
m3_543 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, values[1].Value.Count)", span="1103-1103"];
m3_544 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''3'', values[1].Value[0])", span="1104-1104"];
m3_545 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''4'', values[1].Value[1])", span="1105-1105"];
m3_546 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", span="1091-1091"];
m3_705 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()", span="1517-1517"];
m3_706 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[],''''After'''':''''After!''''}''", span="1519-1519"];
m3_707 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="Array3D aa = JsonConvert.DeserializeObject<Array3D>(json)", span="1521-1521"];
m3_714 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(json, after)", span="1531-1531"];
m3_708 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''Before!'', aa.Before)", span="1523-1523"];
m3_709 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''After!'', aa.After)", span="1524-1524"];
m3_710 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(0, aa.Coordinates.GetLength(0))", span="1525-1525"];
m3_711 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(0, aa.Coordinates.GetLength(1))", span="1526-1526"];
m3_712 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(0, aa.Coordinates.GetLength(2))", span="1527-1527"];
m3_713 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="string after = JsonConvert.SerializeObject(aa)", span="1529-1529"];
m3_715 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()", span="1517-1517"];
m3_230 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomConcurrentDictionary()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomConcurrentDictionary()", span="437-437"];
m3_231 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomConcurrentDictionary()", file="JsonSerializerCollectionsTests.cs", label="IDictionary d = new CustomConcurrentDictionary()", span="439-439"];
m3_240 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomConcurrentDictionary.CustomConcurrentDictionary()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomConcurrentDictionary.CustomConcurrentDictionary()", span="421-421"];
m3_232 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomConcurrentDictionary()", file="JsonSerializerCollectionsTests.cs", label="d.Add(''key'', new List<SomeObject>\n            {\n                new SomeObject\n                {\n                    Text1 = ''\\nvalue1''\n                }\n            })", span="440-446"];
m3_233 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomConcurrentDictionary()", file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(d, Formatting.Indented)", span="448-448"];
m3_234 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomConcurrentDictionary()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(@''{\n  ''''key'''': [\n    {\n      ''''Text1'''': ''''value1''''\n    }\n  ]\n}'', json)", span="450-456"];
m3_235 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomConcurrentDictionary()", file="JsonSerializerCollectionsTests.cs", label="CustomConcurrentDictionary d2 = JsonConvert.DeserializeObject<CustomConcurrentDictionary>(json)", span="458-458"];
m3_236 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomConcurrentDictionary()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, d2.Count)", span="460-460"];
m3_237 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomConcurrentDictionary()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''value1'', d2[''key''][0].Text1)", span="461-461"];
m3_238 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomConcurrentDictionary()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''value2'', d2[''key2''][0].Text1)", span="462-462"];
m3_239 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomConcurrentDictionary()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomConcurrentDictionary()", span="437-437"];
m3_366 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollectionInterface()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollectionInterface()", span="715-715"];
m3_367 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollectionInterface()", file="JsonSerializerCollectionsTests.cs", label="IReadOnlyCollection<int> list = JsonConvert.DeserializeObject<IReadOnlyCollection<int>>(''[1,2,3]'')", span="717-717"];
m3_368 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollectionInterface()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, list.Count)", span="719-719"];
m3_369 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollectionInterface()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, list.ElementAt(0))", span="721-721"];
m3_370 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollectionInterface()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, list.ElementAt(1))", span="722-722"];
m3_371 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollectionInterface()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, list.ElementAt(2))", span="723-723"];
m3_372 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollectionInterface()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollectionInterface()", span="715-715"];
m3_955 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.Contains(string)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.Contains(string)", span="2149-2149"];
m3_956 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.Contains(string)", file="JsonSerializerCollectionsTests.cs", label="return ((IList<string>)_storage).Contains(item);", span="2151-2151"];
m3_958 [cluster="System.Collections.Generic.ICollection<T>.Contains(T)", file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Generic.ICollection<T>.Contains(T)", span="0-0"];
m3_957 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.Contains(string)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.Contains(string)", span="2149-2149"];
m3_352 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNonGenericList()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNonGenericList()", span="693-693"];
m3_353 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNonGenericList()", file="JsonSerializerCollectionsTests.cs", label="IList l = JsonConvert.DeserializeObject<IList>(''['string!']'')", span="695-695"];
m3_354 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNonGenericList()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(typeof(List<object>), l.GetType())", span="697-697"];
m3_355 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNonGenericList()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, l.Count)", span="698-698"];
m3_356 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNonGenericList()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''string!'', l[0])", span="699-699"];
m3_357 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNonGenericList()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNonGenericList()", span="693-693"];
m3_143 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionNonGeneric.TestCollectionNonGeneric(System.Collections.IEnumerable)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionNonGeneric.TestCollectionNonGeneric(System.Collections.IEnumerable)", span="268-268"];
m3_144 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionNonGeneric.TestCollectionNonGeneric(System.Collections.IEnumerable)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionNonGeneric.TestCollectionNonGeneric(System.Collections.IEnumerable)", span="268-268"];
m3_690 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooFewItems()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooFewItems()", span="1496-1496"];
m3_691 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooFewItems()", file="JsonSerializerCollectionsTests.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[[1,1,1],[1,1]],[[1,2,1],[1,2,2]],[[2,1,1],[2,1,2]],[[2,2,\\n1],[2,2,2]]],''''After'''':''''After!''''}''", span="1498-1498"];
m3_692 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooFewItems()", file="JsonSerializerCollectionsTests.cs", label="ExceptionAssert.Throws<Exception>(() => JsonConvert.DeserializeObject<Array3D>(json), ''Cannot deserialize non-cubical array as \\nmultidimensional array.'')", span="1500-1500"];
m3_695 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="JsonConvert.DeserializeObject<Array3D>(json)", span="1500-1500"];
m3_693 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooFewItems()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooFewItems()", span="1496-1496"];
m3_694 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Entry lambda expression", span="1500-1500"];
m3_771 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()", span="1740-1740"];
m3_772 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()", file="JsonSerializerCollectionsTests.cs", label="string json = @''{''''action'''':''''Router'''',''''method'''':''''Navigate'''',''''data'''':[''''dashboard'''',null],''''type'''':''''\\nrpc'''',''''tid'''':2}''", span="1742-1742"];
m3_773 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()", file="JsonSerializerCollectionsTests.cs", label="ObjectArrayPropertyTest o = JsonConvert.DeserializeObject<ObjectArrayPropertyTest>(json)", span="1744-1744"];
m3_774 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''Router'', o.Action)", span="1746-1746"];
m3_775 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''Navigate'', o.Method)", span="1747-1747"];
m3_776 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, o.Data.Length)", span="1748-1748"];
m3_777 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''dashboard'', o.Data[0])", span="1749-1749"];
m3_778 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(null, o.Data[1])", span="1750-1750"];
m3_779 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()", span="1740-1740"];
m3_335 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrivateDefaultCtorWithIEnumerableCtorList<T>.PrivateDefaultCtorWithIEnumerableCtorList(\\nSystem.Collections.Generic.IEnumerable<T>)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrivateDefaultCtorWithIEnumerableCtorList<T>.PrivateDefaultCtorWithIEnumerableCtorList(\\nSystem.Collections.Generic.IEnumerable<T>)", span="663-663"];
m3_336 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrivateDefaultCtorWithIEnumerableCtorList<T>.PrivateDefaultCtorWithIEnumerableCtorList(\\nSystem.Collections.Generic.IEnumerable<T>)", file="JsonSerializerCollectionsTests.cs", label="Add(default(T))", span="666-666"];
m3_337 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrivateDefaultCtorWithIEnumerableCtorList<T>.PrivateDefaultCtorWithIEnumerableCtorList(\\nSystem.Collections.Generic.IEnumerable<T>)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrivateDefaultCtorWithIEnumerableCtorList<T>.PrivateDefaultCtorWithIEnumerableCtorList(\\nSystem.Collections.Generic.IEnumerable<T>)", span="663-663"];
m3_926 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeCultureInfoKey()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeCultureInfoKey()", span="2052-2052"];
m3_927 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeCultureInfoKey()", file="JsonSerializerCollectionsTests.cs", label="string json = @''{ ''''en-US'''': ''''Hi'''', ''''sv-SE'''': ''''Hej'''' }''", span="2054-2054"];
m3_928 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeCultureInfoKey()", file="JsonSerializerCollectionsTests.cs", label="Dictionary<CultureInfo, string> values = JsonConvert.DeserializeObject<Dictionary<CultureInfo, string>>(json)", span="2056-2056"];
m3_929 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeCultureInfoKey()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, values.Count)", span="2057-2057"];
m3_930 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeCultureInfoKey()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeCultureInfoKey()", span="2052-2052"];
m3_1100 [cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GenericClass()", file="JsonSerializerCollectionsTests.cs", label="Items = new List<T>()", span="2562-2562"];
m3_1101 [cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GenericClass()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GenericClass()", span="2560-2560"];
m3_587 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()", span="1214-1214"];
m3_588 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()", file="JsonSerializerCollectionsTests.cs", label="string json = @''{\n  ''''NonReadOnlyList'''': [\n    11\n  ],\n  ''''NonReadOnlyDictionary'''': {\n    ''''first'''': 12\n  },\n  ''''\\nArray'''': [\n    13\n  ],\n  ''''List'''': [\n    14\n  ],\n  ''''Dictionary'''': {\n    ''''first'''': 15\n  },\n  ''''IReadOnlyCollection'''': [\n    \\n16\n  ],\n  ''''ReadOnlyCollection'''': [\n    17\n  ],\n  ''''IReadOnlyList'''': [\n    18\n  ],\n  ''''IReadOnlyDictionary'''': {\n    ''''\\nfirst'''': 19\n  },\n  ''''ReadOnlyDictionary'''': {\n    ''''first'''': 20\n  }\n}''", span="1216-1247"];
m3_589 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()", file="JsonSerializerCollectionsTests.cs", label="var c2 = JsonConvert.DeserializeObject<PopulateReadOnlyTestClass>(json)", span="1249-1249"];
m3_590 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, c2.NonReadOnlyDictionary.Count)", span="1251-1251"];
m3_591 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(12, c2.NonReadOnlyDictionary[''first''])", span="1252-1252"];
m3_592 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, c2.NonReadOnlyList.Count)", span="1254-1254"];
m3_593 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, c2.NonReadOnlyList[0])", span="1255-1255"];
m3_594 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(11, c2.NonReadOnlyList[1])", span="1256-1256"];
m3_595 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, c2.Array.Count)", span="1258-1258"];
m3_596 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(13, c2.Array[0])", span="1259-1259"];
m3_597 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()", span="1214-1214"];
m3_982 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.System.Collections.IEnumerable.GetEnumerator()", span="2184-2184"];
m3_983 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="return ((IList<string>)_storage).GetEnumerator();", span="2186-2186"];
m3_984 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.System.Collections.IEnumerable.GetEnumerator()", span="2184-2184"];
m3_87 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized.Add(int)", file="JsonSerializerCollectionsTests.cs", label="_bars.Add(bar)", span="175-175"];
m3_88 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized.Add(int)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized.Add(int)", span="173-173"];
m3_683 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithBadItems()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithBadItems()", span="1488-1488"];
m3_684 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithBadItems()", file="JsonSerializerCollectionsTests.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[[1,1,1],[1,1,2]],[[1,2,1],[1,2,2]],[[2,1,1],[2,1,2]],[[2,\\n2,1],{}]],''''After'''':''''After!''''}''", span="1490-1490"];
m3_685 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithBadItems()", file="JsonSerializerCollectionsTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<Array3D>(json), ''Unexpected token when deserializing \\nmultidimensional array: StartObject. Path 'Coordinates[3][1]', line 1, position 99.'')", span="1492-1492"];
m3_688 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="JsonConvert.DeserializeObject<Array3D>(json)", span="1492-1492"];
m3_686 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithBadItems()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithBadItems()", span="1488-1488"];
m3_687 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Entry lambda expression", span="1492-1492"];
m3_1076 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.CopyTo(T[], int)", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.CopyTo(T[], int)", span="2461-2461"];
m3_1077 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.CopyTo(T[], int)", file="JsonSerializerCollectionsTests.cs", label="throw new NotImplementedException();", span="2463-2463"];
m3_1078 [cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.CopyTo(T[], int)", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.CopyTo(T[], int)", span="2461-2461"];
m3_411 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyDictionary()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyDictionary()", span="813-813"];
m3_412 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyDictionary()", file="JsonSerializerCollectionsTests.cs", label="IDictionary<string, int> d = new Dictionary<string, int>\n            {\n                { ''one'', 1 },\n                { ''two'', \\n2 }\n            }", span="815-819"];
m3_413 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyDictionary()", file="JsonSerializerCollectionsTests.cs", label="CustomReadOnlyDictionary<string, int> dic = new CustomReadOnlyDictionary<string, int>(d)", span="821-821"];
m3_414 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyDictionary()", file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(dic, Formatting.Indented)", span="823-823"];
m3_415 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyDictionary()", file="JsonSerializerCollectionsTests.cs", label="StringAssert.AreEqual(@''{\n  ''''one'''': 1,\n  ''''two'''': 2\n}'', json)", span="824-827"];
m3_416 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyDictionary()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyDictionary()", span="813-813"];
m3_55 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DoubleKey_WholeValue()", file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DoubleKey_WholeValue()", span="126-126"];
m3_56 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DoubleKey_WholeValue()", file="JsonSerializerCollectionsTests.cs", label="Dictionary<double, int> dictionary = new Dictionary<double, int> { { 1d, 1 } }", span="128-128"];
m3_57 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DoubleKey_WholeValue()", file="JsonSerializerCollectionsTests.cs", label="string output = JsonConvert.SerializeObject(dictionary)", span="129-129"];
m3_58 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DoubleKey_WholeValue()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(@''{''''1'''':1}'', output)", span="130-130"];
m3_59 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DoubleKey_WholeValue()", file="JsonSerializerCollectionsTests.cs", label="Dictionary<double, int> deserializedValue = JsonConvert.DeserializeObject<Dictionary<double, int>>(output)", span="132-132"];
m3_60 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DoubleKey_WholeValue()", file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1d, deserializedValue.First().Key)", span="133-133"];
m3_61 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DoubleKey_WholeValue()", file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DoubleKey_WholeValue()", span="126-126"];
m3_133 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="JsonConvert.SerializeObject(new TestCollectionMultipleParameters(null, null))", span="244-244"];
m3_134 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Exit lambda expression", span="244-244"];
m3_141 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="JsonConvert.SerializeObject(new TestCollectionBadIEnumerableParameter(null))", span="260-260"];
m3_142 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Exit lambda expression", span="260-260"];
m3_157 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Entry lambda expression", span="295-295"];
m3_158 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="k.Key", span="295-295"];
m3_159 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Exit lambda expression", span="295-295"];
m3_160 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Entry lambda expression", span="295-295"];
m3_161 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="k.Value", span="295-295"];
m3_162 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Exit lambda expression", span="295-295"];
m3_199 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="JsonConvert.SerializeObject(new TestDictionaryMultipleParameters(null, null))", span="357-357"];
m3_200 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Exit lambda expression", span="357-357"];
m3_207 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="JsonConvert.SerializeObject(new TestDictionaryBadIEnumerableParameter(null))", span="373-373"];
m3_208 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Exit lambda expression", span="373-373"];
m3_223 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="JsonConvert.DeserializeObject<NameValueCollectionTestClass>(''{Collection:[]}'')", span="410-410"];
m3_224 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Exit lambda expression", span="410-410"];
m3_320 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Exit lambda expression", span="634-634"];
m3_331 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="JsonConvert.DeserializeObject<PrivateDefaultCtorList<int>>(''[1,2]'')", span="647-647"];
m3_332 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Exit lambda expression", span="647-647"];
m3_567 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Exit lambda expression", span="1132-1132"];
m3_655 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Exit lambda expression", span="1448-1448"];
m3_662 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Exit lambda expression", span="1456-1456"];
m3_682 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Exit lambda expression", span="1484-1484"];
m3_689 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Exit lambda expression", span="1492-1492"];
m3_696 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Exit lambda expression", span="1500-1500"];
m3_722 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Exit lambda expression", span="1539-1539"];
m3_729 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Exit lambda expression", span="1547-1547"];
m3_914 [cluster="lambda expression", file="JsonSerializerCollectionsTests.cs", label="Exit lambda expression", span="2022-2025"];
m4_0 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetCachedAttribute<T>(object)", file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetCachedAttribute<T>(object)", span="66-66"];
m4_1 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetCachedAttribute<T>(object)", file="JsonTypeReflector.cs", label="return CachedAttributeGetter<T>.GetAttribute(attributeProvider);", span="68-68"];
m4_2 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetCachedAttribute<T>(object)", file="JsonTypeReflector.cs", label="Exit Newtonsoft.Json.Serialization.JsonTypeReflector.GetCachedAttribute<T>(object)", span="66-66"];
m4_3 [cluster="Newtonsoft.Json.Serialization.CachedAttributeGetter<T>.GetAttribute(object)", file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Serialization.CachedAttributeGetter<T>.GetAttribute(object)", span="35-35"];
m4_87 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Type)", file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Type)", span="300-300"];
m4_88 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Type)", file="JsonTypeReflector.cs", label="T attribute", span="302-302"];
m4_89 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Type)", file="JsonTypeReflector.cs", label="Type metadataType = GetAssociatedMetadataType(type)", span="305-305"];
m4_94 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Type)", file="JsonTypeReflector.cs", label="attribute = ReflectionUtils.GetAttribute<T>(type, true)", span="316-316"];
m4_97 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Type)", file="JsonTypeReflector.cs", label="type.GetInterfaces()", span="322-322"];
m4_90 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Type)", file="JsonTypeReflector.cs", label="metadataType != null", span="306-306"];
m4_91 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Type)", file="JsonTypeReflector.cs", label="attribute = ReflectionUtils.GetAttribute<T>(metadataType, true)", span="308-308"];
m4_68 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociatedMetadataType(System.Type)", file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociatedMetadataType(System.Type)", span="268-268"];
m4_103 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(object, bool)", file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(object, bool)", span="719-719"];
m4_92 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Type)", file="JsonTypeReflector.cs", label="attribute != null", span="309-309"];
m4_93 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Type)", file="JsonTypeReflector.cs", label="return attribute;", span="311-311"];
m4_102 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Type)", file="JsonTypeReflector.cs", label="Exit Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Type)", span="300-300"];
m4_95 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Type)", file="JsonTypeReflector.cs", label="attribute != null", span="317-317"];
m4_96 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Type)", file="JsonTypeReflector.cs", label="return attribute;", span="319-319"];
m4_98 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Type)", file="JsonTypeReflector.cs", label="attribute = ReflectionUtils.GetAttribute<T>(typeInterface, true)", span="324-324"];
m4_101 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Type)", file="JsonTypeReflector.cs", label="return null;", span="331-331"];
m4_104 [cluster="System.Type.GetInterfaces()", file="JsonTypeReflector.cs", label="Entry System.Type.GetInterfaces()", span="0-0"];
m4_99 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Type)", file="JsonTypeReflector.cs", label="attribute != null", span="325-325"];
m4_100 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Type)", file="JsonTypeReflector.cs", label="return attribute;", span="327-327"];
m4_127 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(object)", file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(object)", span="417-417"];
m4_128 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(object)", file="JsonTypeReflector.cs", label="Type type = provider as Type", span="419-419"];
m4_131 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(object)", file="JsonTypeReflector.cs", label="MemberInfo memberInfo = provider as MemberInfo", span="425-425"];
m4_134 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(object)", file="JsonTypeReflector.cs", label="return ReflectionUtils.GetAttribute<T>(provider, true);", span="431-431"];
m4_129 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(object)", file="JsonTypeReflector.cs", label="type != null", span="420-420"];
m4_130 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(object)", file="JsonTypeReflector.cs", label="return GetAttribute<T>(type);", span="422-422"];
m4_135 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(object)", file="JsonTypeReflector.cs", label="Exit Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(object)", span="417-417"];
m4_132 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(object)", file="JsonTypeReflector.cs", label="memberInfo != null", span="426-426"];
m4_133 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(object)", file="JsonTypeReflector.cs", label="return GetAttribute<T>(memberInfo);", span="428-428"];
m4_105 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)", file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)", span="334-334"];
m4_10 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(object)", file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(object)", span="178-178"];
m4_11 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(object)", file="JsonTypeReflector.cs", label="JsonConverterAttribute converterAttribute = GetCachedAttribute<JsonConverterAttribute>(attributeProvider)", span="180-180"];
m4_12 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(object)", file="JsonTypeReflector.cs", label="converterAttribute != null", span="182-182"];
m4_13 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(object)", file="JsonTypeReflector.cs", label="Func<object[], object> creator = CreatorCache.Get(converterAttribute.ConverterType)", span="184-184"];
m4_15 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(object)", file="JsonTypeReflector.cs", label="return (JsonConverter)creator(converterAttribute.ConverterParameters);", span="187-187"];
m4_16 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(object)", file="JsonTypeReflector.cs", label="return null;", span="191-191"];
m4_14 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(object)", file="JsonTypeReflector.cs", label="creator != null", span="185-185"];
m4_18 [cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.Get(TKey)", file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.Get(TKey)", span="60-60"];
m4_17 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(object)", file="JsonTypeReflector.cs", label="Exit Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(object)", span="178-178"];
m4_19 [cluster="Newtonsoft.Json.Serialization.Func<T, TResult>.Invoke(T)", file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Serialization.Func<T, TResult>.Invoke(T)", span="3037-3037"];
m4_20 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.CreateJsonConverterInstance(System.Type, object[])", file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.CreateJsonConverterInstance(System.Type, object[])", span="200-200"];
m4_21 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.CreateJsonConverterInstance(System.Type, object[])", file="JsonTypeReflector.cs", label="Func<object[], object> converterCreator = CreatorCache.Get(converterType)", span="202-202"];
m4_22 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.CreateJsonConverterInstance(System.Type, object[])", file="JsonTypeReflector.cs", label="return (JsonConverter)converterCreator(converterArgs);", span="203-203"];
m4_23 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.CreateJsonConverterInstance(System.Type, object[])", file="JsonTypeReflector.cs", label="Exit Newtonsoft.Json.Serialization.JsonTypeReflector.CreateJsonConverterInstance(System.Type, object[])", span="200-200"];
m4_24 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.CreateNamingStrategyInstance(System.Type, object[])", file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.CreateNamingStrategyInstance(System.Type, object[])", span="206-206"];
m4_25 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.CreateNamingStrategyInstance(System.Type, object[])", file="JsonTypeReflector.cs", label="Func<object[], object> converterCreator = CreatorCache.Get(namingStrategyType)", span="208-208"];
m4_26 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.CreateNamingStrategyInstance(System.Type, object[])", file="JsonTypeReflector.cs", label="return (NamingStrategy)converterCreator(converterArgs);", span="209-209"];
m4_27 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.CreateNamingStrategyInstance(System.Type, object[])", file="JsonTypeReflector.cs", label="Exit Newtonsoft.Json.Serialization.JsonTypeReflector.CreateNamingStrategyInstance(System.Type, object[])", span="206-206"];
m4_28 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetContainerNamingStrategy(Newtonsoft.Json.JsonContainerAttribute)", file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetContainerNamingStrategy(Newtonsoft.Json.JsonContainerAttribute)", span="212-212"];
m4_29 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetContainerNamingStrategy(Newtonsoft.Json.JsonContainerAttribute)", file="JsonTypeReflector.cs", label="containerAttribute.NamingStrategyInstance == null", span="214-214"];
m4_30 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetContainerNamingStrategy(Newtonsoft.Json.JsonContainerAttribute)", file="JsonTypeReflector.cs", label="containerAttribute.NamingStrategyType == null", span="216-216"];
m4_32 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetContainerNamingStrategy(Newtonsoft.Json.JsonContainerAttribute)", file="JsonTypeReflector.cs", label="containerAttribute.NamingStrategyInstance = CreateNamingStrategyInstance(containerAttribute.NamingStrategyType, containerAttribute.NamingStrategyParameters)", span="221-221"];
m4_33 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetContainerNamingStrategy(Newtonsoft.Json.JsonContainerAttribute)", file="JsonTypeReflector.cs", label="return containerAttribute.NamingStrategyInstance;", span="224-224"];
m4_31 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetContainerNamingStrategy(Newtonsoft.Json.JsonContainerAttribute)", file="JsonTypeReflector.cs", label="return null;", span="218-218"];
m4_34 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetContainerNamingStrategy(Newtonsoft.Json.JsonContainerAttribute)", file="JsonTypeReflector.cs", label="Exit Newtonsoft.Json.Serialization.JsonTypeReflector.GetContainerNamingStrategy(Newtonsoft.Json.JsonContainerAttribute)", span="212-212"];
m4_35 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetCreator(System.Type)", file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetCreator(System.Type)", span="227-227"];
m4_36 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetCreator(System.Type)", file="JsonTypeReflector.cs", label="Func<object> defaultConstructor = (ReflectionUtils.HasDefaultConstructor(type, false))\n                ? ReflectionDelegateFactory.CreateDefaultConstructor<\\nobject>(type)\n                : null", span="229-231"];
m4_37 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetCreator(System.Type)", file="JsonTypeReflector.cs", label="return (parameters) =>\n            {\n                try\n                {\n                    if (parameters != null)\n                    {\n                        \\nType[] paramTypes = parameters.Select(param => param.GetType()).ToArray();\n                        ConstructorInfo parameterizedConstructorInfo = \\ntype.GetConstructor(paramTypes);\n\n                        if (null != parameterizedConstructorInfo)\n                        {\n                            \\nObjectConstructor<object> parameterizedConstructor = ReflectionDelegateFactory.CreateParameterizedConstructor(parameterizedConstructorInfo);\n                            \\nreturn parameterizedConstructor(parameters);\n                        }\n                        else\n                        {\n                            \\nthrow new JsonException(''No matching parameterized constructor found for '{0}'.''.FormatWith(CultureInfo.InvariantCulture, type));\n                        }\n                    }\n\n                    \\nif (defaultConstructor == null)\n                    {\n                        throw new JsonException(''No parameterless constructor \\ndefined for '{0}'.''.FormatWith(CultureInfo.InvariantCulture, type));\n                    }\n\n                    return defaultConstructor();\n                }\n                \\ncatch (Exception ex)\n                {\n                    throw new JsonException(''Error creating '{0}'.''.FormatWith(CultureInfo.InvariantCulture, \\ntype), ex);\n                }\n            };", span="233-264"];
m4_44 [cluster="lambda expression", file="JsonTypeReflector.cs", label="ConstructorInfo parameterizedConstructorInfo = type.GetConstructor(paramTypes)", span="240-240"];
m4_48 [cluster="lambda expression", file="JsonTypeReflector.cs", label="throw new JsonException(''No matching parameterized constructor found for '{0}'.''.FormatWith(CultureInfo.InvariantCulture, type));", span="249-249"];
m4_50 [cluster="lambda expression", file="JsonTypeReflector.cs", label="throw new JsonException(''No parameterless constructor defined for '{0}'.''.FormatWith(CultureInfo.InvariantCulture, type));", span="255-255"];
m4_53 [cluster="lambda expression", file="JsonTypeReflector.cs", label="throw new JsonException(''Error creating '{0}'.''.FormatWith(CultureInfo.InvariantCulture, type), ex);", span="262-262"];
m4_40 [cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", span="76-76"];
m4_39 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", span="223-223"];
m4_49 [cluster="lambda expression", file="JsonTypeReflector.cs", label="defaultConstructor == null", span="253-253"];
m4_51 [cluster="lambda expression", file="JsonTypeReflector.cs", label="return defaultConstructor();", span="258-258"];
m4_38 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetCreator(System.Type)", file="JsonTypeReflector.cs", label="Exit Newtonsoft.Json.Serialization.JsonTypeReflector.GetCreator(System.Type)", span="227-227"];
m4_42 [cluster="lambda expression", file="JsonTypeReflector.cs", label="parameters != null", span="237-237"];
m4_43 [cluster="lambda expression", file="JsonTypeReflector.cs", label="Type[] paramTypes = parameters.Select(param => param.GetType()).ToArray()", span="239-239"];
m4_47 [cluster="lambda expression", file="JsonTypeReflector.cs", label="return parameterizedConstructor(parameters);", span="245-245"];
m4_69 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociatedMetadataType(System.Type)", file="JsonTypeReflector.cs", label="return AssociatedMetadataTypesCache.Get(type);", span="270-270"];
m4_70 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociatedMetadataType(System.Type)", file="JsonTypeReflector.cs", label="Exit Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociatedMetadataType(System.Type)", span="268-268"];
m4_106 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)", file="JsonTypeReflector.cs", label="T attribute", span="336-336"];
m4_107 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)", file="JsonTypeReflector.cs", label="Type metadataType = GetAssociatedMetadataType(memberInfo.DeclaringType)", span="339-339"];
m4_109 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)", file="JsonTypeReflector.cs", label="MemberInfo metadataTypeMemberInfo = ReflectionUtils.GetMemberInfoFromType(metadataType, memberInfo)", span="342-342"];
m4_114 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)", file="JsonTypeReflector.cs", label="attribute = ReflectionUtils.GetAttribute<T>(memberInfo, true)", span="355-355"];
m4_117 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)", file="JsonTypeReflector.cs", label="memberInfo.DeclaringType != null", span="361-361"];
m4_118 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)", file="JsonTypeReflector.cs", label="memberInfo.DeclaringType.GetInterfaces()", span="363-363"];
m4_119 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)", file="JsonTypeReflector.cs", label="MemberInfo interfaceTypeMemberInfo = ReflectionUtils.GetMemberInfoFromType(typeInterface, memberInfo)", span="365-365"];
m4_108 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)", file="JsonTypeReflector.cs", label="metadataType != null", span="340-340"];
m4_110 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)", file="JsonTypeReflector.cs", label="metadataTypeMemberInfo != null", span="344-344"];
m4_111 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)", file="JsonTypeReflector.cs", label="attribute = ReflectionUtils.GetAttribute<T>(metadataTypeMemberInfo, true)", span="346-346"];
m4_126 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberInfoFromType(System.Type, System.Reflection.MemberInfo)", file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberInfoFromType(System.Type, System.Reflection.MemberInfo)", span="889-889"];
m4_112 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)", file="JsonTypeReflector.cs", label="attribute != null", span="347-347"];
m4_113 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)", file="JsonTypeReflector.cs", label="return attribute;", span="349-349"];
m4_125 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)", file="JsonTypeReflector.cs", label="Exit Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)", span="334-334"];
m4_115 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)", file="JsonTypeReflector.cs", label="attribute != null", span="356-356"];
m4_116 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)", file="JsonTypeReflector.cs", label="return attribute;", span="358-358"];
m4_124 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)", file="JsonTypeReflector.cs", label="return null;", span="378-378"];
m4_120 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)", file="JsonTypeReflector.cs", label="interfaceTypeMemberInfo != null", span="367-367"];
m4_121 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)", file="JsonTypeReflector.cs", label="attribute = ReflectionUtils.GetAttribute<T>(interfaceTypeMemberInfo, true)", span="369-369"];
m4_122 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)", file="JsonTypeReflector.cs", label="attribute != null", span="370-370"];
m4_123 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)", file="JsonTypeReflector.cs", label="return attribute;", span="372-372"];
m4_71 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociateMetadataTypeFromAttribute(System.Type)", file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociateMetadataTypeFromAttribute(System.Type)", span="273-273"];
m4_72 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociateMetadataTypeFromAttribute(System.Type)", file="JsonTypeReflector.cs", label="Attribute[] customAttributes = ReflectionUtils.GetAttributes(type, null, true)", span="275-275"];
m4_82 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", span="740-740"];
m4_73 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociateMetadataTypeFromAttribute(System.Type)", file="JsonTypeReflector.cs", label=customAttributes, span="277-277"];
m4_74 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociateMetadataTypeFromAttribute(System.Type)", file="JsonTypeReflector.cs", label="Type attributeType = attribute.GetType()", span="279-279"];
m4_79 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociateMetadataTypeFromAttribute(System.Type)", file="JsonTypeReflector.cs", label="return (Type)_metadataTypeAttributeReflectionObject.GetValue(attribute, metadataClassTypeName);", span="292-292"];
m4_80 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociateMetadataTypeFromAttribute(System.Type)", file="JsonTypeReflector.cs", label="return null;", span="296-296"];
m4_83 [cluster="object.GetType()", file="JsonTypeReflector.cs", label="Entry object.GetType()", span="0-0"];
m4_75 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociateMetadataTypeFromAttribute(System.Type)", file="JsonTypeReflector.cs", label="string.Equals(attributeType.FullName, ''System.ComponentModel.DataAnnotations.MetadataTypeAttribute'', StringComparison.Ordinal)", span="283-283"];
m4_78 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociateMetadataTypeFromAttribute(System.Type)", file="JsonTypeReflector.cs", label="_metadataTypeAttributeReflectionObject = ReflectionObject.Create(attributeType, metadataClassTypeName)", span="289-289"];
m4_76 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociateMetadataTypeFromAttribute(System.Type)", file="JsonTypeReflector.cs", label="string metadataClassTypeName = ''MetadataClassType''", span="285-285"];
m4_84 [cluster="string.Equals(string, string, System.StringComparison)", file="JsonTypeReflector.cs", label="Entry string.Equals(string, string, System.StringComparison)", span="0-0"];
m4_77 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociateMetadataTypeFromAttribute(System.Type)", file="JsonTypeReflector.cs", label="_metadataTypeAttributeReflectionObject == null", span="287-287"];
m4_85 [cluster="Newtonsoft.Json.Utilities.ReflectionObject.Create(System.Type, params string[])", file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionObject.Create(System.Type, params string[])", span="74-74"];
m4_86 [cluster="Newtonsoft.Json.Utilities.ReflectionObject.GetValue(object, string)", file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionObject.GetValue(object, string)", span="57-57"];
m4_81 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociateMetadataTypeFromAttribute(System.Type)", file="JsonTypeReflector.cs", label="Exit Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociateMetadataTypeFromAttribute(System.Type)", span="273-273"];
m4_4 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type, bool)", file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type, bool)", span="151-151"];
m4_5 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type, bool)", file="JsonTypeReflector.cs", label="JsonObjectAttribute objectAttribute = GetCachedAttribute<JsonObjectAttribute>(objectType)", span="153-153"];
m4_6 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type, bool)", file="JsonTypeReflector.cs", label="objectAttribute != null", span="154-154"];
m4_7 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type, bool)", file="JsonTypeReflector.cs", label="return objectAttribute.MemberSerialization;", span="156-156"];
m4_8 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type, bool)", file="JsonTypeReflector.cs", label="return MemberSerialization.OptOut;", span="175-175"];
m4_9 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type, bool)", file="JsonTypeReflector.cs", label="Exit Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type, bool)", span="151-151"];
m4_41 [cluster="lambda expression", file="JsonTypeReflector.cs", label="Entry lambda expression", span="233-264"];
m4_64 [cluster="lambda expression", file="JsonTypeReflector.cs", label="Entry lambda expression", span="239-239"];
m4_57 [cluster="System.Type.GetConstructor(System.Type[])", file="JsonTypeReflector.cs", label="Entry System.Type.GetConstructor(System.Type[])", span="0-0"];
m4_45 [cluster="lambda expression", file="JsonTypeReflector.cs", label="null != parameterizedConstructorInfo", span="242-242"];
m4_46 [cluster="lambda expression", file="JsonTypeReflector.cs", label="ObjectConstructor<object> parameterizedConstructor = ReflectionDelegateFactory.CreateParameterizedConstructor(parameterizedConstructorInfo)", span="244-244"];
m4_58 [cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateParameterizedConstructor(System.Reflection.MethodBase)", file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateParameterizedConstructor(System.Reflection.MethodBase)", span="75-75"];
m4_54 [cluster="lambda expression", file="JsonTypeReflector.cs", label="Exit lambda expression", span="233-264"];
m4_60 [cluster="Newtonsoft.Json.JsonException.JsonException(string)", file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.JsonException.JsonException(string)", span="54-54"];
m4_61 [cluster="string.FormatWith(System.IFormatProvider, object)", file="JsonTypeReflector.cs", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
m4_62 [cluster="Newtonsoft.Json.Serialization.Func<TResult>.Invoke()", file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Serialization.Func<TResult>.Invoke()", span="3035-3035"];
m4_52 [cluster="lambda expression", file="JsonTypeReflector.cs", label=Exception, span="260-260"];
m4_63 [cluster="Newtonsoft.Json.JsonException.JsonException(string, System.Exception)", file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.JsonException.JsonException(string, System.Exception)", span="65-65"];
m4_65 [cluster="lambda expression", file="JsonTypeReflector.cs", label="param.GetType()", span="239-239"];
m4_66 [cluster="lambda expression", file="JsonTypeReflector.cs", label="Exit lambda expression", span="239-239"];
m5_0 [cluster="Newtonsoft.Json.Converters.UnixDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", color=green, community=1, file="UnixDateTimeConverter.cs", label="Entry Newtonsoft.Json.Converters.UnixDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", prediction=3, span="44-44"];
m5_1 [cluster="Newtonsoft.Json.Converters.UnixDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", color=green, community=1, file="UnixDateTimeConverter.cs", label="long ticks", prediction=4, span="46-46"];
m5_2 [cluster="Newtonsoft.Json.Converters.UnixDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", color=green, community=1, file="UnixDateTimeConverter.cs", label="value is DateTime", prediction=3, span="48-48"];
m5_5 [cluster="Newtonsoft.Json.Converters.UnixDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", color=green, community=1, file="UnixDateTimeConverter.cs", label="throw new JsonSerializationException(''Expected date object value.'');", prediction=6, span="60-60"];
m5_9 [cluster="Newtonsoft.Json.Converters.UnixDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", color=green, community=1, file="UnixDateTimeConverter.cs", label="Exit Newtonsoft.Json.Converters.UnixDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", prediction=7, span="44-44"];
m5_7 [cluster="Newtonsoft.Json.Converters.UnixDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", color=green, community=1, file="UnixDateTimeConverter.cs", label="throw new JsonSerializationException(''Cannot convert date value that is before Unix epoch of 00:00:00 UTC on 1 January 1970.'');", prediction=8, span="65-65"];
m5_3 [cluster="Newtonsoft.Json.Converters.UnixDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", color=green, community=1, file="UnixDateTimeConverter.cs", label=dateTime, prediction=9, span="48-48"];
m5_4 [cluster="Newtonsoft.Json.Converters.UnixDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", color=green, community=1, file="UnixDateTimeConverter.cs", label="ticks = (long)(dateTime.ToUniversalTime() - UnixEpoch).TotalSeconds", prediction=10, span="50-50"];
m5_6 [cluster="Newtonsoft.Json.Converters.UnixDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", color=green, community=1, file="UnixDateTimeConverter.cs", label="ticks < 0", prediction=10, span="63-63"];
m5_8 [cluster="Newtonsoft.Json.Converters.UnixDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", color=green, community=1, file="UnixDateTimeConverter.cs", label="writer.WriteValue(ticks)", prediction=10, span="68-68"];
m5_12 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(long)", file="UnixDateTimeConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(long)", span="976-976"];
m5_13 [cluster="Newtonsoft.Json.Converters.UnixDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", color=green, community=1, file="UnixDateTimeConverter.cs", label="Entry Newtonsoft.Json.Converters.UnixDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", prediction=13, span="79-79"];
m5_14 [cluster="Newtonsoft.Json.Converters.UnixDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", color=green, community=1, file="UnixDateTimeConverter.cs", label="bool nullable = ReflectionUtils.IsNullable(objectType)", prediction=14, span="81-81"];
m5_15 [cluster="Newtonsoft.Json.Converters.UnixDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", color=green, community=1, file="UnixDateTimeConverter.cs", label="reader.TokenType == JsonToken.Null", prediction=13, span="82-82"];
m5_17 [cluster="Newtonsoft.Json.Converters.UnixDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", color=green, community=1, file="UnixDateTimeConverter.cs", label="throw JsonSerializationException.Create(reader, ''Cannot convert null value to {0}.''.FormatWith(CultureInfo.InvariantCulture, objectType));", prediction=13, span="86-86"];
m5_20 [cluster="Newtonsoft.Json.Converters.UnixDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", color=green, community=1, file="UnixDateTimeConverter.cs", label="reader.TokenType == JsonToken.Integer", prediction=13, span="94-94"];
m5_21 [cluster="Newtonsoft.Json.Converters.UnixDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", color=green, community=1, file="UnixDateTimeConverter.cs", label="ticks = (long)reader.Value", prediction=18, span="96-96"];
m5_22 [cluster="Newtonsoft.Json.Converters.UnixDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", color=green, community=1, file="UnixDateTimeConverter.cs", label="reader.TokenType == JsonToken.String", prediction=13, span="98-98"];
m5_23 [cluster="Newtonsoft.Json.Converters.UnixDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", color=green, community=1, file="UnixDateTimeConverter.cs", label="!long.TryParse((string)reader.Value, out ticks)", prediction=13, span="100-100"];
m5_24 [cluster="Newtonsoft.Json.Converters.UnixDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", color=green, community=1, file="UnixDateTimeConverter.cs", label="throw JsonSerializationException.Create(reader, ''Cannot convert invalid value to {0}.''.FormatWith(CultureInfo.InvariantCulture, \\nobjectType));", prediction=13, span="102-102"];
m5_25 [cluster="Newtonsoft.Json.Converters.UnixDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", color=green, community=1, file="UnixDateTimeConverter.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected token parsing date. Expected Integer or String, got {0}.''.FormatWith(\\nCultureInfo.InvariantCulture, reader.TokenType));", prediction=13, span="107-107"];
m5_29 [cluster="Newtonsoft.Json.Converters.UnixDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", color=green, community=1, file="UnixDateTimeConverter.cs", label="throw JsonSerializationException.Create(reader, ''Cannot convert value that is before Unix epoch of 00:00:00 UTC on 1 January 1970 \\nto {0}.''.FormatWith(CultureInfo.InvariantCulture, objectType));", prediction=13, span="127-127"];
m5_31 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", file="UnixDateTimeConverter.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", span="251-251"];
m5_16 [cluster="Newtonsoft.Json.Converters.UnixDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", color=green, community=1, file="UnixDateTimeConverter.cs", label="!nullable", prediction=14, span="84-84"];
m5_19 [cluster="Newtonsoft.Json.Converters.UnixDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", color=green, community=1, file="UnixDateTimeConverter.cs", label="long ticks", prediction=25, span="92-92"];
m5_30 [cluster="Newtonsoft.Json.Converters.UnixDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", color=green, community=1, file="UnixDateTimeConverter.cs", label="Exit Newtonsoft.Json.Converters.UnixDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", prediction=26, span="79-79"];
m5_33 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", color=green, community=0, file="UnixDateTimeConverter.cs", label="Entry Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", prediction=27, span="82-82"];
m5_32 [cluster="string.FormatWith(System.IFormatProvider, object)", color=green, community=0, file="UnixDateTimeConverter.cs", label="Entry string.FormatWith(System.IFormatProvider, object)", prediction=28, span="47-47"];
m5_26 [cluster="Newtonsoft.Json.Converters.UnixDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", color=green, community=1, file="UnixDateTimeConverter.cs", label="ticks >= 0", prediction=25, span="110-110"];
m5_27 [cluster="Newtonsoft.Json.Converters.UnixDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", color=green, community=1, file="UnixDateTimeConverter.cs", label="DateTime d = UnixEpoch.AddSeconds(ticks)", prediction=30, span="112-112"];
m5_34 [cluster="long.TryParse(string, out long)", color=green, community=0, file="UnixDateTimeConverter.cs", label="Entry long.TryParse(string, out long)", prediction=31, span="0-0"];
m5_18 [cluster="Newtonsoft.Json.Converters.UnixDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", color=green, community=1, file="UnixDateTimeConverter.cs", label="return null;", prediction=32, span="89-89"];
m5_28 [cluster="Newtonsoft.Json.Converters.UnixDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", color=green, community=1, file="UnixDateTimeConverter.cs", label="return d;", prediction=33, span="123-123"];
m5_35 [cluster="System.DateTime.AddSeconds(double)", color=green, community=0, file="UnixDateTimeConverter.cs", label="Entry System.DateTime.AddSeconds(double)", prediction=34, span="0-0"];
m6_70 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeInvalidStringToDateTimeOffset()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeInvalidStringToDateTimeOffset()", prediction=35, span="154-154"];
m6_71 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeInvalidStringToDateTimeOffset()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\n                () => JsonConvert.DeserializeObject<DateTimeOffset>(@''''''\\nPIE'''''', new UnixDateTimeConverter()),\n                ''Cannot convert invalid value to System.DateTimeOffset. Path '', line \\n1, position 5.''\n            )", prediction=36, span="156-159"];
m6_72 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeInvalidStringToDateTimeOffset()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeInvalidStringToDateTimeOffset()", prediction=37, span="154-154"];
m6_19 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="UnixDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="370-370"];
m6_73 [cluster="lambda expression", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Entry lambda expression", prediction=36, span="157-157"];
m6_34 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeDateTimeOffset()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeDateTimeOffset()", prediction=39, span="86-86"];
m6_35 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeDateTimeOffset()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="DateTimeOffset now = new DateTimeOffset(2018, 1, 1, 16, 1, 16, TimeSpan.FromHours(-5))", prediction=40, span="88-88"];
m6_36 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeDateTimeOffset()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="string result = JsonConvert.SerializeObject(now, new UnixDateTimeConverter())", prediction=41, span="90-90"];
m6_37 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeDateTimeOffset()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Assert.AreEqual(''1514840476'', result)", prediction=42, span="92-92"];
m6_5 [cluster="Newtonsoft.Json.Converters.UnixDateTimeConverter.UnixDateTimeConverter()", color=green, community=0, file="UnixDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Converters.UnixDateTimeConverter.UnixDateTimeConverter()", prediction=43, span="34-34"];
m6_6 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", file="UnixDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", span="548-548"];
m6_40 [cluster="System.TimeSpan.FromHours(double)", color=green, community=0, file="UnixDateTimeConverterTests.cs", label="Entry System.TimeSpan.FromHours(double)", prediction=44, span="0-0"];
m6_39 [cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", color=green, community=0, file="UnixDateTimeConverterTests.cs", label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", prediction=45, span="0-0"];
m6_38 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeDateTimeOffset()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeDateTimeOffset()", prediction=46, span="86-86"];
m6_0 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeDateTime()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeDateTime()", prediction=47, span="44-44"];
m6_1 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeDateTime()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="DateTime unixEpoch = UnixDateTimeConverter.UnixEpoch", prediction=48, span="46-46"];
m6_2 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeDateTime()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="string result = JsonConvert.SerializeObject(unixEpoch, new UnixDateTimeConverter())", prediction=49, span="48-48"];
m6_3 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeDateTime()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Assert.AreEqual(''0'', result)", prediction=50, span="50-50"];
m6_4 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeDateTime()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeDateTime()", prediction=51, span="44-44"];
m6_121 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterObject()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterObject()", prediction=52, span="242-242"];
m6_122 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterObject()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="UnixConverterObject obj1 = new UnixConverterObject\n            {\n                Object1 = new DateTime(1970, 1, 1, 0, 0, 3, DateTimeKind.Utc),\n                \\nObject2 = null,\n                ObjectNotHandled = new DateTime(2018, 1, 1, 21, 1, 16, DateTimeKind.Utc)\n            }", prediction=53, span="244-249"];
m6_123 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterObject()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="string json = JsonConvert.SerializeObject(obj1, Formatting.Indented)", prediction=54, span="251-251"];
m6_51 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", color=green, community=0, file="UnixDateTimeConverterTests.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", prediction=55, span="0-0"];
m6_131 [cluster="Newtonsoft.Json.Tests.Converters.UnixConverterObject.UnixConverterObject()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.UnixConverterObject.UnixConverterObject()", prediction=56, span="274-274"];
m6_127 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterObject()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Assert.AreEqual(new DateTime(1970, 1, 1, 0, 0, 3, DateTimeKind.Utc), obj2.Object1)", prediction=57, span="261-261"];
m6_128 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterObject()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Assert.IsNull(obj2.Object2)", prediction=57, span="262-262"];
m6_129 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterObject()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Assert.AreEqual(new DateTime(2018, 1, 1, 21, 1, 16, DateTimeKind.Utc), obj2.ObjectNotHandled)", prediction=57, span="263-263"];
m6_130 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterObject()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterObject()", prediction=60, span="242-242"];
m6_124 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterObject()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="StringAssert.AreEqual(@''{\n  ''''Object1'''': 3,\n  ''''Object2'''': null,\n  ''''ObjectNotHandled'''': 1514840476\n}'', json)", prediction=61, span="252-256"];
m6_125 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterObject()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="UnixConverterObject obj2 = JsonConvert.DeserializeObject<UnixConverterObject>(json)", prediction=57, span="258-258"];
m6_107 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="UnixDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="537-537"];
m6_108 [cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="UnixDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="341-341"];
m6_126 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterObject()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Assert.IsNotNull(obj2)", prediction=63, span="259-259"];
m6_109 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="UnixDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="703-703"];
m6_66 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeStringToDateTimeOffset()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeStringToDateTimeOffset()", prediction=64, span="146-146"];
m6_67 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeStringToDateTimeOffset()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="DateTimeOffset result = JsonConvert.DeserializeObject<DateTimeOffset>(@''''''1514840476'''''', new UnixDateTimeConverter())", prediction=65, span="148-148"];
m6_68 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeStringToDateTimeOffset()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Assert.AreEqual(new DateTimeOffset(2018, 1, 1, 21, 1, 16, TimeSpan.Zero), result)", prediction=66, span="150-150"];
m6_58 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", file="UnixDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", span="751-751"];
m6_69 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeStringToDateTimeOffset()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeStringToDateTimeOffset()", prediction=67, span="146-146"];
m6_41 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeNullableDateTimeClass()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeNullableDateTimeClass()", prediction=68, span="96-96"];
m6_42 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeNullableDateTimeClass()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="NullableDateTimeTestClass t = new NullableDateTimeTestClass\n            {\n                DateTimeField = null,\n                \\nDateTimeOffsetField = null\n            }", prediction=69, span="98-102"];
m6_43 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeNullableDateTimeClass()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="UnixDateTimeConverter converter = new UnixDateTimeConverter()", prediction=70, span="104-104"];
m6_44 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeNullableDateTimeClass()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="string result = JsonConvert.SerializeObject(t, converter)", prediction=71, span="106-106"];
m6_47 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeNullableDateTimeClass()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="result = JsonConvert.SerializeObject(t, converter)", prediction=72, span="116-116"];
m6_46 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeNullableDateTimeClass()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="t = new NullableDateTimeTestClass\n            {\n                DateTimeField = new DateTime(2018, 1, 1, 21, 1, 16, DateTimeKind.Utc),\n                \\nDateTimeOffsetField = new DateTimeOffset(1970, 2, 1, 20, 6, 18, TimeSpan.Zero)\n            }", prediction=73, span="110-114"];
m6_50 [cluster="Newtonsoft.Json.Tests.TestObjects.NullableDateTimeTestClass.NullableDateTimeTestClass()", color=green, community=0, file="UnixDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.NullableDateTimeTestClass.NullableDateTimeTestClass()", prediction=74, span="33-33"];
m6_45 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeNullableDateTimeClass()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Assert.AreEqual(@''{''''PreField'''':null,''''DateTimeField'''':null,''''DateTimeOffsetField'''':null,''''PostField'''':null}'', \\nresult)", prediction=75, span="108-108"];
m6_48 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeNullableDateTimeClass()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Assert.AreEqual(@''{''''PreField'''':null,''''DateTimeField'''':1514840476,''''DateTimeOffsetField'''':2750778,''''PostField'''':\\nnull}'', result)", prediction=76, span="117-117"];
m6_49 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeNullableDateTimeClass()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeNullableDateTimeClass()", prediction=77, span="96-96"];
m6_80 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeNullToNullable()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeNullToNullable()", prediction=78, span="172-172"];
m6_81 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeNullToNullable()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="DateTime? result = JsonConvert.DeserializeObject<DateTime?>(''null'', new UnixDateTimeConverter())", prediction=79, span="174-174"];
m6_82 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeNullToNullable()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Assert.IsNull(result)", prediction=80, span="176-176"];
m6_83 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeNullToNullable()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeNullToNullable()", prediction=81, span="172-172"];
m6_23 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.WriteJsonInvalidType()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.WriteJsonInvalidType()", prediction=82, span="74-74"];
m6_24 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.WriteJsonInvalidType()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="UnixDateTimeConverter converter = new UnixDateTimeConverter()", prediction=83, span="76-76"];
m6_25 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.WriteJsonInvalidType()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\n                () => converter.WriteJson(new JTokenWriter(), new object(), \\nnew JsonSerializer()),\n                ''Expected date object value.''\n            )", prediction=84, span="78-81"];
m6_28 [cluster="lambda expression", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="converter.WriteJson(new JTokenWriter(), new object(), new JsonSerializer())", prediction=83, span="79-79"];
m6_26 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.WriteJsonInvalidType()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.WriteJsonInvalidType()", prediction=86, span="74-74"];
m6_27 [cluster="lambda expression", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Entry lambda expression", prediction=84, span="79-79"];
m6_76 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeIntegerToDateTime()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeIntegerToDateTime()", prediction=88, span="164-164"];
m6_77 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeIntegerToDateTime()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="DateTime result = JsonConvert.DeserializeObject<DateTime>(''1514840476'', new UnixDateTimeConverter())", prediction=89, span="166-166"];
m6_78 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeIntegerToDateTime()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Assert.AreEqual(new DateTime(2018, 1, 1, 21, 1, 16, DateTimeKind.Utc), result)", prediction=90, span="168-168"];
m6_79 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeIntegerToDateTime()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeIntegerToDateTime()", prediction=91, span="164-164"];
m6_59 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeDateTimeOffset()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeDateTimeOffset()", prediction=92, span="133-133"];
m6_60 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeDateTimeOffset()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="UnixDateTimeConverter converter = new UnixDateTimeConverter()", prediction=93, span="135-135"];
m6_61 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeDateTimeOffset()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="DateTimeOffset d = new DateTimeOffset(1970, 2, 1, 20, 6, 18, TimeSpan.Zero)", prediction=94, span="136-136"];
m6_62 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeDateTimeOffset()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="string json = JsonConvert.SerializeObject(d, converter)", prediction=95, span="138-138"];
m6_63 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeDateTimeOffset()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="DateTimeOffset result = JsonConvert.DeserializeObject<DateTimeOffset>(json, converter)", prediction=96, span="140-140"];
m6_64 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeDateTimeOffset()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Assert.AreEqual(new DateTimeOffset(1970, 2, 1, 20, 6, 18, TimeSpan.Zero), result)", prediction=97, span="142-142"];
m6_65 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeDateTimeOffset()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeDateTimeOffset()", prediction=98, span="133-133"];
m6_52 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeNullToNonNullable()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeNullToNonNullable()", prediction=99, span="121-121"];
m6_53 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeNullToNonNullable()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="ExceptionAssert.Throws<Exception>(\n                () => JsonConvert.DeserializeObject<DateTimeTestClass>(\n                    @''{''''\\nPreField'''':''''Pre'''',''''DateTimeField'''':null,''''DateTimeOffsetField'''':null,''''PostField'''':''''Post''''}'',\n                    \\nnew UnixDateTimeConverter()\n                ),\n                ''Cannot convert null value to System.DateTime. Path 'DateTimeField', \\nline 1, position 38.''\n            )", prediction=100, span="123-129"];
m6_54 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeNullToNonNullable()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeNullToNonNullable()", prediction=101, span="121-121"];
m6_55 [cluster="lambda expression", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Entry lambda expression", prediction=100, span="124-127"];
m6_111 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterDictionary()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterDictionary()", prediction=103, span="220-220"];
m6_112 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterDictionary()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="UnixConverterDictionary<object> l1 = new UnixConverterDictionary<object>\n            {\n                {''First'', new DateTime(\\n1970, 1, 1, 0, 0, 3, DateTimeKind.Utc)},\n                {''Second'', new DateTime(2018, 1, 1, 21, 1, 16, DateTimeKind.Utc)},\n            }", prediction=104, span="222-226"];
m6_120 [cluster="Newtonsoft.Json.Tests.Converters.UnixConverterDictionary<T>.UnixConverterDictionary()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.UnixConverterDictionary<T>.UnixConverterDictionary()", prediction=105, span="271-271"];
m6_113 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterDictionary()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="string json = JsonConvert.SerializeObject(l1, Formatting.Indented)", prediction=106, span="228-228"];
m6_117 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterDictionary()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Assert.AreEqual(new DateTime(1970, 1, 1, 0, 0, 3, DateTimeKind.Utc), l2[''First''])", prediction=107, span="237-237"];
m6_118 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterDictionary()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Assert.AreEqual(new DateTime(2018, 1, 1, 21, 1, 16, DateTimeKind.Utc), l2[''Second''])", prediction=107, span="238-238"];
m6_119 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterDictionary()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterDictionary()", prediction=109, span="220-220"];
m6_114 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterDictionary()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="StringAssert.AreEqual(@''{\n  ''''First'''': 3,\n  ''''Second'''': 1514840476\n}'', json)", prediction=110, span="229-232"];
m6_115 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterDictionary()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="UnixConverterDictionary<object> l2 = JsonConvert.DeserializeObject<UnixConverterDictionary<object>>(json)", prediction=107, span="234-234"];
m6_116 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterDictionary()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Assert.IsNotNull(l2)", prediction=112, span="235-235"];
m6_91 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeInvalidValueType()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeInvalidValueType()", prediction=113, span="189-189"];
m6_92 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeInvalidValueType()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\n                () => JsonConvert.DeserializeObject<DateTime>(''false'', new \\nUnixDateTimeConverter()),\n                ''Unexpected token parsing date. Expected Integer or String, got Boolean. Path '', line \\n1, position 5.''\n            )", prediction=114, span="191-194"];
m6_93 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeInvalidValueType()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeInvalidValueType()", prediction=115, span="189-189"];
m6_94 [cluster="lambda expression", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Entry lambda expression", prediction=114, span="192-192"];
m6_97 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterList()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterList()", prediction=117, span="198-198"];
m6_98 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterList()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="UnixConverterList<object> l1 = new UnixConverterList<object>\n            {\n                new DateTime(2018, 1, 1, 21, 1, 16, \\nDateTimeKind.Utc),\n                new DateTime(1970, 1, 1, 0, 0, 3, DateTimeKind.Utc),\n            }", prediction=118, span="200-204"];
m6_106 [cluster="Newtonsoft.Json.Tests.Converters.UnixConverterList<T>.UnixConverterList()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.UnixConverterList<T>.UnixConverterList()", prediction=119, span="268-268"];
m6_99 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterList()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="string json = JsonConvert.SerializeObject(l1, Formatting.Indented)", prediction=120, span="206-206"];
m6_103 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterList()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Assert.AreEqual(new DateTime(2018, 1, 1, 21, 1, 16, DateTimeKind.Utc), l2[0])", prediction=121, span="215-215"];
m6_104 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterList()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Assert.AreEqual(new DateTime(1970, 1, 1, 0, 0, 3, DateTimeKind.Utc), l2[1])", prediction=121, span="216-216"];
m6_105 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterList()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterList()", prediction=123, span="198-198"];
m6_100 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterList()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="StringAssert.AreEqual(@''[\n  1514840476,\n  3\n]'', json)", prediction=124, span="207-210"];
m6_101 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterList()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="UnixConverterList<object> l2 = JsonConvert.DeserializeObject<UnixConverterList<object>>(json)", prediction=121, span="212-212"];
m6_102 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterList()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Assert.IsNotNull(l2)", prediction=126, span="213-213"];
m6_16 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeInvalidDate()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeInvalidDate()", prediction=127, span="65-65"];
m6_17 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeInvalidDate()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\n                () => JsonConvert.SerializeObject(new DateTime(1964, 2, 7), \\nnew UnixDateTimeConverter()),\n                ''Cannot convert date value that is before Unix epoch of 00:00:00 UTC on 1 January \\n1970.''\n            )", prediction=128, span="67-70"];
m6_18 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeInvalidDate()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeInvalidDate()", prediction=129, span="65-65"];
m6_20 [cluster="lambda expression", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Entry lambda expression", prediction=128, span="68-68"];
m6_8 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeDateTimeNow()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeDateTimeNow()", prediction=131, span="54-54"];
m6_9 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeDateTimeNow()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="DateTime now = DateTime.Now", prediction=132, span="56-56"];
m6_11 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeDateTimeNow()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="string result = JsonConvert.SerializeObject(now, new UnixDateTimeConverter())", prediction=133, span="59-59"];
m6_12 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeDateTimeNow()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Assert.AreEqual(nowTicks + '''', result)", prediction=134, span="61-61"];
m6_10 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeDateTimeNow()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="long nowTicks = (long)(now.ToUniversalTime() - new DateTime(1970, 1, 1)).TotalSeconds", prediction=134, span="57-57"];
m6_14 [cluster="System.DateTime.ToUniversalTime()", color=green, community=0, file="UnixDateTimeConverterTests.cs", label="Entry System.DateTime.ToUniversalTime()", prediction=136, span="0-0"];
m6_15 [cluster="System.DateTime.DateTime(int, int, int)", color=green, community=0, file="UnixDateTimeConverterTests.cs", label="Entry System.DateTime.DateTime(int, int, int)", prediction=137, span="0-0"];
m6_13 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeDateTimeNow()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeDateTimeNow()", prediction=138, span="54-54"];
m6_85 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeInvalidValue()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeInvalidValue()", prediction=139, span="180-180"];
m6_86 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeInvalidValue()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\n                () => JsonConvert.DeserializeObject<DateTime>(''-1'', new UnixDateTimeConverter()),\n                ''\\nCannot convert value that is before Unix epoch of 00:00:00 UTC on 1 January 1970 to System.DateTime. Path '', line 1, position 2.''\n            )", prediction=140, span="182-185"];
m6_87 [cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeInvalidValue()", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeInvalidValue()", prediction=141, span="180-180"];
m6_88 [cluster="lambda expression", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Entry lambda expression", prediction=140, span="183-183"];
m6_95 [cluster="lambda expression", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="JsonConvert.DeserializeObject<DateTime>(''false'', new UnixDateTimeConverter())", prediction=143, span="192-192"];
m6_21 [cluster="lambda expression", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="JsonConvert.SerializeObject(new DateTime(1964, 2, 7), new UnixDateTimeConverter())", prediction=144, span="68-68"];
m6_22 [cluster="lambda expression", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Exit lambda expression", prediction=145, span="68-68"];
m6_56 [cluster="lambda expression", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="JsonConvert.DeserializeObject<DateTimeTestClass>(\n                    @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':null,''''\\nDateTimeOffsetField'''':null,''''PostField'''':''''Post''''}'',\n                    new UnixDateTimeConverter()\n                )", prediction=146, span="124-127"];
m6_57 [cluster="lambda expression", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Exit lambda expression", prediction=147, span="124-127"];
m6_74 [cluster="lambda expression", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="JsonConvert.DeserializeObject<DateTimeOffset>(@''''''PIE'''''', new UnixDateTimeConverter())", prediction=148, span="157-157"];
m6_75 [cluster="lambda expression", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Exit lambda expression", prediction=149, span="157-157"];
m6_89 [cluster="lambda expression", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="JsonConvert.DeserializeObject<DateTime>(''-1'', new UnixDateTimeConverter())", prediction=150, span="183-183"];
m6_90 [cluster="lambda expression", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Exit lambda expression", prediction=151, span="183-183"];
m6_96 [cluster="lambda expression", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Exit lambda expression", prediction=152, span="192-192"];
m6_33 [cluster="Newtonsoft.Json.Converters.UnixDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", color=green, community=0, file="UnixDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Converters.UnixDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", prediction=153, span="44-44"];
m6_32 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="UnixDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="557-557"];
m6_31 [cluster="object.Object()", color=green, community=0, file="UnixDateTimeConverterTests.cs", label="Entry object.Object()", prediction=154, span="0-0"];
m6_30 [cluster="Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", color=green, community=0, file="UnixDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", prediction=155, span="82-82"];
m6_29 [cluster="lambda expression", color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Exit lambda expression", prediction=156, span="79-79"];
n4;
n11;
n50;
n121;
n122;
n155;
n156;
n129;
n130;
n131;
n148;
n149;
n150;
n152;
n153;
n154;
n39;
n560;
n561;
n311;
n345;
n593;
n595;
n574;
n709;
n710;
n711;
n712;
n713;
n714;
n715;
n716;
n717;
n718;
n719;
n720;
m0_10;
m0_11;
m0_46;
m1_32;
m1_51;
m2_62;
m2_64;
m3_13;
m3_16;
m3_1052;
m3_1054;
m3_1053;
m3_1055;
m3_1056;
m3_1057;
m3_1140;
m3_1141;
m3_1142;
m3_1143;
m3_1144;
m3_1145;
m3_1146;
m3_1147;
m3_1148;
m3_1149;
m3_1150;
m3_1151;
m3_1152;
m3_1153;
m3_1154;
m3_1155;
m3_1156;
m3_1157;
m3_1158;
m3_1159;
m3_1160;
m3_1161;
m3_1162;
m3_1163;
m3_1164;
m4_55;
m4_56;
m4_67;
m4_136;
m4_137;
m5_10;
m6_7;
m6_84;
m6_110;
m6_132;
n664 -> n692  [color=darkseagreen4, key=1, label=string, style=dashed];
n664 -> n693  [color=darkseagreen4, key=1, label=string, style=dashed];
n675 -> n683  [color=darkseagreen4, key=1, label=bool, style=dashed];
n676 -> n679  [color=darkseagreen4, key=1, label=specifiedMember, style=dashed];
n676 -> n683  [color=darkseagreen4, key=1, label=specifiedMember, style=dashed];
n678 -> n683  [color=darkseagreen4, key=1, label=specifiedMember, style=dashed];
n682 -> n689  [color=darkseagreen4, key=1, label=object, style=dashed];
n681 -> n689  [color=darkseagreen4, key=1, label=specifiedPropertyGet, style=dashed];
n695 -> n697  [color=darkseagreen4, key=1, label=string, style=dashed];
n695 -> n698  [color=darkseagreen4, key=1, label=string, style=dashed];
n701 -> n703  [color=darkseagreen4, key=1, label=string, style=dashed];
n701 -> n704  [color=darkseagreen4, key=1, label=string, style=dashed];
n5 -> n7  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n5 -> n8  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n197 -> n203  [color=darkseagreen4, key=1, label=object, style=dashed];
n197 -> n204  [color=darkseagreen4, key=1, label=object, style=dashed];
n198 -> n204  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
n202 -> n204  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
n211 -> n214  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
n248 -> n251  [color=darkseagreen4, key=1, label=en, style=dashed];
n250 -> n258  [color=darkseagreen4, key=1, label=constructor, style=dashed];
n252 -> n254  [color=darkseagreen4, key=1, label=parameters, style=dashed];
n262 -> n284  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n54 -> n56  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n57 -> n62  [color=darkseagreen4, key=1, label=contract, style=dashed];
n57 -> n74  [color=darkseagreen4, key=1, label=contract, style=dashed];
n57 -> n78  [color=darkseagreen4, key=1, label=contract, style=dashed];
n57 -> n79  [color=darkseagreen4, key=1, label=contract, style=dashed];
n57 -> n80  [color=darkseagreen4, key=1, label=contract, style=dashed];
n57 -> n84  [color=darkseagreen4, key=1, label=contract, style=dashed];
n57 -> n85  [color=darkseagreen4, key=1, label=contract, style=dashed];
n57 -> n89  [color=darkseagreen4, key=1, label=contract, style=dashed];
n57 -> n92  [color=darkseagreen4, key=1, label=contract, style=dashed];
n57 -> n93  [color=darkseagreen4, key=1, label=contract, style=dashed];
n64 -> n68  [color=darkseagreen4, key=1, label=attribute, style=dashed];
n75 -> n78  [color=darkseagreen4, key=1, label=overrideConstructor, style=dashed];
n81 -> n84  [color=darkseagreen4, key=1, label=constructor, style=dashed];
n86 -> n89  [color=darkseagreen4, key=1, label=constructor, style=dashed];
n90 -> n92  [color=darkseagreen4, key=1, label=extensionDataMember, style=dashed];
n99 -> n324  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
n99 -> n327  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
n63 -> n71  [color=darkseagreen4, key=1, label=extensionDataNameResolver, style=dashed];
n69 -> n113  [color=darkseagreen4, key=1, label=namingStrategy, style=dashed];
n70 -> n113  [color=darkseagreen4, key=1, label=string, style=dashed];
n104 -> n236  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n104 -> n237  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n111 -> n201  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
n116 -> n123  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n117 -> n132  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n123 -> n125  [color=darkseagreen4, key=1, label="?", style=dashed];
n123 -> n126  [color=darkseagreen4, key=1, label="?", style=dashed];
n132 -> n136  [color=darkseagreen4, key=1, label="?", style=dashed];
n132 -> n138  [color=darkseagreen4, key=1, label="?", style=dashed];
n132 -> n139  [color=darkseagreen4, key=1, label="?", style=dashed];
n132 -> n146  [color=darkseagreen4, key=1, label="?", style=dashed];
n158 -> n170  [color=darkseagreen4, key=1, label=extensionDataAttribute, style=dashed];
n158 -> n177  [color=darkseagreen4, key=1, label=extensionDataAttribute, style=dashed];
n161 -> n166  [color=darkseagreen4, key=1, label=t, style=dashed];
n171 -> n200  [color=darkseagreen4, key=1, label=setExtensionDataDictionary, style=dashed];
n171 -> n203  [color=darkseagreen4, key=1, label=setExtensionDataDictionary, style=dashed];
n175 -> n203  [color=darkseagreen4, key=1, label=object, style=dashed];
n175 -> n204  [color=darkseagreen4, key=1, label=object, style=dashed];
n174 -> n204  [color=darkseagreen4, key=1, label=setExtensionDataDictionaryValue, style=dashed];
n180 -> n214  [color=darkseagreen4, key=1, label=createEnumerableWrapper, style=dashed];
n413 -> n416  [color=darkseagreen4, key=1, label=ret, style=dashed];
n413 -> n418  [color=darkseagreen4, key=1, label=ret, style=dashed];
n413 -> n419  [color=darkseagreen4, key=1, label=ret, style=dashed];
n414 -> n416  [color=darkseagreen4, key=1, label=current, style=dashed];
n124 -> n126  [color=darkseagreen4, key=1, label=m, style=dashed];
n124 -> n127  [color=darkseagreen4, key=1, label=m, style=dashed];
n142 -> n144  [color=darkseagreen4, key=1, label=keyType, style=dashed];
n16 -> n19  [color=darkseagreen4, key=1, label=memberSerialization, style=dashed];
n16 -> n29  [color=darkseagreen4, key=1, label=memberSerialization, style=dashed];
n17 -> n47  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n17 -> n21  [color=darkseagreen4, key=1, label=allMembers, style=dashed];
n17 -> n31  [color=darkseagreen4, key=1, label=allMembers, style=dashed];
n20 -> n51  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n20 -> n23  [color=darkseagreen4, key=1, label=defaultMembers, style=dashed];
n18 -> n24  [color=darkseagreen4, key=1, label=serializableMembers, style=dashed];
n18 -> n26  [color=darkseagreen4, key=1, label=serializableMembers, style=dashed];
n18 -> n28  [color=darkseagreen4, key=1, label=serializableMembers, style=dashed];
n18 -> n30  [color=darkseagreen4, key=1, label=serializableMembers, style=dashed];
n18 -> n34  [color=darkseagreen4, key=1, label=serializableMembers, style=dashed];
n18 -> n35  [color=darkseagreen4, key=1, label=serializableMembers, style=dashed];
n21 -> n23  [color=darkseagreen4, key=1, label=member, style=dashed];
n21 -> n24  [color=darkseagreen4, key=1, label=member, style=dashed];
n21 -> n25  [color=darkseagreen4, key=1, label=member, style=dashed];
n21 -> n26  [color=darkseagreen4, key=1, label=member, style=dashed];
n21 -> n27  [color=darkseagreen4, key=1, label=member, style=dashed];
n21 -> n28  [color=darkseagreen4, key=1, label=member, style=dashed];
n21 -> n29  [color=darkseagreen4, key=1, label=member, style=dashed];
n21 -> n30  [color=darkseagreen4, key=1, label=member, style=dashed];
n31 -> n34  [color=darkseagreen4, key=1, label=member, style=dashed];
n332 -> n335  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
n332 -> n337  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
n332 -> n339  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
n332 -> n341  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
n332 -> n343  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
n543 -> n548  [color=darkseagreen4, key=1, label=members, style=dashed];
n547 -> n553  [color=darkseagreen4, key=1, label=properties, style=dashed];
n549 -> n553  [color=darkseagreen4, key=1, label=property, style=dashed];
n546 -> n551  [color=darkseagreen4, key=1, label=nameTable, style=dashed];
n554 -> n562  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n558 -> n581  [color=darkseagreen4, key=1, label="Newtonsoft.Json.MemberSerialization", style=dashed];
n558 -> n582  [color=darkseagreen4, key=1, label="Newtonsoft.Json.MemberSerialization", style=dashed];
n558 -> n590  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
n230 -> n233  [color=darkseagreen4, key=1, label=en, style=dashed];
n230 -> n244  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n232 -> n235  [color=darkseagreen4, key=1, label=conInfo, style=dashed];
n268 -> n270  [color=darkseagreen4, key=1, label=constructorParameters, style=dashed];
n269 -> n275  [color=darkseagreen4, key=1, label=parameterCollection, style=dashed];
n269 -> n276  [color=darkseagreen4, key=1, label=parameterCollection, style=dashed];
n270 -> n272  [color=darkseagreen4, key=1, label=parameterInfo, style=dashed];
n273 -> n275  [color=darkseagreen4, key=1, label=property, style=dashed];
n279 -> n292  [color=darkseagreen4, key=1, label="System.Reflection.ParameterInfo", style=dashed];
n279 -> n295  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
n279 -> n298  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
n263 -> n265  [color=darkseagreen4, key=1, label=constructors, style=dashed];
n224 -> n224  [color=darkseagreen4, key=1, label=item, style=dashed];
n283 -> n286  [color=darkseagreen4, key=1, label=property, style=dashed];
n289 -> n292  [color=darkseagreen4, key=1, label=property, style=dashed];
n289 -> n298  [color=darkseagreen4, key=1, label=property, style=dashed];
n289 -> n307  [color=darkseagreen4, key=1, label=property, style=dashed];
n346 -> n352  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n347 -> n384  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
n352 -> n360  [color=darkseagreen4, key=1, label=baseType, style=dashed];
n348 -> n384  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
n365 -> n384  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
n349 -> n384  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
n369 -> n384  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
n350 -> n384  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
n373 -> n384  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
n351 -> n384  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>", style=dashed];
n377 -> n384  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
n381 -> n384  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>", style=dashed];
n353 -> n364  [color=darkseagreen4, key=1, label=currentOnSerializing, style=dashed];
n358 -> n364  [color=darkseagreen4, key=1, label=skipSerializing, style=dashed];
n359 -> n376  [color=darkseagreen4, key=1, label=skipDeserialized, style=dashed];
n360 -> n364  [color=darkseagreen4, key=1, label=method, style=dashed];
n360 -> n366  [color=darkseagreen4, key=1, label=method, style=dashed];
n360 -> n368  [color=darkseagreen4, key=1, label=method, style=dashed];
n360 -> n370  [color=darkseagreen4, key=1, label=method, style=dashed];
n360 -> n372  [color=darkseagreen4, key=1, label=method, style=dashed];
n360 -> n374  [color=darkseagreen4, key=1, label=method, style=dashed];
n360 -> n376  [color=darkseagreen4, key=1, label=method, style=dashed];
n360 -> n378  [color=darkseagreen4, key=1, label=method, style=dashed];
n360 -> n380  [color=darkseagreen4, key=1, label=method, style=dashed];
n360 -> n382  [color=darkseagreen4, key=1, label=method, style=dashed];
n354 -> n368  [color=darkseagreen4, key=1, label=currentOnSerialized, style=dashed];
n364 -> n364  [color=darkseagreen4, key=1, label=prevAttributeType, style=dashed];
n355 -> n372  [color=darkseagreen4, key=1, label=currentOnDeserializing, style=dashed];
n368 -> n368  [color=darkseagreen4, key=1, label=prevAttributeType, style=dashed];
n356 -> n376  [color=darkseagreen4, key=1, label=currentOnDeserialized, style=dashed];
n372 -> n372  [color=darkseagreen4, key=1, label=prevAttributeType, style=dashed];
n357 -> n380  [color=darkseagreen4, key=1, label=currentOnError, style=dashed];
n376 -> n376  [color=darkseagreen4, key=1, label=prevAttributeType, style=dashed];
n380 -> n380  [color=darkseagreen4, key=1, label=prevAttributeType, style=dashed];
n363 -> n368  [color=darkseagreen4, key=1, label=parameters, style=dashed];
n363 -> n372  [color=darkseagreen4, key=1, label=parameters, style=dashed];
n363 -> n376  [color=darkseagreen4, key=1, label=parameters, style=dashed];
n363 -> n380  [color=darkseagreen4, key=1, label=parameters, style=dashed];
n362 -> n364  [color=darkseagreen4, key=1, label=prevAttributeType, style=dashed];
n388 -> n518  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
n388 -> n519  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
n388 -> n520  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
n388 -> n521  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
n388 -> n522  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
n388 -> n523  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n388 -> n524  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
n388 -> n525  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
n388 -> n526  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n388 -> n527  [color=darkseagreen4, key=1, label="System.Reflection.ParameterInfo[]", style=dashed];
n388 -> n528  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
n388 -> n529  [color=darkseagreen4, key=1, label="System.Reflection.ParameterInfo[]", style=dashed];
n388 -> n530  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
n531 -> n533  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
n534 -> n538  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n534 -> n539  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n424 -> n439  [color=darkseagreen4, key=1, label=contract, style=dashed];
n424 -> n441  [color=darkseagreen4, key=1, label=contract, style=dashed];
n429 -> n446  [color=darkseagreen4, key=1, label=string, style=dashed];
n434 -> n437  [color=darkseagreen4, key=1, label=expectedParameterType, style=dashed];
n434 -> n439  [color=darkseagreen4, key=1, label=expectedParameterType, style=dashed];
n428 -> n446  [color=darkseagreen4, key=1, label=namingStrategy, style=dashed];
n433 -> n435  [color=darkseagreen4, key=1, label=parameters, style=dashed];
n433 -> n437  [color=darkseagreen4, key=1, label=parameters, style=dashed];
n449 -> n459  [color=darkseagreen4, key=1, label=contract, style=dashed];
n449 -> n461  [color=darkseagreen4, key=1, label=contract, style=dashed];
n454 -> n457  [color=darkseagreen4, key=1, label=expectedParameterType, style=dashed];
n454 -> n459  [color=darkseagreen4, key=1, label=expectedParameterType, style=dashed];
n453 -> n455  [color=darkseagreen4, key=1, label=parameters, style=dashed];
n453 -> n457  [color=darkseagreen4, key=1, label=parameters, style=dashed];
n465 -> n467  [color=darkseagreen4, key=1, label=contract, style=dashed];
n471 -> n473  [color=darkseagreen4, key=1, label=contract, style=dashed];
n477 -> n479  [color=darkseagreen4, key=1, label=contract, style=dashed];
n482 -> n484  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n482 -> n488  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n482 -> n490  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n482 -> n492  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n482 -> n494  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n482 -> n496  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n482 -> n500  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n482 -> n501  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n485 -> n493  [color=darkseagreen4, key=1, label=t, style=dashed];
n485 -> n495  [color=darkseagreen4, key=1, label=t, style=dashed];
n485 -> n497  [color=darkseagreen4, key=1, label=t, style=dashed];
n485 -> n498  [color=darkseagreen4, key=1, label=t, style=dashed];
n485 -> n499  [color=darkseagreen4, key=1, label=t, style=dashed];
n486 -> n489  [color=darkseagreen4, key=1, label=containerAttribute, style=dashed];
n486 -> n491  [color=darkseagreen4, key=1, label=containerAttribute, style=dashed];
n576 -> n581  [color=darkseagreen4, key=1, label=property, style=dashed];
n576 -> n590  [color=darkseagreen4, key=1, label=property, style=dashed];
n576 -> n591  [color=darkseagreen4, key=1, label=property, style=dashed];
n666 -> n669  [color=darkseagreen4, key=1, label=shouldSerializeMethod, style=dashed];
n669 -> n673  [color=darkseagreen4, key=1, label=shouldSerializeCall, style=dashed];
n670 -> n673  [color=darkseagreen4, key=1, label=object, style=dashed];
n596 -> n645  [color=darkseagreen4, key=1, label=object, style=dashed];
n596 -> n646  [color=darkseagreen4, key=1, label="Newtonsoft.Json.MemberSerialization", style=dashed];
n596 -> n659  [color=darkseagreen4, key=1, label="Newtonsoft.Json.MemberSerialization", style=dashed];
n597 -> n601  [color=darkseagreen4, key=1, label=propertyAttribute, style=dashed];
n597 -> n608  [color=darkseagreen4, key=1, label=propertyAttribute, style=dashed];
n597 -> n618  [color=darkseagreen4, key=1, label=propertyAttribute, style=dashed];
n598 -> n641  [color=darkseagreen4, key=1, label=requiredAttribute, style=dashed];
n606 -> n610  [color=darkseagreen4, key=1, label=containerAttribute, style=dashed];
n617 -> n657  [color=darkseagreen4, key=1, label=hasMemberAttribute, style=dashed];
n622 -> n657  [color=darkseagreen4, key=1, label=hasMemberAttribute, style=dashed];
n643 -> n657  [color=darkseagreen4, key=1, label=hasMemberAttribute, style=dashed];
n654 -> n661  [color=darkseagreen4, key=1, label="out bool", style=dashed];
n656 -> n661  [color=darkseagreen4, key=1, label="out bool", style=dashed];
n658 -> n661  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m0_2 -> m0_4  [color=darkseagreen4, key=1, label=result, style=dashed];
m0_2 -> m0_5  [color=darkseagreen4, key=1, label=result, style=dashed];
m0_12 -> m0_14  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m0_13 -> m0_16  [color=green, key=1, label=result, style=dashed];
m0_24 -> m0_27  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m0_25 -> m0_27  [color=darkseagreen4, key=1, label=token, style=dashed];
m0_25 -> m0_29  [color=darkseagreen4, key=1, label=token, style=dashed];
m0_30 -> m0_32  [color=darkseagreen4, key=1, label=list, style=dashed];
m0_30 -> m0_33  [color=darkseagreen4, key=1, label=list, style=dashed];
m0_30 -> m0_35  [color=darkseagreen4, key=1, label=list, style=dashed];
m0_31 -> m0_34  [color=darkseagreen4, key=1, label=existing, style=dashed];
m1_33 -> m1_38  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_3 -> m1_7  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_3 -> m1_20  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_8 -> m1_15  [color=darkseagreen4, key=1, label=keyType, style=dashed];
m1_12 -> m1_15  [color=darkseagreen4, key=1, label=valueType, style=dashed];
m1_9 -> m1_15  [color=darkseagreen4, key=1, label=valueType, style=dashed];
m2_43 -> m2_47  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_42 -> m2_51  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_42 -> m2_57  [color=darkseagreen4, key=1, label="System.StringComparison", style=dashed];
m2_54 -> m2_59  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_56 -> m2_58  [color=darkseagreen4, key=1, label=property, style=dashed];
m2_59 -> m2_59  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_37 -> m2_40  [color=darkseagreen4, key=1, label=property, style=dashed];
m2_9 -> m2_11  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m2_9 -> m2_18  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m2_9 -> m2_19  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m2_9 -> m2_22  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m2_9 -> m2_25  [color=green, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m2_9 -> m2_26  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m2_13 -> m2_15  [color=darkseagreen4, key=1, label=existingProperty, style=dashed];
m2_13 -> m2_16  [color=darkseagreen4, key=1, label=existingProperty, style=dashed];
m2_13 -> m2_18  [color=darkseagreen4, key=1, label=existingProperty, style=dashed];
m2_13 -> m2_19  [color=darkseagreen4, key=1, label=existingProperty, style=dashed];
m2_13 -> m2_20  [color=darkseagreen4, key=1, label=existingProperty, style=dashed];
m2_13 -> m2_22  [color=darkseagreen4, key=1, label=existingProperty, style=dashed];
m2_14 -> m2_24  [color=green, key=1, label=duplicateProperty, style=dashed];
m2_21 -> m2_24  [color=green, key=1, label=duplicateProperty, style=dashed];
m3_48 -> m3_50  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m3_258 -> m3_260  [color=darkseagreen4, key=1, label=onebasedArray, style=dashed];
m3_258 -> m3_262  [color=darkseagreen4, key=1, label=onebasedArray, style=dashed];
m3_258 -> m3_263  [color=darkseagreen4, key=1, label=onebasedArray, style=dashed];
m3_259 -> m3_263  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_259 -> m3_265  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_261 -> m3_263  [color=darkseagreen4, key=1, label=j, style=dashed];
m3_261 -> m3_264  [color=darkseagreen4, key=1, label=j, style=dashed];
m3_265 -> m3_265  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_264 -> m3_264  [color=darkseagreen4, key=1, label=j, style=dashed];
m3_677 -> m3_681  [color=darkseagreen4, key=1, label=json, style=dashed];
m3_678 -> m3_680  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_433 -> m3_437  [color=darkseagreen4, key=1, label=s, style=dashed];
m3_433 -> m3_440  [color=darkseagreen4, key=1, label=s, style=dashed];
m3_436 -> m3_438  [color=darkseagreen4, key=1, label=d1, style=dashed];
m3_439 -> m3_441  [color=darkseagreen4, key=1, label=d2, style=dashed];
m3_95 -> m3_97  [color=darkseagreen4, key=1, label=c1, style=dashed];
m3_95 -> m3_98  [color=darkseagreen4, key=1, label=c1, style=dashed];
m3_101 -> m3_103  [color=darkseagreen4, key=1, label=values, style=dashed];
m3_101 -> m3_104  [color=darkseagreen4, key=1, label=values, style=dashed];
m3_101 -> m3_105  [color=darkseagreen4, key=1, label=values, style=dashed];
m3_933 -> m3_935  [color=darkseagreen4, key=1, label=values, style=dashed];
m3_933 -> m3_936  [color=darkseagreen4, key=1, label=values, style=dashed];
m3_389 -> m3_391  [color=darkseagreen4, key=1, label=dic, style=dashed];
m3_389 -> m3_392  [color=darkseagreen4, key=1, label=dic, style=dashed];
m3_817 -> m3_821  [color=green, key=1, label=collection, style=dashed];
m3_817 -> m3_824  [color=green, key=1, label=collection, style=dashed];
m3_818 -> m3_821  [color=green, key=1, label=jsonSerializer, style=dashed];
m3_820 -> m3_822  [color=green, key=1, label=sw, style=dashed];
m3_857 -> m3_860  [color=darkseagreen4, key=1, label=a1, style=dashed];
m3_858 -> m3_861  [color=darkseagreen4, key=1, label=a2, style=dashed];
m3_859 -> m3_861  [color=darkseagreen4, key=1, label=articles1, style=dashed];
m3_859 -> m3_864  [color=darkseagreen4, key=1, label=articles1, style=dashed];
m3_859 -> m3_865  [color=darkseagreen4, key=1, label=articles1, style=dashed];
m3_863 -> m3_865  [color=darkseagreen4, key=1, label=articles2, style=dashed];
m3_921 -> m3_923  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m3_921 -> m3_924  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m3_664 -> m3_674  [color=darkseagreen4, key=1, label=json, style=dashed];
m3_665 -> m3_667  [color=darkseagreen4, key=1, label=aa, style=dashed];
m3_665 -> m3_668  [color=darkseagreen4, key=1, label=aa, style=dashed];
m3_665 -> m3_669  [color=darkseagreen4, key=1, label=aa, style=dashed];
m3_665 -> m3_670  [color=darkseagreen4, key=1, label=aa, style=dashed];
m3_665 -> m3_671  [color=darkseagreen4, key=1, label=aa, style=dashed];
m3_665 -> m3_672  [color=darkseagreen4, key=1, label=aa, style=dashed];
m3_381 -> m3_383  [color=darkseagreen4, key=1, label=dic, style=dashed];
m3_381 -> m3_384  [color=darkseagreen4, key=1, label=dic, style=dashed];
m3_381 -> m3_385  [color=darkseagreen4, key=1, label=dic, style=dashed];
m3_374 -> m3_376  [color=darkseagreen4, key=1, label=list, style=dashed];
m3_374 -> m3_377  [color=darkseagreen4, key=1, label=list, style=dashed];
m3_374 -> m3_378  [color=darkseagreen4, key=1, label=list, style=dashed];
m3_627 -> m3_629  [color=darkseagreen4, key=1, label=aa, style=dashed];
m3_627 -> m3_630  [color=darkseagreen4, key=1, label=aa, style=dashed];
m3_627 -> m3_631  [color=darkseagreen4, key=1, label=aa, style=dashed];
m3_627 -> m3_632  [color=darkseagreen4, key=1, label=aa, style=dashed];
m3_627 -> m3_633  [color=darkseagreen4, key=1, label=aa, style=dashed];
m3_627 -> m3_634  [color=darkseagreen4, key=1, label=aa, style=dashed];
m3_795 -> m3_797  [color=darkseagreen4, key=1, label=o, style=dashed];
m3_795 -> m3_798  [color=darkseagreen4, key=1, label=o, style=dashed];
m3_204 -> m3_206  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_562 -> m3_566  [color=darkseagreen4, key=1, label=json, style=dashed];
m3_563 -> m3_565  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_985 -> m3_991  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_1023 -> m3_1027  [color=darkseagreen4, key=1, label=xNodeUser, style=dashed];
m3_1024 -> m3_1029  [color=darkseagreen4, key=1, label=eduPers, style=dashed];
m3_1024 -> m3_1030  [color=darkseagreen4, key=1, label=eduPers, style=dashed];
m3_1028 -> m3_1034  [color=darkseagreen4, key=1, label=casUser, style=dashed];
m3_1025 -> m3_1034  [color=darkseagreen4, key=1, label=casUser, style=dashed];
m3_1030 -> m3_1032  [color=darkseagreen4, key=1, label=xPersonValue, style=dashed];
m3_1026 -> m3_1031  [color=darkseagreen4, key=1, label=eduPerson, style=dashed];
m3_1026 -> m3_1032  [color=darkseagreen4, key=1, label=eduPerson, style=dashed];
m3_1026 -> m3_1036  [color=darkseagreen4, key=1, label=eduPerson, style=dashed];
m3_1026 -> m3_1038  [color=darkseagreen4, key=1, label=eduPerson, style=dashed];
m3_1026 -> m3_1040  [color=darkseagreen4, key=1, label=eduPerson, style=dashed];
m3_1026 -> m3_1042  [color=darkseagreen4, key=1, label=eduPerson, style=dashed];
m3_1026 -> m3_1044  [color=darkseagreen4, key=1, label=eduPerson, style=dashed];
m3_1026 -> m3_1046  [color=darkseagreen4, key=1, label=eduPerson, style=dashed];
m3_717 -> m3_721  [color=darkseagreen4, key=1, label=json, style=dashed];
m3_718 -> m3_720  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_496 -> m3_499  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_801 -> m3_804  [color=darkseagreen4, key=1, label=name, style=dashed];
m3_801 -> m3_805  [color=darkseagreen4, key=1, label=name, style=dashed];
m3_802 -> m3_804  [color=darkseagreen4, key=1, label=p1, style=dashed];
m3_803 -> m3_805  [color=darkseagreen4, key=1, label=p2, style=dashed];
m3_808 -> m3_810  [color=darkseagreen4, key=1, label=newName, style=dashed];
m3_808 -> m3_811  [color=darkseagreen4, key=1, label=newName, style=dashed];
m3_808 -> m3_812  [color=darkseagreen4, key=1, label=newName, style=dashed];
m3_243 -> m3_245  [color=darkseagreen4, key=1, label=onebasedArray, style=dashed];
m3_243 -> m3_246  [color=darkseagreen4, key=1, label=onebasedArray, style=dashed];
m3_244 -> m3_246  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_244 -> m3_247  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_247 -> m3_247  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_220 -> m3_222  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_782 -> m3_784  [color=darkseagreen4, key=1, label=o, style=dashed];
m3_782 -> m3_785  [color=darkseagreen4, key=1, label=o, style=dashed];
m3_782 -> m3_786  [color=darkseagreen4, key=1, label=o, style=dashed];
m3_782 -> m3_787  [color=darkseagreen4, key=1, label=o, style=dashed];
m3_782 -> m3_788  [color=darkseagreen4, key=1, label=o, style=dashed];
m3_782 -> m3_789  [color=darkseagreen4, key=1, label=o, style=dashed];
m3_782 -> m3_790  [color=darkseagreen4, key=1, label=o, style=dashed];
m3_782 -> m3_791  [color=darkseagreen4, key=1, label=o, style=dashed];
m3_339 -> m3_341  [color=darkseagreen4, key=1, label=list, style=dashed];
m3_339 -> m3_342  [color=darkseagreen4, key=1, label=list, style=dashed];
m3_339 -> m3_343  [color=darkseagreen4, key=1, label=list, style=dashed];
m3_346 -> m3_349  [color=darkseagreen4, key=1, label=d, style=dashed];
m3_147 -> m3_149  [color=darkseagreen4, key=1, label=l, style=dashed];
m3_147 -> m3_150  [color=darkseagreen4, key=1, label=l, style=dashed];
m3_147 -> m3_151  [color=darkseagreen4, key=1, label=l, style=dashed];
m3_908 -> m3_913  [color=darkseagreen4, key=1, label=json, style=dashed];
m3_909 -> m3_912  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_114 -> m3_116  [color=darkseagreen4, key=1, label=c1, style=dashed];
m3_114 -> m3_117  [color=darkseagreen4, key=1, label=c1, style=dashed];
m3_120 -> m3_122  [color=darkseagreen4, key=1, label=values, style=dashed];
m3_120 -> m3_123  [color=darkseagreen4, key=1, label=values, style=dashed];
m3_120 -> m3_124  [color=darkseagreen4, key=1, label=values, style=dashed];
m3_35 -> m3_37  [color=darkseagreen4, key=1, label=stack2, style=dashed];
m3_765 -> m3_767  [color=darkseagreen4, key=1, label=values2, style=dashed];
m3_456 -> m3_458  [color=darkseagreen4, key=1, label=list, style=dashed];
m3_461 -> m3_463  [color=darkseagreen4, key=1, label=result, style=dashed];
m3_461 -> m3_464  [color=darkseagreen4, key=1, label=result, style=dashed];
m3_461 -> m3_465  [color=darkseagreen4, key=1, label=result, style=dashed];
m3_461 -> m3_466  [color=darkseagreen4, key=1, label=result, style=dashed];
m3_731 -> m3_737  [color=darkseagreen4, key=1, label=json, style=dashed];
m3_732 -> m3_734  [color=darkseagreen4, key=1, label=aa, style=dashed];
m3_732 -> m3_735  [color=darkseagreen4, key=1, label=aa, style=dashed];
m3_740 -> m3_748  [color=darkseagreen4, key=1, label=json, style=dashed];
m3_741 -> m3_743  [color=darkseagreen4, key=1, label=aa, style=dashed];
m3_741 -> m3_744  [color=darkseagreen4, key=1, label=aa, style=dashed];
m3_741 -> m3_745  [color=darkseagreen4, key=1, label=aa, style=dashed];
m3_741 -> m3_746  [color=darkseagreen4, key=1, label=aa, style=dashed];
m3_870 -> m3_874  [color=darkseagreen4, key=1, label=r1, style=dashed];
m3_324 -> m3_330  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_515 -> m3_517  [color=darkseagreen4, key=1, label=v2, style=dashed];
m3_515 -> m3_518  [color=darkseagreen4, key=1, label=v2, style=dashed];
m3_515 -> m3_519  [color=darkseagreen4, key=1, label=v2, style=dashed];
m3_638 -> m3_647  [color=darkseagreen4, key=1, label=json, style=dashed];
m3_639 -> m3_641  [color=darkseagreen4, key=1, label=aa, style=dashed];
m3_639 -> m3_642  [color=darkseagreen4, key=1, label=aa, style=dashed];
m3_639 -> m3_643  [color=darkseagreen4, key=1, label=aa, style=dashed];
m3_639 -> m3_644  [color=darkseagreen4, key=1, label=aa, style=dashed];
m3_639 -> m3_645  [color=darkseagreen4, key=1, label=aa, style=dashed];
m3_22 -> m3_24  [color=darkseagreen4, key=1, label=bag2, style=dashed];
m3_549 -> m3_551  [color=darkseagreen4, key=1, label=values, style=dashed];
m3_549 -> m3_552  [color=darkseagreen4, key=1, label=values, style=dashed];
m3_549 -> m3_553  [color=darkseagreen4, key=1, label=values, style=dashed];
m3_549 -> m3_554  [color=darkseagreen4, key=1, label=values, style=dashed];
m3_549 -> m3_555  [color=darkseagreen4, key=1, label=values, style=dashed];
m3_549 -> m3_556  [color=darkseagreen4, key=1, label=values, style=dashed];
m3_549 -> m3_557  [color=darkseagreen4, key=1, label=values, style=dashed];
m3_549 -> m3_558  [color=darkseagreen4, key=1, label=values, style=dashed];
m3_549 -> m3_559  [color=darkseagreen4, key=1, label=values, style=dashed];
m3_182 -> m3_184  [color=darkseagreen4, key=1, label=c1, style=dashed];
m3_182 -> m3_185  [color=darkseagreen4, key=1, label=c1, style=dashed];
m3_187 -> m3_189  [color=darkseagreen4, key=1, label=c2, style=dashed];
m3_187 -> m3_190  [color=darkseagreen4, key=1, label=c2, style=dashed];
m3_187 -> m3_191  [color=darkseagreen4, key=1, label=c2, style=dashed];
m3_887 -> m3_889  [color=darkseagreen4, key=1, label=products, style=dashed];
m3_888 -> m3_890  [color=darkseagreen4, key=1, label=p1, style=dashed];
m3_724 -> m3_728  [color=darkseagreen4, key=1, label=json, style=dashed];
m3_725 -> m3_727  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_447 -> m3_449  [color=darkseagreen4, key=1, label=c, style=dashed];
m3_451 -> m3_453  [color=darkseagreen4, key=1, label=newValue, style=dashed];
m3_485 -> m3_488  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_485 -> m3_489  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_485 -> m3_490  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_138 -> m3_140  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_129 -> m3_132  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_526 -> m3_528  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m3_526 -> m3_529  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m3_5 -> m3_7  [color=green, key=1, label=queue2, style=dashed];
m3_164 -> m3_166  [color=darkseagreen4, key=1, label=c1, style=dashed];
m3_164 -> m3_167  [color=darkseagreen4, key=1, label=c1, style=dashed];
m3_169 -> m3_171  [color=darkseagreen4, key=1, label=c2, style=dashed];
m3_169 -> m3_172  [color=darkseagreen4, key=1, label=c2, style=dashed];
m3_169 -> m3_173  [color=darkseagreen4, key=1, label=c2, style=dashed];
m3_877 -> m3_880  [color=darkseagreen4, key=1, label=p1, style=dashed];
m3_878 -> m3_881  [color=darkseagreen4, key=1, label=p2, style=dashed];
m3_879 -> m3_881  [color=darkseagreen4, key=1, label=products, style=dashed];
m3_657 -> m3_661  [color=darkseagreen4, key=1, label=json, style=dashed];
m3_658 -> m3_660  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_213 -> m3_215  [color=darkseagreen4, key=1, label=d, style=dashed];
m3_213 -> m3_216  [color=darkseagreen4, key=1, label=d, style=dashed];
m3_213 -> m3_217  [color=darkseagreen4, key=1, label=d, style=dashed];
m3_475 -> m3_477  [color=darkseagreen4, key=1, label=result, style=dashed];
m3_475 -> m3_478  [color=darkseagreen4, key=1, label=result, style=dashed];
m3_475 -> m3_479  [color=darkseagreen4, key=1, label=result, style=dashed];
m3_475 -> m3_480  [color=darkseagreen4, key=1, label=result, style=dashed];
m3_1115 -> m3_1118  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_1115 -> m3_1119  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_1115 -> m3_1122  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_1117 -> m3_1121  [color=darkseagreen4, key=1, label=newStrings, style=dashed];
m3_1117 -> m3_1123  [color=darkseagreen4, key=1, label=newStrings, style=dashed];
m3_503 -> m3_505  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m3_650 -> m3_654  [color=darkseagreen4, key=1, label=json, style=dashed];
m3_651 -> m3_653  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_196 -> m3_198  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_360 -> m3_362  [color=darkseagreen4, key=1, label=list, style=dashed];
m3_360 -> m3_363  [color=darkseagreen4, key=1, label=list, style=dashed];
m3_360 -> m3_364  [color=darkseagreen4, key=1, label=list, style=dashed];
m3_274 -> m3_276  [color=darkseagreen4, key=1, label=myOtherResult, style=dashed];
m3_274 -> m3_277  [color=darkseagreen4, key=1, label=myOtherResult, style=dashed];
m3_274 -> m3_278  [color=darkseagreen4, key=1, label=myOtherResult, style=dashed];
m3_274 -> m3_279  [color=darkseagreen4, key=1, label=myOtherResult, style=dashed];
m3_274 -> m3_280  [color=darkseagreen4, key=1, label=myOtherResult, style=dashed];
m3_273 -> m3_275  [color=darkseagreen4, key=1, label=o, style=dashed];
m3_315 -> m3_319  [color=darkseagreen4, key=1, label=json, style=dashed];
m3_316 -> m3_318  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_297 -> m3_299  [color=darkseagreen4, key=1, label=result, style=dashed];
m3_297 -> m3_300  [color=darkseagreen4, key=1, label=result, style=dashed];
m3_297 -> m3_301  [color=darkseagreen4, key=1, label=result, style=dashed];
m3_536 -> m3_538  [color=darkseagreen4, key=1, label=values, style=dashed];
m3_536 -> m3_539  [color=darkseagreen4, key=1, label=values, style=dashed];
m3_536 -> m3_540  [color=darkseagreen4, key=1, label=values, style=dashed];
m3_536 -> m3_541  [color=darkseagreen4, key=1, label=values, style=dashed];
m3_536 -> m3_542  [color=darkseagreen4, key=1, label=values, style=dashed];
m3_536 -> m3_543  [color=darkseagreen4, key=1, label=values, style=dashed];
m3_536 -> m3_544  [color=darkseagreen4, key=1, label=values, style=dashed];
m3_536 -> m3_545  [color=darkseagreen4, key=1, label=values, style=dashed];
m3_706 -> m3_714  [color=darkseagreen4, key=1, label=json, style=dashed];
m3_707 -> m3_709  [color=darkseagreen4, key=1, label=aa, style=dashed];
m3_707 -> m3_710  [color=darkseagreen4, key=1, label=aa, style=dashed];
m3_707 -> m3_711  [color=darkseagreen4, key=1, label=aa, style=dashed];
m3_707 -> m3_712  [color=darkseagreen4, key=1, label=aa, style=dashed];
m3_235 -> m3_237  [color=darkseagreen4, key=1, label=d2, style=dashed];
m3_235 -> m3_238  [color=darkseagreen4, key=1, label=d2, style=dashed];
m3_367 -> m3_369  [color=darkseagreen4, key=1, label=list, style=dashed];
m3_367 -> m3_370  [color=darkseagreen4, key=1, label=list, style=dashed];
m3_367 -> m3_371  [color=darkseagreen4, key=1, label=list, style=dashed];
m3_353 -> m3_355  [color=darkseagreen4, key=1, label=l, style=dashed];
m3_353 -> m3_356  [color=darkseagreen4, key=1, label=l, style=dashed];
m3_691 -> m3_695  [color=darkseagreen4, key=1, label=json, style=dashed];
m3_692 -> m3_694  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_773 -> m3_775  [color=darkseagreen4, key=1, label=o, style=dashed];
m3_773 -> m3_776  [color=darkseagreen4, key=1, label=o, style=dashed];
m3_773 -> m3_777  [color=darkseagreen4, key=1, label=o, style=dashed];
m3_773 -> m3_778  [color=darkseagreen4, key=1, label=o, style=dashed];
m3_589 -> m3_591  [color=darkseagreen4, key=1, label=c2, style=dashed];
m3_589 -> m3_592  [color=darkseagreen4, key=1, label=c2, style=dashed];
m3_589 -> m3_593  [color=darkseagreen4, key=1, label=c2, style=dashed];
m3_589 -> m3_594  [color=darkseagreen4, key=1, label=c2, style=dashed];
m3_589 -> m3_595  [color=darkseagreen4, key=1, label=c2, style=dashed];
m3_589 -> m3_596  [color=darkseagreen4, key=1, label=c2, style=dashed];
m3_684 -> m3_688  [color=darkseagreen4, key=1, label=json, style=dashed];
m3_685 -> m3_687  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_158 -> m3_158  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, int>", style=dashed];
m3_161 -> m3_161  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, int>", style=dashed];
m4_87 -> m4_97  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m4_94 -> m4_96  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m4_91 -> m4_93  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m4_98 -> m4_100  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m4_127 -> m4_134  [color=darkseagreen4, key=1, label=object, style=dashed];
m4_128 -> m4_130  [color=darkseagreen4, key=1, label=type, style=dashed];
m4_131 -> m4_133  [color=darkseagreen4, key=1, label=memberInfo, style=dashed];
m4_105 -> m4_117  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m4_105 -> m4_118  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m4_11 -> m4_15  [color=darkseagreen4, key=1, label=converterAttribute, style=dashed];
m4_13 -> m4_15  [color=darkseagreen4, key=1, label=creator, style=dashed];
m4_20 -> m4_22  [color=darkseagreen4, key=1, label="object[]", style=dashed];
m4_24 -> m4_26  [color=darkseagreen4, key=1, label="object[]", style=dashed];
m4_28 -> m4_30  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonContainerAttribute", style=dashed];
m4_28 -> m4_33  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonContainerAttribute", style=dashed];
m4_35 -> m4_48  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m4_35 -> m4_50  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m4_35 -> m4_53  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m4_36 -> m4_49  [color=darkseagreen4, key=1, label=defaultConstructor, style=dashed];
m4_36 -> m4_51  [color=darkseagreen4, key=1, label=defaultConstructor, style=dashed];
m4_37 -> m4_42  [color=darkseagreen4, key=1, label="object[]", style=dashed];
m4_37 -> m4_47  [color=darkseagreen4, key=1, label="object[]", style=dashed];
m4_37 -> m4_53  [color=darkseagreen4, key=1, label=ex, style=dashed];
m4_43 -> m4_64  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_114 -> m4_116  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m4_111 -> m4_113  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m4_121 -> m4_123  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m4_73 -> m4_79  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m4_76 -> m4_79  [color=darkseagreen4, key=1, label=metadataClassTypeName, style=dashed];
m4_5 -> m4_7  [color=darkseagreen4, key=1, label=objectAttribute, style=dashed];
m4_41 -> m4_47  [color=darkseagreen4, key=1, label="object[]", style=dashed];
m5_0 -> m5_2  [color=green, key=1, label=object, style=dashed];
m5_4 -> m5_6  [color=green, key=1, label=ticks, style=dashed];
m5_4 -> m5_8  [color=green, key=1, label=ticks, style=dashed];
m5_13 -> m5_15  [color=green, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_13 -> m5_17  [color=green, key=1, label="System.Type", style=dashed];
m5_13 -> m5_20  [color=green, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_13 -> m5_22  [color=green, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_13 -> m5_23  [color=green, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_13 -> m5_24  [color=green, key=1, label="System.Type", style=dashed];
m5_13 -> m5_25  [color=green, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_13 -> m5_29  [color=green, key=1, label="System.Type", style=dashed];
m5_14 -> m5_16  [color=green, key=1, label=nullable, style=dashed];
m5_19 -> m5_26  [color=green, key=1, label=ticks, style=dashed];
m6_71 -> m6_73  [color=green, key=1, label="lambda expression", style=dashed];
m6_125 -> m6_127  [color=green, key=1, label=obj2, style=dashed];
m6_125 -> m6_129  [color=green, key=1, label=obj2, style=dashed];
m6_125 -> m6_128  [color=green, key=1, label=obj2, style=dashed];
m6_24 -> m6_28  [color=green, key=1, label=converter, style=dashed];
m6_25 -> m6_27  [color=green, key=1, label="lambda expression", style=dashed];
m6_53 -> m6_55  [color=green, key=1, label="lambda expression", style=dashed];
m6_115 -> m6_117  [color=green, key=1, label=l2, style=dashed];
m6_115 -> m6_118  [color=green, key=1, label=l2, style=dashed];
m6_92 -> m6_94  [color=green, key=1, label="lambda expression", style=dashed];
m6_101 -> m6_103  [color=green, key=1, label=l2, style=dashed];
m6_101 -> m6_104  [color=green, key=1, label=l2, style=dashed];
m6_17 -> m6_20  [color=green, key=1, label="lambda expression", style=dashed];
m6_10 -> m6_12  [color=green, key=1, label=nowTicks, style=dashed];
m6_86 -> m6_88  [color=green, key=1, label="lambda expression", style=dashed];
n709 -> n691  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n692  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n696  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n697  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n702  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n703  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n704  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n707  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n8  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n58  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n62  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n78  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n84  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n89  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n139  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n146  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n22  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n327  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n292  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n333  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n352  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n425  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n450  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n466  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n472  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n478  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n484  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n488  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n490  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n492  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n494  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n496  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n498  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n500  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n501  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n565  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n581  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n587  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n589  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n590  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n569  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n655  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n710 -> n113  [color=darkseagreen4, key=1, label=namingStrategy, style=dashed];
n712 -> n200  [color=darkseagreen4, key=1, label=setExtensionDataDictionary, style=dashed];
n712 -> n203  [color=darkseagreen4, key=1, label=setExtensionDataDictionary, style=dashed];
n713 -> n201  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
n715 -> n204  [color=darkseagreen4, key=1, label=setExtensionDataDictionaryValue, style=dashed];
n716 -> n214  [color=darkseagreen4, key=1, label=createEnumerableWrapper, style=dashed];
n717 -> n223  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>", style=dashed];
n717 -> n228  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>", style=dashed];
n718 -> n446  [color=darkseagreen4, key=1, label=namingStrategy, style=dashed];
n719 -> n673  [color=darkseagreen4, key=1, label=shouldSerializeCall, style=dashed];
n720 -> n689  [color=darkseagreen4, key=1, label=specifiedPropertyGet, style=dashed];
m1_51 -> m1_34  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m1_51 -> m1_38  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m1_51 -> m1_44  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m1_51 -> m1_47  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m1_51 -> m1_7  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m1_51 -> m1_10  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m1_51 -> m1_12  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m1_51 -> m1_13  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m1_51 -> m1_20  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m2_64 -> m2_44  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonPropertyCollection", style=dashed];
m2_64 -> m2_47  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonPropertyCollection", style=dashed];
m2_64 -> m2_51  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonPropertyCollection", style=dashed];
m2_64 -> m2_55  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonPropertyCollection", style=dashed];
m2_64 -> m2_10  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonPropertyCollection", style=dashed];
m2_64 -> m2_16  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonPropertyCollection", style=dashed];
m2_64 -> m2_20  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonPropertyCollection", style=dashed];
m2_64 -> m2_25  [color=green, key=1, label="Newtonsoft.Json.Serialization.JsonPropertyCollection", style=dashed];
m2_64 -> m2_26  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonPropertyCollection", style=dashed];
m3_1140 -> m3_87  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized", style=dashed];
m3_1142 -> m3_293  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>", style=dashed];
m3_1142 -> m3_289  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>", style=dashed];
m3_1143 -> m3_309  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>", style=dashed];
m3_1143 -> m3_312  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>", style=dashed];
m3_1144 -> m3_319  [color=darkseagreen4, key=1, label=json, style=dashed];
m3_1145 -> m3_336  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrivateDefaultCtorWithIEnumerableCtorList<T>", style=dashed];
m3_1146 -> m3_402  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>", style=dashed];
m3_1146 -> m3_406  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>", style=dashed];
m3_1146 -> m3_409  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>", style=dashed];
m3_1146 -> m3_398  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>", style=dashed];
m3_1147 -> m3_421  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>", style=dashed];
m3_1147 -> m3_424  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>", style=dashed];
m3_1149 -> m3_566  [color=darkseagreen4, key=1, label=json, style=dashed];
m3_1151 -> m3_654  [color=darkseagreen4, key=1, label=json, style=dashed];
m3_1152 -> m3_661  [color=darkseagreen4, key=1, label=json, style=dashed];
m3_1153 -> m3_681  [color=darkseagreen4, key=1, label=json, style=dashed];
m3_1154 -> m3_688  [color=darkseagreen4, key=1, label=json, style=dashed];
m3_1155 -> m3_695  [color=darkseagreen4, key=1, label=json, style=dashed];
m3_1156 -> m3_721  [color=darkseagreen4, key=1, label=json, style=dashed];
m3_1157 -> m3_728  [color=darkseagreen4, key=1, label=json, style=dashed];
m3_1158 -> m3_913  [color=darkseagreen4, key=1, label=json, style=dashed];
m3_1160 -> m3_979  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass", style=dashed];
m3_1160 -> m3_967  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass", style=dashed];
m3_1160 -> m3_960  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass", style=dashed];
m3_1160 -> m3_975  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass", style=dashed];
m3_1160 -> m3_964  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass", style=dashed];
m3_1160 -> m3_949  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass", style=dashed];
m3_1160 -> m3_971  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass", style=dashed];
m3_1160 -> m3_952  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass", style=dashed];
m3_1160 -> m3_956  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass", style=dashed];
m3_1160 -> m3_983  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass", style=dashed];
m3_1161 -> m3_999  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.CASResponce", style=dashed];
m3_1161 -> m3_1003  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.CASResponce", style=dashed];
m3_1161 -> m3_991  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.CASResponce", style=dashed];
m3_1161 -> m3_992  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.CASResponce", style=dashed];
m3_1161 -> m3_993  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.CASResponce", style=dashed];
m3_1161 -> m3_1007  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.CASResponce", style=dashed];
m3_1161 -> m3_1008  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.CASResponce", style=dashed];
m3_1162 -> m3_1064  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>", style=dashed];
m3_1162 -> m3_1061  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>", style=dashed];
m3_1163 -> m3_1098  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList", style=dashed];
m3_1163 -> m3_1094  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList", style=dashed];
m3_1164 -> m3_1109  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>", style=dashed];
m3_1164 -> m3_1103  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>", style=dashed];
m3_1164 -> m3_1104  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>", style=dashed];
m4_136 -> m4_48  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m4_136 -> m4_50  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m4_136 -> m4_53  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m4_137 -> m4_49  [color=darkseagreen4, key=1, label=defaultConstructor, style=dashed];
m4_137 -> m4_51  [color=darkseagreen4, key=1, label=defaultConstructor, style=dashed];
m6_132 -> m6_28  [color=green, key=1, label=converter, style=dashed];
}
