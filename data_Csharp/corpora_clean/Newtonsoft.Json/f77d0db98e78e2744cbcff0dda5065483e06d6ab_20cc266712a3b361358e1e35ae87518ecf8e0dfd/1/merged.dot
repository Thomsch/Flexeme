digraph  {
n0 [label="Entry Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JsonConvertSerializerSettings()", span="47-47", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JsonConvertSerializerSettings()"];
n1 [label="Person person = new Person()", span="49-49", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JsonConvertSerializerSettings()"];
n2 [label="person.BirthDate = new DateTime(2000, 11, 20, 23, 55, 44, DateTimeKind.Utc)", span="50-50", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JsonConvertSerializerSettings()"];
n14 [label="Entry Newtonsoft.Json.Tests.TestObjects.Organization.Person.Person()", span="34-34", cluster="Newtonsoft.Json.Tests.TestObjects.Organization.Person.Person()"];
n3 [label="person.LastModified = new DateTime(2000, 11, 20, 23, 55, 44, DateTimeKind.Utc)", span="51-51", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JsonConvertSerializerSettings()"];
n4 [label="person.Name = ''Name!''", span="52-52", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JsonConvertSerializerSettings()"];
n5 [label="string json = JsonConvert.SerializeObject(person, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new CamelCasePropertyNamesContractResolver()\r\n            })", span="54-57", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JsonConvertSerializerSettings()"];
n8 [label="Assert.AreEqual(person.BirthDate, deserializedPerson.BirthDate)", span="70-70", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JsonConvertSerializerSettings()"];
n9 [label="Assert.AreEqual(person.LastModified, deserializedPerson.LastModified)", span="71-71", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JsonConvertSerializerSettings()"];
n10 [label="Assert.AreEqual(person.Name, deserializedPerson.Name)", span="72-72", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JsonConvertSerializerSettings()"];
n11 [label="json = JsonConvert.SerializeObject(person, Formatting.Indented)", span="74-74", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JsonConvertSerializerSettings()"];
n15 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)"];
n6 [label="StringAssert.AreEqual(@''{\r\n  ''''name'''': ''''Name!'''',\r\n  ''''birthDate'''': ''''2000-11-20T23:55:44Z'''',\r\n  ''''lastModified'''': ''''2000-11-20T23:55:44Z''''\r\n}'', json)", span="59-63", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JsonConvertSerializerSettings()"];
n16 [label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="429-429", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()"];
n17 [label="Entry Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver.CamelCasePropertyNamesContractResolver()", span="38-38", cluster="Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver.CamelCasePropertyNamesContractResolver()"];
n18 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="621-621", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)"];
n7 [label="Person deserializedPerson = JsonConvert.DeserializeObject<Person>(json, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new CamelCasePropertyNamesContractResolver()\r\n            })", span="65-68", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JsonConvertSerializerSettings()"];
n19 [label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="328-328", cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)"];
n20 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="817-817", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)"];
n21 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual"];
n12 [label="StringAssert.AreEqual(@''{\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''BirthDate'''': ''''2000-11-20T23:55:44Z'''',\r\n  ''''LastModified'''': ''''2000-11-20T23:55:44Z''''\r\n}'', json)", span="75-79", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JsonConvertSerializerSettings()"];
n22 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="540-540", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)"];
n13 [label="Exit Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JsonConvertSerializerSettings()", span="47-47", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JsonConvertSerializerSettings()"];
n23 [label="Entry Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JTokenWriter()", span="83-83", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JTokenWriter()"];
n24 [label="JsonIgnoreAttributeOnClassTestClass ignoreAttributeOnClassTestClass = new JsonIgnoreAttributeOnClassTestClass()", span="85-85", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JTokenWriter()"];
n25 [label="ignoreAttributeOnClassTestClass.Field = int.MinValue", span="86-86", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JTokenWriter()"];
n36 [label="Entry Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeOnClassTestClass.JsonIgnoreAttributeOnClassTestClass()", span="28-28", cluster="Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeOnClassTestClass.JsonIgnoreAttributeOnClassTestClass()"];
n29 [label="serializer.Serialize(writer, ignoreAttributeOnClassTestClass)", span="93-93", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JTokenWriter()"];
n26 [label="JsonSerializer serializer = new JsonSerializer()", span="88-88", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JTokenWriter()"];
n27 [label="serializer.ContractResolver = new CamelCasePropertyNamesContractResolver()", span="89-89", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JTokenWriter()"];
n37 [label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="530-530", cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()"];
n28 [label="JTokenWriter writer = new JTokenWriter()", span="91-91", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JTokenWriter()"];
n38 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", span="85-85", cluster="Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()"];
n30 [label="JObject o = (JObject)writer.Token", span="95-95", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JTokenWriter()"];
n39 [label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="1042-1042", cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)"];
n31 [label="JProperty p = o.Property(''theField'')", span="96-96", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JTokenWriter()"];
n34 [label="string json = o.ToString()", span="101-101", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JTokenWriter()"];
n32 [label="Assert.IsNotNull(p)", span="98-98", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JTokenWriter()"];
n40 [label="Entry Newtonsoft.Json.Linq.JObject.Property(string)", span="258-258", cluster="Newtonsoft.Json.Linq.JObject.Property(string)"];
n33 [label="Assert.AreEqual(int.MinValue, (int)p.Value)", span="99-99", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JTokenWriter()"];
n41 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull"];
n35 [label="Exit Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JTokenWriter()", span="83-83", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JTokenWriter()"];
n42 [label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="422-422", cluster="Newtonsoft.Json.Linq.JToken.ToString()"];
n43 [label="Entry Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.MemberSearchFlags()", span="107-107", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.MemberSearchFlags()"];
n44 [label="PrivateMembersClass privateMembersClass = new PrivateMembersClass(''PrivateString!'', ''InternalString!'')", span="109-109", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.MemberSearchFlags()"];
n45 [label="string json = JsonConvert.SerializeObject(privateMembersClass, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new CamelCasePropertyNamesContractResolver { DefaultMembersSearchFlags = BindingFlags.NonPublic | BindingFlags.Instance }\r\n            })", span="111-114", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.MemberSearchFlags()"];
n52 [label="Entry Newtonsoft.Json.Tests.TestObjects.PrivateMembersClass.PrivateMembersClass(string, string)", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.PrivateMembersClass.PrivateMembersClass(string, string)"];
n46 [label="StringAssert.AreEqual(@''{\r\n  ''''_privateString'''': ''''PrivateString!'''',\r\n  ''''i'''': 0,\r\n  ''''_internalString'''': ''''InternalString!''''\r\n}'', json)", span="116-120", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.MemberSearchFlags()"];
n47 [label="PrivateMembersClass deserializedPrivateMembersClass = JsonConvert.DeserializeObject<PrivateMembersClass>(@''{\r\n  ''''_privateString'''': ''''Private!'''',\r\n  ''''i'''': -2,\r\n  ''''_internalString'''': ''''Internal!''''\r\n}'', new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new CamelCasePropertyNamesContractResolver { DefaultMembersSearchFlags = BindingFlags.NonPublic | BindingFlags.Instance }\r\n            })", span="122-129", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.MemberSearchFlags()"];
n48 [label="Assert.AreEqual(''Private!'', ReflectionUtils.GetMemberValue(typeof(PrivateMembersClass).GetField(''_privateString'', BindingFlags.Instance | BindingFlags.NonPublic), deserializedPrivateMembersClass))", span="131-131", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.MemberSearchFlags()"];
n49 [label="Assert.AreEqual(''Internal!'', ReflectionUtils.GetMemberValue(typeof(PrivateMembersClass).GetField(''_internalString'', BindingFlags.Instance | BindingFlags.NonPublic), deserializedPrivateMembersClass))", span="132-132", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.MemberSearchFlags()"];
n50 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(PrivateMembersClass).GetField(''i'', BindingFlags.Instance | BindingFlags.NonPublic), deserializedPrivateMembersClass))", span="135-135", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.MemberSearchFlags()"];
n53 [label="Entry System.Type.GetField(string, System.Reflection.BindingFlags)", span="0-0", cluster="System.Type.GetField(string, System.Reflection.BindingFlags)"];
n54 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", span="507-507", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)"];
n51 [label="Exit Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.MemberSearchFlags()", span="107-107", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.MemberSearchFlags()"];
n55 [label="Entry Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.BlogPostExample()", span="141-141", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.BlogPostExample()"];
n56 [label="Product product = new Product\r\n            {\r\n                ExpiryDate = new DateTime(2010, 12, 20, 18, 1, 0, DateTimeKind.Utc),\r\n                Name = ''Widget'',\r\n                Price = 9.99m,\r\n                Sizes = new[] { ''Small'', ''Medium'', ''Large'' }\r\n            }", span="143-149", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.BlogPostExample()", color=red, community=0];
n57 [label="string json =\r\n                JsonConvert.SerializeObject(\r\n                    product,\r\n                    Formatting.Indented,\r\n                    new JsonSerializerSettings { ContractResolver = new CamelCasePropertyNamesContractResolver() }\r\n                    )", span="151-156", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.BlogPostExample()"];
n60 [label="Entry Newtonsoft.Json.Tests.TestObjects.Product.Product()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.Product.Product()"];
n58 [label="StringAssert.AreEqual(@''{\r\n  ''''name'''': ''''Widget'''',\r\n  ''''expiryDate'''': ''''2010-12-20T18:01:00Z'''',\r\n  ''''price'''': 9.99,\r\n  ''''sizes'''': [\r\n    ''''Small'''',\r\n    ''''Medium'''',\r\n    ''''Large''''\r\n  ]\r\n}'', json)", span="169-178", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.BlogPostExample()"];
n59 [label="Exit Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.BlogPostExample()", span="141-141", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.BlogPostExample()"];
n61 [label="Entry Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.DynamicCamelCasePropertyNames()", span="183-183", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.DynamicCamelCasePropertyNames()"];
n62 [label="dynamic o = new TestDynamicObject()", span="185-185", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.DynamicCamelCasePropertyNames()"];
n63 [label="o.Text = ''Text!''", span="186-186", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.DynamicCamelCasePropertyNames()"];
n68 [label="Entry Newtonsoft.Json.Tests.Serialization.TestDynamicObject.TestDynamicObject()", span="344-344", cluster="Newtonsoft.Json.Tests.Serialization.TestDynamicObject.TestDynamicObject()"];
n64 [label="o.Integer = int.MaxValue", span="187-187", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.DynamicCamelCasePropertyNames()"];
n65 [label="string json = JsonConvert.SerializeObject(o, Formatting.Indented,\r\n                new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new CamelCasePropertyNamesContractResolver()\r\n                })", span="189-193", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.DynamicCamelCasePropertyNames()"];
n66 [label="StringAssert.AreEqual(@''{\r\n  ''''explicit'''': false,\r\n  ''''text'''': ''''Text!'''',\r\n  ''''integer'''': 2147483647,\r\n  ''''int'''': 0,\r\n  ''''childObject'''': null\r\n}'', json)", span="195-201", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.DynamicCamelCasePropertyNames()"];
n67 [label="Exit Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.DynamicCamelCasePropertyNames()", span="183-183", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.DynamicCamelCasePropertyNames()"];
n69 [label="Entry Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.DictionaryCamelCasePropertyNames()", span="206-206", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.DictionaryCamelCasePropertyNames()"];
n70 [label="Dictionary<string, string> values = new Dictionary<string, string>\r\n            {\r\n                { ''First'', ''Value1!'' },\r\n                { ''Second'', ''Value2!'' }\r\n            }", span="208-212", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.DictionaryCamelCasePropertyNames()"];
n71 [label="string json = JsonConvert.SerializeObject(values, Formatting.Indented,\r\n                new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new CamelCasePropertyNamesContractResolver()\r\n                })", span="214-218", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.DictionaryCamelCasePropertyNames()"];
n74 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()"];
n72 [label="StringAssert.AreEqual(@''{\r\n  ''''first'''': ''''Value1!'''',\r\n  ''''second'''': ''''Value2!''''\r\n}'', json)", span="220-223", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.DictionaryCamelCasePropertyNames()"];
n73 [label="Exit Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.DictionaryCamelCasePropertyNames()", span="206-206", cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.DictionaryCamelCasePropertyNames()"];
m0_50 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializePerformance()", span="114-114", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializePerformance()", file="DiscriminatedUnionConverterTests.cs"];
m0_51 [label="string json = @''[\r\n  {''''Case'''':''''Rectangle'''',''''Fields'''':[10.0,5.0]},\r\n  {''''Case'''':''''Rectangle'''',''''Fields'''':[10.0,5.0]},\r\n  {''''Case'''':''''Rectangle'''',''''Fields'''':[10.0,5.0]},\r\n  {''''Case'''':''''Rectangle'''',''''Fields'''':[10.0,5.0]},\r\n  {''''Case'''':''''Rectangle'''',''''Fields'''':[10.0,5.0]}\r\n]''", span="116-122", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializePerformance()", file="DiscriminatedUnionConverterTests.cs"];
m0_52 [label="JsonConvert.DeserializeObject<List<Shape>>(json)", span="124-124", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializePerformance()", file="DiscriminatedUnionConverterTests.cs"];
m0_57 [label="JsonConvert.DeserializeObject<List<Shape>>(json)", span="131-131", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializePerformance()", file="DiscriminatedUnionConverterTests.cs"];
m0_53 [label="Stopwatch ts = new Stopwatch()", span="126-126", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializePerformance()", file="DiscriminatedUnionConverterTests.cs"];
m0_54 [label="ts.Start()", span="127-127", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializePerformance()", file="DiscriminatedUnionConverterTests.cs"];
m0_59 [label="ts.Stop()", span="134-134", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializePerformance()", file="DiscriminatedUnionConverterTests.cs"];
m0_60 [label="Console.WriteLine(ts.Elapsed.TotalSeconds)", span="136-136", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializePerformance()", file="DiscriminatedUnionConverterTests.cs"];
m0_55 [label="int i = 0", span="129-129", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializePerformance()", color=green, community=0, file="DiscriminatedUnionConverterTests.cs"];
m0_56 [label="i < 10000", span="129-129", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializePerformance()", color=green, community=0, file="DiscriminatedUnionConverterTests.cs"];
m0_58 [label="i++", span="129-129", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializePerformance()", color=green, community=0, file="DiscriminatedUnionConverterTests.cs"];
m0_61 [label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializePerformance()", span="114-114", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializePerformance()", file="DiscriminatedUnionConverterTests.cs"];
m0_75 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeUnionWithFields()", span="161-161", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeUnionWithFields()", file="DiscriminatedUnionConverterTests.cs"];
m0_76 [label="Shape c = JsonConvert.DeserializeObject<Shape>(@''{''''Case'''':''''Rectangle'''',''''Fields'''':[10.0,5.0]}'')", span="163-163", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeUnionWithFields()", file="DiscriminatedUnionConverterTests.cs"];
m0_77 [label="Assert.AreEqual(true, c.IsRectangle)", span="164-164", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeUnionWithFields()", file="DiscriminatedUnionConverterTests.cs"];
m0_78 [label="Shape.Rectangle r = (Shape.Rectangle)c", span="166-166", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeUnionWithFields()", file="DiscriminatedUnionConverterTests.cs"];
m0_79 [label="Assert.AreEqual(5.0, r.length)", span="168-168", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeUnionWithFields()", file="DiscriminatedUnionConverterTests.cs"];
m0_80 [label="Assert.AreEqual(10.0, r.width)", span="169-169", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeUnionWithFields()", file="DiscriminatedUnionConverterTests.cs"];
m0_81 [label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeUnionWithFields()", span="161-161", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeUnionWithFields()", file="DiscriminatedUnionConverterTests.cs"];
m0_26 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeBasicUnion()", span="82-82", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeBasicUnion()", file="DiscriminatedUnionConverterTests.cs"];
m0_27 [label="string json = JsonConvert.SerializeObject(Currency.AUD)", span="84-84", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeBasicUnion()", file="DiscriminatedUnionConverterTests.cs"];
m0_28 [label="Assert.AreEqual(@''{''''Case'''':''''AUD''''}'', json)", span="86-86", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeBasicUnion()", file="DiscriminatedUnionConverterTests.cs"];
m0_29 [label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeBasicUnion()", span="82-82", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeBasicUnion()", file="DiscriminatedUnionConverterTests.cs"];
m0_100 [label="Entry Unk.GetUnionCases", span="", cluster="Unk.GetUnionCases", file="DiscriminatedUnionConverterTests.cs"];
m0_97 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Union.Union()", span="172-172", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Union.Union()", file="DiscriminatedUnionConverterTests.cs"];
m0_152 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_UnexpectedEnd()", span="264-264", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_UnexpectedEnd()", file="DiscriminatedUnionConverterTests.cs"];
m0_153 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<Currency>(@''{''''Case'''':''), ''Unexpected end when reading union. Path 'Case', line 1, position 8.'')", span="266-266", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_UnexpectedEnd()", file="DiscriminatedUnionConverterTests.cs"];
m0_154 [label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_UnexpectedEnd()", span="264-264", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_UnexpectedEnd()", file="DiscriminatedUnionConverterTests.cs"];
m0_22 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.DoubleDoubleConverter()", span="43-43", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.DoubleDoubleConverter()", file="DiscriminatedUnionConverterTests.cs"];
m0_47 [label="Entry System.Diagnostics.Stopwatch.Start()", span="0-0", cluster="System.Diagnostics.Stopwatch.Start()", file="DiscriminatedUnionConverterTests.cs"];
m0_105 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="DiscriminatedUnionConverterTests.cs"];
m0_121 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Deserialize()", span="229-229", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Deserialize()", file="DiscriminatedUnionConverterTests.cs"];
m0_122 [label="Union union = CreateUnion(typeof(Shape.Rectangle))", span="231-231", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Deserialize()", file="DiscriminatedUnionConverterTests.cs"];
m0_123 [label="UnionCase caseInfo = union.Cases.Single(c => c.Name == ''Rectangle'')", span="233-233", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Deserialize()", file="DiscriminatedUnionConverterTests.cs"];
m0_124 [label="Shape.Rectangle value = (Shape.Rectangle)caseInfo.Constructor.Invoke(new object[]\r\n            {\r\n                10.0, 5.0\r\n            })", span="235-238", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Deserialize()", file="DiscriminatedUnionConverterTests.cs"];
m0_125 [label="Assert.AreEqual(''Newtonsoft.Json.Tests.TestObjects.Shape+Rectangle'', value.ToString())", span="240-240", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Deserialize()", file="DiscriminatedUnionConverterTests.cs"];
m0_126 [label="Assert.AreEqual(10, value.width)", span="241-241", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Deserialize()", file="DiscriminatedUnionConverterTests.cs"];
m0_127 [label="Assert.AreEqual(5, value.length)", span="242-242", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Deserialize()", file="DiscriminatedUnionConverterTests.cs"];
m0_128 [label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Deserialize()", span="229-229", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Deserialize()", file="DiscriminatedUnionConverterTests.cs"];
m0_62 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="739-739", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="DiscriminatedUnionConverterTests.cs"];
m0_48 [label="Entry System.Diagnostics.Stopwatch.Stop()", span="0-0", cluster="System.Diagnostics.Stopwatch.Stop()", file="DiscriminatedUnionConverterTests.cs"];
m0_63 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithFields()", span="140-140", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithFields()", file="DiscriminatedUnionConverterTests.cs"];
m0_64 [label="string json = JsonConvert.SerializeObject(Shape.NewRectangle(10.0, 5.0))", span="142-142", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithFields()", file="DiscriminatedUnionConverterTests.cs"];
m0_65 [label="Assert.AreEqual(@''{''''Case'''':''''Rectangle'''',''''Fields'''':[10.0,5.0]}'', json)", span="144-144", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithFields()", file="DiscriminatedUnionConverterTests.cs"];
m0_66 [label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithFields()", span="140-140", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithFields()", file="DiscriminatedUnionConverterTests.cs"];
m0_129 [label="Entry object.ToString()", span="0-0", cluster="object.ToString()", file="DiscriminatedUnionConverterTests.cs"];
m0_133 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_NoMatch()", span="246-246", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_NoMatch()", file="DiscriminatedUnionConverterTests.cs"];
m0_134 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<Currency>(@''{''''Case'''':''''abcdefg'''',''''Fields'''':[]}''), ''No union type found with the name 'abcdefg'. Path 'Case', line 1, position 17.'')", span="248-248", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_NoMatch()", file="DiscriminatedUnionConverterTests.cs"];
m0_135 [label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_NoMatch()", span="246-246", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_NoMatch()", file="DiscriminatedUnionConverterTests.cs"];
m0_164 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_UnexpectedProperty()", span="276-276", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_UnexpectedProperty()", file="DiscriminatedUnionConverterTests.cs"];
m0_165 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<Currency>(@''{''''Case123'''':''''AUD''''}''), ''Unexpected property 'Case123' found when reading union. Path 'Case123', line 1, position 11.'')", span="278-278", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_UnexpectedProperty()", file="DiscriminatedUnionConverterTests.cs"];
m0_166 [label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_UnexpectedProperty()", span="276-276", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_UnexpectedProperty()", file="DiscriminatedUnionConverterTests.cs"];
m0_99 [label="Entry Unk.ToConverter", span="", cluster="Unk.ToConverter", file="DiscriminatedUnionConverterTests.cs"];
m0_158 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_FieldsObject()", span="270-270", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_FieldsObject()", file="DiscriminatedUnionConverterTests.cs"];
m0_159 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<Currency>(@''{''''Case'''':''''AUD'''',''''Fields'''':{}}''), ''Union fields must been an array. Path 'Fields', line 1, position 24.'')", span="272-272", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_FieldsObject()", file="DiscriminatedUnionConverterTests.cs"];
m0_160 [label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_FieldsObject()", span="270-270", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_FieldsObject()", file="DiscriminatedUnionConverterTests.cs"];
m0_43 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="DiscriminatedUnionConverterTests.cs"];
m0_0 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="45-45", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverterTests.cs"];
m0_1 [label="double d = (double)value", span="47-47", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverterTests.cs"];
m0_2 [label="writer.WriteValue(d * 2)", span="49-49", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverterTests.cs"];
m0_3 [label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="45-45", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverterTests.cs"];
m0_117 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="DiscriminatedUnionConverterTests.cs"];
m0_104 [label="Entry Unk.PreComputeUnionConstructor", span="", cluster="Unk.PreComputeUnionConstructor", file="DiscriminatedUnionConverterTests.cs"];
m0_25 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", span="787-787", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", file="DiscriminatedUnionConverterTests.cs"];
m0_24 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="DiscriminatedUnionConverterTests.cs"];
m0_98 [label="Entry Unk.PreComputeUnionTagReader", span="", cluster="Unk.PreComputeUnionTagReader", file="DiscriminatedUnionConverterTests.cs"];
m0_106 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Serialize()", span="212-212", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Serialize()", file="DiscriminatedUnionConverterTests.cs"];
m0_107 [label="Shape value = Shape.NewRectangle(10.0, 5.0)", span="214-214", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Serialize()", file="DiscriminatedUnionConverterTests.cs"];
m0_108 [label="Union union = CreateUnion(value.GetType())", span="216-216", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Serialize()", file="DiscriminatedUnionConverterTests.cs"];
m0_109 [label="int tag = union.TagReader.Invoke(value)", span="218-218", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Serialize()", file="DiscriminatedUnionConverterTests.cs"];
m0_111 [label="object[] fields = caseInfo.FieldReader.Invoke(value)", span="222-222", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Serialize()", file="DiscriminatedUnionConverterTests.cs"];
m0_110 [label="UnionCase caseInfo = union.Cases.Single(c => c.Tag == tag)", span="220-220", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Serialize()", file="DiscriminatedUnionConverterTests.cs"];
m0_112 [label="Assert.AreEqual(10, fields[0])", span="224-224", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Serialize()", file="DiscriminatedUnionConverterTests.cs"];
m0_113 [label="Assert.AreEqual(5, fields[1])", span="225-225", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Serialize()", file="DiscriminatedUnionConverterTests.cs"];
m0_114 [label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Serialize()", span="212-212", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Serialize()", file="DiscriminatedUnionConverterTests.cs"];
m0_167 [label="Entry lambda expression", span="278-278", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m0_119 [label="c.Tag == tag", span="220-220", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m0_118 [label="Entry lambda expression", span="220-220", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m0_120 [label="Exit lambda expression", span="220-220", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m0_130 [label="Entry lambda expression", span="233-233", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m0_131 [label="c.Name == ''Rectangle''", span="233-233", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m0_132 [label="Exit lambda expression", span="233-233", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m0_137 [label="Entry lambda expression", span="248-248", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m0_138 [label="JsonConvert.DeserializeObject<Currency>(@''{''''Case'''':''''abcdefg'''',''''Fields'''':[]}'')", span="248-248", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m0_139 [label="Exit lambda expression", span="248-248", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m0_143 [label="Entry lambda expression", span="254-254", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m0_144 [label="JsonConvert.DeserializeObject<Currency>(@''{''''Case'''':''''AUD'''',''''Fields'''':[1]}'')", span="254-254", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m0_145 [label="Exit lambda expression", span="254-254", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m0_149 [label="Entry lambda expression", span="260-260", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m0_150 [label="JsonConvert.DeserializeObject<Currency>(@''{''''Fields'''':[1]}'')", span="260-260", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m0_151 [label="Exit lambda expression", span="260-260", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m0_155 [label="Entry lambda expression", span="266-266", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m0_156 [label="JsonConvert.DeserializeObject<Currency>(@''{''''Case'''':'')", span="266-266", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m0_157 [label="Exit lambda expression", span="266-266", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m0_161 [label="Entry lambda expression", span="272-272", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m0_162 [label="JsonConvert.DeserializeObject<Currency>(@''{''''Case'''':''''AUD'''',''''Fields'''':{}}'')", span="272-272", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m0_163 [label="Exit lambda expression", span="272-272", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m0_168 [label="JsonConvert.DeserializeObject<Currency>(@''{''''Case123'''':''''AUD''''}'')", span="278-278", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m0_169 [label="Exit lambda expression", span="278-278", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m0_5 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="52-52", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverterTests.cs"];
m0_6 [label="double d = (double)reader.Value", span="54-54", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverterTests.cs"];
m0_7 [label="return d / 2;", span="56-56", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverterTests.cs"];
m0_8 [label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="52-52", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverterTests.cs"];
m0_21 [label="Entry Newtonsoft.Json.Tests.TestObjects.Shape.NewRectangle(double, double)", span="72-72", cluster="Newtonsoft.Json.Tests.TestObjects.Shape.NewRectangle(double, double)", file="DiscriminatedUnionConverterTests.cs"];
m0_102 [label="Entry Unk.GetFields", span="", cluster="Unk.GetFields", file="DiscriminatedUnionConverterTests.cs"];
m0_9 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.CanConvert(System.Type)", span="59-59", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.CanConvert(System.Type)", file="DiscriminatedUnionConverterTests.cs"];
m0_10 [label="return objectType == typeof(double);", span="61-61", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.CanConvert(System.Type)", file="DiscriminatedUnionConverterTests.cs"];
m0_11 [label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.CanConvert(System.Type)", span="59-59", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.CanConvert(System.Type)", file="DiscriminatedUnionConverterTests.cs"];
m0_136 [label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="354-354", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="DiscriminatedUnionConverterTests.cs"];
m0_140 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_MismatchedFieldCount()", span="252-252", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_MismatchedFieldCount()", file="DiscriminatedUnionConverterTests.cs"];
m0_141 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<Currency>(@''{''''Case'''':''''AUD'''',''''Fields'''':[1]}''), ''The number of field values does not match the number of properties definied by union 'AUD'. Path '', line 1, position 27.'')", span="254-254", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_MismatchedFieldCount()", file="DiscriminatedUnionConverterTests.cs"];
m0_142 [label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_MismatchedFieldCount()", span="252-252", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_MismatchedFieldCount()", file="DiscriminatedUnionConverterTests.cs"];
m0_103 [label="Entry Unk.PreComputeUnionReader", span="", cluster="Unk.PreComputeUnionReader", file="DiscriminatedUnionConverterTests.cs"];
m0_180 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", span="570-570", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", file="DiscriminatedUnionConverterTests.cs"];
m0_12 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithConverter()", span="66-66", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithConverter()", file="DiscriminatedUnionConverterTests.cs"];
m0_13 [label="string json = JsonConvert.SerializeObject(Shape.NewRectangle(10.0, 5.0), new DoubleDoubleConverter())", span="68-68", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithConverter()", file="DiscriminatedUnionConverterTests.cs"];
m0_14 [label="Assert.AreEqual(@''{''''Case'''':''''Rectangle'''',''''Fields'''':[20.0,10.0]}'', json)", span="70-70", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithConverter()", file="DiscriminatedUnionConverterTests.cs"];
m0_15 [label="Shape c = JsonConvert.DeserializeObject<Shape>(json, new DoubleDoubleConverter())", span="72-72", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithConverter()", file="DiscriminatedUnionConverterTests.cs"];
m0_16 [label="Assert.AreEqual(true, c.IsRectangle)", span="73-73", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithConverter()", file="DiscriminatedUnionConverterTests.cs"];
m0_17 [label="Shape.Rectangle r = (Shape.Rectangle)c", span="75-75", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithConverter()", file="DiscriminatedUnionConverterTests.cs"];
m0_18 [label="Assert.AreEqual(5.0, r.length)", span="77-77", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithConverter()", file="DiscriminatedUnionConverterTests.cs"];
m0_19 [label="Assert.AreEqual(10.0, r.width)", span="78-78", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithConverter()", file="DiscriminatedUnionConverterTests.cs"];
m0_20 [label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithConverter()", span="66-66", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithConverter()", file="DiscriminatedUnionConverterTests.cs"];
m0_31 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializePerformance()", span="90-90", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializePerformance()", file="DiscriminatedUnionConverterTests.cs"];
m0_32 [label="List<Shape> values = new List<Shape>\r\n            {\r\n                Shape.NewRectangle(10.0, 5.0),\r\n                Shape.NewCircle(7.5)\r\n            }", span="92-96", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializePerformance()", file="DiscriminatedUnionConverterTests.cs"];
m0_33 [label="string json = JsonConvert.SerializeObject(values, Formatting.Indented)", span="98-98", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializePerformance()", file="DiscriminatedUnionConverterTests.cs"];
m0_38 [label="JsonConvert.SerializeObject(values)", span="105-105", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializePerformance()", file="DiscriminatedUnionConverterTests.cs"];
m0_34 [label="Stopwatch ts = new Stopwatch()", span="100-100", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializePerformance()", file="DiscriminatedUnionConverterTests.cs"];
m0_35 [label="ts.Start()", span="101-101", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializePerformance()", file="DiscriminatedUnionConverterTests.cs"];
m0_40 [label="ts.Stop()", span="108-108", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializePerformance()", file="DiscriminatedUnionConverterTests.cs"];
m0_41 [label="Console.WriteLine(ts.Elapsed.TotalSeconds)", span="110-110", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializePerformance()", file="DiscriminatedUnionConverterTests.cs"];
m0_36 [label="int i = 0", span="103-103", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializePerformance()", color=green, community=0, file="DiscriminatedUnionConverterTests.cs"];
m0_37 [label="i < 10000", span="103-103", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializePerformance()", color=green, community=0, file="DiscriminatedUnionConverterTests.cs"];
m0_39 [label="i++", span="103-103", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializePerformance()", color=green, community=0, file="DiscriminatedUnionConverterTests.cs"];
m0_42 [label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializePerformance()", span="90-90", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializePerformance()", file="DiscriminatedUnionConverterTests.cs"];
m0_67 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion()", span="148-148", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion()", file="DiscriminatedUnionConverterTests.cs"];
m0_68 [label="Currency c = JsonConvert.DeserializeObject<Currency>(@''{''''Case'''':''''AUD''''}'')", span="150-150", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion()", file="DiscriminatedUnionConverterTests.cs"];
m0_69 [label="Assert.AreEqual(Currency.AUD, c)", span="151-151", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion()", file="DiscriminatedUnionConverterTests.cs"];
m0_70 [label="c = JsonConvert.DeserializeObject<Currency>(@''{''''Case'''':''''EUR''''}'')", span="153-153", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion()", file="DiscriminatedUnionConverterTests.cs"];
m0_71 [label="Assert.AreEqual(Currency.EUR, c)", span="154-154", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion()", file="DiscriminatedUnionConverterTests.cs"];
m0_72 [label="c = JsonConvert.DeserializeObject<Currency>(@''null'')", span="156-156", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion()", file="DiscriminatedUnionConverterTests.cs"];
m0_73 [label="Assert.AreEqual(null, c)", span="157-157", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion()", file="DiscriminatedUnionConverterTests.cs"];
m0_74 [label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion()", span="148-148", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion()", file="DiscriminatedUnionConverterTests.cs"];
m0_23 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", span="536-536", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", file="DiscriminatedUnionConverterTests.cs"];
m0_115 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="DiscriminatedUnionConverterTests.cs"];
m0_4 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(double)", span="875-875", cluster="Newtonsoft.Json.JsonWriter.WriteValue(double)", file="DiscriminatedUnionConverterTests.cs"];
m0_46 [label="Entry System.Diagnostics.Stopwatch.Stopwatch()", span="0-0", cluster="System.Diagnostics.Stopwatch.Stopwatch()", file="DiscriminatedUnionConverterTests.cs"];
m0_82 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", span="187-187", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", file="DiscriminatedUnionConverterTests.cs"];
m0_83 [label="Union u = new Union()", span="189-189", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", file="DiscriminatedUnionConverterTests.cs"];
m0_84 [label="u.TagReader = FSharpFunc<object, int>.ToConverter(FSharpValue.PreComputeUnionTagReader(t, null))", span="191-191", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", file="DiscriminatedUnionConverterTests.cs"];
m0_86 [label="UnionCaseInfo[] cases = FSharpType.GetUnionCases(t, null)", span="194-194", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", file="DiscriminatedUnionConverterTests.cs"];
m0_85 [label="u.Cases = new List<UnionCase>()", span="192-192", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", file="DiscriminatedUnionConverterTests.cs"];
m0_94 [label="u.Cases.Add(unionCase)", span="205-205", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", file="DiscriminatedUnionConverterTests.cs"];
m0_95 [label="return u;", span="208-208", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", file="DiscriminatedUnionConverterTests.cs"];
m0_87 [label=cases, span="196-196", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", file="DiscriminatedUnionConverterTests.cs"];
m0_88 [label="UnionCase unionCase = new UnionCase()", span="198-198", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", file="DiscriminatedUnionConverterTests.cs"];
m0_89 [label="unionCase.Tag = unionCaseInfo.Tag", span="199-199", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", file="DiscriminatedUnionConverterTests.cs"];
m0_90 [label="unionCase.Name = unionCaseInfo.Name", span="200-200", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", file="DiscriminatedUnionConverterTests.cs"];
m0_91 [label="unionCase.Fields = unionCaseInfo.GetFields()", span="201-201", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", file="DiscriminatedUnionConverterTests.cs"];
m0_92 [label="unionCase.FieldReader = FSharpFunc<object, object[]>.ToConverter(FSharpValue.PreComputeUnionReader(unionCaseInfo, null))", span="202-202", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", file="DiscriminatedUnionConverterTests.cs"];
m0_93 [label="unionCase.Constructor = FSharpFunc<object[], object>.ToConverter(FSharpValue.PreComputeUnionConstructor(unionCaseInfo, null))", span="203-203", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", file="DiscriminatedUnionConverterTests.cs"];
m0_96 [label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", span="187-187", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", file="DiscriminatedUnionConverterTests.cs"];
m0_146 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_NoCaseName()", span="258-258", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_NoCaseName()", file="DiscriminatedUnionConverterTests.cs"];
m0_147 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<Currency>(@''{''''Fields'''':[1]}''), ''No 'Case' property with union name found. Path '', line 1, position 14.'')", span="260-260", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_NoCaseName()", file="DiscriminatedUnionConverterTests.cs"];
m0_148 [label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_NoCaseName()", span="258-258", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_NoCaseName()", file="DiscriminatedUnionConverterTests.cs"];
m0_49 [label="Entry System.Console.WriteLine(double)", span="0-0", cluster="System.Console.WriteLine(double)", file="DiscriminatedUnionConverterTests.cs"];
m0_116 [label="Entry System.Converter<TInput, TOutput>.Invoke(TInput)", span="0-0", cluster="System.Converter<TInput, TOutput>.Invoke(TInput)", file="DiscriminatedUnionConverterTests.cs"];
m0_44 [label="Entry Newtonsoft.Json.Tests.TestObjects.Shape.NewCircle(double)", span="60-60", cluster="Newtonsoft.Json.Tests.TestObjects.Shape.NewCircle(double)", file="DiscriminatedUnionConverterTests.cs"];
m0_101 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.UnionCase.UnionCase()", span="178-178", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.UnionCase.UnionCase()", file="DiscriminatedUnionConverterTests.cs"];
m0_30 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="512-512", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="DiscriminatedUnionConverterTests.cs"];
m0_170 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithTypeNameHandlingAndReferenceTracking()", span="282-282", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithTypeNameHandlingAndReferenceTracking()", file="DiscriminatedUnionConverterTests.cs"];
m0_171 [label="string json = JsonConvert.SerializeObject(Shape.NewRectangle(10.0, 5.0), new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.All,\r\n                TypeNameHandling = TypeNameHandling.All\r\n            })", span="284-288", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithTypeNameHandlingAndReferenceTracking()", file="DiscriminatedUnionConverterTests.cs"];
m0_172 [label="Assert.AreEqual(@''{''''Case'''':''''Rectangle'''',''''Fields'''':[10.0,5.0]}'', json)", span="290-290", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithTypeNameHandlingAndReferenceTracking()", file="DiscriminatedUnionConverterTests.cs"];
m0_173 [label="Shape c = JsonConvert.DeserializeObject<Shape>(json)", span="292-292", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithTypeNameHandlingAndReferenceTracking()", file="DiscriminatedUnionConverterTests.cs"];
m0_174 [label="Assert.AreEqual(true, c.IsRectangle)", span="293-293", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithTypeNameHandlingAndReferenceTracking()", file="DiscriminatedUnionConverterTests.cs"];
m0_175 [label="Shape.Rectangle r = (Shape.Rectangle)c", span="295-295", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithTypeNameHandlingAndReferenceTracking()", file="DiscriminatedUnionConverterTests.cs"];
m0_176 [label="Assert.AreEqual(5.0, r.length)", span="297-297", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithTypeNameHandlingAndReferenceTracking()", file="DiscriminatedUnionConverterTests.cs"];
m0_177 [label="Assert.AreEqual(10.0, r.width)", span="298-298", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithTypeNameHandlingAndReferenceTracking()", file="DiscriminatedUnionConverterTests.cs"];
m0_178 [label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithTypeNameHandlingAndReferenceTracking()", span="282-282", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithTypeNameHandlingAndReferenceTracking()", file="DiscriminatedUnionConverterTests.cs"];
m0_179 [label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="382-382", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="DiscriminatedUnionConverterTests.cs"];
m0_181 [label="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests", span="", file="DiscriminatedUnionConverterTests.cs"];
m0_182 [label=tag, span="", file="DiscriminatedUnionConverterTests.cs"];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n1 -> n14  [key=2, style=dotted];
n1 -> n3  [key=1, style=dashed, color=darkseagreen4, label=person];
n1 -> n4  [key=1, style=dashed, color=darkseagreen4, label=person];
n1 -> n5  [key=1, style=dashed, color=darkseagreen4, label=person];
n1 -> n8  [key=1, style=dashed, color=darkseagreen4, label=person];
n1 -> n9  [key=1, style=dashed, color=darkseagreen4, label=person];
n1 -> n10  [key=1, style=dashed, color=darkseagreen4, label=person];
n1 -> n11  [key=1, style=dashed, color=darkseagreen4, label=person];
n2 -> n3  [key=0, style=solid];
n2 -> n15  [key=2, style=dotted];
n2 -> n5  [key=3, color=darkorchid, style=bold, label="Field variable XmlReader _reader"];
n3 -> n4  [key=0, style=solid];
n3 -> n15  [key=2, style=dotted];
n4 -> n5  [key=0, style=solid];
n5 -> n6  [key=0, style=solid];
n5 -> n16  [key=2, style=dotted];
n5 -> n17  [key=2, style=dotted];
n5 -> n18  [key=2, style=dotted];
n5 -> n7  [key=1, style=dashed, color=darkseagreen4, label=json];
n8 -> n9  [key=0, style=solid];
n8 -> n21  [key=2, style=dotted];
n9 -> n10  [key=0, style=solid];
n9 -> n21  [key=2, style=dotted];
n10 -> n11  [key=0, style=solid];
n10 -> n21  [key=2, style=dotted];
n11 -> n12  [key=0, style=solid];
n11 -> n22  [key=2, style=dotted];
n6 -> n7  [key=0, style=solid];
n6 -> n19  [key=2, style=dotted];
n6 -> n6  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Linq.JTokenType PeekState"];
n7 -> n8  [key=0, style=solid];
n7 -> n16  [key=2, style=dotted];
n7 -> n17  [key=2, style=dotted];
n7 -> n20  [key=2, style=dotted];
n7 -> n9  [key=1, style=dashed, color=darkseagreen4, label=deserializedPerson];
n7 -> n10  [key=1, style=dashed, color=darkseagreen4, label=deserializedPerson];
n12 -> n13  [key=0, style=solid];
n12 -> n19  [key=2, style=dotted];
n13 -> n0  [key=0, style=bold, color=blue];
n23 -> n24  [key=0, style=solid];
n24 -> n25  [key=0, style=solid];
n24 -> n36  [key=2, style=dotted];
n24 -> n29  [key=1, style=dashed, color=darkseagreen4, label=ignoreAttributeOnClassTestClass];
n25 -> n26  [key=0, style=solid];
n29 -> n30  [key=0, style=solid];
n29 -> n39  [key=2, style=dotted];
n26 -> n27  [key=0, style=solid];
n26 -> n37  [key=2, style=dotted];
n26 -> n29  [key=1, style=dashed, color=darkseagreen4, label=serializer];
n27 -> n28  [key=0, style=solid];
n27 -> n17  [key=2, style=dotted];
n28 -> n29  [key=0, style=solid];
n28 -> n38  [key=2, style=dotted];
n28 -> n30  [key=1, style=dashed, color=darkseagreen4, label=writer];
n30 -> n31  [key=0, style=solid];
n30 -> n34  [key=1, style=dashed, color=darkseagreen4, label=o];
n31 -> n32  [key=0, style=solid];
n31 -> n40  [key=2, style=dotted];
n31 -> n33  [key=1, style=dashed, color=darkseagreen4, label=p];
n34 -> n35  [key=0, style=solid];
n34 -> n42  [key=2, style=dotted];
n32 -> n33  [key=0, style=solid];
n32 -> n41  [key=2, style=dotted];
n33 -> n34  [key=0, style=solid];
n33 -> n21  [key=2, style=dotted];
n35 -> n23  [key=0, style=bold, color=blue];
n43 -> n44  [key=0, style=solid];
n44 -> n45  [key=0, style=solid];
n44 -> n52  [key=2, style=dotted];
n45 -> n46  [key=0, style=solid];
n45 -> n16  [key=2, style=dotted];
n45 -> n17  [key=2, style=dotted];
n45 -> n18  [key=2, style=dotted];
n46 -> n47  [key=0, style=solid];
n46 -> n19  [key=2, style=dotted];
n47 -> n48  [key=0, style=solid];
n47 -> n16  [key=2, style=dotted];
n47 -> n17  [key=2, style=dotted];
n47 -> n20  [key=2, style=dotted];
n47 -> n49  [key=1, style=dashed, color=darkseagreen4, label=deserializedPrivateMembersClass];
n47 -> n50  [key=1, style=dashed, color=darkseagreen4, label=deserializedPrivateMembersClass];
n48 -> n49  [key=0, style=solid];
n48 -> n53  [key=2, style=dotted];
n48 -> n54  [key=2, style=dotted];
n48 -> n21  [key=2, style=dotted];
n49 -> n50  [key=0, style=solid];
n49 -> n53  [key=2, style=dotted];
n49 -> n54  [key=2, style=dotted];
n49 -> n21  [key=2, style=dotted];
n50 -> n51  [key=0, style=solid];
n50 -> n53  [key=2, style=dotted];
n50 -> n54  [key=2, style=dotted];
n50 -> n21  [key=2, style=dotted];
n51 -> n43  [key=0, style=bold, color=blue];
n55 -> n56  [key=0, style=solid, color=red];
n56 -> n57  [key=0, style=solid, color=red];
n56 -> n60  [key=2, style=dotted, color=red];
n56 -> n15  [key=2, style=dotted, color=red];
n57 -> n58  [key=0, style=solid];
n57 -> n16  [key=2, style=dotted];
n57 -> n17  [key=2, style=dotted];
n57 -> n18  [key=2, style=dotted];
n58 -> n59  [key=0, style=solid];
n58 -> n19  [key=2, style=dotted];
n59 -> n55  [key=0, style=bold, color=blue];
n61 -> n62  [key=0, style=solid];
n62 -> n63  [key=0, style=solid];
n62 -> n68  [key=2, style=dotted];
n62 -> n64  [key=1, style=dashed, color=darkseagreen4, label=o];
n62 -> n65  [key=1, style=dashed, color=darkseagreen4, label=o];
n63 -> n64  [key=0, style=solid];
n64 -> n65  [key=0, style=solid];
n65 -> n66  [key=0, style=solid];
n65 -> n16  [key=2, style=dotted];
n65 -> n17  [key=2, style=dotted];
n65 -> n18  [key=2, style=dotted];
n66 -> n67  [key=0, style=solid];
n66 -> n19  [key=2, style=dotted];
n66 -> n66  [key=3, color=darkorchid, style=bold, label="method methodReturn int? ReadAsInt32"];
n67 -> n61  [key=0, style=bold, color=blue];
n69 -> n70  [key=0, style=solid];
n70 -> n71  [key=0, style=solid];
n70 -> n74  [key=2, style=dotted];
n71 -> n72  [key=0, style=solid];
n71 -> n16  [key=2, style=dotted];
n71 -> n17  [key=2, style=dotted];
n71 -> n18  [key=2, style=dotted];
n72 -> n73  [key=0, style=solid];
n72 -> n19  [key=2, style=dotted];
n72 -> n66  [key=3, color=darkorchid, style=bold, label="method methodReturn decimal? ReadAsDecimal"];
n73 -> n69  [key=0, style=bold, color=blue];
m0_50 -> m0_51  [key=0, style=solid];
m0_51 -> m0_52  [key=0, style=solid];
m0_51 -> m0_57  [key=1, style=dashed, color=darkseagreen4, label=json];
m0_51 -> m0_51  [key=3, color=green, style=bold, label="Local variable string json"];
m0_52 -> m0_53  [key=0, style=solid];
m0_52 -> m0_62  [key=2, style=dotted];
m0_57 -> m0_58  [key=0, style=solid, color=green];
m0_57 -> m0_62  [key=2, style=dotted];
m0_53 -> m0_54  [key=0, style=solid];
m0_53 -> m0_46  [key=2, style=dotted];
m0_53 -> m0_59  [key=1, style=dashed, color=darkseagreen4, label=ts];
m0_53 -> m0_60  [key=1, style=dashed, color=darkseagreen4, label=ts];
m0_54 -> m0_55  [key=0, style=solid, color=green];
m0_54 -> m0_47  [key=2, style=dotted];
m0_59 -> m0_60  [key=0, style=solid];
m0_59 -> m0_48  [key=2, style=dotted];
m0_60 -> m0_61  [key=0, style=solid];
m0_60 -> m0_49  [key=2, style=dotted];
m0_55 -> m0_56  [key=0, style=solid, color=green];
m0_55 -> m0_58  [key=1, style=dashed, color=green, label=i];
m0_55 -> m0_36  [key=3, color=green, style=bold, label="Local variable int i"];
m0_56 -> m0_57  [key=0, style=solid, color=green];
m0_56 -> m0_59  [key=0, style=solid, color=green];
m0_58 -> m0_56  [key=0, style=solid, color=green];
m0_58 -> m0_58  [key=1, style=dashed, color=green, label=i];
m0_61 -> m0_50  [key=0, style=bold, color=blue];
m0_75 -> m0_76  [key=0, style=solid];
m0_76 -> m0_77  [key=0, style=solid];
m0_76 -> m0_62  [key=2, style=dotted];
m0_76 -> m0_78  [key=1, style=dashed, color=darkseagreen4, label=c];
m0_77 -> m0_78  [key=0, style=solid];
m0_77 -> m0_24  [key=2, style=dotted];
m0_78 -> m0_79  [key=0, style=solid];
m0_78 -> m0_80  [key=1, style=dashed, color=darkseagreen4, label=r];
m0_79 -> m0_80  [key=0, style=solid];
m0_79 -> m0_24  [key=2, style=dotted];
m0_80 -> m0_81  [key=0, style=solid];
m0_80 -> m0_24  [key=2, style=dotted];
m0_81 -> m0_75  [key=0, style=bold, color=blue];
m0_26 -> m0_27  [key=0, style=solid];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_30  [key=2, style=dotted];
m0_28 -> m0_29  [key=0, style=solid];
m0_28 -> m0_24  [key=2, style=dotted];
m0_29 -> m0_26  [key=0, style=bold, color=blue];
m0_152 -> m0_153  [key=0, style=solid];
m0_153 -> m0_154  [key=0, style=solid];
m0_153 -> m0_136  [key=2, style=dotted];
m0_153 -> m0_155  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_154 -> m0_152  [key=0, style=bold, color=blue];
m0_121 -> m0_122  [key=0, style=solid];
m0_122 -> m0_123  [key=0, style=solid];
m0_122 -> m0_82  [key=2, style=dotted];
m0_123 -> m0_124  [key=0, style=solid];
m0_123 -> m0_117  [key=2, style=dotted];
m0_123 -> m0_130  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_124 -> m0_125  [key=0, style=solid];
m0_124 -> m0_116  [key=2, style=dotted];
m0_124 -> m0_126  [key=1, style=dashed, color=darkseagreen4, label=value];
m0_124 -> m0_127  [key=1, style=dashed, color=darkseagreen4, label=value];
m0_125 -> m0_126  [key=0, style=solid];
m0_125 -> m0_129  [key=2, style=dotted];
m0_125 -> m0_24  [key=2, style=dotted];
m0_126 -> m0_127  [key=0, style=solid];
m0_126 -> m0_24  [key=2, style=dotted];
m0_127 -> m0_128  [key=0, style=solid];
m0_127 -> m0_24  [key=2, style=dotted];
m0_128 -> m0_121  [key=0, style=bold, color=blue];
m0_63 -> m0_64  [key=0, style=solid];
m0_64 -> m0_65  [key=0, style=solid];
m0_64 -> m0_21  [key=2, style=dotted];
m0_64 -> m0_30  [key=2, style=dotted];
m0_65 -> m0_66  [key=0, style=solid];
m0_65 -> m0_24  [key=2, style=dotted];
m0_66 -> m0_63  [key=0, style=bold, color=blue];
m0_133 -> m0_134  [key=0, style=solid];
m0_134 -> m0_135  [key=0, style=solid];
m0_134 -> m0_136  [key=2, style=dotted];
m0_134 -> m0_137  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_135 -> m0_133  [key=0, style=bold, color=blue];
m0_164 -> m0_165  [key=0, style=solid];
m0_165 -> m0_166  [key=0, style=solid];
m0_165 -> m0_136  [key=2, style=dotted];
m0_165 -> m0_167  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_166 -> m0_164  [key=0, style=bold, color=blue];
m0_158 -> m0_159  [key=0, style=solid];
m0_159 -> m0_160  [key=0, style=solid];
m0_159 -> m0_136  [key=2, style=dotted];
m0_159 -> m0_161  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_160 -> m0_158  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_0 -> m0_2  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_1 -> m0_2  [key=0, style=solid];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_4  [key=2, style=dotted];
m0_3 -> m0_0  [key=0, style=bold, color=blue];
m0_106 -> m0_107  [key=0, style=solid];
m0_107 -> m0_108  [key=0, style=solid];
m0_107 -> m0_21  [key=2, style=dotted];
m0_107 -> m0_109  [key=1, style=dashed, color=darkseagreen4, label=value];
m0_107 -> m0_111  [key=1, style=dashed, color=darkseagreen4, label=value];
m0_108 -> m0_109  [key=0, style=solid];
m0_108 -> m0_115  [key=2, style=dotted];
m0_108 -> m0_82  [key=2, style=dotted];
m0_108 -> m0_110  [key=1, style=dashed, color=darkseagreen4, label=union];
m0_109 -> m0_110  [key=0, style=solid];
m0_109 -> m0_116  [key=2, style=dotted];
m0_109 -> m0_119  [key=1, style=dashed, color=darkseagreen4, label=tag];
m0_111 -> m0_112  [key=0, style=solid];
m0_111 -> m0_116  [key=2, style=dotted];
m0_111 -> m0_113  [key=1, style=dashed, color=darkseagreen4, label=fields];
m0_110 -> m0_111  [key=0, style=solid];
m0_110 -> m0_117  [key=2, style=dotted];
m0_110 -> m0_118  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_112 -> m0_113  [key=0, style=solid];
m0_112 -> m0_24  [key=2, style=dotted];
m0_113 -> m0_114  [key=0, style=solid];
m0_113 -> m0_24  [key=2, style=dotted];
m0_114 -> m0_106  [key=0, style=bold, color=blue];
m0_167 -> m0_168  [key=0, style=solid];
m0_119 -> m0_120  [key=0, style=solid];
m0_118 -> m0_119  [key=0, style=solid];
m0_120 -> m0_118  [key=0, style=bold, color=blue];
m0_130 -> m0_131  [key=0, style=solid];
m0_131 -> m0_132  [key=0, style=solid];
m0_132 -> m0_130  [key=0, style=bold, color=blue];
m0_137 -> m0_138  [key=0, style=solid];
m0_138 -> m0_139  [key=0, style=solid];
m0_138 -> m0_62  [key=2, style=dotted];
m0_139 -> m0_137  [key=0, style=bold, color=blue];
m0_143 -> m0_144  [key=0, style=solid];
m0_144 -> m0_145  [key=0, style=solid];
m0_144 -> m0_62  [key=2, style=dotted];
m0_145 -> m0_143  [key=0, style=bold, color=blue];
m0_149 -> m0_150  [key=0, style=solid];
m0_150 -> m0_151  [key=0, style=solid];
m0_150 -> m0_62  [key=2, style=dotted];
m0_151 -> m0_149  [key=0, style=bold, color=blue];
m0_155 -> m0_156  [key=0, style=solid];
m0_156 -> m0_157  [key=0, style=solid];
m0_156 -> m0_62  [key=2, style=dotted];
m0_157 -> m0_155  [key=0, style=bold, color=blue];
m0_161 -> m0_162  [key=0, style=solid];
m0_162 -> m0_163  [key=0, style=solid];
m0_162 -> m0_62  [key=2, style=dotted];
m0_163 -> m0_161  [key=0, style=bold, color=blue];
m0_168 -> m0_169  [key=0, style=solid];
m0_168 -> m0_62  [key=2, style=dotted];
m0_169 -> m0_167  [key=0, style=bold, color=blue];
m0_5 -> m0_6  [key=0, style=solid];
m0_6 -> m0_7  [key=0, style=solid];
m0_7 -> m0_8  [key=0, style=solid];
m0_8 -> m0_5  [key=0, style=bold, color=blue];
m0_9 -> m0_10  [key=0, style=solid];
m0_10 -> m0_11  [key=0, style=solid];
m0_11 -> m0_9  [key=0, style=bold, color=blue];
m0_140 -> m0_141  [key=0, style=solid];
m0_141 -> m0_142  [key=0, style=solid];
m0_141 -> m0_136  [key=2, style=dotted];
m0_141 -> m0_143  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_142 -> m0_140  [key=0, style=bold, color=blue];
m0_12 -> m0_13  [key=0, style=solid];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_21  [key=2, style=dotted];
m0_13 -> m0_22  [key=2, style=dotted];
m0_13 -> m0_23  [key=2, style=dotted];
m0_13 -> m0_15  [key=1, style=dashed, color=darkseagreen4, label=json];
m0_14 -> m0_15  [key=0, style=solid];
m0_14 -> m0_24  [key=2, style=dotted];
m0_15 -> m0_16  [key=0, style=solid];
m0_15 -> m0_22  [key=2, style=dotted];
m0_15 -> m0_25  [key=2, style=dotted];
m0_15 -> m0_17  [key=1, style=dashed, color=darkseagreen4, label=c];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_24  [key=2, style=dotted];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_19  [key=1, style=dashed, color=darkseagreen4, label=r];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_24  [key=2, style=dotted];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_24  [key=2, style=dotted];
m0_20 -> m0_12  [key=0, style=bold, color=blue];
m0_31 -> m0_32  [key=0, style=solid];
m0_32 -> m0_33  [key=0, style=solid];
m0_32 -> m0_43  [key=2, style=dotted];
m0_32 -> m0_21  [key=2, style=dotted];
m0_32 -> m0_44  [key=2, style=dotted];
m0_32 -> m0_38  [key=1, style=dashed, color=darkseagreen4, label=values];
m0_33 -> m0_34  [key=0, style=solid];
m0_33 -> n22  [key=2, style=dotted];
m0_38 -> m0_39  [key=0, style=solid, color=green];
m0_38 -> m0_30  [key=2, style=dotted];
m0_34 -> m0_35  [key=0, style=solid];
m0_34 -> m0_46  [key=2, style=dotted];
m0_34 -> m0_40  [key=1, style=dashed, color=darkseagreen4, label=ts];
m0_34 -> m0_41  [key=1, style=dashed, color=darkseagreen4, label=ts];
m0_35 -> m0_36  [key=0, style=solid, color=green];
m0_35 -> m0_47  [key=2, style=dotted];
m0_40 -> m0_41  [key=0, style=solid];
m0_40 -> m0_48  [key=2, style=dotted];
m0_41 -> m0_42  [key=0, style=solid];
m0_41 -> m0_49  [key=2, style=dotted];
m0_36 -> m0_37  [key=0, style=solid, color=green];
m0_36 -> m0_39  [key=1, style=dashed, color=green, label=i];
m0_36 -> m0_36  [key=3, color=green, style=bold, label="Local variable int i"];
m0_37 -> m0_38  [key=0, style=solid, color=green];
m0_37 -> m0_40  [key=0, style=solid, color=green];
m0_39 -> m0_37  [key=0, style=solid, color=green];
m0_39 -> m0_39  [key=1, style=dashed, color=green, label=i];
m0_42 -> m0_31  [key=0, style=bold, color=blue];
m0_67 -> m0_68  [key=0, style=solid];
m0_68 -> m0_69  [key=0, style=solid];
m0_68 -> m0_62  [key=2, style=dotted];
m0_69 -> m0_70  [key=0, style=solid];
m0_69 -> m0_24  [key=2, style=dotted];
m0_70 -> m0_71  [key=0, style=solid];
m0_70 -> m0_62  [key=2, style=dotted];
m0_71 -> m0_72  [key=0, style=solid];
m0_71 -> m0_24  [key=2, style=dotted];
m0_72 -> m0_73  [key=0, style=solid];
m0_72 -> m0_62  [key=2, style=dotted];
m0_73 -> m0_74  [key=0, style=solid];
m0_73 -> m0_24  [key=2, style=dotted];
m0_74 -> m0_67  [key=0, style=bold, color=blue];
m0_82 -> m0_83  [key=0, style=solid];
m0_82 -> m0_84  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_82 -> m0_86  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_83 -> m0_84  [key=0, style=solid];
m0_83 -> m0_97  [key=2, style=dotted];
m0_83 -> m0_85  [key=1, style=dashed, color=darkseagreen4, label=u];
m0_83 -> m0_94  [key=1, style=dashed, color=darkseagreen4, label=u];
m0_83 -> m0_95  [key=1, style=dashed, color=darkseagreen4, label=u];
m0_84 -> m0_85  [key=0, style=solid];
m0_84 -> m0_98  [key=2, style=dotted];
m0_84 -> m0_99  [key=2, style=dotted];
m0_86 -> m0_87  [key=0, style=solid];
m0_86 -> m0_100  [key=2, style=dotted];
m0_85 -> m0_86  [key=0, style=solid];
m0_85 -> m0_43  [key=2, style=dotted];
m0_94 -> m0_87  [key=0, style=solid];
m0_94 -> m0_105  [key=2, style=dotted];
m0_95 -> m0_96  [key=0, style=solid];
m0_87 -> m0_88  [key=0, style=solid];
m0_87 -> m0_95  [key=0, style=solid];
m0_87 -> m0_89  [key=1, style=dashed, color=darkseagreen4, label=unionCaseInfo];
m0_87 -> m0_90  [key=1, style=dashed, color=darkseagreen4, label=unionCaseInfo];
m0_87 -> m0_91  [key=1, style=dashed, color=darkseagreen4, label=unionCaseInfo];
m0_87 -> m0_92  [key=1, style=dashed, color=darkseagreen4, label=unionCaseInfo];
m0_87 -> m0_93  [key=1, style=dashed, color=darkseagreen4, label=unionCaseInfo];
m0_88 -> m0_89  [key=0, style=solid];
m0_88 -> m0_101  [key=2, style=dotted];
m0_88 -> m0_90  [key=1, style=dashed, color=darkseagreen4, label=unionCase];
m0_88 -> m0_91  [key=1, style=dashed, color=darkseagreen4, label=unionCase];
m0_88 -> m0_92  [key=1, style=dashed, color=darkseagreen4, label=unionCase];
m0_88 -> m0_93  [key=1, style=dashed, color=darkseagreen4, label=unionCase];
m0_88 -> m0_94  [key=1, style=dashed, color=darkseagreen4, label=unionCase];
m0_89 -> m0_90  [key=0, style=solid];
m0_90 -> m0_91  [key=0, style=solid];
m0_91 -> m0_92  [key=0, style=solid];
m0_91 -> m0_102  [key=2, style=dotted];
m0_92 -> m0_93  [key=0, style=solid];
m0_92 -> m0_103  [key=2, style=dotted];
m0_92 -> m0_99  [key=2, style=dotted];
m0_93 -> m0_94  [key=0, style=solid];
m0_93 -> m0_104  [key=2, style=dotted];
m0_93 -> m0_99  [key=2, style=dotted];
m0_96 -> m0_82  [key=0, style=bold, color=blue];
m0_146 -> m0_147  [key=0, style=solid];
m0_147 -> m0_148  [key=0, style=solid];
m0_147 -> m0_136  [key=2, style=dotted];
m0_147 -> m0_149  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_148 -> m0_146  [key=0, style=bold, color=blue];
m0_170 -> m0_171  [key=0, style=solid];
m0_171 -> m0_172  [key=0, style=solid];
m0_171 -> m0_21  [key=2, style=dotted];
m0_171 -> m0_179  [key=2, style=dotted];
m0_171 -> m0_180  [key=2, style=dotted];
m0_171 -> m0_173  [key=1, style=dashed, color=darkseagreen4, label=json];
m0_172 -> m0_173  [key=0, style=solid];
m0_172 -> m0_24  [key=2, style=dotted];
m0_173 -> m0_174  [key=0, style=solid];
m0_173 -> m0_62  [key=2, style=dotted];
m0_173 -> m0_175  [key=1, style=dashed, color=darkseagreen4, label=c];
m0_174 -> m0_175  [key=0, style=solid];
m0_174 -> m0_24  [key=2, style=dotted];
m0_175 -> m0_176  [key=0, style=solid];
m0_175 -> m0_177  [key=1, style=dashed, color=darkseagreen4, label=r];
m0_176 -> m0_177  [key=0, style=solid];
m0_176 -> m0_24  [key=2, style=dotted];
m0_177 -> m0_178  [key=0, style=solid];
m0_177 -> m0_24  [key=2, style=dotted];
m0_178 -> m0_170  [key=0, style=bold, color=blue];
m0_181 -> m0_108  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests"];
m0_181 -> m0_122  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests"];
m0_182 -> m0_119  [key=1, style=dashed, color=darkseagreen4, label=tag];
}
