digraph  {
n0 [cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JsonConvertSerializerSettings()", label="Entry Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JsonConvertSerializerSettings()", span="47-47"];
n1 [cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JsonConvertSerializerSettings()", label="Person person = new Person()", span="49-49"];
n2 [cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JsonConvertSerializerSettings()", label="person.BirthDate = new DateTime(2000, 11, 20, 23, 55, 44, DateTimeKind.Utc)", span="50-50"];
n14 [cluster="Newtonsoft.Json.Tests.TestObjects.Organization.Person.Person()", label="Entry Newtonsoft.Json.Tests.TestObjects.Organization.Person.Person()", span="34-34"];
n3 [cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JsonConvertSerializerSettings()", label="person.LastModified = new DateTime(2000, 11, 20, 23, 55, 44, DateTimeKind.Utc)", span="51-51"];
n4 [cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JsonConvertSerializerSettings()", label="person.Name = ''Name!''", span="52-52"];
n5 [cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JsonConvertSerializerSettings()", label="string json = JsonConvert.SerializeObject(person, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new CamelCasePropertyNamesContractResolver()\r\n            })", span="54-57"];
n8 [cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JsonConvertSerializerSettings()", label="Assert.AreEqual(person.BirthDate, deserializedPerson.BirthDate)", span="70-70"];
n9 [cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JsonConvertSerializerSettings()", label="Assert.AreEqual(person.LastModified, deserializedPerson.LastModified)", span="71-71"];
n10 [cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JsonConvertSerializerSettings()", label="Assert.AreEqual(person.Name, deserializedPerson.Name)", span="72-72"];
n11 [cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JsonConvertSerializerSettings()", label="json = JsonConvert.SerializeObject(person, Formatting.Indented)", span="74-74"];
n15 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
n6 [cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JsonConvertSerializerSettings()", label="StringAssert.AreEqual(@''{\r\n  ''''name'''': ''''Name!'''',\r\n  ''''birthDate'''': ''''2000-11-20T23:55:44Z'''',\r\n  ''''lastModified'''': ''''2000-11-20T23:55:44Z''''\r\n}'', json)", span="59-63"];
n16 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="429-429"];
n17 [cluster="Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver.CamelCasePropertyNamesContractResolver()", label="Entry Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver.CamelCasePropertyNamesContractResolver()", span="38-38"];
n18 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="621-621"];
n7 [cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JsonConvertSerializerSettings()", label="Person deserializedPerson = JsonConvert.DeserializeObject<Person>(json, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new CamelCasePropertyNamesContractResolver()\r\n            })", span="65-68"];
n19 [cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="328-328"];
n20 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="817-817"];
n21 [cluster="Unk.AreEqual", label="Entry Unk.AreEqual", span=""];
n12 [cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JsonConvertSerializerSettings()", label="StringAssert.AreEqual(@''{\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''BirthDate'''': ''''2000-11-20T23:55:44Z'''',\r\n  ''''LastModified'''': ''''2000-11-20T23:55:44Z''''\r\n}'', json)", span="75-79"];
n22 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="540-540"];
n13 [cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JsonConvertSerializerSettings()", label="Exit Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JsonConvertSerializerSettings()", span="47-47"];
n23 [cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JTokenWriter()", label="Entry Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JTokenWriter()", span="83-83"];
n24 [cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JTokenWriter()", label="JsonIgnoreAttributeOnClassTestClass ignoreAttributeOnClassTestClass = new JsonIgnoreAttributeOnClassTestClass()", span="85-85"];
n25 [cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JTokenWriter()", label="ignoreAttributeOnClassTestClass.Field = int.MinValue", span="86-86"];
n36 [cluster="Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeOnClassTestClass.JsonIgnoreAttributeOnClassTestClass()", label="Entry Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeOnClassTestClass.JsonIgnoreAttributeOnClassTestClass()", span="28-28"];
n29 [cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JTokenWriter()", label="serializer.Serialize(writer, ignoreAttributeOnClassTestClass)", span="93-93"];
n26 [cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JTokenWriter()", label="JsonSerializer serializer = new JsonSerializer()", span="88-88"];
n27 [cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JTokenWriter()", label="serializer.ContractResolver = new CamelCasePropertyNamesContractResolver()", span="89-89"];
n37 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="530-530"];
n28 [cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JTokenWriter()", label="JTokenWriter writer = new JTokenWriter()", span="91-91"];
n38 [cluster="Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", label="Entry Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", span="85-85"];
n30 [cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JTokenWriter()", label="JObject o = (JObject)writer.Token", span="95-95"];
n39 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="1042-1042"];
n31 [cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JTokenWriter()", label="JProperty p = o.Property(''theField'')", span="96-96"];
n34 [cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JTokenWriter()", label="string json = o.ToString()", span="101-101"];
n32 [cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JTokenWriter()", label="Assert.IsNotNull(p)", span="98-98"];
n40 [cluster="Newtonsoft.Json.Linq.JObject.Property(string)", label="Entry Newtonsoft.Json.Linq.JObject.Property(string)", span="258-258"];
n33 [cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JTokenWriter()", label="Assert.AreEqual(int.MinValue, (int)p.Value)", span="99-99"];
n41 [cluster="Unk.IsNotNull", label="Entry Unk.IsNotNull", span=""];
n35 [cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JTokenWriter()", label="Exit Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.JTokenWriter()", span="83-83"];
n42 [cluster="Newtonsoft.Json.Linq.JToken.ToString()", label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="422-422"];
n43 [cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.MemberSearchFlags()", label="Entry Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.MemberSearchFlags()", span="107-107"];
n44 [cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.MemberSearchFlags()", label="PrivateMembersClass privateMembersClass = new PrivateMembersClass(''PrivateString!'', ''InternalString!'')", span="109-109"];
n45 [cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.MemberSearchFlags()", label="string json = JsonConvert.SerializeObject(privateMembersClass, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new CamelCasePropertyNamesContractResolver { DefaultMembersSearchFlags = BindingFlags.NonPublic | BindingFlags.Instance }\r\n            })", span="111-114"];
n52 [cluster="Newtonsoft.Json.Tests.TestObjects.PrivateMembersClass.PrivateMembersClass(string, string)", label="Entry Newtonsoft.Json.Tests.TestObjects.PrivateMembersClass.PrivateMembersClass(string, string)", span="29-29"];
n46 [cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.MemberSearchFlags()", label="StringAssert.AreEqual(@''{\r\n  ''''_privateString'''': ''''PrivateString!'''',\r\n  ''''i'''': 0,\r\n  ''''_internalString'''': ''''InternalString!''''\r\n}'', json)", span="116-120"];
n47 [cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.MemberSearchFlags()", label="PrivateMembersClass deserializedPrivateMembersClass = JsonConvert.DeserializeObject<PrivateMembersClass>(@''{\r\n  ''''_privateString'''': ''''Private!'''',\r\n  ''''i'''': -2,\r\n  ''''_internalString'''': ''''Internal!''''\r\n}'', new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new CamelCasePropertyNamesContractResolver { DefaultMembersSearchFlags = BindingFlags.NonPublic | BindingFlags.Instance }\r\n            })", span="122-129"];
n48 [cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.MemberSearchFlags()", label="Assert.AreEqual(''Private!'', ReflectionUtils.GetMemberValue(typeof(PrivateMembersClass).GetField(''_privateString'', BindingFlags.Instance | BindingFlags.NonPublic), deserializedPrivateMembersClass))", span="131-131"];
n49 [cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.MemberSearchFlags()", label="Assert.AreEqual(''Internal!'', ReflectionUtils.GetMemberValue(typeof(PrivateMembersClass).GetField(''_internalString'', BindingFlags.Instance | BindingFlags.NonPublic), deserializedPrivateMembersClass))", span="132-132"];
n50 [cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.MemberSearchFlags()", label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(PrivateMembersClass).GetField(''i'', BindingFlags.Instance | BindingFlags.NonPublic), deserializedPrivateMembersClass))", span="135-135"];
n53 [cluster="System.Type.GetField(string, System.Reflection.BindingFlags)", label="Entry System.Type.GetField(string, System.Reflection.BindingFlags)", span="0-0"];
n54 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", span="507-507"];
n51 [cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.MemberSearchFlags()", label="Exit Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.MemberSearchFlags()", span="107-107"];
n55 [cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.BlogPostExample()", label="Entry Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.BlogPostExample()", span="141-141"];
n57 [cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.BlogPostExample()", label="string json =\r\n                JsonConvert.SerializeObject(\r\n                    product,\r\n                    Formatting.Indented,\r\n                    new JsonSerializerSettings { ContractResolver = new CamelCasePropertyNamesContractResolver() }\r\n                    )", span="151-156"];
n60 [cluster="Newtonsoft.Json.Tests.TestObjects.Product.Product()", label="Entry Newtonsoft.Json.Tests.TestObjects.Product.Product()", span="29-29"];
n58 [cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.BlogPostExample()", label="StringAssert.AreEqual(@''{\r\n  ''''name'''': ''''Widget'''',\r\n  ''''expiryDate'''': ''''2010-12-20T18:01:00Z'''',\r\n  ''''price'''': 9.99,\r\n  ''''sizes'''': [\r\n    ''''Small'''',\r\n    ''''Medium'''',\r\n    ''''Large''''\r\n  ]\r\n}'', json)", span="169-178"];
n59 [cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.BlogPostExample()", label="Exit Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.BlogPostExample()", span="141-141"];
n61 [cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.DynamicCamelCasePropertyNames()", label="Entry Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.DynamicCamelCasePropertyNames()", span="183-183"];
n62 [cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.DynamicCamelCasePropertyNames()", label="dynamic o = new TestDynamicObject()", span="185-185"];
n63 [cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.DynamicCamelCasePropertyNames()", label="o.Text = ''Text!''", span="186-186"];
n68 [cluster="Newtonsoft.Json.Tests.Serialization.TestDynamicObject.TestDynamicObject()", label="Entry Newtonsoft.Json.Tests.Serialization.TestDynamicObject.TestDynamicObject()", span="344-344"];
n64 [cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.DynamicCamelCasePropertyNames()", label="o.Integer = int.MaxValue", span="187-187"];
n65 [cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.DynamicCamelCasePropertyNames()", label="string json = JsonConvert.SerializeObject(o, Formatting.Indented,\r\n                new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new CamelCasePropertyNamesContractResolver()\r\n                })", span="189-193"];
n66 [cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.DynamicCamelCasePropertyNames()", label="StringAssert.AreEqual(@''{\r\n  ''''explicit'''': false,\r\n  ''''text'''': ''''Text!'''',\r\n  ''''integer'''': 2147483647,\r\n  ''''int'''': 0,\r\n  ''''childObject'''': null\r\n}'', json)", span="195-201"];
n67 [cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.DynamicCamelCasePropertyNames()", label="Exit Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.DynamicCamelCasePropertyNames()", span="183-183"];
n69 [cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.DictionaryCamelCasePropertyNames()", label="Entry Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.DictionaryCamelCasePropertyNames()", span="206-206"];
n70 [cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.DictionaryCamelCasePropertyNames()", label="Dictionary<string, string> values = new Dictionary<string, string>\r\n            {\r\n                { ''First'', ''Value1!'' },\r\n                { ''Second'', ''Value2!'' }\r\n            }", span="208-212"];
n71 [cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.DictionaryCamelCasePropertyNames()", label="string json = JsonConvert.SerializeObject(values, Formatting.Indented,\r\n                new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new CamelCasePropertyNamesContractResolver()\r\n                })", span="214-218"];
n74 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
n72 [cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.DictionaryCamelCasePropertyNames()", label="StringAssert.AreEqual(@''{\r\n  ''''first'''': ''''Value1!'''',\r\n  ''''second'''': ''''Value2!''''\r\n}'', json)", span="220-223"];
n73 [cluster="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.DictionaryCamelCasePropertyNames()", label="Exit Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests.DictionaryCamelCasePropertyNames()", span="206-206"];
m0_50 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializePerformance()", file="DiscriminatedUnionConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializePerformance()", span="114-114"];
m0_51 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializePerformance()", file="DiscriminatedUnionConverterTests.cs", label="string json = @''[\r\n  {''''Case'''':''''Rectangle'''',''''Fields'''':[10.0,5.0]},\r\n  {''''Case'''':''''Rectangle'''',''''Fields'''':[10.0,5.0]},\r\n  {''''Case'''':''''Rectangle'''',''''Fields'''':[10.0,5.0]},\r\n  {''''Case'''':''''Rectangle'''',''''Fields'''':[10.0,5.0]},\r\n  {''''Case'''':''''Rectangle'''',''''Fields'''':[10.0,5.0]}\r\n]''", span="116-122"];
m0_52 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializePerformance()", file="DiscriminatedUnionConverterTests.cs", label="JsonConvert.DeserializeObject<List<Shape>>(json)", span="124-124"];
m0_57 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializePerformance()", file="DiscriminatedUnionConverterTests.cs", label="JsonConvert.DeserializeObject<List<Shape>>(json)", span="131-131"];
m0_53 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializePerformance()", file="DiscriminatedUnionConverterTests.cs", label="Stopwatch ts = new Stopwatch()", span="126-126"];
m0_54 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializePerformance()", file="DiscriminatedUnionConverterTests.cs", label="ts.Start()", span="127-127"];
m0_59 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializePerformance()", file="DiscriminatedUnionConverterTests.cs", label="ts.Stop()", span="134-134"];
m0_60 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializePerformance()", file="DiscriminatedUnionConverterTests.cs", label="Console.WriteLine(ts.Elapsed.TotalSeconds)", span="136-136"];
m0_55 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializePerformance()", color=green, community=0, file="DiscriminatedUnionConverterTests.cs", label="int i = 0", prediction=0, span="129-129"];
m0_56 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializePerformance()", color=green, community=0, file="DiscriminatedUnionConverterTests.cs", label="i < 10000", prediction=1, span="129-129"];
m0_58 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializePerformance()", color=green, community=0, file="DiscriminatedUnionConverterTests.cs", label="i++", prediction=0, span="129-129"];
m0_61 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializePerformance()", file="DiscriminatedUnionConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializePerformance()", span="114-114"];
m0_75 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeUnionWithFields()", file="DiscriminatedUnionConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeUnionWithFields()", span="161-161"];
m0_76 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeUnionWithFields()", file="DiscriminatedUnionConverterTests.cs", label="Shape c = JsonConvert.DeserializeObject<Shape>(@''{''''Case'''':''''Rectangle'''',''''Fields'''':[10.0,5.0]}'')", span="163-163"];
m0_77 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeUnionWithFields()", file="DiscriminatedUnionConverterTests.cs", label="Assert.AreEqual(true, c.IsRectangle)", span="164-164"];
m0_78 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeUnionWithFields()", file="DiscriminatedUnionConverterTests.cs", label="Shape.Rectangle r = (Shape.Rectangle)c", span="166-166"];
m0_79 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeUnionWithFields()", file="DiscriminatedUnionConverterTests.cs", label="Assert.AreEqual(5.0, r.length)", span="168-168"];
m0_80 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeUnionWithFields()", file="DiscriminatedUnionConverterTests.cs", label="Assert.AreEqual(10.0, r.width)", span="169-169"];
m0_81 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeUnionWithFields()", file="DiscriminatedUnionConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeUnionWithFields()", span="161-161"];
m0_26 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeBasicUnion()", file="DiscriminatedUnionConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeBasicUnion()", span="82-82"];
m0_27 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeBasicUnion()", file="DiscriminatedUnionConverterTests.cs", label="string json = JsonConvert.SerializeObject(Currency.AUD)", span="84-84"];
m0_28 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeBasicUnion()", file="DiscriminatedUnionConverterTests.cs", label="Assert.AreEqual(@''{''''Case'''':''''AUD''''}'', json)", span="86-86"];
m0_29 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeBasicUnion()", file="DiscriminatedUnionConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeBasicUnion()", span="82-82"];
m0_100 [cluster="Unk.GetUnionCases", file="DiscriminatedUnionConverterTests.cs", label="Entry Unk.GetUnionCases", span=""];
m0_97 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Union.Union()", file="DiscriminatedUnionConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Union.Union()", span="172-172"];
m0_152 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_UnexpectedEnd()", file="DiscriminatedUnionConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_UnexpectedEnd()", span="264-264"];
m0_153 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_UnexpectedEnd()", file="DiscriminatedUnionConverterTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<Currency>(@''{''''Case'''':''), ''Unexpected end when reading union. Path 'Case', line 1, position 8.'')", span="266-266"];
m0_154 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_UnexpectedEnd()", file="DiscriminatedUnionConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_UnexpectedEnd()", span="264-264"];
m0_22 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.DoubleDoubleConverter()", file="DiscriminatedUnionConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.DoubleDoubleConverter()", span="43-43"];
m0_47 [cluster="System.Diagnostics.Stopwatch.Start()", file="DiscriminatedUnionConverterTests.cs", label="Entry System.Diagnostics.Stopwatch.Start()", span="0-0"];
m0_105 [cluster="System.Collections.Generic.List<T>.Add(T)", file="DiscriminatedUnionConverterTests.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m0_121 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Deserialize()", file="DiscriminatedUnionConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Deserialize()", span="229-229"];
m0_122 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Deserialize()", file="DiscriminatedUnionConverterTests.cs", label="Union union = CreateUnion(typeof(Shape.Rectangle))", span="231-231"];
m0_123 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Deserialize()", file="DiscriminatedUnionConverterTests.cs", label="UnionCase caseInfo = union.Cases.Single(c => c.Name == ''Rectangle'')", span="233-233"];
m0_124 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Deserialize()", file="DiscriminatedUnionConverterTests.cs", label="Shape.Rectangle value = (Shape.Rectangle)caseInfo.Constructor.Invoke(new object[]\r\n            {\r\n                10.0, 5.0\r\n            })", span="235-238"];
m0_125 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Deserialize()", file="DiscriminatedUnionConverterTests.cs", label="Assert.AreEqual(''Newtonsoft.Json.Tests.TestObjects.Shape+Rectangle'', value.ToString())", span="240-240"];
m0_126 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Deserialize()", file="DiscriminatedUnionConverterTests.cs", label="Assert.AreEqual(10, value.width)", span="241-241"];
m0_127 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Deserialize()", file="DiscriminatedUnionConverterTests.cs", label="Assert.AreEqual(5, value.length)", span="242-242"];
m0_128 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Deserialize()", file="DiscriminatedUnionConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Deserialize()", span="229-229"];
m0_62 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="DiscriminatedUnionConverterTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="739-739"];
m0_48 [cluster="System.Diagnostics.Stopwatch.Stop()", file="DiscriminatedUnionConverterTests.cs", label="Entry System.Diagnostics.Stopwatch.Stop()", span="0-0"];
m0_63 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithFields()", file="DiscriminatedUnionConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithFields()", span="140-140"];
m0_64 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithFields()", file="DiscriminatedUnionConverterTests.cs", label="string json = JsonConvert.SerializeObject(Shape.NewRectangle(10.0, 5.0))", span="142-142"];
m0_65 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithFields()", file="DiscriminatedUnionConverterTests.cs", label="Assert.AreEqual(@''{''''Case'''':''''Rectangle'''',''''Fields'''':[10.0,5.0]}'', json)", span="144-144"];
m0_66 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithFields()", file="DiscriminatedUnionConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithFields()", span="140-140"];
m0_129 [cluster="object.ToString()", file="DiscriminatedUnionConverterTests.cs", label="Entry object.ToString()", span="0-0"];
m0_133 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_NoMatch()", file="DiscriminatedUnionConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_NoMatch()", span="246-246"];
m0_134 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_NoMatch()", file="DiscriminatedUnionConverterTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<Currency>(@''{''''Case'''':''''abcdefg'''',''''Fields'''':[]}''), ''No union type found with the name 'abcdefg'. Path 'Case', line 1, position 17.'')", span="248-248"];
m0_135 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_NoMatch()", file="DiscriminatedUnionConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_NoMatch()", span="246-246"];
m0_164 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_UnexpectedProperty()", file="DiscriminatedUnionConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_UnexpectedProperty()", span="276-276"];
m0_165 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_UnexpectedProperty()", file="DiscriminatedUnionConverterTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<Currency>(@''{''''Case123'''':''''AUD''''}''), ''Unexpected property 'Case123' found when reading union. Path 'Case123', line 1, position 11.'')", span="278-278"];
m0_166 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_UnexpectedProperty()", file="DiscriminatedUnionConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_UnexpectedProperty()", span="276-276"];
m0_99 [cluster="Unk.ToConverter", file="DiscriminatedUnionConverterTests.cs", label="Entry Unk.ToConverter", span=""];
m0_158 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_FieldsObject()", file="DiscriminatedUnionConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_FieldsObject()", span="270-270"];
m0_159 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_FieldsObject()", file="DiscriminatedUnionConverterTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<Currency>(@''{''''Case'''':''''AUD'''',''''Fields'''':{}}''), ''Union fields must been an array. Path 'Fields', line 1, position 24.'')", span="272-272"];
m0_160 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_FieldsObject()", file="DiscriminatedUnionConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_FieldsObject()", span="270-270"];
m0_43 [cluster="System.Collections.Generic.List<T>.List()", file="DiscriminatedUnionConverterTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m0_0 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="45-45"];
m0_1 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverterTests.cs", label="double d = (double)value", span="47-47"];
m0_2 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverterTests.cs", label="writer.WriteValue(d * 2)", span="49-49"];
m0_3 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="45-45"];
m0_117 [cluster="Unk.Single", file="DiscriminatedUnionConverterTests.cs", label="Entry Unk.Single", span=""];
m0_104 [cluster="Unk.PreComputeUnionConstructor", file="DiscriminatedUnionConverterTests.cs", label="Entry Unk.PreComputeUnionConstructor", span=""];
m0_25 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", file="DiscriminatedUnionConverterTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", span="787-787"];
m0_24 [cluster="Unk.AreEqual", file="DiscriminatedUnionConverterTests.cs", label="Entry Unk.AreEqual", span=""];
m0_98 [cluster="Unk.PreComputeUnionTagReader", file="DiscriminatedUnionConverterTests.cs", label="Entry Unk.PreComputeUnionTagReader", span=""];
m0_106 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Serialize()", file="DiscriminatedUnionConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Serialize()", span="212-212"];
m0_107 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Serialize()", file="DiscriminatedUnionConverterTests.cs", label="Shape value = Shape.NewRectangle(10.0, 5.0)", span="214-214"];
m0_108 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Serialize()", file="DiscriminatedUnionConverterTests.cs", label="Union union = CreateUnion(value.GetType())", span="216-216"];
m0_109 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Serialize()", file="DiscriminatedUnionConverterTests.cs", label="int tag = union.TagReader.Invoke(value)", span="218-218"];
m0_111 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Serialize()", file="DiscriminatedUnionConverterTests.cs", label="object[] fields = caseInfo.FieldReader.Invoke(value)", span="222-222"];
m0_110 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Serialize()", file="DiscriminatedUnionConverterTests.cs", label="UnionCase caseInfo = union.Cases.Single(c => c.Tag == tag)", span="220-220"];
m0_112 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Serialize()", file="DiscriminatedUnionConverterTests.cs", label="Assert.AreEqual(10, fields[0])", span="224-224"];
m0_113 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Serialize()", file="DiscriminatedUnionConverterTests.cs", label="Assert.AreEqual(5, fields[1])", span="225-225"];
m0_114 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Serialize()", file="DiscriminatedUnionConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Serialize()", span="212-212"];
m0_167 [cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs", label="Entry lambda expression", span="278-278"];
m0_119 [cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs", label="c.Tag == tag", span="220-220"];
m0_118 [cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs", label="Entry lambda expression", span="220-220"];
m0_120 [cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs", label="Exit lambda expression", span="220-220"];
m0_130 [cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs", label="Entry lambda expression", span="233-233"];
m0_131 [cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs", label="c.Name == ''Rectangle''", span="233-233"];
m0_132 [cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs", label="Exit lambda expression", span="233-233"];
m0_137 [cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs", label="Entry lambda expression", span="248-248"];
m0_138 [cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs", label="JsonConvert.DeserializeObject<Currency>(@''{''''Case'''':''''abcdefg'''',''''Fields'''':[]}'')", span="248-248"];
m0_139 [cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs", label="Exit lambda expression", span="248-248"];
m0_143 [cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs", label="Entry lambda expression", span="254-254"];
m0_144 [cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs", label="JsonConvert.DeserializeObject<Currency>(@''{''''Case'''':''''AUD'''',''''Fields'''':[1]}'')", span="254-254"];
m0_145 [cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs", label="Exit lambda expression", span="254-254"];
m0_149 [cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs", label="Entry lambda expression", span="260-260"];
m0_150 [cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs", label="JsonConvert.DeserializeObject<Currency>(@''{''''Fields'''':[1]}'')", span="260-260"];
m0_151 [cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs", label="Exit lambda expression", span="260-260"];
m0_155 [cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs", label="Entry lambda expression", span="266-266"];
m0_156 [cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs", label="JsonConvert.DeserializeObject<Currency>(@''{''''Case'''':'')", span="266-266"];
m0_157 [cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs", label="Exit lambda expression", span="266-266"];
m0_161 [cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs", label="Entry lambda expression", span="272-272"];
m0_162 [cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs", label="JsonConvert.DeserializeObject<Currency>(@''{''''Case'''':''''AUD'''',''''Fields'''':{}}'')", span="272-272"];
m0_163 [cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs", label="Exit lambda expression", span="272-272"];
m0_168 [cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs", label="JsonConvert.DeserializeObject<Currency>(@''{''''Case123'''':''''AUD''''}'')", span="278-278"];
m0_169 [cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs", label="Exit lambda expression", span="278-278"];
m0_5 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="52-52"];
m0_6 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverterTests.cs", label="double d = (double)reader.Value", span="54-54"];
m0_7 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverterTests.cs", label="return d / 2;", span="56-56"];
m0_8 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="52-52"];
m0_21 [cluster="Newtonsoft.Json.Tests.TestObjects.Shape.NewRectangle(double, double)", file="DiscriminatedUnionConverterTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Shape.NewRectangle(double, double)", span="72-72"];
m0_102 [cluster="Unk.GetFields", file="DiscriminatedUnionConverterTests.cs", label="Entry Unk.GetFields", span=""];
m0_9 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.CanConvert(System.Type)", file="DiscriminatedUnionConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.CanConvert(System.Type)", span="59-59"];
m0_10 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.CanConvert(System.Type)", file="DiscriminatedUnionConverterTests.cs", label="return objectType == typeof(double);", span="61-61"];
m0_11 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.CanConvert(System.Type)", file="DiscriminatedUnionConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.CanConvert(System.Type)", span="59-59"];
m0_136 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="DiscriminatedUnionConverterTests.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="354-354"];
m0_140 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_MismatchedFieldCount()", file="DiscriminatedUnionConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_MismatchedFieldCount()", span="252-252"];
m0_141 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_MismatchedFieldCount()", file="DiscriminatedUnionConverterTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<Currency>(@''{''''Case'''':''''AUD'''',''''Fields'''':[1]}''), ''The number of field values does not match the number of properties definied by union 'AUD'. Path '', line 1, position 27.'')", span="254-254"];
m0_142 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_MismatchedFieldCount()", file="DiscriminatedUnionConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_MismatchedFieldCount()", span="252-252"];
m0_103 [cluster="Unk.PreComputeUnionReader", file="DiscriminatedUnionConverterTests.cs", label="Entry Unk.PreComputeUnionReader", span=""];
m0_180 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", file="DiscriminatedUnionConverterTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", span="570-570"];
m0_12 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithConverter()", file="DiscriminatedUnionConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithConverter()", span="66-66"];
m0_13 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithConverter()", file="DiscriminatedUnionConverterTests.cs", label="string json = JsonConvert.SerializeObject(Shape.NewRectangle(10.0, 5.0), new DoubleDoubleConverter())", span="68-68"];
m0_14 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithConverter()", file="DiscriminatedUnionConverterTests.cs", label="Assert.AreEqual(@''{''''Case'''':''''Rectangle'''',''''Fields'''':[20.0,10.0]}'', json)", span="70-70"];
m0_15 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithConverter()", file="DiscriminatedUnionConverterTests.cs", label="Shape c = JsonConvert.DeserializeObject<Shape>(json, new DoubleDoubleConverter())", span="72-72"];
m0_16 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithConverter()", file="DiscriminatedUnionConverterTests.cs", label="Assert.AreEqual(true, c.IsRectangle)", span="73-73"];
m0_17 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithConverter()", file="DiscriminatedUnionConverterTests.cs", label="Shape.Rectangle r = (Shape.Rectangle)c", span="75-75"];
m0_18 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithConverter()", file="DiscriminatedUnionConverterTests.cs", label="Assert.AreEqual(5.0, r.length)", span="77-77"];
m0_19 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithConverter()", file="DiscriminatedUnionConverterTests.cs", label="Assert.AreEqual(10.0, r.width)", span="78-78"];
m0_20 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithConverter()", file="DiscriminatedUnionConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithConverter()", span="66-66"];
m0_31 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializePerformance()", file="DiscriminatedUnionConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializePerformance()", span="90-90"];
m0_32 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializePerformance()", file="DiscriminatedUnionConverterTests.cs", label="List<Shape> values = new List<Shape>\r\n            {\r\n                Shape.NewRectangle(10.0, 5.0),\r\n                Shape.NewCircle(7.5)\r\n            }", span="92-96"];
m0_33 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializePerformance()", file="DiscriminatedUnionConverterTests.cs", label="string json = JsonConvert.SerializeObject(values, Formatting.Indented)", span="98-98"];
m0_38 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializePerformance()", file="DiscriminatedUnionConverterTests.cs", label="JsonConvert.SerializeObject(values)", span="105-105"];
m0_34 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializePerformance()", file="DiscriminatedUnionConverterTests.cs", label="Stopwatch ts = new Stopwatch()", span="100-100"];
m0_35 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializePerformance()", file="DiscriminatedUnionConverterTests.cs", label="ts.Start()", span="101-101"];
m0_40 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializePerformance()", file="DiscriminatedUnionConverterTests.cs", label="ts.Stop()", span="108-108"];
m0_41 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializePerformance()", file="DiscriminatedUnionConverterTests.cs", label="Console.WriteLine(ts.Elapsed.TotalSeconds)", span="110-110"];
m0_36 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializePerformance()", color=green, community=0, file="DiscriminatedUnionConverterTests.cs", label="int i = 0", prediction=3, span="103-103"];
m0_37 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializePerformance()", color=green, community=0, file="DiscriminatedUnionConverterTests.cs", label="i < 10000", prediction=4, span="103-103"];
m0_39 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializePerformance()", color=green, community=0, file="DiscriminatedUnionConverterTests.cs", label="i++", prediction=3, span="103-103"];
m0_42 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializePerformance()", file="DiscriminatedUnionConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializePerformance()", span="90-90"];
m0_67 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion()", file="DiscriminatedUnionConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion()", span="148-148"];
m0_68 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion()", file="DiscriminatedUnionConverterTests.cs", label="Currency c = JsonConvert.DeserializeObject<Currency>(@''{''''Case'''':''''AUD''''}'')", span="150-150"];
m0_69 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion()", file="DiscriminatedUnionConverterTests.cs", label="Assert.AreEqual(Currency.AUD, c)", span="151-151"];
m0_70 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion()", file="DiscriminatedUnionConverterTests.cs", label="c = JsonConvert.DeserializeObject<Currency>(@''{''''Case'''':''''EUR''''}'')", span="153-153"];
m0_71 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion()", file="DiscriminatedUnionConverterTests.cs", label="Assert.AreEqual(Currency.EUR, c)", span="154-154"];
m0_72 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion()", file="DiscriminatedUnionConverterTests.cs", label="c = JsonConvert.DeserializeObject<Currency>(@''null'')", span="156-156"];
m0_73 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion()", file="DiscriminatedUnionConverterTests.cs", label="Assert.AreEqual(null, c)", span="157-157"];
m0_74 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion()", file="DiscriminatedUnionConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion()", span="148-148"];
m0_23 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", file="DiscriminatedUnionConverterTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", span="536-536"];
m0_115 [cluster="object.GetType()", file="DiscriminatedUnionConverterTests.cs", label="Entry object.GetType()", span="0-0"];
m0_4 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(double)", file="DiscriminatedUnionConverterTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(double)", span="875-875"];
m0_46 [cluster="System.Diagnostics.Stopwatch.Stopwatch()", file="DiscriminatedUnionConverterTests.cs", label="Entry System.Diagnostics.Stopwatch.Stopwatch()", span="0-0"];
m0_82 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", file="DiscriminatedUnionConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", span="187-187"];
m0_83 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", file="DiscriminatedUnionConverterTests.cs", label="Union u = new Union()", span="189-189"];
m0_84 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", file="DiscriminatedUnionConverterTests.cs", label="u.TagReader = FSharpFunc<object, int>.ToConverter(FSharpValue.PreComputeUnionTagReader(t, null))", span="191-191"];
m0_86 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", file="DiscriminatedUnionConverterTests.cs", label="UnionCaseInfo[] cases = FSharpType.GetUnionCases(t, null)", span="194-194"];
m0_85 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", file="DiscriminatedUnionConverterTests.cs", label="u.Cases = new List<UnionCase>()", span="192-192"];
m0_94 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", file="DiscriminatedUnionConverterTests.cs", label="u.Cases.Add(unionCase)", span="205-205"];
m0_95 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", file="DiscriminatedUnionConverterTests.cs", label="return u;", span="208-208"];
m0_87 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", file="DiscriminatedUnionConverterTests.cs", label=cases, span="196-196"];
m0_88 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", file="DiscriminatedUnionConverterTests.cs", label="UnionCase unionCase = new UnionCase()", span="198-198"];
m0_89 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", file="DiscriminatedUnionConverterTests.cs", label="unionCase.Tag = unionCaseInfo.Tag", span="199-199"];
m0_90 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", file="DiscriminatedUnionConverterTests.cs", label="unionCase.Name = unionCaseInfo.Name", span="200-200"];
m0_91 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", file="DiscriminatedUnionConverterTests.cs", label="unionCase.Fields = unionCaseInfo.GetFields()", span="201-201"];
m0_92 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", file="DiscriminatedUnionConverterTests.cs", label="unionCase.FieldReader = FSharpFunc<object, object[]>.ToConverter(FSharpValue.PreComputeUnionReader(unionCaseInfo, null))", span="202-202"];
m0_93 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", file="DiscriminatedUnionConverterTests.cs", label="unionCase.Constructor = FSharpFunc<object[], object>.ToConverter(FSharpValue.PreComputeUnionConstructor(unionCaseInfo, null))", span="203-203"];
m0_96 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", file="DiscriminatedUnionConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", span="187-187"];
m0_146 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_NoCaseName()", file="DiscriminatedUnionConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_NoCaseName()", span="258-258"];
m0_147 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_NoCaseName()", file="DiscriminatedUnionConverterTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<Currency>(@''{''''Fields'''':[1]}''), ''No 'Case' property with union name found. Path '', line 1, position 14.'')", span="260-260"];
m0_148 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_NoCaseName()", file="DiscriminatedUnionConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_NoCaseName()", span="258-258"];
m0_49 [cluster="System.Console.WriteLine(double)", file="DiscriminatedUnionConverterTests.cs", label="Entry System.Console.WriteLine(double)", span="0-0"];
m0_116 [cluster="System.Converter<TInput, TOutput>.Invoke(TInput)", file="DiscriminatedUnionConverterTests.cs", label="Entry System.Converter<TInput, TOutput>.Invoke(TInput)", span="0-0"];
m0_44 [cluster="Newtonsoft.Json.Tests.TestObjects.Shape.NewCircle(double)", file="DiscriminatedUnionConverterTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Shape.NewCircle(double)", span="60-60"];
m0_101 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.UnionCase.UnionCase()", file="DiscriminatedUnionConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.UnionCase.UnionCase()", span="178-178"];
m0_30 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="DiscriminatedUnionConverterTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="512-512"];
m0_170 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithTypeNameHandlingAndReferenceTracking()", file="DiscriminatedUnionConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithTypeNameHandlingAndReferenceTracking()", span="282-282"];
m0_171 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithTypeNameHandlingAndReferenceTracking()", file="DiscriminatedUnionConverterTests.cs", label="string json = JsonConvert.SerializeObject(Shape.NewRectangle(10.0, 5.0), new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.All,\r\n                TypeNameHandling = TypeNameHandling.All\r\n            })", span="284-288"];
m0_172 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithTypeNameHandlingAndReferenceTracking()", file="DiscriminatedUnionConverterTests.cs", label="Assert.AreEqual(@''{''''Case'''':''''Rectangle'''',''''Fields'''':[10.0,5.0]}'', json)", span="290-290"];
m0_173 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithTypeNameHandlingAndReferenceTracking()", file="DiscriminatedUnionConverterTests.cs", label="Shape c = JsonConvert.DeserializeObject<Shape>(json)", span="292-292"];
m0_174 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithTypeNameHandlingAndReferenceTracking()", file="DiscriminatedUnionConverterTests.cs", label="Assert.AreEqual(true, c.IsRectangle)", span="293-293"];
m0_175 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithTypeNameHandlingAndReferenceTracking()", file="DiscriminatedUnionConverterTests.cs", label="Shape.Rectangle r = (Shape.Rectangle)c", span="295-295"];
m0_176 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithTypeNameHandlingAndReferenceTracking()", file="DiscriminatedUnionConverterTests.cs", label="Assert.AreEqual(5.0, r.length)", span="297-297"];
m0_177 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithTypeNameHandlingAndReferenceTracking()", file="DiscriminatedUnionConverterTests.cs", label="Assert.AreEqual(10.0, r.width)", span="298-298"];
m0_178 [cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithTypeNameHandlingAndReferenceTracking()", file="DiscriminatedUnionConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithTypeNameHandlingAndReferenceTracking()", span="282-282"];
m0_179 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="DiscriminatedUnionConverterTests.cs", label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="382-382"];
m0_181 [file="DiscriminatedUnionConverterTests.cs", label="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests", span=""];
m0_182 [file="DiscriminatedUnionConverterTests.cs", label=tag, span=""];
n1 -> n8  [color=darkseagreen4, key=1, label=person, style=dashed];
n1 -> n9  [color=darkseagreen4, key=1, label=person, style=dashed];
n1 -> n10  [color=darkseagreen4, key=1, label=person, style=dashed];
n7 -> n9  [color=darkseagreen4, key=1, label=deserializedPerson, style=dashed];
n7 -> n10  [color=darkseagreen4, key=1, label=deserializedPerson, style=dashed];
n24 -> n29  [color=darkseagreen4, key=1, label=ignoreAttributeOnClassTestClass, style=dashed];
n26 -> n29  [color=darkseagreen4, key=1, label=serializer, style=dashed];
n31 -> n33  [color=darkseagreen4, key=1, label=p, style=dashed];
n47 -> n49  [color=darkseagreen4, key=1, label=deserializedPrivateMembersClass, style=dashed];
n47 -> n50  [color=darkseagreen4, key=1, label=deserializedPrivateMembersClass, style=dashed];
m0_51 -> m0_57  [color=darkseagreen4, key=1, label=json, style=dashed];
m0_53 -> m0_59  [color=darkseagreen4, key=1, label=ts, style=dashed];
m0_53 -> m0_60  [color=darkseagreen4, key=1, label=ts, style=dashed];
m0_55 -> m0_58  [color=green, key=1, label=i, style=dashed];
m0_58 -> m0_58  [color=green, key=1, label=i, style=dashed];
m0_78 -> m0_80  [color=darkseagreen4, key=1, label=r, style=dashed];
m0_153 -> m0_155  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_123 -> m0_130  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_124 -> m0_126  [color=darkseagreen4, key=1, label=value, style=dashed];
m0_124 -> m0_127  [color=darkseagreen4, key=1, label=value, style=dashed];
m0_134 -> m0_137  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_165 -> m0_167  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_159 -> m0_161  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_0 -> m0_2  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m0_109 -> m0_119  [color=darkseagreen4, key=1, label=tag, style=dashed];
m0_111 -> m0_113  [color=darkseagreen4, key=1, label=fields, style=dashed];
m0_110 -> m0_118  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_141 -> m0_143  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_17 -> m0_19  [color=darkseagreen4, key=1, label=r, style=dashed];
m0_32 -> m0_38  [color=darkseagreen4, key=1, label=values, style=dashed];
m0_34 -> m0_40  [color=darkseagreen4, key=1, label=ts, style=dashed];
m0_34 -> m0_41  [color=darkseagreen4, key=1, label=ts, style=dashed];
m0_36 -> m0_39  [color=green, key=1, label=i, style=dashed];
m0_39 -> m0_39  [color=green, key=1, label=i, style=dashed];
m0_83 -> m0_94  [color=darkseagreen4, key=1, label=u, style=dashed];
m0_83 -> m0_95  [color=darkseagreen4, key=1, label=u, style=dashed];
m0_88 -> m0_94  [color=darkseagreen4, key=1, label=unionCase, style=dashed];
m0_147 -> m0_149  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_175 -> m0_177  [color=darkseagreen4, key=1, label=r, style=dashed];
m0_182 -> m0_119  [color=darkseagreen4, key=1, label=tag, style=dashed];
}
