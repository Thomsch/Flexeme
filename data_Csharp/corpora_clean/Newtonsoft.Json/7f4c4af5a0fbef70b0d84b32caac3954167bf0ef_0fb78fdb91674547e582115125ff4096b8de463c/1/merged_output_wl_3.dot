digraph  {
m1_0 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.JsonObjectAttributeOptIn.Example()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Examples.JsonObjectAttributeOptIn.Example()", span="22-22"];
m1_1 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.JsonObjectAttributeOptIn.Example()", file="DefaultContractResolver.cs", label="File file = new File\r\n        {\r\n          Id = Guid.NewGuid(),\r\n          Name = ''ImportantLegalDocuments.docx'',\r\n          Size = 50 * 1024\r\n        }", span="24-29"];
m1_2 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.JsonObjectAttributeOptIn.Example()", file="DefaultContractResolver.cs", label="string json = JsonConvert.SerializeObject(file, Formatting.Indented)", span="31-31"];
m1_3 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.JsonObjectAttributeOptIn.Example()", file="DefaultContractResolver.cs", label="Console.WriteLine(json)", span="33-33"];
m1_4 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.JsonObjectAttributeOptIn.Example()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Examples.JsonObjectAttributeOptIn.Example()", span="22-22"];
m1_7 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="710-710"];
m1_6 [cluster="System.Guid.NewGuid()", file="DefaultContractResolver.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m1_5 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.JsonObjectAttributeOptIn.File.File()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Examples.JsonObjectAttributeOptIn.File.File()", span="10-10"];
m1_8 [cluster="System.Console.WriteLine(string)", file="DefaultContractResolver.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m2_47 [cluster="Newtonsoft.Json.JsonReader.Read()", file="JPath.cs", label="Entry Newtonsoft.Json.JsonReader.Read()", span="204-204"];
m2_22 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JPath.cs", label="Entry Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="52-52"];
m2_23 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JPath.cs", label="Type t = (ReflectionUtils.IsNullableType(objectType))\r\n        ? Nullable.GetUnderlyingType(objectType)\r\n        : objectType", span="54-56"];
m2_24 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JPath.cs", label="reader.TokenType == JsonToken.Null", span="58-58"];
m2_25 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JPath.cs", label="!ReflectionUtils.IsNullableType(objectType)", span="60-60"];
m2_26 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JPath.cs", label="throw new Exception(''Cannot convert null value to {0}.''.FormatWith(CultureInfo.InvariantCulture, objectType));", span="61-61"];
m2_28 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JPath.cs", label="reader.TokenType != JsonToken.StartConstructor || string.Compare(reader.Value.ToString(), ''Date'', StringComparison.Ordinal) != 0", span="66-66"];
m2_29 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JPath.cs", label="throw new Exception(''Unexpected token or value when parsing date. Token: {0}, Value: {1}''.FormatWith(CultureInfo.InvariantCulture, reader.TokenType, reader.Value));", span="67-67"];
m2_30 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JPath.cs", label="reader.Read()", span="69-69"];
m2_31 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JPath.cs", label="reader.TokenType != JsonToken.Integer", span="71-71"];
m2_32 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JPath.cs", label="throw new Exception(''Unexpected token parsing date. Expected Integer, got {0}.''.FormatWith(CultureInfo.InvariantCulture, reader.TokenType));", span="72-72"];
m2_33 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JPath.cs", label="long ticks = (long)reader.Value", span="74-74"];
m2_35 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JPath.cs", label="reader.Read()", span="78-78"];
m2_36 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JPath.cs", label="reader.TokenType != JsonToken.EndConstructor", span="80-80"];
m2_37 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JPath.cs", label="throw new Exception(''Unexpected token parsing date. Expected EndConstructor, got {0}.''.FormatWith(CultureInfo.InvariantCulture, reader.TokenType));", span="81-81"];
m2_38 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JPath.cs", label="t == typeof(DateTimeOffset)", span="84-84"];
m2_27 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JPath.cs", label="return null;", span="63-63"];
m2_34 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JPath.cs", label="DateTime d = JsonConvert.ConvertJavaScriptTicksToDateTime(ticks)", span="76-76"];
m2_39 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JPath.cs", label="return new DateTimeOffset(d);", span="85-85"];
m2_40 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JPath.cs", label="return d;", span="88-88"];
m2_41 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JPath.cs", label="Exit Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="52-52"];
m2_44 [cluster="string.FormatWith(System.IFormatProvider, params object[])", file="JPath.cs", label="Entry string.FormatWith(System.IFormatProvider, params object[])", span="48-48"];
m2_42 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", file="JPath.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", span="94-94"];
m2_0 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JPath.cs", label="Entry Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="17-17"];
m2_1 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JPath.cs", label="long ticks", span="19-19"];
m2_2 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JPath.cs", label="value is DateTime", span="21-21"];
m2_3 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JPath.cs", label="DateTime dateTime = (DateTime)value", span="23-23"];
m2_6 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JPath.cs", label="value is DateTimeOffset", span="28-28"];
m2_7 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JPath.cs", label="DateTimeOffset dateTimeOffset = (DateTimeOffset)value", span="30-30"];
m2_11 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JPath.cs", label="writer.WriteStartConstructor(''Date'')", span="40-40"];
m2_12 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JPath.cs", label="writer.WriteValue(ticks)", span="41-41"];
m2_13 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JPath.cs", label="writer.WriteEndConstructor()", span="42-42"];
m2_4 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JPath.cs", label="DateTime utcDateTime = dateTime.ToUniversalTime()", span="24-24"];
m2_5 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JPath.cs", label="ticks = JsonConvert.ConvertDateTimeToJavaScriptTicks(utcDateTime)", span="25-25"];
m2_10 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JPath.cs", label="throw new Exception(''Expected date object value.'');", span="37-37"];
m2_8 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JPath.cs", label="DateTimeOffset utcDateTimeOffset = dateTimeOffset.ToUniversalTime()", span="31-31"];
m2_9 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JPath.cs", label="ticks = JsonConvert.ConvertDateTimeToJavaScriptTicks(utcDateTimeOffset.UtcDateTime)", span="32-32"];
m2_14 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JPath.cs", label="Exit Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="17-17"];
m2_48 [cluster="Newtonsoft.Json.JsonConvert.ConvertJavaScriptTicksToDateTime(long)", file="JPath.cs", label="Entry Newtonsoft.Json.JsonConvert.ConvertJavaScriptTicksToDateTime(long)", span="195-195"];
m2_17 [cluster="System.DateTimeOffset.ToUniversalTime()", file="JPath.cs", label="Entry System.DateTimeOffset.ToUniversalTime()", span="0-0"];
m2_15 [cluster="System.DateTime.ToUniversalTime()", file="JPath.cs", label="Entry System.DateTime.ToUniversalTime()", span="0-0"];
m2_45 [cluster="object.ToString()", file="JPath.cs", label="Entry object.ToString()", span="0-0"];
m2_46 [cluster="string.Compare(string, string, System.StringComparison)", file="JPath.cs", label="Entry string.Compare(string, string, System.StringComparison)", span="0-0"];
m2_49 [cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime)", file="JPath.cs", label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime)", span="0-0"];
m2_21 [cluster="Newtonsoft.Json.JsonWriter.WriteEndConstructor()", file="JPath.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndConstructor()", span="271-271"];
m2_20 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(long)", file="JPath.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(long)", span="685-685"];
m2_43 [cluster="System.Nullable.GetUnderlyingType(System.Type)", file="JPath.cs", label="Entry System.Nullable.GetUnderlyingType(System.Type)", span="0-0"];
m2_19 [cluster="Newtonsoft.Json.JsonWriter.WriteStartConstructor(string)", file="JPath.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartConstructor(string)", span="262-262"];
m2_16 [cluster="Newtonsoft.Json.JsonConvert.ConvertDateTimeToJavaScriptTicks(System.DateTime)", file="JPath.cs", label="Entry Newtonsoft.Json.JsonConvert.ConvertDateTimeToJavaScriptTicks(System.DateTime)", span="181-181"];
m2_18 [cluster="System.Exception.Exception(string)", file="JPath.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m4_295 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonTextReader.cs", label="string json = @''[\r\n''''Small'''',\r\n''''Medium'''',\r\n''''Large''''\r\n]content''", span="516-520"];
m4_653 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label=singleDigit, span="1211-1211"];
m4_654 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="numberValue = (decimal)firstChar - 48", span="1214-1214"];
m4_655 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label=nonBase10, span="1216-1216"];
m4_656 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="string number = _stringReference.ToString()", span="1218-1218"];
m4_702 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReader.cs", label="Assert.AreEqual(55, reader.LineNumber)", span="1154-1154"];
m4_954 [cluster="System.Text.StringBuilder.StringBuilder()", file="JsonTextReader.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m4_101 [cluster="System.IO.TextReader.Read(char[], int, int)", file="JsonTextReader.cs", label="Entry System.IO.TextReader.Read(char[], int, int)", span="0-0"];
m4_104 [cluster="Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", file="JsonTextReader.cs", label="return ReadChars(relativePosition, append);", span="260-260"];
m4_106 [cluster="Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", span="257-257"];
m4_108 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs", label=_isEndOfFile, span="267-267"];
m4_111 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs", label="int totalCharsRead = 0", span="272-272"];
m4_113 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs", label="charsRead == 0", span="281-281"];
m4_103 [cluster="Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", file="JsonTextReader.cs", label="_charPos + relativePosition >= _charsUsed", span="259-259"];
m4_105 [cluster="Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", file="JsonTextReader.cs", label="return true;", span="262-262"];
m4_107 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", span="265-265"];
m4_109 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs", label="return false;", span="268-268"];
m4_110 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs", label="int charsRequired = _charPos + relativePosition - _charsUsed + 1", span="270-270"];
m4_112 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs", label="int charsRead = ReadData(append, charsRequired - totalCharsRead)", span="278-278"];
m4_102 [cluster="Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", span="257-257"];
m4_114 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs", label="totalCharsRead += charsRead", span="284-284"];
m4_818 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReader.cs", label="Assert.AreEqual(int.MaxValue, reader.ReadAsInt32())", span="1345-1345"];
m4_819 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReader.cs", label="reader = new JsonTextReader(new StringReader(int.MinValue.ToString()))", span="1347-1347"];
m4_820 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReader.cs", label="Assert.AreEqual(int.MinValue, reader.ReadAsInt32())", span="1348-1348"];
m4_969 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", span="1507-1507"];
m4_972 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReader.cs", label="JsonReader jsonReader = new JsonTextReader(sr)", span="1517-1517"];
m4_971 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReader.cs", label="StringReader sr = new StringReader(input)", span="1515-1515"];
m4_974 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReader.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.StartArray)", span="1520-1520"];
m4_976 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReader.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.Float)", span="1523-1523"];
m4_977 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReader.cs", label="Assert.AreEqual(jsonReader.Value, double.NaN)", span="1524-1524"];
m4_979 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReader.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.Float)", span="1527-1527"];
m4_980 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReader.cs", label="Assert.AreEqual(jsonReader.Value, double.PositiveInfinity)", span="1528-1528"];
m4_982 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReader.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.Float)", span="1531-1531"];
m4_983 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReader.cs", label="Assert.AreEqual(jsonReader.Value, double.NegativeInfinity)", span="1532-1532"];
m4_985 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReader.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.EndArray)", span="1535-1535"];
m4_973 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReader.cs", label="jsonReader.Read()", span="1519-1519"];
m4_975 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReader.cs", label="jsonReader.Read()", span="1522-1522"];
m4_978 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReader.cs", label="jsonReader.Read()", span="1526-1526"];
m4_981 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReader.cs", label="jsonReader.Read()", span="1530-1530"];
m4_984 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReader.cs", label="jsonReader.Read()", span="1534-1534"];
m4_970 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReader.cs", label="string input = @''[\r\n  NaN,\r\n  Infinity,\r\n  -Infinity\r\n]''", span="1509-1513"];
m4_986 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", span="1507-1507"];
m4_1336 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", span="2048-2048"];
m4_1339 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2054-2054"];
m4_1341 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2057-2057"];
m4_1347 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2065-2065"];
m4_1338 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReader.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2052-2052"];
m4_1340 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2055-2055"];
m4_1342 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2058-2058"];
m4_1344 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2061-2061"];
m4_1345 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReader.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2062-2062"];
m4_1346 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReader.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2011, 8, 1, 21, 25, 0, DateTimeKind.Utc), TimeSpan.Zero), reader.Value)", span="2063-2063"];
m4_1348 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2066-2066"];
m4_1337 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReader.cs", label="string json = @''{''''Offset'''':''''2011-08-01T21:25Z''''}''", span="2050-2050"];
m4_1343 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReader.cs", label="reader.ReadAsDateTimeOffset()", span="2060-2060"];
m4_1349 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", span="2048-2048"];
m4_51 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="136-136"];
m4_10 [cluster="Newtonsoft.Json.JsonTextReader.GetBuffer()", file="JsonTextReader.cs", label="_buffer = new StringBuffer(1025)", span="94-94"];
m4_120 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="JsonTextReader.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDecimal(); }, ''Unexpected character encountered while parsing number: q. Path '', line 1, position 2.'')", span="240-240"];
m4_121 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="JsonTextReader.cs", label="reader = new JsonTextReader(new StringReader(json))", span="242-242"];
m4_122 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="JsonTextReader.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsInt32(); }, ''Unexpected character encountered while parsing number: q. Path '', line 1, position 2.'')", span="244-244"];
m4_123 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", span="230-230"];
m4_125 [cluster="lambda expression", file="JsonTextReader.cs", label="reader.Read()", span="236-236"];
m4_124 [cluster="lambda expression", file="JsonTextReader.cs", label="Entry lambda expression", span="236-236"];
m4_126 [cluster="lambda expression", file="JsonTextReader.cs", label="Exit lambda expression", span="236-236"];
m4_556 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonTextReader.cs", label="i < 15", span="914-914"];
m4_591 [cluster="lambda expression", file="JsonTextReader.cs", label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="958-958"];
m4_592 [cluster="lambda expression", file="JsonTextReader.cs", label="reader.ReadAsInt32()", span="959-959"];
m4_625 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonTextReader.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1024-1024"];
m4_593 [cluster="lambda expression", file="JsonTextReader.cs", label="Exit lambda expression", span="956-960"];
m4_594 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", span="966-966"];
m4_617 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonTextReader.cs", label="BigInteger total = i + -j", span="996-996"];
m4_595 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonTextReader.cs", label="BigInteger i = new BigInteger(long.MaxValue)", span="968-968"];
m4_596 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonTextReader.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(i.ToString(CultureInfo.InvariantCulture)))", span="970-970"];
m4_597 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonTextReader.cs", label="reader.Read()", span="971-971"];
m4_603 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonTextReader.cs", label="reader.Read()", span="979-979"];
m4_605 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonTextReader.cs", label="j++", span="974-974"];
m4_608 [cluster="StringReader.cstr", file="JsonTextReader.cs", label="Entry StringReader.cstr", span=""];
m4_611 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonTextReader.cs", label="BigInteger i = new BigInteger(long.MinValue)", span="988-988"];
m4_614 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonTextReader.cs", label="Assert.AreEqual(typeof(long), reader.ValueType)", span="992-992"];
m4_616 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonTextReader.cs", label="j < 1000", span="994-994"];
m4_598 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonTextReader.cs", label="Assert.AreEqual(typeof(long), reader.ValueType)", span="972-972"];
m4_599 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonTextReader.cs", label="int j = 1", span="974-974"];
m4_601 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonTextReader.cs", label="BigInteger total = i + j", span="976-976"];
m4_600 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonTextReader.cs", label="j < 1000", span="974-974"];
m4_602 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonTextReader.cs", label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="978-978"];
m4_604 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonTextReader.cs", label="Assert.AreEqual(typeof(BigInteger), reader.ValueType)", span="981-981"];
m4_606 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", span="966-966"];
m4_607 [cluster="BigInteger.cstr", file="JsonTextReader.cs", label="Entry BigInteger.cstr", span=""];
m4_609 [cluster="Unk.ToString", file="JsonTextReader.cs", label="Entry Unk.ToString", span=""];
m4_610 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", span="986-986"];
m4_612 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonTextReader.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(i.ToString(CultureInfo.InvariantCulture)))", span="990-990"];
m4_613 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonTextReader.cs", label="reader.Read()", span="991-991"];
m4_615 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonTextReader.cs", label="int j = 1", span="994-994"];
m4_618 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonTextReader.cs", label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="998-998"];
m4_619 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonTextReader.cs", label="reader.Read()", span="999-999"];
m4_624 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonTextReader.cs", label="string json = @''\r\n{\r\n  ''''description'''': ''''A person'''',\r\n  ''''type'''': ''''object'''',\r\n  ''''properties'''':\r\n  {\r\n    ''''name'''': {''''type'''':''''string''''},\r\n    ''''hobbies'''': {\r\n      ''''type'''': ''''array'''',\r\n      ''''items'''': {''''type'''':''''string''''}\r\n    }\r\n  }\r\n}\r\n''", span="1009-1022"];
m4_620 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonTextReader.cs", label="Assert.AreEqual(typeof(BigInteger), reader.ValueType)", span="1001-1001"];
m4_621 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonTextReader.cs", label="j++", span="994-994"];
m4_622 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", span="986-986"];
m4_623 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", span="1007-1007"];
m4_626 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonTextReader.cs", label="int i = 0", span="1029-1029"];
m4_1334 [cluster="System.TimeSpan.FromMinutes(double)", file="JsonTextReader.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m4_686 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Input string '{0}' is not a valid decimal.''.FormatWith(CultureInfo.InvariantCulture, number));", span="1286-1286"];
m4_713 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs", label="'\0'", span="1325-1325"];
m4_687 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="double d", span="1290-1290"];
m4_693 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="SetToken(numberType, numberValue)", span="1304-1304"];
m4_712 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs", label="_chars[_charPos]", span="1323-1323"];
m4_714 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs", label="_charsUsed == _charPos", span="1326-1326"];
m4_727 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs", label="StringUtils.LineFeed", span="1353-1353"];
m4_694 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseNumber()", span="1157-1157"];
m4_696 [cluster="string.StartsWith(string, System.StringComparison)", file="JsonTextReader.cs", label="Entry string.StartsWith(string, System.StringComparison)", span="0-0"];
m4_699 [cluster="System.Convert.ToInt64(string, int)", file="JsonTextReader.cs", label="Entry System.Convert.ToInt64(string, int)", span="0-0"];
m4_701 [cluster="decimal.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out decimal)", file="JsonTextReader.cs", label="Entry decimal.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out decimal)", span="0-0"];
m4_705 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs", label="_charPos++", span="1310-1310"];
m4_708 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", color=red, community=0, file="JsonTextReader.cs", label="0: _charPos++", span="1315-1315"];
m4_711 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs", label="!commentFinished", span="1321-1321"];
m4_716 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", color=red, community=0, file="JsonTextReader.cs", label="0: throw JsonReaderException.Create(this, ''Unexpected end while parsing comment.'');", span="1329-1329"];
m4_718 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs", label="'*'", span="1336-1336"];
m4_720 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", color=red, community=0, file="JsonTextReader.cs", label="0: EnsureChars(0, true)", span="1339-1339"];
m4_723 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", color=red, community=0, file="JsonTextReader.cs", label="0: _charPos++", span="1345-1345"];
m4_725 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs", label="StringUtils.CarriageReturn", span="1350-1350"];
m4_690 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Input string '{0}' is not a valid number.''.FormatWith(CultureInfo.InvariantCulture, number));", span="1294-1294"];
m4_698 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", span="567-567"];
m4_695 [cluster="char.IsDigit(char)", file="JsonTextReader.cs", label="Entry char.IsDigit(char)", span="0-0"];
m4_697 [cluster="System.Convert.ToInt32(string, int)", file="JsonTextReader.cs", label="Entry System.Convert.ToInt32(string, int)", span="0-0"];
m4_700 [cluster="System.Convert.ToDecimal(long)", file="JsonTextReader.cs", label="Entry System.Convert.ToDecimal(long)", span="0-0"];
m4_703 [cluster="Unk.Parse", file="JsonTextReader.cs", label="Entry Unk.Parse", span=""];
m4_704 [cluster="double.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out double)", file="JsonTextReader.cs", label="Entry double.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out double)", span="0-0"];
m4_706 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", color=red, community=0, file="JsonTextReader.cs", label="0: !EnsureChars(1, false) || _chars[_charPos] != '*'", span="1312-1312"];
m4_707 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", color=red, community=0, file="JsonTextReader.cs", label="0: throw JsonReaderException.Create(this, ''Error parsing comment. Expected: *, got {0}.''.FormatWith(CultureInfo.InvariantCulture, _chars[_charPos]));", span="1313-1313"];
m4_709 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs", label="int initialPosition = _charPos", span="1317-1317"];
m4_710 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs", label="bool commentFinished = false", span="1319-1319"];
m4_715 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs", label="ReadData(true) == 0", span="1328-1328"];
m4_717 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs", label="_charPos++", span="1333-1333"];
m4_719 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs", label="_charPos++", span="1337-1337"];
m4_721 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", color=red, community=0, file="JsonTextReader.cs", label="0: _chars[_charPos] == '/'", span="1341-1341"];
m4_722 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", color=red, community=0, file="JsonTextReader.cs", label="0: _stringReference = new StringReference(_chars, initialPosition, _charPos - initialPosition - 1)", span="1343-1343"];
m4_724 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", color=red, community=0, file="JsonTextReader.cs", label="0: commentFinished = true", span="1346-1346"];
m4_726 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs", label="ProcessCarriageReturn(true)", span="1351-1351"];
m4_728 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs", label="ProcessLineFeed()", span="1354-1354"];
m4_688 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", color=red, community=0, file="JsonTextReader.cs", label="0: double.TryParse(number, NumberStyles.Float | NumberStyles.AllowThousands, NumberFormatInfo.CurrentInfo, out d)", span="1291-1291"];
m4_691 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="numberType = JsonToken.Float", span="1297-1297"];
m4_689 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="numberValue = d", span="1292-1292"];
m4_692 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="ClearRecentString()", span="1302-1302"];
m4_729 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs", label="_charPos++", span="1357-1357"];
m4_677 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="parseResult == ParseResult.Overflow", span="1266-1266"];
m4_667 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="numberType = JsonToken.Integer", span="1246-1246"];
m4_1635 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", span="2514-2514"];
m4_1637 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="JsonTextReader.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2517-2517"];
m4_1636 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="JsonTextReader.cs", label="string json = ''new Date,()''", span="2516-2516"];
m4_1638 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="JsonTextReader.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { Assert.IsTrue(reader.Read()); }, ''Unexpected character while parsing constructor: ,. Path '', line 1, position 8.'')", span="2519-2519"];
m4_1639 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", span="2514-2514"];
m4_20 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs", label="_charPos++", span="112-112"];
m4_23 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs", label="_readType == ReadType.ReadAsBytes", span="117-117"];
m4_25 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs", label="_stringReference.Length == 0", span="120-120"];
m4_27 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs", label="data = Convert.FromBase64CharArray(_stringReference.Chars, _stringReference.StartIndex, _stringReference.Length)", span="126-126"];
m4_29 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs", label="_readType == ReadType.ReadAsString", span="131-131"];
m4_31 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs", label="SetToken(JsonToken.String, text)", span="135-135"];
m4_35 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs", label="DateParseHandling dateParseHandling", span="144-144"];
m4_37 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs", label="dateParseHandling = DateParseHandling.DateTime", span="146-146"];
m4_22 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs", label="ReadStringIntoBuffer(quote)", span="115-115"];
m4_24 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs", label="byte[] data", span="119-119"];
m4_26 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs", label="data = new byte[0]", span="122-122"];
m4_28 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs", label="SetToken(JsonToken.Bytes, data)", span="129-129"];
m4_30 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs", label="string text = _stringReference.ToString()", span="133-133"];
m4_32 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs", label="_quoteChar = quote", span="136-136"];
m4_33 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs", label="string text = _stringReference.ToString()", span="140-140"];
m4_34 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs", label="_dateParseHandling != DateParseHandling.None", span="142-142"];
m4_36 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs", label="_readType == ReadType.ReadAsDateTime", span="145-145"];
m4_40 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs", label="dateParseHandling = _dateParseHandling", span="152-152"];
m4_38 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs", label="_readType == ReadType.ReadAsDateTimeOffset", span="148-148"];
m4_21 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs", label="ShiftBufferIfNeeded()", span="114-114"];
m4_39 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs", label="dateParseHandling = DateParseHandling.DateTimeOffset", span="149-149"];
m4_41 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs", label="object dt", span="154-154"];
m4_1384 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", span="2121-2121"];
m4_1387 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2127-2127"];
m4_1389 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2130-2130"];
m4_1386 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonTextReader.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2125-2125"];
m4_1388 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2128-2128"];
m4_1390 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2131-2131"];
m4_1392 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2134-2134"];
m4_1393 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonTextReader.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="2135-2135"];
m4_1394 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonTextReader.cs", label="Assert.AreEqual(1m, reader.Value)", span="2136-2136"];
m4_1391 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonTextReader.cs", label="reader.ReadAsDecimal()", span="2133-2133"];
m4_1385 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonTextReader.cs", label="string json = @''{''''Name'''':1}''", span="2123-2123"];
m4_1395 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", span="2121-2121"];
m4_555 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonTextReader.cs", label="int i = 0", span="914-914"];
m4_777 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", span="1252-1252"];
m4_778 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReader.cs", label="string input = ''{value:'Purple\\r \\n monkey\\'s:\\tdishwasher'}''", span="1254-1254"];
m4_779 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReader.cs", label="StringReader sr = new StringReader(input)", span="1256-1256"];
m4_780 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReader.cs", label="JsonReader jsonReader = new JsonTextReader(sr)", span="1258-1258"];
m4_259 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="charPos++", span="553-553"];
m4_261 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Bad JSON escape sequence: {0}.''.FormatWith(CultureInfo.InvariantCulture, @''\'' + currentChar));", span="555-555"];
m4_260 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="_charPos = charPos", span="554-554"];
m4_262 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="buffer == null", span="558-558"];
m4_263 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="buffer = GetBuffer()", span="559-559"];
m4_264 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="WriteCharToBuffer(buffer, writeChar, lastWritePosition, escapeStartPos)", span="561-561"];
m4_285 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="charPos++", span="596-596"];
m4_1367 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="JsonTextReader.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m4_1335 [cluster="System.TimeSpan.Add(System.TimeSpan)", file="JsonTextReader.cs", label="Entry System.TimeSpan.Add(System.TimeSpan)", span="0-0"];
m4_815 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", color=green, community=0, file="JsonTextReader.cs", label="0: reader = new JsonTextReader(new StringReader(''-0''))", span="1341-1341"];
m4_1894 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", span="2913-2913"];
m4_1897 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2922-2922"];
m4_1896 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JsonTextReader.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                MaxDepth = 1\r\n            }", span="2917-2920"];
m4_1898 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JsonTextReader.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { Assert.IsTrue(reader.Read()); }, ''The reader's MaxDepth of 1 has been exceeded. Path '[0]', line 1, position 2.'')", span="2924-2924"];
m4_1895 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JsonTextReader.cs", label="string json = ''[[]]''", span="2915-2915"];
m4_1899 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", span="2913-2913"];
m4_291 [cluster="lambda expression", file="JsonTextReader.cs", label="Entry lambda expression", span="505-510"];
m4_19 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseString(char)", span="110-110"];
m4_962 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(decimal)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(decimal)", span="934-934"];
m4_44 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs", label="return;", span="158-158"];
m4_403 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReader.cs", label="Assert.AreEqual(''array'', reader.Path)", span="696-696"];
m4_1436 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", span="2188-2188"];
m4_1437 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", file="JsonTextReader.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''/sdf''))", span="2190-2190"];
m4_1438 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", file="JsonTextReader.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Error parsing comment. Expected: *, got s. Path '', line 1, position 1.'')", span="2192-2192"];
m4_1439 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", span="2188-2188"];
m4_1015 [cluster="System.Convert.ToInt32(char)", file="JsonTextReader.cs", label="Entry System.Convert.ToInt32(char)", span="0-0"];
m4_1228 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", span="1887-1887"];
m4_1229 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", file="JsonTextReader.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[1.0]''))", span="1889-1889"];
m4_1230 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", file="JsonTextReader.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Unexpected token when reading bytes: Float. Path '[0]', line 1, position 4.'')", span="1891-1891"];
m4_1231 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", span="1887-1887"];
m4_1101 [cluster="System.Text.Encoding.GetString(byte[], int, int)", file="JsonTextReader.cs", label="Entry System.Text.Encoding.GetString(byte[], int, int)", span="0-0"];
m4_2035 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", span="3107-3107"];
m4_2038 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReader.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="3112-3112"];
m4_2043 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReader.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="3121-3121"];
m4_2048 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReader.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="3130-3130"];
m4_2037 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReader.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(toggleReaderError)", span="3110-3110"];
m4_2036 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReader.cs", label="ToggleReaderError toggleReaderError = new ToggleReaderError(new StringReader(''{'first':1,'second':2,'third':3}''))", span="3109-3109"];
m4_2044 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReader.cs", label="Assert.AreEqual(''first'', jsonTextReader.Value)", span="3122-3122"];
m4_2049 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReader.cs", label="Assert.AreEqual(1L, jsonTextReader.Value)", span="3131-3131"];
m4_2040 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReader.cs", label="ExceptionAssert.Throws<Exception>(() => jsonTextReader.Read(), ''Read error'')", span="3116-3116"];
m4_2041 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReader.cs", label="ExceptionAssert.Throws<Exception>(() => jsonTextReader.Read(), ''Read error'')", span="3117-3117"];
m4_2046 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReader.cs", label="ExceptionAssert.Throws<Exception>(() => jsonTextReader.Read(), ''Read error'')", span="3126-3126"];
m4_2051 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReader.cs", label="ExceptionAssert.Throws<Exception>(() => jsonTextReader.Read(), ''Read error'')", span="3135-3135"];
m4_2052 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReader.cs", label="ExceptionAssert.Throws<Exception>(() => jsonTextReader.Read(), ''Read error'')", span="3136-3136"];
m4_2053 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReader.cs", label="ExceptionAssert.Throws<Exception>(() => jsonTextReader.Read(), ''Read error'')", span="3137-3137"];
m4_2039 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReader.cs", label="toggleReaderError.Error = true", span="3114-3114"];
m4_2042 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReader.cs", label="toggleReaderError.Error = false", span="3119-3119"];
m4_2047 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReader.cs", label="toggleReaderError.Error = false", span="3128-3128"];
m4_2045 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReader.cs", label="toggleReaderError.Error = true", span="3124-3124"];
m4_2050 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReader.cs", label="toggleReaderError.Error = true", span="3133-3133"];
m4_2054 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReader.cs", label="toggleReaderError.Error = false", span="3139-3139"];
m4_2055 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", span="3107-3107"];
m4_302 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonTextReader.cs", label="Assert.AreEqual(3, reader.LineNumber)", span="534-534"];
m4_834 [cluster="int.ToString()", file="JsonTextReader.cs", label="Entry int.ToString()", span="0-0"];
m4_46 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JsonTextReader.cs", label="string json = @''{\r\n    ChildId: 333333333333333333333333333333333333333\r\n}''", span="126-128"];
m4_42 [cluster="Unk.Parse", file="JsonTextReader.cs", label="Entry Unk.Parse", span=""];
m4_45 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", span="124-124"];
m4_43 [cluster="Unk.IsFalse", file="JsonTextReader.cs", label="Entry Unk.IsFalse", span=""];
m4_47 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JsonTextReader.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="130-130"];
m4_219 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="writeChar = '\n'", span="472-472"];
m4_1891 [cluster="double.ToString(System.IFormatProvider)", file="JsonTextReader.cs", label="Entry double.ToString(System.IFormatProvider)", span="0-0"];
m4_69 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonTextReader.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => jsonTextReader.ReadAsInt32(), ''Error reading integer. Unexpected token: Undefined. Path '[2]', line 4, position 3.'')", span="165-165"];
m4_70 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonTextReader.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => jsonTextReader.ReadAsInt32(), ''Input string '0f' is not a valid integer. Path '[3]', line 5, position 5.'')", span="167-167"];
m4_71 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonTextReader.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="169-169"];
m4_1141 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", span="1765-1765"];
m4_1144 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReader.cs", label="Assert.IsTrue(jsonReader.Read())", span="1770-1770"];
m4_1158 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReader.cs", label="Assert.IsTrue(jsonReader.Read())", span="1788-1788"];
m4_1160 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReader.cs", label="Assert.IsFalse(jsonReader.Read())", span="1791-1791"];
m4_1143 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReader.cs", label="JsonTextReader jsonReader = new JsonTextReader(s)", span="1768-1768"];
m4_1142 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReader.cs", label="StringReader s = new StringReader(@''[0372, 0xFA, 0XFA]'')", span="1767-1767"];
m4_1146 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReader.cs", label="jsonReader.ReadAsInt32()", span="1773-1773"];
m4_1150 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReader.cs", label="jsonReader.ReadAsInt32()", span="1778-1778"];
m4_1154 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReader.cs", label="jsonReader.ReadAsInt32()", span="1783-1783"];
m4_1145 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="1771-1771"];
m4_1147 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1774-1774"];
m4_1148 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReader.cs", label="Assert.AreEqual(typeof(int), jsonReader.ValueType)", span="1775-1775"];
m4_1149 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReader.cs", label="Assert.AreEqual(250, jsonReader.Value)", span="1776-1776"];
m4_1151 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1779-1779"];
m4_1152 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReader.cs", label="Assert.AreEqual(typeof(int), jsonReader.ValueType)", span="1780-1780"];
m4_1153 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReader.cs", label="Assert.AreEqual(250, jsonReader.Value)", span="1781-1781"];
m4_1155 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1784-1784"];
m4_1156 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReader.cs", label="Assert.AreEqual(typeof(int), jsonReader.ValueType)", span="1785-1785"];
m4_1157 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReader.cs", label="Assert.AreEqual(250, jsonReader.Value)", span="1786-1786"];
m4_1159 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="1789-1789"];
m4_1161 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", span="1765-1765"];
m4_646 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="parseResult == ParseResult.Success", span="1199-1199"];
m4_647 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="numberValue = value", span="1200-1200"];
m4_648 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="parseResult == ParseResult.Overflow", span="1201-1201"];
m4_649 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''JSON integer {0} is too large or small for an Int32.''.FormatWith(CultureInfo.InvariantCulture, _stringReference.ToString()));", span="1202-1202"];
m4_1644 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", span="2523-2523"];
m4_1647 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2528-2528"];
m4_1649 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2531-2531"];
m4_1651 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2534-2534"];
m4_1653 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2537-2537"];
m4_1655 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2540-2540"];
m4_1657 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2543-2543"];
m4_1659 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2546-2546"];
m4_1661 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2549-2549"];
m4_1663 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2552-2552"];
m4_1665 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReader.cs", label="Assert.IsFalse(reader.Read())", span="2555-2555"];
m4_1646 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReader.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2526-2526"];
m4_1648 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2529-2529"];
m4_1650 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2532-2532"];
m4_1652 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2535-2535"];
m4_1654 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="2538-2538"];
m4_1656 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2541-2541"];
m4_1658 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2544-2544"];
m4_1660 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2547-2547"];
m4_1662 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2550-2550"];
m4_1664 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2553-2553"];
m4_1645 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReader.cs", label="string json = ''\x00a0{\x00a0'h\x00a0i\x00a0'\x00a0:\x00a0[\x00a0true\x00a0,\x00a0new\x00a0Date\x00a0(\x00a0)\x00a0]\x00a0/*\x00a0comment\x00a0*/\x00a0}\x00a0''", span="2525-2525"];
m4_1666 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", span="2523-2523"];
m4_795 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReader.cs", label="Assert.AreEqual(0, jsonReader.Depth)", span="1278-1278"];
m4_2056 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", span="3205-3205"];
m4_2101 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", file="JsonTextReader.cs", label="_inner = inner", span="3207-3207"];
m4_2102 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", span="3205-3205"];
m4_1482 [cluster="System.DateTime.DateTime(long)", file="JsonTextReader.cs", label="Entry System.DateTime.DateTime(long)", span="0-0"];
m4_141 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="260-260"];
m4_142 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="261-261"];
m4_143 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="263-263"];
m4_562 [cluster="char.IsNumber(char)", file="JsonTextReader.cs", label="Entry char.IsNumber(char)", span="0-0"];
m4_565 [cluster="Newtonsoft.Json.JsonTextReader.ProcessLineFeed()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ProcessLineFeed()", span="1018-1018"];
m4_564 [cluster="Newtonsoft.Json.JsonTextReader.ProcessLineFeed()", file="JsonTextReader.cs", label="OnNewLine(_charPos)", span="1021-1021"];
m4_566 [cluster="Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", file="JsonTextReader.cs", label="_charPos++", span="1026-1026"];
m4_570 [cluster="Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", span="1024-1024"];
m4_563 [cluster="Newtonsoft.Json.JsonTextReader.ProcessLineFeed()", file="JsonTextReader.cs", label="_charPos++", span="1020-1020"];
m4_569 [cluster="Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", file="JsonTextReader.cs", label="OnNewLine(_charPos)", span="1031-1031"];
m4_567 [cluster="Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", file="JsonTextReader.cs", label="EnsureChars(1, append) && _chars[_charPos] == StringUtils.LineFeed", span="1028-1028"];
m4_571 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs", label="bool finished = false", span="1036-1036"];
m4_568 [cluster="Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", file="JsonTextReader.cs", label="_charPos++", span="1029-1029"];
m4_572 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs", label="bool ateWhitespace = false", span="1037-1037"];
m4_2032 [cluster="System.DateTime.DateTime(long, System.DateTimeKind)", file="JsonTextReader.cs", label="Entry System.DateTime.DateTime(long, System.DateTimeKind)", span="0-0"];
m4_267 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="_charPos = charPos - 1", span="566-566"];
m4_269 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="charPos = _charPos", span="568-568"];
m4_273 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="charPos = _charPos", span="573-573"];
m4_274 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="''''", span="575-575"];
m4_276 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="_chars[charPos - 1] == quote", span="577-577"];
m4_278 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="initialPosition == lastWritePosition", span="581-581"];
m4_280 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="buffer == null", span="587-587"];
m4_282 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="charPos > lastWritePosition", span="590-590"];
m4_268 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="ProcessCarriageReturn(true)", span="567-567"];
m4_270 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="StringUtils.LineFeed", span="570-570"];
m4_271 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="_charPos = charPos - 1", span="571-571"];
m4_272 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="ProcessLineFeed()", span="572-572"];
m4_275 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="'\''", span="576-576"];
m4_277 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="charPos--", span="579-579"];
m4_279 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="_stringReference = new StringReference(_chars, initialPosition, charPos - initialPosition)", span="583-583"];
m4_281 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="buffer = GetBuffer()", span="588-588"];
m4_283 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="buffer.Append(_chars, lastWritePosition, charPos - lastWritePosition)", span="591-591"];
m4_987 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", span="1540-1540"];
m4_991 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReader.cs", label="reader.Read()", span="1547-1547"];
m4_993 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReader.cs", label="reader.Read()", span="1550-1550"];
m4_997 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="1555-1555"];
m4_999 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReader.cs", label="Assert.IsFalse(reader.Read())", span="1558-1558"];
m4_990 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReader.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1545-1545"];
m4_992 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="1548-1548"];
m4_994 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1551-1551"];
m4_995 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReader.cs", label="Assert.AreEqual(typeof(string), reader.ValueType)", span="1552-1552"];
m4_996 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReader.cs", label="Assert.AreEqual(20000, reader.Value.ToString().Length)", span="1553-1553"];
m4_998 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="1556-1556"];
m4_1000 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1559-1559"];
m4_989 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReader.cs", label="string json = @''['''''' + new string(' ', length) + @'''''']''", span="1543-1543"];
m4_988 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReader.cs", label="int length = 20000", span="1542-1542"];
m4_1001 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", span="1540-1540"];
m4_678 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="string number = _stringReference.ToString()", span="1269-1269"];
m4_679 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="numberValue = BigInteger.Parse(number, CultureInfo.InvariantCulture)", span="1270-1270"];
m4_681 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="string number = _stringReference.ToString()", span="1278-1278"];
m4_680 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="numberType = JsonToken.Integer", span="1271-1271"];
m4_682 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="_floatParseHandling == FloatParseHandling.Decimal", span="1280-1280"];
m4_520 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="'{'", span="966-966"];
m4_2093 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedPathInExceptionMessage()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedPathInExceptionMessage()", span="3173-3173"];
m4_2095 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedPathInExceptionMessage()", file="JsonTextReader.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                () =>\r\n                {\r\n                    JsonTextReader reader = new JsonTextReader(new StringReader(json));\r\n                    while (reader.Read())\r\n                    {\r\n                    }\r\n                },\r\n                ''Unexpected character encountered while parsing value: !. Path 'frameworks.aspnetcore50.dependencies.['System.Xml.ReaderWriter'].source', line 6, position 21.'')", span="3187-3195"];
m4_2094 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedPathInExceptionMessage()", file="JsonTextReader.cs", label="string json = @''{\r\n  ''''frameworks'''': {\r\n    ''''aspnetcore50'''': {\r\n      ''''dependencies'''': {\r\n        ''''System.Xml.ReaderWriter'''': {\r\n          ''''source'''': !!! !!!\r\n        }\r\n      }\r\n    }\r\n  }\r\n}''", span="3175-3185"];
m4_2096 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedPathInExceptionMessage()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedPathInExceptionMessage()", span="3173-3173"];
m4_454 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReader.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.StartArray)", span="759-759"];
m4_458 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReader.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="764-764"];
m4_459 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReader.cs", label="Assert.AreEqual(3, reader.Depth)", span="765-765"];
m4_465 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReader.cs", label="reader.Read()", span="773-773"];
m4_471 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReader.cs", label="Assert.AreEqual(0, reader.Depth)", span="780-780"];
m4_460 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReader.cs", label="Assert.AreEqual(''subobject.proparray[0]'', reader.Path)", span="766-766"];
m4_461 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReader.cs", label="reader.Read()", span="768-768"];
m4_467 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReader.cs", label="Assert.AreEqual(1, reader.Depth)", span="775-775"];
m4_462 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReader.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.EndArray)", span="769-769"];
m4_463 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReader.cs", label="Assert.AreEqual(2, reader.Depth)", span="770-770"];
m4_464 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReader.cs", label="Assert.AreEqual(''subobject.proparray'', reader.Path)", span="771-771"];
m4_466 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReader.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.EndObject)", span="774-774"];
m4_468 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReader.cs", label="Assert.AreEqual(''subobject'', reader.Path)", span="776-776"];
m4_470 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReader.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.EndObject)", span="779-779"];
m4_473 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", span="657-657"];
m4_469 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReader.cs", label="reader.Read()", span="778-778"];
m4_472 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReader.cs", label="Assert.AreEqual('''', reader.Path)", span="781-781"];
m4_474 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", span="786-786"];
m4_751 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1219-1219"];
m4_752 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReader.cs", label="byte[] data = reader.ReadAsBytes()", span="1220-1220"];
m4_769 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="1241-1241"];
m4_753 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReader.cs", label="CollectionAssert.AreEquivalent(helloWorldData, data)", span="1221-1221"];
m4_757 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReader.cs", label="Assert.IsFalse(reader.Read())", span="1226-1226"];
m4_761 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReader.cs", label="string helloWorld = ''Hello world!''", span="1232-1232"];
m4_764 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="1236-1236"];
m4_754 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Bytes, reader.TokenType)", span="1222-1222"];
m4_755 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="1223-1223"];
m4_756 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="1224-1224"];
m4_758 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", span="1210-1210"];
m4_759 [cluster="Unk.AreEquivalent", file="JsonTextReader.cs", label="Entry Unk.AreEquivalent", span=""];
m4_760 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", color=red, community=0, file="JsonTextReader.cs", label="0: Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", span="1230-1230"];
m4_762 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReader.cs", label="byte[] helloWorldData = Encoding.UTF8.GetBytes(helloWorld)", span="1233-1233"];
m4_763 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReader.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''{num:1,data:''' + Convert.ToBase64String(helloWorldData) + @'''}''))", span="1235-1235"];
m4_771 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReader.cs", label="CollectionAssert.AreEquivalent(helloWorldData, data)", span="1243-1243"];
m4_765 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1237-1237"];
m4_766 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="1238-1238"];
m4_767 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="1239-1239"];
m4_768 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1240-1240"];
m4_770 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReader.cs", label="byte[] data = reader.ReadAsBytes()", span="1242-1242"];
m4_772 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Bytes, reader.TokenType)", span="1244-1244"];
m4_258 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="charPos = _charPos", span="550-550"];
m4_808 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReader.cs", label="JsonTextReader reader = null", span="1330-1330"];
m4_809 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReader.cs", label="reader = new JsonTextReader(new StringReader(''1''))", span="1332-1332"];
m4_810 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReader.cs", label="Assert.AreEqual(1, reader.ReadAsInt32())", span="1333-1333"];
m4_811 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReader.cs", label="reader = new JsonTextReader(new StringReader(''-1''))", span="1335-1335"];
m4_812 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReader.cs", label="Assert.AreEqual(-1, reader.ReadAsInt32())", span="1336-1336"];
m4_813 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", color=green, community=0, file="JsonTextReader.cs", label="0: reader = new JsonTextReader(new StringReader(''0''))", span="1338-1338"];
m4_814 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", color=green, community=0, file="JsonTextReader.cs", label="0: Assert.AreEqual(0, reader.ReadAsInt32())", span="1339-1339"];
m4_430 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReader.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.EndArray)", span="729-729"];
m4_431 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReader.cs", label="Assert.AreEqual(1, reader.Depth)", span="730-730"];
m4_432 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReader.cs", label="Assert.AreEqual(''array'', reader.Path)", span="731-731"];
m4_433 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReader.cs", label="reader.Read()", span="733-733"];
m4_435 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReader.cs", label="Assert.AreEqual(1, reader.Depth)", span="735-735"];
m4_438 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReader.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.StartObject)", span="739-739"];
m4_449 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReader.cs", label="reader.Read()", span="753-753"];
m4_434 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReader.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="734-734"];
m4_436 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReader.cs", label="Assert.AreEqual(''subobject'', reader.Path)", span="736-736"];
m4_437 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReader.cs", label="reader.Read()", span="738-738"];
m4_439 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReader.cs", label="Assert.AreEqual(1, reader.Depth)", span="740-740"];
m4_442 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReader.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="744-744"];
m4_440 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReader.cs", label="Assert.AreEqual(''subobject'', reader.Path)", span="741-741"];
m4_441 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReader.cs", label="reader.Read()", span="743-743"];
m4_443 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReader.cs", label="Assert.AreEqual(2, reader.Depth)", span="745-745"];
m4_444 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReader.cs", label="Assert.AreEqual(''subobject.prop'', reader.Path)", span="746-746"];
m4_448 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReader.cs", label="Assert.AreEqual(''subobject.prop'', reader.Path)", span="751-751"];
m4_445 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReader.cs", label="reader.Read()", span="748-748"];
m4_446 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReader.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="749-749"];
m4_447 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReader.cs", label="Assert.AreEqual(2, reader.Depth)", span="750-750"];
m4_450 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReader.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="754-754"];
m4_451 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReader.cs", label="Assert.AreEqual(2, reader.Depth)", span="755-755"];
m4_452 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReader.cs", label="Assert.AreEqual(''subobject.proparray'', reader.Path)", span="756-756"];
m4_557 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonTextReader.cs", label="reader.Read()", span="916-916"];
m4_802 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", span="1297-1297"];
m4_803 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", color=green, community=0, file="JsonTextReader.cs", label="0: string json = @''[\r\n  true,\r\n  {\r\n    ''''integer'''': 99,\r\n    ''''string'''': ''''how now brown cow?'''',\r\n    ''''array'''': [\r\n      0,\r\n      1,\r\n      2,\r\n      3,\r\n      4,\r\n      {\r\n        ''''decimal'''': 990.00990099\r\n      },\r\n      5\r\n    ]\r\n  },\r\n  ''''This is a string.'''',\r\n  null,\r\n  null\r\n]''", span="1299-1319"];
m4_806 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", span="1297-1297"];
m4_804 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="JsonTextReader.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1321-1321"];
m4_805 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", color=green, community=0, file="JsonTextReader.cs", label="0: reader.Read()", span="1322-1322"];
m4_807 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", span="1328-1328"];
m4_816 [cluster="System.IO.TextReader.Close()", color=green, community=0, file="JsonTextReader.cs", label="0: Entry System.IO.TextReader.Close()", span="0-0"];
m4_817 [cluster="Newtonsoft.Json.Utilities.StringBuffer.Clear()", color=green, community=0, file="JsonTextReader.cs", label="0: Entry Newtonsoft.Json.Utilities.StringBuffer.Clear()", span="75-75"];
m4_824 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", color=green, community=0, file="JsonTextReader.cs", label="0: ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsInt32(), ''Unexpected character encountered while parsing number: s. Path '', line 1, position 77.'')", span="1354-1354"];
m4_823 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReader.cs", label="reader = new JsonTextReader(new StringReader(''9999999999999999999999999999999999999999999999999999999999999999999999999999asdasdasd''))", span="1353-1353"];
m4_825 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", color=green, community=0, file="JsonTextReader.cs", label="0: reader = new JsonTextReader(new StringReader(''1E-06''))", span="1356-1356"];
m4_826 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReader.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsInt32(), ''Input string '1E-06' is not a valid integer. Path '', line 1, position 5.'')", span="1357-1357"];
m4_827 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", color=green, community=0, file="JsonTextReader.cs", label="0: reader = new JsonTextReader(new StringReader(''1.1''))", span="1359-1359"];
m4_828 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", color=green, community=0, file="JsonTextReader.cs", label="0: ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsInt32(), ''Input string '1.1' is not a valid integer. Path '', line 1, position 3.'')", span="1360-1360"];
m4_829 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", color=green, community=0, file="JsonTextReader.cs", label="0: reader = new JsonTextReader(new StringReader(''''))", span="1362-1362"];
m4_830 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", color=green, community=0, file="JsonTextReader.cs", label="0: Assert.AreEqual(null, reader.ReadAsInt32())", span="1363-1363"];
m4_831 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReader.cs", label="reader = new JsonTextReader(new StringReader(''-''))", span="1365-1365"];
m4_821 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReader.cs", label="Newtonsoft.Json.JsonTextReader", span=""];
m4_822 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReader.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsInt32(), ''JSON integer 9223372036854775807 is too large or small for an Int32. Path '', line 1, position 19.'')", span="1351-1351"];
m4_832 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReader.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsInt32(), ''Input string '-' is not a valid integer. Path '', line 1, position 1.'')", span="1366-1366"];
m4_833 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", span="1328-1328"];
m4_1838 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", span="2835-2835"];
m4_1839 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JsonTextReader.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''{}}''))", span="2837-2837"];
m4_1842 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JsonTextReader.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Additional text encountered after finished reading JSON content: }. Path '', line 1, position 2.'')", span="2841-2841"];
m4_1840 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2838-2838"];
m4_1841 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2839-2839"];
m4_1843 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", span="2835-2835"];
m4_207 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="int escapeStartPos = charPos - 1", span="454-454"];
m4_210 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label=currentChar, span="460-460"];
m4_211 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="'b'", span="462-462"];
m4_212 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="charPos++", span="463-463"];
m4_209 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="char writeChar", span="458-458"];
m4_213 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="writeChar = '\b'", span="464-464"];
m4_215 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="charPos++", span="467-467"];
m4_217 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="'n'", span="470-470"];
m4_208 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="char currentChar = _chars[charPos]", span="456-456"];
m4_214 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="'t'", span="466-466"];
m4_216 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="writeChar = '\t'", span="468-468"];
m4_218 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="charPos++", span="471-471"];
m4_1120 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", span="1735-1735"];
m4_1123 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReader.cs", label="Assert.IsTrue(jsonReader.Read())", span="1740-1740"];
m4_1125 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReader.cs", label="jsonReader.Read()", span="1743-1743"];
m4_1129 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReader.cs", label="jsonReader.Read()", span="1748-1748"];
m4_1133 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReader.cs", label="jsonReader.Read()", span="1753-1753"];
m4_1137 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReader.cs", label="Assert.IsTrue(jsonReader.Read())", span="1758-1758"];
m4_1139 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReader.cs", label="Assert.IsFalse(jsonReader.Read())", span="1761-1761"];
m4_1122 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReader.cs", label="JsonTextReader jsonReader = new JsonTextReader(s)", span="1738-1738"];
m4_1121 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReader.cs", label="StringReader s = new StringReader(@''[0372, 0xFA, 0XFA]'')", span="1737-1737"];
m4_1124 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="1741-1741"];
m4_1126 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1744-1744"];
m4_1127 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReader.cs", label="Assert.AreEqual(typeof(long), jsonReader.ValueType)", span="1745-1745"];
m4_1128 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReader.cs", label="Assert.AreEqual((long)250, (long)jsonReader.Value)", span="1746-1746"];
m4_1130 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1749-1749"];
m4_1131 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReader.cs", label="Assert.AreEqual(typeof(long), jsonReader.ValueType)", span="1750-1750"];
m4_1132 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReader.cs", label="Assert.AreEqual((long)250, (long)jsonReader.Value)", span="1751-1751"];
m4_1134 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1754-1754"];
m4_1135 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReader.cs", label="Assert.AreEqual(typeof(long), jsonReader.ValueType)", span="1755-1755"];
m4_1136 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReader.cs", label="Assert.AreEqual((long)250, (long)jsonReader.Value)", span="1756-1756"];
m4_1138 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="1759-1759"];
m4_1140 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", span="1735-1735"];
m4_100 [cluster="System.Math.Max(int, int)", file="JsonTextReader.cs", label="Entry System.Math.Max(int, int)", span="0-0"];
m4_129 [cluster="lambda expression", file="JsonTextReader.cs", label="Exit lambda expression", span="240-240"];
m4_130 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", span="326-326"];
m4_131 [cluster="lambda expression", file="JsonTextReader.cs", label="Entry lambda expression", span="244-244"];
m4_1368 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", span="2095-2095"];
m4_1372 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2102-2102"];
m4_1374 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2105-2105"];
m4_1381 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2115-2115"];
m4_1370 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReader.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2099-2099"];
m4_1373 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2103-2103"];
m4_1375 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2106-2106"];
m4_1377 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2109-2109"];
m4_1378 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReader.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2110-2110"];
m4_1382 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2116-2116"];
m4_1380 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReader.cs", label="Assert.AreEqual(new DateTime(2011, 1, 30, 0, 0, 0, DateTimeKind.Unspecified), dt.DateTime)", span="2113-2113"];
m4_1371 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReader.cs", label="reader.Culture = new CultureInfo(''en-NZ'')", span="2100-2100"];
m4_1369 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReader.cs", label="string json = @''{''''Offset'''':''''30/1/2011''''}''", span="2097-2097"];
m4_1376 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReader.cs", label="reader.ReadAsDateTimeOffset()", span="2108-2108"];
m4_1379 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReader.cs", label="DateTimeOffset dt = (DateTimeOffset)reader.Value", span="2112-2112"];
m4_1383 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", span="2095-2095"];
m4_628 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="ShiftBufferIfNeeded()", span="1159-1159"];
m4_630 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="int initialPosition = _charPos", span="1162-1162"];
m4_631 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="ReadNumberIntoBuffer()", span="1164-1164"];
m4_632 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="_stringReference = new StringReference(_chars, initialPosition, _charPos - initialPosition)", span="1166-1166"];
m4_627 [cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeperator(string)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeperator(string)", span="1385-1385"];
m4_629 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="char firstChar = _chars[_charPos]", span="1161-1161"];
m4_633 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs", label="object numberValue", span="1168-1168"];
m4_1016 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", span="1586-1586"];
m4_1018 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReader.cs", label="JsonReader jsonReader = new JsonTextReader(new StringReader(json))", span="1591-1591"];
m4_1020 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="1594-1594"];
m4_1022 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1597-1597"];
m4_1023 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReader.cs", label="Assert.AreEqual(0.0, jsonReader.Value)", span="1598-1598"];
m4_1025 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1601-1601"];
m4_1026 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReader.cs", label="Assert.AreEqual(0.0, jsonReader.Value)", span="1602-1602"];
m4_1028 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1605-1605"];
m4_1029 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReader.cs", label="Assert.AreEqual(0.1, jsonReader.Value)", span="1606-1606"];
m4_1031 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1609-1609"];
m4_1032 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReader.cs", label="Assert.AreEqual(1.0, jsonReader.Value)", span="1610-1610"];
m4_1034 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1613-1613"];
m4_1035 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReader.cs", label="Assert.AreEqual(1.000001, jsonReader.Value)", span="1614-1614"];
m4_1037 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1617-1617"];
m4_1038 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReader.cs", label="Assert.AreEqual(1E-06, jsonReader.Value)", span="1618-1618"];
m4_1040 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1621-1621"];
m4_1041 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReader.cs", label="Assert.AreEqual(4.94065645841247E-324, jsonReader.Value)", span="1622-1622"];
m4_1043 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1625-1625"];
m4_1044 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReader.cs", label="Assert.AreEqual(double.PositiveInfinity, jsonReader.Value)", span="1626-1626"];
m4_1046 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1629-1629"];
m4_1047 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReader.cs", label="Assert.AreEqual(double.NegativeInfinity, jsonReader.Value)", span="1630-1630"];
m4_1049 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1633-1633"];
m4_1050 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReader.cs", label="Assert.AreEqual(double.NaN, jsonReader.Value)", span="1634-1634"];
m4_1052 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1637-1637"];
m4_1053 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReader.cs", label="Assert.AreEqual(double.MaxValue, jsonReader.Value)", span="1638-1638"];
m4_1055 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1641-1641"];
m4_1056 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReader.cs", label="Assert.AreEqual(double.MinValue, jsonReader.Value)", span="1642-1642"];
m4_1058 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1645-1645"];
m4_1059 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReader.cs", label="Assert.AreEqual(double.PositiveInfinity, jsonReader.Value)", span="1646-1646"];
m4_1061 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1649-1649"];
m4_1062 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReader.cs", label="Assert.AreEqual(double.NegativeInfinity, jsonReader.Value)", span="1650-1650"];
m4_1064 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1653-1653"];
m4_1065 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReader.cs", label="Assert.AreEqual(double.NaN, jsonReader.Value)", span="1654-1654"];
m4_1067 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1657-1657"];
m4_1068 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReader.cs", label="Assert.AreEqual(0d, jsonReader.Value)", span="1658-1658"];
m4_1070 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1661-1661"];
m4_1071 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReader.cs", label="Assert.AreEqual(0.0000025d, jsonReader.Value)", span="1662-1662"];
m4_1073 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1665-1665"];
m4_1074 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReader.cs", label="Assert.AreEqual(3000000000d, jsonReader.Value)", span="1666-1666"];
m4_1076 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="1669-1669"];
m4_1017 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReader.cs", label="string json =\r\n                @''[0.0,0.0,0.1,1.0,1.000001,1E-06,4.94065645841247E-324,Infinity,-Infinity,NaN,1.7976931348623157E+308,-1.7976931348623157E+308,Infinity,-Infinity,NaN,0e-10,0.25e-5,0.3e10]''", span="1588-1589"];
m4_1019 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReader.cs", label="jsonReader.Read()", span="1593-1593"];
m4_1021 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReader.cs", label="jsonReader.Read()", span="1596-1596"];
m4_1024 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReader.cs", label="jsonReader.Read()", span="1600-1600"];
m4_1027 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReader.cs", label="jsonReader.Read()", span="1604-1604"];
m4_1030 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReader.cs", label="jsonReader.Read()", span="1608-1608"];
m4_1033 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReader.cs", label="jsonReader.Read()", span="1612-1612"];
m4_1036 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReader.cs", label="jsonReader.Read()", span="1616-1616"];
m4_1039 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReader.cs", label="jsonReader.Read()", span="1620-1620"];
m4_1042 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReader.cs", label="jsonReader.Read()", span="1624-1624"];
m4_1045 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReader.cs", label="jsonReader.Read()", span="1628-1628"];
m4_1048 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReader.cs", label="jsonReader.Read()", span="1632-1632"];
m4_1051 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReader.cs", label="jsonReader.Read()", span="1636-1636"];
m4_1054 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReader.cs", label="jsonReader.Read()", span="1640-1640"];
m4_1057 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReader.cs", label="jsonReader.Read()", span="1644-1644"];
m4_1060 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReader.cs", label="jsonReader.Read()", span="1648-1648"];
m4_1063 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReader.cs", label="jsonReader.Read()", span="1652-1652"];
m4_1066 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReader.cs", label="jsonReader.Read()", span="1656-1656"];
m4_1069 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReader.cs", label="jsonReader.Read()", span="1660-1660"];
m4_1072 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReader.cs", label="jsonReader.Read()", span="1664-1664"];
m4_1075 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReader.cs", label="jsonReader.Read()", span="1668-1668"];
m4_1077 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", span="1586-1586"];
m4_1170 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", span="1805-1805"];
m4_1171 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="JsonTextReader.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''''))", span="1807-1807"];
m4_1173 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1810-1810"];
m4_1172 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="JsonTextReader.cs", label="Assert.IsNull(reader.ReadAsDecimal())", span="1809-1809"];
m4_1174 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", span="1805-1805"];
m4_560 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="920-920"];
m4_635 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="JsonTextReader.cs", label="JsonReader reader = new JsonTextReader(new StringReader('''h\0i'''))", span="1042-1042"];
m4_636 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="1043-1043"];
m4_639 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", span="1049-1049"];
m4_666 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", span="1073-1073"];
m4_634 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", span="1040-1040"];
m4_638 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", span="1040-1040"];
m4_665 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JsonTextReader.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Unterminated string. Expected delimiter: '. Path '', line 1, position 17.'')", span="1080-1080"];
m4_637 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="JsonTextReader.cs", label="Assert.AreEqual(''h\0i'', reader.Value)", span="1045-1045"];
m4_640 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="JsonTextReader.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@'''h\u123''))", span="1051-1051"];
m4_668 [cluster="lambda expression", file="JsonTextReader.cs", label="Entry lambda expression", span="1080-1080"];
m4_652 [cluster="lambda expression", file="JsonTextReader.cs", label="Exit lambda expression", span="1061-1061"];
m4_641 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="JsonTextReader.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected end while parsing unicode character. Path '', line 1, position 4.'')", span="1053-1053"];
m4_644 [cluster="lambda expression", file="JsonTextReader.cs", label="reader.Read()", span="1053-1053"];
m4_642 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", span="1049-1049"];
m4_643 [cluster="lambda expression", file="JsonTextReader.cs", label="Entry lambda expression", span="1053-1053"];
m4_645 [cluster="lambda expression", file="JsonTextReader.cs", label="Exit lambda expression", span="1053-1053"];
m4_650 [cluster="lambda expression", file="JsonTextReader.cs", label="Entry lambda expression", span="1061-1061"];
m4_651 [cluster="lambda expression", file="JsonTextReader.cs", label="reader.Read()", span="1061-1061"];
m4_659 [cluster="lambda expression", file="JsonTextReader.cs", label="Exit lambda expression", span="1069-1069"];
m4_657 [cluster="lambda expression", file="JsonTextReader.cs", label="Entry lambda expression", span="1069-1069"];
m4_658 [cluster="lambda expression", file="JsonTextReader.cs", label="reader.ReadAsBytes()", span="1069-1069"];
m4_660 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsBytes()", span="383-383"];
m4_661 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", span="1073-1073"];
m4_662 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JsonTextReader.cs", label="string helloWorld = ''Hello world!''", span="1075-1075"];
m4_663 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JsonTextReader.cs", label="byte[] helloWorldData = Encoding.UTF8.GetBytes(helloWorld)", span="1076-1076"];
m4_664 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JsonTextReader.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''''' + Convert.ToBase64String(helloWorldData)))", span="1078-1078"];
m4_669 [cluster="lambda expression", file="JsonTextReader.cs", label="reader.ReadAsBytes()", span="1080-1080"];
m4_672 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JsonTextReader.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''[  ''))", span="1086-1086"];
m4_670 [cluster="lambda expression", file="JsonTextReader.cs", label="Exit lambda expression", span="1080-1080"];
m4_671 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", span="1084-1084"];
m4_673 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="1087-1087"];
m4_674 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JsonTextReader.cs", label="Assert.IsNull(reader.ReadAsBytes())", span="1089-1089"];
m4_675 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1090-1090"];
m4_676 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", span="1084-1084"];
m4_684 [cluster="lambda expression", file="JsonTextReader.cs", label="reader.Read()", span="1099-1099"];
m4_683 [cluster="lambda expression", file="JsonTextReader.cs", label="Entry lambda expression", span="1099-1099"];
m4_685 [cluster="lambda expression", file="JsonTextReader.cs", label="Exit lambda expression", span="1099-1099"];
m4_144 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="264-264"];
m4_453 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReader.cs", label="reader.Read()", span="758-758"];
m4_455 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReader.cs", label="Assert.AreEqual(2, reader.Depth)", span="760-760"];
m4_456 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReader.cs", label="Assert.AreEqual(''subobject.proparray'', reader.Path)", span="761-761"];
m4_2108 [cluster="System.Exception.Exception(string)", file="JsonTextReader.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m4_62 [cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonTextReader.cs", label="count > 0", span="182-182"];
m4_65 [cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonTextReader.cs", label="_charPos = 0", span="186-186"];
m4_73 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs", label=_isEndOfFile, span="199-199"];
m4_64 [cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonTextReader.cs", label="_lineStartPos -= _charPos", span="185-185"];
m4_66 [cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonTextReader.cs", label="_charsUsed = count", span="187-187"];
m4_72 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", span="197-197"];
m4_67 [cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonTextReader.cs", label="_chars[_charsUsed] = '\0'", span="188-188"];
m4_68 [cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", span="174-174"];
m4_63 [cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonTextReader.cs", label="BlockCopyChars(_chars, _charPos, _chars, 0, count)", span="183-183"];
m4_74 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs", label="return 0;", span="200-200"];
m4_1573 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", span="2426-2426"];
m4_1576 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2431-2431"];
m4_1577 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2432-2432"];
m4_1578 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonTextReader.cs", label="Assert.IsFalse(reader.Read())", span="2433-2433"];
m4_1575 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonTextReader.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2429-2429"];
m4_1574 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonTextReader.cs", label="string json = ''[true ''", span="2428-2428"];
m4_1579 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", span="2426-2426"];
m4_801 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity()", span="1497-1497"];
m4_176 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs", label="return true;", span="404-404"];
m4_180 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs", label="State.Error", span="414-414"];
m4_178 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs", label="return false;", span="411-411"];
m4_181 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Unexpected state: {0}.''.FormatWith(CultureInfo.InvariantCulture, CurrentState));", span="417-417"];
m4_182 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadInternal()", span="369-369"];
m4_179 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs", label="State.Closed", span="412-412"];
m4_177 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Additional text encountered after finished reading JSON content: {0}.''.FormatWith(CultureInfo.InvariantCulture, _chars[_charPos]));", span="408-408"];
m4_183 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseValue()", span="902-902"];
m4_521 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="_charPos++", span="967-967"];
m4_524 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="'['", span="970-970"];
m4_526 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="SetToken(JsonToken.StartArray)", span="972-972"];
m4_528 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="']'", span="974-974"];
m4_530 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="SetToken(JsonToken.EndArray)", span="976-976"];
m4_532 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="','", span="978-978"];
m4_534 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="return true;", span="982-982"];
m4_536 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="_charPos++", span="984-984"];
m4_538 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="return true;", span="986-986"];
m4_540 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="ProcessCarriageReturn(false)", span="988-988"];
m4_542 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="ProcessLineFeed()", span="991-991"];
m4_544 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="StringUtils.Tab", span="994-994"];
m4_547 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="_charPos++", span="1002-1002"];
m4_550 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="return true;", span="1008-1008"];
m4_523 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="return true;", span="969-969"];
m4_525 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="_charPos++", span="971-971"];
m4_527 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="return true;", span="973-973"];
m4_529 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="_charPos++", span="975-975"];
m4_531 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="return true;", span="977-977"];
m4_533 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="SetToken(JsonToken.Undefined)", span="981-981"];
m4_535 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="')'", span="983-983"];
m4_537 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="SetToken(JsonToken.EndConstructor)", span="985-985"];
m4_539 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="StringUtils.CarriageReturn", span="987-987"];
m4_541 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="StringUtils.LineFeed", span="990-990"];
m4_543 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="' '", span="993-993"];
m4_545 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="_charPos++", span="996-996"];
m4_546 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="char.IsWhiteSpace(currentChar)", span="999-999"];
m4_548 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="char.IsNumber(currentChar) || currentChar == '-' || currentChar == '.'", span="1005-1005"];
m4_549 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="ParseNumber()", span="1007-1007"];
m4_522 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="SetToken(JsonToken.StartObject)", span="968-968"];
m4_551 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Unexpected character encountered while parsing value: {0}.''.FormatWith(CultureInfo.InvariantCulture, currentChar));", span="1012-1012"];
m4_134 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="JsonTextReader.cs", label="return ReadAsDecimalInternal();", span="328-328"];
m4_137 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsInt32()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsInt32()", span="335-335"];
m4_139 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsInt32()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadAsInt32()", span="335-335"];
m4_136 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", span="533-533"];
m4_138 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsInt32()", file="JsonTextReader.cs", label="return ReadAsInt32Internal();", span="337-337"];
m4_140 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", span="590-590"];
m4_145 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", span="353-353"];
m4_135 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", span="326-326"];
m4_146 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", file="JsonTextReader.cs", label="return ReadAsDateTimeInternal();", span="355-355"];
m4_554 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonTextReader.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="909-909"];
m4_785 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReader.cs", label="jsonReader.Read()", span="1266-1266"];
m4_786 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonReader.TokenType)", span="1267-1267"];
m4_787 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReader.cs", label="Assert.AreEqual(1, jsonReader.Depth)", span="1268-1268"];
m4_788 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReader.cs", label="jsonReader.Read()", span="1270-1270"];
m4_1596 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", span="2455-2455"];
m4_1599 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2460-2460"];
m4_1600 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2461-2461"];
m4_1601 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2462-2462"];
m4_1602 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonTextReader.cs", label="Assert.IsFalse(reader.Read())", span="2463-2463"];
m4_1598 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonTextReader.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2458-2458"];
m4_1597 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonTextReader.cs", label="string json = ''{hi:1, ''", span="2457-2457"];
m4_1603 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", span="2455-2455"];
m4_955 [cluster="System.IO.StringWriter.StringWriter(System.Text.StringBuilder)", file="JsonTextReader.cs", label="Entry System.IO.StringWriter.StringWriter(System.Text.StringBuilder)", span="0-0"];
m4_7 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", span="55-55"];
m4_1422 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", span="2172-2172"];
m4_1423 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", file="JsonTextReader.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''nullz''))", span="2174-2174"];
m4_1424 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", file="JsonTextReader.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Error parsing null value. Path '', line 1, position 4.'')", span="2176-2176"];
m4_1425 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", span="2172-2172"];
m4_315 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", file="JsonTextReader.cs", label="reader.Read()", span="557-557"];
m4_316 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", span="546-546"];
m4_317 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", span="563-563"];
m4_318 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="JsonTextReader.cs", label="string json = @'''hi' a''", span="565-565"];
m4_319 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="JsonTextReader.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="567-567"];
m4_327 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReader.cs", label="StringReader sr = new StringReader(input)", span="588-588"];
m4_354 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReader.cs", label="Assert.AreEqual(12, jsonReader.LinePosition)", span="626-626"];
m4_320 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="JsonTextReader.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                while (reader.Read())\r\n                {\r\n                }\r\n            }, ''Additional text encountered after finished reading JSON content: a. Path '', line 1, position 5.'')", span="569-574"];
m4_321 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", span="563-563"];
m4_325 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", span="578-578"];
m4_322 [cluster="lambda expression", file="JsonTextReader.cs", label="Entry lambda expression", span="569-574"];
m4_323 [cluster="lambda expression", file="JsonTextReader.cs", label="reader.Read()", span="571-571"];
m4_324 [cluster="lambda expression", file="JsonTextReader.cs", label="Exit lambda expression", span="569-574"];
m4_326 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReader.cs", label="string input = @''{\r\n  CPU: 'Intel',\r\n  Drives: [\r\n    'DVD read/writer',\r\n    ''''500 gigabyte hard drive''''\r\n  ]\r\n}''", span="580-586"];
m4_328 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReader.cs", label="JsonTextReader jsonReader = new JsonTextReader(sr)", span="590-590"];
m4_329 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReader.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.None)", span="596-596"];
m4_330 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReader.cs", label="Assert.AreEqual(0, jsonReader.LineNumber)", span="597-597"];
m4_331 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReader.cs", label="Assert.AreEqual(0, jsonReader.LinePosition)", span="598-598"];
m4_332 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReader.cs", label="jsonReader.Read()", span="600-600"];
m4_333 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReader.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.StartObject)", span="601-601"];
m4_334 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReader.cs", label="Assert.AreEqual(1, jsonReader.LineNumber)", span="602-602"];
m4_335 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReader.cs", label="Assert.AreEqual(1, jsonReader.LinePosition)", span="603-603"];
m4_336 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReader.cs", label="jsonReader.Read()", span="605-605"];
m4_337 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReader.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.PropertyName)", span="606-606"];
m4_338 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReader.cs", label="Assert.AreEqual(jsonReader.Value, ''CPU'')", span="607-607"];
m4_339 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReader.cs", label="Assert.AreEqual(2, jsonReader.LineNumber)", span="608-608"];
m4_340 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReader.cs", label="Assert.AreEqual(7, jsonReader.LinePosition)", span="609-609"];
m4_341 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReader.cs", label="jsonReader.Read()", span="611-611"];
m4_342 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.String, jsonReader.TokenType)", span="612-612"];
m4_343 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReader.cs", label="Assert.AreEqual(''Intel'', jsonReader.Value)", span="613-613"];
m4_344 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReader.cs", label="Assert.AreEqual(2, jsonReader.LineNumber)", span="614-614"];
m4_345 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReader.cs", label="Assert.AreEqual(15, jsonReader.LinePosition)", span="615-615"];
m4_346 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReader.cs", label="jsonReader.Read()", span="617-617"];
m4_347 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReader.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.PropertyName)", span="618-618"];
m4_348 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReader.cs", label="Assert.AreEqual(jsonReader.Value, ''Drives'')", span="619-619"];
m4_349 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReader.cs", label="Assert.AreEqual(3, jsonReader.LineNumber)", span="620-620"];
m4_350 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReader.cs", label="Assert.AreEqual(10, jsonReader.LinePosition)", span="621-621"];
m4_351 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReader.cs", label="jsonReader.Read()", span="623-623"];
m4_352 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReader.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.StartArray)", span="624-624"];
m4_353 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReader.cs", label="Assert.AreEqual(3, jsonReader.LineNumber)", span="625-625"];
m4_355 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReader.cs", label="jsonReader.Read()", span="628-628"];
m4_356 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReader.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.String)", span="629-629"];
m4_128 [cluster="lambda expression", file="JsonTextReader.cs", label="reader.ReadAsDecimal()", span="240-240"];
m4_475 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label=true, span="904-904"];
m4_476 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="char currentChar = _chars[_charPos]", span="906-906"];
m4_296 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonTextReader.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="522-522"];
m4_148 [cluster="lambda expression", file="JsonTextReader.cs", label="reader.Read()", span="266-266"];
m4_290 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", span="495-495"];
m4_561 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", span="888-888"];
m4_781 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReader.cs", label="Assert.AreEqual(0, jsonReader.Depth)", span="1260-1260"];
m4_782 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReader.cs", label="jsonReader.Read()", span="1262-1262"];
m4_783 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.StartObject, jsonReader.TokenType)", span="1263-1263"];
m4_784 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReader.cs", label="Assert.AreEqual(0, jsonReader.Depth)", span="1264-1264"];
m4_312 [cluster="string.String(char[], int, int)", file="JsonTextReader.cs", label="Entry string.String(char[], int, int)", span="0-0"];
m4_314 [cluster="System.Convert.ToChar(int)", file="JsonTextReader.cs", label="Entry System.Convert.ToChar(int)", span="0-0"];
m4_313 [cluster="int.Parse(string, System.Globalization.NumberStyles, System.IFormatProvider)", file="JsonTextReader.cs", label="Entry int.Parse(string, System.Globalization.NumberStyles, System.IFormatProvider)", span="0-0"];
m4_851 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", span="1370-1370"];
m4_852 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", color=green, community=0, file="JsonTextReader.cs", label="0: JsonTextReader reader = null", span="1372-1372"];
m4_853 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReader.cs", label="reader = new JsonTextReader(new StringReader(''1.1''))", span="1374-1374"];
m4_855 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", color=green, community=0, file="JsonTextReader.cs", label="0: reader = new JsonTextReader(new StringReader(''-1.1''))", span="1377-1377"];
m4_854 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReader.cs", label="Assert.AreEqual(1.1m, reader.ReadAsDecimal())", span="1375-1375"];
m4_856 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", color=green, community=0, file="JsonTextReader.cs", label="0: Assert.AreEqual(-1.1m, reader.ReadAsDecimal())", span="1378-1378"];
m4_857 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", color=green, community=0, file="JsonTextReader.cs", label="0: reader = new JsonTextReader(new StringReader(''0.0''))", span="1380-1380"];
m4_858 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", color=green, community=0, file="JsonTextReader.cs", label="0: Assert.AreEqual(0.0m, reader.ReadAsDecimal())", span="1381-1381"];
m4_859 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReader.cs", label="reader = new JsonTextReader(new StringReader(''-0.0''))", span="1383-1383"];
m4_861 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReader.cs", label="reader = new JsonTextReader(new StringReader(''9999999999999999999999999999999999999999999999999999999999999999999999999999asdasdasd''))", span="1386-1386"];
m4_863 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReader.cs", label="reader = new JsonTextReader(new StringReader(''9999999999999999999999999999999999999999999999999999999999999999999999999999asdasdasd''))", span="1389-1389"];
m4_866 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReader.cs", label="reader = new JsonTextReader(new StringReader(''1E-06''))", span="1393-1393"];
m4_868 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReader.cs", label="reader = new JsonTextReader(new StringReader(''''))", span="1396-1396"];
m4_870 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReader.cs", label="reader = new JsonTextReader(new StringReader(''-''))", span="1399-1399"];
m4_860 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReader.cs", label="Assert.AreEqual(0, reader.ReadAsDecimal())", span="1384-1384"];
m4_867 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReader.cs", label="Assert.AreEqual(0.000001m, reader.ReadAsDecimal())", span="1394-1394"];
m4_869 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReader.cs", label="Assert.AreEqual(null, reader.ReadAsDecimal())", span="1397-1397"];
m4_862 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReader.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsDecimal(), ''Unexpected character encountered while parsing number: s. Path '', line 1, position 77.'')", span="1387-1387"];
m4_865 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReader.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.Read(), ''Unexpected character encountered while parsing number: s. Path '', line 1, position 77.'')", span="1391-1391"];
m4_871 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReader.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsDecimal(), ''Input string '-' is not a valid decimal. Path '', line 1, position 1.'')", span="1400-1400"];
m4_864 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReader.cs", label="reader.FloatParseHandling = Json.FloatParseHandling.Decimal", span="1390-1390"];
m4_872 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", span="1370-1370"];
m4_361 [cluster="Newtonsoft.Json.JsonTextReader.ClearRecentString()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ClearRecentString()", span="690-690"];
m4_367 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="_charsUsed == _charPos", span="707-707"];
m4_371 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="_charPos++", span="717-717"];
m4_375 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="return true;", span="723-723"];
m4_357 [cluster="Newtonsoft.Json.JsonTextReader.ClearRecentString()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ClearRecentString()", span="690-690"];
m4_358 [cluster="Newtonsoft.Json.JsonTextReader.ClearRecentString()", file="JsonTextReader.cs", label="_buffer != null", span="692-692"];
m4_359 [cluster="Newtonsoft.Json.JsonTextReader.ClearRecentString()", file="JsonTextReader.cs", label="_buffer.Position = 0", span="693-693"];
m4_360 [cluster="Newtonsoft.Json.JsonTextReader.ClearRecentString()", file="JsonTextReader.cs", label="_stringReference = new StringReference()", span="695-695"];
m4_362 [cluster="Newtonsoft.Json.Utilities.StringReference.StringReference()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Utilities.StringReference.StringReference()", span="27-27"];
m4_363 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label=true, span="700-700"];
m4_364 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="char currentChar = _chars[_charPos]", span="702-702"];
m4_365 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label=currentChar, span="704-704"];
m4_366 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="'\0'", span="706-706"];
m4_368 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="ReadData(false) == 0", span="709-709"];
m4_369 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="_currentState = State.Finished", span="711-711"];
m4_370 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="return false;", span="712-712"];
m4_372 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="'}'", span="720-720"];
m4_373 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="_charPos++", span="721-721"];
m4_374 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="SetToken(JsonToken.EndObject)", span="722-722"];
m4_376 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="']'", span="724-724"];
m4_733 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="1197-1197"];
m4_734 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="1198-1198"];
m4_737 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="1201-1201"];
m4_738 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1202-1202"];
m4_741 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1205-1205"];
m4_735 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1199-1199"];
m4_736 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReader.cs", label="Assert.AreEqual(''hi\r\nbye'', reader.Value)", span="1200-1200"];
m4_740 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="1204-1204"];
m4_739 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReader.cs", label="Assert.AreEqual(1L, reader.Value)", span="1203-1203"];
m4_742 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReader.cs", label="Assert.IsFalse(reader.Read())", span="1206-1206"];
m4_743 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", span="1194-1194"];
m4_286 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="_charPos = charPos", span="597-597"];
m4_288 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", span="422-422"];
m4_289 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseUnicode()", span="615-615"];
m4_287 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="return;", span="598-598"];
m4_1192 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", span="363-363"];
m4_149 [cluster="lambda expression", file="JsonTextReader.cs", label="Exit lambda expression", span="266-266"];
m4_150 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", span="270-270"];
m4_151 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReader.cs", label="string json = ''[1.0,1,9.9,1E-06]''", span="272-272"];
m4_1457 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", span="2218-2218"];
m4_1461 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2225-2225"];
m4_1463 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2228-2228"];
m4_1469 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2236-2236"];
m4_1459 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReader.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2222-2222"];
m4_1462 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2226-2226"];
m4_1464 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2229-2229"];
m4_1466 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2232-2232"];
m4_1467 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReader.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="2233-2233"];
m4_1470 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2237-2237"];
m4_1468 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReader.cs", label="Assert.AreEqual(9.99m, d)", span="2234-2234"];
m4_1465 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReader.cs", label="decimal? d = reader.ReadAsDecimal()", span="2231-2231"];
m4_1460 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReader.cs", label="reader.Culture = new CultureInfo(''fr-FR'')", span="2223-2223"];
m4_1458 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReader.cs", label="string json = @''{''''decimal'''':''''9,99''''}''", span="2220-2220"];
m4_1471 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", span="2218-2218"];
m4_1472 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", span="2241-2241"];
m4_1477 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonTextReader.cs", label="reader.Read()", span="2263-2263"];
m4_1479 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2266-2266"];
m4_1474 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonTextReader.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2256-2256"];
m4_1480 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonTextReader.cs", label="Assert.AreEqual(new DateTime(631136448000000000), reader.Value)", span="2267-2267"];
m4_1476 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonTextReader.cs", label="i < 13", span="2261-2261"];
m4_1478 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonTextReader.cs", label="i++", span="2261-2261"];
m4_1473 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonTextReader.cs", label="string json = @''[\r\n  {\r\n    ''''Name'''': ''''Jim'''',\r\n    ''''BirthDate'''': ''''\/Date(978048000000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(978048000000)\/''''\r\n  },\r\n  {\r\n    ''''Name'''': ''''Jim'''',\r\n    ''''BirthDate'''': ''''\/Date(978048000000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(978048000000)\/''''\r\n  }\r\n]''", span="2243-2254"];
m4_1475 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonTextReader.cs", label="int i = 0", span="2261-2261"];
m4_1481 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", span="2241-2241"];
m4_1903 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", span="2928-2928"];
m4_1906 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2937-2937"];
m4_1910 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2943-2943"];
m4_1912 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2946-2946"];
m4_1914 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2949-2949"];
m4_1916 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2952-2952"];
m4_1918 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2955-2955"];
m4_1922 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2961-2961"];
m4_1924 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2964-2964"];
m4_1926 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2967-2967"];
m4_1928 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2970-2970"];
m4_1930 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReader.cs", label="Assert.IsFalse(reader.Read())", span="2973-2973"];
m4_1905 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReader.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                MaxDepth = 1\r\n            }", span="2932-2935"];
m4_1907 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReader.cs", label="Assert.AreEqual(0, reader.Depth)", span="2938-2938"];
m4_1909 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReader.cs", label="Assert.AreEqual(1, reader.Depth)", span="2941-2941"];
m4_1911 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReader.cs", label="Assert.AreEqual(2, reader.Depth)", span="2944-2944"];
m4_1913 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReader.cs", label="Assert.AreEqual(3, reader.Depth)", span="2947-2947"];
m4_1915 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReader.cs", label="Assert.AreEqual(3, reader.Depth)", span="2950-2950"];
m4_1917 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReader.cs", label="Assert.AreEqual(2, reader.Depth)", span="2953-2953"];
m4_1919 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReader.cs", label="Assert.AreEqual(1, reader.Depth)", span="2956-2956"];
m4_1921 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReader.cs", label="Assert.AreEqual(1, reader.Depth)", span="2959-2959"];
m4_1923 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReader.cs", label="Assert.AreEqual(2, reader.Depth)", span="2962-2962"];
m4_1925 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReader.cs", label="Assert.AreEqual(2, reader.Depth)", span="2965-2965"];
m4_1927 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReader.cs", label="Assert.AreEqual(1, reader.Depth)", span="2968-2968"];
m4_1929 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReader.cs", label="Assert.AreEqual(0, reader.Depth)", span="2971-2971"];
m4_1904 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReader.cs", label="string json = ''[[[[]]],[[]]]''", span="2930-2930"];
m4_1908 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReader.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { Assert.IsTrue(reader.Read()); }, ''The reader's MaxDepth of 1 has been exceeded. Path '[0]', line 1, position 2.'')", span="2940-2940"];
m4_1920 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReader.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { Assert.IsTrue(reader.Read()); }, ''The reader's MaxDepth of 1 has been exceeded. Path '[1]', line 1, position 9.'')", span="2958-2958"];
m4_1931 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", span="2928-2928"];
m4_133 [cluster="lambda expression", file="JsonTextReader.cs", label="Exit lambda expression", span="244-244"];
m4_1429 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", span="2180-2180"];
m4_1430 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", file="JsonTextReader.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''/* sdf''))", span="2182-2182"];
m4_1431 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", file="JsonTextReader.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected end while parsing comment. Path '', line 1, position 6.'')", span="2184-2184"];
m4_1432 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", span="2180-2180"];
m4_115 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs", label="totalCharsRead < charsRequired", span="285-285"];
m4_117 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs", label="return false;", span="288-288"];
m4_119 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", span="265-265"];
m4_118 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs", label="return true;", span="289-289"];
m4_116 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs", label="totalCharsRead < charsRequired", span="287-287"];
m4_1207 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", span="1859-1859"];
m4_1208 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", file="JsonTextReader.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''new Date()''))", span="1861-1861"];
m4_1209 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", file="JsonTextReader.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDateTimeOffset(); }, ''Error reading date. Unexpected token: StartConstructor. Path '', line 1, position 9.'')", span="1863-1863"];
m4_1210 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", span="1859-1859"];
m4_235 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="charPos++", span="493-493"];
m4_238 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="StringUtils.IsLowSurrogate(writeChar)", span="497-497"];
m4_237 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="writeChar = ParseUnicode()", span="495-495"];
m4_239 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="writeChar = UnicodeReplacementChar", span="500-500"];
m4_236 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="_charPos = charPos", span="494-494"];
m4_240 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="StringUtils.IsHighSurrogate(writeChar)", span="502-502"];
m4_241 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="bool anotherHighSurrogate", span="504-504"];
m4_1443 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", span="2196-2196"];
m4_1446 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2202-2202"];
m4_1448 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2205-2205"];
m4_1454 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2213-2213"];
m4_1445 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReader.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2200-2200"];
m4_1447 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2203-2203"];
m4_1449 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2206-2206"];
m4_1451 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2209-2209"];
m4_1452 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReader.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="2210-2210"];
m4_1455 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2214-2214"];
m4_1453 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReader.cs", label="Assert.AreEqual(-79228162514264300000000000000m, d)", span="2211-2211"];
m4_1450 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReader.cs", label="decimal? d = reader.ReadAsDecimal()", span="2208-2208"];
m4_1444 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReader.cs", label="string json = @''{''''decimal'''':-7.92281625142643E+28}''", span="2198-2198"];
m4_1456 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", span="2196-2196"];
m4_917 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", span="1444-1444"];
m4_947 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReader.cs", label="object jsonObject = serializer.Deserialize(new JsonTextReader(new StringReader(json)))", span="1490-1490"];
m4_952 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReader.cs", label="Assert.AreEqual(json, sb.ToString())", span="1503-1503"];
m4_945 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReader.cs", label="string json = sb.ToString()", span="1486-1486"];
m4_946 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReader.cs", label="JsonSerializer serializer = new JsonSerializer()", span="1488-1488"];
m4_948 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReader.cs", label="sb = new StringBuilder()", span="1492-1492"];
m4_951 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReader.cs", label="serializer.Serialize(jsonWriter, jsonObject)", span="1500-1500"];
m4_918 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReader.cs", label="StringBuilder sb = new StringBuilder()", span="1446-1446"];
m4_944 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReader.cs", label="jsonWriter.WriteEndArray()", span="1483-1483"];
m4_949 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReader.cs", label="sw = new StringWriter(sb)", span="1493-1493"];
m4_950 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReader.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)\r\n            {\r\n                Formatting = Formatting.Indented\r\n            }", span="1495-1498"];
m4_925 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReader.cs", label="jsonWriter.WriteValue(99)", span="1459-1459"];
m4_932 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReader.cs", label="jsonWriter.WriteValue(i)", span="1467-1467"];
m4_938 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReader.cs", label="jsonWriter.WriteValue(5)", span="1475-1475"];
m4_919 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReader.cs", label="StringWriter sw = new StringWriter(sb)", span="1447-1447"];
m4_920 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReader.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)\r\n            {\r\n                Formatting = Formatting.Indented\r\n            }", span="1449-1452"];
m4_943 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReader.cs", label="jsonWriter.WriteNull()", span="1482-1482"];
m4_924 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReader.cs", label="jsonWriter.WritePropertyName(''integer'')", span="1458-1458"];
m4_926 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReader.cs", label="jsonWriter.WritePropertyName(''string'')", span="1460-1460"];
m4_930 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReader.cs", label="int i = 0", span="1465-1465"];
m4_931 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReader.cs", label="i < 5", span="1465-1465"];
m4_933 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReader.cs", label="i++", span="1465-1465"];
m4_937 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReader.cs", label="jsonWriter.WriteEndObject()", span="1473-1473"];
m4_939 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReader.cs", label="jsonWriter.WriteEndArray()", span="1476-1476"];
m4_921 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReader.cs", label="jsonWriter.WriteStartArray()", span="1454-1454"];
m4_922 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReader.cs", label="jsonWriter.WriteValue(true)", span="1455-1455"];
m4_923 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReader.cs", label="jsonWriter.WriteStartObject()", span="1457-1457"];
m4_927 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReader.cs", label="jsonWriter.WriteValue(''how now brown cow?'')", span="1461-1461"];
m4_928 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReader.cs", label="jsonWriter.WritePropertyName(''array'')", span="1462-1462"];
m4_929 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReader.cs", label="jsonWriter.WriteStartArray()", span="1464-1464"];
m4_934 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReader.cs", label="jsonWriter.WriteStartObject()", span="1470-1470"];
m4_935 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReader.cs", label="jsonWriter.WritePropertyName(''decimal'')", span="1471-1471"];
m4_936 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReader.cs", label="jsonWriter.WriteValue(990.00990099m)", span="1472-1472"];
m4_940 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReader.cs", label="jsonWriter.WriteEndObject()", span="1478-1478"];
m4_941 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReader.cs", label="jsonWriter.WriteValue(''This is a string.'')", span="1480-1480"];
m4_942 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReader.cs", label="jsonWriter.WriteNull()", span="1481-1481"];
m4_953 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", span="1444-1444"];
m4_257 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label=anotherHighSurrogate, span="547-547"];
m4_2109 [cluster="System.IO.TextReader.Read(char[], int, int)", file="JsonTextReader.cs", label="Entry System.IO.TextReader.Read(char[], int, int)", span="0-0"];
m4_58 [cluster="lambda expression", file="JsonTextReader.cs", label="Entry lambda expression", span="138-138"];
m4_8 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="72-72"];
m4_9 [cluster="System.IO.StringReader.StringReader(string)", file="JsonTextReader.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m4_11 [cluster="Unk.AreEqual", file="JsonTextReader.cs", label="Entry Unk.AreEqual", span=""];
m4_12 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", span="68-68"];
m4_13 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", file="JsonTextReader.cs", label="string json = @''''''first line\r\nsecond line\r\nthird line''''''", span="70-72"];
m4_1938 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", span="2977-2977"];
m4_1941 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2983-2983"];
m4_1942 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2985-2985"];
m4_1944 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2988-2988"];
m4_1947 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2992-2992"];
m4_1950 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2996-2996"];
m4_1953 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="3000-3000"];
m4_1956 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="3004-3004"];
m4_1959 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="3008-3008"];
m4_1962 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="3012-3012"];
m4_1965 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="3016-3016"];
m4_1968 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="3020-3020"];
m4_1971 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="3024-3024"];
m4_1974 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="3028-3028"];
m4_1977 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="3032-3032"];
m4_1940 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReader.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2981-2981"];
m4_1943 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReader.cs", label="Assert.AreEqual(false, reader.Value)", span="2986-2986"];
m4_1945 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="2989-2989"];
m4_1946 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReader.cs", label="Assert.AreEqual(true, reader.Value)", span="2990-2990"];
m4_1948 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="2993-2993"];
m4_1949 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReader.cs", label="Assert.AreEqual(true, reader.Value)", span="2994-2994"];
m4_1951 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="2997-2997"];
m4_1952 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReader.cs", label="Assert.AreEqual(false, reader.Value)", span="2998-2998"];
m4_1954 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="3001-3001"];
m4_1955 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReader.cs", label="Assert.AreEqual(''test!'', reader.Value)", span="3002-3002"];
m4_1957 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3005-3005"];
m4_1958 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReader.cs", label="Assert.AreEqual(1.11d, reader.Value)", span="3006-3006"];
m4_1960 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3009-3009"];
m4_1961 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReader.cs", label="Assert.AreEqual(0d, reader.Value)", span="3010-3010"];
m4_1963 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3013-3013"];
m4_1964 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReader.cs", label="Assert.AreEqual(0d, reader.Value)", span="3014-3014"];
m4_1966 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3017-3017"];
m4_1967 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReader.cs", label="Assert.AreEqual(0.0000025d, reader.Value)", span="3018-3018"];
m4_1969 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3021-3021"];
m4_1970 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReader.cs", label="Assert.AreEqual(3000000000d, reader.Value)", span="3022-3022"];
m4_1972 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3025-3025"];
m4_1973 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReader.cs", label="Assert.AreEqual(602214180000000000000000d, reader.Value)", span="3026-3026"];
m4_1975 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="3029-3029"];
m4_1976 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReader.cs", label="Assert.AreEqual(reader.Value, ''Purple\r \n monkey's:\tdishwasher'')", span="3030-3030"];
m4_1939 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReader.cs", label="string json = ''[false, true, true, false, 'test!', 1.11, 0e-10, 0E-10, 0.25e-5, 0.3e10, 6.0221418e23, 'Purple\\r \\n monkey\\'s:\\tdishwasher']''", span="2979-2979"];
m4_1978 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", span="2977-2977"];
m4_175 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs", label="ParseComment()", span="403-403"];
m4_1494 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", span="2301-2301"];
m4_1497 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2309-2309"];
m4_1500 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2313-2313"];
m4_1496 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonTextReader.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2304-2304"];
m4_1498 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonTextReader.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="2310-2310"];
m4_1499 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2311-2311"];
m4_1501 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2314-2314"];
m4_1495 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonTextReader.cs", label="string json = ''new Date\0()''", span="2303-2303"];
m4_1502 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", span="2301-2301"];
m4_294 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", span="514-514"];
m4_1415 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", span="2164-2164"];
m4_1416 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", file="JsonTextReader.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''nulz''))", span="2166-2166"];
m4_1417 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", file="JsonTextReader.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Error parsing null value. Path '', line 0, position 0.'')", span="2168-2168"];
m4_1418 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", span="2164-2164"];
m4_882 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", span="1404-1404"];
m4_909 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", color=green, community=0, file="JsonTextReader.cs", label="0: ExceptionAssert.Throws<JsonReaderException>(() => reader.Read(), ''Input string '-' is not a valid number. Path '', line 1, position 1.'')", span="1440-1440"];
m4_908 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReader.cs", label="reader = new JsonTextReader(new StringReader(''-''))", span="1439-1439"];
m4_885 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="1409-1409"];
m4_889 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="1414-1414"];
m4_893 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="1419-1419"];
m4_897 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="1424-1424"];
m4_903 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="1432-1432"];
m4_907 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReader.cs", label="Assert.IsFalse(reader.Read())", span="1437-1437"];
m4_884 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReader.cs", label="reader = new JsonTextReader(new StringReader(''1.1''))", span="1408-1408"];
m4_888 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReader.cs", label="reader = new JsonTextReader(new StringReader(''-1.1''))", span="1413-1413"];
m4_892 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReader.cs", label="reader = new JsonTextReader(new StringReader(''0.0''))", span="1418-1418"];
m4_896 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReader.cs", label="reader = new JsonTextReader(new StringReader(''-0.0''))", span="1423-1423"];
m4_900 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReader.cs", label="reader = new JsonTextReader(new StringReader(''9999999999999999999999999999999999999999999999999999999999999999999999999999asdasdasd''))", span="1428-1428"];
m4_902 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReader.cs", label="reader = new JsonTextReader(new StringReader(''1E-06''))", span="1431-1431"];
m4_906 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReader.cs", label="reader = new JsonTextReader(new StringReader(''''))", span="1436-1436"];
m4_886 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReader.cs", label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1410-1410"];
m4_887 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReader.cs", label="Assert.AreEqual(1.1d, reader.Value)", span="1411-1411"];
m4_890 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReader.cs", label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1415-1415"];
m4_891 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReader.cs", label="Assert.AreEqual(-1.1d, reader.Value)", span="1416-1416"];
m4_894 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReader.cs", label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1420-1420"];
m4_895 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReader.cs", label="Assert.AreEqual(0.0d, reader.Value)", span="1421-1421"];
m4_898 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReader.cs", label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1425-1425"];
m4_899 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReader.cs", label="Assert.AreEqual(-0.0d, reader.Value)", span="1426-1426"];
m4_904 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReader.cs", label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1433-1433"];
m4_905 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReader.cs", label="Assert.AreEqual(0.000001d, reader.Value)", span="1434-1434"];
m4_901 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReader.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.Read(), ''Unexpected character encountered while parsing number: s. Path '', line 1, position 77.'')", span="1429-1429"];
m4_883 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReader.cs", label="JsonTextReader reader = null", span="1406-1406"];
m4_910 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", span="1404-1404"];
m4_730 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs", label="SetToken(JsonToken.Comment, _stringReference.ToString())", span="1362-1362"];
m4_297 [cluster="Newtonsoft.Json.Utilities.StringBuffer.GetInternalBuffer()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Utilities.StringBuffer.GetInternalBuffer()", span="101-101"];
m4_299 [cluster="Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(Newtonsoft.Json.Utilities.StringBuffer, char, int, int)", file="JsonTextReader.cs", label="buffer.Append(_chars, lastWritePosition, writeToPosition - lastWritePosition)", span="609-609"];
m4_301 [cluster="Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(Newtonsoft.Json.Utilities.StringBuffer, char, int, int)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(Newtonsoft.Json.Utilities.StringBuffer, char, int, int)", span="605-605"];
m4_303 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonTextReader.cs", label="char writeChar", span="617-617"];
m4_305 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonTextReader.cs", label="string hexValues = new string(_chars, _charPos, 4)", span="620-620"];
m4_298 [cluster="Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(Newtonsoft.Json.Utilities.StringBuffer, char, int, int)", file="JsonTextReader.cs", label="writeToPosition > lastWritePosition", span="607-607"];
m4_300 [cluster="Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(Newtonsoft.Json.Utilities.StringBuffer, char, int, int)", file="JsonTextReader.cs", label="buffer.Append(writeChar)", span="612-612"];
m4_304 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonTextReader.cs", label="EnsureChars(4, true)", span="618-618"];
m4_306 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonTextReader.cs", label="char hexChar = Convert.ToChar(int.Parse(hexValues, NumberStyles.HexNumber, NumberFormatInfo.InvariantInfo))", span="621-621"];
m4_307 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonTextReader.cs", label="writeChar = hexChar", span="622-622"];
m4_308 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonTextReader.cs", label="_charPos += 4", span="624-624"];
m4_1002 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", span="1563-1563"];
m4_1005 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReader.cs", label="reader.Read()", span="1572-1572"];
m4_1007 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReader.cs", label="reader.Read()", span="1575-1575"];
m4_1009 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReader.cs", label="reader.Read()", span="1578-1578"];
m4_1011 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReader.cs", label="reader.Read()", span="1581-1581"];
m4_1004 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReader.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1567-1567"];
m4_1006 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="1573-1573"];
m4_1008 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReader.cs", label="Assert.AreEqual(''<'', reader.Value)", span="1576-1576"];
m4_1010 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReader.cs", label="Assert.AreEqual(24352, Convert.ToInt32(Convert.ToChar((string)reader.Value)))", span="1579-1579"];
m4_1012 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="1582-1582"];
m4_1003 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReader.cs", label="string json = @''[''''\u003c'''',''''\u5f20'''']''", span="1565-1565"];
m4_1013 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", span="1563-1563"];
m4_964 [cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="775-775"];
m4_0 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="73-73"];
m4_3 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonTextReader.cs", label="_reader = reader", span="78-78"];
m4_4 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonTextReader.cs", label="_lineNumber = 1", span="79-79"];
m4_5 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonTextReader.cs", label="_chars = new char[1025]", span="80-80"];
m4_2 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonTextReader.cs", label="throw new ArgumentNullException(''reader'');", span="76-76"];
m4_6 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="73-73"];
m4_1 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonTextReader.cs", label="reader == null", span="75-75"];
m4_48 [cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", span="174-174"];
m4_50 [cluster="System.Convert.FromBase64CharArray(char[], int, int)", file="JsonTextReader.cs", label="Entry System.Convert.FromBase64CharArray(char[], int, int)", span="0-0"];
m4_53 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(string, Newtonsoft.Json.DateParseHandling, Newtonsoft.Json.DateTimeZoneHandling, out object)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(string, Newtonsoft.Json.DateParseHandling, Newtonsoft.Json.DateTimeZoneHandling, out object)", span="286-286"];
m4_55 [cluster="Newtonsoft.Json.JsonTextReader.BlockCopyChars(char[], int, char[], int, int)", file="JsonTextReader.cs", label="int charByteCount = 2", span="169-169"];
m4_49 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", span="422-422"];
m4_54 [cluster="Newtonsoft.Json.JsonTextReader.BlockCopyChars(char[], int, char[], int, int)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.BlockCopyChars(char[], int, char[], int, int)", span="167-167"];
m4_52 [cluster="Newtonsoft.Json.Utilities.StringReference.ToString()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Utilities.StringReference.ToString()", span="55-55"];
m4_56 [cluster="Newtonsoft.Json.JsonTextReader.BlockCopyChars(char[], int, char[], int, int)", file="JsonTextReader.cs", label="Buffer.BlockCopy(src, srcOffset * charByteCount, dst, dstOffset * charByteCount, count * charByteCount)", span="171-171"];
m4_377 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="_charPos++", span="725-725"];
m4_380 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="')'", span="728-728"];
m4_379 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="return true;", span="727-727"];
m4_381 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="_charPos++", span="729-729"];
m4_383 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="return true;", span="731-731"];
m4_384 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="'/'", span="732-732"];
m4_385 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="ParseComment()", span="733-733"];
m4_387 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="','", span="735-735"];
m4_388 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="_charPos++", span="736-736"];
m4_389 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="SetStateBasedOnCurrent()", span="739-739"];
m4_391 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="' '", span="741-741"];
m4_392 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="StringUtils.Tab", span="742-742"];
m4_393 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="_charPos++", span="744-744"];
m4_394 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="StringUtils.CarriageReturn", span="746-746"];
m4_395 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="ProcessCarriageReturn(false)", span="747-747"];
m4_397 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="ProcessLineFeed()", span="750-750"];
m4_398 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="char.IsWhiteSpace(currentChar)", span="753-753"];
m4_399 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="_charPos++", span="756-756"];
m4_401 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParsePostValue()", span="698-698"];
m4_402 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", span="874-874"];
m4_405 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="char currentChar = _chars[_charPos]", span="771-771"];
m4_406 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label=currentChar, span="773-773"];
m4_407 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="'\0'", span="775-775"];
m4_408 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="_charsUsed == _charPos", span="776-776"];
m4_410 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="return false;", span="779-779"];
m4_411 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="_charPos++", span="783-783"];
m4_412 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="'}'", span="786-786"];
m4_413 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="SetToken(JsonToken.EndObject)", span="787-787"];
m4_415 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="return true;", span="789-789"];
m4_416 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="'/'", span="790-790"];
m4_417 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="ParseComment()", span="791-791"];
m4_418 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="return true;", span="792-792"];
m4_420 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="ProcessCarriageReturn(false)", span="794-794"];
m4_421 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="StringUtils.LineFeed", span="796-796"];
m4_422 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="ProcessLineFeed()", span="797-797"];
m4_423 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="' '", span="799-799"];
m4_425 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="_charPos++", span="802-802"];
m4_426 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="char.IsWhiteSpace(currentChar)", span="805-805"];
m4_427 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="_charPos++", span="808-808"];
m4_428 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="return ParseProperty();", span="812-812"];
m4_382 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="SetToken(JsonToken.EndConstructor)", span="730-730"];
m4_386 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="return true;", span="734-734"];
m4_390 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="return false;", span="740-740"];
m4_396 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="StringUtils.LineFeed", span="749-749"];
m4_400 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''After parsing a value an unexpected character was encountered: {0}.''.FormatWith(CultureInfo.InvariantCulture, currentChar));", span="760-760"];
m4_404 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label=true, span="769-769"];
m4_409 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="ReadData(false) == 0", span="778-778"];
m4_414 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="_charPos++", span="788-788"];
m4_419 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="StringUtils.CarriageReturn", span="793-793"];
m4_424 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="StringUtils.Tab", span="800-800"];
m4_429 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseObject()", span="767-767"];
m4_457 [cluster="char.IsLetterOrDigit(char)", file="JsonTextReader.cs", label="Entry char.IsLetterOrDigit(char)", span="0-0"];
m4_378 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="SetToken(JsonToken.EndArray)", span="726-726"];
m4_1627 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", span="2501-2501"];
m4_1630 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2506-2506"];
m4_1632 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2509-2509"];
m4_1629 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonTextReader.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2504-2504"];
m4_1631 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2507-2507"];
m4_1633 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2510-2510"];
m4_1628 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonTextReader.cs", label="string json = ''new Date()''", span="2503-2503"];
m4_1634 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", span="2501-2501"];
m4_1263 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", span="1944-1944"];
m4_1266 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="1950-1950"];
m4_1268 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="1953-1953"];
m4_1274 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="1961-1961"];
m4_1265 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReader.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1948-1948"];
m4_1267 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1951-1951"];
m4_1269 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1954-1954"];
m4_1271 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="1957-1957"];
m4_1272 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReader.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="1958-1958"];
m4_1273 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReader.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), reader.Value)", span="1959-1959"];
m4_1275 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1962-1962"];
m4_1264 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReader.cs", label="string json = ''{\''Offset\'':\''\\/Date(946663200000+0600)\\/\''}''", span="1946-1946"];
m4_1270 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReader.cs", label="reader.ReadAsDateTimeOffset()", span="1956-1956"];
m4_1276 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", span="1944-1944"];
m4_789 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity()", file="JsonTextReader.cs", label="MatchValueWithTrailingSeperator(JsonConvert.NegativeInfinity)", span="1484-1484"];
m4_790 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity()", file="JsonTextReader.cs", label="_floatParseHandling == FloatParseHandling.Decimal", span="1486-1486"];
m4_791 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity()", file="JsonTextReader.cs", label="throw new JsonReaderException(''Cannot read -Infinity as a decimal.'');", span="1487-1487"];
m4_792 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity()", file="JsonTextReader.cs", label="SetToken(JsonToken.Float, double.NegativeInfinity)", span="1489-1489"];
m4_794 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity()", span="1482-1482"];
m4_793 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity()", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Error parsing negative infinity value.'');", span="1493-1493"];
m4_796 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity()", file="JsonTextReader.cs", label="MatchValueWithTrailingSeperator(JsonConvert.PositiveInfinity)", span="1499-1499"];
m4_1815 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", span="2797-2797"];
m4_1817 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonTextReader.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2801-2801"];
m4_1819 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2804-2804"];
m4_1820 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonTextReader.cs", label="Assert.AreEqual(32m, reader.Value)", span="2805-2805"];
m4_1818 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonTextReader.cs", label="reader.ReadAsDecimal()", span="2803-2803"];
m4_1816 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonTextReader.cs", label="string json = @''0x20''", span="2799-2799"];
m4_1821 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", span="2797-2797"];
m4_578 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs", label="ReadData(false) == 0", span="1047-1047"];
m4_581 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs", label="StringUtils.CarriageReturn", span="1055-1055"];
m4_580 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs", label="_charPos++", span="1052-1052"];
m4_583 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs", label="StringUtils.LineFeed", span="1058-1058"];
m4_582 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs", label="ProcessCarriageReturn(false)", span="1056-1056"];
m4_587 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs", label="_charPos++", span="1065-1065"];
m4_579 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs", label="finished = true", span="1048-1048"];
m4_586 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs", label="ateWhitespace = true", span="1064-1064"];
m4_584 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs", label="ProcessLineFeed()", span="1059-1059"];
m4_588 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs", label="finished = true", span="1069-1069"];
m4_585 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs", label="currentChar == ' ' || char.IsWhiteSpace(currentChar)", span="1062-1062"];
m4_589 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs", label="return (!oneOrMore || ateWhitespace);", span="1075-1075"];
m4_187 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", span="319-319"];
m4_731 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", span="1194-1194"];
m4_732 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReader.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''{'hi\r\nbye':1}''))", span="1196-1196"];
m4_2103 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", span="3210-3210"];
m4_2104 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="JsonTextReader.cs", label=Error, span="3212-3212"];
m4_2106 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="JsonTextReader.cs", label="return _inner.Read(buffer, index, 1);", span="3215-3215"];
m4_2105 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="JsonTextReader.cs", label="throw new Exception(''Read error'');", span="3213-3213"];
m4_2107 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", span="3210-3210"];
m4_15 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", file="JsonTextReader.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="76-76"];
m4_16 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.String, jsonTextReader.TokenType)", span="77-77"];
m4_17 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", file="JsonTextReader.cs", label="Assert.AreEqual(@''first line\r\nsecond line\r\nthird line'', jsonTextReader.Value)", span="79-81"];
m4_18 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", span="68-68"];
m4_957 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(bool)", span="878-878"];
m4_188 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReader.cs", label="string json = @''{''''recipe_id'''':''''12'''',''''recipe_name'''':''''Apocalypse Leather Armors'''',''''recipe_text'''':''''#C16------------------------------\r\n#C12Ingredients #C20\r\n#C16------------------------------\r\n\r\na piece of Leather Armor\r\n( ie #L \''''Enhanced Leather Armor Boots\'''' \''''85644\'''' )\r\n<img src=rdb:\/\/13264>\r\n\r\n#L \''''Hacker Tool\'''' \''''87814\''''\r\n<img src=rdb:\/\/99282>\r\n\r\n#L \''''Clanalizer\'''' \''''208313\''''\r\n<img src=rdb:\/\/156479>\r\n\r\n#C16------------------------------\r\n#C12Recipe #C16\r\n#C16------------------------------#C20\r\n\r\nHacker Tool\r\n#C15+#C20\r\na piece of Leather Armor\r\n#C15=#C20\r\n<img src=rdb:\/\/13264>\r\na piece of Hacked Leather Armor\r\n( ie : #L \''''Hacked Leather Armor Boots\'''' \''''245979\'''' )\r\n#C16Skills: |  BE  |#C20\r\n\r\n#C14------------------------------#C20\r\n\r\nClanalizer\r\n#C15+#C20\r\na piece of Hacked Leather Armor\r\n#C15=#C20\r\n<img src=rdb:\/\/13264>\r\na piece of Apocalypse Leather Armor\r\n( ie : #L \''''Apocalypse Leather Armor Boots\'''' \''''245966\'''' )\r\n#C16Skills: |  ??  |#C20\r\n\r\n#C16------------------------------\r\n#C12Details#C16\r\n#C16------------------------------#C20\r\n\r\n#L \''''Apocalypse Leather Armor Boots\'''' \''''245967\''''\r\n#L \''''Apocalypse Leather Armor Gloves\'''' \''''245969\''''\r\n#L \''''Apocalypse Leather Armor Helmet\'''' \''''245975\''''\r\n#L \''''Apocalypse Leather Armor Pants\'''' \''''245971\''''\r\n#L \''''Apocalypse Leather Armor Sleeves\'''' \''''245973\''''\r\n#L \''''Apocalypse Leather Body Armor\'''' \''''245965\''''\r\n\r\n#C16------------------------------\r\n#C12Comments#C16\r\n#C16------------------------------#C20\r\n\r\nNice froob armor.. but ugleh!\r\n\r\n'''',''''recipe_author'''':null}''", span="321-321"];
m4_1640 [cluster="Unk.>", file="JsonTextReader.cs", label="Entry Unk.>", span=""];
m4_1604 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", span="2467-2467"];
m4_1607 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2472-2472"];
m4_1609 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2475-2475"];
m4_1606 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonTextReader.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2470-2470"];
m4_1608 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2473-2473"];
m4_1610 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2476-2476"];
m4_1605 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonTextReader.cs", label="string json = ''[]''", span="2469-2469"];
m4_1611 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", span="2467-2467"];
m4_1588 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", span="2446-2446"];
m4_1590 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="JsonTextReader.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2449-2449"];
m4_1591 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="JsonTextReader.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected character while parsing constructor: !. Path '', line 1, position 9.'')", span="2451-2451"];
m4_1589 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="JsonTextReader.cs", label="string json = ''new Date !''", span="2448-2448"];
m4_1592 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", span="2446-2446"];
m4_284 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="_stringReference = new StringReference(buffer.GetInternalBuffer(), 0, buffer.Position)", span="593-593"];
m4_2115 [cluster="Newtonsoft.Json.Tests.SlowStream.SlowStream(string, System.Text.Encoding, int)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.SlowStream.SlowStream(string, System.Text.Encoding, int)", span="3232-3232"];
m4_558 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonTextReader.cs", label="i++", span="914-914"];
m4_797 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewlineLastCharacter()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewlineLastCharacter()", span="1283-1283"];
m4_800 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewlineLastCharacter()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewlineLastCharacter()", span="1283-1283"];
m4_798 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewlineLastCharacter()", color=green, community=0, file="JsonTextReader.cs", label="0: string input = @''{\r\n  CPU: 'Intel',\r\n  Drives: [ /* Com*ment */\r\n    'DVD read/writer',\r\n    ''''500 gigabyte hard drive''''\r\n  ]\r\n}'' + '\n'", span="1285-1291"];
m4_799 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewlineLastCharacter()", file="JsonTextReader.cs", label="object o = JsonConvert.DeserializeObject(input)", span="1293-1293"];
m4_293 [cluster="lambda expression", file="JsonTextReader.cs", label="Exit lambda expression", span="505-510"];
m4_552 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseValue()", span="902-902"];
m4_559 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity()", span="1482-1482"];
m4_553 [cluster="Newtonsoft.Json.JsonTextReader.ParseTrue()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseTrue()", span="1431-1431"];
m4_1396 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", span="2140-2140"];
m4_1399 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2146-2146"];
m4_1401 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2149-2149"];
m4_1398 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonTextReader.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2144-2144"];
m4_1400 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2147-2147"];
m4_1402 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2150-2150"];
m4_1403 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonTextReader.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsInt32(); }, ''Input string '1.1' is not a valid integer. Path 'Name', line 1, position 12.'')", span="2152-2152"];
m4_1397 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonTextReader.cs", label="string json = @''{''''Name'''': 1.1}''", span="2142-2142"];
m4_1404 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", span="2140-2140"];
m4_1530 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", span="2360-2360"];
m4_1533 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2365-2365"];
m4_1535 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2368-2368"];
m4_1537 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2371-2371"];
m4_1539 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2374-2374"];
m4_1541 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2377-2377"];
m4_1543 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2380-2380"];
m4_1545 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2383-2383"];
m4_1547 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2386-2386"];
m4_1549 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2389-2389"];
m4_1551 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2392-2392"];
m4_1553 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2395-2395"];
m4_1555 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2398-2398"];
m4_1557 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2401-2401"];
m4_1559 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2404-2404"];
m4_1561 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2407-2407"];
m4_1563 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2410-2410"];
m4_1565 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2413-2413"];
m4_1567 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2416-2416"];
m4_1569 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2419-2419"];
m4_1571 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReader.cs", label="Assert.IsFalse(reader.Read())", span="2422-2422"];
m4_1531 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReader.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''{'prop1':[1]} 1 2 ''''name'''' [][]null {}{} 1.1''))", span="2362-2362"];
m4_1534 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2366-2366"];
m4_1536 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2369-2369"];
m4_1538 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2372-2372"];
m4_1540 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2375-2375"];
m4_1542 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2378-2378"];
m4_1544 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2381-2381"];
m4_1546 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2384-2384"];
m4_1548 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2387-2387"];
m4_1550 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="2390-2390"];
m4_1552 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2393-2393"];
m4_1554 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2396-2396"];
m4_1556 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2399-2399"];
m4_1558 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2402-2402"];
m4_1560 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="2405-2405"];
m4_1562 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2408-2408"];
m4_1564 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2411-2411"];
m4_1566 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2414-2414"];
m4_1568 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2417-2417"];
m4_1570 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2420-2420"];
m4_1532 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReader.cs", label="reader.SupportMultipleContent = true", span="2363-2363"];
m4_1572 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", span="2360-2360"];
m4_265 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="lastWritePosition = charPos", span="563-563"];
m4_835 [cluster="long.ToString()", file="JsonTextReader.cs", label="Entry long.ToString()", span="0-0"];
m4_518 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="ParseUndefined()", span="964-964"];
m4_1792 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", span="2761-2761"];
m4_1795 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2767-2767"];
m4_1798 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JsonTextReader.cs", label="Assert.IsFalse(reader.Read())", span="2771-2771"];
m4_1794 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JsonTextReader.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2765-2765"];
m4_1796 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2768-2768"];
m4_1797 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JsonTextReader.cs", label="Assert.AreEqual(''comment'', reader.Value)", span="2769-2769"];
m4_1793 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JsonTextReader.cs", label="string json = @''//comment''", span="2763-2763"];
m4_1799 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", span="2761-2761"];
m4_573 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs", label="!finished", span="1038-1038"];
m4_968 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="860-860"];
m4_966 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="433-433"];
m4_292 [cluster="lambda expression", file="JsonTextReader.cs", label="reader.Read()", span="507-507"];
m4_1808 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", span="2785-2785"];
m4_1810 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonTextReader.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2789-2789"];
m4_1812 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2792-2792"];
m4_1813 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonTextReader.cs", label="Assert.AreEqual(8m, reader.Value)", span="2793-2793"];
m4_1811 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonTextReader.cs", label="reader.ReadAsDecimal()", span="2791-2791"];
m4_1809 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonTextReader.cs", label="string json = @''010''", span="2787-2787"];
m4_1814 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", span="2785-2785"];
m4_1890 [cluster="System.Convert.ToDouble(string, System.IFormatProvider)", file="JsonTextReader.cs", label="Entry System.Convert.ToDouble(string, System.IFormatProvider)", span="0-0"];
m4_773 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="1245-1245"];
m4_774 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1246-1246"];
m4_775 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReader.cs", label="Assert.IsFalse(reader.Read())", span="1248-1248"];
m4_776 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", span="1230-1230"];
m4_1892 [cluster="System.Console.WriteLine(string)", file="JsonTextReader.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m4_961 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="813-813"];
m4_1078 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", span="1674-1674"];
m4_1081 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReader.cs", label="reader.Read()", span="1682-1682"];
m4_1083 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReader.cs", label="reader.Read()", span="1685-1685"];
m4_1085 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReader.cs", label="reader.Read()", span="1688-1688"];
m4_1080 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReader.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1680-1680"];
m4_1082 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1683-1683"];
m4_1084 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1686-1686"];
m4_1086 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="1689-1689"];
m4_1087 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReader.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, @''Invalid character after parsing property name. Expected ':' but got: ''''. Path 'A', line 3, position 9.'')", span="1691-1691"];
m4_1079 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReader.cs", label="string json = @''{\r\n    ''''A'''' : true,\r\n    ''''B'''' ''''''", span="1676-1678"];
m4_1088 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", span="1674-1674"];
m4_1612 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", span="2480-2480"];
m4_1615 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2485-2485"];
m4_1617 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2488-2488"];
m4_1614 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonTextReader.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2483-2483"];
m4_1616 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2486-2486"];
m4_1618 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2489-2489"];
m4_1613 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonTextReader.cs", label="string json = ''{}''", span="2482-2482"];
m4_1619 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", span="2480-2480"];
m4_1092 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", span="1695-1695"];
m4_1094 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonTextReader.cs", label="JsonTextReader reader = new JsonTextReader(s)", span="1698-1698"];
m4_1093 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonTextReader.cs", label="StringReader s = new StringReader(@''''''SGVsbG8gd29ybGQu'''''')", span="1697-1697"];
m4_1098 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonTextReader.cs", label="Assert.AreEqual(''Hello world.'', text)", span="1704-1704"];
m4_1095 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonTextReader.cs", label="byte[] data = reader.ReadAsBytes()", span="1700-1700"];
m4_1097 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonTextReader.cs", label="string text = Encoding.UTF8.GetString(data, 0, data.Length)", span="1703-1703"];
m4_1096 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonTextReader.cs", label="Assert.IsNotNull(data)", span="1701-1701"];
m4_1099 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", span="1695-1695"];
m4_2092 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", span="545-545"];
m4_959 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="407-407"];
m4_127 [cluster="lambda expression", file="JsonTextReader.cs", label="Entry lambda expression", span="240-240"];
m4_153 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReader.cs", label="reader.FloatParseHandling = Json.FloatParseHandling.Decimal", span="275-275"];
m4_154 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="277-277"];
m4_155 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="278-278"];
m4_162 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReader.cs", label="Assert.AreEqual(typeof(long), reader.ValueType)", span="287-287"];
m4_163 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="288-288"];
m4_166 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReader.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="292-292"];
m4_169 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReader.cs", label="Assert.AreEqual(Convert.ToDecimal(1E-06), reader.Value)", span="296-296"];
m4_156 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="280-280"];
m4_157 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReader.cs", label="Assert.AreEqual(1.0m, reader.Value)", span="281-281"];
m4_158 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReader.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="282-282"];
m4_159 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="283-283"];
m4_160 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="285-285"];
m4_161 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReader.cs", label="Assert.AreEqual(1L, reader.Value)", span="286-286"];
m4_164 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="290-290"];
m4_165 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReader.cs", label="Assert.AreEqual(9.9m, reader.Value)", span="291-291"];
m4_167 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="293-293"];
m4_168 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="295-295"];
m4_170 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReader.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="297-297"];
m4_171 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="298-298"];
m4_172 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="300-300"];
m4_173 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="301-301"];
m4_174 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", span="270-270"];
m4_487 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="'t'", span="925-925"];
m4_489 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="return true;", span="927-927"];
m4_491 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="ParseFalse()", span="929-929"];
m4_488 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="ParseTrue()", span="926-926"];
m4_490 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="'f'", span="928-928"];
m4_492 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="return true;", span="930-930"];
m4_1278 [cluster="System.DateTime.DateTime(int, int, int)", file="JsonTextReader.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m4_1180 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", span="1823-1823"];
m4_1181 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", file="JsonTextReader.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''{''))", span="1825-1825"];
m4_1182 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", file="JsonTextReader.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Unexpected end when reading bytes. Path '', line 1, position 1.'')", span="1827-1827"];
m4_1183 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", span="1823-1823"];
m4_1100 [cluster="Unk.IsNotNull", file="JsonTextReader.cs", label="Entry Unk.IsNotNull", span=""];
m4_519 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="return true;", span="965-965"];
m4_57 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="351-351"];
m4_1620 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", span="2493-2493"];
m4_1621 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", file="JsonTextReader.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''true/''))", span="2495-2495"];
m4_1622 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", file="JsonTextReader.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Error parsing boolean value. Path '', line 1, position 4.'')", span="2497-2497"];
m4_1623 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", span="2493-2493"];
m4_744 [cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeperator(string)", file="JsonTextReader.cs", label="bool match = MatchValue(value)", span="1388-1388"];
m4_747 [cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeperator(string)", file="JsonTextReader.cs", label="!EnsureChars(0, false)", span="1393-1393"];
m4_749 [cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeperator(string)", file="JsonTextReader.cs", label="return IsSeperator(_chars[_charPos]) || _chars[_charPos] == '\0';", span="1396-1396"];
m4_746 [cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeperator(string)", file="JsonTextReader.cs", label="return false;", span="1391-1391"];
m4_748 [cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeperator(string)", file="JsonTextReader.cs", label="return true;", span="1394-1394"];
m4_750 [cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeperator(string)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeperator(string)", span="1385-1385"];
m4_745 [cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeperator(string)", file="JsonTextReader.cs", label="!match", span="1390-1390"];
m4_190 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="int charPos = _charPos", span="424-424"];
m4_192 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="int lastWritePosition = _charPos", span="426-426"];
m4_194 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label=true, span="429-429"];
m4_196 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="'\0'", span="433-433"];
m4_198 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="charPos--", span="436-436"];
m4_200 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="_charPos = charPos", span="440-440"];
m4_203 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="_charPos = charPos", span="446-446"];
m4_189 [cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", span="108-108"];
m4_191 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="int initialPosition = _charPos", span="425-425"];
m4_193 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="StringBuffer buffer = null", span="427-427"];
m4_195 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="_chars[charPos++]", span="431-431"];
m4_197 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="_charsUsed == charPos - 1", span="434-434"];
m4_199 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="ReadData(true) == 0", span="438-438"];
m4_201 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Unterminated string. Expected delimiter: {0}.''.FormatWith(CultureInfo.InvariantCulture, quote));", span="441-441"];
m4_202 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="'\\'", span="445-445"];
m4_204 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="!EnsureChars(0, true)", span="447-447"];
m4_205 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="_charPos = charPos", span="449-449"];
m4_206 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Unterminated string. Expected delimiter: {0}.''.FormatWith(CultureInfo.InvariantCulture, quote));", span="450-450"];
m4_2075 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", span="3146-3146"];
m4_2085 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="3161-3161"];
m4_2090 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="3169-3169"];
m4_2084 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReader.cs", label="JsonTextReader reader = new JsonTextReader(sr)", span="3159-3159"];
m4_2083 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReader.cs", label="StringReader sr = new StringReader(json)", span="3158-3158"];
m4_2087 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReader.cs", label="Assert.AreEqual(decimal.MaxValue, max)", span="3164-3164"];
m4_2089 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReader.cs", label="Assert.AreEqual(decimal.MinValue, min)", span="3167-3167"];
m4_2086 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReader.cs", label="decimal? max = reader.ReadAsDecimal()", span="3163-3163"];
m4_2088 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReader.cs", label="decimal? min = reader.ReadAsDecimal()", span="3166-3166"];
m4_2082 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReader.cs", label="string json = sw.ToString()", span="3156-3156"];
m4_2076 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReader.cs", label="StringWriter sw = new StringWriter()", span="3148-3148"];
m4_2081 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReader.cs", label="writer.WriteEndArray()", span="3154-3154"];
m4_2077 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReader.cs", label="JsonTextWriter writer = new JsonTextWriter(sw)", span="3149-3149"];
m4_2080 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReader.cs", label="writer.WriteValue(decimal.MinValue)", span="3153-3153"];
m4_2078 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReader.cs", label="writer.WriteStartArray()", span="3151-3151"];
m4_2079 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReader.cs", label="writer.WriteValue(decimal.MaxValue)", span="3152-3152"];
m4_2091 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", span="3146-3146"];
m4_59 [cluster="lambda expression", file="JsonTextReader.cs", label="jsonTextReader.ReadAsInt32()", span="138-138"];
m4_60 [cluster="lambda expression", file="JsonTextReader.cs", label="Exit lambda expression", span="138-138"];
m4_61 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsInt32()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsInt32()", span="335-335"];
m4_14 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", file="JsonTextReader.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="74-74"];
m4_516 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="return true;", span="962-962"];
m4_1014 [cluster="System.Convert.ToChar(string)", file="JsonTextReader.cs", label="Entry System.Convert.ToChar(string)", span="0-0"];
m4_1844 [cluster="lambda expression", file="JsonTextReader.cs", label="Entry lambda expression", span="2841-2841"];
m4_839 [cluster="lambda expression", file="JsonTextReader.cs", label="Entry lambda expression", span="1354-1354"];
m4_840 [cluster="lambda expression", color=green, community=0, file="JsonTextReader.cs", label="0: reader.ReadAsInt32()", span="1354-1354"];
m4_841 [cluster="lambda expression", file="JsonTextReader.cs", label="Exit lambda expression", span="1354-1354"];
m4_843 [cluster="lambda expression", file="JsonTextReader.cs", label="reader.ReadAsInt32()", span="1357-1357"];
m4_846 [cluster="lambda expression", color=green, community=0, file="JsonTextReader.cs", label="0: reader.ReadAsInt32()", span="1360-1360"];
m4_845 [cluster="lambda expression", file="JsonTextReader.cs", label="Entry lambda expression", span="1360-1360"];
m4_847 [cluster="lambda expression", file="JsonTextReader.cs", label="Exit lambda expression", span="1360-1360"];
m4_914 [cluster="lambda expression", file="JsonTextReader.cs", label="Entry lambda expression", span="1440-1440"];
m4_915 [cluster="lambda expression", color=green, community=0, file="JsonTextReader.cs", label="0: reader.Read()", span="1440-1440"];
m4_916 [cluster="lambda expression", file="JsonTextReader.cs", label="Exit lambda expression", span="1440-1440"];
m4_185 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParsePostValue()", span="698-698"];
m4_310 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonTextReader.cs", label="return writeChar;", span="630-630"];
m4_877 [cluster="lambda expression", file="JsonTextReader.cs", label="reader.Read()", span="1391-1391"];
m4_912 [cluster="lambda expression", file="JsonTextReader.cs", label="reader.Read()", span="1429-1429"];
m4_1090 [cluster="lambda expression", file="JsonTextReader.cs", label="reader.Read()", span="1691-1691"];
m4_1168 [cluster="lambda expression", file="JsonTextReader.cs", label="reader.Read()", span="1801-1801"];
m4_1413 [cluster="lambda expression", file="JsonTextReader.cs", label="reader.Read()", span="2160-2160"];
m4_1420 [cluster="lambda expression", file="JsonTextReader.cs", label="reader.Read()", span="2168-2168"];
m4_1427 [cluster="lambda expression", file="JsonTextReader.cs", label="reader.Read()", span="2176-2176"];
m4_1434 [cluster="lambda expression", file="JsonTextReader.cs", label="reader.Read()", span="2184-2184"];
m4_1441 [cluster="lambda expression", file="JsonTextReader.cs", label="reader.Read()", span="2192-2192"];
m4_1586 [cluster="lambda expression", file="JsonTextReader.cs", label="reader.Read()", span="2442-2442"];
m4_1594 [cluster="lambda expression", file="JsonTextReader.cs", label="reader.Read()", span="2451-2451"];
m4_1625 [cluster="lambda expression", file="JsonTextReader.cs", label="reader.Read()", span="2497-2497"];
m4_1642 [cluster="lambda expression", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2519-2519"];
m4_1806 [cluster="lambda expression", file="JsonTextReader.cs", label="reader.Read()", span="2781-2781"];
m4_1901 [cluster="lambda expression", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2924-2924"];
m4_1933 [cluster="lambda expression", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2940-2940"];
m4_1936 [cluster="lambda expression", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2958-2958"];
m4_2058 [cluster="lambda expression", file="JsonTextReader.cs", label="jsonTextReader.Read()", span="3116-3116"];
m4_2061 [cluster="lambda expression", file="JsonTextReader.cs", label="jsonTextReader.Read()", span="3117-3117"];
m4_2064 [cluster="lambda expression", file="JsonTextReader.cs", label="jsonTextReader.Read()", span="3126-3126"];
m4_2067 [cluster="lambda expression", file="JsonTextReader.cs", label="jsonTextReader.Read()", span="3135-3135"];
m4_2070 [cluster="lambda expression", file="JsonTextReader.cs", label="jsonTextReader.Read()", span="3136-3136"];
m4_2073 [cluster="lambda expression", file="JsonTextReader.cs", label="jsonTextReader.Read()", span="3137-3137"];
m4_2099 [cluster="lambda expression", file="JsonTextReader.cs", label="reader.Read()", span="3191-3191"];
m4_478 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="'\0'", span="910-910"];
m4_575 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs", label=currentChar, span="1042-1042"];
m4_2098 [cluster="lambda expression", file="JsonTextReader.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3190-3190"];
m4_76 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs", label=append, span="205-205"];
m4_79 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs", label="BlockCopyChars(_chars, 0, dst, 0, _chars.Length)", span="213-213"];
m4_82 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs", label="remainingCharCount + charsRequired + 1 >= _chars.Length", span="221-221"];
m4_85 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs", label="BlockCopyChars(_chars, _charPos, dst, 0, remainingCharCount)", span="227-227"];
m4_132 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", span="458-458"];
m4_576 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs", label="'\0'", span="1044-1044"];
m4_837 [cluster="lambda expression", file="JsonTextReader.cs", label="reader.ReadAsInt32()", span="1351-1351"];
m4_849 [cluster="lambda expression", file="JsonTextReader.cs", label="reader.ReadAsInt32()", span="1366-1366"];
m4_1406 [cluster="lambda expression", file="JsonTextReader.cs", label="reader.ReadAsInt32()", span="2152-2152"];
m4_842 [cluster="lambda expression", file="JsonTextReader.cs", label="Entry lambda expression", span="1357-1357"];
m4_844 [cluster="lambda expression", file="JsonTextReader.cs", label="Exit lambda expression", span="1357-1357"];
m4_874 [cluster="lambda expression", file="JsonTextReader.cs", label="reader.ReadAsDecimal()", span="1387-1387"];
m4_880 [cluster="lambda expression", file="JsonTextReader.cs", label="reader.ReadAsDecimal()", span="1400-1400"];
m4_1198 [cluster="lambda expression", file="JsonTextReader.cs", label="reader.ReadAsDecimal()", span="1846-1846"];
m4_147 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", span="353-353"];
m4_184 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseObject()", span="767-767"];
m4_186 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", span="1034-1034"];
m4_309 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Unexpected end while parsing unicode character.'');", span="628-628"];
m4_311 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseUnicode()", span="615-615"];
m4_876 [cluster="lambda expression", file="JsonTextReader.cs", label="Entry lambda expression", span="1391-1391"];
m4_878 [cluster="lambda expression", file="JsonTextReader.cs", label="Exit lambda expression", span="1391-1391"];
m4_911 [cluster="lambda expression", file="JsonTextReader.cs", label="Entry lambda expression", span="1429-1429"];
m4_913 [cluster="lambda expression", file="JsonTextReader.cs", label="Exit lambda expression", span="1429-1429"];
m4_1089 [cluster="lambda expression", file="JsonTextReader.cs", label="Entry lambda expression", span="1691-1691"];
m4_1091 [cluster="lambda expression", file="JsonTextReader.cs", label="Exit lambda expression", span="1691-1691"];
m4_1167 [cluster="lambda expression", file="JsonTextReader.cs", label="Entry lambda expression", span="1801-1801"];
m4_1169 [cluster="lambda expression", file="JsonTextReader.cs", label="Exit lambda expression", span="1801-1801"];
m4_1412 [cluster="lambda expression", file="JsonTextReader.cs", label="Entry lambda expression", span="2160-2160"];
m4_1414 [cluster="lambda expression", file="JsonTextReader.cs", label="Exit lambda expression", span="2160-2160"];
m4_1419 [cluster="lambda expression", file="JsonTextReader.cs", label="Entry lambda expression", span="2168-2168"];
m4_1421 [cluster="lambda expression", file="JsonTextReader.cs", label="Exit lambda expression", span="2168-2168"];
m4_1426 [cluster="lambda expression", file="JsonTextReader.cs", label="Entry lambda expression", span="2176-2176"];
m4_1428 [cluster="lambda expression", file="JsonTextReader.cs", label="Exit lambda expression", span="2176-2176"];
m4_1433 [cluster="lambda expression", file="JsonTextReader.cs", label="Entry lambda expression", span="2184-2184"];
m4_1435 [cluster="lambda expression", file="JsonTextReader.cs", label="Exit lambda expression", span="2184-2184"];
m4_1440 [cluster="lambda expression", file="JsonTextReader.cs", label="Entry lambda expression", span="2192-2192"];
m4_1442 [cluster="lambda expression", file="JsonTextReader.cs", label="Exit lambda expression", span="2192-2192"];
m4_1585 [cluster="lambda expression", file="JsonTextReader.cs", label="Entry lambda expression", span="2442-2442"];
m4_1587 [cluster="lambda expression", file="JsonTextReader.cs", label="Exit lambda expression", span="2442-2442"];
m4_1593 [cluster="lambda expression", file="JsonTextReader.cs", label="Entry lambda expression", span="2451-2451"];
m4_1595 [cluster="lambda expression", file="JsonTextReader.cs", label="Exit lambda expression", span="2451-2451"];
m4_1624 [cluster="lambda expression", file="JsonTextReader.cs", label="Entry lambda expression", span="2497-2497"];
m4_1626 [cluster="lambda expression", file="JsonTextReader.cs", label="Exit lambda expression", span="2497-2497"];
m4_1641 [cluster="lambda expression", file="JsonTextReader.cs", label="Entry lambda expression", span="2519-2519"];
m4_1643 [cluster="lambda expression", file="JsonTextReader.cs", label="Exit lambda expression", span="2519-2519"];
m4_1805 [cluster="lambda expression", file="JsonTextReader.cs", label="Entry lambda expression", span="2781-2781"];
m4_1807 [cluster="lambda expression", file="JsonTextReader.cs", label="Exit lambda expression", span="2781-2781"];
m4_1900 [cluster="lambda expression", file="JsonTextReader.cs", label="Entry lambda expression", span="2924-2924"];
m4_1902 [cluster="lambda expression", file="JsonTextReader.cs", label="Exit lambda expression", span="2924-2924"];
m4_1932 [cluster="lambda expression", file="JsonTextReader.cs", label="Entry lambda expression", span="2940-2940"];
m4_1934 [cluster="lambda expression", file="JsonTextReader.cs", label="Exit lambda expression", span="2940-2940"];
m4_1935 [cluster="lambda expression", file="JsonTextReader.cs", label="Entry lambda expression", span="2958-2958"];
m4_1937 [cluster="lambda expression", file="JsonTextReader.cs", label="Exit lambda expression", span="2958-2958"];
m4_2057 [cluster="lambda expression", file="JsonTextReader.cs", label="Entry lambda expression", span="3116-3116"];
m4_2059 [cluster="lambda expression", file="JsonTextReader.cs", label="Exit lambda expression", span="3116-3116"];
m4_2060 [cluster="lambda expression", file="JsonTextReader.cs", label="Entry lambda expression", span="3117-3117"];
m4_2062 [cluster="lambda expression", file="JsonTextReader.cs", label="Exit lambda expression", span="3117-3117"];
m4_2063 [cluster="lambda expression", file="JsonTextReader.cs", label="Entry lambda expression", span="3126-3126"];
m4_2065 [cluster="lambda expression", file="JsonTextReader.cs", label="Exit lambda expression", span="3126-3126"];
m4_2066 [cluster="lambda expression", file="JsonTextReader.cs", label="Entry lambda expression", span="3135-3135"];
m4_2068 [cluster="lambda expression", file="JsonTextReader.cs", label="Exit lambda expression", span="3135-3135"];
m4_2069 [cluster="lambda expression", file="JsonTextReader.cs", label="Entry lambda expression", span="3136-3136"];
m4_2071 [cluster="lambda expression", file="JsonTextReader.cs", label="Exit lambda expression", span="3136-3136"];
m4_2072 [cluster="lambda expression", file="JsonTextReader.cs", label="Entry lambda expression", span="3137-3137"];
m4_2074 [cluster="lambda expression", file="JsonTextReader.cs", label="Exit lambda expression", span="3137-3137"];
m4_2100 [cluster="lambda expression", file="JsonTextReader.cs", label="Exit lambda expression", span="3188-3194"];
m4_477 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label=currentChar, span="908-908"];
m4_479 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="_charsUsed == _charPos", span="911-911"];
m4_485 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="ParseString(currentChar)", span="923-923"];
m4_574 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs", label="char currentChar = _chars[_charPos]", span="1040-1040"];
m4_590 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", span="1034-1034"];
m4_1185 [cluster="lambda expression", file="JsonTextReader.cs", label="reader.ReadAsBytes()", span="1827-1827"];
m4_1205 [cluster="lambda expression", file="JsonTextReader.cs", label="reader.ReadAsBytes()", span="1854-1854"];
m4_1212 [cluster="lambda expression", file="JsonTextReader.cs", label="reader.ReadAsDateTimeOffset()", span="1863-1863"];
m4_1226 [cluster="lambda expression", file="JsonTextReader.cs", label="reader.ReadAsBytes()", span="1883-1883"];
m4_1233 [cluster="lambda expression", file="JsonTextReader.cs", label="reader.ReadAsBytes()", span="1891-1891"];
m4_1304 [cluster="lambda expression", file="JsonTextReader.cs", label="reader.ReadAsDateTimeOffset()", span="2000-2000"];
m4_1845 [cluster="lambda expression", file="JsonTextReader.cs", label="reader.Read()", span="2841-2841"];
m4_2097 [cluster="lambda expression", file="JsonTextReader.cs", label="Entry lambda expression", span="3188-3194"];
m4_75 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs", label="_charsUsed + charsRequired >= _chars.Length - 1", span="203-203"];
m4_77 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs", label="int newArrayLength = Math.Max(_chars.Length * 2, _charsUsed + charsRequired + 1)", span="208-208"];
m4_78 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs", label="char[] dst = new char[newArrayLength]", span="211-211"];
m4_80 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs", label="_chars = dst", span="215-215"];
m4_81 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs", label="int remainingCharCount = _charsUsed - _charPos", span="219-219"];
m4_83 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs", label="char[] dst = new char[remainingCharCount + charsRequired + 1]", span="224-224"];
m4_84 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs", label="remainingCharCount > 0", span="226-226"];
m4_86 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs", label="_chars = dst", span="229-229"];
m4_577 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs", label="_charsUsed == _charPos", span="1045-1045"];
m4_836 [cluster="lambda expression", file="JsonTextReader.cs", label="Entry lambda expression", span="1351-1351"];
m4_838 [cluster="lambda expression", file="JsonTextReader.cs", label="Exit lambda expression", span="1351-1351"];
m4_848 [cluster="lambda expression", file="JsonTextReader.cs", label="Entry lambda expression", span="1366-1366"];
m4_850 [cluster="lambda expression", file="JsonTextReader.cs", label="Exit lambda expression", span="1366-1366"];
m4_1405 [cluster="lambda expression", file="JsonTextReader.cs", label="Entry lambda expression", span="2152-2152"];
m4_1407 [cluster="lambda expression", file="JsonTextReader.cs", label="Exit lambda expression", span="2152-2152"];
m4_484 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="'\''", span="922-922"];
m4_873 [cluster="lambda expression", file="JsonTextReader.cs", label="Entry lambda expression", span="1387-1387"];
m4_879 [cluster="lambda expression", file="JsonTextReader.cs", label="Entry lambda expression", span="1400-1400"];
m4_1184 [cluster="lambda expression", file="JsonTextReader.cs", label="Entry lambda expression", span="1827-1827"];
m4_1197 [cluster="lambda expression", file="JsonTextReader.cs", label="Entry lambda expression", span="1846-1846"];
m4_1204 [cluster="lambda expression", file="JsonTextReader.cs", label="Entry lambda expression", span="1854-1854"];
m4_1211 [cluster="lambda expression", file="JsonTextReader.cs", label="Entry lambda expression", span="1863-1863"];
m4_1225 [cluster="lambda expression", file="JsonTextReader.cs", label="Entry lambda expression", span="1883-1883"];
m4_1232 [cluster="lambda expression", file="JsonTextReader.cs", label="Entry lambda expression", span="1891-1891"];
m4_1303 [cluster="lambda expression", file="JsonTextReader.cs", label="Entry lambda expression", span="2000-2000"];
m4_875 [cluster="lambda expression", file="JsonTextReader.cs", label="Exit lambda expression", span="1387-1387"];
m4_881 [cluster="lambda expression", file="JsonTextReader.cs", label="Exit lambda expression", span="1400-1400"];
m4_1199 [cluster="lambda expression", file="JsonTextReader.cs", label="Exit lambda expression", span="1846-1846"];
m4_486 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="return true;", span="924-924"];
m4_1186 [cluster="lambda expression", file="JsonTextReader.cs", label="Exit lambda expression", span="1827-1827"];
m4_1206 [cluster="lambda expression", file="JsonTextReader.cs", label="Exit lambda expression", span="1854-1854"];
m4_1213 [cluster="lambda expression", file="JsonTextReader.cs", label="Exit lambda expression", span="1863-1863"];
m4_1227 [cluster="lambda expression", file="JsonTextReader.cs", label="Exit lambda expression", span="1883-1883"];
m4_1234 [cluster="lambda expression", file="JsonTextReader.cs", label="Exit lambda expression", span="1891-1891"];
m4_1305 [cluster="lambda expression", file="JsonTextReader.cs", label="Exit lambda expression", span="2000-2000"];
m4_1846 [cluster="lambda expression", file="JsonTextReader.cs", label="Exit lambda expression", span="2841-2841"];
m4_2033 [cluster="System.DateTimeOffset.DateTimeOffset(long, System.TimeSpan)", file="JsonTextReader.cs", label="Entry System.DateTimeOffset.DateTimeOffset(long, System.TimeSpan)", span="0-0"];
m4_1483 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", span="2271-2271"];
m4_1488 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2291-2291"];
m4_1490 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2294-2294"];
m4_1492 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonTextReader.cs", label="Assert.IsFalse(reader.Read())", span="2297-2297"];
m4_1485 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonTextReader.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2284-2284"];
m4_1491 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2295-2295"];
m4_1487 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonTextReader.cs", label="i < 26", span="2289-2289"];
m4_1489 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonTextReader.cs", label="i++", span="2289-2289"];
m4_1484 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonTextReader.cs", label="string json = @''/*comment*/ { /*comment*/\r\n        ''''Name'''': /*comment*/ ''''Apple'''' /*comment*/, /*comment*/\r\n        ''''ExpiryDate'''': ''''\/Date(1230422400000)\/'''',\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''': /*comment*/ [ /*comment*/\r\n          ''''Small'''', /*comment*/\r\n          ''''Medium'''' /*comment*/,\r\n          /*comment*/ ''''Large''''\r\n        /*comment*/ ] /*comment*/\r\n      } /*comment*/''", span="2273-2282"];
m4_1486 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonTextReader.cs", label="int i = 0", span="2289-2289"];
m4_1493 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", span="2271-2271"];
m4_1667 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", span="2559-2559"];
m4_1670 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2572-2572"];
m4_1672 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2575-2575"];
m4_1674 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2578-2578"];
m4_1676 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2581-2581"];
m4_1679 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2585-2585"];
m4_1681 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2588-2588"];
m4_1684 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2592-2592"];
m4_1686 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2595-2595"];
m4_1688 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2598-2598"];
m4_1691 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2602-2602"];
m4_1693 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2605-2605"];
m4_1697 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2610-2610"];
m4_1699 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2613-2613"];
m4_1701 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2616-2616"];
m4_1703 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2619-2619"];
m4_1669 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReader.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2570-2570"];
m4_1671 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2573-2573"];
m4_1673 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2576-2576"];
m4_1675 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2579-2579"];
m4_1677 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2582-2582"];
m4_1678 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReader.cs", label="Assert.AreEqual(''Name'', reader.Value)", span="2583-2583"];
m4_1680 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2586-2586"];
m4_1682 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="2589-2589"];
m4_1683 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReader.cs", label="Assert.AreEqual(true, reader.Value)", span="2590-2590"];
m4_1685 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2593-2593"];
m4_1687 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2596-2596"];
m4_1689 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2599-2599"];
m4_1690 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReader.cs", label="Assert.AreEqual(''ExpiryDate'', reader.Value)", span="2600-2600"];
m4_1692 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2603-2603"];
m4_1694 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2606-2606"];
m4_1695 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReader.cs", label="Assert.AreEqual(5, reader.LineNumber)", span="2607-2607"];
m4_1696 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReader.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="2608-2608"];
m4_1698 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2611-2611"];
m4_1700 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="2614-2614"];
m4_1702 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2617-2617"];
m4_1704 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2620-2620"];
m4_1668 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReader.cs", label="string json = @''/*comment*/{/*comment*/Name:/*comment*/true/*comment*/,/*comment*/\r\n        ''''ExpiryDate'''':/*comment*/new\r\n'' + StringUtils.LineFeed +\r\n                          @''Date\r\n(/*comment*/null/*comment*/),\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''':/*comment*/[/*comment*/\r\n          ''''Small''''/*comment*/]/*comment*/}/*comment*/''", span="2561-2568"];
m4_1705 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", span="2559-2559"];
m4_1847 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", span="2845-2845"];
m4_1854 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReader.cs", label="reader.Read()", span="2860-2860"];
m4_1855 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReader.cs", label="reader.Read()", span="2862-2862"];
m4_1858 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReader.cs", label="reader.Read()", span="2866-2866"];
m4_1861 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReader.cs", label="reader.Read()", span="2870-2870"];
m4_1864 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReader.cs", label="reader.Read()", span="2874-2874"];
m4_1867 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReader.cs", label="reader.Read()", span="2878-2878"];
m4_1870 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReader.cs", label="reader.Read()", span="2882-2882"];
m4_1872 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReader.cs", label="reader.Read()", span="2887-2887"];
m4_1888 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReader.cs", label="reader.Read()", span="2909-2909"];
m4_1853 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReader.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2858-2858"];
m4_1871 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReader.cs", label="reader = new JsonTextReader(new StringReader(json))", span="2885-2885"];
m4_1856 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2863-2863"];
m4_1857 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReader.cs", label="Assert.AreEqual(0d, reader.Value)", span="2864-2864"];
m4_1859 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2867-2867"];
m4_1860 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReader.cs", label="Assert.AreEqual(0d, reader.Value)", span="2868-2868"];
m4_1862 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2871-2871"];
m4_1863 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReader.cs", label="Assert.AreEqual(0.0000025d, reader.Value)", span="2872-2872"];
m4_1865 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2875-2875"];
m4_1866 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReader.cs", label="Assert.AreEqual(3000000000d, reader.Value)", span="2876-2876"];
m4_1868 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2879-2879"];
m4_1869 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReader.cs", label="Assert.AreEqual(602214180000000000000000d, reader.Value)", span="2880-2880"];
m4_1874 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2890-2890"];
m4_1875 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReader.cs", label="Assert.AreEqual(0m, reader.Value)", span="2891-2891"];
m4_1877 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2894-2894"];
m4_1878 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReader.cs", label="Assert.AreEqual(0m, reader.Value)", span="2895-2895"];
m4_1880 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2898-2898"];
m4_1881 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReader.cs", label="Assert.AreEqual(0.0000025m, reader.Value)", span="2899-2899"];
m4_1883 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2902-2902"];
m4_1884 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReader.cs", label="Assert.AreEqual(3000000000m, reader.Value)", span="2903-2903"];
m4_1886 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2906-2906"];
m4_1887 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReader.cs", label="Assert.AreEqual(602214180000000000000000m, reader.Value)", span="2907-2907"];
m4_1873 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReader.cs", label="reader.ReadAsDecimal()", span="2889-2889"];
m4_1876 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReader.cs", label="reader.ReadAsDecimal()", span="2893-2893"];
m4_1879 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReader.cs", label="reader.ReadAsDecimal()", span="2897-2897"];
m4_1882 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReader.cs", label="reader.ReadAsDecimal()", span="2901-2901"];
m4_1885 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReader.cs", label="reader.ReadAsDecimal()", span="2905-2905"];
m4_1852 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReader.cs", label="string json = @''[0e-10,0E-10,0.25e-5,0.3e10,6.0221418e23]''", span="2856-2856"];
m4_1851 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReader.cs", label="Console.WriteLine(d.ToString(''0.#############################################################################''))", span="2851-2851"];
m4_1850 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReader.cs", label="Console.WriteLine(d.ToString(new CultureInfo(''fr-FR'')))", span="2850-2850"];
m4_1848 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReader.cs", label="double d", span="2847-2847"];
m4_1849 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReader.cs", label="d = Convert.ToDouble(''6.0221418e23'', CultureInfo.InvariantCulture)", span="2849-2849"];
m4_1889 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", span="2845-2845"];
m4_1221 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", span="1879-1879"];
m4_1222 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", file="JsonTextReader.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[1''))", span="1881-1881"];
m4_1223 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", file="JsonTextReader.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Unexpected end when reading bytes. Path '[0]', line 1, position 2.'')", span="1883-1883"];
m4_1224 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", span="1879-1879"];
m4_958 [cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="357-357"];
m4_1162 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", span="1795-1795"];
m4_1164 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="JsonTextReader.cs", label="reader.Read()", span="1799-1799"];
m4_1163 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="JsonTextReader.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[}''))", span="1797-1797"];
m4_1165 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="JsonTextReader.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected character encountered while parsing value: }. Path '', line 1, position 1.'')", span="1801-1801"];
m4_1166 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", span="1795-1795"];
m4_254 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReader.cs", label="reader.Close()", span="431-431"];
m4_252 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReader.cs", label="reader = new JsonTextReader(new StreamReader(ms)) { CloseInput = false }", span="428-428"];
m4_266 [cluster="System.Console.WriteLine(object)", file="JsonTextReader.cs", label="Entry System.Console.WriteLine(object)", span="0-0"];
m4_232 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReader.cs", label="Assert.AreEqual(''ABC \ufffd '', ReadString(''ABC \\ud800 ''))", span="401-401"];
m4_220 [cluster="System.Globalization.StringInfo.StringInfo(string)", file="JsonTextReader.cs", label="Entry System.Globalization.StringInfo.StringInfo(string)", span="0-0"];
m4_223 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReader.cs", label="Assert.AreEqual(''ABC \ufffd\ufffd DEF'', ReadString(''ABC \\ud800\\ud800 DEF''))", span="377-377"];
m4_226 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReader.cs", label="Assert.AreEqual(''ABC \ufffd\ud800\udc00 DEF'', ReadString(''ABC \\ud800\\ud800\\udc00 DEF''))", span="386-386"];
m4_229 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReader.cs", label="Assert.AreEqual(''ABC \ufffd\ufffd DEF'', ReadString(''ABC \\udc00\\ud800 DEF''))", span="395-395"];
m4_234 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", span="371-371"];
m4_221 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", span="371-371"];
m4_222 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReader.cs", label="Assert.AreEqual(''ABC \ud800\udc00 DEF'', ReadString(''ABC \\ud800\\udc00 DEF''))", span="374-374"];
m4_224 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReader.cs", label="Assert.AreEqual(''ABC \ufffd\ufffd\u1234 DEF'', ReadString(''ABC \\ud800\\ud800\\u1234 DEF''))", span="380-380"];
m4_225 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReader.cs", label="Assert.AreEqual(''ABC \ufffd\ufffd\ufffd DEF'', ReadString(''ABC \\ud800\\ud800\\ud800 DEF''))", span="383-383"];
m4_227 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReader.cs", label="Assert.AreEqual(''ABC \ufffd'', ReadString(''ABC \\ud800''))", span="389-389"];
m4_228 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReader.cs", label="Assert.AreEqual(''ABC \ufffd DEF'', ReadString(''ABC \\ud800 DEF''))", span="392-392"];
m4_233 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReader.cs", label="Assert.AreEqual(''ABC \b\ufffd'', ReadString(''ABC \\b\\ud800''))", span="402-402"];
m4_230 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReader.cs", label="Assert.AreEqual(''\ufffd\ufffd\ufffd'', ReadString(''\udc00\ud800\ud800''))", span="398-398"];
m4_231 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReader.cs", label="Assert.AreEqual(''ABC \ufffd\b'', ReadString(''ABC \\ud800\\b''))", span="400-400"];
m4_244 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="JsonTextReader.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m4_242 [cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="JsonTextReader.cs", label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0"];
m4_243 [cluster="System.Text.Encoding.GetBytes(string)", file="JsonTextReader.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m4_256 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", span="418-418"];
m4_245 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", span="418-418"];
m4_246 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReader.cs", label="MemoryStream ms = new MemoryStream()", span="420-420"];
m4_247 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReader.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(ms))", span="421-421"];
m4_248 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReader.cs", label="Assert.IsTrue(ms.CanRead)", span="423-423"];
m4_249 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReader.cs", label="reader.Close()", span="424-424"];
m4_251 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReader.cs", label="ms = new MemoryStream()", span="427-427"];
m4_250 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReader.cs", label="Assert.IsFalse(ms.CanRead)", span="425-425"];
m4_253 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReader.cs", label="Assert.IsTrue(ms.CanRead)", span="430-430"];
m4_255 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReader.cs", label="Assert.IsTrue(ms.CanRead)", span="432-432"];
m4_1320 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", span="2026-2026"];
m4_1323 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2032-2032"];
m4_1325 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2035-2035"];
m4_1331 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2043-2043"];
m4_1322 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReader.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2030-2030"];
m4_1324 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2033-2033"];
m4_1326 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2036-2036"];
m4_1328 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2039-2039"];
m4_1329 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReader.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2040-2040"];
m4_1330 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReader.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(-6).Add(TimeSpan.FromMinutes(-31))), reader.Value)", span="2041-2041"];
m4_1332 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2044-2044"];
m4_1321 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReader.cs", label="string json = @''{''''Offset'''':''''\/Date(946708260000-0631)\/''''}''", span="2028-2028"];
m4_1327 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReader.cs", label="reader.ReadAsDateTimeOffset()", span="2038-2038"];
m4_1333 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", span="2026-2026"];
m4_494 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="EnsureChars(1, true)", span="932-932"];
m4_506 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="'I'", span="951-951"];
m4_509 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="'-'", span="954-954"];
m4_512 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="ParseNumber()", span="958-958"];
m4_513 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="return true;", span="959-959"];
m4_505 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="return true;", span="950-950"];
m4_510 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="EnsureChars(1, true) && _chars[_charPos + 1] == 'I'", span="955-955"];
m4_507 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="ParseNumberPositiveInfinity()", span="952-952"];
m4_508 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="return true;", span="953-953"];
m4_500 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Unexpected character encountered while parsing value: {0}.''.FormatWith(CultureInfo.InvariantCulture, _chars[_charPos]));", span="941-941"];
m4_504 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="ParseNumberNaN()", span="949-949"];
m4_511 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="ParseNumberNegativeInfinity()", span="956-956"];
m4_495 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="char next = _chars[_charPos + 1]", span="934-934"];
m4_499 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="ParseConstructor()", span="939-939"];
m4_502 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="return true;", span="947-947"];
m4_501 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="throw JsonReaderException.Create(this, ''Unexpected end.'');", span="945-945"];
m4_503 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="'N'", span="948-948"];
m4_496 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="next == 'u'", span="936-936"];
m4_498 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="next == 'e'", span="938-938"];
m4_497 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="ParseNull()", span="937-937"];
m4_514 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="'/'", span="960-960"];
m4_1277 [cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", file="JsonTextReader.cs", label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", span="0-0"];
m4_1250 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", span="1922-1922"];
m4_1253 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="1928-1928"];
m4_1255 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="1931-1931"];
m4_1257 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="1934-1934"];
m4_1260 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="1938-1938"];
m4_1252 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReader.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1926-1926"];
m4_1254 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1929-1929"];
m4_1256 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1932-1932"];
m4_1258 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1935-1935"];
m4_1259 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReader.cs", label="Assert.AreEqual(11806310474565, reader.Value)", span="1936-1936"];
m4_1261 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1939-1939"];
m4_1251 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReader.cs", label="string json = @''{''''text'''':0xabcdef12345}''", span="1924-1924"];
m4_1262 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", span="1922-1922"];
m4_1294 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", span="1988-1988"];
m4_1297 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="1994-1994"];
m4_1299 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="1997-1997"];
m4_1296 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonTextReader.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1992-1992"];
m4_1298 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1995-1995"];
m4_1300 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1998-1998"];
m4_1301 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonTextReader.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDateTimeOffset(); }, ''Could not convert string to DateTimeOffset: blablahbla. Path 'Offset', line 1, position 22.'')", span="2000-2000"];
m4_1295 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonTextReader.cs", label="string json = @''{''''Offset'''':''''blablahbla''''}''", span="1990-1990"];
m4_1302 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", span="1988-1988"];
m4_1306 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", span="2004-2004"];
m4_1309 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2010-2010"];
m4_1311 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2013-2013"];
m4_1317 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2021-2021"];
m4_1308 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReader.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2008-2008"];
m4_1310 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2011-2011"];
m4_1312 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2014-2014"];
m4_1314 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2017-2017"];
m4_1315 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReader.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2018-2018"];
m4_1316 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReader.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), reader.Value)", span="2019-2019"];
m4_1318 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2022-2022"];
m4_1307 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReader.cs", label="string json = ''{\''Offset\'':\''\\/Date(946663200000+06)\\/\''}''", span="2006-2006"];
m4_1313 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReader.cs", label="reader.ReadAsDateTimeOffset()", span="2016-2016"];
m4_1319 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", span="2004-2004"];
m4_1979 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", span="3036-3036"];
m4_1983 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="3043-3043"];
m4_1984 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="3044-3044"];
m4_1987 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="3047-3047"];
m4_1990 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="3050-3050"];
m4_1993 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="3056-3056"];
m4_1994 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="3057-3057"];
m4_1997 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="3060-3060"];
m4_2000 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="3063-3063"];
m4_2003 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="3069-3069"];
m4_2004 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="3070-3070"];
m4_2007 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="3073-3073"];
m4_2010 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="3076-3076"];
m4_2013 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="3082-3082"];
m4_2020 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="3089-3089"];
m4_2023 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="3095-3095"];
m4_2030 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="3102-3102"];
m4_1981 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReader.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3040-3040"];
m4_1991 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReader.cs", label="reader = new JsonTextReader(new StringReader(json))", span="3053-3053"];
m4_2001 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReader.cs", label="reader = new JsonTextReader(new StringReader(json))", span="3066-3066"];
m4_2011 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReader.cs", label="reader = new JsonTextReader(new StringReader(json))", span="3079-3079"];
m4_2021 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReader.cs", label="reader = new JsonTextReader(new StringReader(json))", span="3092-3092"];
m4_1985 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReader.cs", label="Assert.AreEqual(new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc), reader.Value)", span="3045-3045"];
m4_1986 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReader.cs", label="Assert.AreEqual(typeof(DateTime), reader.ValueType)", span="3046-3046"];
m4_1988 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReader.cs", label="Assert.AreEqual(new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc), reader.Value)", span="3048-3048"];
m4_1989 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReader.cs", label="Assert.AreEqual(typeof(DateTime), reader.ValueType)", span="3049-3049"];
m4_1995 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReader.cs", label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero), reader.Value)", span="3058-3058"];
m4_1996 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReader.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="3059-3059"];
m4_1998 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReader.cs", label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero), reader.Value)", span="3061-3061"];
m4_1999 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReader.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="3062-3062"];
m4_2005 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReader.cs", label="Assert.AreEqual(@''1970-01-01T00:00:00Z'', reader.Value)", span="3071-3071"];
m4_2006 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReader.cs", label="Assert.AreEqual(typeof(string), reader.ValueType)", span="3072-3072"];
m4_2008 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReader.cs", label="Assert.AreEqual(@''/Date(0)/'', reader.Value)", span="3074-3074"];
m4_2009 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReader.cs", label="Assert.AreEqual(typeof(string), reader.ValueType)", span="3075-3075"];
m4_2015 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReader.cs", label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero), reader.Value)", span="3084-3084"];
m4_2016 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReader.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="3085-3085"];
m4_2018 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReader.cs", label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero), reader.Value)", span="3087-3087"];
m4_2019 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReader.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="3088-3088"];
m4_2025 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReader.cs", label="Assert.AreEqual(new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc), reader.Value)", span="3097-3097"];
m4_2026 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReader.cs", label="Assert.AreEqual(typeof(DateTime), reader.ValueType)", span="3098-3098"];
m4_2028 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReader.cs", label="Assert.AreEqual(new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc), reader.Value)", span="3100-3100"];
m4_2029 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReader.cs", label="Assert.AreEqual(typeof(DateTime), reader.ValueType)", span="3101-3101"];
m4_1982 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReader.cs", label="reader.DateParseHandling = Json.DateParseHandling.DateTime", span="3041-3041"];
m4_1992 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReader.cs", label="reader.DateParseHandling = Json.DateParseHandling.DateTimeOffset", span="3054-3054"];
m4_2002 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReader.cs", label="reader.DateParseHandling = Json.DateParseHandling.None", span="3067-3067"];
m4_2012 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReader.cs", label="reader.DateParseHandling = Json.DateParseHandling.DateTime", span="3080-3080"];
m4_2014 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReader.cs", label="reader.ReadAsDateTimeOffset()", span="3083-3083"];
m4_2022 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReader.cs", label="reader.DateParseHandling = Json.DateParseHandling.DateTimeOffset", span="3093-3093"];
m4_2024 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReader.cs", label="reader.ReadAsDateTime()", span="3096-3096"];
m4_1980 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReader.cs", label="string json = @''[''''1970-01-01T00:00:00Z'''',''''\/Date(0)\/'''']''", span="3038-3038"];
m4_2017 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReader.cs", label="reader.ReadAsDateTimeOffset()", span="3086-3086"];
m4_2027 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReader.cs", label="reader.ReadAsDateTime()", span="3099-3099"];
m4_2031 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", span="3036-3036"];
m4_480 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="ReadData(false) == 0", span="913-913"];
m4_481 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="return false;", span="914-914"];
m4_482 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="_charPos++", span="918-918"];
m4_483 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="''''", span="921-921"];
m4_1193 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", span="1842-1842"];
m4_1194 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", file="JsonTextReader.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''new Date()''))", span="1844-1844"];
m4_1195 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", file="JsonTextReader.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDecimal(); }, ''Error reading decimal. Unexpected token: StartConstructor. Path '', line 1, position 9.'')", span="1846-1846"];
m4_1196 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", span="1842-1842"];
m4_1580 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", span="2437-2437"];
m4_1582 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="JsonTextReader.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2440-2440"];
m4_1583 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="JsonTextReader.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected end while parsing constructor. Path '', line 1, position 7.'')", span="2442-2442"];
m4_1581 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="JsonTextReader.cs", label="string json = ''new Dat''", span="2439-2439"];
m4_1584 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", span="2437-2437"];
m4_1279 [cluster="System.TimeSpan.FromHours(double)", file="JsonTextReader.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m4_1187 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", span="1832-1832"];
m4_1188 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="JsonTextReader.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''''))", span="1834-1834"];
m4_1190 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1837-1837"];
m4_1189 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="JsonTextReader.cs", label="Assert.IsNull(reader.ReadAsDateTimeOffset())", span="1836-1836"];
m4_1191 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", span="1832-1832"];
m4_956 [cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="373-373"];
m4_152 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", span="400-400"];
m4_1822 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", span="2809-2809"];
m4_1825 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReader.cs", label="reader.Read()", span="2815-2815"];
m4_1827 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReader.cs", label="reader.Read()", span="2818-2818"];
m4_1829 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReader.cs", label="reader.Read()", span="2821-2821"];
m4_1831 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReader.cs", label="reader.Read()", span="2824-2824"];
m4_1833 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReader.cs", label="reader.Read()", span="2827-2827"];
m4_1835 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReader.cs", label="reader.Read()", span="2830-2830"];
m4_1824 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReader.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2813-2813"];
m4_1826 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2816-2816"];
m4_1828 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2819-2819"];
m4_1830 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2822-2822"];
m4_1832 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2825-2825"];
m4_1834 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2828-2828"];
m4_1836 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2831-2831"];
m4_1823 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReader.cs", label="string json = @''[0,1,2 , 3]''", span="2811-2811"];
m4_1837 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", span="2809-2809"];
m4_1214 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", span="1868-1868"];
m4_1215 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonTextReader.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[/*hi*/1/*hi*/,2/*hi*/]''))", span="1870-1870"];
m4_1217 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonTextReader.cs", label="Assert.AreEqual(2, data.Length)", span="1873-1873"];
m4_1218 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonTextReader.cs", label="Assert.AreEqual(1, data[0])", span="1874-1874"];
m4_1219 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonTextReader.cs", label="Assert.AreEqual(2, data[1])", span="1875-1875"];
m4_1216 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonTextReader.cs", label="byte[] data = reader.ReadAsBytes()", span="1872-1872"];
m4_1220 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", span="1868-1868"];
m4_1503 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", span="2318-2318"];
m4_1506 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2323-2323"];
m4_1509 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2327-2327"];
m4_1505 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonTextReader.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2321-2321"];
m4_1507 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonTextReader.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="2324-2324"];
m4_1508 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2325-2325"];
m4_1510 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2328-2328"];
m4_1504 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonTextReader.cs", label="string json = ''new Date\n()''", span="2320-2320"];
m4_1511 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", span="2318-2318"];
m4_1102 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", span="1708-1708"];
m4_1105 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReader.cs", label="Assert.IsTrue(jsonReader.Read())", span="1713-1713"];
m4_1107 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReader.cs", label="Assert.IsTrue(jsonReader.Read())", span="1716-1716"];
m4_1110 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReader.cs", label="Assert.IsTrue(jsonReader.Read())", span="1720-1720"];
m4_1113 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReader.cs", label="Assert.IsTrue(jsonReader.Read())", span="1724-1724"];
m4_1116 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReader.cs", label="Assert.IsTrue(jsonReader.Read())", span="1728-1728"];
m4_1118 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReader.cs", label="Assert.IsFalse(jsonReader.Read())", span="1731-1731"];
m4_1104 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReader.cs", label="JsonTextReader jsonReader = new JsonTextReader(s)", span="1711-1711"];
m4_1103 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReader.cs", label="StringReader s = new StringReader(@''[0372, 0xFA, 0XFA]'')", span="1710-1710"];
m4_1106 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="1714-1714"];
m4_1108 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1717-1717"];
m4_1109 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReader.cs", label="Assert.AreEqual(250L, jsonReader.Value)", span="1718-1718"];
m4_1111 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1721-1721"];
m4_1112 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReader.cs", label="Assert.AreEqual(250L, jsonReader.Value)", span="1722-1722"];
m4_1114 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1725-1725"];
m4_1115 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReader.cs", label="Assert.AreEqual(250L, jsonReader.Value)", span="1726-1726"];
m4_1117 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="1729-1729"];
m4_1119 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", span="1708-1708"];
m4_515 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="ParseComment()", span="961-961"];
m4_1175 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", span="1814-1814"];
m4_1176 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="JsonTextReader.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''''))", span="1816-1816"];
m4_1178 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1819-1819"];
m4_1177 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="JsonTextReader.cs", label="Assert.IsNull(reader.ReadAsBytes())", span="1818-1818"];
m4_1179 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", span="1814-1814"];
m4_967 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", span="650-650"];
m4_963 [cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="365-365"];
m4_2034 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", span="353-353"];
m4_493 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="'n'", span="931-931"];
m4_1512 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", span="2332-2332"];
m4_1515 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2337-2337"];
m4_1517 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2340-2340"];
m4_1519 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2343-2343"];
m4_1521 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2346-2346"];
m4_1523 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2349-2349"];
m4_1525 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2352-2352"];
m4_1527 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2355-2355"];
m4_1514 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReader.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2335-2335"];
m4_1516 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2338-2338"];
m4_1518 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2341-2341"];
m4_1520 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2344-2344"];
m4_1522 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2347-2347"];
m4_1524 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2350-2350"];
m4_1526 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2353-2353"];
m4_1528 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2356-2356"];
m4_1513 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReader.cs", label="string json = ''[,,, \n\r\n \0   \r  , ,    ]''", span="2334-2334"];
m4_1529 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", span="2332-2332"];
m4_92 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonTextReader.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="187-187"];
m4_87 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", span="176-176"];
m4_88 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonTextReader.cs", label="string json = @''{\r\n    ChildId: '123'\r\n}''", span="178-180"];
m4_91 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.StartObject, jsonTextReader.TokenType)", span="185-185"];
m4_89 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonTextReader.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="182-182"];
m4_90 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonTextReader.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="184-184"];
m4_93 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="188-188"];
m4_94 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonTextReader.cs", label="jsonTextReader.ReadAsBytes()", span="192-192"];
m4_95 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonTextReader.cs", label=FormatException, span="194-194"];
m4_98 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonTextReader.cs", label="Assert.IsFalse(jsonTextReader.Read())", span="201-201"];
m4_96 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonTextReader.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="198-198"];
m4_97 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.EndObject, jsonTextReader.TokenType)", span="199-199"];
m4_99 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", span="176-176"];
m4_1800 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", span="2775-2775"];
m4_1802 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="JsonTextReader.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2779-2779"];
m4_1803 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="JsonTextReader.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected end while parsing comment. Path '', line 1, position 1.'')", span="2781-2781"];
m4_1801 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="JsonTextReader.cs", label="string json = @''/''", span="2777-2777"];
m4_1804 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", span="2775-2775"];
m4_1706 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", span="2624-2624"];
m4_1709 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2648-2648"];
m4_1713 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2653-2653"];
m4_1716 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2657-2657"];
m4_1719 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2661-2661"];
m4_1723 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2666-2666"];
m4_1726 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2670-2670"];
m4_1730 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2675-2675"];
m4_1734 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2680-2680"];
m4_1738 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2685-2685"];
m4_1742 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2690-2690"];
m4_1745 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2694-2694"];
m4_1749 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2699-2699"];
m4_1751 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2702-2702"];
m4_1754 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2706-2706"];
m4_1757 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2710-2710"];
m4_1760 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2714-2714"];
m4_1763 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2718-2718"];
m4_1765 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2721-2721"];
m4_1768 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2725-2725"];
m4_1770 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2728-2728"];
m4_1772 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2731-2731"];
m4_1774 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2734-2734"];
m4_1776 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2737-2737"];
m4_1778 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2740-2740"];
m4_1780 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2743-2743"];
m4_1782 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2746-2746"];
m4_1784 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2749-2749"];
m4_1787 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2753-2753"];
m4_1790 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.IsFalse(reader.Read())", span="2757-2757"];
m4_1708 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2646-2646"];
m4_1710 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2649-2649"];
m4_1711 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.AreEqual(''comment*//*hi*/'', reader.Value)", span="2650-2650"];
m4_1712 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.AreEqual(2, reader.LineNumber)", span="2651-2651"];
m4_1714 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.AreEqual(2, reader.LineNumber)", span="2654-2654"];
m4_1715 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2655-2655"];
m4_1717 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2658-2658"];
m4_1718 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.AreEqual(3, reader.LineNumber)", span="2659-2659"];
m4_1720 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2662-2662"];
m4_1721 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.AreEqual(''Name'', reader.Value)", span="2663-2663"];
m4_1722 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.AreEqual(3, reader.LineNumber)", span="2664-2664"];
m4_1724 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2667-2667"];
m4_1725 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.AreEqual(4, reader.LineNumber)", span="2668-2668"];
m4_1727 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="2671-2671"];
m4_1728 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.AreEqual(true, reader.Value)", span="2672-2672"];
m4_1729 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.AreEqual(4, reader.LineNumber)", span="2673-2673"];
m4_1731 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2676-2676"];
m4_1732 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.AreEqual(''comment after true'', reader.Value)", span="2677-2677"];
m4_1733 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.AreEqual(5, reader.LineNumber)", span="2678-2678"];
m4_1735 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2681-2681"];
m4_1736 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.AreEqual(''comment after comma'', reader.Value)", span="2682-2682"];
m4_1737 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.AreEqual(6, reader.LineNumber)", span="2683-2683"];
m4_1739 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2686-2686"];
m4_1740 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.AreEqual(''ExpiryDate'', reader.Value)", span="2687-2687"];
m4_1741 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.AreEqual(6, reader.LineNumber)", span="2688-2688"];
m4_1743 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2691-2691"];
m4_1744 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.AreEqual(7, reader.LineNumber)", span="2692-2692"];
m4_1746 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2695-2695"];
m4_1747 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.AreEqual(9, reader.LineNumber)", span="2696-2696"];
m4_1748 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="2697-2697"];
m4_1750 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2700-2700"];
m4_1752 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="2703-2703"];
m4_1753 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.AreEqual(10, reader.LineNumber)", span="2704-2704"];
m4_1755 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2707-2707"];
m4_1756 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.AreEqual(11, reader.LineNumber)", span="2708-2708"];
m4_1758 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2711-2711"];
m4_1759 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.AreEqual(11, reader.LineNumber)", span="2712-2712"];
m4_1761 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2715-2715"];
m4_1762 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.AreEqual(''Price'', reader.Value)", span="2716-2716"];
m4_1764 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2719-2719"];
m4_1766 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2722-2722"];
m4_1767 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.AreEqual(''Sizes'', reader.Value)", span="2723-2723"];
m4_1769 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2726-2726"];
m4_1771 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2729-2729"];
m4_1773 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2732-2732"];
m4_1775 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="2735-2735"];
m4_1777 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2738-2738"];
m4_1779 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2741-2741"];
m4_1781 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2744-2744"];
m4_1783 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2747-2747"];
m4_1785 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2750-2750"];
m4_1786 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.AreEqual(''comment '', reader.Value)", span="2751-2751"];
m4_1788 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2754-2754"];
m4_1789 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Assert.AreEqual(''comment 1 '', reader.Value)", span="2755-2755"];
m4_1707 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="string json = @''//comment*//*hi*/\r\n{//comment\r\nName://comment\r\ntrue//comment after true'' + StringUtils.CarriageReturn +\r\n@'',//comment after comma'' + StringUtils.CarriageReturnLineFeed + \r\n@''''''ExpiryDate''''://comment''  + StringUtils.LineFeed + \r\n@''new '' + StringUtils.LineFeed +\r\n@''Date\r\n(//comment\r\nnull//comment\r\n),\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''': //comment\r\n[//comment\r\n\r\n          ''''Small''''//comment\r\n]//comment\r\n}//comment \r\n//comment 1 ''", span="2626-2644"];
m4_1791 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", span="2624-2624"];
m4_1351 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", span="2070-2070"];
m4_1355 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2077-2077"];
m4_1357 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2080-2080"];
m4_1364 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="2090-2090"];
m4_1353 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReader.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2074-2074"];
m4_1356 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2078-2078"];
m4_1358 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2081-2081"];
m4_1360 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2084-2084"];
m4_1361 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReader.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2085-2085"];
m4_1365 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2091-2091"];
m4_1363 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReader.cs", label="Assert.AreEqual(new DateTime(2011, 1, 30, 0, 0, 0, DateTimeKind.Unspecified), dt.DateTime)", span="2088-2088"];
m4_1354 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReader.cs", label="reader.Culture = new CultureInfo(''en-US'')", span="2075-2075"];
m4_1352 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReader.cs", label="string json = @''{''''Offset'''':''''1/30/2011''''}''", span="2072-2072"];
m4_1359 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReader.cs", label="reader.ReadAsDateTimeOffset()", span="2083-2083"];
m4_1362 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReader.cs", label="DateTimeOffset dt = (DateTimeOffset)reader.Value", span="2087-2087"];
m4_1366 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", span="2070-2070"];
m4_517 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs", label="'u'", span="963-963"];
m4_1350 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JsonTextReader.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m4_965 [cluster="System.Text.StringBuilder.ToString()", file="JsonTextReader.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m4_1200 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", span="1850-1850"];
m4_1201 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", file="JsonTextReader.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''new Date()''))", span="1852-1852"];
m4_1202 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", file="JsonTextReader.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Error reading bytes. Unexpected token: StartConstructor. Path '', line 1, position 9.'')", span="1854-1854"];
m4_1203 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", span="1850-1850"];
m4_1280 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", span="1966-1966"];
m4_1283 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="1972-1972"];
m4_1285 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="1975-1975"];
m4_1291 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="1983-1983"];
m4_1282 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReader.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1970-1970"];
m4_1284 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1973-1973"];
m4_1286 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1976-1976"];
m4_1288 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="1979-1979"];
m4_1289 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReader.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="1980-1980"];
m4_1290 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReader.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(-6)), reader.Value)", span="1981-1981"];
m4_1292 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1984-1984"];
m4_1281 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReader.cs", label="string json = @''{''''Offset'''':''''\/Date(946706400000-0600)\/''''}''", span="1968-1968"];
m4_1287 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReader.cs", label="reader.ReadAsDateTimeOffset()", span="1978-1978"];
m4_1293 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", span="1966-1966"];
m4_1408 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", span="2156-2156"];
m4_1409 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", file="JsonTextReader.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''nul''))", span="2158-2158"];
m4_1410 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", file="JsonTextReader.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Error parsing null value. Path '', line 0, position 0.'')", span="2160-2160"];
m4_1411 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", span="2156-2156"];
m4_960 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(int)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(int)", span="822-822"];
m4_1893 [cluster="double.ToString(string)", file="JsonTextReader.cs", label="Entry double.ToString(string)", span="0-0"];
m4_1235 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", span="1895-1895"];
m4_1238 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="1904-1904"];
m4_1240 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="1907-1907"];
m4_1243 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="1911-1911"];
m4_1246 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReader.cs", label="Assert.IsTrue(reader.Read())", span="1915-1915"];
m4_1248 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReader.cs", label="Assert.IsFalse(reader.Read())", span="1918-1918"];
m4_1237 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReader.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1899-1899"];
m4_1239 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1905-1905"];
m4_1241 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1908-1908"];
m4_1242 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReader.cs", label="Assert.AreEqual(''Message'', reader.Value)", span="1909-1909"];
m4_1244 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1912-1912"];
m4_1245 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReader.cs", label="Assert.AreEqual(@''Hi,I'' + '\u0092' + ''ve send you smth'', reader.Value)", span="1913-1913"];
m4_1247 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReader.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1916-1916"];
m4_1236 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReader.cs", label="string json = @''{''''Message'''':''''Hi,I\u0092ve send you smth''''}''", span="1897-1897"];
m4_1249 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", span="1895-1895"];
m4_2155 [file="JsonTextReader.cs", label=reader, span=""];
m4_2157 [file="JsonTextReader.cs", label=reader, span=""];
m4_2140 [file="JsonTextReader.cs", label=reader, span=""];
m4_2141 [file="JsonTextReader.cs", label=reader, span=""];
m4_2142 [file="JsonTextReader.cs", label=reader, span=""];
m4_2144 [file="JsonTextReader.cs", label=reader, span=""];
m4_2145 [file="JsonTextReader.cs", label=reader, span=""];
m4_2146 [file="JsonTextReader.cs", label=reader, span=""];
m4_2156 [file="JsonTextReader.cs", label=reader, span=""];
m4_2158 [file="JsonTextReader.cs", label=reader, span=""];
m4_2159 [file="JsonTextReader.cs", label=reader, span=""];
m4_2168 [file="JsonTextReader.cs", label=reader, span=""];
m4_2169 [file="JsonTextReader.cs", label=reader, span=""];
m4_2170 [file="JsonTextReader.cs", label=reader, span=""];
m4_2171 [file="JsonTextReader.cs", label=reader, span=""];
m4_2172 [file="JsonTextReader.cs", label=reader, span=""];
m4_2173 [file="JsonTextReader.cs", label=reader, span=""];
m4_2174 [file="JsonTextReader.cs", label=reader, span=""];
m4_2175 [file="JsonTextReader.cs", label=reader, span=""];
m4_2176 [file="JsonTextReader.cs", label=reader, span=""];
m4_2177 [file="JsonTextReader.cs", label=reader, span=""];
m4_2179 [file="JsonTextReader.cs", label=reader, span=""];
m4_2180 [file="JsonTextReader.cs", label=reader, span=""];
m4_2181 [file="JsonTextReader.cs", label=jsonTextReader, span=""];
m4_2148 [file="JsonTextReader.cs", label=total, span=""];
m4_2149 [file="JsonTextReader.cs", label=total, span=""];
m4_2182 [file="JsonTextReader.cs", label=json, span=""];
m4_2138 [file="JsonTextReader.cs", label=jsonTextReader, span=""];
m4_2139 [file="JsonTextReader.cs", label=jsonTextReader, span=""];
m4_2167 [file="JsonTextReader.cs", label=reader, span=""];
m4_2143 [file="JsonTextReader.cs", label="Newtonsoft.Json.Tests.JsonTextReaderTest", span=""];
m4_2161 [file="JsonTextReader.cs", label=reader, span=""];
m4_2147 [file="JsonTextReader.cs", label=reader, span=""];
m4_2150 [file="JsonTextReader.cs", label=reader, span=""];
m4_2151 [file="JsonTextReader.cs", label=reader, span=""];
m4_2152 [file="JsonTextReader.cs", label=reader, span=""];
m4_2153 [file="JsonTextReader.cs", label=reader, span=""];
m4_2154 [file="JsonTextReader.cs", label=reader, span=""];
m4_2160 [file="JsonTextReader.cs", label=reader, span=""];
m4_2162 [file="JsonTextReader.cs", label=reader, span=""];
m4_2163 [file="JsonTextReader.cs", label=reader, span=""];
m4_2164 [file="JsonTextReader.cs", label=reader, span=""];
m4_2165 [file="JsonTextReader.cs", label=reader, span=""];
m4_2166 [file="JsonTextReader.cs", label=reader, span=""];
m4_2178 [file="JsonTextReader.cs", label=reader, span=""];
m4_2183 [file="JsonTextReader.cs", label="Newtonsoft.Json.Tests.ToggleReaderError", span=""];
m6_102 [cluster="string.FormatWith(System.IFormatProvider, params object[])", file="JsonTextWriterTest.cs", label="Entry string.FormatWith(System.IFormatProvider, params object[])", span="48-48"];
m6_5 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.Flush()", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Bson.BsonBinaryWriter.Flush()", span="27-27"];
m6_6 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.Flush()", file="JsonTextWriterTest.cs", label="_writer.Flush()", span="29-29"];
m6_7 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.Flush()", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Bson.BsonBinaryWriter.Flush()", span="27-27"];
m6_86 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteString(string, int, int?)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Bson.BsonBinaryWriter.WriteString(string, int, int?)", span="166-166"];
m6_103 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteString(string, int, int?)", file="JsonTextWriterTest.cs", label="calculatedlengthPrefix != null", span="168-168"];
m6_104 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteString(string, int, int?)", file="JsonTextWriterTest.cs", label="_writer.Write(calculatedlengthPrefix.Value)", span="169-169"];
m6_105 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteString(string, int, int?)", file="JsonTextWriterTest.cs", label="WriteUtf8Bytes(s, byteCount)", span="171-171"];
m6_106 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteString(string, int, int?)", file="JsonTextWriterTest.cs", label="_writer.Write((byte)0)", span="173-173"];
m6_107 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteString(string, int, int?)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Bson.BsonBinaryWriter.WriteString(string, int, int?)", span="166-166"];
m6_97 [cluster="System.DateTime.ToLocalTime()", file="JsonTextWriterTest.cs", label="Entry System.DateTime.ToLocalTime()", span="0-0"];
m6_96 [cluster="System.DateTime.ToUniversalTime()", file="JsonTextWriterTest.cs", label="Entry System.DateTime.ToUniversalTime()", span="0-0"];
m6_121 [cluster="System.IO.BinaryWriter.Write(byte[], int, int)", file="JsonTextWriterTest.cs", label="Entry System.IO.BinaryWriter.Write(byte[], int, int)", span="0-0"];
m6_123 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(int)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(int)", span="198-198"];
m6_124 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(int)", file="JsonTextWriterTest.cs", label="return stringByteCount + 1;", span="200-200"];
m6_125 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(int)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(int)", span="198-198"];
m6_87 [cluster="System.IO.BinaryWriter.Write(byte)", file="JsonTextWriterTest.cs", label="Entry System.IO.BinaryWriter.Write(byte)", span="0-0"];
m6_8 [cluster="System.IO.BinaryWriter.Flush()", file="JsonTextWriterTest.cs", label="Entry System.IO.BinaryWriter.Flush()", span="0-0"];
m6_93 [cluster="System.Convert.ToDouble(object, System.IFormatProvider)", file="JsonTextWriterTest.cs", label="Entry System.Convert.ToDouble(object, System.IFormatProvider)", span="0-0"];
m6_88 [cluster="int.ToString(System.IFormatProvider)", file="JsonTextWriterTest.cs", label="Entry int.ToString(System.IFormatProvider)", span="0-0"];
m6_101 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", file="JsonTextWriterTest.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", span="0-0"];
m6_18 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", span="43-43"];
m6_19 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="t.Type", span="45-45"];
m6_21 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="BsonObject value = (BsonObject) t", span="49-49"];
m6_29 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="BsonArray value = (BsonArray) t", span="62-62"];
m6_39 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="BsonValue value = (BsonValue) t", span="77-77"];
m6_42 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="BsonValue value = (BsonValue)t", span="83-83"];
m6_45 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="BsonValue value = (BsonValue)t", span="89-89"];
m6_48 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="BsonString value = (BsonString)t", span="95-95"];
m6_51 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="BsonValue value = (BsonValue)t", span="101-101"];
m6_56 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="BsonValue value = (BsonValue)t", span="110-110"];
m6_69 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="BsonValue value = (BsonValue)t", span="137-137"];
m6_75 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="BsonValue value = (BsonValue)t", span="147-147"];
m6_79 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="BsonRegex value = (BsonRegex) t", span="155-155"];
m6_82 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="throw new ArgumentOutOfRangeException(''t'', ''Unexpected token when writing BSON: {0}''.FormatWith(CultureInfo.InvariantCulture, t.Type));", span="162-162"];
m6_20 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="BsonType.Object", span="47-47"];
m6_28 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="BsonType.Array", span="60-60"];
m6_38 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="BsonType.Integer", span="75-75"];
m6_41 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="BsonType.Long", span="81-81"];
m6_44 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="BsonType.Number", span="87-87"];
m6_47 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="BsonType.String", span="93-93"];
m6_50 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="BsonType.Boolean", span="99-99"];
m6_53 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="BsonType.Null", span="105-105"];
m6_55 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="BsonType.Date", span="108-108"];
m6_68 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="BsonType.Binary", span="135-135"];
m6_74 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="BsonType.Oid", span="145-145"];
m6_78 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="BsonType.Regex", span="153-153"];
m6_22 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="_writer.Write(value.CalculatedSize)", span="50-50"];
m6_23 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label=value, span="51-51"];
m6_24 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="_writer.Write((sbyte)property.Value.Type)", span="53-53"];
m6_27 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="_writer.Write((byte)0)", span="57-57"];
m6_25 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="WriteString((string)property.Name.Value, property.Name.ByteCount, null)", span="54-54"];
m6_26 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="WriteTokenInternal(property.Value)", span="55-55"];
m6_30 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="_writer.Write(value.CalculatedSize)", span="63-63"];
m6_32 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label=value, span="65-65"];
m6_31 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="int index = 0", span="64-64"];
m6_34 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="WriteString(index.ToString(CultureInfo.InvariantCulture), MathUtils.IntLength(index), null)", span="68-68"];
m6_36 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="index++", span="70-70"];
m6_33 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="_writer.Write((sbyte)c.Type)", span="67-67"];
m6_37 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="_writer.Write((byte)0)", span="72-72"];
m6_35 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="WriteTokenInternal(c)", span="69-69"];
m6_40 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="_writer.Write(Convert.ToInt32(value.Value, CultureInfo.InvariantCulture))", span="78-78"];
m6_43 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="_writer.Write(Convert.ToInt64(value.Value, CultureInfo.InvariantCulture))", span="84-84"];
m6_46 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="_writer.Write(Convert.ToDouble(value.Value, CultureInfo.InvariantCulture))", span="90-90"];
m6_49 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="WriteString((string)value.Value, value.ByteCount, value.CalculatedSize - 4)", span="96-96"];
m6_52 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="_writer.Write((bool)value.Value)", span="102-102"];
m6_54 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="BsonType.Undefined", span="106-106"];
m6_57 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="long ticks = 0", span="112-112"];
m6_58 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="value.Value is DateTime", span="114-114"];
m6_59 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="DateTime dateTime = (DateTime) value.Value", span="116-116"];
m6_65 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="DateTimeOffset dateTimeOffset = (DateTimeOffset) value.Value", span="127-127"];
m6_60 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="DateTimeKindHandling == DateTimeKind.Utc", span="117-117"];
m6_61 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="dateTime = dateTime.ToUniversalTime()", span="118-118"];
m6_63 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="dateTime = dateTime.ToLocalTime()", span="120-120"];
m6_64 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="ticks = JsonConvert.ConvertDateTimeToJavaScriptTicks(dateTime, false)", span="122-122"];
m6_62 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="DateTimeKindHandling == DateTimeKind.Local", span="119-119"];
m6_66 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="ticks = JsonConvert.ConvertDateTimeToJavaScriptTicks(dateTimeOffset.UtcDateTime, dateTimeOffset.Offset)", span="128-128"];
m6_67 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="_writer.Write(ticks)", span="132-132"];
m6_70 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="byte[] data = (byte[])value.Value", span="139-139"];
m6_71 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="_writer.Write(data.Length)", span="140-140"];
m6_73 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="_writer.Write(data)", span="142-142"];
m6_72 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="_writer.Write((byte)BsonBinaryType.Binary)", span="141-141"];
m6_76 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="byte[] data = (byte[])value.Value", span="149-149"];
m6_77 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="_writer.Write(data)", span="150-150"];
m6_80 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="WriteString((string)value.Pattern.Value, value.Pattern.ByteCount, null)", span="157-157"];
m6_81 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="WriteString((string)value.Options.Value, value.Options.ByteCount, null)", span="158-158"];
m6_83 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", span="43-43"];
m6_119 [cluster="System.Text.Encoding.GetMaxByteCount(int)", file="JsonTextWriterTest.cs", label="Entry System.Text.Encoding.GetMaxByteCount(int)", span="0-0"];
m6_120 [cluster="System.Text.Encoding.GetBytes(string, int, int, byte[], int)", file="JsonTextWriterTest.cs", label="Entry System.Text.Encoding.GetBytes(string, int, int, byte[], int)", span="0-0"];
m6_92 [cluster="System.IO.BinaryWriter.Write(long)", file="JsonTextWriterTest.cs", label="Entry System.IO.BinaryWriter.Write(long)", span="0-0"];
m6_100 [cluster="System.IO.BinaryWriter.Write(byte[])", file="JsonTextWriterTest.cs", label="Entry System.IO.BinaryWriter.Write(byte[])", span="0-0"];
m6_4 [cluster="System.IO.BinaryWriter.BinaryWriter(System.IO.Stream)", file="JsonTextWriterTest.cs", label="Entry System.IO.BinaryWriter.BinaryWriter(System.IO.Stream)", span="0-0"];
m6_189 [cluster="System.Text.Encoding.GetByteCount(string)", file="JsonTextWriterTest.cs", label="Entry System.Text.Encoding.GetByteCount(string)", span="0-0"];
m6_108 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteUtf8Bytes(string, int)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Bson.BsonBinaryWriter.WriteUtf8Bytes(string, int)", span="176-176"];
m6_109 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteUtf8Bytes(string, int)", file="JsonTextWriterTest.cs", label="s != null", span="178-178"];
m6_113 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteUtf8Bytes(string, int)", file="JsonTextWriterTest.cs", label="byteCount <= 256", span="185-185"];
m6_114 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteUtf8Bytes(string, int)", file="JsonTextWriterTest.cs", label="Encoding.GetBytes(s, 0, s.Length, _largeByteBuffer, 0)", span="187-187"];
m6_115 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteUtf8Bytes(string, int)", file="JsonTextWriterTest.cs", label="_writer.Write(_largeByteBuffer, 0, byteCount)", span="188-188"];
m6_116 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteUtf8Bytes(string, int)", file="JsonTextWriterTest.cs", label="byte[] bytes = Encoding.GetBytes(s)", span="192-192"];
m6_110 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteUtf8Bytes(string, int)", file="JsonTextWriterTest.cs", label="_largeByteBuffer == null", span="180-180"];
m6_111 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteUtf8Bytes(string, int)", file="JsonTextWriterTest.cs", label="_largeByteBuffer = new byte[256]", span="182-182"];
m6_112 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteUtf8Bytes(string, int)", file="JsonTextWriterTest.cs", label="_maxChars = 256 / Encoding.GetMaxByteCount(1)", span="183-183"];
m6_117 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteUtf8Bytes(string, int)", file="JsonTextWriterTest.cs", label="_writer.Write(bytes)", span="193-193"];
m6_118 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteUtf8Bytes(string, int)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Bson.BsonBinaryWriter.WriteUtf8Bytes(string, int)", span="176-176"];
m6_9 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.Close()", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Bson.BsonBinaryWriter.Close()", span="32-32"];
m6_10 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.Close()", file="JsonTextWriterTest.cs", label="_writer.Close()", span="34-34"];
m6_11 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.Close()", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Bson.BsonBinaryWriter.Close()", span="32-32"];
m6_85 [cluster="System.IO.BinaryWriter.Write(sbyte)", file="JsonTextWriterTest.cs", label="Entry System.IO.BinaryWriter.Write(sbyte)", span="0-0"];
m6_90 [cluster="System.Convert.ToInt32(object, System.IFormatProvider)", file="JsonTextWriterTest.cs", label="Entry System.Convert.ToInt32(object, System.IFormatProvider)", span="0-0"];
m6_12 [cluster="System.IO.BinaryWriter.Close()", file="JsonTextWriterTest.cs", label="Entry System.IO.BinaryWriter.Close()", span="0-0"];
m6_0 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.BsonBinaryWriter(System.IO.Stream)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Bson.BsonBinaryWriter.BsonBinaryWriter(System.IO.Stream)", span="21-21"];
m6_1 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.BsonBinaryWriter(System.IO.Stream)", file="JsonTextWriterTest.cs", label="DateTimeKindHandling = DateTimeKind.Utc", span="23-23"];
m6_2 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.BsonBinaryWriter(System.IO.Stream)", file="JsonTextWriterTest.cs", label="_writer = new BinaryWriter(stream)", span="24-24"];
m6_3 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.BsonBinaryWriter(System.IO.Stream)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Bson.BsonBinaryWriter.BsonBinaryWriter(System.IO.Stream)", span="21-21"];
m6_13 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteToken(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Bson.BsonBinaryWriter.WriteToken(Newtonsoft.Json.Bson.BsonToken)", span="37-37"];
m6_14 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteToken(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="CalculateSize(t)", span="39-39"];
m6_15 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteToken(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="WriteTokenInternal(t)", span="40-40"];
m6_16 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteToken(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Bson.BsonBinaryWriter.WriteToken(Newtonsoft.Json.Bson.BsonToken)", span="37-37"];
m6_126 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSizeWithLength(int, bool)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSizeWithLength(int, bool)", span="203-203"];
m6_127 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSizeWithLength(int, bool)", file="JsonTextWriterTest.cs", label="int baseSize = (includeSize)\r\n        ? 5 // size bytes + terminator\r\n        : 1", span="205-207"];
m6_128 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSizeWithLength(int, bool)", file="JsonTextWriterTest.cs", label="return baseSize + stringByteCount;", span="209-209"];
m6_129 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSizeWithLength(int, bool)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSizeWithLength(int, bool)", span="203-203"];
m6_17 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", span="212-212"];
m6_130 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="t.Type", span="214-214"];
m6_132 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="BsonObject value = (BsonObject) t", span="218-218"];
m6_143 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="BsonArray value = (BsonArray)t", span="235-235"];
m6_161 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="BsonString value = (BsonString)t", span="259-259"];
m6_174 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="BsonValue value = (BsonValue) t", span="275-275"];
m6_181 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="BsonRegex value = (BsonRegex) t", span="286-286"];
m6_187 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="throw new ArgumentOutOfRangeException(''t'', ''Unexpected token when writing BSON: {0}''.FormatWith(CultureInfo.InvariantCulture, t.Type));", span="295-295"];
m6_131 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="BsonType.Object", span="216-216"];
m6_142 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="BsonType.Array", span="233-233"];
m6_154 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="BsonType.Integer", span="251-251"];
m6_156 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="BsonType.Long", span="253-253"];
m6_158 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="BsonType.Number", span="255-255"];
m6_160 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="BsonType.String", span="257-257"];
m6_166 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="BsonType.Boolean", span="266-266"];
m6_168 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="BsonType.Null", span="268-268"];
m6_171 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="BsonType.Date", span="271-271"];
m6_173 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="BsonType.Binary", span="273-273"];
m6_178 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="BsonType.Oid", span="282-282"];
m6_180 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="BsonType.Regex", span="284-284"];
m6_133 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="int bases = 4", span="220-220"];
m6_134 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label=value, span="221-221"];
m6_140 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="value.CalculatedSize = bases", span="230-230"];
m6_138 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="bases += size", span="227-227"];
m6_139 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="bases += 1", span="229-229"];
m6_135 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="int size = 1", span="223-223"];
m6_136 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="size += CalculateSize(p.Name)", span="224-224"];
m6_137 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="size += CalculateSize(p.Value)", span="225-225"];
m6_141 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="return bases;", span="231-231"];
m6_144 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="int size = 4", span="237-237"];
m6_146 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label=value, span="239-239"];
m6_152 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="value.CalculatedSize = size", span="247-247"];
m6_153 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="return value.CalculatedSize;", span="249-249"];
m6_145 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="int index = 0", span="238-238"];
m6_147 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="size += 1", span="241-241"];
m6_151 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="size += 1", span="246-246"];
m6_148 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="size += CalculateSize(MathUtils.IntLength(index))", span="242-242"];
m6_150 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="index++", span="244-244"];
m6_149 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="size += CalculateSize(c)", span="243-243"];
m6_155 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="return 4;", span="252-252"];
m6_157 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="return 8;", span="254-254"];
m6_159 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="return 8;", span="256-256"];
m6_162 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="string s = (string) value.Value", span="260-260"];
m6_163 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="value.ByteCount = (s != null) ? Encoding.GetByteCount(s) : 0", span="261-261"];
m6_164 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="value.CalculatedSize = CalculateSizeWithLength(value.ByteCount, value.IncludeLength)", span="262-262"];
m6_165 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="return value.CalculatedSize;", span="264-264"];
m6_167 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="return 1;", span="267-267"];
m6_169 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="BsonType.Undefined", span="269-269"];
m6_170 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="return 0;", span="270-270"];
m6_172 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="return 8;", span="272-272"];
m6_175 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="byte[] data = (byte[])value.Value", span="277-277"];
m6_176 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="value.CalculatedSize = 4 + 1 + data.Length", span="278-278"];
m6_177 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="return value.CalculatedSize;", span="280-280"];
m6_179 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="return 12;", span="283-283"];
m6_182 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="int size = 0", span="287-287"];
m6_183 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="size += CalculateSize(value.Pattern)", span="288-288"];
m6_184 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="size += CalculateSize(value.Options)", span="289-289"];
m6_185 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="value.CalculatedSize = size", span="290-290"];
m6_186 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="return value.CalculatedSize;", span="292-292"];
m6_188 [cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", span="212-212"];
m6_84 [cluster="System.IO.BinaryWriter.Write(int)", file="JsonTextWriterTest.cs", label="Entry System.IO.BinaryWriter.Write(int)", span="0-0"];
m6_99 [cluster="Newtonsoft.Json.JsonConvert.ConvertDateTimeToJavaScriptTicks(System.DateTime, System.TimeSpan)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonConvert.ConvertDateTimeToJavaScriptTicks(System.DateTime, System.TimeSpan)", span="165-165"];
m6_89 [cluster="Newtonsoft.Json.Utilities.MathUtils.IntLength(int)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Utilities.MathUtils.IntLength(int)", span="33-33"];
m6_95 [cluster="System.IO.BinaryWriter.Write(bool)", file="JsonTextWriterTest.cs", label="Entry System.IO.BinaryWriter.Write(bool)", span="0-0"];
m6_122 [cluster="System.Text.Encoding.GetBytes(string)", file="JsonTextWriterTest.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m6_94 [cluster="System.IO.BinaryWriter.Write(double)", file="JsonTextWriterTest.cs", label="Entry System.IO.BinaryWriter.Write(double)", span="0-0"];
m6_98 [cluster="Newtonsoft.Json.JsonConvert.ConvertDateTimeToJavaScriptTicks(System.DateTime, bool)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonConvert.ConvertDateTimeToJavaScriptTicks(System.DateTime, bool)", span="177-177"];
m6_91 [cluster="System.Convert.ToInt64(object, System.IFormatProvider)", file="JsonTextWriterTest.cs", label="Entry System.Convert.ToInt64(object, System.IFormatProvider)", span="0-0"];
m6_190 [file="JsonTextWriterTest.cs", label="Newtonsoft.Json.Bson.BsonBinaryWriter", span=""];
m7_293 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator byte?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.explicit operator byte?(Newtonsoft.Json.Linq.JToken)", span="830-830"];
m7_294 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator byte?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="value == null", span="832-832"];
m7_296 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator byte?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="JValue v = EnsureValue(value)", span="835-835"];
m7_298 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator byte?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="throw new ArgumentException(''Can not convert {0} to Byte.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="837-837"];
m7_295 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator byte?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return null;", span="833-833"];
m7_297 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator byte?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v == null || !ValidateToken(v, NumberTypes, true)", span="836-836"];
m7_299 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator byte?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v.Value is BigInteger", span="840-840"];
m7_300 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator byte?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return (byte?)(BigInteger)v.Value;", span="841-841"];
m7_301 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator byte?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return (v.Value != null) ? (byte?)Convert.ToByte(v.Value, CultureInfo.InvariantCulture) : null;", span="844-844"];
m7_302 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator byte?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.explicit operator byte?(Newtonsoft.Json.Linq.JToken)", span="830-830"];
m7_98 [cluster="Newtonsoft.Json.Linq.JToken.GetType(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.GetType(Newtonsoft.Json.Linq.JToken)", span="432-432"];
m7_99 [cluster="Newtonsoft.Json.Linq.JToken.GetType(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="ValidationUtils.ArgumentNotNull(token, ''token'')", span="434-434"];
m7_100 [cluster="Newtonsoft.Json.Linq.JToken.GetType(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="token is JProperty", span="436-436"];
m7_101 [cluster="Newtonsoft.Json.Linq.JToken.GetType(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="token = ((JProperty)token).Value", span="437-437"];
m7_102 [cluster="Newtonsoft.Json.Linq.JToken.GetType(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return token.Type.ToString();", span="439-439"];
m7_103 [cluster="Newtonsoft.Json.Linq.JToken.GetType(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.GetType(Newtonsoft.Json.Linq.JToken)", span="432-432"];
m7_187 [cluster="System.Convert.ToDecimal(object, System.IFormatProvider)", file="JToken.cs", label="Entry System.Convert.ToDecimal(object, System.IFormatProvider)", span="0-0"];
m7_781 [cluster="Newtonsoft.Json.Linq.JToken.SetLineInfo(Newtonsoft.Json.IJsonLineInfo)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.SetLineInfo(Newtonsoft.Json.IJsonLineInfo)", span="1880-1880"];
m7_782 [cluster="Newtonsoft.Json.Linq.JToken.SetLineInfo(Newtonsoft.Json.IJsonLineInfo)", file="JToken.cs", label="lineInfo == null || !lineInfo.HasLineInfo()", span="1882-1882"];
m7_784 [cluster="Newtonsoft.Json.Linq.JToken.SetLineInfo(Newtonsoft.Json.IJsonLineInfo)", file="JToken.cs", label="SetLineInfo(lineInfo.LineNumber, lineInfo.LinePosition)", span="1885-1885"];
m7_783 [cluster="Newtonsoft.Json.Linq.JToken.SetLineInfo(Newtonsoft.Json.IJsonLineInfo)", file="JToken.cs", label="return;", span="1883-1883"];
m7_785 [cluster="Newtonsoft.Json.Linq.JToken.SetLineInfo(Newtonsoft.Json.IJsonLineInfo)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.SetLineInfo(Newtonsoft.Json.IJsonLineInfo)", span="1880-1880"];
m7_263 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator int?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.explicit operator int?(Newtonsoft.Json.Linq.JToken)", span="763-763"];
m7_264 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator int?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="value == null", span="765-765"];
m7_266 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator int?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="JValue v = EnsureValue(value)", span="768-768"];
m7_268 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator int?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="throw new ArgumentException(''Can not convert {0} to Int32.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="770-770"];
m7_265 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator int?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return null;", span="766-766"];
m7_267 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator int?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v == null || !ValidateToken(v, NumberTypes, true)", span="769-769"];
m7_269 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator int?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v.Value is BigInteger", span="773-773"];
m7_270 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator int?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return (int?)(BigInteger)v.Value;", span="774-774"];
m7_271 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator int?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return (v.Value != null) ? (int?)Convert.ToInt32(v.Value, CultureInfo.InvariantCulture) : null;", span="777-777"];
m7_272 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator int?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.explicit operator int?(Newtonsoft.Json.Linq.JToken)", span="763-763"];
m7_245 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator byte(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.explicit operator byte(Newtonsoft.Json.Linq.JToken)", span="724-724"];
m7_246 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator byte(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="JValue v = EnsureValue(value)", span="726-726"];
m7_248 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator byte(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="throw new ArgumentException(''Can not convert {0} to Byte.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="728-728"];
m7_247 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator byte(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v == null || !ValidateToken(v, NumberTypes, false)", span="727-727"];
m7_249 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator byte(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v.Value is BigInteger", span="731-731"];
m7_250 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator byte(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return (byte)(BigInteger)v.Value;", span="732-732"];
m7_251 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator byte(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return Convert.ToByte(v.Value, CultureInfo.InvariantCulture);", span="735-735"];
m7_252 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator byte(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.explicit operator byte(Newtonsoft.Json.Linq.JToken)", span="724-724"];
m7_89 [cluster="Newtonsoft.Json.Linq.JToken.EnsureValue(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.EnsureValue(Newtonsoft.Json.Linq.JToken)", span="419-419"];
m7_90 [cluster="Newtonsoft.Json.Linq.JToken.EnsureValue(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="value == null", span="421-421"];
m7_92 [cluster="Newtonsoft.Json.Linq.JToken.EnsureValue(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="value is JProperty", span="424-424"];
m7_93 [cluster="Newtonsoft.Json.Linq.JToken.EnsureValue(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="value = ((JProperty)value).Value", span="425-425"];
m7_94 [cluster="Newtonsoft.Json.Linq.JToken.EnsureValue(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="JValue v = value as JValue", span="427-427"];
m7_91 [cluster="Newtonsoft.Json.Linq.JToken.EnsureValue(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="throw new ArgumentNullException(''value'');", span="422-422"];
m7_95 [cluster="Newtonsoft.Json.Linq.JToken.EnsureValue(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return v;", span="429-429"];
m7_96 [cluster="Newtonsoft.Json.Linq.JToken.EnsureValue(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.EnsureValue(Newtonsoft.Json.Linq.JToken)", span="419-419"];
m7_446 [cluster="System.Guid.Guid(string)", file="JToken.cs", label="Entry System.Guid.Guid(string)", span="0-0"];
m7_778 [cluster="Newtonsoft.Json.Linq.JToken.Load(Newtonsoft.Json.JsonReader)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.Load(Newtonsoft.Json.JsonReader)", span="1875-1875"];
m7_779 [cluster="Newtonsoft.Json.Linq.JToken.Load(Newtonsoft.Json.JsonReader)", file="JToken.cs", label="return ReadFrom(reader);", span="1877-1877"];
m7_780 [cluster="Newtonsoft.Json.Linq.JToken.Load(Newtonsoft.Json.JsonReader)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.Load(Newtonsoft.Json.JsonReader)", span="1875-1875"];
m7_787 [cluster="Newtonsoft.Json.Linq.JToken.SetLineInfo(int, int)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.SetLineInfo(int, int)", span="1888-1888"];
m7_788 [cluster="Newtonsoft.Json.Linq.JToken.SetLineInfo(int, int)", file="JToken.cs", label="_lineNumber = lineNumber", span="1890-1890"];
m7_789 [cluster="Newtonsoft.Json.Linq.JToken.SetLineInfo(int, int)", file="JToken.cs", label="_linePosition = linePosition", span="1891-1891"];
m7_790 [cluster="Newtonsoft.Json.Linq.JToken.SetLineInfo(int, int)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.SetLineInfo(int, int)", span="1888-1888"];
m7_572 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(uint?)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(uint?)", span="1484-1484"];
m7_573 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(uint?)", file="JToken.cs", label="return new JValue(value);", span="1486-1486"];
m7_574 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(uint?)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(uint?)", span="1484-1484"];
m7_600 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.Uri)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.Uri)", span="1567-1567"];
m7_601 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.Uri)", file="JToken.cs", label="return new JValue(value);", span="1569-1569"];
m7_602 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.Uri)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.Uri)", span="1567-1567"];
m7_2 [cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="128-128"];
m7_3 [cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="128-128"];
m7_227 [cluster="System.Convert.ToInt16(object, System.IFormatProvider)", file="JToken.cs", label="Entry System.Convert.ToInt16(object, System.IFormatProvider)", span="0-0"];
m7_402 [cluster="System.Convert.ToBase64String(byte[])", file="JToken.cs", label="Entry System.Convert.ToBase64String(byte[])", span="0-0"];
m7_618 [cluster="Newtonsoft.Json.Linq.JToken.System.Collections.IEnumerable.GetEnumerator()", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.System.Collections.IEnumerable.GetEnumerator()", span="1613-1613"];
m7_619 [cluster="Newtonsoft.Json.Linq.JToken.System.Collections.IEnumerable.GetEnumerator()", file="JToken.cs", label="return ((IEnumerable<JToken>)this).GetEnumerator();", span="1615-1615"];
m7_620 [cluster="Newtonsoft.Json.Linq.JToken.System.Collections.IEnumerable.GetEnumerator()", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.System.Collections.IEnumerable.GetEnumerator()", span="1613-1613"];
m7_737 [cluster="Newtonsoft.Json.Linq.JToken.ToObject<T>(Newtonsoft.Json.JsonSerializer)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToObject<T>(Newtonsoft.Json.JsonSerializer)", span="1790-1790"];
m7_738 [cluster="Newtonsoft.Json.Linq.JToken.ToObject<T>(Newtonsoft.Json.JsonSerializer)", file="JToken.cs", label="return (T)ToObject(typeof(T), jsonSerializer);", span="1792-1792"];
m7_739 [cluster="Newtonsoft.Json.Linq.JToken.ToObject<T>(Newtonsoft.Json.JsonSerializer)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.ToObject<T>(Newtonsoft.Json.JsonSerializer)", span="1790-1790"];
m7_809 [cluster="Newtonsoft.Json.Linq.JToken.SelectTokens(string)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.SelectTokens(string)", span="1952-1952"];
m7_810 [cluster="Newtonsoft.Json.Linq.JToken.SelectTokens(string)", file="JToken.cs", label="return SelectTokens(path, false);", span="1954-1954"];
m7_811 [cluster="Newtonsoft.Json.Linq.JToken.SelectTokens(string)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.SelectTokens(string)", span="1952-1952"];
m7_547 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(int)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(int)", span="1401-1401"];
m7_548 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(int)", file="JToken.cs", label="return new JValue(value);", span="1403-1403"];
m7_549 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(int)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(int)", span="1401-1401"];
m7_767 [cluster="Newtonsoft.Json.Linq.JConstructor.Load(Newtonsoft.Json.JsonReader)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JConstructor.Load(Newtonsoft.Json.JsonReader)", span="181-181"];
m7_303 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator sbyte?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.explicit operator sbyte?(Newtonsoft.Json.Linq.JToken)", span="853-853"];
m7_304 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator sbyte?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="value == null", span="855-855"];
m7_306 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator sbyte?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="JValue v = EnsureValue(value)", span="858-858"];
m7_308 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator sbyte?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="throw new ArgumentException(''Can not convert {0} to SByte.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="860-860"];
m7_305 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator sbyte?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return null;", span="856-856"];
m7_307 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator sbyte?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v == null || !ValidateToken(v, NumberTypes, true)", span="859-859"];
m7_309 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator sbyte?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v.Value is BigInteger", span="863-863"];
m7_310 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator sbyte?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return (sbyte?)(BigInteger)v.Value;", span="864-864"];
m7_311 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator sbyte?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return (v.Value != null) ? (sbyte?)Convert.ToByte(v.Value, CultureInfo.InvariantCulture) : null;", span="867-867"];
m7_312 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator sbyte?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.explicit operator sbyte?(Newtonsoft.Json.Linq.JToken)", span="853-853"];
m7_44 [cluster="Newtonsoft.Json.Linq.JToken.Value<T>(object)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.Value<T>(object)", span="305-305"];
m7_45 [cluster="Newtonsoft.Json.Linq.JToken.Value<T>(object)", file="JToken.cs", label="JToken token = this[key]", span="307-307"];
m7_46 [cluster="Newtonsoft.Json.Linq.JToken.Value<T>(object)", file="JToken.cs", label="return Extensions.Convert<JToken, T>(token);", span="309-309"];
m7_47 [cluster="Newtonsoft.Json.Linq.JToken.Value<T>(object)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.Value<T>(object)", span="305-305"];
m7_62 [cluster="Newtonsoft.Json.Linq.JToken.Remove()", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.Remove()", span="362-362"];
m7_63 [cluster="Newtonsoft.Json.Linq.JToken.Remove()", file="JToken.cs", label="_parent == null", span="364-364"];
m7_64 [cluster="Newtonsoft.Json.Linq.JToken.Remove()", file="JToken.cs", label="throw new InvalidOperationException(''The parent is missing.'');", span="365-365"];
m7_65 [cluster="Newtonsoft.Json.Linq.JToken.Remove()", file="JToken.cs", label="_parent.RemoveItem(this)", span="367-367"];
m7_66 [cluster="Newtonsoft.Json.Linq.JToken.Remove()", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.Remove()", span="362-362"];
m7_73 [cluster="Newtonsoft.Json.Linq.JContainer.ReplaceItem(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JContainer.ReplaceItem(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="490-490"];
m7_523 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(bool?)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(bool?)", span="1317-1317"];
m7_524 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(bool?)", file="JToken.cs", label="return new JValue(value);", span="1319-1319"];
m7_525 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(bool?)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(bool?)", span="1317-1317"];
m7_526 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(long)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(long)", span="1327-1327"];
m7_527 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(long)", file="JToken.cs", label="return new JValue(value);", span="1329-1329"];
m7_528 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(long)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(long)", span="1327-1327"];
m7_321 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator long?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.explicit operator long?(Newtonsoft.Json.Linq.JToken)", span="894-894"];
m7_322 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator long?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="value == null", span="896-896"];
m7_324 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator long?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="JValue v = EnsureValue(value)", span="899-899"];
m7_326 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator long?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="throw new ArgumentException(''Can not convert {0} to Int64.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="901-901"];
m7_323 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator long?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return null;", span="897-897"];
m7_325 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator long?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v == null || !ValidateToken(v, NumberTypes, true)", span="900-900"];
m7_327 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator long?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v.Value is BigInteger", span="904-904"];
m7_328 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator long?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return (long?)(BigInteger)v.Value;", span="905-905"];
m7_329 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator long?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return (v.Value != null) ? (long?)Convert.ToInt64(v.Value, CultureInfo.InvariantCulture) : null;", span="908-908"];
m7_330 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator long?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.explicit operator long?(Newtonsoft.Json.Linq.JToken)", span="894-894"];
m7_119 [cluster="System.Convert.ToBoolean(int)", file="JToken.cs", label="Entry System.Convert.ToBoolean(int)", span="0-0"];
m7_569 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(ushort?)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(ushort?)", span="1473-1473"];
m7_570 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(ushort?)", file="JToken.cs", label="return new JValue(value);", span="1475-1475"];
m7_571 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(ushort?)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(ushort?)", span="1473-1473"];
m7_812 [cluster="Newtonsoft.Json.Linq.JToken.SelectTokens(string, bool)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.SelectTokens(string, bool)", span="1965-1965"];
m7_813 [cluster="Newtonsoft.Json.Linq.JToken.SelectTokens(string, bool)", file="JToken.cs", label="JPath p = new JPath(path)", span="1967-1967"];
m7_814 [cluster="Newtonsoft.Json.Linq.JToken.SelectTokens(string, bool)", file="JToken.cs", label="return p.Evaluate(this, errorWhenNoMatch);", span="1968-1968"];
m7_815 [cluster="Newtonsoft.Json.Linq.JToken.SelectTokens(string, bool)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.SelectTokens(string, bool)", span="1965-1965"];
m7_121 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTimeOffset(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.explicit operator System.DateTimeOffset(Newtonsoft.Json.Linq.JToken)", span="473-473"];
m7_122 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTimeOffset(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="JValue v = EnsureValue(value)", span="475-475"];
m7_124 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTimeOffset(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="throw new ArgumentException(''Can not convert {0} to DateTimeOffset.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="477-477"];
m7_123 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTimeOffset(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v == null || !ValidateToken(v, DateTimeTypes, false)", span="476-476"];
m7_125 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTimeOffset(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v.Value is DateTimeOffset", span="479-479"];
m7_126 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTimeOffset(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return (DateTimeOffset)v.Value;", span="480-480"];
m7_127 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTimeOffset(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v.Value is string", span="481-481"];
m7_128 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTimeOffset(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return DateTimeOffset.Parse((string)v.Value, CultureInfo.InvariantCulture);", span="482-482"];
m7_129 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTimeOffset(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return new DateTimeOffset(Convert.ToDateTime(v.Value, CultureInfo.InvariantCulture));", span="483-483"];
m7_130 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTimeOffset(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.explicit operator System.DateTimeOffset(Newtonsoft.Json.Linq.JToken)", span="473-473"];
m7_735 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type)", file="JToken.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type)", span="185-185"];
m7_556 [cluster="Newtonsoft.Json.Linq.JValue.JValue(System.DateTime)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.DateTime)", span="116-116"];
m7_88 [cluster="System.IO.StringWriter.ToString()", file="JToken.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m7_614 [cluster="Newtonsoft.Json.Linq.JValue.JValue(System.Guid)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.Guid)", span="143-143"];
m7_607 [cluster="Newtonsoft.Json.Linq.JValue.JValue(System.TimeSpan)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.TimeSpan)", span="161-161"];
m7_371 [cluster="System.Convert.ToUInt64(object, System.IFormatProvider)", file="JToken.cs", label="Entry System.Convert.ToUInt64(object, System.IFormatProvider)", span="0-0"];
m7_413 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator ulong(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.explicit operator ulong(Newtonsoft.Json.Linq.JToken)", span="1088-1088"];
m7_414 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator ulong(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="JValue v = EnsureValue(value)", span="1090-1090"];
m7_416 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator ulong(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="throw new ArgumentException(''Can not convert {0} to UInt64.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="1092-1092"];
m7_415 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator ulong(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v == null || !ValidateToken(v, NumberTypes, false)", span="1091-1091"];
m7_417 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator ulong(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v.Value is BigInteger", span="1095-1095"];
m7_418 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator ulong(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return (ulong)(BigInteger)v.Value;", span="1096-1096"];
m7_419 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator ulong(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return Convert.ToUInt64(v.Value, CultureInfo.InvariantCulture);", span="1099-1099"];
m7_420 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator ulong(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.explicit operator ulong(Newtonsoft.Json.Linq.JToken)", span="1088-1088"];
m7_104 [cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="JToken.cs", label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="52-52"];
m7_582 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(float)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(float)", span="1515-1515"];
m7_583 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(float)", file="JToken.cs", label="return new JValue(value);", span="1517-1517"];
m7_584 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(float)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(float)", span="1515-1515"];
m7_622 [cluster="Newtonsoft.Json.Linq.JToken.System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.GetEnumerator()", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.GetEnumerator()", span="1618-1618"];
m7_623 [cluster="Newtonsoft.Json.Linq.JToken.System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.GetEnumerator()", file="JToken.cs", label="return Children().GetEnumerator();", span="1620-1620"];
m7_624 [cluster="Newtonsoft.Json.Linq.JToken.System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.GetEnumerator()", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.GetEnumerator()", span="1618-1618"];
m7_486 [cluster="System.Uri.Uri(string)", file="JToken.cs", label="Entry System.Uri.Uri(string)", span="0-0"];
m7_768 [cluster="Newtonsoft.Json.JsonReader.IsStartToken(Newtonsoft.Json.JsonToken)", file="JToken.cs", label="Entry Newtonsoft.Json.JsonReader.IsStartToken(Newtonsoft.Json.JsonToken)", span="923-923"];
m7_49 [cluster="Newtonsoft.Json.Linq.JToken.Children()", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.Children()", span="334-334"];
m7_50 [cluster="Newtonsoft.Json.Linq.JToken.Children()", file="JToken.cs", label="return JEnumerable<JToken>.Empty;", span="336-336"];
m7_51 [cluster="Newtonsoft.Json.Linq.JToken.Children()", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.Children()", span="334-334"];
m7_133 [cluster="System.Convert.ToDateTime(object, System.IFormatProvider)", file="JToken.cs", label="Entry System.Convert.ToDateTime(object, System.IFormatProvider)", span="0-0"];
m7_0 [cluster="Newtonsoft.Json.Linq.JToken.CloneToken()", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.CloneToken()", span="127-127"];
m7_1 [cluster="Newtonsoft.Json.Linq.JToken.CloneToken()", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.CloneToken()", span="127-127"];
m7_744 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="JToken.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", span="650-650"];
m7_380 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator float(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.explicit operator float(Newtonsoft.Json.Linq.JToken)", span="1022-1022"];
m7_381 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator float(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="JValue v = EnsureValue(value)", span="1024-1024"];
m7_383 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator float(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="throw new ArgumentException(''Can not convert {0} to Single.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="1026-1026"];
m7_382 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator float(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v == null || !ValidateToken(v, NumberTypes, false)", span="1025-1025"];
m7_384 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator float(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v.Value is BigInteger", span="1029-1029"];
m7_385 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator float(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return (float)(BigInteger)v.Value;", span="1030-1030"];
m7_386 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator float(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return Convert.ToSingle(v.Value, CultureInfo.InvariantCulture);", span="1033-1033"];
m7_387 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator float(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.explicit operator float(Newtonsoft.Json.Linq.JToken)", span="1022-1022"];
m7_109 [cluster="System.Array.IndexOf<T>(T[], T)", file="JToken.cs", label="Entry System.Array.IndexOf<T>(T[], T)", span="0-0"];
m7_273 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator short?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.explicit operator short?(Newtonsoft.Json.Linq.JToken)", span="785-785"];
m7_274 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator short?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="value == null", span="787-787"];
m7_276 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator short?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="JValue v = EnsureValue(value)", span="790-790"];
m7_278 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator short?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="throw new ArgumentException(''Can not convert {0} to Int16.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="792-792"];
m7_275 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator short?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return null;", span="788-788"];
m7_277 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator short?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v == null || !ValidateToken(v, NumberTypes, true)", span="791-791"];
m7_279 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator short?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v.Value is BigInteger", span="795-795"];
m7_280 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator short?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return (short?)(BigInteger)v.Value;", span="796-796"];
m7_281 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator short?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return (v.Value != null) ? (short?)Convert.ToInt16(v.Value, CultureInfo.InvariantCulture) : null;", span="799-799"];
m7_282 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator short?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.explicit operator short?(Newtonsoft.Json.Linq.JToken)", span="785-785"];
m7_24 [cluster="Newtonsoft.Json.Linq.JToken.Ancestors()", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.Ancestors()", span="254-254"];
m7_25 [cluster="Newtonsoft.Json.Linq.JToken.Ancestors()", file="JToken.cs", label="JToken parent = Parent", span="256-256"];
m7_27 [cluster="Newtonsoft.Json.Linq.JToken.Ancestors()", file="JToken.cs", label="yield return parent;", span="258-258"];
m7_26 [cluster="Newtonsoft.Json.Linq.JToken.Ancestors()", file="JToken.cs", label="parent != null", span="256-256"];
m7_28 [cluster="Newtonsoft.Json.Linq.JToken.Ancestors()", file="JToken.cs", label="parent = parent.Parent", span="256-256"];
m7_29 [cluster="Newtonsoft.Json.Linq.JToken.Ancestors()", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.Ancestors()", span="254-254"];
m7_538 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(double?)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(double?)", span="1369-1369"];
m7_539 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(double?)", file="JToken.cs", label="return new JValue(value);", span="1371-1371"];
m7_540 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(double?)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(double?)", span="1369-1369"];
m7_445 [cluster="System.Guid.Guid(byte[])", file="JToken.cs", label="Entry System.Guid.Guid(byte[])", span="0-0"];
m7_152 [cluster="System.Convert.ToInt64(object, System.IFormatProvider)", file="JToken.cs", label="Entry System.Convert.ToInt64(object, System.IFormatProvider)", span="0-0"];
m7_510 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(byte)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(byte)", span="1275-1275"];
m7_511 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(byte)", file="JToken.cs", label="return new JValue(value);", span="1277-1277"];
m7_512 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(byte)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(byte)", span="1275-1275"];
m7_350 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator uint?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.explicit operator uint?(Newtonsoft.Json.Linq.JToken)", span="958-958"];
m7_351 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator uint?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="value == null", span="960-960"];
m7_353 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator uint?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="JValue v = EnsureValue(value)", span="963-963"];
m7_355 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator uint?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="throw new ArgumentException(''Can not convert {0} to UInt32.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="965-965"];
m7_352 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator uint?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return null;", span="961-961"];
m7_354 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator uint?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v == null || !ValidateToken(v, NumberTypes, true)", span="964-964"];
m7_356 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator uint?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v.Value is BigInteger", span="968-968"];
m7_357 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator uint?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return (uint?)(BigInteger)v.Value;", span="969-969"];
m7_358 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator uint?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return (v.Value != null) ? (uint?)Convert.ToUInt32(v.Value, CultureInfo.InvariantCulture) : null;", span="972-972"];
m7_359 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator uint?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.explicit operator uint?(Newtonsoft.Json.Linq.JToken)", span="958-958"];
m7_593 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(ulong)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(ulong)", span="1547-1547"];
m7_594 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(ulong)", file="JToken.cs", label="return new JValue(value);", span="1549-1549"];
m7_595 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(ulong)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(ulong)", span="1547-1547"];
m7_237 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator char(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.explicit operator char(Newtonsoft.Json.Linq.JToken)", span="705-705"];
m7_238 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator char(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="JValue v = EnsureValue(value)", span="707-707"];
m7_240 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator char(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="throw new ArgumentException(''Can not convert {0} to Char.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="709-709"];
m7_239 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator char(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v == null || !ValidateToken(v, CharTypes, false)", span="708-708"];
m7_241 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator char(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v.Value is BigInteger", span="712-712"];
m7_242 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator char(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return (char)(BigInteger)v.Value;", span="713-713"];
m7_243 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator char(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return Convert.ToChar(v.Value, CultureInfo.InvariantCulture);", span="716-716"];
m7_244 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator char(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.explicit operator char(Newtonsoft.Json.Linq.JToken)", span="705-705"];
m7_764 [cluster="Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader)", span="290-290"];
m7_283 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator ushort?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.explicit operator ushort?(Newtonsoft.Json.Linq.JToken)", span="808-808"];
m7_284 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator ushort?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="value == null", span="810-810"];
m7_286 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator ushort?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="JValue v = EnsureValue(value)", span="813-813"];
m7_288 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator ushort?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="throw new ArgumentException(''Can not convert {0} to UInt16.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="815-815"];
m7_285 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator ushort?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return null;", span="811-811"];
m7_287 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator ushort?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v == null || !ValidateToken(v, NumberTypes, true)", span="814-814"];
m7_289 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator ushort?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v.Value is BigInteger", span="818-818"];
m7_290 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator ushort?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return (ushort?)(BigInteger)v.Value;", span="819-819"];
m7_291 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator ushort?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return (v.Value != null) ? (ushort?)Convert.ToUInt16(v.Value, CultureInfo.InvariantCulture) : null;", span="822-822"];
m7_292 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator ushort?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.explicit operator ushort?(Newtonsoft.Json.Linq.JToken)", span="808-808"];
m7_56 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="JToken.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m7_360 [cluster="System.Convert.ToUInt32(object, System.IFormatProvider)", file="JToken.cs", label="Entry System.Convert.ToUInt32(object, System.IFormatProvider)", span="0-0"];
m7_86 [cluster="System.IO.StringWriter.StringWriter(System.IFormatProvider)", file="JToken.cs", label="Entry System.IO.StringWriter.StringWriter(System.IFormatProvider)", span="0-0"];
m7_466 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.TimeSpan?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.explicit operator System.TimeSpan?(Newtonsoft.Json.Linq.JToken)", span="1188-1188"];
m7_467 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.TimeSpan?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="value == null", span="1190-1190"];
m7_469 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.TimeSpan?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="JValue v = EnsureValue(value)", span="1193-1193"];
m7_471 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.TimeSpan?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="throw new ArgumentException(''Can not convert {0} to TimeSpan.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="1195-1195"];
m7_468 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.TimeSpan?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return null;", span="1191-1191"];
m7_470 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.TimeSpan?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v == null || !ValidateToken(v, TimeSpanTypes, true)", span="1194-1194"];
m7_472 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.TimeSpan?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v.Value == null", span="1197-1197"];
m7_474 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.TimeSpan?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return (v.Value is TimeSpan) ? (TimeSpan)v.Value : ConvertUtils.ParseTimeSpan(Convert.ToString(v.Value, CultureInfo.InvariantCulture));", span="1200-1200"];
m7_473 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.TimeSpan?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return null;", span="1198-1198"];
m7_475 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.TimeSpan?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.explicit operator System.TimeSpan?(Newtonsoft.Json.Linq.JToken)", span="1188-1188"];
m7_219 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator short(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.explicit operator short(Newtonsoft.Json.Linq.JToken)", span="665-665"];
m7_220 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator short(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="JValue v = EnsureValue(value)", span="667-667"];
m7_222 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator short(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="throw new ArgumentException(''Can not convert {0} to Int16.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="669-669"];
m7_221 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator short(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v == null || !ValidateToken(v, NumberTypes, false)", span="668-668"];
m7_223 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator short(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v.Value is BigInteger", span="672-672"];
m7_224 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator short(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return (short)(BigInteger)v.Value;", span="673-673"];
m7_225 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator short(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return Convert.ToInt16(v.Value, CultureInfo.InvariantCulture);", span="676-676"];
m7_226 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator short(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.explicit operator short(Newtonsoft.Json.Linq.JToken)", span="665-665"];
m7_435 [cluster="System.Convert.FromBase64String(string)", file="JToken.cs", label="Entry System.Convert.FromBase64String(string)", span="0-0"];
m7_608 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.TimeSpan?)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.TimeSpan?)", span="1587-1587"];
m7_609 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.TimeSpan?)", file="JToken.cs", label="return new JValue(value);", span="1589-1589"];
m7_610 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.TimeSpan?)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.TimeSpan?)", span="1587-1587"];
m7_97 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JToken.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m7_188 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator double?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.explicit operator double?(Newtonsoft.Json.Linq.JToken)", span="602-602"];
m7_189 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator double?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="value == null", span="604-604"];
m7_191 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator double?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="JValue v = EnsureValue(value)", span="607-607"];
m7_193 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator double?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="throw new ArgumentException(''Can not convert {0} to Double.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="609-609"];
m7_190 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator double?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return null;", span="605-605"];
m7_192 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator double?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v == null || !ValidateToken(v, NumberTypes, true)", span="608-608"];
m7_194 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator double?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v.Value is BigInteger", span="612-612"];
m7_195 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator double?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return (double?)(BigInteger)v.Value;", span="613-613"];
m7_196 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator double?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return (v.Value != null) ? (double?)Convert.ToDouble(v.Value, CultureInfo.InvariantCulture) : null;", span="616-616"];
m7_197 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator double?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.explicit operator double?(Newtonsoft.Json.Linq.JToken)", span="602-602"];
m7_596 [cluster="Newtonsoft.Json.Linq.JValue.JValue(ulong)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(ulong)", span="89-89"];
m7_769 [cluster="Newtonsoft.Json.Linq.JToken.Parse(string)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.Parse(string)", span="1853-1853"];
m7_770 [cluster="Newtonsoft.Json.Linq.JToken.Parse(string)", file="JToken.cs", label="JsonReader reader = new JsonTextReader(new StringReader(json))", span="1855-1855"];
m7_771 [cluster="Newtonsoft.Json.Linq.JToken.Parse(string)", file="JToken.cs", label="JToken t = Load(reader)", span="1857-1857"];
m7_772 [cluster="Newtonsoft.Json.Linq.JToken.Parse(string)", file="JToken.cs", label="reader.Read() && reader.TokenType != JsonToken.Comment", span="1859-1859"];
m7_773 [cluster="Newtonsoft.Json.Linq.JToken.Parse(string)", file="JToken.cs", label="throw JsonReaderException.Create(reader, ''Additional text found in JSON string after parsing content.'');", span="1860-1860"];
m7_774 [cluster="Newtonsoft.Json.Linq.JToken.Parse(string)", file="JToken.cs", label="return t;", span="1862-1862"];
m7_775 [cluster="Newtonsoft.Json.Linq.JToken.Parse(string)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.Parse(string)", span="1853-1853"];
m7_132 [cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime)", file="JToken.cs", label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime)", span="0-0"];
m7_177 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator decimal?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.explicit operator decimal?(Newtonsoft.Json.Linq.JToken)", span="580-580"];
m7_178 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator decimal?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="value == null", span="582-582"];
m7_180 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator decimal?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="JValue v = EnsureValue(value)", span="585-585"];
m7_182 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator decimal?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="throw new ArgumentException(''Can not convert {0} to Decimal.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="587-587"];
m7_179 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator decimal?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return null;", span="583-583"];
m7_181 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator decimal?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v == null || !ValidateToken(v, NumberTypes, true)", span="586-586"];
m7_183 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator decimal?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v.Value is BigInteger", span="590-590"];
m7_184 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator decimal?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return (decimal?)(BigInteger)v.Value;", span="591-591"];
m7_185 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator decimal?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return (v.Value != null) ? (decimal?)Convert.ToDecimal(v.Value, CultureInfo.InvariantCulture) : null;", span="594-594"];
m7_186 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator decimal?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.explicit operator decimal?(Newtonsoft.Json.Linq.JToken)", span="580-580"];
m7_198 [cluster="System.Convert.ToDouble(object, System.IFormatProvider)", file="JToken.cs", label="Entry System.Convert.ToDouble(object, System.IFormatProvider)", span="0-0"];
m7_447 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.Guid?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.explicit operator System.Guid?(Newtonsoft.Json.Linq.JToken)", span="1151-1151"];
m7_448 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.Guid?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="value == null", span="1153-1153"];
m7_450 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.Guid?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="JValue v = EnsureValue(value)", span="1156-1156"];
m7_452 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.Guid?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="throw new ArgumentException(''Can not convert {0} to Guid.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="1158-1158"];
m7_449 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.Guid?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return null;", span="1154-1154"];
m7_451 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.Guid?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v == null || !ValidateToken(v, GuidTypes, true)", span="1157-1157"];
m7_453 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.Guid?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v.Value == null", span="1160-1160"];
m7_455 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.Guid?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v.Value is byte[]", span="1163-1163"];
m7_456 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.Guid?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return new Guid((byte[])v.Value);", span="1164-1164"];
m7_457 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.Guid?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return (v.Value is Guid) ? (Guid)v.Value : new Guid(Convert.ToString(v.Value, CultureInfo.InvariantCulture));", span="1166-1166"];
m7_454 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.Guid?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return null;", span="1161-1161"];
m7_458 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.Guid?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.explicit operator System.Guid?(Newtonsoft.Json.Linq.JToken)", span="1151-1151"];
m7_820 [cluster="Newtonsoft.Json.Utilities.DynamicProxy<T>.DynamicProxy()", file="JToken.cs", label="Entry Newtonsoft.Json.Utilities.DynamicProxy<T>.DynamicProxy()", span="35-35"];
m7_67 [cluster="Newtonsoft.Json.Linq.JContainer.RemoveItem(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JContainer.RemoveItem(Newtonsoft.Json.Linq.JToken)", span="403-403"];
m7_144 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator long(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.explicit operator long(Newtonsoft.Json.Linq.JToken)", span="514-514"];
m7_145 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator long(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="JValue v = EnsureValue(value)", span="516-516"];
m7_147 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator long(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="throw new ArgumentException(''Can not convert {0} to Int64.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="518-518"];
m7_146 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator long(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v == null || !ValidateToken(v, NumberTypes, false)", span="517-517"];
m7_148 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator long(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v.Value is BigInteger", span="521-521"];
m7_149 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator long(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return (long)(BigInteger)v.Value;", span="522-522"];
m7_150 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator long(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return Convert.ToInt64(v.Value, CultureInfo.InvariantCulture);", span="525-525"];
m7_151 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator long(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.explicit operator long(Newtonsoft.Json.Linq.JToken)", span="514-514"];
m7_544 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(ushort)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(ushort)", span="1391-1391"];
m7_545 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(ushort)", file="JToken.cs", label="return new JValue(value);", span="1393-1393"];
m7_546 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(ushort)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(ushort)", span="1391-1391"];
m7_611 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.Guid)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.Guid)", span="1597-1597"];
m7_612 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.Guid)", file="JToken.cs", label="return new JValue(value);", span="1599-1599"];
m7_613 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.Guid)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.Guid)", span="1597-1597"];
m7_436 [cluster="Unk.ToByteArray", file="JToken.cs", label="Entry Unk.ToByteArray", span=""];
m7_819 [cluster="Newtonsoft.Json.Utilities.DynamicProxyMetaObject<T>.DynamicProxyMetaObject(System.Linq.Expressions.Expression, T, Newtonsoft.Json.Utilities.DynamicProxy<T>, bool)", file="JToken.cs", label="Entry Newtonsoft.Json.Utilities.DynamicProxyMetaObject<T>.DynamicProxyMetaObject(System.Linq.Expressions.Expression, T, Newtonsoft.Json.Utilities.DynamicProxy<T>, bool)", span="40-40"];
m7_120 [cluster="System.Convert.ToBoolean(object, System.IFormatProvider)", file="JToken.cs", label="Entry System.Convert.ToBoolean(object, System.IFormatProvider)", span="0-0"];
m7_585 [cluster="Newtonsoft.Json.Linq.JValue.JValue(float)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(float)", span="107-107"];
m7_79 [cluster="Newtonsoft.Json.Linq.JToken.ToString(Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToString(Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", span="406-406"];
m7_80 [cluster="Newtonsoft.Json.Linq.JToken.ToString(Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", file="JToken.cs", label="StringWriter sw = new StringWriter(CultureInfo.InvariantCulture)", span="408-408"];
m7_82 [cluster="Newtonsoft.Json.Linq.JToken.ToString(Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", file="JToken.cs", label="jw.Formatting = formatting", span="411-411"];
m7_83 [cluster="Newtonsoft.Json.Linq.JToken.ToString(Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", file="JToken.cs", label="WriteTo(jw, converters)", span="413-413"];
m7_81 [cluster="Newtonsoft.Json.Linq.JToken.ToString(Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", file="JToken.cs", label="JsonTextWriter jw = new JsonTextWriter(sw)", span="410-410"];
m7_84 [cluster="Newtonsoft.Json.Linq.JToken.ToString(Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", file="JToken.cs", label="return sw.ToString();", span="415-415"];
m7_85 [cluster="Newtonsoft.Json.Linq.JToken.ToString(Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.ToString(Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", span="406-406"];
m7_7 [cluster="Newtonsoft.Json.Linq.JToken.JToken()", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.JToken()", span="220-220"];
m7_8 [cluster="Newtonsoft.Json.Linq.JToken.JToken()", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.JToken()", span="220-220"];
m7_236 [cluster="System.Convert.ToUInt16(object, System.IFormatProvider)", file="JToken.cs", label="Entry System.Convert.ToUInt16(object, System.IFormatProvider)", span="0-0"];
m7_590 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(uint)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(uint)", span="1536-1536"];
m7_591 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(uint)", file="JToken.cs", label="return new JValue(value);", span="1538-1538"];
m7_592 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(uint)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(uint)", span="1536-1536"];
m7_218 [cluster="System.Convert.ToInt32(object, System.IFormatProvider)", file="JToken.cs", label="Entry System.Convert.ToInt32(object, System.IFormatProvider)", span="0-0"];
m7_342 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator decimal(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.explicit operator decimal(Newtonsoft.Json.Linq.JToken)", span="938-938"];
m7_343 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator decimal(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="JValue v = EnsureValue(value)", span="940-940"];
m7_345 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator decimal(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="throw new ArgumentException(''Can not convert {0} to Decimal.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="942-942"];
m7_344 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator decimal(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v == null || !ValidateToken(v, NumberTypes, false)", span="941-941"];
m7_346 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator decimal(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v.Value is BigInteger", span="945-945"];
m7_347 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator decimal(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return (decimal)(BigInteger)v.Value;", span="946-946"];
m7_348 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator decimal(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return Convert.ToDecimal(v.Value, CultureInfo.InvariantCulture);", span="949-949"];
m7_349 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator decimal(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.explicit operator decimal(Newtonsoft.Json.Linq.JToken)", span="938-938"];
m7_163 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTimeOffset?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.explicit operator System.DateTimeOffset?(Newtonsoft.Json.Linq.JToken)", span="556-556"];
m7_164 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTimeOffset?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="value == null", span="558-558"];
m7_166 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTimeOffset?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="JValue v = EnsureValue(value)", span="561-561"];
m7_168 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTimeOffset?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="throw new ArgumentException(''Can not convert {0} to DateTimeOffset.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="563-563"];
m7_165 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTimeOffset?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return null;", span="559-559"];
m7_167 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTimeOffset?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v == null || !ValidateToken(v, DateTimeTypes, true)", span="562-562"];
m7_169 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTimeOffset?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v.Value == null", span="565-565"];
m7_171 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTimeOffset?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v.Value is DateTimeOffset", span="567-567"];
m7_172 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTimeOffset?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return (DateTimeOffset?)v.Value;", span="568-568"];
m7_173 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTimeOffset?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v.Value is string", span="569-569"];
m7_174 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTimeOffset?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return DateTimeOffset.Parse((string)v.Value, CultureInfo.InvariantCulture);", span="570-570"];
m7_175 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTimeOffset?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return new DateTimeOffset(Convert.ToDateTime(v.Value, CultureInfo.InvariantCulture));", span="571-571"];
m7_170 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTimeOffset?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return null;", span="566-566"];
m7_176 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTimeOffset?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.explicit operator System.DateTimeOffset?(Newtonsoft.Json.Linq.JToken)", span="556-556"];
m7_262 [cluster="System.Convert.ToSByte(object, System.IFormatProvider)", file="JToken.cs", label="Entry System.Convert.ToSByte(object, System.IFormatProvider)", span="0-0"];
m7_776 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JToken.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="73-73"];
m7_806 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.JPath(string)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.JPath.JPath(string)", span="40-40"];
m7_421 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator byte[](Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.explicit operator byte[](Newtonsoft.Json.Linq.JToken)", span="1107-1107"];
m7_422 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator byte[](Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="value == null", span="1109-1109"];
m7_424 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator byte[](Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="JValue v = EnsureValue(value)", span="1112-1112"];
m7_426 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator byte[](Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="throw new ArgumentException(''Can not convert {0} to byte array.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="1114-1114"];
m7_433 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator byte[](Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="throw new ArgumentException(''Can not convert {0} to byte array.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="1126-1126"];
m7_423 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator byte[](Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return null;", span="1110-1110"];
m7_425 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator byte[](Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v == null || !ValidateToken(v, BytesTypes, false)", span="1113-1113"];
m7_427 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator byte[](Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v.Value is string", span="1116-1116"];
m7_428 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator byte[](Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return Convert.FromBase64String(Convert.ToString(v.Value, CultureInfo.InvariantCulture));", span="1117-1117"];
m7_429 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator byte[](Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v.Value is BigInteger", span="1119-1119"];
m7_430 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator byte[](Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return ((BigInteger)v.Value).ToByteArray();", span="1120-1120"];
m7_431 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator byte[](Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v.Value is byte[]", span="1123-1123"];
m7_432 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator byte[](Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return (byte[])v.Value;", span="1124-1124"];
m7_434 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator byte[](Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.explicit operator byte[](Newtonsoft.Json.Linq.JToken)", span="1107-1107"];
m7_643 [cluster="Newtonsoft.Json.Linq.JToken.FromObject(object)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.FromObject(object)", span="1659-1659"];
m7_644 [cluster="Newtonsoft.Json.Linq.JToken.FromObject(object)", file="JToken.cs", label="return FromObjectInternal(o, JsonSerializer.CreateDefault());", span="1661-1661"];
m7_645 [cluster="Newtonsoft.Json.Linq.JToken.FromObject(object)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.FromObject(object)", span="1659-1659"];
m7_821 [cluster="Newtonsoft.Json.Linq.JToken.System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(System.Linq.Expressions.Expression)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(System.Linq.Expressions.Expression)", span="1991-1991"];
m7_822 [cluster="Newtonsoft.Json.Linq.JToken.System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(System.Linq.Expressions.Expression)", file="JToken.cs", label="return GetMetaObject(parameter);", span="1993-1993"];
m7_823 [cluster="Newtonsoft.Json.Linq.JToken.System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(System.Linq.Expressions.Expression)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(System.Linq.Expressions.Expression)", span="1991-1991"];
m7_110 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator bool(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.explicit operator bool(Newtonsoft.Json.Linq.JToken)", span="453-453"];
m7_111 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator bool(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="JValue v = EnsureValue(value)", span="455-455"];
m7_113 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator bool(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="throw new ArgumentException(''Can not convert {0} to Boolean.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="457-457"];
m7_112 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator bool(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v == null || !ValidateToken(v, BooleanTypes, false)", span="456-456"];
m7_114 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator bool(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v.Value is BigInteger", span="460-460"];
m7_115 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator bool(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return Convert.ToBoolean((int)(BigInteger)v.Value);", span="461-461"];
m7_116 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator bool(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return Convert.ToBoolean(v.Value, CultureInfo.InvariantCulture);", span="464-464"];
m7_117 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator bool(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.explicit operator bool(Newtonsoft.Json.Linq.JToken)", span="453-453"];
m7_405 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator uint(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.explicit operator uint(Newtonsoft.Json.Linq.JToken)", span="1068-1068"];
m7_406 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator uint(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="JValue v = EnsureValue(value)", span="1070-1070"];
m7_408 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator uint(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="throw new ArgumentException(''Can not convert {0} to UInt32.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="1072-1072"];
m7_407 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator uint(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v == null || !ValidateToken(v, NumberTypes, false)", span="1071-1071"];
m7_409 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator uint(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v.Value is BigInteger", span="1075-1075"];
m7_410 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator uint(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return (uint)(BigInteger)v.Value;", span="1076-1076"];
m7_411 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator uint(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return Convert.ToUInt32(v.Value, CultureInfo.InvariantCulture);", span="1079-1079"];
m7_412 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator uint(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.explicit operator uint(Newtonsoft.Json.Linq.JToken)", span="1068-1068"];
m7_632 [cluster="Newtonsoft.Json.Linq.JToken.FromObjectInternal(object, Newtonsoft.Json.JsonSerializer)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.FromObjectInternal(object, Newtonsoft.Json.JsonSerializer)", span="1639-1639"];
m7_633 [cluster="Newtonsoft.Json.Linq.JToken.FromObjectInternal(object, Newtonsoft.Json.JsonSerializer)", file="JToken.cs", label="ValidationUtils.ArgumentNotNull(o, ''o'')", span="1641-1641"];
m7_634 [cluster="Newtonsoft.Json.Linq.JToken.FromObjectInternal(object, Newtonsoft.Json.JsonSerializer)", file="JToken.cs", label="ValidationUtils.ArgumentNotNull(jsonSerializer, ''jsonSerializer'')", span="1642-1642"];
m7_637 [cluster="Newtonsoft.Json.Linq.JToken.FromObjectInternal(object, Newtonsoft.Json.JsonSerializer)", file="JToken.cs", label="jsonSerializer.Serialize(jsonWriter, o)", span="1647-1647"];
m7_635 [cluster="Newtonsoft.Json.Linq.JToken.FromObjectInternal(object, Newtonsoft.Json.JsonSerializer)", file="JToken.cs", label="JToken token", span="1644-1644"];
m7_636 [cluster="Newtonsoft.Json.Linq.JToken.FromObjectInternal(object, Newtonsoft.Json.JsonSerializer)", file="JToken.cs", label="JTokenWriter jsonWriter = new JTokenWriter()", span="1645-1645"];
m7_638 [cluster="Newtonsoft.Json.Linq.JToken.FromObjectInternal(object, Newtonsoft.Json.JsonSerializer)", file="JToken.cs", label="token = jsonWriter.Token", span="1648-1648"];
m7_639 [cluster="Newtonsoft.Json.Linq.JToken.FromObjectInternal(object, Newtonsoft.Json.JsonSerializer)", file="JToken.cs", label="return token;", span="1651-1651"];
m7_640 [cluster="Newtonsoft.Json.Linq.JToken.FromObjectInternal(object, Newtonsoft.Json.JsonSerializer)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.FromObjectInternal(object, Newtonsoft.Json.JsonSerializer)", span="1639-1639"];
m7_604 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.TimeSpan)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.TimeSpan)", span="1577-1577"];
m7_605 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.TimeSpan)", file="JToken.cs", label="return new JValue(value);", span="1579-1579"];
m7_606 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.TimeSpan)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.TimeSpan)", span="1577-1577"];
m7_459 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.TimeSpan(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.explicit operator System.TimeSpan(Newtonsoft.Json.Linq.JToken)", span="1174-1174"];
m7_460 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.TimeSpan(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="JValue v = EnsureValue(value)", span="1176-1176"];
m7_462 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.TimeSpan(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="throw new ArgumentException(''Can not convert {0} to TimeSpan.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="1178-1178"];
m7_461 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.TimeSpan(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v == null || !ValidateToken(v, TimeSpanTypes, false)", span="1177-1177"];
m7_463 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.TimeSpan(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return (v.Value is TimeSpan) ? (TimeSpan)v.Value : ConvertUtils.ParseTimeSpan(Convert.ToString(v.Value, CultureInfo.InvariantCulture));", span="1180-1180"];
m7_464 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.TimeSpan(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.explicit operator System.TimeSpan(Newtonsoft.Json.Linq.JToken)", span="1174-1174"];
m7_61 [cluster="string.FormatWith(System.IFormatProvider, object)", file="JToken.cs", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
m7_513 [cluster="Newtonsoft.Json.Linq.JValue.JValue(long)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(long)", span="70-70"];
m7_18 [cluster="Newtonsoft.Json.Linq.JToken.AddBeforeSelf(object)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.AddBeforeSelf(object)", span="241-241"];
m7_19 [cluster="Newtonsoft.Json.Linq.JToken.AddBeforeSelf(object)", file="JToken.cs", label="_parent == null", span="243-243"];
m7_22 [cluster="Newtonsoft.Json.Linq.JToken.AddBeforeSelf(object)", file="JToken.cs", label="_parent.AddInternal(index, content, false)", span="247-247"];
m7_20 [cluster="Newtonsoft.Json.Linq.JToken.AddBeforeSelf(object)", file="JToken.cs", label="throw new InvalidOperationException(''The parent is missing.'');", span="244-244"];
m7_21 [cluster="Newtonsoft.Json.Linq.JToken.AddBeforeSelf(object)", file="JToken.cs", label="int index = _parent.IndexOfItem(this)", span="246-246"];
m7_23 [cluster="Newtonsoft.Json.Linq.JToken.AddBeforeSelf(object)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.AddBeforeSelf(object)", span="241-241"];
m7_131 [cluster="System.DateTimeOffset.Parse(string, System.IFormatProvider)", file="JToken.cs", label="Entry System.DateTimeOffset.Parse(string, System.IFormatProvider)", span="0-0"];
m7_563 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(decimal)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(decimal)", span="1451-1451"];
m7_564 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(decimal)", file="JToken.cs", label="return new JValue(value);", span="1453-1453"];
m7_565 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(decimal)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(decimal)", span="1451-1451"];
m7_650 [cluster="Newtonsoft.Json.Linq.JToken.ToObject<T>()", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToObject<T>()", span="1680-1680"];
m7_651 [cluster="Newtonsoft.Json.Linq.JToken.ToObject<T>()", file="JToken.cs", label="return (T)ToObject(typeof(T));", span="1682-1682"];
m7_652 [cluster="Newtonsoft.Json.Linq.JToken.ToObject<T>()", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.ToObject<T>()", span="1680-1680"];
m7_437 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.Guid(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.explicit operator System.Guid(Newtonsoft.Json.Linq.JToken)", span="1134-1134"];
m7_438 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.Guid(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="JValue v = EnsureValue(value)", span="1136-1136"];
m7_440 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.Guid(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="throw new ArgumentException(''Can not convert {0} to Guid.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="1138-1138"];
m7_439 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.Guid(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v == null || !ValidateToken(v, GuidTypes, false)", span="1137-1137"];
m7_441 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.Guid(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v.Value is byte[]", span="1140-1140"];
m7_442 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.Guid(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return new Guid((byte[])v.Value);", span="1141-1141"];
m7_443 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.Guid(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return (v.Value is Guid) ? (Guid)v.Value : new Guid(Convert.ToString(v.Value, CultureInfo.InvariantCulture));", span="1143-1143"];
m7_444 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.Guid(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.explicit operator System.Guid(Newtonsoft.Json.Linq.JToken)", span="1134-1134"];
m7_509 [cluster="Newtonsoft.Json.Linq.JValue.JValue(object)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(object)", span="170-170"];
m7_493 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", file="JToken.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", span="299-299"];
m7_597 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(byte[])", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(byte[])", span="1557-1557"];
m7_598 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(byte[])", file="JToken.cs", label="return new JValue(value);", span="1559-1559"];
m7_599 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(byte[])", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(byte[])", span="1557-1557"];
m7_210 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator int(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.explicit operator int(Newtonsoft.Json.Linq.JToken)", span="646-646"];
m7_211 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator int(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="JValue v = EnsureValue(value)", span="648-648"];
m7_213 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator int(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="throw new ArgumentException(''Can not convert {0} to Int32.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="650-650"];
m7_212 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator int(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v == null || !ValidateToken(v, NumberTypes, false)", span="649-649"];
m7_214 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator int(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v.Value is BigInteger", span="653-653"];
m7_215 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator int(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return (int)(BigInteger)v.Value;", span="654-654"];
m7_216 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator int(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return Convert.ToInt32(v.Value, CultureInfo.InvariantCulture);", span="657-657"];
m7_217 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator int(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.explicit operator int(Newtonsoft.Json.Linq.JToken)", span="646-646"];
m7_762 [cluster="Newtonsoft.Json.JsonReader.Read()", file="JToken.cs", label="Entry Newtonsoft.Json.JsonReader.Read()", span="354-354"];
m7_541 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(short)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(short)", span="1380-1380"];
m7_542 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(short)", file="JToken.cs", label="return new JValue(value);", span="1382-1382"];
m7_543 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(short)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(short)", span="1380-1380"];
m7_76 [cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="395-395"];
m7_77 [cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="JToken.cs", label="return ToString(Formatting.Indented);", span="397-397"];
m7_78 [cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.ToString()", span="395-395"];
m7_794 [cluster="Newtonsoft.Json.Linq.JToken.SelectToken(string)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.SelectToken(string)", span="1916-1916"];
m7_795 [cluster="Newtonsoft.Json.Linq.JToken.SelectToken(string)", file="JToken.cs", label="return SelectToken(path, false);", span="1918-1918"];
m7_796 [cluster="Newtonsoft.Json.Linq.JToken.SelectToken(string)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.SelectToken(string)", span="1916-1916"];
m7_642 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="JToken.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="769-769"];
m7_16 [cluster="Newtonsoft.Json.Linq.JContainer.IndexOfItem(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JContainer.IndexOfItem(Newtonsoft.Json.Linq.JToken)", span="327-327"];
m7_653 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", span="1690-1690"];
m7_654 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="JsonConvert.DefaultSettings == null", span="1692-1692"];
m7_655 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="PrimitiveTypeCode typeCode = ConvertUtils.GetTypeCode(objectType)", span="1694-1694"];
m7_733 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="return ToObject(objectType, JsonSerializer.CreateDefault());", span="1781-1781"];
m7_656 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label=typeCode, span="1696-1696"];
m7_657 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="PrimitiveTypeCode.BooleanNullable", span="1698-1698"];
m7_659 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="PrimitiveTypeCode.Boolean", span="1700-1700"];
m7_661 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="PrimitiveTypeCode.CharNullable", span="1702-1702"];
m7_663 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="PrimitiveTypeCode.Char", span="1704-1704"];
m7_665 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="PrimitiveTypeCode.SByte", span="1706-1706"];
m7_667 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="PrimitiveTypeCode.SByteNullable", span="1708-1708"];
m7_669 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="PrimitiveTypeCode.ByteNullable", span="1710-1710"];
m7_671 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="PrimitiveTypeCode.Byte", span="1712-1712"];
m7_673 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="PrimitiveTypeCode.Int16Nullable", span="1714-1714"];
m7_675 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="PrimitiveTypeCode.Int16", span="1716-1716"];
m7_677 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="PrimitiveTypeCode.UInt16Nullable", span="1718-1718"];
m7_679 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="PrimitiveTypeCode.UInt16", span="1720-1720"];
m7_681 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="PrimitiveTypeCode.Int32Nullable", span="1722-1722"];
m7_683 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="PrimitiveTypeCode.Int32", span="1724-1724"];
m7_685 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="PrimitiveTypeCode.UInt32Nullable", span="1726-1726"];
m7_687 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="PrimitiveTypeCode.UInt32", span="1728-1728"];
m7_689 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="PrimitiveTypeCode.Int64Nullable", span="1730-1730"];
m7_691 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="PrimitiveTypeCode.Int64", span="1732-1732"];
m7_693 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="PrimitiveTypeCode.UInt64Nullable", span="1734-1734"];
m7_695 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="PrimitiveTypeCode.UInt64", span="1736-1736"];
m7_697 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="PrimitiveTypeCode.SingleNullable", span="1738-1738"];
m7_699 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="PrimitiveTypeCode.Single", span="1740-1740"];
m7_701 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="PrimitiveTypeCode.DoubleNullable", span="1742-1742"];
m7_703 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="PrimitiveTypeCode.Double", span="1744-1744"];
m7_705 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="PrimitiveTypeCode.DecimalNullable", span="1746-1746"];
m7_707 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="PrimitiveTypeCode.Decimal", span="1748-1748"];
m7_709 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="PrimitiveTypeCode.DateTimeNullable", span="1750-1750"];
m7_711 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="PrimitiveTypeCode.DateTime", span="1752-1752"];
m7_713 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="PrimitiveTypeCode.DateTimeOffsetNullable", span="1755-1755"];
m7_715 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="PrimitiveTypeCode.DateTimeOffset", span="1757-1757"];
m7_717 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="PrimitiveTypeCode.String", span="1760-1760"];
m7_719 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="PrimitiveTypeCode.GuidNullable", span="1762-1762"];
m7_721 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="PrimitiveTypeCode.Guid", span="1764-1764"];
m7_723 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="PrimitiveTypeCode.Uri", span="1766-1766"];
m7_725 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="PrimitiveTypeCode.TimeSpanNullable", span="1768-1768"];
m7_727 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="PrimitiveTypeCode.TimeSpan", span="1770-1770"];
m7_729 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="PrimitiveTypeCode.BigIntegerNullable", span="1773-1773"];
m7_731 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="PrimitiveTypeCode.BigInteger", span="1775-1775"];
m7_658 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="return (bool?)this;", span="1699-1699"];
m7_660 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="return (bool)this;", span="1701-1701"];
m7_662 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="return (char?)this;", span="1703-1703"];
m7_664 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="return (char)this;", span="1705-1705"];
m7_666 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="return (sbyte?)this;", span="1707-1707"];
m7_668 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="return (sbyte)this;", span="1709-1709"];
m7_670 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="return (byte?)this;", span="1711-1711"];
m7_672 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="return (byte)this;", span="1713-1713"];
m7_674 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="return (short?)this;", span="1715-1715"];
m7_676 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="return (short)this;", span="1717-1717"];
m7_678 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="return (ushort?)this;", span="1719-1719"];
m7_680 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="return (ushort)this;", span="1721-1721"];
m7_682 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="return (int?)this;", span="1723-1723"];
m7_684 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="return (int)this;", span="1725-1725"];
m7_686 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="return (uint?)this;", span="1727-1727"];
m7_688 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="return (uint)this;", span="1729-1729"];
m7_690 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="return (long?)this;", span="1731-1731"];
m7_692 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="return (long)this;", span="1733-1733"];
m7_694 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="return (ulong?)this;", span="1735-1735"];
m7_696 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="return (ulong)this;", span="1737-1737"];
m7_698 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="return (float?)this;", span="1739-1739"];
m7_700 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="return (float)this;", span="1741-1741"];
m7_702 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="return (double?)this;", span="1743-1743"];
m7_704 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="return (double)this;", span="1745-1745"];
m7_706 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="return (decimal?)this;", span="1747-1747"];
m7_708 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="return (decimal)this;", span="1749-1749"];
m7_710 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="return (DateTime?)this;", span="1751-1751"];
m7_712 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="return (DateTime)this;", span="1753-1753"];
m7_714 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="return (DateTimeOffset?)this;", span="1756-1756"];
m7_716 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="return (DateTimeOffset)this;", span="1758-1758"];
m7_718 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="return (string)this;", span="1761-1761"];
m7_720 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="return (Guid?)this;", span="1763-1763"];
m7_722 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="return (Guid)this;", span="1765-1765"];
m7_724 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="return (Uri)this;", span="1767-1767"];
m7_726 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="return (TimeSpan?)this;", span="1769-1769"];
m7_728 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="return (TimeSpan)this;", span="1771-1771"];
m7_730 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="return ToBigIntegerNullable(this);", span="1774-1774"];
m7_732 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="return ToBigInteger(this);", span="1776-1776"];
m7_734 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", span="1690-1690"];
m7_118 [cluster="System.ArgumentException.ArgumentException(string)", file="JToken.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m7_646 [cluster="Newtonsoft.Json.JsonSerializer.CreateDefault()", file="JToken.cs", label="Entry Newtonsoft.Json.JsonSerializer.CreateDefault()", span="475-475"];
m7_626 [cluster="Newtonsoft.Json.Linq.JToken.GetDeepHashCode()", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.GetDeepHashCode()", span="1623-1623"];
m7_627 [cluster="Newtonsoft.Json.Linq.JToken.GetDeepHashCode()", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.GetDeepHashCode()", span="1623-1623"];
m7_736 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type, Newtonsoft.Json.JsonSerializer)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToObject(System.Type, Newtonsoft.Json.JsonSerializer)", span="1801-1801"];
m7_740 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type, Newtonsoft.Json.JsonSerializer)", file="JToken.cs", label="ValidationUtils.ArgumentNotNull(jsonSerializer, ''jsonSerializer'')", span="1803-1803"];
m7_742 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type, Newtonsoft.Json.JsonSerializer)", file="JToken.cs", label="return jsonSerializer.Deserialize(jsonReader, objectType);", span="1807-1807"];
m7_741 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type, Newtonsoft.Json.JsonSerializer)", file="JToken.cs", label="JTokenReader jsonReader = new JTokenReader(this)", span="1805-1805"];
m7_743 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type, Newtonsoft.Json.JsonSerializer)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.ToObject(System.Type, Newtonsoft.Json.JsonSerializer)", span="1801-1801"];
m7_589 [cluster="Newtonsoft.Json.Linq.JValue.JValue(string)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(string)", span="134-134"];
m7_628 [cluster="Newtonsoft.Json.Linq.JToken.CreateReader()", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.CreateReader()", span="1634-1634"];
m7_629 [cluster="Newtonsoft.Json.Linq.JToken.CreateReader()", file="JToken.cs", label="return new JTokenReader(this);", span="1636-1636"];
m7_630 [cluster="Newtonsoft.Json.Linq.JToken.CreateReader()", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.CreateReader()", span="1634-1634"];
m7_535 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(decimal?)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(decimal?)", span="1359-1359"];
m7_536 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(decimal?)", file="JToken.cs", label="return new JValue(value);", span="1361-1361"];
m7_537 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(decimal?)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(decimal?)", span="1359-1359"];
m7_502 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(bool)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(bool)", span="1253-1253"];
m7_503 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(bool)", file="JToken.cs", label="return new JValue(value);", span="1255-1255"];
m7_504 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(bool)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(bool)", span="1253-1253"];
m7_566 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(short?)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(short?)", span="1462-1462"];
m7_567 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(short?)", file="JToken.cs", label="return new JValue(value);", span="1464-1464"];
m7_568 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(short?)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(short?)", span="1462-1462"];
m7_153 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTime?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.explicit operator System.DateTime?(Newtonsoft.Json.Linq.JToken)", span="533-533"];
m7_154 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTime?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="value == null", span="535-535"];
m7_156 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTime?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="JValue v = EnsureValue(value)", span="538-538"];
m7_158 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTime?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="throw new ArgumentException(''Can not convert {0} to DateTime.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="540-540"];
m7_155 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTime?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return null;", span="536-536"];
m7_157 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTime?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v == null || !ValidateToken(v, DateTimeTypes, true)", span="539-539"];
m7_159 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTime?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v.Value is DateTimeOffset", span="543-543"];
m7_160 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTime?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return ((DateTimeOffset)v.Value).DateTime;", span="544-544"];
m7_161 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTime?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return (v.Value != null) ? (DateTime?)Convert.ToDateTime(v.Value, CultureInfo.InvariantCulture) : null;", span="547-547"];
m7_162 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTime?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.explicit operator System.DateTime?(Newtonsoft.Json.Linq.JToken)", span="533-533"];
m7_603 [cluster="Newtonsoft.Json.Linq.JValue.JValue(System.Uri)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.Uri)", span="152-152"];
m7_816 [cluster="Newtonsoft.Json.Linq.JToken.GetMetaObject(System.Linq.Expressions.Expression)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.GetMetaObject(System.Linq.Expressions.Expression)", span="1979-1979"];
m7_817 [cluster="Newtonsoft.Json.Linq.JToken.GetMetaObject(System.Linq.Expressions.Expression)", file="JToken.cs", label="return new DynamicProxyMetaObject<JToken>(parameter, this, new DynamicProxy<JToken>(), true);", span="1981-1981"];
m7_818 [cluster="Newtonsoft.Json.Linq.JToken.GetMetaObject(System.Linq.Expressions.Expression)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.GetMetaObject(System.Linq.Expressions.Expression)", span="1979-1979"];
m7_403 [cluster="Unk.ToString", file="JToken.cs", label="Entry Unk.ToString", span=""];
m7_520 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(sbyte?)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(sbyte?)", span="1307-1307"];
m7_521 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(sbyte?)", file="JToken.cs", label="return new JValue(value);", span="1309-1309"];
m7_522 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(sbyte?)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(sbyte?)", span="1307-1307"];
m7_487 [cluster="Newtonsoft.Json.Linq.JToken.ToBigInteger(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToBigInteger(Newtonsoft.Json.Linq.JToken)", span="1224-1224"];
m7_488 [cluster="Newtonsoft.Json.Linq.JToken.ToBigInteger(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="JValue v = EnsureValue(value)", span="1226-1226"];
m7_490 [cluster="Newtonsoft.Json.Linq.JToken.ToBigInteger(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="throw new ArgumentException(''Can not convert {0} to BigInteger.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="1228-1228"];
m7_489 [cluster="Newtonsoft.Json.Linq.JToken.ToBigInteger(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v == null || !ValidateToken(v, BigIntegerTypes, false)", span="1227-1227"];
m7_491 [cluster="Newtonsoft.Json.Linq.JToken.ToBigInteger(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return ConvertUtils.ToBigInteger(v.Value);", span="1230-1230"];
m7_492 [cluster="Newtonsoft.Json.Linq.JToken.ToBigInteger(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.ToBigInteger(Newtonsoft.Json.Linq.JToken)", span="1224-1224"];
m7_38 [cluster="Newtonsoft.Json.Linq.JToken.BeforeSelf()", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.BeforeSelf()", span="281-281"];
m7_39 [cluster="Newtonsoft.Json.Linq.JToken.BeforeSelf()", file="JToken.cs", label="JToken o = Parent.First", span="283-283"];
m7_41 [cluster="Newtonsoft.Json.Linq.JToken.BeforeSelf()", file="JToken.cs", label="yield return o;", span="285-285"];
m7_40 [cluster="Newtonsoft.Json.Linq.JToken.BeforeSelf()", file="JToken.cs", label="o != this", span="283-283"];
m7_42 [cluster="Newtonsoft.Json.Linq.JToken.BeforeSelf()", file="JToken.cs", label="o = o.Next", span="283-283"];
m7_43 [cluster="Newtonsoft.Json.Linq.JToken.BeforeSelf()", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.BeforeSelf()", span="281-281"];
m7_532 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.DateTimeOffset?)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.DateTimeOffset?)", span="1348-1348"];
m7_533 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.DateTimeOffset?)", file="JToken.cs", label="return new JValue(value);", span="1350-1350"];
m7_534 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.DateTimeOffset?)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.DateTimeOffset?)", span="1348-1348"];
m7_529 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.DateTime?)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.DateTime?)", span="1337-1337"];
m7_530 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.DateTime?)", file="JToken.cs", label="return new JValue(value);", span="1339-1339"];
m7_531 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.DateTime?)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.DateTime?)", span="1337-1337"];
m7_388 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator string(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.explicit operator string(Newtonsoft.Json.Linq.JToken)", span="1041-1041"];
m7_389 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator string(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="value == null", span="1043-1043"];
m7_391 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator string(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="JValue v = EnsureValue(value)", span="1046-1046"];
m7_393 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator string(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="throw new ArgumentException(''Can not convert {0} to String.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="1048-1048"];
m7_390 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator string(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return null;", span="1044-1044"];
m7_392 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator string(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v == null || !ValidateToken(v, StringTypes, true)", span="1047-1047"];
m7_394 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator string(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v.Value == null", span="1050-1050"];
m7_396 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator string(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v.Value is byte[]", span="1052-1052"];
m7_397 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator string(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return Convert.ToBase64String((byte[])v.Value);", span="1053-1053"];
m7_398 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator string(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v.Value is BigInteger", span="1055-1055"];
m7_399 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator string(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return ((BigInteger)v.Value).ToString(CultureInfo.InvariantCulture);", span="1056-1056"];
m7_400 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator string(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return Convert.ToString(v.Value, CultureInfo.InvariantCulture);", span="1059-1059"];
m7_395 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator string(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return null;", span="1051-1051"];
m7_401 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator string(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.explicit operator string(Newtonsoft.Json.Linq.JToken)", span="1041-1041"];
m7_765 [cluster="Newtonsoft.Json.Linq.JArray.Load(Newtonsoft.Json.JsonReader)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JArray.Load(Newtonsoft.Json.JsonReader)", span="111-111"];
m7_505 [cluster="Newtonsoft.Json.Linq.JValue.JValue(bool)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(bool)", span="125-125"];
m7_372 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator double(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.explicit operator double(Newtonsoft.Json.Linq.JToken)", span="1003-1003"];
m7_373 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator double(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="JValue v = EnsureValue(value)", span="1005-1005"];
m7_375 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator double(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="throw new ArgumentException(''Can not convert {0} to Double.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="1007-1007"];
m7_374 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator double(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v == null || !ValidateToken(v, NumberTypes, false)", span="1006-1006"];
m7_376 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator double(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v.Value is BigInteger", span="1010-1010"];
m7_377 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator double(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return (double)(BigInteger)v.Value;", span="1011-1011"];
m7_378 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator double(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return Convert.ToDouble(v.Value, CultureInfo.InvariantCulture);", span="1014-1014"];
m7_379 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator double(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.explicit operator double(Newtonsoft.Json.Linq.JToken)", span="1003-1003"];
m7_824 [cluster="Newtonsoft.Json.Linq.JToken.System.ICloneable.Clone()", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.System.ICloneable.Clone()", span="1998-1998"];
m7_825 [cluster="Newtonsoft.Json.Linq.JToken.System.ICloneable.Clone()", file="JToken.cs", label="return DeepClone();", span="2000-2000"];
m7_826 [cluster="Newtonsoft.Json.Linq.JToken.System.ICloneable.Clone()", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.System.ICloneable.Clone()", span="1998-1998"];
m7_57 [cluster="Newtonsoft.Json.Linq.JToken.Values<T>()", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.Values<T>()", span="354-354"];
m7_58 [cluster="Newtonsoft.Json.Linq.JToken.Values<T>()", file="JToken.cs", label="throw new InvalidOperationException(''Cannot access child value on {0}.''.FormatWith(CultureInfo.InvariantCulture, GetType()));", span="356-356"];
m7_59 [cluster="Newtonsoft.Json.Linq.JToken.Values<T>()", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.Values<T>()", span="354-354"];
m7_87 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JToken.cs", label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="116-116"];
m7_361 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator ulong?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.explicit operator ulong?(Newtonsoft.Json.Linq.JToken)", span="981-981"];
m7_362 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator ulong?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="value == null", span="983-983"];
m7_364 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator ulong?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="JValue v = EnsureValue(value)", span="986-986"];
m7_366 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator ulong?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="throw new ArgumentException(''Can not convert {0} to UInt64.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="988-988"];
m7_363 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator ulong?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return null;", span="984-984"];
m7_365 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator ulong?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v == null || !ValidateToken(v, NumberTypes, true)", span="987-987"];
m7_367 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator ulong?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v.Value is BigInteger", span="991-991"];
m7_368 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator ulong?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return (ulong?)(BigInteger)v.Value;", span="992-992"];
m7_369 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator ulong?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return (v.Value != null) ? (ulong?)Convert.ToUInt64(v.Value, CultureInfo.InvariantCulture) : null;", span="995-995"];
m7_370 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator ulong?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.explicit operator ulong?(Newtonsoft.Json.Linq.JToken)", span="981-981"];
m7_763 [cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", file="JToken.cs", label="Entry Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", span="108-108"];
m7_199 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator char?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.explicit operator char?(Newtonsoft.Json.Linq.JToken)", span="624-624"];
m7_200 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator char?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="value == null", span="626-626"];
m7_202 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator char?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="JValue v = EnsureValue(value)", span="629-629"];
m7_204 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator char?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="throw new ArgumentException(''Can not convert {0} to Char.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="631-631"];
m7_201 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator char?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return null;", span="627-627"];
m7_203 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator char?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v == null || !ValidateToken(v, CharTypes, true)", span="630-630"];
m7_205 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator char?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v.Value is BigInteger", span="634-634"];
m7_206 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator char?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return (char?)(BigInteger)v.Value;", span="635-635"];
m7_207 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator char?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return (v.Value != null) ? (char?)Convert.ToChar(v.Value, CultureInfo.InvariantCulture) : null;", span="638-638"];
m7_208 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator char?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.explicit operator char?(Newtonsoft.Json.Linq.JToken)", span="624-624"];
m7_60 [cluster="object.GetType()", file="JToken.cs", label="Entry object.GetType()", span="0-0"];
m7_745 [cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", span="1820-1820"];
m7_746 [cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JToken.cs", label="ValidationUtils.ArgumentNotNull(reader, ''reader'')", span="1822-1822"];
m7_747 [cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JToken.cs", label="reader.TokenType == JsonToken.None", span="1824-1824"];
m7_748 [cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JToken.cs", label="!reader.Read()", span="1826-1826"];
m7_749 [cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JToken.cs", label="throw JsonReaderException.Create(reader, ''Error reading JToken from JsonReader.'');", span="1827-1827"];
m7_750 [cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JToken.cs", label="reader.TokenType == JsonToken.StartObject", span="1830-1830"];
m7_751 [cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JToken.cs", label="return JObject.Load(reader);", span="1831-1831"];
m7_752 [cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JToken.cs", label="reader.TokenType == JsonToken.StartArray", span="1833-1833"];
m7_753 [cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JToken.cs", label="return JArray.Load(reader);", span="1834-1834"];
m7_754 [cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JToken.cs", label="reader.TokenType == JsonToken.PropertyName", span="1836-1836"];
m7_755 [cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JToken.cs", label="return JProperty.Load(reader);", span="1837-1837"];
m7_756 [cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JToken.cs", label="reader.TokenType == JsonToken.StartConstructor", span="1839-1839"];
m7_757 [cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JToken.cs", label="return JConstructor.Load(reader);", span="1840-1840"];
m7_758 [cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JToken.cs", label="!JsonReader.IsStartToken(reader.TokenType)", span="1842-1842"];
m7_759 [cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JToken.cs", label="return new JValue(reader.Value);", span="1843-1843"];
m7_760 [cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JToken.cs", label="throw JsonReaderException.Create(reader, ''Error reading JToken from JsonReader. Unexpected token: {0}''.FormatWith(CultureInfo.InvariantCulture, reader.TokenType));", span="1845-1845"];
m7_761 [cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", span="1820-1820"];
m7_578 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(double)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(double)", span="1505-1505"];
m7_579 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(double)", file="JToken.cs", label="return new JValue(value);", span="1507-1507"];
m7_580 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(double)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(double)", span="1505-1505"];
m7_560 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(float?)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(float?)", span="1441-1441"];
m7_561 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(float?)", file="JToken.cs", label="return new JValue(value);", span="1443-1443"];
m7_562 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(float?)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(float?)", span="1441-1441"];
m7_506 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.DateTimeOffset)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.DateTimeOffset)", span="1264-1264"];
m7_507 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.DateTimeOffset)", file="JToken.cs", label="return new JValue(value);", span="1266-1266"];
m7_508 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.DateTimeOffset)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.DateTimeOffset)", span="1264-1264"];
m7_621 [cluster="System.Collections.Generic.IEnumerable<T>.GetEnumerator()", file="JToken.cs", label="Entry System.Collections.Generic.IEnumerable<T>.GetEnumerator()", span="0-0"];
m7_331 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator float?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.explicit operator float?(Newtonsoft.Json.Linq.JToken)", span="916-916"];
m7_332 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator float?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="value == null", span="918-918"];
m7_334 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator float?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="JValue v = EnsureValue(value)", span="921-921"];
m7_336 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator float?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="throw new ArgumentException(''Can not convert {0} to Single.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="923-923"];
m7_333 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator float?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return null;", span="919-919"];
m7_335 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator float?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v == null || !ValidateToken(v, NumberTypes, true)", span="922-922"];
m7_337 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator float?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v.Value is BigInteger", span="926-926"];
m7_338 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator float?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return (float?)(BigInteger)v.Value;", span="927-927"];
m7_339 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator float?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return (v.Value != null) ? (float?)Convert.ToSingle(v.Value, CultureInfo.InvariantCulture) : null;", span="930-930"];
m7_340 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator float?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.explicit operator float?(Newtonsoft.Json.Linq.JToken)", span="916-916"];
m7_777 [cluster="System.IO.StringReader.StringReader(string)", file="JToken.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m7_48 [cluster="Newtonsoft.Json.Linq.Extensions.Convert<T, U>(T)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.Extensions.Convert<T, U>(T)", span="247-247"];
m7_557 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(long?)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(long?)", span="1431-1431"];
m7_558 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(long?)", file="JToken.cs", label="return new JValue(value);", span="1433-1433"];
m7_559 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(long?)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(long?)", span="1431-1431"];
m7_68 [cluster="Newtonsoft.Json.Linq.JToken.Replace(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.Replace(Newtonsoft.Json.Linq.JToken)", span="374-374"];
m7_69 [cluster="Newtonsoft.Json.Linq.JToken.Replace(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="_parent == null", span="376-376"];
m7_71 [cluster="Newtonsoft.Json.Linq.JToken.Replace(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="_parent.ReplaceItem(this, value)", span="379-379"];
m7_70 [cluster="Newtonsoft.Json.Linq.JToken.Replace(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="throw new InvalidOperationException(''The parent is missing.'');", span="377-377"];
m7_72 [cluster="Newtonsoft.Json.Linq.JToken.Replace(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.Replace(Newtonsoft.Json.Linq.JToken)", span="374-374"];
m7_615 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.Guid?)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.Guid?)", span="1607-1607"];
m7_616 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.Guid?)", file="JToken.cs", label="return new JValue(value);", span="1609-1609"];
m7_617 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.Guid?)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.Guid?)", span="1607-1607"];
m7_808 [cluster="Newtonsoft.Json.JsonException.JsonException(string)", file="JToken.cs", label="Entry Newtonsoft.Json.JsonException.JsonException(string)", span="54-54"];
m7_631 [cluster="Newtonsoft.Json.Linq.JTokenReader.JTokenReader(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JTokenReader.JTokenReader(Newtonsoft.Json.Linq.JToken)", span="43-43"];
m7_517 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(sbyte)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(sbyte)", span="1296-1296"];
m7_518 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(sbyte)", file="JToken.cs", label="return new JValue(value);", span="1298-1298"];
m7_519 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(sbyte)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(sbyte)", span="1296-1296"];
m7_827 [cluster="Newtonsoft.Json.Linq.JToken.DeepClone()", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.DeepClone()", span="2008-2008"];
m7_828 [cluster="Newtonsoft.Json.Linq.JToken.DeepClone()", file="JToken.cs", label="return CloneToken();", span="2010-2010"];
m7_829 [cluster="Newtonsoft.Json.Linq.JToken.DeepClone()", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.DeepClone()", span="2008-2008"];
m7_105 [cluster="System.Enum.ToString()", file="JToken.cs", label="Entry System.Enum.ToString()", span="0-0"];
m7_476 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.Uri(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.explicit operator System.Uri(Newtonsoft.Json.Linq.JToken)", span="1208-1208"];
m7_477 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.Uri(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="value == null", span="1210-1210"];
m7_479 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.Uri(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="JValue v = EnsureValue(value)", span="1213-1213"];
m7_481 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.Uri(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="throw new ArgumentException(''Can not convert {0} to Uri.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="1215-1215"];
m7_478 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.Uri(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return null;", span="1211-1211"];
m7_480 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.Uri(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v == null || !ValidateToken(v, UriTypes, true)", span="1214-1214"];
m7_482 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.Uri(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v.Value == null", span="1217-1217"];
m7_484 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.Uri(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return (v.Value is Uri) ? (Uri)v.Value : new Uri(Convert.ToString(v.Value, CultureInfo.InvariantCulture));", span="1220-1220"];
m7_483 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.Uri(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return null;", span="1218-1218"];
m7_485 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.Uri(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.explicit operator System.Uri(Newtonsoft.Json.Linq.JToken)", span="1208-1208"];
m7_494 [cluster="Newtonsoft.Json.Linq.JToken.ToBigIntegerNullable(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToBigIntegerNullable(Newtonsoft.Json.Linq.JToken)", span="1233-1233"];
m7_495 [cluster="Newtonsoft.Json.Linq.JToken.ToBigIntegerNullable(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="JValue v = EnsureValue(value)", span="1235-1235"];
m7_497 [cluster="Newtonsoft.Json.Linq.JToken.ToBigIntegerNullable(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="throw new ArgumentException(''Can not convert {0} to BigInteger.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="1237-1237"];
m7_496 [cluster="Newtonsoft.Json.Linq.JToken.ToBigIntegerNullable(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v == null || !ValidateToken(v, BigIntegerTypes, true)", span="1236-1236"];
m7_498 [cluster="Newtonsoft.Json.Linq.JToken.ToBigIntegerNullable(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v.Value == null", span="1239-1239"];
m7_500 [cluster="Newtonsoft.Json.Linq.JToken.ToBigIntegerNullable(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return ConvertUtils.ToBigInteger(v.Value);", span="1242-1242"];
m7_499 [cluster="Newtonsoft.Json.Linq.JToken.ToBigIntegerNullable(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return null;", span="1240-1240"];
m7_501 [cluster="Newtonsoft.Json.Linq.JToken.ToBigIntegerNullable(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.ToBigIntegerNullable(Newtonsoft.Json.Linq.JToken)", span="1233-1233"];
m7_575 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(ulong?)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(ulong?)", span="1495-1495"];
m7_576 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(ulong?)", file="JToken.cs", label="return new JValue(value);", span="1497-1497"];
m7_577 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(ulong?)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(ulong?)", span="1495-1495"];
m7_17 [cluster="Newtonsoft.Json.Linq.JContainer.AddInternal(int, object, bool)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JContainer.AddInternal(int, object, bool)", span="569-569"];
m7_550 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(int?)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(int?)", span="1411-1411"];
m7_551 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(int?)", file="JToken.cs", label="return new JValue(value);", span="1413-1413"];
m7_552 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(int?)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(int?)", span="1411-1411"];
m7_766 [cluster="Newtonsoft.Json.Linq.JProperty.Load(Newtonsoft.Json.JsonReader)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JProperty.Load(Newtonsoft.Json.JsonReader)", span="229-229"];
m7_404 [cluster="System.Convert.ToString(object, System.IFormatProvider)", file="JToken.cs", label="Entry System.Convert.ToString(object, System.IFormatProvider)", span="0-0"];
m7_625 [cluster="Newtonsoft.Json.Linq.JEnumerable<T>.GetEnumerator()", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JEnumerable<T>.GetEnumerator()", span="66-66"];
m7_106 [cluster="Newtonsoft.Json.Linq.JToken.ValidateToken(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JTokenType[], bool)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.ValidateToken(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JTokenType[], bool)", span="442-442"];
m7_107 [cluster="Newtonsoft.Json.Linq.JToken.ValidateToken(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JTokenType[], bool)", file="JToken.cs", label="return (Array.IndexOf(validTypes, o.Type) != -1) || (nullable && (o.Type == JTokenType.Null || o.Type == JTokenType.Undefined));", span="444-444"];
m7_108 [cluster="Newtonsoft.Json.Linq.JToken.ValidateToken(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JTokenType[], bool)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.ValidateToken(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JTokenType[], bool)", span="442-442"];
m7_807 [cluster="Newtonsoft.Json.Linq.JsonPath.JPath.Evaluate(Newtonsoft.Json.Linq.JToken, bool)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JsonPath.JPath.Evaluate(Newtonsoft.Json.Linq.JToken, bool)", span="661-661"];
m7_15 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="JToken.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m7_52 [cluster="Newtonsoft.Json.Linq.JToken.Children<T>()", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.Children<T>()", span="344-344"];
m7_53 [cluster="Newtonsoft.Json.Linq.JToken.Children<T>()", file="JToken.cs", label="return new JEnumerable<T>(Children().OfType<T>());", span="346-346"];
m7_54 [cluster="Newtonsoft.Json.Linq.JToken.Children<T>()", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.Children<T>()", span="344-344"];
m7_786 [cluster="Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", file="JToken.cs", label="Entry Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", span="38-38"];
m7_341 [cluster="System.Convert.ToSingle(object, System.IFormatProvider)", file="JToken.cs", label="Entry System.Convert.ToSingle(object, System.IFormatProvider)", span="0-0"];
m7_647 [cluster="Newtonsoft.Json.Linq.JToken.FromObject(object, Newtonsoft.Json.JsonSerializer)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.FromObject(object, Newtonsoft.Json.JsonSerializer)", span="1670-1670"];
m7_648 [cluster="Newtonsoft.Json.Linq.JToken.FromObject(object, Newtonsoft.Json.JsonSerializer)", file="JToken.cs", label="return FromObjectInternal(o, jsonSerializer);", span="1672-1672"];
m7_649 [cluster="Newtonsoft.Json.Linq.JToken.FromObject(object, Newtonsoft.Json.JsonSerializer)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.FromObject(object, Newtonsoft.Json.JsonSerializer)", span="1670-1670"];
m7_553 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.DateTime)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.DateTime)", span="1421-1421"];
m7_554 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.DateTime)", file="JToken.cs", label="return new JValue(value);", span="1423-1423"];
m7_555 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.DateTime)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(System.DateTime)", span="1421-1421"];
m7_791 [cluster="Newtonsoft.Json.Linq.JToken.Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", span="1894-1894"];
m7_792 [cluster="Newtonsoft.Json.Linq.JToken.Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", file="JToken.cs", label="return (_lineNumber != null && _linePosition != null);", span="1896-1896"];
m7_793 [cluster="Newtonsoft.Json.Linq.JToken.Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", span="1894-1894"];
m7_209 [cluster="System.Convert.ToChar(object, System.IFormatProvider)", file="JToken.cs", label="Entry System.Convert.ToChar(object, System.IFormatProvider)", span="0-0"];
m7_55 [cluster="Newtonsoft.Json.Linq.JEnumerable<T>.JEnumerable(System.Collections.Generic.IEnumerable<T>)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JEnumerable<T>.JEnumerable(System.Collections.Generic.IEnumerable<T>)", span="53-53"];
m7_134 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator bool?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.explicit operator bool?(Newtonsoft.Json.Linq.JToken)", span="492-492"];
m7_135 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator bool?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="value == null", span="494-494"];
m7_137 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator bool?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="JValue v = EnsureValue(value)", span="497-497"];
m7_139 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator bool?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="throw new ArgumentException(''Can not convert {0} to Boolean.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="499-499"];
m7_136 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator bool?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return null;", span="495-495"];
m7_138 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator bool?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v == null || !ValidateToken(v, BooleanTypes, true)", span="498-498"];
m7_140 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator bool?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v.Value is BigInteger", span="502-502"];
m7_141 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator bool?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return Convert.ToBoolean((int)(BigInteger)v.Value);", span="503-503"];
m7_142 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator bool?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return (v.Value != null) ? (bool?)Convert.ToBoolean(v.Value, CultureInfo.InvariantCulture) : null;", span="506-506"];
m7_143 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator bool?(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.explicit operator bool?(Newtonsoft.Json.Linq.JToken)", span="492-492"];
m7_465 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ParseTimeSpan(string)", file="JToken.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.ParseTimeSpan(string)", span="232-232"];
m7_30 [cluster="Newtonsoft.Json.Linq.JToken.AfterSelf()", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.AfterSelf()", span="266-266"];
m7_31 [cluster="Newtonsoft.Json.Linq.JToken.AfterSelf()", file="JToken.cs", label="Parent == null", span="268-268"];
m7_32 [cluster="Newtonsoft.Json.Linq.JToken.AfterSelf()", file="JToken.cs", label="yield break;", span="269-269"];
m7_35 [cluster="Newtonsoft.Json.Linq.JToken.AfterSelf()", file="JToken.cs", label="yield return o;", span="273-273"];
m7_33 [cluster="Newtonsoft.Json.Linq.JToken.AfterSelf()", file="JToken.cs", label="JToken o = Next", span="271-271"];
m7_34 [cluster="Newtonsoft.Json.Linq.JToken.AfterSelf()", file="JToken.cs", label="o != null", span="271-271"];
m7_36 [cluster="Newtonsoft.Json.Linq.JToken.AfterSelf()", file="JToken.cs", label="o = o.Next", span="271-271"];
m7_37 [cluster="Newtonsoft.Json.Linq.JToken.AfterSelf()", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.AfterSelf()", span="266-266"];
m7_74 [cluster="Newtonsoft.Json.Linq.JToken.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="387-387"];
m7_75 [cluster="Newtonsoft.Json.Linq.JToken.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="387-387"];
m7_253 [cluster="System.Convert.ToByte(object, System.IFormatProvider)", file="JToken.cs", label="Entry System.Convert.ToByte(object, System.IFormatProvider)", span="0-0"];
m7_641 [cluster="Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", span="74-74"];
m7_228 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator ushort(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.explicit operator ushort(Newtonsoft.Json.Linq.JToken)", span="685-685"];
m7_229 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator ushort(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="JValue v = EnsureValue(value)", span="687-687"];
m7_231 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator ushort(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="throw new ArgumentException(''Can not convert {0} to UInt16.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="689-689"];
m7_230 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator ushort(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v == null || !ValidateToken(v, NumberTypes, false)", span="688-688"];
m7_232 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator ushort(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v.Value is BigInteger", span="692-692"];
m7_233 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator ushort(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return (ushort)(BigInteger)v.Value;", span="693-693"];
m7_234 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator ushort(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return Convert.ToUInt16(v.Value, CultureInfo.InvariantCulture);", span="696-696"];
m7_235 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator ushort(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.explicit operator ushort(Newtonsoft.Json.Linq.JToken)", span="685-685"];
m7_254 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator sbyte(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.explicit operator sbyte(Newtonsoft.Json.Linq.JToken)", span="744-744"];
m7_255 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator sbyte(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="JValue v = EnsureValue(value)", span="746-746"];
m7_257 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator sbyte(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="throw new ArgumentException(''Can not convert {0} to SByte.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="748-748"];
m7_256 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator sbyte(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v == null || !ValidateToken(v, NumberTypes, false)", span="747-747"];
m7_258 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator sbyte(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v.Value is BigInteger", span="751-751"];
m7_259 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator sbyte(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return (sbyte)(BigInteger)v.Value;", span="752-752"];
m7_260 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator sbyte(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return Convert.ToSByte(v.Value, CultureInfo.InvariantCulture);", span="755-755"];
m7_261 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator sbyte(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.explicit operator sbyte(Newtonsoft.Json.Linq.JToken)", span="744-744"];
m7_514 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(byte?)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(byte?)", span="1285-1285"];
m7_515 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(byte?)", file="JToken.cs", label="return new JValue(value);", span="1287-1287"];
m7_516 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(byte?)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(byte?)", span="1285-1285"];
m7_797 [cluster="Newtonsoft.Json.Linq.JToken.SelectToken(string, bool)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.SelectToken(string, bool)", span="1929-1929"];
m7_798 [cluster="Newtonsoft.Json.Linq.JToken.SelectToken(string, bool)", file="JToken.cs", label="JPath p = new JPath(path)", span="1931-1931"];
m7_800 [cluster="Newtonsoft.Json.Linq.JToken.SelectToken(string, bool)", file="JToken.cs", label="p.Evaluate(this, errorWhenNoMatch)", span="1934-1934"];
m7_799 [cluster="Newtonsoft.Json.Linq.JToken.SelectToken(string, bool)", file="JToken.cs", label="JToken token = null", span="1933-1933"];
m7_801 [cluster="Newtonsoft.Json.Linq.JToken.SelectToken(string, bool)", file="JToken.cs", label="token != null", span="1936-1936"];
m7_804 [cluster="Newtonsoft.Json.Linq.JToken.SelectToken(string, bool)", file="JToken.cs", label="return token;", span="1942-1942"];
m7_803 [cluster="Newtonsoft.Json.Linq.JToken.SelectToken(string, bool)", file="JToken.cs", label="token = t", span="1939-1939"];
m7_802 [cluster="Newtonsoft.Json.Linq.JToken.SelectToken(string, bool)", file="JToken.cs", label="throw new JsonException(''Path returned multiple tokens.'');", span="1937-1937"];
m7_805 [cluster="Newtonsoft.Json.Linq.JToken.SelectToken(string, bool)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.SelectToken(string, bool)", span="1929-1929"];
m7_9 [cluster="Newtonsoft.Json.Linq.JToken.AddAfterSelf(object)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.AddAfterSelf(object)", span="228-228"];
m7_10 [cluster="Newtonsoft.Json.Linq.JToken.AddAfterSelf(object)", file="JToken.cs", label="_parent == null", span="230-230"];
m7_13 [cluster="Newtonsoft.Json.Linq.JToken.AddAfterSelf(object)", file="JToken.cs", label="_parent.AddInternal(index + 1, content, false)", span="234-234"];
m7_11 [cluster="Newtonsoft.Json.Linq.JToken.AddAfterSelf(object)", file="JToken.cs", label="throw new InvalidOperationException(''The parent is missing.'');", span="231-231"];
m7_12 [cluster="Newtonsoft.Json.Linq.JToken.AddAfterSelf(object)", file="JToken.cs", label="int index = _parent.IndexOfItem(this)", span="233-233"];
m7_14 [cluster="Newtonsoft.Json.Linq.JToken.AddAfterSelf(object)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.AddAfterSelf(object)", span="228-228"];
m7_313 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTime(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.explicit operator System.DateTime(Newtonsoft.Json.Linq.JToken)", span="875-875"];
m7_314 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTime(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="JValue v = EnsureValue(value)", span="877-877"];
m7_316 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTime(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="throw new ArgumentException(''Can not convert {0} to DateTime.''.FormatWith(CultureInfo.InvariantCulture, GetType(value)));", span="879-879"];
m7_315 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTime(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v == null || !ValidateToken(v, DateTimeTypes, false)", span="878-878"];
m7_317 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTime(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="v.Value is DateTimeOffset", span="882-882"];
m7_318 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTime(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return ((DateTimeOffset)v.Value).DateTime;", span="883-883"];
m7_319 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTime(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return Convert.ToDateTime(v.Value, CultureInfo.InvariantCulture);", span="886-886"];
m7_320 [cluster="Newtonsoft.Json.Linq.JToken.explicit operator System.DateTime(Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.explicit operator System.DateTime(Newtonsoft.Json.Linq.JToken)", span="875-875"];
m7_581 [cluster="Newtonsoft.Json.Linq.JValue.JValue(double)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(double)", span="98-98"];
m7_586 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(string)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(string)", span="1525-1525"];
m7_587 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(string)", file="JToken.cs", label="return new JValue(value);", span="1527-1527"];
m7_588 [cluster="Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(string)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.implicit operator Newtonsoft.Json.Linq.JToken(string)", span="1525-1525"];
m7_4 [cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="150-150"];
m7_5 [cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="return (t1 == t2 || (t1 != null && t2 != null && t1.DeepEquals(t2)));", span="152-152"];
m7_6 [cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JToken.cs", label="Exit Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="150-150"];
m7_830 [file="JToken.cs", label="Newtonsoft.Json.Linq.JToken", span=""];
m8_21 [cluster="Unk.ReadFrom", file="JValue.cs", label="Entry Unk.ReadFrom", span=""];
m8_63 [cluster="XmlDocument.cstr", file="JValue.cs", label="Entry XmlDocument.cstr", span=""];
m8_112 [cluster="Unk.CreateElement", file="JValue.cs", label="Entry Unk.CreateElement", span=""];
m8_244 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", span="642-642"];
m8_245 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", file="JValue.cs", label="string json = @''{\r\n  ''''available_sizes'''': [\r\n    [\r\n      ''''assets/images/resized/0001/1070/11070v1-max-150x150.jpg'''',\r\n      ''''assets/images/resized/0001/1070/11070v1-max-150x150.jpg''''\r\n    ],\r\n    [\r\n      ''''assets/images/resized/0001/1070/11070v1-max-250x250.jpg'''',\r\n      ''''assets/images/resized/0001/1070/11070v1-max-250x250.jpg''''\r\n    ]\r\n  ]\r\n}''", span="644-655"];
m8_246 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", file="JValue.cs", label="XmlDocument newDoc = JsonConvert.DeserializeXmlNode(json, ''myRoot'')", span="657-657"];
m8_248 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", file="JValue.cs", label="XDocument newXDoc = JsonConvert.DeserializeXNode(json, ''myRoot'')", span="662-662"];
m8_247 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", file="JValue.cs", label="Assert.AreEqual(@''<myRoot><available_sizes><available_sizes>assets/images/resized/0001/1070/11070v1-max-150x150.jpg</available_sizes><available_sizes>assets/images/resized/0001/1070/11070v1-max-150x150.jpg</available_sizes></available_sizes><available_sizes><available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes><available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes></available_sizes></myRoot>'', newDoc.InnerXml)", span="659-659"];
m8_249 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", file="JValue.cs", label="Assert.AreEqual(@''<myRoot><available_sizes><available_sizes>assets/images/resized/0001/1070/11070v1-max-150x150.jpg</available_sizes><available_sizes>assets/images/resized/0001/1070/11070v1-max-150x150.jpg</available_sizes></available_sizes><available_sizes><available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes><available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes></available_sizes></myRoot>'', newXDoc.ToString(SaveOptions.DisableFormatting))", span="664-664"];
m8_250 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", span="642-642"];
m8_184 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OtherElementDataTypes()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OtherElementDataTypes()", span="472-472"];
m8_185 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OtherElementDataTypes()", file="JValue.cs", label="string jsonText = @''{''''?xml'''':{''''@version'''':''''1.0'''',''''@standalone'''':''''no''''},''''root'''':{''''person'''':[{''''@id'''':''''1'''',''''Float'''':2.5,''''Integer'''':99},{''''@id'''':''''2'''',''''Boolean'''':true,''''date'''':''''\/Date(954374400000)\/''''}]}}''", span="474-474"];
m8_186 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OtherElementDataTypes()", file="JValue.cs", label="XmlDocument newDoc = (XmlDocument)DeserializeXmlNode(jsonText)", span="476-476"];
m8_187 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OtherElementDataTypes()", file="JValue.cs", label="string expected = @''<?xml version=''''1.0'''' standalone=''''no''''?><root><person id=''''1''''><Float>2.5</Float><Integer>99</Integer></person><person id=''''2''''><Boolean>true</Boolean><date>2000-03-30T00:00:00Z</date></person></root>''", span="478-478"];
m8_188 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OtherElementDataTypes()", file="JValue.cs", label="Assert.AreEqual(expected, newDoc.InnerXml)", span="480-480"];
m8_189 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OtherElementDataTypes()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OtherElementDataTypes()", span="472-472"];
m8_308 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JValue.cs", label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="103-103"];
m8_46 [cluster="System.IO.StringReader.StringReader(string)", file="JValue.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m8_153 [cluster="Unk.GetIndentedInnerXml", file="JValue.cs", label="Entry Unk.GetIndentedInnerXml", span=""];
m8_230 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXDocument()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXDocument()", span="617-617"];
m8_231 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXDocument()", file="JValue.cs", label="string json = @''{''''count'''': 773840,''''photos'''': null}''", span="619-619"];
m8_232 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXDocument()", file="JValue.cs", label="JsonConvert.DeserializeXNode(json)", span="621-621"];
m8_233 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXDocument()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXDocument()", span="617-617"];
m8_251 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", span="669-669"];
m8_252 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", file="JValue.cs", label="string json = @''{\r\n  ''''available_sizes'''': [\r\n    [\r\n      [113, 150],\r\n      ''''assets/images/resized/0001/1070/11070v1-max-150x150.jpg''''\r\n    ],\r\n    [\r\n      [189, 250],\r\n      ''''assets/images/resized/0001/1070/11070v1-max-250x250.jpg''''\r\n    ],\r\n    [\r\n      [341, 450],\r\n      ''''assets/images/resized/0001/1070/11070v1-max-450x450.jpg''''\r\n    ]\r\n  ]\r\n}''", span="671-686"];
m8_253 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", file="JValue.cs", label="XmlDocument newDoc = JsonConvert.DeserializeXmlNode(json, ''myRoot'')", span="688-688"];
m8_255 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", file="JValue.cs", label="XDocument newXDoc = JsonConvert.DeserializeXNode(json, ''myRoot'')", span="693-693"];
m8_254 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", file="JValue.cs", label="Assert.AreEqual(@''<myRoot><available_sizes><available_sizes><available_sizes>113</available_sizes><available_sizes>150</available_sizes></available_sizes><available_sizes>assets/images/resized/0001/1070/11070v1-max-150x150.jpg</available_sizes></available_sizes><available_sizes><available_sizes><available_sizes>189</available_sizes><available_sizes>250</available_sizes></available_sizes><available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes></available_sizes><available_sizes><available_sizes><available_sizes>341</available_sizes><available_sizes>450</available_sizes></available_sizes><available_sizes>assets/images/resized/0001/1070/11070v1-max-450x450.jpg</available_sizes></available_sizes></myRoot>'', newDoc.InnerXml)", span="690-690"];
m8_256 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", file="JValue.cs", label="Assert.AreEqual(@''<myRoot><available_sizes><available_sizes><available_sizes>113</available_sizes><available_sizes>150</available_sizes></available_sizes><available_sizes>assets/images/resized/0001/1070/11070v1-max-150x150.jpg</available_sizes></available_sizes><available_sizes><available_sizes><available_sizes>189</available_sizes><available_sizes>250</available_sizes></available_sizes><available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes></available_sizes><available_sizes><available_sizes><available_sizes>341</available_sizes><available_sizes>450</available_sizes></available_sizes><available_sizes>assets/images/resized/0001/1070/11070v1-max-450x450.jpg</available_sizes></available_sizes></myRoot>'', newXDoc.ToString(SaveOptions.DisableFormatting))", span="695-695"];
m8_257 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", span="669-669"];
m8_197 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", span="498-498"];
m8_198 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="JValue.cs", label="string jsonText = @''{root:{r:new Date(34343, 55)}}''", span="500-500"];
m8_199 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="JValue.cs", label="XmlDocument newDoc = (XmlDocument)DeserializeXmlNode(jsonText)", span="502-502"];
m8_200 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="JValue.cs", label="string expected = @''<root><r><Date>34343</Date><Date>55</Date></r></root>''", span="504-504"];
m8_201 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="JValue.cs", label="Assert.AreEqual(expected, newDoc.InnerXml)", span="506-506"];
m8_202 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="JValue.cs", label="string json = SerializeXmlNode(newDoc)", span="508-508"];
m8_203 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="JValue.cs", label="expected = @''{\r\n  ''''root'''': {\r\n    ''''r'''': {\r\n      ''''Date'''': [\r\n        ''''34343'''',\r\n        ''''55''''\r\n      ]\r\n    }\r\n  }\r\n}''", span="509-518"];
m8_204 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="JValue.cs", label="Assert.AreEqual(expected, json)", span="520-520"];
m8_205 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", span="498-498"];
m8_65 [cluster="Unk.SerializeXmlNode", file="JValue.cs", label="Entry Unk.SerializeXmlNode", span=""];
m8_243 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXNode(string, string)", file="JValue.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeXNode(string, string)", span="819-819"];
m8_47 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JValue.cs", label="Entry Newtonsoft.Json.JsonTextReader.Read()", span="250-250"];
m8_309 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JValue.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="571-571"];
m8_190 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NoRootObject()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NoRootObject()", span="485-485"];
m8_191 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NoRootObject()", file="JValue.cs", label="XmlDocument newDoc = (XmlDocument)JsonConvert.DeserializeXmlNode(@''[1]'')", span="487-487"];
m8_192 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NoRootObject()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NoRootObject()", span="485-485"];
m8_194 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RootObjectMultipleProperties()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RootObjectMultipleProperties()", span="492-492"];
m8_195 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RootObjectMultipleProperties()", file="JValue.cs", label="XmlDocument newDoc = (XmlDocument)JsonConvert.DeserializeXmlNode(@''{Prop1:1,Prop2:2}'')", span="494-494"];
m8_196 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RootObjectMultipleProperties()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RootObjectMultipleProperties()", span="492-492"];
m8_107 [cluster="Unk.Element", file="JValue.cs", label="Entry Unk.Element", span=""];
m8_50 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="JValue.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", span="1020-1020"];
m8_17 [cluster="Unk.Load", file="JValue.cs", label="Entry Unk.Load", span=""];
m8_175 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", span="445-445"];
m8_176 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", file="JValue.cs", label="string xml = @''<?xml version=''''1.0'''' standalone=''''no''''?>\r\n			<root>\r\n			  <person id=''''1''''>\r\n				<name>Alan</name>\r\n				<url />\r\n			  </person>\r\n			  <person id=''''2''''>\r\n				<name>Louis</name>\r\n				<url>http://www.yahoo.com</url>\r\n			  </person>\r\n			</root>''", span="447-457"];
m8_177 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", file="JValue.cs", label="XmlDocument doc = new XmlDocument()", span="459-459"];
m8_178 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", file="JValue.cs", label="doc.LoadXml(xml)", span="460-460"];
m8_179 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", file="JValue.cs", label="string jsonText = SerializeXmlNode(doc)", span="462-462"];
m8_182 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", file="JValue.cs", label="Assert.AreEqual(doc.InnerXml, newDoc.InnerXml)", span="468-468"];
m8_180 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", file="JValue.cs", label="Console.WriteLine(jsonText)", span="464-464"];
m8_181 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", file="JValue.cs", label="XmlDocument newDoc = (XmlDocument)DeserializeXmlNode(jsonText)", span="466-466"];
m8_183 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", span="445-445"];
m8_234 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXNode(string)", file="JValue.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeXNode(string)", span="808-808"];
m8_64 [cluster="Unk.LoadXml", file="JValue.cs", label="Entry Unk.LoadXml", span=""];
m8_285 [cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="335-335"];
m8_292 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeSpecialProperties()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeSpecialProperties()", span="860-860"];
m8_293 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeSpecialProperties()", file="JValue.cs", label="PreserveReferencesHandlingTests.CircularDictionary circularDictionary = new PreserveReferencesHandlingTests.CircularDictionary()", span="862-862"];
m8_294 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeSpecialProperties()", file="JValue.cs", label="circularDictionary.Add(''other'', new PreserveReferencesHandlingTests.CircularDictionary { { ''blah'', null } })", span="863-863"];
m8_295 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeSpecialProperties()", file="JValue.cs", label="circularDictionary.Add(''self'', circularDictionary)", span="864-864"];
m8_296 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeSpecialProperties()", file="JValue.cs", label="string json = JsonConvert.SerializeObject(circularDictionary, Formatting.Indented,\r\n        new JsonSerializerSettings { PreserveReferencesHandling = PreserveReferencesHandling.All })", span="866-867"];
m8_297 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeSpecialProperties()", file="JValue.cs", label="Assert.AreEqual(@''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''other'''': {\r\n    ''''$id'''': ''''2'''',\r\n    ''''blah'''': null\r\n  },\r\n  ''''self'''': {\r\n    ''''$ref'''': ''''1''''\r\n  }\r\n}'', json)", span="869-878"];
m8_298 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeSpecialProperties()", file="JValue.cs", label="XmlNode node = DeserializeXmlNode(json, ''root'')", span="880-880"];
m8_299 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeSpecialProperties()", file="JValue.cs", label="string xml = GetIndentedInnerXml(node)", span="881-881"];
m8_302 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeSpecialProperties()", file="JValue.cs", label="string xmlJson = SerializeXmlNode(node)", span="892-892"];
m8_300 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeSpecialProperties()", file="JValue.cs", label="string expected = @''<?xml version=''''1.0'''' encoding=''''utf-16''''?>\r\n<root xmlns:json=''''http://james.newtonking.com/projects/json'''' json:id=''''1''''>\r\n  <other json:id=''''2''''>\r\n    <blah />\r\n  </other>\r\n  <self json:ref=''''1'''' />\r\n</root>''", span="882-888"];
m8_301 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeSpecialProperties()", file="JValue.cs", label="Assert.AreEqual(expected, xml)", span="890-890"];
m8_303 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeSpecialProperties()", file="JValue.cs", label="string expectedXmlJson = @''{\r\n  ''''root'''': {\r\n    ''''$id'''': ''''1'''',\r\n    ''''other'''': {\r\n      ''''$id'''': ''''2'''',\r\n      ''''blah'''': null\r\n    },\r\n    ''''self'''': {\r\n      ''''$ref'''': ''''1''''\r\n    }\r\n  }\r\n}''", span="893-904"];
m8_304 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeSpecialProperties()", file="JValue.cs", label="Assert.AreEqual(expectedXmlJson, xmlJson)", span="906-906"];
m8_305 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeSpecialProperties()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeSpecialProperties()", span="860-860"];
m8_22 [cluster="Newtonsoft.Json.JsonConvert.SerializeXNode(XObject, Newtonsoft.Json.Formatting)", file="JValue.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeXNode(XObject, Newtonsoft.Json.Formatting)", span="746-746"];
m8_49 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JValue.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="268-268"];
m8_284 [cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="JValue.cs", label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="275-275"];
m8_307 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="JValue.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m8_24 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string)", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string)", span="73-73"];
m8_25 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string)", file="JValue.cs", label="return DeserializeXmlNode(json, null);", span="75-75"];
m8_26 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string)", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string)", span="73-73"];
m8_163 [cluster="System.IO.StringWriter.StringWriter()", file="JValue.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m8_52 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", span="108-108"];
m8_53 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", file="JValue.cs", label="string xml = @''<?xml version=''''1.0'''' standalone=''''no''''?>\r\n<?xml-stylesheet href=''''classic.xsl'''' type=''''text/xml''''?>\r\n<span class=''''vevent''''>\r\n  <a class=''''url'''' href=''''http://www.web2con.com/''''>\r\n    <span class=''''summary''''>Web 2.0 Conference<![CDATA[my escaped text]]></span>\r\n    <abbr class=''''dtstart'''' title=''''2005-10-05''''>October 5</abbr>\r\n    <abbr class=''''dtend'''' title=''''2005-10-08''''>7</abbr>\r\n    <span class=''''location''''>Argent Hotel, San Francisco, CA</span>\r\n  </a>\r\n</span>''", span="110-119"];
m8_54 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", file="JValue.cs", label="XmlDocument doc = new XmlDocument()", span="120-120"];
m8_55 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", file="JValue.cs", label="doc.LoadXml(xml)", span="121-121"];
m8_56 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", file="JValue.cs", label="string jsonText = SerializeXmlNode(doc)", span="123-123"];
m8_57 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", file="JValue.cs", label="string expected = @''{\r\n  ''''?xml'''': {\r\n    ''''@version'''': ''''1.0'''',\r\n    ''''@standalone'''': ''''no''''\r\n  },\r\n  ''''?xml-stylesheet'''': ''''href=\''''classic.xsl\'''' type=\''''text/xml\'''''''',\r\n  ''''span'''': {\r\n    ''''@class'''': ''''vevent'''',\r\n    ''''a'''': {\r\n      ''''@class'''': ''''url'''',\r\n      ''''@href'''': ''''http://www.web2con.com/'''',\r\n      ''''span'''': [\r\n        {\r\n          ''''@class'''': ''''summary'''',\r\n          ''''#text'''': ''''Web 2.0 Conference'''',\r\n          ''''#cdata-section'''': ''''my escaped text''''\r\n        },\r\n        {\r\n          ''''@class'''': ''''location'''',\r\n          ''''#text'''': ''''Argent Hotel, San Francisco, CA''''\r\n        }\r\n      ],\r\n      ''''abbr'''': [\r\n        {\r\n          ''''@class'''': ''''dtstart'''',\r\n          ''''@title'''': ''''2005-10-05'''',\r\n          ''''#text'''': ''''October 5''''\r\n        },\r\n        {\r\n          ''''@class'''': ''''dtend'''',\r\n          ''''@title'''': ''''2005-10-08'''',\r\n          ''''#text'''': ''''7''''\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}''", span="124-160"];
m8_58 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", file="JValue.cs", label="Assert.AreEqual(expected, jsonText)", span="162-162"];
m8_60 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", file="JValue.cs", label="Console.WriteLine(jsonText)", span="165-165"];
m8_59 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", file="JValue.cs", label="Console.WriteLine(''DocumentSerializeIndented'')", span="164-164"];
m8_61 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", file="JValue.cs", label="Console.WriteLine()", span="166-166"];
m8_62 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", span="108-108"];
m8_111 [cluster="Unk.CreateCDataSection", file="JValue.cs", label="Entry Unk.CreateCDataSection", span=""];
m8_235 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", span="626-626"];
m8_236 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", file="JValue.cs", label="string json = @''{''''count'''': 773840,''''photos'''': 773840}''", span="628-628"];
m8_237 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", file="JValue.cs", label="XmlDocument newDoc = JsonConvert.DeserializeXmlNode(json, ''myRoot'')", span="630-630"];
m8_239 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", file="JValue.cs", label="XDocument newXDoc = JsonConvert.DeserializeXNode(json, ''myRoot'')", span="635-635"];
m8_238 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", file="JValue.cs", label="Assert.AreEqual(@''<myRoot><count>773840</count><photos>773840</photos></myRoot>'', newDoc.InnerXml)", span="632-632"];
m8_240 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", file="JValue.cs", label="Assert.AreEqual(@''<myRoot><count>773840</count><photos>773840</photos></myRoot>'', newXDoc.ToString(SaveOptions.DisableFormatting))", span="637-637"];
m8_241 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", span="626-626"];
m8_108 [cluster="Unk.Attribute", file="JValue.cs", label="Entry Unk.Attribute", span=""];
m8_116 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", span="256-256"];
m8_117 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="JValue.cs", label="XmlDocument doc = new XmlDocument()", span="258-258"];
m8_118 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="JValue.cs", label="XmlDocumentFragment fragement = doc.CreateDocumentFragment()", span="260-260"];
m8_119 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="JValue.cs", label="fragement.InnerXml = ''<Item>widget</Item><Item>widget</Item>''", span="262-262"];
m8_120 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="JValue.cs", label="string jsonText = JsonConvert.SerializeXmlNode(fragement)", span="264-264"];
m8_121 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="JValue.cs", label="string expected = @''{''''Item'''':[''''widget'''',''''widget'''']}''", span="266-266"];
m8_122 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="JValue.cs", label="Assert.AreEqual(expected, jsonText)", span="268-268"];
m8_124 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="JValue.cs", label="Console.WriteLine(jsonText)", span="271-271"];
m8_123 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="JValue.cs", label="Console.WriteLine(''DocumentFragmentSerialize'')", span="270-270"];
m8_125 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="JValue.cs", label="Console.WriteLine()", span="272-272"];
m8_126 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", span="256-256"];
m8_66 [cluster="System.Console.WriteLine(string)", file="JValue.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m8_109 [cluster="Unk.SerializeXNode", file="JValue.cs", label="Entry Unk.SerializeXNode", span=""];
m8_16 [cluster="XmlNodeReader.cstr", file="JValue.cs", label="Entry XmlNodeReader.cstr", span=""];
m8_110 [cluster="Unk.CreateProcessingInstruction", file="JValue.cs", label="Entry Unk.CreateProcessingInstruction", span=""];
m8_154 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", span="404-404"];
m8_155 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", file="JValue.cs", label="XmlWriterSettings settings = new XmlWriterSettings()", span="406-406"];
m8_159 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", file="JValue.cs", label="node.WriteTo(writer)", span="413-413"];
m8_156 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", file="JValue.cs", label="settings.Indent = true", span="407-407"];
m8_157 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", file="JValue.cs", label="StringWriter sw = new StringWriter()", span="409-409"];
m8_158 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", file="JValue.cs", label="XmlWriter writer = XmlWriter.Create(sw, settings)", span="411-411"];
m8_160 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", file="JValue.cs", label="return sw.ToString();", span="416-416"];
m8_161 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", span="404-404"];
m8_162 [cluster="XmlWriterSettings.cstr", file="JValue.cs", label="Entry XmlWriterSettings.cstr", span=""];
m8_193 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string)", file="JValue.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string)", span="783-783"];
m8_23 [cluster="Unk.AreEqual", file="JValue.cs", label="Entry Unk.AreEqual", span=""];
m8_258 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Encoding()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Encoding()", span="700-700"];
m8_259 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Encoding()", file="JValue.cs", label="XmlDocument doc = new XmlDocument()", span="702-702"];
m8_260 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Encoding()", file="JValue.cs", label="doc.LoadXml(@''<name>O''''Connor</name>'')", span="704-704"];
m8_261 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Encoding()", file="JValue.cs", label="string json = SerializeXmlNode(doc)", span="706-706"];
m8_262 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Encoding()", file="JValue.cs", label="Assert.AreEqual(@''{\r\n  ''''name'''': ''''O\''''Connor''''\r\n}'', json)", span="707-709"];
m8_263 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Encoding()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Encoding()", span="700-700"];
m8_113 [cluster="Unk.CreateAttribute", file="JValue.cs", label="Entry Unk.CreateAttribute", span=""];
m8_19 [cluster="Unk.Get", file="JValue.cs", label="Entry Unk.Get", span=""];
m8_106 [cluster="Unk.Parse", file="JValue.cs", label="Entry Unk.Parse", span=""];
m8_51 [cluster="Unk.ToString", file="JValue.cs", label="Entry Unk.ToString", span=""];
m8_48 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.XmlNodeConverter()", file="JValue.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.XmlNodeConverter()", span="729-729"];
m8_115 [cluster="Unk.AppendChild", file="JValue.cs", label="Entry Unk.AppendChild", span=""];
m8_127 [cluster="Unk.CreateDocumentFragment", file="JValue.cs", label="Entry Unk.CreateDocumentFragment", span=""];
m8_20 [cluster="Unk.MoveToContent", file="JValue.cs", label="Entry Unk.MoveToContent", span=""];
m8_18 [cluster="XAttribute.cstr", file="JValue.cs", label="Entry XAttribute.cstr", span=""];
m8_264 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", span="713-713"];
m8_265 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", file="JValue.cs", label="string xml = @''<span class=''''vevent''''>\r\n  <a class=''''url'''' href=''''http://www.web2con.com/''''>Text</a><!-- Hi! -->\r\n</span>''", span="715-717"];
m8_266 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", file="JValue.cs", label="XmlDocument doc = new XmlDocument()", span="718-718"];
m8_267 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", file="JValue.cs", label="doc.LoadXml(xml)", span="719-719"];
m8_268 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", file="JValue.cs", label="string jsonText = SerializeXmlNode(doc)", span="721-721"];
m8_269 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", file="JValue.cs", label="string expected = @''{\r\n  ''''span'''': {\r\n    ''''@class'''': ''''vevent'''',\r\n    ''''a'''': {\r\n      ''''@class'''': ''''url'''',\r\n      ''''@href'''': ''''http://www.web2con.com/'''',\r\n      ''''#text'''': ''''Text''''\r\n    }/* Hi! */\r\n  }\r\n}''", span="723-732"];
m8_270 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", file="JValue.cs", label="Assert.AreEqual(expected, jsonText)", span="734-734"];
m8_271 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", file="JValue.cs", label="XmlDocument newDoc = (XmlDocument)DeserializeXmlNode(jsonText)", span="736-736"];
m8_272 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", file="JValue.cs", label="Assert.AreEqual(@''<span class=''''vevent''''><a class=''''url'''' href=''''http://www.web2con.com/''''>Text</a><!-- Hi! --></span>'', newDoc.InnerXml)", span="737-737"];
m8_273 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", span="713-713"];
m8_68 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", span="170-170"];
m8_69 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JValue.cs", label="XmlDocument doc = new XmlDocument()", span="172-172"];
m8_70 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JValue.cs", label="string jsonText", span="173-173"];
m8_84 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JValue.cs", label="XmlProcessingInstruction instruction = doc.CreateProcessingInstruction(''xml-stylesheet'', @''href=''''classic.xsl'''' type=''''text/xml'''''')", span="208-208"];
m8_88 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JValue.cs", label="XmlCDataSection cDataSection = doc.CreateCDataSection(''<Kiwi>true</Kiwi>'')", span="217-217"];
m8_92 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JValue.cs", label="XmlElement element = doc.CreateElement(''xs'', ''Choice'', ''http://www.w3.org/2001/XMLSchema'')", span="226-226"];
m8_93 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JValue.cs", label="element.SetAttributeNode(doc.CreateAttribute(''msdata'', ''IsDataSet'', ''urn:schemas-microsoft-com:xml-msdata''))", span="227-227"];
m8_94 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JValue.cs", label="XmlAttribute aa = doc.CreateAttribute(@''xmlns'', ''xs'', ''http://www.w3.org/2000/xmlns/'')", span="229-229"];
m8_97 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JValue.cs", label="aa = doc.CreateAttribute(@''xmlns'', ''msdata'', ''http://www.w3.org/2000/xmlns/'')", span="233-233"];
m8_102 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JValue.cs", label="doc.AppendChild(element)", span="240-240"];
m8_71 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JValue.cs", label="Console.WriteLine(''SerializeNodeTypes'')", span="175-175"];
m8_72 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JValue.cs", label="string xml = @''<?xml version=''''1.0'''' encoding=''''utf-8'''' ?>\r\n<xs:schema xs:id=''''SomeID'''' \r\n	xmlns='''''''' \r\n	xmlns:xs=''''http://www.w3.org/2001/XMLSchema'''' \r\n	xmlns:msdata=''''urn:schemas-microsoft-com:xml-msdata''''>\r\n	<xs:element name=''''MyDataSet'''' msdata:IsDataSet=''''true''''>\r\n	</xs:element>\r\n</xs:schema>''", span="177-184"];
m8_73 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JValue.cs", label="XmlDocument document = new XmlDocument()", span="186-186"];
m8_74 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JValue.cs", label="document.LoadXml(xml)", span="187-187"];
m8_80 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JValue.cs", label="XDocument d = XDocument.Parse(xml)", span="199-199"];
m8_75 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JValue.cs", label="XmlAttribute attribute = document.DocumentElement.ChildNodes[0].Attributes[''IsDataSet'', ''urn:schemas-microsoft-com:xml-msdata'']", span="190-190"];
m8_76 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JValue.cs", label="attribute.Value = ''true''", span="191-191"];
m8_77 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JValue.cs", label="jsonText = JsonConvert.SerializeXmlNode(attribute)", span="193-193"];
m8_78 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JValue.cs", label="Console.WriteLine(jsonText)", span="195-195"];
m8_79 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JValue.cs", label="Assert.AreEqual(@''{''''@msdata:IsDataSet'''':''''true''''}'', jsonText)", span="196-196"];
m8_81 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JValue.cs", label="XAttribute a = d.Root.Element(''{http://www.w3.org/2001/XMLSchema}element'').Attribute(''{urn:schemas-microsoft-com:xml-msdata}IsDataSet'')", span="200-200"];
m8_82 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JValue.cs", label="jsonText = JsonConvert.SerializeXNode(a)", span="202-202"];
m8_83 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JValue.cs", label="Assert.AreEqual(@''{''''@msdata:IsDataSet'''':''''true''''}'', jsonText)", span="204-204"];
m8_85 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JValue.cs", label="jsonText = JsonConvert.SerializeXmlNode(instruction)", span="210-210"];
m8_100 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JValue.cs", label="element.AppendChild(instruction)", span="237-237"];
m8_86 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JValue.cs", label="Console.WriteLine(jsonText)", span="212-212"];
m8_87 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JValue.cs", label="Assert.AreEqual(@''{''''?xml-stylesheet'''':''''href=\''''classic.xsl\'''' type=\''''text/xml\''''''''}'', jsonText)", span="213-213"];
m8_89 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JValue.cs", label="jsonText = JsonConvert.SerializeXmlNode(cDataSection)", span="219-219"];
m8_101 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JValue.cs", label="element.AppendChild(cDataSection)", span="238-238"];
m8_90 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JValue.cs", label="Console.WriteLine(jsonText)", span="221-221"];
m8_91 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JValue.cs", label="Assert.AreEqual(@''{''''#cdata-section'''':''''<Kiwi>true</Kiwi>''''}'', jsonText)", span="222-222"];
m8_96 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JValue.cs", label="element.SetAttributeNode(aa)", span="231-231"];
m8_99 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JValue.cs", label="element.SetAttributeNode(aa)", span="235-235"];
m8_103 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JValue.cs", label="jsonText = JsonConvert.SerializeXmlNode(element, Formatting.Indented)", span="242-242"];
m8_95 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JValue.cs", label="aa.Value = ''http://www.w3.org/2001/XMLSchema''", span="230-230"];
m8_98 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JValue.cs", label="aa.Value = ''urn:schemas-microsoft-com:xml-msdata''", span="234-234"];
m8_104 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JValue.cs", label="Assert.AreEqual(@''{\r\n  ''''xs:Choice'''': {\r\n    ''''@msdata:IsDataSet'''': '''''''',\r\n    ''''@xmlns:xs'''': ''''http://www.w3.org/2001/XMLSchema'''',\r\n    ''''@xmlns:msdata'''': ''''urn:schemas-microsoft-com:xml-msdata'''',\r\n    ''''?xml-stylesheet'''': ''''href=\''''classic.xsl\'''' type=\''''text/xml\'''''''',\r\n    ''''#cdata-section'''': ''''<Kiwi>true</Kiwi>''''\r\n  }\r\n}'', jsonText)", span="244-252"];
m8_105 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", span="170-170"];
m8_142 [cluster="Unk.WriteLine", file="JValue.cs", label="Entry Unk.WriteLine", span=""];
m8_164 [cluster="Unk.Create", file="JValue.cs", label="Entry Unk.Create", span=""];
m8_0 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", span="43-43"];
m8_1 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="JValue.cs", label="string json = JsonConvert.SerializeXmlNode(node, Formatting.Indented)", span="45-45"];
m8_2 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="JValue.cs", label="XmlNodeReader reader = new XmlNodeReader(node)", span="46-46"];
m8_4 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="JValue.cs", label="node is XmlDocument", span="50-50"];
m8_6 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="JValue.cs", label="node is XmlAttribute", span="54-54"];
m8_7 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="JValue.cs", label="XmlAttribute attribute = (XmlAttribute) node", span="56-56"];
m8_12 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="JValue.cs", label="Assert.AreEqual(json, linqJson)", span="67-67"];
m8_13 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="JValue.cs", label="return json;", span="70-70"];
m8_3 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="JValue.cs", label="XObject xNode", span="49-49"];
m8_5 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="JValue.cs", label="xNode = XDocument.Load(reader)", span="52-52"];
m8_9 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="JValue.cs", label="reader.MoveToContent()", span="61-61"];
m8_10 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="JValue.cs", label="xNode = XNode.ReadFrom(reader)", span="62-62"];
m8_8 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="JValue.cs", label="xNode = new XAttribute(XName.Get(attribute.LocalName, attribute.NamespaceURI), attribute.Value)", span="57-57"];
m8_11 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="JValue.cs", label="string linqJson = JsonConvert.SerializeXNode(xNode, Formatting.Indented)", span="65-65"];
m8_14 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", span="43-43"];
m8_165 [cluster="Unk.WriteTo", file="JValue.cs", label="Entry Unk.WriteTo", span=""];
m8_166 [cluster="System.IO.StringWriter.ToString()", file="JValue.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m8_291 [cluster="string.Replace(string, string)", file="JValue.cs", label="Entry string.Replace(string, string)", span="0-0"];
m8_167 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleTextNode()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleTextNode()", span="420-420"];
m8_168 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleTextNode()", file="JValue.cs", label="string xml = @''<?xml version=''''1.0'''' standalone=''''no''''?>\r\n			<root>\r\n			  <person id=''''1''''>\r\n				<name>Alan</name>\r\n				<url>http://www.google.com</url>\r\n			  </person>\r\n			  <person id=''''2''''>\r\n				<name>Louis</name>\r\n				<url>http://www.yahoo.com</url>\r\n			  </person>\r\n			</root>''", span="422-432"];
m8_169 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleTextNode()", file="JValue.cs", label="XmlDocument doc = new XmlDocument()", span="434-434"];
m8_170 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleTextNode()", file="JValue.cs", label="doc.LoadXml(xml)", span="435-435"];
m8_171 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleTextNode()", file="JValue.cs", label="string jsonText = SerializeXmlNode(doc)", span="437-437"];
m8_173 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleTextNode()", file="JValue.cs", label="Assert.AreEqual(doc.InnerXml, newDoc.InnerXml)", span="441-441"];
m8_172 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleTextNode()", file="JValue.cs", label="XmlDocument newDoc = (XmlDocument)DeserializeXmlNode(jsonText)", span="439-439"];
m8_174 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleTextNode()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleTextNode()", span="420-420"];
m8_206 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", span="524-524"];
m8_207 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="JValue.cs", label="string arrayXml = @''<root xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n			  <person id=''''1''''>\r\n				  <name>Alan</name>\r\n				  <url>http://www.google.com</url>\r\n				  <role json:Array=''''true''''>Admin</role>\r\n			  </person>\r\n			</root>''", span="526-532"];
m8_208 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="JValue.cs", label="XmlDocument arrayDoc = new XmlDocument()", span="534-534"];
m8_209 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="JValue.cs", label="arrayDoc.LoadXml(arrayXml)", span="535-535"];
m8_210 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="JValue.cs", label="string arrayJsonText = SerializeXmlNode(arrayDoc)", span="537-537"];
m8_211 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="JValue.cs", label="string expected = @''{\r\n  ''''root'''': {\r\n    ''''person'''': {\r\n      ''''@id'''': ''''1'''',\r\n      ''''name'''': ''''Alan'''',\r\n      ''''url'''': ''''http://www.google.com'''',\r\n      ''''role'''': [\r\n        ''''Admin''''\r\n      ]\r\n    }\r\n  }\r\n}''", span="538-549"];
m8_212 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="JValue.cs", label="Assert.AreEqual(expected, arrayJsonText)", span="550-550"];
m8_213 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="JValue.cs", label="arrayXml = @''<root xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n			  <person id=''''1''''>\r\n				  <name>Alan</name>\r\n				  <url>http://www.google.com</url>\r\n				  <role json:Array=''''true''''>Admin1</role>\r\n				  <role json:Array=''''true''''>Admin2</role>\r\n			  </person>\r\n			</root>''", span="552-559"];
m8_214 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="JValue.cs", label="arrayDoc = new XmlDocument()", span="561-561"];
m8_215 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="JValue.cs", label="arrayDoc.LoadXml(arrayXml)", span="562-562"];
m8_216 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="JValue.cs", label="arrayJsonText = SerializeXmlNode(arrayDoc)", span="564-564"];
m8_217 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="JValue.cs", label="expected = @''{\r\n  ''''root'''': {\r\n    ''''person'''': {\r\n      ''''@id'''': ''''1'''',\r\n      ''''name'''': ''''Alan'''',\r\n      ''''url'''': ''''http://www.google.com'''',\r\n      ''''role'''': [\r\n        ''''Admin1'''',\r\n        ''''Admin2''''\r\n      ]\r\n    }\r\n  }\r\n}''", span="565-577"];
m8_218 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="JValue.cs", label="Assert.AreEqual(expected, arrayJsonText)", span="578-578"];
m8_219 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="JValue.cs", label="arrayXml = @''<root xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n			  <person id=''''1''''>\r\n				  <name>Alan</name>\r\n				  <url>http://www.google.com</url>\r\n				  <role json:Array=''''false''''>Admin1</role>\r\n			  </person>\r\n			</root>''", span="580-586"];
m8_220 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="JValue.cs", label="arrayDoc = new XmlDocument()", span="588-588"];
m8_221 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="JValue.cs", label="arrayDoc.LoadXml(arrayXml)", span="589-589"];
m8_222 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="JValue.cs", label="arrayJsonText = SerializeXmlNode(arrayDoc)", span="591-591"];
m8_223 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="JValue.cs", label="expected = @''{\r\n  ''''root'''': {\r\n    ''''person'''': {\r\n      ''''@id'''': ''''1'''',\r\n      ''''name'''': ''''Alan'''',\r\n      ''''url'''': ''''http://www.google.com'''',\r\n      ''''role'''': ''''Admin1''''\r\n    }\r\n  }\r\n}''", span="592-601"];
m8_224 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="JValue.cs", label="Assert.AreEqual(expected, arrayJsonText)", span="602-602"];
m8_225 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", span="524-524"];
m8_45 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JValue.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="51-51"];
m8_114 [cluster="Unk.SetAttributeNode", file="JValue.cs", label="Entry Unk.SetAttributeNode", span=""];
m8_128 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", span="276-276"];
m8_129 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="JValue.cs", label="string xml = @''<?xml version=''''1.0'''' encoding=''''utf-8'''' ?>\r\n<xs:schema xs:id=''''SomeID'''' \r\n	xmlns='''''''' \r\n	xmlns:xs=''''http://www.w3.org/2001/XMLSchema'''' \r\n	xmlns:msdata=''''urn:schemas-microsoft-com:xml-msdata''''>\r\n	<xs:element name=''''MyDataSet'''' msdata:IsDataSet=''''true''''>\r\n		<xs:complexType>\r\n			<xs:choice maxOccurs=''''unbounded''''>\r\n				<xs:element name=''''customers'''' >\r\n					<xs:complexType >\r\n						<xs:sequence>\r\n							<xs:element name=''''CustomerID'''' type=''''xs:integer'''' \r\n										 minOccurs=''''0'''' />\r\n							<xs:element name=''''CompanyName'''' type=''''xs:string'''' \r\n										 minOccurs=''''0'''' />\r\n							<xs:element name=''''Phone'''' type=''''xs:string'''' />\r\n						</xs:sequence>\r\n					</xs:complexType>\r\n				</xs:element>\r\n			</xs:choice>\r\n		</xs:complexType>\r\n	</xs:element>\r\n</xs:schema>''", span="278-300"];
m8_130 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="JValue.cs", label="XmlDocument doc = new XmlDocument()", span="302-302"];
m8_131 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="JValue.cs", label="doc.LoadXml(xml)", span="303-303"];
m8_132 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="JValue.cs", label="string jsonText = SerializeXmlNode(doc)", span="305-305"];
m8_136 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="JValue.cs", label="Assert.AreEqual(doc.InnerXml, deserializedDoc.InnerXml)", span="356-356"];
m8_133 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="JValue.cs", label="string expected = @''{\r\n  ''''?xml'''': {\r\n    ''''@version'''': ''''1.0'''',\r\n    ''''@encoding'''': ''''utf-8''''\r\n  },\r\n  ''''xs:schema'''': {\r\n    ''''@xs:id'''': ''''SomeID'''',\r\n    ''''@xmlns'''': '''''''',\r\n    ''''@xmlns:xs'''': ''''http://www.w3.org/2001/XMLSchema'''',\r\n    ''''@xmlns:msdata'''': ''''urn:schemas-microsoft-com:xml-msdata'''',\r\n    ''''xs:element'''': {\r\n      ''''@name'''': ''''MyDataSet'''',\r\n      ''''@msdata:IsDataSet'''': ''''true'''',\r\n      ''''xs:complexType'''': {\r\n        ''''xs:choice'''': {\r\n          ''''@maxOccurs'''': ''''unbounded'''',\r\n          ''''xs:element'''': {\r\n            ''''@name'''': ''''customers'''',\r\n            ''''xs:complexType'''': {\r\n              ''''xs:sequence'''': {\r\n                ''''xs:element'''': [\r\n                  {\r\n                    ''''@name'''': ''''CustomerID'''',\r\n                    ''''@type'''': ''''xs:integer'''',\r\n                    ''''@minOccurs'''': ''''0''''\r\n                  },\r\n                  {\r\n                    ''''@name'''': ''''CompanyName'''',\r\n                    ''''@type'''': ''''xs:string'''',\r\n                    ''''@minOccurs'''': ''''0''''\r\n                  },\r\n                  {\r\n                    ''''@name'''': ''''Phone'''',\r\n                    ''''@type'''': ''''xs:string''''\r\n                  }\r\n                ]\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}''", span="307-350"];
m8_134 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="JValue.cs", label="Assert.AreEqual(expected, jsonText)", span="352-352"];
m8_135 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="JValue.cs", label="XmlDocument deserializedDoc = (XmlDocument)DeserializeXmlNode(jsonText)", span="354-354"];
m8_138 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="JValue.cs", label="Console.WriteLine(jsonText)", span="359-359"];
m8_139 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="JValue.cs", label="Console.WriteLine(deserializedDoc.InnerXml)", span="360-360"];
m8_137 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="JValue.cs", label="Console.WriteLine(''NamespaceSerializeDeserialize'')", span="358-358"];
m8_140 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="JValue.cs", label="Console.WriteLine()", span="361-361"];
m8_141 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", span="276-276"];
m8_242 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string)", file="JValue.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string)", span="794-794"];
m8_226 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXmlDocument()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXmlDocument()", span="607-607"];
m8_227 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXmlDocument()", file="JValue.cs", label="string json = @''{''''count'''': 773840,''''photos'''': null}''", span="609-609"];
m8_228 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXmlDocument()", file="JValue.cs", label="JsonConvert.DeserializeXmlNode(json)", span="611-611"];
m8_229 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXmlDocument()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXmlDocument()", span="607-607"];
m8_274 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", span="741-741"];
m8_275 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", file="JValue.cs", label="string xml = @''<?xml version=''''1.0'''' standalone=''''no''''?>\r\n			<root>\r\n			  <person id=''''1''''>\r\n				<name>Alan</name>\r\n				<url>http://www.google.com</url>\r\n			  </person>\r\n			  <person id=''''2''''>\r\n				<name>Louis</name>\r\n				<url>http://www.yahoo.com</url>\r\n			  </person>\r\n			</root>''", span="743-753"];
m8_276 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", file="JValue.cs", label="XmlDocument doc = new XmlDocument()", span="755-755"];
m8_277 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", file="JValue.cs", label="doc.LoadXml(xml)", span="756-756"];
m8_278 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", file="JValue.cs", label="string jsonText = SerializeXmlNode(doc)", span="758-758"];
m8_282 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", file="JValue.cs", label="Assert.AreEqual(doc.InnerXml, newDoc.InnerXml)", span="806-806"];
m8_279 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", file="JValue.cs", label="jsonText = JObject.Parse(jsonText).ToString()", span="781-781"];
m8_280 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", file="JValue.cs", label="Assert.AreEqual(@''{\r\n  ''''?xml'''': {\r\n    ''''@version'''': ''''1.0'''',\r\n    ''''@standalone'''': ''''no''''\r\n  },\r\n  ''''root'''': {\r\n    ''''person'''': [\r\n      {\r\n        ''''@id'''': ''''1'''',\r\n        ''''name'''': ''''Alan'''',\r\n        ''''url'''': ''''http://www.google.com''''\r\n      },\r\n      {\r\n        ''''@id'''': ''''2'''',\r\n        ''''name'''': ''''Louis'''',\r\n        ''''url'''': ''''http://www.yahoo.com''''\r\n      }\r\n    ]\r\n  }\r\n}'', jsonText)", span="783-802"];
m8_281 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", file="JValue.cs", label="XmlDocument newDoc = (XmlDocument)DeserializeXmlNode(jsonText)", span="804-804"];
m8_283 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", span="741-741"];
m8_143 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", span="365-365"];
m8_144 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="JValue.cs", label="string jsonText = @''{\r\n  ''''?xml'''': {\r\n    ''''@version'''': ''''1.0'''',\r\n    ''''@standalone'''': ''''no''''\r\n  },\r\n  ''''span'''': {\r\n    ''''@class'''': ''''vevent'''',\r\n    ''''a'''': {\r\n      ''''@class'''': ''''url'''',\r\n      ''''@href'''': ''''http://www.web2con.com/'''',\r\n      ''''span'''': {\r\n        ''''@class'''': ''''summary'''',\r\n        ''''#text'''': ''''Web 2.0 Conference'''',\r\n        ''''#cdata-section'''': ''''my escaped text''''\r\n      }\r\n    }\r\n  }\r\n}''", span="367-384"];
m8_145 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="JValue.cs", label="XmlDocument doc = (XmlDocument)DeserializeXmlNode(jsonText)", span="386-386"];
m8_146 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="JValue.cs", label="string expected = @''<?xml version=''''1.0'''' standalone=''''no''''?>\r\n<span class=''''vevent''''>\r\n  <a class=''''url'''' href=''''http://www.web2con.com/''''>\r\n    <span class=''''summary''''>Web 2.0 Conference<![CDATA[my escaped text]]></span>\r\n  </a>\r\n</span>''", span="388-393"];
m8_147 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="JValue.cs", label="string formattedXml = GetIndentedInnerXml(doc)", span="395-395"];
m8_151 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="JValue.cs", label="Assert.AreEqual(expected, formattedXml)", span="401-401"];
m8_148 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="JValue.cs", label="Console.WriteLine(''DocumentDeserialize'')", span="397-397"];
m8_149 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="JValue.cs", label="Console.WriteLine(formattedXml)", span="398-398"];
m8_150 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="JValue.cs", label="Console.WriteLine()", span="399-399"];
m8_152 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", span="365-365"];
m8_286 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeExample()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeExample()", span="810-810"];
m8_287 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeExample()", file="JValue.cs", label="string json = @''{\r\n        ''''?xml'''': {\r\n          ''''@version'''': ''''1.0'''',\r\n          ''''@standalone'''': ''''no''''\r\n        },\r\n        ''''root'''': {\r\n          ''''person'''': [\r\n            {\r\n              ''''@id'''': ''''1'''',\r\n              ''''name'''': ''''Alan'''',\r\n              ''''url'''': ''''http://www.google.com''''\r\n            },\r\n            {\r\n              ''''@id'''': ''''2'''',\r\n              ''''name'''': ''''Louis'''',\r\n              ''''url'''': ''''http://www.yahoo.com''''\r\n            }\r\n          ]\r\n        }\r\n      }''", span="812-831"];
m8_288 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeExample()", file="JValue.cs", label="XmlDocument doc = (XmlDocument)DeserializeXmlNode(json)", span="833-833"];
m8_289 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeExample()", file="JValue.cs", label="Assert.AreEqual(@''<?xml version=''''1.0'''' standalone=''''no''''?>\r\n<root>\r\n<person id=''''1''''>\r\n<name>Alan</name>\r\n<url>http://www.google.com</url>\r\n</person>\r\n<person id=''''2''''>\r\n<name>Louis</name>\r\n<url>http://www.yahoo.com</url>\r\n</person>\r\n</root>''.Replace(Environment.NewLine, string.Empty), doc.InnerXml)", span="846-856"];
m8_290 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeExample()", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeExample()", span="810-810"];
m8_27 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", span="78-78"];
m8_28 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="JValue.cs", label="JsonTextReader reader", span="80-80"];
m8_29 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="JValue.cs", label="reader = new JsonTextReader(new StringReader(json))", span="82-82"];
m8_32 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="JValue.cs", label="deserializeRootElementName != null", span="85-85"];
m8_33 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="JValue.cs", label="converter.DeserializeRootElementName = deserializeRootElementName", span="86-86"];
m8_36 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="JValue.cs", label="reader = new JsonTextReader(new StringReader(json))", span="93-93"];
m8_30 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="JValue.cs", label="reader.Read()", span="83-83"];
m8_34 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="JValue.cs", label="XmlNode node = (XmlNode)converter.ReadJson(reader, typeof (XmlDocument), new JsonSerializer())", span="88-88"];
m8_31 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="JValue.cs", label="XmlNodeConverter converter = new XmlNodeConverter()", span="84-84"];
m8_38 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="JValue.cs", label="XDocument d = (XDocument) converter.ReadJson(reader, typeof (XDocument), new JsonSerializer())", span="95-95"];
m8_35 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="JValue.cs", label="string xmlText = node.OuterXml", span="91-91"];
m8_43 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="JValue.cs", label="return node;", span="104-104"];
m8_42 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="JValue.cs", label="Assert.AreEqual(xmlText, linqXmlText)", span="101-101"];
m8_37 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="JValue.cs", label="reader.Read()", span="94-94"];
m8_39 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="JValue.cs", label="string linqXmlText = d.ToString(SaveOptions.DisableFormatting)", span="97-97"];
m8_40 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="JValue.cs", label="d.Declaration != null", span="98-98"];
m8_41 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="JValue.cs", label="linqXmlText = d.Declaration + linqXmlText", span="99-99"];
m8_44 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="JValue.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", span="78-78"];
m8_67 [cluster="System.Console.WriteLine()", file="JValue.cs", label="Entry System.Console.WriteLine()", span="0-0"];
m8_15 [cluster="Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode, Newtonsoft.Json.Formatting)", file="JValue.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode, Newtonsoft.Json.Formatting)", span="771-771"];
m8_306 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.CircularDictionary.CircularDictionary()", file="JValue.cs", label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.CircularDictionary.CircularDictionary()", span="236-236"];
m8_310 [file="JValue.cs", label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", span=""];
m9_3 [cluster="string.FormatWith(System.IFormatProvider, params object[])", file="StringUtils.cs", label="Entry string.FormatWith(System.IFormatProvider, params object[])", span="62-62"];
m9_95 [cluster="System.Text.StringBuilder.StringBuilder()", file="StringUtils.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m9_55 [cluster="Newtonsoft.Json.Utilities.StringUtils.ForgivingCaseSensitiveFind<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, string>, string)", file="StringUtils.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.ForgivingCaseSensitiveFind<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, string>, string)", span="129-129"];
m9_56 [cluster="Newtonsoft.Json.Utilities.StringUtils.ForgivingCaseSensitiveFind<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, string>, string)", file="StringUtils.cs", label="source == null", span="131-131"];
m9_58 [cluster="Newtonsoft.Json.Utilities.StringUtils.ForgivingCaseSensitiveFind<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, string>, string)", file="StringUtils.cs", label="valueSelector == null", span="133-133"];
m9_60 [cluster="Newtonsoft.Json.Utilities.StringUtils.ForgivingCaseSensitiveFind<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, string>, string)", file="StringUtils.cs", label="var caseInsensitiveResults = source.Where(s => string.Equals(valueSelector(s), testValue, StringComparison.OrdinalIgnoreCase))", span="136-136"];
m9_63 [cluster="Newtonsoft.Json.Utilities.StringUtils.ForgivingCaseSensitiveFind<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, string>, string)", file="StringUtils.cs", label="var caseSensitiveResults = source.Where(s => string.Equals(valueSelector(s), testValue, StringComparison.Ordinal))", span="144-144"];
m9_57 [cluster="Newtonsoft.Json.Utilities.StringUtils.ForgivingCaseSensitiveFind<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, string>, string)", file="StringUtils.cs", label="throw new ArgumentNullException(''source'');", span="132-132"];
m9_59 [cluster="Newtonsoft.Json.Utilities.StringUtils.ForgivingCaseSensitiveFind<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, string>, string)", file="StringUtils.cs", label="throw new ArgumentNullException(''valueSelector'');", span="134-134"];
m9_61 [cluster="Newtonsoft.Json.Utilities.StringUtils.ForgivingCaseSensitiveFind<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, string>, string)", file="StringUtils.cs", label="caseInsensitiveResults.Count() <= 1", span="137-137"];
m9_62 [cluster="Newtonsoft.Json.Utilities.StringUtils.ForgivingCaseSensitiveFind<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, string>, string)", file="StringUtils.cs", label="return caseInsensitiveResults.SingleOrDefault();", span="139-139"];
m9_64 [cluster="Newtonsoft.Json.Utilities.StringUtils.ForgivingCaseSensitiveFind<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, string>, string)", file="StringUtils.cs", label="return caseSensitiveResults.SingleOrDefault();", span="145-145"];
m9_65 [cluster="Newtonsoft.Json.Utilities.StringUtils.ForgivingCaseSensitiveFind<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, string>, string)", file="StringUtils.cs", label="Exit Newtonsoft.Json.Utilities.StringUtils.ForgivingCaseSensitiveFind<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, string>, string)", span="129-129"];
m9_72 [cluster="System.Func<T, TResult>.Invoke(T)", file="StringUtils.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m9_28 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="StringUtils.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m9_73 [cluster="string.Equals(string, string, System.StringComparison)", file="StringUtils.cs", label="Entry string.Equals(string, string, System.StringComparison)", span="0-0"];
m9_16 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsWhiteSpace(string)", file="StringUtils.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.IsWhiteSpace(string)", span="76-76"];
m9_17 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsWhiteSpace(string)", file="StringUtils.cs", label="s == null", span="78-78"];
m9_19 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsWhiteSpace(string)", file="StringUtils.cs", label="s.Length == 0", span="81-81"];
m9_22 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsWhiteSpace(string)", file="StringUtils.cs", label="i < s.Length", span="84-84"];
m9_23 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsWhiteSpace(string)", file="StringUtils.cs", label="!char.IsWhiteSpace(s[i])", span="86-86"];
m9_18 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsWhiteSpace(string)", file="StringUtils.cs", label="throw new ArgumentNullException(''s'');", span="79-79"];
m9_20 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsWhiteSpace(string)", file="StringUtils.cs", label="return false;", span="82-82"];
m9_21 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsWhiteSpace(string)", file="StringUtils.cs", label="int i = 0", span="84-84"];
m9_25 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsWhiteSpace(string)", file="StringUtils.cs", label="i++", span="84-84"];
m9_26 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsWhiteSpace(string)", file="StringUtils.cs", label="return true;", span="90-90"];
m9_24 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsWhiteSpace(string)", file="StringUtils.cs", label="return false;", span="87-87"];
m9_27 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsWhiteSpace(string)", file="StringUtils.cs", label="Exit Newtonsoft.Json.Utilities.StringUtils.IsWhiteSpace(string)", span="76-76"];
m9_105 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsLowSurrogate(char)", file="StringUtils.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.IsLowSurrogate(char)", span="191-191"];
m9_106 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsLowSurrogate(char)", file="StringUtils.cs", label="return char.IsLowSurrogate(c);", span="194-194"];
m9_107 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsLowSurrogate(char)", file="StringUtils.cs", label="Exit Newtonsoft.Json.Utilities.StringUtils.IsLowSurrogate(char)", span="191-191"];
m9_40 [cluster="System.IO.StringWriter.StringWriter(System.Text.StringBuilder, System.IFormatProvider)", file="StringUtils.cs", label="Entry System.IO.StringWriter.StringWriter(System.Text.StringBuilder, System.IFormatProvider)", span="0-0"];
m9_101 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsHighSurrogate(char)", file="StringUtils.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.IsHighSurrogate(char)", span="182-182"];
m9_102 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsHighSurrogate(char)", file="StringUtils.cs", label="return char.IsHighSurrogate(c);", span="185-185"];
m9_103 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsHighSurrogate(char)", file="StringUtils.cs", label="Exit Newtonsoft.Json.Utilities.StringUtils.IsHighSurrogate(char)", span="182-182"];
m9_0 [cluster="Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object)", file="StringUtils.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object)", span="47-47"];
m9_1 [cluster="Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object)", file="StringUtils.cs", label="return format.FormatWith(provider, new[] { arg0 });", span="49-49"];
m9_2 [cluster="Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object)", file="StringUtils.cs", label="Exit Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object)", span="47-47"];
m9_29 [cluster="char.IsWhiteSpace(char)", file="StringUtils.cs", label="Entry char.IsWhiteSpace(char)", span="0-0"];
m9_34 [cluster="Newtonsoft.Json.Utilities.StringUtils.CreateStringWriter(int)", file="StringUtils.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.CreateStringWriter(int)", span="103-103"];
m9_35 [cluster="Newtonsoft.Json.Utilities.StringUtils.CreateStringWriter(int)", file="StringUtils.cs", label="StringBuilder sb = new StringBuilder(capacity)", span="105-105"];
m9_36 [cluster="Newtonsoft.Json.Utilities.StringUtils.CreateStringWriter(int)", file="StringUtils.cs", label="StringWriter sw = new StringWriter(sb, CultureInfo.InvariantCulture)", span="106-106"];
m9_37 [cluster="Newtonsoft.Json.Utilities.StringUtils.CreateStringWriter(int)", file="StringUtils.cs", label="return sw;", span="108-108"];
m9_38 [cluster="Newtonsoft.Json.Utilities.StringUtils.CreateStringWriter(int)", file="StringUtils.cs", label="Exit Newtonsoft.Json.Utilities.StringUtils.CreateStringWriter(int)", span="103-103"];
m9_96 [cluster="char.ToLower(char, System.Globalization.CultureInfo)", file="StringUtils.cs", label="Entry char.ToLower(char, System.Globalization.CultureInfo)", span="0-0"];
m9_108 [cluster="char.IsLowSurrogate(char)", file="StringUtils.cs", label="Entry char.IsLowSurrogate(char)", span="0-0"];
m9_30 [cluster="Newtonsoft.Json.Utilities.StringUtils.NullEmptyString(string)", file="StringUtils.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.NullEmptyString(string)", span="98-98"];
m9_31 [cluster="Newtonsoft.Json.Utilities.StringUtils.NullEmptyString(string)", file="StringUtils.cs", label="return (string.IsNullOrEmpty(s)) ? null : s;", span="100-100"];
m9_32 [cluster="Newtonsoft.Json.Utilities.StringUtils.NullEmptyString(string)", file="StringUtils.cs", label="Exit Newtonsoft.Json.Utilities.StringUtils.NullEmptyString(string)", span="98-98"];
m9_97 [cluster="System.Text.StringBuilder.Append(char)", file="StringUtils.cs", label="Entry System.Text.StringBuilder.Append(char)", span="0-0"];
m9_4 [cluster="Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object, object)", file="StringUtils.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object, object)", span="52-52"];
m9_5 [cluster="Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object, object)", file="StringUtils.cs", label="return format.FormatWith(provider, new[] { arg0, arg1 });", span="54-54"];
m9_6 [cluster="Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object, object)", file="StringUtils.cs", label="Exit Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object, object)", span="52-52"];
m9_41 [cluster="Newtonsoft.Json.Utilities.StringUtils.GetLength(string)", file="StringUtils.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.GetLength(string)", span="111-111"];
m9_42 [cluster="Newtonsoft.Json.Utilities.StringUtils.GetLength(string)", file="StringUtils.cs", label="value == null", span="113-113"];
m9_44 [cluster="Newtonsoft.Json.Utilities.StringUtils.GetLength(string)", file="StringUtils.cs", label="return value.Length;", span="116-116"];
m9_43 [cluster="Newtonsoft.Json.Utilities.StringUtils.GetLength(string)", file="StringUtils.cs", label="return null;", span="114-114"];
m9_45 [cluster="Newtonsoft.Json.Utilities.StringUtils.GetLength(string)", file="StringUtils.cs", label="Exit Newtonsoft.Json.Utilities.StringUtils.GetLength(string)", span="111-111"];
m9_77 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", file="StringUtils.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", span="149-149"];
m9_78 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", file="StringUtils.cs", label="string.IsNullOrEmpty(s)", span="151-151"];
m9_79 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", file="StringUtils.cs", label="return s;", span="152-152"];
m9_80 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", file="StringUtils.cs", label="!char.IsUpper(s[0])", span="154-154"];
m9_81 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", file="StringUtils.cs", label="return s;", span="155-155"];
m9_84 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", file="StringUtils.cs", label="i < s.Length", span="158-158"];
m9_85 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", file="StringUtils.cs", label="bool hasNext = (i + 1 < s.Length)", span="160-160"];
m9_86 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", file="StringUtils.cs", label="(i == 0 || !hasNext) || char.IsUpper(s[i + 1])", span="161-161"];
m9_88 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", file="StringUtils.cs", label="lowerCase = char.ToLower(s[i], CultureInfo.InvariantCulture)", span="165-165"];
m9_90 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", file="StringUtils.cs", label="sb.Append(s.Substring(i))", span="174-174"];
m9_82 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", file="StringUtils.cs", label="StringBuilder sb = new StringBuilder()", span="157-157"];
m9_83 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", file="StringUtils.cs", label="int i = 0", span="158-158"];
m9_89 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", file="StringUtils.cs", label="sb.Append(lowerCase)", span="170-170"];
m9_92 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", file="StringUtils.cs", label="return sb.ToString();", span="179-179"];
m9_91 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", file="StringUtils.cs", label="i++", span="158-158"];
m9_87 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", file="StringUtils.cs", label="char lowerCase", span="163-163"];
m9_93 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", file="StringUtils.cs", label="Exit Newtonsoft.Json.Utilities.StringUtils.ToCamelCase(string)", span="149-149"];
m9_94 [cluster="char.IsUpper(char)", file="StringUtils.cs", label="Entry char.IsUpper(char)", span="0-0"];
m9_54 [cluster="Newtonsoft.Json.Utilities.MathUtils.IntToHex(int)", file="StringUtils.cs", label="Entry Newtonsoft.Json.Utilities.MathUtils.IntToHex(int)", span="65-65"];
m9_104 [cluster="char.IsHighSurrogate(char)", file="StringUtils.cs", label="Entry char.IsHighSurrogate(char)", span="0-0"];
m9_7 [cluster="Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object, object, object)", file="StringUtils.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object, object, object)", span="57-57"];
m9_8 [cluster="Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object, object, object)", file="StringUtils.cs", label="return format.FormatWith(provider, new[] { arg0, arg1, arg2 });", span="59-59"];
m9_9 [cluster="Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object, object, object)", file="StringUtils.cs", label="Exit Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object, object, object)", span="57-57"];
m9_10 [cluster="Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, params object[])", file="StringUtils.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, params object[])", span="62-62"];
m9_11 [cluster="Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, params object[])", file="StringUtils.cs", label="ValidationUtils.ArgumentNotNull(format, ''format'')", span="64-64"];
m9_12 [cluster="Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, params object[])", file="StringUtils.cs", label="return string.Format(provider, format, args);", span="66-66"];
m9_13 [cluster="Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, params object[])", file="StringUtils.cs", label="Exit Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, params object[])", span="62-62"];
m9_14 [cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="StringUtils.cs", label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="52-52"];
m9_15 [cluster="string.Format(System.IFormatProvider, string, params object[])", file="StringUtils.cs", label="Entry string.Format(System.IFormatProvider, string, params object[])", span="0-0"];
m9_98 [cluster="string.Substring(int)", file="StringUtils.cs", label="Entry string.Substring(int)", span="0-0"];
m9_39 [cluster="System.Text.StringBuilder.StringBuilder(int)", file="StringUtils.cs", label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0"];
m9_99 [cluster="System.Text.StringBuilder.Append(string)", file="StringUtils.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m9_100 [cluster="System.Text.StringBuilder.ToString()", file="StringUtils.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m9_66 [cluster="Unk.Where", file="StringUtils.cs", label="Entry Unk.Where", span=""];
m9_74 [cluster="lambda expression", file="StringUtils.cs", label="Entry lambda expression", span="144-144"];
m9_70 [cluster="lambda expression", file="StringUtils.cs", label="string.Equals(valueSelector(s), testValue, StringComparison.OrdinalIgnoreCase)", span="136-136"];
m9_75 [cluster="lambda expression", file="StringUtils.cs", label="string.Equals(valueSelector(s), testValue, StringComparison.Ordinal)", span="144-144"];
m9_69 [cluster="lambda expression", file="StringUtils.cs", label="Entry lambda expression", span="136-136"];
m9_71 [cluster="lambda expression", file="StringUtils.cs", label="Exit lambda expression", span="136-136"];
m9_76 [cluster="lambda expression", file="StringUtils.cs", label="Exit lambda expression", span="144-144"];
m9_33 [cluster="string.IsNullOrEmpty(string)", file="StringUtils.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m9_67 [cluster="Unk.Count", file="StringUtils.cs", label="Entry Unk.Count", span=""];
m9_46 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode(char, char[])", file="StringUtils.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode(char, char[])", span="119-119"];
m9_47 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode(char, char[])", file="StringUtils.cs", label="buffer[0] = '\\'", span="121-121"];
m9_48 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode(char, char[])", file="StringUtils.cs", label="buffer[1] = 'u'", span="122-122"];
m9_49 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode(char, char[])", file="StringUtils.cs", label="buffer[2] = MathUtils.IntToHex((c >> 12) & '\x000f')", span="123-123"];
m9_50 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode(char, char[])", file="StringUtils.cs", label="buffer[3] = MathUtils.IntToHex((c >> 8) & '\x000f')", span="124-124"];
m9_51 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode(char, char[])", file="StringUtils.cs", label="buffer[4] = MathUtils.IntToHex((c >> 4) & '\x000f')", span="125-125"];
m9_52 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode(char, char[])", file="StringUtils.cs", label="buffer[5] = MathUtils.IntToHex(c & '\x000f')", span="126-126"];
m9_53 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode(char, char[])", file="StringUtils.cs", label="Exit Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode(char, char[])", span="119-119"];
m9_68 [cluster="Unk.SingleOrDefault", file="StringUtils.cs", label="Entry Unk.SingleOrDefault", span=""];
m9_109 [file="StringUtils.cs", label="System.Func<TSource, string>", span=""];
m9_110 [file="StringUtils.cs", label=string, span=""];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_5  [key=2, style=dotted];
m1_1 -> m1_6  [key=2, style=dotted];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_7  [key=2, style=dotted];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_8  [key=2, style=dotted];
m1_4 -> m1_0  [color=blue, key=0, style=bold];
m2_47 -> m2_47  [color=darkorchid, key=3, label="Local variable int colonCount", style=bold];
m2_22 -> m2_23  [key=0, style=solid];
m2_22 -> m2_24  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m2_22 -> m2_25  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_22 -> m2_26  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_22 -> m2_28  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m2_22 -> m2_29  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m2_22 -> m2_30  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m2_22 -> m2_31  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m2_22 -> m2_32  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m2_22 -> m2_33  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m2_22 -> m2_35  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m2_22 -> m2_36  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m2_22 -> m2_37  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m2_23 -> m2_24  [key=0, style=solid];
m2_23 -> m2_42  [key=2, style=dotted];
m2_23 -> m2_43  [key=2, style=dotted];
m2_23 -> m2_38  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_24 -> m2_25  [key=0, style=solid];
m2_24 -> m2_28  [key=0, style=solid];
m2_25 -> m2_26  [key=0, style=solid];
m2_25 -> m2_27  [key=0, style=solid];
m2_25 -> m2_42  [key=2, style=dotted];
m2_26 -> m2_41  [key=0, style=solid];
m2_26 -> m2_18  [key=2, style=dotted];
m2_26 -> m2_44  [key=2, style=dotted];
m2_28 -> m2_29  [key=0, style=solid];
m2_28 -> m2_30  [key=0, style=solid];
m2_28 -> m2_45  [key=2, style=dotted];
m2_28 -> m2_46  [key=2, style=dotted];
m2_29 -> m2_41  [key=0, style=solid];
m2_29 -> m2_18  [key=2, style=dotted];
m2_29 -> m2_44  [key=2, style=dotted];
m2_30 -> m2_31  [key=0, style=solid];
m2_30 -> m2_47  [key=2, style=dotted];
m2_31 -> m2_32  [key=0, style=solid];
m2_31 -> m2_33  [key=0, style=solid];
m2_32 -> m2_41  [key=0, style=solid];
m2_32 -> m2_18  [key=2, style=dotted];
m2_32 -> m2_44  [key=2, style=dotted];
m2_33 -> m2_34  [key=0, style=solid];
m2_35 -> m2_36  [key=0, style=solid];
m2_35 -> m2_47  [key=2, style=dotted];
m2_36 -> m2_37  [key=0, style=solid];
m2_36 -> m2_38  [key=0, style=solid];
m2_37 -> m2_41  [key=0, style=solid];
m2_37 -> m2_18  [key=2, style=dotted];
m2_37 -> m2_44  [key=2, style=dotted];
m2_38 -> m2_39  [key=0, style=solid];
m2_38 -> m2_40  [key=0, style=solid];
m2_27 -> m2_41  [key=0, style=solid];
m2_34 -> m2_35  [key=0, style=solid];
m2_34 -> m2_48  [key=2, style=dotted];
m2_34 -> m2_39  [color=darkseagreen4, key=1, label=d, style=dashed];
m2_34 -> m2_40  [color=darkseagreen4, key=1, label=d, style=dashed];
m2_39 -> m2_41  [key=0, style=solid];
m2_39 -> m2_49  [key=2, style=dotted];
m2_40 -> m2_41  [key=0, style=solid];
m2_41 -> m2_22  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [key=0, style=solid];
m2_0 -> m2_2  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_0 -> m2_3  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_0 -> m2_6  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_0 -> m2_7  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_0 -> m2_11  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_0 -> m2_12  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_0 -> m2_13  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_12  [color=darkseagreen4, key=1, label=ticks, style=dashed];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_6  [key=0, style=solid];
m2_3 -> m2_4  [key=0, style=solid];
m2_6 -> m2_7  [key=0, style=solid];
m2_6 -> m2_10  [key=0, style=solid];
m2_7 -> m2_8  [key=0, style=solid];
m2_11 -> m2_12  [key=0, style=solid];
m2_11 -> m2_19  [key=2, style=dotted];
m2_12 -> m2_13  [key=0, style=solid];
m2_12 -> m2_20  [key=2, style=dotted];
m2_13 -> m2_14  [key=0, style=solid];
m2_13 -> m2_21  [key=2, style=dotted];
m2_4 -> m2_5  [key=0, style=solid];
m2_4 -> m2_15  [key=2, style=dotted];
m2_5 -> m2_11  [key=0, style=solid];
m2_5 -> m2_16  [key=2, style=dotted];
m2_5 -> m2_12  [color=darkseagreen4, key=1, label=ticks, style=dashed];
m2_10 -> m2_14  [key=0, style=solid];
m2_10 -> m2_18  [key=2, style=dotted];
m2_8 -> m2_9  [key=0, style=solid];
m2_8 -> m2_17  [key=2, style=dotted];
m2_8 -> m2_8  [color=darkseagreen4, key=1, label=dateTimeOffset, style=dashed];
m2_9 -> m2_11  [key=0, style=solid];
m2_9 -> m2_16  [key=2, style=dotted];
m2_9 -> m2_9  [color=darkseagreen4, key=1, label=utcDateTimeOffset, style=dashed];
m2_9 -> m2_12  [color=darkseagreen4, key=1, label=ticks, style=dashed];
m2_14 -> m2_0  [color=blue, key=0, style=bold];
m4_295 -> m4_296  [key=0, style=solid];
m4_653 -> m4_654  [key=0, style=solid];
m4_653 -> m4_655  [key=0, style=solid];
m4_654 -> m4_8  [key=2, style=dotted];
m4_654 -> m4_9  [key=2, style=dotted];
m4_654 -> m4_655  [key=0, style=solid];
m4_654 -> m4_658  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_654 -> m4_664  [key=0, style=solid];
m4_654 -> m4_693  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m4_655 -> m4_57  [key=2, style=dotted];
m4_655 -> m4_656  [key=0, style=solid];
m4_655 -> m4_657  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_655 -> m4_659  [key=0, style=solid];
m4_656 -> m4_653  [color=blue, key=0, style=bold];
m4_656 -> m4_657  [key=0, style=solid];
m4_656 -> m4_52  [key=2, style=dotted];
m4_702 -> m4_11  [key=2, style=dotted];
m4_702 -> m4_703  [key=0, style=solid];
m4_101 -> m4_102  [key=0, style=solid];
m4_104 -> m4_10  [key=2, style=dotted];
m4_104 -> m4_105  [key=0, style=solid];
m4_104 -> m4_19  [key=2, style=dotted];
m4_104 -> m4_106  [key=0, style=solid];
m4_104 -> m4_107  [key=2, style=dotted];
m4_106 -> m4_10  [key=2, style=dotted];
m4_106 -> m4_107  [key=0, style=solid];
m4_106 -> m4_19  [key=2, style=dotted];
m4_106 -> m4_102  [color=blue, key=0, style=bold];
m4_108 -> m4_10  [key=2, style=dotted];
m4_108 -> m4_109  [key=0, style=solid];
m4_108 -> m4_19  [key=2, style=dotted];
m4_108 -> m4_110  [key=0, style=solid];
m4_111 -> m4_10  [key=2, style=dotted];
m4_111 -> m4_112  [key=0, style=solid];
m4_111 -> m4_19  [key=2, style=dotted];
m4_111 -> m4_114  [color=darkseagreen4, key=1, label=totalCharsRead, style=dashed];
m4_111 -> m4_79  [color=darkorchid, key=3, label="Local variable int totalCharsRead", style=bold];
m4_113 -> m4_10  [key=2, style=dotted];
m4_113 -> m4_114  [key=0, style=solid];
m4_113 -> m4_43  [key=2, style=dotted];
m4_113 -> m4_116  [key=0, style=solid];
m4_103 -> m4_8  [key=2, style=dotted];
m4_103 -> m4_9  [key=2, style=dotted];
m4_103 -> m4_104  [key=0, style=solid];
m4_103 -> m4_106  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_103 -> m4_108  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_103 -> m4_111  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_103 -> m4_113  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_103 -> m4_105  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_103 -> m4_107  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_103 -> m4_109  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_103 -> m4_110  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_103 -> m4_112  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_105 -> m4_11  [key=2, style=dotted];
m4_105 -> m4_106  [key=0, style=solid];
m4_107 -> m4_11  [key=2, style=dotted];
m4_107 -> m4_108  [key=0, style=solid];
m4_107 -> m4_110  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_107 -> m4_112  [color=darkseagreen4, key=1, label=bool, style=dashed];
m4_107 -> m4_102  [color=darkorchid, key=3, label="Parameter variable bool append", style=bold];
m4_107 -> m4_786  [color=darkorchid, key=3, label="method methodReturn bool ReadChars", style=bold];
m4_107 -> m4_774  [color=darkorchid, key=3, label="method methodReturn bool ReadChars", style=bold];
m4_109 -> m4_11  [key=2, style=dotted];
m4_109 -> m4_110  [key=0, style=solid];
m4_109 -> m4_119  [key=0, style=solid];
m4_110 -> m4_11  [key=2, style=dotted];
m4_110 -> m4_111  [key=0, style=solid];
m4_110 -> m4_112  [color=darkseagreen4, key=1, label=charsRequired, style=dashed];
m4_110 -> m4_115  [color=darkseagreen4, key=1, label=charsRequired, style=dashed];
m4_110 -> m4_116  [color=darkseagreen4, key=1, label=charsRequired, style=dashed];
m4_112 -> m4_11  [key=2, style=dotted];
m4_112 -> m4_113  [key=0, style=solid];
m4_112 -> m4_72  [key=2, style=dotted];
m4_112 -> m4_114  [color=darkseagreen4, key=1, label=charsRead, style=dashed];
m4_102 -> m4_103  [key=0, style=solid];
m4_102 -> m4_104  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_102 -> m4_107  [color=darkorchid, key=3, label="method methodReturn bool EnsureChars", style=bold];
m4_102 -> m4_774  [color=darkorchid, key=3, label="Parameter variable bool append", style=bold];
m4_102 -> m4_79  [color=darkorchid, key=3, label="Parameter variable int relativePosition", style=bold];
m4_102 -> m4_55  [color=darkorchid, key=3, label="Parameter variable int relativePosition", style=bold];
m4_102 -> m4_448  [color=darkorchid, key=3, label="Parameter variable int relativePosition", style=bold];
m4_102 -> m4_522  [color=darkorchid, key=3, label="Parameter variable int relativePosition", style=bold];
m4_102 -> m4_786  [color=darkorchid, key=3, label="Parameter variable bool append", style=bold];
m4_102 -> m4_293  [color=darkorchid, key=3, label="Parameter variable bool append", style=bold];
m4_114 -> m4_101  [color=blue, key=0, style=bold];
m4_114 -> m4_115  [key=0, style=solid];
m4_114 -> m4_114  [color=darkseagreen4, key=1, label=totalCharsRead, style=dashed];
m4_114 -> m4_116  [color=darkseagreen4, key=1, label=totalCharsRead, style=dashed];
m4_818 -> m4_819  [key=0, style=solid];
m4_818 -> m4_774  [color=darkorchid, key=3, label="method methodReturn bool HasLineInfo", style=bold];
m4_818 -> m4_61  [key=2, style=dotted];
m4_818 -> m4_11  [key=2, style=dotted];
m4_819 -> m4_820  [key=0, style=solid];
m4_819 -> m4_8  [key=2, style=dotted];
m4_819 -> m4_9  [key=2, style=dotted];
m4_819 -> m4_834  [key=2, style=dotted];
m4_820 -> m4_818  [color=blue, key=0, style=bold];
m4_820 -> m4_61  [key=2, style=dotted];
m4_820 -> m4_11  [key=2, style=dotted];
m4_820 -> m4_821  [key=0, style=solid];
m4_969 -> m4_970  [key=0, style=solid];
m4_972 -> m4_8  [key=2, style=dotted];
m4_972 -> m4_973  [key=0, style=solid];
m4_972 -> m4_974  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_972 -> m4_975  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_972 -> m4_976  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_972 -> m4_977  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_972 -> m4_978  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_972 -> m4_979  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_972 -> m4_980  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_972 -> m4_981  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_972 -> m4_982  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_972 -> m4_983  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_972 -> m4_984  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_972 -> m4_985  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_971 -> m4_9  [key=2, style=dotted];
m4_971 -> m4_972  [key=0, style=solid];
m4_974 -> m4_11  [key=2, style=dotted];
m4_974 -> m4_975  [key=0, style=solid];
m4_976 -> m4_11  [key=2, style=dotted];
m4_976 -> m4_977  [key=0, style=solid];
m4_977 -> m4_11  [key=2, style=dotted];
m4_977 -> m4_978  [key=0, style=solid];
m4_979 -> m4_11  [key=2, style=dotted];
m4_979 -> m4_980  [key=0, style=solid];
m4_980 -> m4_11  [key=2, style=dotted];
m4_980 -> m4_981  [key=0, style=solid];
m4_982 -> m4_11  [key=2, style=dotted];
m4_982 -> m4_983  [key=0, style=solid];
m4_983 -> m4_11  [key=2, style=dotted];
m4_983 -> m4_984  [key=0, style=solid];
m4_985 -> m4_11  [key=2, style=dotted];
m4_985 -> m4_986  [key=0, style=solid];
m4_973 -> m4_974  [key=0, style=solid];
m4_973 -> m4_265  [key=2, style=dotted];
m4_975 -> m4_976  [key=0, style=solid];
m4_975 -> m4_265  [key=2, style=dotted];
m4_978 -> m4_979  [key=0, style=solid];
m4_978 -> m4_265  [key=2, style=dotted];
m4_981 -> m4_982  [key=0, style=solid];
m4_981 -> m4_265  [key=2, style=dotted];
m4_984 -> m4_985  [key=0, style=solid];
m4_984 -> m4_265  [key=2, style=dotted];
m4_970 -> m4_971  [key=0, style=solid];
m4_986 -> m4_969  [color=blue, key=0, style=bold];
m4_1336 -> m4_1337  [key=0, style=solid];
m4_1339 -> m4_10  [key=2, style=dotted];
m4_1339 -> m4_1340  [key=0, style=solid];
m4_1339 -> m4_19  [key=2, style=dotted];
m4_1341 -> m4_10  [key=2, style=dotted];
m4_1341 -> m4_1342  [key=0, style=solid];
m4_1341 -> m4_19  [key=2, style=dotted];
m4_1347 -> m4_10  [key=2, style=dotted];
m4_1347 -> m4_1348  [key=0, style=solid];
m4_1347 -> m4_19  [key=2, style=dotted];
m4_1338 -> m4_8  [key=2, style=dotted];
m4_1338 -> m4_9  [key=2, style=dotted];
m4_1338 -> m4_1339  [key=0, style=solid];
m4_1338 -> m4_1341  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1338 -> m4_1347  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1338 -> m4_1340  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1338 -> m4_1342  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1338 -> m4_1343  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1338 -> m4_1344  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1338 -> m4_1345  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1338 -> m4_1346  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1338 -> m4_1348  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1340 -> m4_11  [key=2, style=dotted];
m4_1340 -> m4_1341  [key=0, style=solid];
m4_1342 -> m4_11  [key=2, style=dotted];
m4_1342 -> m4_1343  [key=0, style=solid];
m4_1344 -> m4_11  [key=2, style=dotted];
m4_1344 -> m4_1345  [key=0, style=solid];
m4_1345 -> m4_11  [key=2, style=dotted];
m4_1345 -> m4_1346  [key=0, style=solid];
m4_1346 -> m4_11  [key=2, style=dotted];
m4_1346 -> m4_1347  [key=0, style=solid];
m4_1346 -> m4_1277  [key=2, style=dotted];
m4_1346 -> m4_1350  [key=2, style=dotted];
m4_1348 -> m4_11  [key=2, style=dotted];
m4_1348 -> m4_1349  [key=0, style=solid];
m4_1337 -> m4_1338  [key=0, style=solid];
m4_1343 -> m4_1344  [key=0, style=solid];
m4_1343 -> m4_1192  [key=2, style=dotted];
m4_1349 -> m4_1336  [color=blue, key=0, style=bold];
m4_51 -> m4_11  [key=2, style=dotted];
m4_51 -> m4_52  [key=0, style=solid];
m4_10 -> m4_12  [key=0, style=solid];
m4_10 -> m4_14  [key=2, style=dotted];
m4_120 -> m4_121  [key=0, style=solid];
m4_120 -> m4_786  [color=darkorchid, key=3, label="method methodReturn bool Read", style=bold];
m4_120 -> m4_774  [color=darkorchid, key=3, label="method methodReturn bool Read", style=bold];
m4_120 -> m4_57  [key=2, style=dotted];
m4_120 -> m4_127  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_121 -> m4_122  [key=0, style=solid];
m4_121 -> m4_8  [key=2, style=dotted];
m4_121 -> m4_9  [key=2, style=dotted];
m4_121 -> m4_132  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_122 -> m4_123  [key=0, style=solid];
m4_122 -> m4_125  [key=0, style=solid];
m4_122 -> m4_127  [key=2, style=dotted];
m4_122 -> m4_57  [key=2, style=dotted];
m4_122 -> m4_131  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_123 -> m4_124  [key=0, style=solid];
m4_123 -> m4_128  [key=2, style=dotted];
m4_123 -> m4_115  [color=blue, key=0, style=bold];
m4_125 -> m4_126  [key=0, style=solid];
m4_125 -> m4_10  [key=2, style=dotted];
m4_124 -> m4_126  [key=0, style=solid];
m4_124 -> m4_125  [key=0, style=solid];
m4_126 -> m4_120  [color=blue, key=0, style=bold];
m4_126 -> m4_124  [color=blue, key=0, style=bold];
m4_556 -> m4_591  [key=0, style=solid];
m4_556 -> m4_557  [key=0, style=solid];
m4_556 -> m4_559  [key=0, style=solid];
m4_591 -> m4_592  [key=0, style=solid];
m4_591 -> m4_625  [key=0, style=solid];
m4_591 -> m4_627  [key=2, style=dotted];
m4_591 -> m4_8  [key=2, style=dotted];
m4_591 -> m4_9  [key=2, style=dotted];
m4_591 -> m4_573  [key=2, style=dotted];
m4_592 -> m4_593  [key=0, style=solid];
m4_592 -> m4_186  [key=2, style=dotted];
m4_592 -> m4_61  [key=2, style=dotted];
m4_625 -> m4_626  [key=0, style=solid];
m4_625 -> m4_189  [key=2, style=dotted];
m4_625 -> m4_8  [key=2, style=dotted];
m4_625 -> m4_9  [key=2, style=dotted];
m4_625 -> m4_628  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_625 -> m4_630  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_625 -> m4_631  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_625 -> m4_632  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_593 -> m4_594  [key=0, style=solid];
m4_593 -> m4_617  [color=darkseagreen4, key=1, label=initialPosition, style=dashed];
m4_593 -> m4_590  [color=blue, key=0, style=bold];
m4_594 -> m4_595  [key=0, style=solid];
m4_594 -> m4_617  [color=darkseagreen4, key=1, label=endPosition, style=dashed];
m4_617 -> m4_618  [key=0, style=solid];
m4_617 -> m4_295  [key=2, style=dotted];
m4_595 -> m4_596  [key=0, style=solid];
m4_595 -> m4_617  [key=0, style=solid];
m4_595 -> m4_607  [key=2, style=dotted];
m4_595 -> m4_601  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_596 -> m4_597  [key=0, style=solid];
m4_596 -> m4_603  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m4_596 -> m4_605  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m4_596 -> m4_608  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m4_596 -> m4_611  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m4_596 -> m4_614  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m4_596 -> m4_616  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m4_596 -> m4_8  [key=2, style=dotted];
m4_596 -> m4_609  [key=2, style=dotted];
m4_596 -> m4_598  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_597 -> m4_598  [key=0, style=solid];
m4_597 -> m4_603  [key=0, style=solid];
m4_597 -> m4_10  [key=2, style=dotted];
m4_603 -> m4_604  [key=0, style=solid];
m4_603 -> m4_605  [key=0, style=solid];
m4_603 -> m4_457  [key=2, style=dotted];
m4_603 -> m4_10  [key=2, style=dotted];
m4_605 -> m4_606  [key=0, style=solid];
m4_605 -> m4_608  [key=0, style=solid];
m4_605 -> m4_605  [color=darkseagreen4, key=1, label=j, style=dashed];
m4_605 -> m4_600  [key=0, style=solid];
m4_608 -> m4_609  [key=0, style=solid];
m4_608 -> m4_611  [key=0, style=solid];
m4_611 -> m4_612  [key=0, style=solid];
m4_611 -> m4_614  [key=0, style=solid];
m4_611 -> m4_403  [key=2, style=dotted];
m4_611 -> m4_607  [key=2, style=dotted];
m4_611 -> m4_617  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_614 -> m4_615  [key=0, style=solid];
m4_614 -> m4_616  [key=0, style=solid];
m4_614 -> m4_11  [key=2, style=dotted];
m4_616 -> m4_626  [key=0, style=solid];
m4_616 -> m4_188  [key=2, style=dotted];
m4_616 -> m4_189  [key=2, style=dotted];
m4_616 -> m4_617  [key=0, style=solid];
m4_616 -> m4_622  [key=0, style=solid];
m4_598 -> m4_599  [key=0, style=solid];
m4_598 -> m4_601  [key=0, style=solid];
m4_598 -> m4_11  [key=2, style=dotted];
m4_599 -> m4_600  [key=0, style=solid];
m4_599 -> m4_595  [key=0, style=solid];
m4_599 -> m4_69  [key=2, style=dotted];
m4_599 -> m4_601  [color=darkseagreen4, key=1, label=j, style=dashed];
m4_599 -> m4_605  [color=darkseagreen4, key=1, label=j, style=dashed];
m4_601 -> m4_602  [key=0, style=solid];
m4_601 -> m4_617  [color=darkseagreen4, key=1, label=endPosition, style=dashed];
m4_600 -> m4_626  [key=0, style=solid];
m4_600 -> m4_189  [key=2, style=dotted];
m4_600 -> m4_601  [key=0, style=solid];
m4_600 -> m4_606  [key=0, style=solid];
m4_602 -> m4_617  [key=0, style=solid];
m4_602 -> m4_8  [key=2, style=dotted];
m4_602 -> m4_603  [key=0, style=solid];
m4_602 -> m4_608  [key=2, style=dotted];
m4_602 -> m4_609  [key=2, style=dotted];
m4_602 -> m4_604  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_604 -> m4_595  [key=0, style=solid];
m4_604 -> m4_11  [key=2, style=dotted];
m4_604 -> m4_605  [key=0, style=solid];
m4_606 -> m4_607  [key=0, style=solid];
m4_606 -> m4_617  [color=darkseagreen4, key=1, label=endPosition, style=dashed];
m4_606 -> m4_594  [color=blue, key=0, style=bold];
m4_607 -> m4_617  [key=0, style=solid];
m4_607 -> m4_293  [key=2, style=dotted];
m4_609 -> m4_610  [key=0, style=solid];
m4_609 -> m4_617  [color=darkseagreen4, key=1, label=endPosition, style=dashed];
m4_610 -> m4_617  [key=0, style=solid];
m4_610 -> m4_294  [key=2, style=dotted];
m4_610 -> m4_611  [key=0, style=solid];
m4_612 -> m4_613  [key=0, style=solid];
m4_612 -> m4_617  [color=darkseagreen4, key=1, label=endPosition, style=dashed];
m4_612 -> m4_8  [key=2, style=dotted];
m4_612 -> m4_608  [key=2, style=dotted];
m4_612 -> m4_609  [key=2, style=dotted];
m4_612 -> m4_614  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_613 -> m4_617  [key=0, style=solid];
m4_613 -> m4_10  [key=2, style=dotted];
m4_613 -> m4_614  [key=0, style=solid];
m4_615 -> m4_617  [key=0, style=solid];
m4_615 -> m4_616  [key=0, style=solid];
m4_615 -> m4_621  [color=darkseagreen4, key=1, label=j, style=dashed];
m4_618 -> m4_619  [key=0, style=solid];
m4_618 -> m4_52  [key=2, style=dotted];
m4_618 -> m4_624  [color=darkseagreen4, key=1, label=constructorName, style=dashed];
m4_618 -> m4_8  [key=2, style=dotted];
m4_618 -> m4_608  [key=2, style=dotted];
m4_618 -> m4_609  [key=2, style=dotted];
m4_618 -> m4_620  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_619 -> m4_620  [key=0, style=solid];
m4_619 -> m4_186  [key=2, style=dotted];
m4_619 -> m4_10  [key=2, style=dotted];
m4_624 -> m4_626  [key=0, style=solid];
m4_624 -> m4_51  [key=2, style=dotted];
m4_624 -> m4_625  [key=0, style=solid];
m4_620 -> m4_621  [key=0, style=solid];
m4_620 -> m4_622  [key=0, style=solid];
m4_620 -> m4_11  [key=2, style=dotted];
m4_621 -> m4_626  [key=0, style=solid];
m4_621 -> m4_188  [key=2, style=dotted];
m4_621 -> m4_189  [key=2, style=dotted];
m4_621 -> m4_621  [color=darkseagreen4, key=1, label=j, style=dashed];
m4_621 -> m4_616  [key=0, style=solid];
m4_622 -> m4_623  [key=0, style=solid];
m4_622 -> m4_610  [color=blue, key=0, style=bold];
m4_623 -> m4_624  [key=0, style=solid];
m4_623 -> m4_357  [key=2, style=dotted];
m4_626 -> m4_556  [color=blue, key=0, style=bold];
m4_626 -> m4_627  [key=0, style=solid];
m4_626 -> m4_629  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_686 -> m4_687  [key=0, style=solid];
m4_686 -> m4_694  [key=0, style=solid];
m4_686 -> m4_188  [key=2, style=dotted];
m4_686 -> m4_189  [key=2, style=dotted];
m4_713 -> m4_798  [color=green, key=3, label="Local variable object numberValue", style=bold];
m4_713 -> m4_714  [key=0, style=solid];
m4_713 -> m4_11  [key=2, style=dotted];
m4_713 -> m4_727  [color=darkorchid, key=3, label="Local variable object numberValue", style=bold];
m4_713 -> m4_733  [color=darkorchid, key=3, label="Local variable object numberValue", style=bold];
m4_687 -> m4_713  [color=darkseagreen4, key=1, label=newLinesText, style=dashed];
m4_687 -> m4_688  [color=red, key=0, style=solid];
m4_687 -> m4_690  [color=darkseagreen4, key=1, label=newLinesText, style=dashed];
m4_687 -> m4_698  [color=darkseagreen4, key=1, label=newLinesText, style=dashed];
m4_693 -> m4_713  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_693 -> m4_8  [key=2, style=dotted];
m4_693 -> m4_694  [key=0, style=solid];
m4_693 -> m4_244  [key=2, style=dotted];
m4_693 -> m4_284  [key=2, style=dotted];
m4_693 -> m4_285  [key=2, style=dotted];
m4_693 -> m4_695  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_693 -> m4_696  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_693 -> m4_697  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_693 -> m4_698  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_693 -> m4_699  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_693 -> m4_700  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_693 -> m4_701  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_693 -> m4_702  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_693 -> m4_703  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_693 -> m4_704  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_693 -> m4_705  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_693 -> m4_706  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_693 -> m4_707  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_693 -> m4_708  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_693 -> m4_709  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_693 -> m4_710  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_693 -> m4_711  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_693 -> m4_712  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_693 -> m4_714  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_693 -> m4_715  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_693 -> m4_716  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_693 -> m4_717  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_693 -> m4_718  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_693 -> m4_719  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_693 -> m4_720  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_693 -> m4_721  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_693 -> m4_722  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_693 -> m4_723  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_693 -> m4_724  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_693 -> m4_725  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_693 -> m4_726  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_693 -> m4_727  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_693 -> m4_728  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_693 -> m4_51  [key=2, style=dotted];
m4_712 -> m4_713  [key=0, style=solid];
m4_712 -> m4_11  [key=2, style=dotted];
m4_712 -> m4_718  [key=0, style=solid];
m4_712 -> m4_725  [key=0, style=solid];
m4_712 -> m4_727  [key=0, style=solid];
m4_712 -> m4_729  [key=0, style=solid];
m4_714 -> m4_10  [key=2, style=dotted];
m4_714 -> m4_715  [key=0, style=solid];
m4_714 -> m4_19  [key=2, style=dotted];
m4_714 -> m4_717  [key=0, style=solid];
m4_727 -> m4_10  [key=2, style=dotted];
m4_727 -> m4_728  [key=0, style=solid];
m4_727 -> m4_19  [key=2, style=dotted];
m4_694 -> m4_10  [key=2, style=dotted];
m4_694 -> m4_695  [key=0, style=solid];
m4_694 -> m4_19  [key=2, style=dotted];
m4_694 -> m4_560  [color=blue, key=0, style=bold];
m4_696 -> m4_10  [key=2, style=dotted];
m4_696 -> m4_697  [key=0, style=solid];
m4_696 -> m4_19  [key=2, style=dotted];
m4_699 -> m4_10  [key=2, style=dotted];
m4_699 -> m4_700  [key=0, style=solid];
m4_699 -> m4_19  [key=2, style=dotted];
m4_701 -> m4_10  [key=2, style=dotted];
m4_701 -> m4_702  [key=0, style=solid];
m4_701 -> m4_19  [key=2, style=dotted];
m4_705 -> m4_10  [key=2, style=dotted];
m4_705 -> m4_706  [color=red, key=0, style=solid];
m4_705 -> m4_19  [key=2, style=dotted];
m4_708 -> m4_10  [key=2, style=dotted];
m4_708 -> m4_5  [color=darkorchid, key=3, label="Local variable int initialPosition", style=bold];
m4_708 -> m4_709  [color=red, key=0, style=solid];
m4_708 -> m4_19  [key=2, style=dotted];
m4_711 -> m4_10  [key=2, style=dotted];
m4_711 -> m4_712  [key=0, style=solid];
m4_711 -> m4_19  [key=2, style=dotted];
m4_711 -> m4_730  [key=0, style=solid];
m4_716 -> m4_10  [key=2, style=dotted];
m4_716 -> m4_717  [key=0, style=solid];
m4_716 -> m4_19  [key=2, style=dotted];
m4_716 -> m4_732  [color=red, key=0, style=solid];
m4_716 -> m4_189  [color=red, key=2, style=dotted];
m4_718 -> m4_10  [key=2, style=dotted];
m4_718 -> m4_719  [key=0, style=solid];
m4_718 -> m4_19  [key=2, style=dotted];
m4_720 -> m4_10  [key=2, style=dotted];
m4_720 -> m4_721  [color=red, key=0, style=solid];
m4_720 -> m4_19  [key=2, style=dotted];
m4_720 -> m4_711  [color=red, key=0, style=solid];
m4_720 -> m4_102  [color=red, key=2, style=dotted];
m4_723 -> m4_10  [key=2, style=dotted];
m4_723 -> m4_724  [color=red, key=0, style=solid];
m4_723 -> m4_19  [key=2, style=dotted];
m4_725 -> m4_10  [key=2, style=dotted];
m4_725 -> m4_726  [key=0, style=solid];
m4_725 -> m4_19  [key=2, style=dotted];
m4_690 -> m4_9  [key=2, style=dotted];
m4_690 -> m4_691  [key=0, style=solid];
m4_690 -> m4_694  [key=0, style=solid];
m4_690 -> m4_188  [key=2, style=dotted];
m4_690 -> m4_189  [key=2, style=dotted];
m4_698 -> m4_11  [key=2, style=dotted];
m4_698 -> m4_699  [key=0, style=solid];
m4_695 -> m4_11  [key=2, style=dotted];
m4_695 -> m4_696  [key=0, style=solid];
m4_697 -> m4_11  [key=2, style=dotted];
m4_697 -> m4_698  [key=0, style=solid];
m4_700 -> m4_11  [key=2, style=dotted];
m4_700 -> m4_701  [key=0, style=solid];
m4_703 -> m4_11  [key=2, style=dotted];
m4_703 -> m4_704  [key=0, style=solid];
m4_704 -> m4_11  [key=2, style=dotted];
m4_704 -> m4_705  [key=0, style=solid];
m4_706 -> m4_11  [key=2, style=dotted];
m4_706 -> m4_707  [color=red, key=0, style=solid];
m4_706 -> m4_708  [color=red, key=0, style=solid];
m4_706 -> m4_102  [color=red, key=2, style=dotted];
m4_707 -> m4_11  [key=2, style=dotted];
m4_707 -> m4_708  [key=0, style=solid];
m4_707 -> m4_732  [color=red, key=0, style=solid];
m4_707 -> m4_188  [color=red, key=2, style=dotted];
m4_707 -> m4_189  [color=red, key=2, style=dotted];
m4_709 -> m4_11  [key=2, style=dotted];
m4_709 -> m4_710  [key=0, style=solid];
m4_709 -> m4_722  [color=red, key=1, label=initialPosition, style=dashed];
m4_710 -> m4_11  [key=2, style=dotted];
m4_710 -> m4_711  [key=0, style=solid];
m4_710 -> m4_786  [color=darkorchid, key=3, label="Local variable bool commentFinished", style=bold];
m4_715 -> m4_11  [key=2, style=dotted];
m4_715 -> m4_716  [color=red, key=0, style=solid];
m4_715 -> m4_711  [key=0, style=solid];
m4_715 -> m4_69  [key=2, style=dotted];
m4_717 -> m4_11  [key=2, style=dotted];
m4_717 -> m4_718  [key=0, style=solid];
m4_717 -> m4_711  [key=0, style=solid];
m4_719 -> m4_11  [key=2, style=dotted];
m4_719 -> m4_720  [color=red, key=0, style=solid];
m4_721 -> m4_11  [key=2, style=dotted];
m4_721 -> m4_722  [color=red, key=0, style=solid];
m4_721 -> m4_711  [color=red, key=0, style=solid];
m4_722 -> m4_11  [key=2, style=dotted];
m4_722 -> m4_723  [color=red, key=0, style=solid];
m4_722 -> m4_295  [color=red, key=2, style=dotted];
m4_724 -> m4_11  [key=2, style=dotted];
m4_724 -> m4_725  [key=0, style=solid];
m4_724 -> m4_711  [color=red, key=0, style=solid];
m4_726 -> m4_11  [key=2, style=dotted];
m4_726 -> m4_727  [key=0, style=solid];
m4_726 -> m4_711  [key=0, style=solid];
m4_726 -> m4_293  [key=2, style=dotted];
m4_728 -> m4_11  [key=2, style=dotted];
m4_728 -> m4_729  [key=0, style=solid];
m4_728 -> m4_711  [key=0, style=solid];
m4_728 -> m4_294  [key=2, style=dotted];
m4_688 -> m4_693  [color=darkseagreen4, key=1, label=json, style=dashed];
m4_688 -> m4_689  [color=red, key=0, style=solid];
m4_688 -> m4_690  [color=red, key=0, style=solid];
m4_688 -> m4_704  [color=red, key=2, style=dotted];
m4_691 -> m4_693  [key=0, style=solid];
m4_691 -> m4_692  [key=0, style=solid];
m4_691 -> m4_730  [key=2, style=dotted];
m4_689 -> m4_690  [key=0, style=solid];
m4_689 -> m4_692  [color=darkseagreen4, key=1, label=count, style=dashed];
m4_689 -> m4_691  [key=0, style=solid];
m4_689 -> m4_693  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m4_692 -> m4_691  [key=0, style=solid];
m4_692 -> m4_692  [color=darkseagreen4, key=1, label=count, style=dashed];
m4_692 -> m4_693  [key=0, style=solid];
m4_692 -> m4_357  [key=2, style=dotted];
m4_729 -> m4_686  [color=blue, key=0, style=bold];
m4_729 -> m4_711  [key=0, style=solid];
m4_677 -> m4_678  [key=0, style=solid];
m4_677 -> m4_681  [key=0, style=solid];
m4_667 -> m4_692  [key=0, style=solid];
m4_667 -> m4_693  [color=darkseagreen4, key=1, label=numberType, style=dashed];
m4_1635 -> m4_1636  [key=0, style=solid];
m4_1637 -> m4_8  [key=2, style=dotted];
m4_1637 -> m4_9  [key=2, style=dotted];
m4_1637 -> m4_1642  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1637 -> m4_1638  [key=0, style=solid];
m4_1636 -> m4_1637  [key=0, style=solid];
m4_1638 -> m4_1641  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1638 -> m4_1639  [key=0, style=solid];
m4_1638 -> m4_1640  [key=2, style=dotted];
m4_1639 -> m4_1635  [color=blue, key=0, style=bold];
m4_20 -> m4_21  [key=0, style=solid];
m4_23 -> m4_10  [key=2, style=dotted];
m4_23 -> m4_24  [key=0, style=solid];
m4_23 -> m4_19  [key=2, style=dotted];
m4_23 -> m4_29  [key=0, style=solid];
m4_25 -> m4_10  [key=2, style=dotted];
m4_25 -> m4_26  [key=0, style=solid];
m4_25 -> m4_19  [key=2, style=dotted];
m4_25 -> m4_27  [key=0, style=solid];
m4_27 -> m4_10  [key=2, style=dotted];
m4_27 -> m4_28  [key=0, style=solid];
m4_27 -> m4_19  [key=2, style=dotted];
m4_27 -> m4_50  [key=2, style=dotted];
m4_29 -> m4_10  [key=2, style=dotted];
m4_29 -> m4_5  [color=darkorchid, key=3, label="Parameter variable int pos", style=bold];
m4_29 -> m4_30  [key=0, style=solid];
m4_29 -> m4_19  [key=2, style=dotted];
m4_29 -> m4_33  [key=0, style=solid];
m4_31 -> m4_10  [key=2, style=dotted];
m4_31 -> m4_32  [key=0, style=solid];
m4_31 -> m4_19  [key=2, style=dotted];
m4_31 -> m4_51  [key=2, style=dotted];
m4_35 -> m4_10  [key=2, style=dotted];
m4_35 -> m4_36  [key=0, style=solid];
m4_35 -> m4_19  [key=2, style=dotted];
m4_37 -> m4_10  [key=2, style=dotted];
m4_37 -> m4_38  [key=0, style=solid];
m4_37 -> m4_43  [key=2, style=dotted];
m4_37 -> m4_41  [key=0, style=solid];
m4_37 -> m4_42  [color=darkseagreen4, key=1, label=dateParseHandling, style=dashed];
m4_22 -> m4_8  [key=2, style=dotted];
m4_22 -> m4_9  [key=2, style=dotted];
m4_22 -> m4_23  [key=0, style=solid];
m4_22 -> m4_25  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_22 -> m4_27  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_22 -> m4_29  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_22 -> m4_31  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_22 -> m4_35  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_22 -> m4_37  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_22 -> m4_24  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_22 -> m4_26  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_22 -> m4_28  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_22 -> m4_30  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_22 -> m4_32  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_22 -> m4_33  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_22 -> m4_34  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_22 -> m4_36  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_22 -> m4_49  [key=2, style=dotted];
m4_24 -> m4_11  [key=2, style=dotted];
m4_24 -> m4_25  [key=0, style=solid];
m4_26 -> m4_11  [key=2, style=dotted];
m4_26 -> m4_27  [key=0, style=solid];
m4_26 -> m4_28  [key=0, style=solid];
m4_28 -> m4_11  [key=2, style=dotted];
m4_28 -> m4_29  [key=0, style=solid];
m4_28 -> m4_47  [key=0, style=solid];
m4_28 -> m4_51  [key=2, style=dotted];
m4_30 -> m4_11  [key=2, style=dotted];
m4_30 -> m4_31  [key=0, style=solid];
m4_30 -> m4_52  [key=2, style=dotted];
m4_32 -> m4_11  [key=2, style=dotted];
m4_32 -> m4_33  [key=0, style=solid];
m4_32 -> m4_47  [key=0, style=solid];
m4_33 -> m4_11  [key=2, style=dotted];
m4_33 -> m4_34  [key=0, style=solid];
m4_33 -> m4_52  [key=2, style=dotted];
m4_33 -> m4_42  [color=darkseagreen4, key=1, label=text, style=dashed];
m4_33 -> m4_45  [color=darkseagreen4, key=1, label=text, style=dashed];
m4_34 -> m4_11  [key=2, style=dotted];
m4_34 -> m4_35  [key=0, style=solid];
m4_34 -> m4_42  [key=2, style=dotted];
m4_34 -> m4_553  [color=darkorchid, key=3, label="Parameter variable char quote", style=bold];
m4_34 -> m4_45  [key=0, style=solid];
m4_36 -> m4_11  [key=2, style=dotted];
m4_36 -> m4_37  [key=0, style=solid];
m4_36 -> m4_38  [key=0, style=solid];
m4_40 -> m4_11  [key=2, style=dotted];
m4_40 -> m4_41  [key=0, style=solid];
m4_40 -> m4_42  [key=2, style=dotted];
m4_38 -> m4_39  [key=0, style=solid];
m4_38 -> m4_44  [key=2, style=dotted];
m4_38 -> m4_40  [key=0, style=solid];
m4_21 -> m4_22  [key=0, style=solid];
m4_21 -> m4_38  [color=darkseagreen4, key=1, label=json, style=dashed];
m4_21 -> m4_48  [key=2, style=dotted];
m4_39 -> m4_40  [key=0, style=solid];
m4_39 -> m4_41  [key=0, style=solid];
m4_39 -> m4_42  [color=darkseagreen4, key=1, label=dateParseHandling, style=dashed];
m4_41 -> m4_20  [color=blue, key=0, style=bold];
m4_41 -> m4_42  [key=0, style=solid];
m4_1384 -> m4_1385  [key=0, style=solid];
m4_1387 -> m4_10  [key=2, style=dotted];
m4_1387 -> m4_1388  [key=0, style=solid];
m4_1387 -> m4_19  [key=2, style=dotted];
m4_1389 -> m4_10  [key=2, style=dotted];
m4_1389 -> m4_1390  [key=0, style=solid];
m4_1389 -> m4_19  [key=2, style=dotted];
m4_1386 -> m4_8  [key=2, style=dotted];
m4_1386 -> m4_9  [key=2, style=dotted];
m4_1386 -> m4_1387  [key=0, style=solid];
m4_1386 -> m4_1389  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1386 -> m4_1388  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1386 -> m4_1390  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1386 -> m4_1391  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1386 -> m4_1392  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1386 -> m4_1393  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1386 -> m4_1394  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1388 -> m4_11  [key=2, style=dotted];
m4_1388 -> m4_1389  [key=0, style=solid];
m4_1390 -> m4_11  [key=2, style=dotted];
m4_1390 -> m4_1391  [key=0, style=solid];
m4_1392 -> m4_11  [key=2, style=dotted];
m4_1392 -> m4_1393  [key=0, style=solid];
m4_1393 -> m4_11  [key=2, style=dotted];
m4_1393 -> m4_1394  [key=0, style=solid];
m4_1394 -> m4_11  [key=2, style=dotted];
m4_1394 -> m4_1395  [key=0, style=solid];
m4_1391 -> m4_130  [key=2, style=dotted];
m4_1391 -> m4_1392  [key=0, style=solid];
m4_1385 -> m4_1386  [key=0, style=solid];
m4_1395 -> m4_1384  [color=blue, key=0, style=bold];
m4_555 -> m4_777  [key=0, style=solid];
m4_555 -> m4_556  [key=0, style=solid];
m4_555 -> m4_558  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_777 -> m4_778  [key=0, style=solid];
m4_777 -> m4_779  [key=0, style=solid];
m4_777 -> m4_627  [key=2, style=dotted];
m4_778 -> m4_780  [key=0, style=solid];
m4_778 -> m4_128  [key=2, style=dotted];
m4_778 -> m4_779  [key=0, style=solid];
m4_779 -> m4_780  [key=0, style=solid];
m4_779 -> m4_189  [key=2, style=dotted];
m4_779 -> m4_9  [key=2, style=dotted];
m4_780 -> m4_555  [color=blue, key=0, style=bold];
m4_780 -> m4_8  [key=2, style=dotted];
m4_780 -> m4_781  [key=0, style=solid];
m4_780 -> m4_782  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_780 -> m4_783  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_780 -> m4_784  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_780 -> m4_785  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_780 -> m4_786  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_780 -> m4_787  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_780 -> m4_788  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_780 -> m4_789  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_780 -> m4_790  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_780 -> m4_791  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_780 -> m4_792  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_780 -> m4_793  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_780 -> m4_794  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_780 -> m4_795  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_259 -> m4_260  [key=0, style=solid];
m4_259 -> m4_259  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m4_259 -> m4_265  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m4_259 -> m4_267  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m4_261 -> m4_8  [key=2, style=dotted];
m4_261 -> m4_9  [key=2, style=dotted];
m4_261 -> m4_262  [key=0, style=solid];
m4_261 -> m4_263  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_261 -> m4_288  [key=0, style=solid];
m4_261 -> m4_188  [key=2, style=dotted];
m4_261 -> m4_189  [key=2, style=dotted];
m4_260 -> m4_261  [key=0, style=solid];
m4_262 -> m4_265  [key=2, style=dotted];
m4_262 -> m4_263  [key=0, style=solid];
m4_262 -> m4_264  [key=0, style=solid];
m4_263 -> m4_262  [key=0, style=solid];
m4_263 -> m4_266  [key=2, style=dotted];
m4_263 -> m4_264  [key=0, style=solid];
m4_263 -> m4_8  [key=2, style=dotted];
m4_263 -> m4_280  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m4_263 -> m4_283  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m4_263 -> m4_284  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m4_264 -> m4_259  [color=blue, key=0, style=bold];
m4_264 -> m4_265  [key=0, style=solid];
m4_264 -> m4_292  [key=2, style=dotted];
m4_285 -> m4_286  [key=0, style=solid];
m4_285 -> m4_285  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m4_815 -> m4_816  [color=green, key=0, style=solid];
m4_815 -> m4_8  [color=green, key=2, style=dotted];
m4_815 -> m4_9  [color=green, key=2, style=dotted];
m4_1894 -> m4_1895  [key=0, style=solid];
m4_1897 -> m4_10  [key=2, style=dotted];
m4_1897 -> m4_1898  [key=0, style=solid];
m4_1897 -> m4_19  [key=2, style=dotted];
m4_1896 -> m4_8  [key=2, style=dotted];
m4_1896 -> m4_9  [key=2, style=dotted];
m4_1896 -> m4_1897  [key=0, style=solid];
m4_1896 -> m4_1901  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1896 -> m4_1898  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1898 -> m4_1899  [key=0, style=solid];
m4_1898 -> m4_1640  [key=2, style=dotted];
m4_1898 -> m4_1900  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1895 -> m4_1896  [key=0, style=solid];
m4_1899 -> m4_1894  [color=blue, key=0, style=bold];
m4_291 -> m4_292  [key=0, style=solid];
m4_19 -> m4_20  [key=0, style=solid];
m4_19 -> m4_22  [color=darkseagreen4, key=1, label=char, style=dashed];
m4_19 -> m4_32  [color=darkseagreen4, key=1, label=char, style=dashed];
m4_19 -> m4_46  [color=darkseagreen4, key=1, label=char, style=dashed];
m4_19 -> m4_476  [color=darkorchid, key=3, label="Parameter variable char quote", style=bold];
m4_44 -> m4_47  [key=0, style=solid];
m4_403 -> m4_11  [key=2, style=dotted];
m4_403 -> m4_404  [key=0, style=solid];
m4_1436 -> m4_1437  [key=0, style=solid];
m4_1437 -> m4_8  [key=2, style=dotted];
m4_1437 -> m4_9  [key=2, style=dotted];
m4_1437 -> m4_1441  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1437 -> m4_1438  [key=0, style=solid];
m4_1438 -> m4_57  [key=2, style=dotted];
m4_1438 -> m4_1439  [key=0, style=solid];
m4_1438 -> m4_1440  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1439 -> m4_1436  [color=blue, key=0, style=bold];
m4_1228 -> m4_1229  [key=0, style=solid];
m4_1229 -> m4_8  [key=2, style=dotted];
m4_1229 -> m4_9  [key=2, style=dotted];
m4_1229 -> m4_1230  [key=0, style=solid];
m4_1229 -> m4_1233  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1230 -> m4_57  [key=2, style=dotted];
m4_1230 -> m4_1231  [key=0, style=solid];
m4_1230 -> m4_1232  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1231 -> m4_1228  [color=blue, key=0, style=bold];
m4_2035 -> m4_2036  [key=0, style=solid];
m4_2038 -> m4_10  [key=2, style=dotted];
m4_2038 -> m4_2039  [key=0, style=solid];
m4_2038 -> m4_19  [key=2, style=dotted];
m4_2043 -> m4_10  [key=2, style=dotted];
m4_2043 -> m4_2044  [key=0, style=solid];
m4_2043 -> m4_19  [key=2, style=dotted];
m4_2048 -> m4_10  [key=2, style=dotted];
m4_2048 -> m4_2049  [key=0, style=solid];
m4_2048 -> m4_19  [key=2, style=dotted];
m4_2037 -> m4_8  [key=2, style=dotted];
m4_2037 -> m4_2038  [key=0, style=solid];
m4_2037 -> m4_2058  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2037 -> m4_2061  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2037 -> m4_2043  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2037 -> m4_2064  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2037 -> m4_2048  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2037 -> m4_2067  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2037 -> m4_2070  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2037 -> m4_2073  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2037 -> m4_2040  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2037 -> m4_2041  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2037 -> m4_2044  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2037 -> m4_2046  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2037 -> m4_2049  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2037 -> m4_2051  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2037 -> m4_2052  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2037 -> m4_2053  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2036 -> m4_9  [key=2, style=dotted];
m4_2036 -> m4_2037  [key=0, style=solid];
m4_2036 -> m4_2056  [key=2, style=dotted];
m4_2036 -> m4_2039  [color=darkseagreen4, key=1, label=toggleReaderError, style=dashed];
m4_2036 -> m4_2042  [color=darkseagreen4, key=1, label=toggleReaderError, style=dashed];
m4_2036 -> m4_2045  [color=darkseagreen4, key=1, label=toggleReaderError, style=dashed];
m4_2036 -> m4_2047  [color=darkseagreen4, key=1, label=toggleReaderError, style=dashed];
m4_2036 -> m4_2050  [color=darkseagreen4, key=1, label=toggleReaderError, style=dashed];
m4_2036 -> m4_2054  [color=darkseagreen4, key=1, label=toggleReaderError, style=dashed];
m4_2044 -> m4_11  [key=2, style=dotted];
m4_2044 -> m4_2045  [key=0, style=solid];
m4_2049 -> m4_11  [key=2, style=dotted];
m4_2049 -> m4_2050  [key=0, style=solid];
m4_2040 -> m4_57  [key=2, style=dotted];
m4_2040 -> m4_2041  [key=0, style=solid];
m4_2040 -> m4_2057  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_2041 -> m4_57  [key=2, style=dotted];
m4_2041 -> m4_2042  [key=0, style=solid];
m4_2041 -> m4_2060  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_2046 -> m4_57  [key=2, style=dotted];
m4_2046 -> m4_2047  [key=0, style=solid];
m4_2046 -> m4_2063  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_2051 -> m4_57  [key=2, style=dotted];
m4_2051 -> m4_2052  [key=0, style=solid];
m4_2051 -> m4_2066  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_2052 -> m4_57  [key=2, style=dotted];
m4_2052 -> m4_2053  [key=0, style=solid];
m4_2052 -> m4_2069  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_2053 -> m4_57  [key=2, style=dotted];
m4_2053 -> m4_2054  [key=0, style=solid];
m4_2053 -> m4_2072  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_2039 -> m4_2040  [key=0, style=solid];
m4_2042 -> m4_2043  [key=0, style=solid];
m4_2047 -> m4_2048  [key=0, style=solid];
m4_2045 -> m4_2046  [key=0, style=solid];
m4_2050 -> m4_2051  [key=0, style=solid];
m4_2054 -> m4_2055  [key=0, style=solid];
m4_2055 -> m4_2035  [color=blue, key=0, style=bold];
m4_302 -> m4_11  [key=2, style=dotted];
m4_302 -> m4_303  [key=0, style=solid];
m4_46 -> m4_47  [key=0, style=solid];
m4_42 -> m4_43  [key=0, style=solid];
m4_42 -> m4_45  [key=0, style=solid];
m4_42 -> m4_53  [key=2, style=dotted];
m4_45 -> m4_46  [key=0, style=solid];
m4_45 -> m4_51  [key=2, style=dotted];
m4_43 -> m4_44  [key=0, style=solid];
m4_43 -> m4_51  [key=2, style=dotted];
m4_47 -> m4_19  [color=blue, key=0, style=bold];
m4_47 -> m4_8  [key=2, style=dotted];
m4_47 -> m4_9  [key=2, style=dotted];
m4_47 -> m4_48  [key=0, style=solid];
m4_47 -> m4_50  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_47 -> m4_53  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_47 -> m4_55  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_47 -> m4_49  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_47 -> m4_51  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_47 -> m4_52  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_47 -> m4_59  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_47 -> m4_54  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_219 -> m4_262  [key=0, style=solid];
m4_69 -> m4_70  [key=0, style=solid];
m4_69 -> m4_72  [color=darkorchid, key=3, label="method methodReturn int ReadData", style=bold];
m4_69 -> m4_774  [color=darkorchid, key=3, label="Parameter variable bool append", style=bold];
m4_69 -> m4_786  [color=darkorchid, key=3, label="Parameter variable bool append", style=bold];
m4_69 -> m4_57  [key=2, style=dotted];
m4_69 -> m4_81  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_70 -> m4_71  [key=0, style=solid];
m4_70 -> m4_72  [key=2, style=dotted];
m4_70 -> m4_57  [key=2, style=dotted];
m4_70 -> m4_3  [color=darkorchid, key=3, label="Parameter variable char[] dst", style=bold];
m4_70 -> m4_5  [color=darkorchid, key=3, label="Parameter variable int srcOffset", style=bold];
m4_70 -> m4_104  [color=darkorchid, key=3, label="Parameter variable int dstOffset", style=bold];
m4_70 -> m4_108  [color=darkorchid, key=3, label="Parameter variable int count", style=bold];
m4_70 -> m4_103  [color=darkorchid, key=3, label="Parameter variable char[] dst", style=bold];
m4_70 -> m4_112  [color=darkorchid, key=3, label="Parameter variable char[] dst", style=bold];
m4_70 -> m4_84  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_71 -> m4_69  [color=blue, key=0, style=bold];
m4_71 -> m4_10  [key=2, style=dotted];
m4_71 -> m4_71  [color=darkorchid, key=3, label="Local variable int charByteCount", style=bold];
m4_71 -> m4_72  [key=0, style=solid];
m4_71 -> m4_19  [key=2, style=dotted];
m4_1141 -> m4_1142  [key=0, style=solid];
m4_1144 -> m4_10  [key=2, style=dotted];
m4_1144 -> m4_1145  [key=0, style=solid];
m4_1144 -> m4_19  [key=2, style=dotted];
m4_1158 -> m4_10  [key=2, style=dotted];
m4_1158 -> m4_1159  [key=0, style=solid];
m4_1158 -> m4_19  [key=2, style=dotted];
m4_1160 -> m4_10  [key=2, style=dotted];
m4_1160 -> m4_1161  [key=0, style=solid];
m4_1160 -> m4_43  [key=2, style=dotted];
m4_1143 -> m4_8  [key=2, style=dotted];
m4_1143 -> m4_1144  [key=0, style=solid];
m4_1143 -> m4_1158  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1143 -> m4_1160  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1143 -> m4_1145  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1143 -> m4_1146  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1143 -> m4_1147  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1143 -> m4_1148  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1143 -> m4_1149  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1143 -> m4_1150  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1143 -> m4_1151  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1143 -> m4_1152  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1143 -> m4_1153  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1143 -> m4_1154  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1143 -> m4_1155  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1143 -> m4_1156  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1143 -> m4_1157  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1143 -> m4_1159  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1142 -> m4_9  [key=2, style=dotted];
m4_1142 -> m4_1143  [key=0, style=solid];
m4_1146 -> m4_61  [key=2, style=dotted];
m4_1146 -> m4_1147  [key=0, style=solid];
m4_1150 -> m4_61  [key=2, style=dotted];
m4_1150 -> m4_1151  [key=0, style=solid];
m4_1154 -> m4_61  [key=2, style=dotted];
m4_1154 -> m4_1155  [key=0, style=solid];
m4_1145 -> m4_11  [key=2, style=dotted];
m4_1145 -> m4_1146  [key=0, style=solid];
m4_1147 -> m4_11  [key=2, style=dotted];
m4_1147 -> m4_1148  [key=0, style=solid];
m4_1148 -> m4_11  [key=2, style=dotted];
m4_1148 -> m4_1149  [key=0, style=solid];
m4_1149 -> m4_11  [key=2, style=dotted];
m4_1149 -> m4_1150  [key=0, style=solid];
m4_1151 -> m4_11  [key=2, style=dotted];
m4_1151 -> m4_1152  [key=0, style=solid];
m4_1152 -> m4_11  [key=2, style=dotted];
m4_1152 -> m4_1153  [key=0, style=solid];
m4_1153 -> m4_11  [key=2, style=dotted];
m4_1153 -> m4_1154  [key=0, style=solid];
m4_1155 -> m4_11  [key=2, style=dotted];
m4_1155 -> m4_1156  [key=0, style=solid];
m4_1156 -> m4_11  [key=2, style=dotted];
m4_1156 -> m4_1157  [key=0, style=solid];
m4_1157 -> m4_11  [key=2, style=dotted];
m4_1157 -> m4_1158  [key=0, style=solid];
m4_1159 -> m4_11  [key=2, style=dotted];
m4_1159 -> m4_1160  [key=0, style=solid];
m4_1161 -> m4_1141  [color=blue, key=0, style=bold];
m4_646 -> m4_647  [key=0, style=solid];
m4_646 -> m4_648  [key=0, style=solid];
m4_647 -> m4_8  [key=2, style=dotted];
m4_647 -> m4_9  [key=2, style=dotted];
m4_647 -> m4_648  [key=0, style=solid];
m4_647 -> m4_651  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_647 -> m4_693  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m4_648 -> m4_57  [key=2, style=dotted];
m4_648 -> m4_649  [key=0, style=solid];
m4_648 -> m4_650  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_649 -> m4_646  [color=blue, key=0, style=bold];
m4_649 -> m4_694  [key=0, style=solid];
m4_649 -> m4_52  [key=2, style=dotted];
m4_649 -> m4_188  [key=2, style=dotted];
m4_649 -> m4_189  [key=2, style=dotted];
m4_1644 -> m4_1645  [key=0, style=solid];
m4_1647 -> m4_10  [key=2, style=dotted];
m4_1647 -> m4_1648  [key=0, style=solid];
m4_1647 -> m4_19  [key=2, style=dotted];
m4_1649 -> m4_10  [key=2, style=dotted];
m4_1649 -> m4_1650  [key=0, style=solid];
m4_1649 -> m4_19  [key=2, style=dotted];
m4_1651 -> m4_10  [key=2, style=dotted];
m4_1651 -> m4_1652  [key=0, style=solid];
m4_1651 -> m4_19  [key=2, style=dotted];
m4_1653 -> m4_10  [key=2, style=dotted];
m4_1653 -> m4_1654  [key=0, style=solid];
m4_1653 -> m4_19  [key=2, style=dotted];
m4_1655 -> m4_10  [key=2, style=dotted];
m4_1655 -> m4_1656  [key=0, style=solid];
m4_1655 -> m4_19  [key=2, style=dotted];
m4_1657 -> m4_10  [key=2, style=dotted];
m4_1657 -> m4_1658  [key=0, style=solid];
m4_1657 -> m4_19  [key=2, style=dotted];
m4_1659 -> m4_10  [key=2, style=dotted];
m4_1659 -> m4_1660  [key=0, style=solid];
m4_1659 -> m4_19  [key=2, style=dotted];
m4_1661 -> m4_10  [key=2, style=dotted];
m4_1661 -> m4_1662  [key=0, style=solid];
m4_1661 -> m4_19  [key=2, style=dotted];
m4_1663 -> m4_10  [key=2, style=dotted];
m4_1663 -> m4_1664  [key=0, style=solid];
m4_1663 -> m4_19  [key=2, style=dotted];
m4_1665 -> m4_10  [key=2, style=dotted];
m4_1665 -> m4_1666  [key=0, style=solid];
m4_1665 -> m4_43  [key=2, style=dotted];
m4_1646 -> m4_8  [key=2, style=dotted];
m4_1646 -> m4_1647  [key=0, style=solid];
m4_1646 -> m4_1649  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1646 -> m4_1651  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1646 -> m4_1653  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1646 -> m4_1655  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1646 -> m4_1657  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1646 -> m4_1659  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1646 -> m4_1661  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1646 -> m4_1663  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1646 -> m4_1665  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1646 -> m4_244  [key=2, style=dotted];
m4_1646 -> m4_284  [key=2, style=dotted];
m4_1646 -> m4_285  [key=2, style=dotted];
m4_1646 -> m4_1648  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1646 -> m4_1650  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1646 -> m4_1652  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1646 -> m4_1654  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1646 -> m4_1656  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1646 -> m4_1658  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1646 -> m4_1660  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1646 -> m4_1662  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1646 -> m4_1664  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1648 -> m4_11  [key=2, style=dotted];
m4_1648 -> m4_1649  [key=0, style=solid];
m4_1650 -> m4_11  [key=2, style=dotted];
m4_1650 -> m4_1651  [key=0, style=solid];
m4_1652 -> m4_11  [key=2, style=dotted];
m4_1652 -> m4_1653  [key=0, style=solid];
m4_1654 -> m4_11  [key=2, style=dotted];
m4_1654 -> m4_1655  [key=0, style=solid];
m4_1656 -> m4_11  [key=2, style=dotted];
m4_1656 -> m4_1657  [key=0, style=solid];
m4_1658 -> m4_11  [key=2, style=dotted];
m4_1658 -> m4_1659  [key=0, style=solid];
m4_1660 -> m4_11  [key=2, style=dotted];
m4_1660 -> m4_1661  [key=0, style=solid];
m4_1662 -> m4_11  [key=2, style=dotted];
m4_1662 -> m4_1663  [key=0, style=solid];
m4_1664 -> m4_11  [key=2, style=dotted];
m4_1664 -> m4_1665  [key=0, style=solid];
m4_1645 -> m4_1646  [key=0, style=solid];
m4_1666 -> m4_1644  [color=blue, key=0, style=bold];
m4_795 -> m4_11  [key=2, style=dotted];
m4_795 -> m4_796  [key=0, style=solid];
m4_2056 -> m4_2101  [key=0, style=solid];
m4_2101 -> m4_2102  [key=0, style=solid];
m4_2102 -> m4_2056  [color=blue, key=0, style=bold];
m4_141 -> m4_142  [key=0, style=solid];
m4_141 -> m4_10  [key=2, style=dotted];
m4_141 -> m4_19  [key=2, style=dotted];
m4_142 -> m4_143  [key=0, style=solid];
m4_142 -> m4_144  [key=2, style=dotted];
m4_142 -> m4_11  [key=2, style=dotted];
m4_143 -> m4_141  [color=blue, key=0, style=bold];
m4_143 -> m4_10  [key=2, style=dotted];
m4_143 -> m4_144  [key=0, style=solid];
m4_143 -> m4_19  [key=2, style=dotted];
m4_562 -> m4_563  [key=0, style=solid];
m4_565 -> m4_10  [key=2, style=dotted];
m4_565 -> m4_566  [key=0, style=solid];
m4_565 -> m4_294  [color=blue, key=0, style=bold];
m4_564 -> m4_8  [key=2, style=dotted];
m4_564 -> m4_9  [key=2, style=dotted];
m4_564 -> m4_565  [key=0, style=solid];
m4_564 -> m4_573  [key=2, style=dotted];
m4_564 -> m4_566  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_564 -> m4_570  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_564 -> m4_15  [key=2, style=dotted];
m4_566 -> m4_11  [key=2, style=dotted];
m4_566 -> m4_567  [key=0, style=solid];
m4_570 -> m4_57  [key=2, style=dotted];
m4_570 -> m4_571  [key=0, style=solid];
m4_570 -> m4_574  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_570 -> m4_293  [color=blue, key=0, style=bold];
m4_563 -> m4_564  [key=0, style=solid];
m4_563 -> m4_569  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_569 -> m4_575  [color=darkseagreen4, key=1, label=total, style=dashed];
m4_569 -> m4_570  [key=0, style=solid];
m4_569 -> m4_15  [key=2, style=dotted];
m4_567 -> m4_569  [color=darkseagreen4, key=1, label=j, style=dashed];
m4_567 -> m4_568  [key=0, style=solid];
m4_567 -> m4_571  [color=darkseagreen4, key=1, label=j, style=dashed];
m4_567 -> m4_102  [key=2, style=dotted];
m4_571 -> m4_571  [color=darkseagreen4, key=1, label=j, style=dashed];
m4_571 -> m4_568  [key=0, style=solid];
m4_571 -> m4_572  [key=0, style=solid];
m4_571 -> m4_573  [color=darkseagreen4, key=1, label=finished, style=dashed];
m4_571 -> m4_786  [color=darkorchid, key=3, label="Local variable bool finished", style=bold];
m4_568 -> m4_569  [key=0, style=solid];
m4_568 -> m4_572  [key=0, style=solid];
m4_572 -> m4_562  [color=blue, key=0, style=bold];
m4_572 -> m4_573  [key=0, style=solid];
m4_572 -> m4_589  [color=darkseagreen4, key=1, label=ateWhitespace, style=dashed];
m4_572 -> m4_786  [color=darkorchid, key=3, label="Local variable bool ateWhitespace", style=bold];
m4_267 -> m4_268  [key=0, style=solid];
m4_269 -> m4_8  [key=2, style=dotted];
m4_269 -> m4_270  [key=0, style=solid];
m4_269 -> m4_244  [key=2, style=dotted];
m4_269 -> m4_284  [key=2, style=dotted];
m4_269 -> m4_285  [key=2, style=dotted];
m4_269 -> m4_271  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m4_269 -> m4_272  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_269 -> m4_273  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_269 -> m4_274  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_269 -> m4_275  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_269 -> m4_276  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_269 -> m4_277  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_269 -> m4_278  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_269 -> m4_279  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_269 -> m4_280  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_269 -> m4_281  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_269 -> m4_282  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_269 -> m4_194  [key=0, style=solid];
m4_273 -> m4_11  [key=2, style=dotted];
m4_273 -> m4_274  [key=0, style=solid];
m4_273 -> m4_194  [key=0, style=solid];
m4_273 -> m4_276  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m4_273 -> m4_277  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m4_274 -> m4_11  [key=2, style=dotted];
m4_274 -> m4_275  [key=0, style=solid];
m4_276 -> m4_11  [key=2, style=dotted];
m4_276 -> m4_277  [key=0, style=solid];
m4_276 -> m4_194  [key=0, style=solid];
m4_278 -> m4_11  [key=2, style=dotted];
m4_278 -> m4_279  [key=0, style=solid];
m4_278 -> m4_280  [key=0, style=solid];
m4_280 -> m4_11  [key=2, style=dotted];
m4_280 -> m4_281  [key=0, style=solid];
m4_280 -> m4_282  [key=0, style=solid];
m4_282 -> m4_11  [key=2, style=dotted];
m4_282 -> m4_283  [key=0, style=solid];
m4_282 -> m4_284  [key=0, style=solid];
m4_268 -> m4_269  [key=0, style=solid];
m4_268 -> m4_293  [key=2, style=dotted];
m4_270 -> m4_19  [key=2, style=dotted];
m4_270 -> m4_265  [key=2, style=dotted];
m4_270 -> m4_271  [key=0, style=solid];
m4_271 -> m4_19  [key=2, style=dotted];
m4_271 -> m4_265  [key=2, style=dotted];
m4_271 -> m4_272  [key=0, style=solid];
m4_272 -> m4_273  [key=0, style=solid];
m4_272 -> m4_19  [key=2, style=dotted];
m4_272 -> m4_265  [key=2, style=dotted];
m4_272 -> m4_294  [key=2, style=dotted];
m4_275 -> m4_276  [key=0, style=solid];
m4_275 -> m4_19  [key=2, style=dotted];
m4_275 -> m4_265  [key=2, style=dotted];
m4_277 -> m4_278  [key=0, style=solid];
m4_277 -> m4_19  [key=2, style=dotted];
m4_277 -> m4_265  [key=2, style=dotted];
m4_277 -> m4_277  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m4_277 -> m4_279  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m4_277 -> m4_282  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m4_277 -> m4_283  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m4_277 -> m4_285  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m4_279 -> m4_280  [key=0, style=solid];
m4_279 -> m4_19  [key=2, style=dotted];
m4_279 -> m4_265  [key=2, style=dotted];
m4_279 -> m4_285  [key=0, style=solid];
m4_279 -> m4_295  [key=2, style=dotted];
m4_281 -> m4_282  [key=0, style=solid];
m4_281 -> m4_19  [key=2, style=dotted];
m4_281 -> m4_265  [key=2, style=dotted];
m4_281 -> m4_8  [key=2, style=dotted];
m4_281 -> m4_283  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m4_281 -> m4_284  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m4_283 -> m4_267  [color=blue, key=0, style=bold];
m4_283 -> m4_284  [key=0, style=solid];
m4_283 -> m4_296  [key=2, style=dotted];
m4_987 -> m4_988  [key=0, style=solid];
m4_991 -> m4_10  [key=2, style=dotted];
m4_991 -> m4_992  [key=0, style=solid];
m4_993 -> m4_10  [key=2, style=dotted];
m4_993 -> m4_994  [key=0, style=solid];
m4_997 -> m4_10  [key=2, style=dotted];
m4_997 -> m4_998  [key=0, style=solid];
m4_997 -> m4_19  [key=2, style=dotted];
m4_999 -> m4_10  [key=2, style=dotted];
m4_999 -> m4_1000  [key=0, style=solid];
m4_999 -> m4_43  [key=2, style=dotted];
m4_990 -> m4_8  [key=2, style=dotted];
m4_990 -> m4_9  [key=2, style=dotted];
m4_990 -> m4_991  [key=0, style=solid];
m4_990 -> m4_993  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_990 -> m4_997  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_990 -> m4_999  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_990 -> m4_992  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_990 -> m4_994  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_990 -> m4_995  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_990 -> m4_996  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_990 -> m4_998  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_990 -> m4_1000  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_992 -> m4_11  [key=2, style=dotted];
m4_992 -> m4_993  [key=0, style=solid];
m4_994 -> m4_11  [key=2, style=dotted];
m4_994 -> m4_995  [key=0, style=solid];
m4_995 -> m4_11  [key=2, style=dotted];
m4_995 -> m4_996  [key=0, style=solid];
m4_996 -> m4_11  [key=2, style=dotted];
m4_996 -> m4_997  [key=0, style=solid];
m4_996 -> m4_219  [key=2, style=dotted];
m4_998 -> m4_11  [key=2, style=dotted];
m4_998 -> m4_999  [key=0, style=solid];
m4_1000 -> m4_11  [key=2, style=dotted];
m4_1000 -> m4_1001  [key=0, style=solid];
m4_989 -> m4_990  [key=0, style=solid];
m4_989 -> m4_493  [key=2, style=dotted];
m4_988 -> m4_989  [key=0, style=solid];
m4_1001 -> m4_987  [color=blue, key=0, style=bold];
m4_678 -> m4_679  [key=0, style=solid];
m4_678 -> m4_52  [key=2, style=dotted];
m4_679 -> m4_8  [key=2, style=dotted];
m4_679 -> m4_9  [key=2, style=dotted];
m4_679 -> m4_680  [key=0, style=solid];
m4_679 -> m4_681  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_679 -> m4_684  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_679 -> m4_703  [key=2, style=dotted];
m4_679 -> m4_693  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m4_681 -> m4_57  [key=2, style=dotted];
m4_681 -> m4_682  [key=0, style=solid];
m4_681 -> m4_683  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_681 -> m4_52  [key=2, style=dotted];
m4_681 -> m4_684  [color=darkseagreen4, key=1, label=number, style=dashed];
m4_681 -> m4_686  [color=darkseagreen4, key=1, label=number, style=dashed];
m4_681 -> m4_688  [color=red, key=1, label=number, style=dashed];
m4_681 -> m4_690  [color=darkseagreen4, key=1, label=number, style=dashed];
m4_680 -> m4_681  [key=0, style=solid];
m4_680 -> m4_19  [key=2, style=dotted];
m4_680 -> m4_265  [key=2, style=dotted];
m4_680 -> m4_692  [key=0, style=solid];
m4_680 -> m4_693  [color=darkseagreen4, key=1, label=numberType, style=dashed];
m4_682 -> m4_678  [color=blue, key=0, style=bold];
m4_682 -> m4_683  [key=0, style=solid];
m4_682 -> m4_687  [key=0, style=solid];
m4_520 -> m4_521  [key=0, style=solid];
m4_2093 -> m4_2094  [key=0, style=solid];
m4_2095 -> m4_57  [key=2, style=dotted];
m4_2095 -> m4_2096  [key=0, style=solid];
m4_2095 -> m4_2097  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_2094 -> m4_2098  [color=darkseagreen4, key=1, label=json, style=dashed];
m4_2094 -> m4_2095  [key=0, style=solid];
m4_2096 -> m4_2093  [color=blue, key=0, style=bold];
m4_454 -> m4_458  [key=0, style=solid];
m4_454 -> m4_11  [key=2, style=dotted];
m4_454 -> m4_455  [key=0, style=solid];
m4_458 -> m4_459  [key=0, style=solid];
m4_458 -> m4_465  [color=darkseagreen4, key=1, label=initialPosition, style=dashed];
m4_458 -> m4_471  [color=darkseagreen4, key=1, label=initialPosition, style=dashed];
m4_458 -> m4_11  [key=2, style=dotted];
m4_459 -> m4_460  [key=0, style=solid];
m4_459 -> m4_474  [key=0, style=solid];
m4_459 -> m4_11  [key=2, style=dotted];
m4_465 -> m4_466  [key=0, style=solid];
m4_465 -> m4_295  [key=2, style=dotted];
m4_465 -> m4_265  [key=2, style=dotted];
m4_471 -> m4_472  [key=0, style=solid];
m4_471 -> m4_295  [key=2, style=dotted];
m4_471 -> m4_11  [key=2, style=dotted];
m4_460 -> m4_461  [key=0, style=solid];
m4_460 -> m4_467  [key=0, style=solid];
m4_460 -> m4_11  [key=2, style=dotted];
m4_461 -> m4_462  [key=0, style=solid];
m4_461 -> m4_265  [key=2, style=dotted];
m4_467 -> m4_468  [key=0, style=solid];
m4_467 -> m4_470  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m4_467 -> m4_473  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m4_467 -> m4_11  [key=2, style=dotted];
m4_462 -> m4_463  [key=0, style=solid];
m4_462 -> m4_465  [key=0, style=solid];
m4_462 -> m4_11  [key=2, style=dotted];
m4_463 -> m4_464  [key=0, style=solid];
m4_463 -> m4_459  [key=0, style=solid];
m4_463 -> m4_69  [key=2, style=dotted];
m4_463 -> m4_11  [key=2, style=dotted];
m4_464 -> m4_474  [key=0, style=solid];
m4_464 -> m4_189  [key=2, style=dotted];
m4_464 -> m4_11  [key=2, style=dotted];
m4_464 -> m4_465  [key=0, style=solid];
m4_466 -> m4_474  [key=0, style=solid];
m4_466 -> m4_11  [key=2, style=dotted];
m4_466 -> m4_467  [key=0, style=solid];
m4_468 -> m4_469  [key=0, style=solid];
m4_468 -> m4_470  [key=0, style=solid];
m4_468 -> m4_453  [key=2, style=dotted];
m4_468 -> m4_11  [key=2, style=dotted];
m4_470 -> m4_471  [key=0, style=solid];
m4_470 -> m4_473  [key=0, style=solid];
m4_470 -> m4_403  [key=2, style=dotted];
m4_470 -> m4_11  [key=2, style=dotted];
m4_473 -> m4_474  [key=0, style=solid];
m4_473 -> m4_188  [key=2, style=dotted];
m4_473 -> m4_189  [key=2, style=dotted];
m4_473 -> m4_377  [color=blue, key=0, style=bold];
m4_469 -> m4_459  [key=0, style=solid];
m4_469 -> m4_470  [key=0, style=solid];
m4_469 -> m4_265  [key=2, style=dotted];
m4_472 -> m4_474  [key=0, style=solid];
m4_472 -> m4_11  [key=2, style=dotted];
m4_472 -> m4_473  [key=0, style=solid];
m4_474 -> m4_454  [color=blue, key=0, style=bold];
m4_474 -> m4_475  [key=0, style=solid];
m4_751 -> m4_752  [key=0, style=solid];
m4_751 -> m4_769  [color=darkseagreen4, key=1, label=char, style=dashed];
m4_751 -> m4_774  [color=darkorchid, key=3, label="method methodReturn bool IsSeperator", style=bold];
m4_751 -> m4_786  [color=darkorchid, key=3, label="method methodReturn bool IsSeperator", style=bold];
m4_751 -> m4_11  [key=2, style=dotted];
m4_752 -> m4_753  [key=0, style=solid];
m4_752 -> m4_757  [key=0, style=solid];
m4_752 -> m4_761  [key=0, style=solid];
m4_752 -> m4_764  [key=0, style=solid];
m4_752 -> m4_769  [key=0, style=solid];
m4_752 -> m4_660  [key=2, style=dotted];
m4_769 -> m4_770  [key=0, style=solid];
m4_769 -> m4_771  [key=0, style=solid];
m4_769 -> m4_403  [key=2, style=dotted];
m4_769 -> m4_19  [key=2, style=dotted];
m4_769 -> m4_265  [key=2, style=dotted];
m4_753 -> m4_754  [key=0, style=solid];
m4_753 -> m4_759  [key=2, style=dotted];
m4_757 -> m4_758  [key=0, style=solid];
m4_757 -> m4_265  [key=2, style=dotted];
m4_757 -> m4_43  [key=2, style=dotted];
m4_761 -> m4_762  [key=0, style=solid];
m4_764 -> m4_765  [key=0, style=solid];
m4_764 -> m4_19  [key=2, style=dotted];
m4_764 -> m4_265  [key=2, style=dotted];
m4_754 -> m4_755  [key=0, style=solid];
m4_754 -> m4_11  [key=2, style=dotted];
m4_755 -> m4_756  [key=0, style=solid];
m4_755 -> m4_19  [key=2, style=dotted];
m4_755 -> m4_265  [key=2, style=dotted];
m4_756 -> m4_772  [key=0, style=solid];
m4_756 -> m4_11  [key=2, style=dotted];
m4_756 -> m4_757  [key=0, style=solid];
m4_758 -> m4_759  [key=0, style=solid];
m4_758 -> m4_760  [color=red, key=0, style=solid];
m4_758 -> m4_102  [key=2, style=dotted];
m4_758 -> m4_744  [color=blue, key=0, style=bold];
m4_759 -> m4_772  [key=0, style=solid];
m4_760 -> m4_772  [color=red, key=0, style=solid];
m4_760 -> m4_761  [key=0, style=solid];
m4_762 -> m4_763  [key=0, style=solid];
m4_762 -> m4_771  [key=0, style=solid];
m4_762 -> m4_243  [key=2, style=dotted];
m4_763 -> m4_772  [key=0, style=solid];
m4_763 -> m4_8  [key=2, style=dotted];
m4_763 -> m4_9  [key=2, style=dotted];
m4_763 -> m4_764  [key=0, style=solid];
m4_763 -> m4_667  [key=2, style=dotted];
m4_763 -> m4_765  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_763 -> m4_766  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_763 -> m4_767  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_763 -> m4_768  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_763 -> m4_769  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_763 -> m4_770  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_763 -> m4_773  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_763 -> m4_774  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_763 -> m4_775  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_771 -> m4_772  [key=0, style=solid];
m4_771 -> m4_759  [key=2, style=dotted];
m4_765 -> m4_766  [key=0, style=solid];
m4_765 -> m4_11  [key=2, style=dotted];
m4_766 -> m4_767  [key=0, style=solid];
m4_766 -> m4_19  [key=2, style=dotted];
m4_766 -> m4_265  [key=2, style=dotted];
m4_767 -> m4_768  [key=0, style=solid];
m4_767 -> m4_19  [key=2, style=dotted];
m4_767 -> m4_265  [key=2, style=dotted];
m4_768 -> m4_772  [key=0, style=solid];
m4_768 -> m4_11  [key=2, style=dotted];
m4_768 -> m4_769  [key=0, style=solid];
m4_770 -> m4_772  [key=0, style=solid];
m4_770 -> m4_771  [key=0, style=solid];
m4_770 -> m4_660  [key=2, style=dotted];
m4_772 -> m4_751  [color=blue, key=0, style=bold];
m4_772 -> m4_11  [key=2, style=dotted];
m4_772 -> m4_773  [key=0, style=solid];
m4_258 -> m4_262  [key=0, style=solid];
m4_258 -> m4_259  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m4_808 -> m4_809  [key=0, style=solid];
m4_809 -> m4_810  [key=0, style=solid];
m4_809 -> m4_815  [key=2, style=dotted];
m4_809 -> m4_8  [key=2, style=dotted];
m4_809 -> m4_9  [key=2, style=dotted];
m4_810 -> m4_811  [key=0, style=solid];
m4_810 -> m4_812  [key=0, style=solid];
m4_810 -> m4_61  [key=2, style=dotted];
m4_810 -> m4_11  [key=2, style=dotted];
m4_811 -> m4_812  [key=0, style=solid];
m4_811 -> m4_816  [key=2, style=dotted];
m4_811 -> m4_8  [key=2, style=dotted];
m4_811 -> m4_9  [key=2, style=dotted];
m4_812 -> m4_813  [color=green, key=0, style=solid];
m4_812 -> m4_814  [key=0, style=solid];
m4_812 -> m4_61  [key=2, style=dotted];
m4_812 -> m4_11  [key=2, style=dotted];
m4_813 -> m4_814  [color=green, key=0, style=solid];
m4_813 -> m4_817  [key=2, style=dotted];
m4_813 -> m4_8  [color=green, key=2, style=dotted];
m4_813 -> m4_9  [color=green, key=2, style=dotted];
m4_814 -> m4_808  [color=blue, key=0, style=bold];
m4_814 -> m4_815  [color=green, key=0, style=solid];
m4_814 -> m4_61  [color=green, key=2, style=dotted];
m4_814 -> m4_11  [color=green, key=2, style=dotted];
m4_430 -> m4_431  [key=0, style=solid];
m4_430 -> m4_774  [color=darkorchid, key=3, label="method methodReturn bool ParseProperty", style=bold];
m4_430 -> m4_11  [key=2, style=dotted];
m4_431 -> m4_432  [key=0, style=solid];
m4_431 -> m4_433  [color=darkseagreen4, key=1, label=firstChar, style=dashed];
m4_431 -> m4_435  [color=darkseagreen4, key=1, label=firstChar, style=dashed];
m4_431 -> m4_438  [color=darkseagreen4, key=1, label=firstChar, style=dashed];
m4_431 -> m4_11  [key=2, style=dotted];
m4_432 -> m4_433  [key=0, style=solid];
m4_432 -> m4_449  [color=darkseagreen4, key=1, label=quoteChar, style=dashed];
m4_432 -> m4_431  [color=darkorchid, key=3, label="Local variable char quoteChar", style=bold];
m4_432 -> m4_11  [key=2, style=dotted];
m4_433 -> m4_434  [key=0, style=solid];
m4_433 -> m4_438  [key=0, style=solid];
m4_433 -> m4_265  [key=2, style=dotted];
m4_435 -> m4_436  [key=0, style=solid];
m4_435 -> m4_437  [color=darkseagreen4, key=1, label=quoteChar, style=dashed];
m4_435 -> m4_449  [color=darkseagreen4, key=1, label=quoteChar, style=dashed];
m4_435 -> m4_11  [key=2, style=dotted];
m4_438 -> m4_439  [key=0, style=solid];
m4_438 -> m4_442  [key=0, style=solid];
m4_438 -> m4_453  [key=2, style=dotted];
m4_438 -> m4_11  [key=2, style=dotted];
m4_449 -> m4_450  [key=0, style=solid];
m4_449 -> m4_265  [key=2, style=dotted];
m4_434 -> m4_435  [key=0, style=solid];
m4_434 -> m4_11  [key=2, style=dotted];
m4_436 -> m4_437  [key=0, style=solid];
m4_436 -> m4_48  [key=2, style=dotted];
m4_436 -> m4_11  [key=2, style=dotted];
m4_437 -> m4_443  [key=0, style=solid];
m4_437 -> m4_49  [key=2, style=dotted];
m4_437 -> m4_438  [key=0, style=solid];
m4_437 -> m4_265  [key=2, style=dotted];
m4_439 -> m4_440  [key=0, style=solid];
m4_439 -> m4_449  [color=darkseagreen4, key=1, label=quoteChar, style=dashed];
m4_439 -> m4_11  [key=2, style=dotted];
m4_442 -> m4_452  [key=0, style=solid];
m4_442 -> m4_188  [key=2, style=dotted];
m4_442 -> m4_189  [key=2, style=dotted];
m4_442 -> m4_11  [key=2, style=dotted];
m4_442 -> m4_443  [key=0, style=solid];
m4_440 -> m4_441  [key=0, style=solid];
m4_440 -> m4_48  [key=2, style=dotted];
m4_440 -> m4_11  [key=2, style=dotted];
m4_441 -> m4_443  [key=0, style=solid];
m4_441 -> m4_454  [key=2, style=dotted];
m4_441 -> m4_442  [key=0, style=solid];
m4_441 -> m4_265  [key=2, style=dotted];
m4_443 -> m4_444  [key=0, style=solid];
m4_443 -> m4_52  [key=2, style=dotted];
m4_443 -> m4_448  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m4_443 -> m4_11  [key=2, style=dotted];
m4_444 -> m4_445  [key=0, style=solid];
m4_444 -> m4_186  [key=2, style=dotted];
m4_444 -> m4_11  [key=2, style=dotted];
m4_448 -> m4_449  [key=0, style=solid];
m4_448 -> m4_51  [key=2, style=dotted];
m4_448 -> m4_11  [key=2, style=dotted];
m4_445 -> m4_446  [key=0, style=solid];
m4_445 -> m4_447  [key=0, style=solid];
m4_445 -> m4_265  [key=2, style=dotted];
m4_446 -> m4_452  [key=0, style=solid];
m4_446 -> m4_188  [key=2, style=dotted];
m4_446 -> m4_189  [key=2, style=dotted];
m4_446 -> m4_11  [key=2, style=dotted];
m4_446 -> m4_447  [key=0, style=solid];
m4_447 -> m4_448  [key=0, style=solid];
m4_447 -> m4_11  [key=2, style=dotted];
m4_450 -> m4_451  [key=0, style=solid];
m4_450 -> m4_357  [key=2, style=dotted];
m4_450 -> m4_11  [key=2, style=dotted];
m4_451 -> m4_452  [key=0, style=solid];
m4_451 -> m4_11  [key=2, style=dotted];
m4_452 -> m4_430  [color=blue, key=0, style=bold];
m4_452 -> m4_11  [key=2, style=dotted];
m4_452 -> m4_453  [key=0, style=solid];
m4_557 -> m4_802  [key=0, style=solid];
m4_557 -> m4_10  [key=2, style=dotted];
m4_557 -> m4_558  [key=0, style=solid];
m4_802 -> m4_803  [color=green, key=0, style=solid];
m4_802 -> m4_806  [key=0, style=solid];
m4_802 -> m4_627  [key=2, style=dotted];
m4_803 -> m4_804  [color=green, key=0, style=solid];
m4_803 -> m4_805  [key=0, style=solid];
m4_806 -> m4_807  [key=0, style=solid];
m4_806 -> m4_189  [key=2, style=dotted];
m4_806 -> m4_802  [color=blue, key=0, style=bold];
m4_804 -> m4_807  [key=0, style=solid];
m4_804 -> m4_795  [key=2, style=dotted];
m4_804 -> m4_805  [color=green, key=0, style=solid];
m4_804 -> m4_8  [key=2, style=dotted];
m4_804 -> m4_9  [key=2, style=dotted];
m4_805 -> m4_807  [key=0, style=solid];
m4_805 -> m4_51  [key=2, style=dotted];
m4_805 -> m4_805  [color=green, key=0, style=solid];
m4_805 -> m4_806  [color=green, key=0, style=solid];
m4_805 -> m4_10  [color=green, key=2, style=dotted];
m4_807 -> m4_557  [color=blue, key=0, style=bold];
m4_807 -> m4_808  [key=0, style=solid];
m4_816 -> m4_817  [color=green, key=0, style=solid];
m4_816 -> m4_61  [color=green, key=2, style=dotted];
m4_816 -> m4_11  [color=green, key=2, style=dotted];
m4_817 -> m4_818  [color=green, key=0, style=solid];
m4_817 -> m4_8  [color=green, key=2, style=dotted];
m4_817 -> m4_9  [color=green, key=2, style=dotted];
m4_817 -> m4_834  [color=green, key=2, style=dotted];
m4_824 -> m4_825  [color=green, key=0, style=solid];
m4_824 -> m4_57  [color=green, key=2, style=dotted];
m4_824 -> m4_839  [color=green, key=1, label="lambda expression", style=dashed];
m4_823 -> m4_824  [color=green, key=0, style=solid];
m4_823 -> m4_840  [color=green, key=1, label=reader, style=dashed];
m4_823 -> m4_8  [key=2, style=dotted];
m4_823 -> m4_9  [key=2, style=dotted];
m4_825 -> m4_826  [color=green, key=0, style=solid];
m4_825 -> m4_8  [color=green, key=2, style=dotted];
m4_825 -> m4_9  [color=green, key=2, style=dotted];
m4_825 -> m4_843  [color=green, key=1, label=reader, style=dashed];
m4_826 -> m4_827  [color=green, key=0, style=solid];
m4_826 -> m4_57  [key=2, style=dotted];
m4_826 -> m4_842  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_827 -> m4_828  [color=green, key=0, style=solid];
m4_827 -> m4_8  [color=green, key=2, style=dotted];
m4_827 -> m4_9  [color=green, key=2, style=dotted];
m4_827 -> m4_846  [color=green, key=1, label=reader, style=dashed];
m4_828 -> m4_829  [color=green, key=0, style=solid];
m4_828 -> m4_57  [color=green, key=2, style=dotted];
m4_828 -> m4_845  [color=green, key=1, label="lambda expression", style=dashed];
m4_829 -> m4_830  [color=green, key=0, style=solid];
m4_829 -> m4_8  [color=green, key=2, style=dotted];
m4_829 -> m4_9  [color=green, key=2, style=dotted];
m4_830 -> m4_831  [color=green, key=0, style=solid];
m4_830 -> m4_61  [color=green, key=2, style=dotted];
m4_830 -> m4_11  [color=green, key=2, style=dotted];
m4_831 -> m4_8  [key=2, style=dotted];
m4_831 -> m4_9  [key=2, style=dotted];
m4_831 -> m4_832  [key=0, style=solid];
m4_831 -> m4_849  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_821 -> m4_8  [key=2, style=dotted];
m4_821 -> m4_9  [key=2, style=dotted];
m4_821 -> m4_822  [key=0, style=solid];
m4_821 -> m4_835  [key=2, style=dotted];
m4_821 -> m4_837  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_821 -> m4_3  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_4  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_5  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_10  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_11  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_12  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_16  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_17  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_20  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_21  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_22  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_23  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_25  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_27  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_28  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_29  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_30  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_31  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_32  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_33  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_34  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_36  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_38  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_40  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_42  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_43  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_45  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_46  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_59  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_60  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_61  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_63  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_64  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_65  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_66  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_67  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_70  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_73  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_75  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_77  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_79  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_80  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_81  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_82  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_85  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_86  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_88  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_89  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_90  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_91  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_92  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_93  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_94  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_96  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_97  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_103  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_104  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_108  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_110  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_112  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_121  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_122  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_123  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_130  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_134  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_138  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_142  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_146  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_150  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_154  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_161  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_165  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_167  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_170  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_171  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_172  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_174  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_175  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_177  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_181  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_190  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_191  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_192  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_195  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_197  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_199  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_200  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_201  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_203  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_204  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_205  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_206  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_208  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_236  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_237  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_243  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_245  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_246  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_253  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_254  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_255  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_258  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_260  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_261  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_263  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_264  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_267  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_268  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_269  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_271  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_272  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_273  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_276  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_279  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_281  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_283  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_284  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_286  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_299  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_304  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_305  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_308  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_309  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_316  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_318  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_320  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_322  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_323  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_325  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_354  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_358  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_359  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_360  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_364  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_367  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_368  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_369  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_371  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_373  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_374  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_377  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_378  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_381  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_382  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_385  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_388  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_389  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_393  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_395  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_397  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_399  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_400  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_405  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_408  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_409  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_411  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_413  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_414  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_417  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_420  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_422  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_425  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_427  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_428  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_431  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_434  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_436  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_437  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_438  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_440  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_441  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_442  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_443  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_444  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_445  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_446  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_447  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_448  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_449  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_450  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_458  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_460  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_462  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_463  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_464  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_465  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_467  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_468  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_469  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_471  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_473  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_476  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_479  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_480  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_482  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_485  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_488  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_491  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_494  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_495  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_497  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_499  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_500  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_501  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_504  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_507  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_510  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_511  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_512  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_515  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_518  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_521  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_522  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_525  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_526  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_529  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_530  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_533  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_536  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_537  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_540  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_542  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_545  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_547  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_549  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_551  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_563  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_564  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_566  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_567  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_568  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_569  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_574  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_577  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_578  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_580  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_582  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_584  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_587  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_591  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_592  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_593  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_596  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_598  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_599  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_600  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_601  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_602  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_604  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_606  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_607  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_609  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_610  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_612  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_613  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_615  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_616  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_617  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_618  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_619  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_620  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_621  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_622  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_623  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_624  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_625  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_628  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_629  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_630  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_631  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_632  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_635  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_636  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_637  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_641  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_645  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_649  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_650  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_652  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_656  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_659  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_663  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_669  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_673  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_678  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_681  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_682  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_686  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_690  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_692  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_693  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_705  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_706  [color=red, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_707  [color=red, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_708  [color=red, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_709  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_712  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_714  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_715  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_716  [color=red, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_717  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_719  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_720  [color=red, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_721  [color=red, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_722  [color=red, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_723  [color=red, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_726  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_728  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_729  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_730  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_731  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_734  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_738  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_741  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_744  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_747  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_749  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_758  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_760  [color=red, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_762  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_773  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_774  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_775  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_777  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_778  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_779  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_781  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_782  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_783  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_785  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_786  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_787  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_789  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_790  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_792  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_793  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_796  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_797  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_799  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_800  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_802  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_803  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_805  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_806  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_809  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_810  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_811  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_812  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_821 -> m4_813  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m4_822 -> m4_823  [key=0, style=solid];
m4_822 -> m4_57  [key=2, style=dotted];
m4_822 -> m4_836  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_832 -> m4_57  [key=2, style=dotted];
m4_832 -> m4_833  [key=0, style=solid];
m4_832 -> m4_848  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_833 -> m4_807  [color=blue, key=0, style=bold];
m4_1838 -> m4_1839  [key=0, style=solid];
m4_1839 -> m4_8  [key=2, style=dotted];
m4_1839 -> m4_9  [key=2, style=dotted];
m4_1839 -> m4_1840  [key=0, style=solid];
m4_1839 -> m4_1841  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1839 -> m4_1842  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1839 -> m4_1845  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1842 -> m4_57  [key=2, style=dotted];
m4_1842 -> m4_1843  [key=0, style=solid];
m4_1842 -> m4_1844  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1840 -> m4_19  [key=2, style=dotted];
m4_1840 -> m4_265  [key=2, style=dotted];
m4_1840 -> m4_1841  [key=0, style=solid];
m4_1841 -> m4_1842  [key=0, style=solid];
m4_1841 -> m4_19  [key=2, style=dotted];
m4_1841 -> m4_265  [key=2, style=dotted];
m4_1843 -> m4_1838  [color=blue, key=0, style=bold];
m4_207 -> m4_208  [key=0, style=solid];
m4_207 -> m4_254  [color=darkseagreen4, key=1, label=escapeStartPos, style=dashed];
m4_207 -> m4_264  [color=darkseagreen4, key=1, label=escapeStartPos, style=dashed];
m4_210 -> m4_10  [key=2, style=dotted];
m4_210 -> m4_211  [key=0, style=solid];
m4_210 -> m4_19  [key=2, style=dotted];
m4_210 -> m4_214  [key=0, style=solid];
m4_210 -> m4_217  [key=0, style=solid];
m4_210 -> m4_220  [key=0, style=solid];
m4_210 -> m4_223  [key=0, style=solid];
m4_210 -> m4_226  [key=0, style=solid];
m4_210 -> m4_229  [key=0, style=solid];
m4_210 -> m4_234  [key=0, style=solid];
m4_210 -> m4_259  [key=0, style=solid];
m4_211 -> m4_10  [key=2, style=dotted];
m4_211 -> m4_212  [key=0, style=solid];
m4_211 -> m4_19  [key=2, style=dotted];
m4_212 -> m4_10  [key=2, style=dotted];
m4_212 -> m4_213  [key=0, style=solid];
m4_212 -> m4_19  [key=2, style=dotted];
m4_212 -> m4_212  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m4_212 -> m4_215  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m4_209 -> m4_8  [key=2, style=dotted];
m4_209 -> m4_9  [key=2, style=dotted];
m4_209 -> m4_210  [key=0, style=solid];
m4_209 -> m4_211  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_209 -> m4_212  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_209 -> m4_213  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_209 -> m4_214  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_213 -> m4_11  [key=2, style=dotted];
m4_213 -> m4_214  [key=0, style=solid];
m4_213 -> m4_262  [key=0, style=solid];
m4_215 -> m4_11  [key=2, style=dotted];
m4_215 -> m4_216  [key=0, style=solid];
m4_215 -> m4_215  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m4_215 -> m4_218  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m4_217 -> m4_11  [key=2, style=dotted];
m4_217 -> m4_218  [key=0, style=solid];
m4_208 -> m4_209  [key=0, style=solid];
m4_208 -> m4_210  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m4_208 -> m4_232  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m4_208 -> m4_261  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m4_214 -> m4_215  [key=0, style=solid];
m4_214 -> m4_219  [key=2, style=dotted];
m4_214 -> m4_216  [color=darkseagreen4, key=1, label=s, style=dashed];
m4_216 -> m4_217  [key=0, style=solid];
m4_216 -> m4_220  [key=2, style=dotted];
m4_216 -> m4_262  [key=0, style=solid];
m4_218 -> m4_207  [color=blue, key=0, style=bold];
m4_218 -> m4_219  [key=0, style=solid];
m4_218 -> m4_218  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m4_218 -> m4_221  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m4_1120 -> m4_1121  [key=0, style=solid];
m4_1123 -> m4_10  [key=2, style=dotted];
m4_1123 -> m4_1124  [key=0, style=solid];
m4_1123 -> m4_19  [key=2, style=dotted];
m4_1125 -> m4_10  [key=2, style=dotted];
m4_1125 -> m4_1126  [key=0, style=solid];
m4_1129 -> m4_10  [key=2, style=dotted];
m4_1129 -> m4_1130  [key=0, style=solid];
m4_1133 -> m4_10  [key=2, style=dotted];
m4_1133 -> m4_1134  [key=0, style=solid];
m4_1137 -> m4_10  [key=2, style=dotted];
m4_1137 -> m4_1138  [key=0, style=solid];
m4_1137 -> m4_19  [key=2, style=dotted];
m4_1139 -> m4_10  [key=2, style=dotted];
m4_1139 -> m4_1140  [key=0, style=solid];
m4_1139 -> m4_43  [key=2, style=dotted];
m4_1122 -> m4_8  [key=2, style=dotted];
m4_1122 -> m4_1123  [key=0, style=solid];
m4_1122 -> m4_1125  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1122 -> m4_1129  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1122 -> m4_1133  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1122 -> m4_1137  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1122 -> m4_1139  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1122 -> m4_1124  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1122 -> m4_1126  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1122 -> m4_1127  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1122 -> m4_1128  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1122 -> m4_1130  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1122 -> m4_1131  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1122 -> m4_1132  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1122 -> m4_1134  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1122 -> m4_1135  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1122 -> m4_1136  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1122 -> m4_1138  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1121 -> m4_9  [key=2, style=dotted];
m4_1121 -> m4_1122  [key=0, style=solid];
m4_1124 -> m4_11  [key=2, style=dotted];
m4_1124 -> m4_1125  [key=0, style=solid];
m4_1126 -> m4_11  [key=2, style=dotted];
m4_1126 -> m4_1127  [key=0, style=solid];
m4_1127 -> m4_11  [key=2, style=dotted];
m4_1127 -> m4_1128  [key=0, style=solid];
m4_1128 -> m4_11  [key=2, style=dotted];
m4_1128 -> m4_1129  [key=0, style=solid];
m4_1130 -> m4_11  [key=2, style=dotted];
m4_1130 -> m4_1131  [key=0, style=solid];
m4_1131 -> m4_11  [key=2, style=dotted];
m4_1131 -> m4_1132  [key=0, style=solid];
m4_1132 -> m4_11  [key=2, style=dotted];
m4_1132 -> m4_1133  [key=0, style=solid];
m4_1134 -> m4_11  [key=2, style=dotted];
m4_1134 -> m4_1135  [key=0, style=solid];
m4_1135 -> m4_11  [key=2, style=dotted];
m4_1135 -> m4_1136  [key=0, style=solid];
m4_1136 -> m4_11  [key=2, style=dotted];
m4_1136 -> m4_1137  [key=0, style=solid];
m4_1138 -> m4_11  [key=2, style=dotted];
m4_1138 -> m4_1139  [key=0, style=solid];
m4_1140 -> m4_1120  [color=blue, key=0, style=bold];
m4_129 -> m4_130  [key=0, style=solid];
m4_129 -> m4_127  [color=blue, key=0, style=bold];
m4_130 -> m4_131  [key=0, style=solid];
m4_130 -> m4_132  [key=2, style=dotted];
m4_131 -> m4_129  [color=blue, key=0, style=bold];
m4_131 -> m4_132  [key=0, style=solid];
m4_1368 -> m4_1369  [key=0, style=solid];
m4_1372 -> m4_10  [key=2, style=dotted];
m4_1372 -> m4_1373  [key=0, style=solid];
m4_1372 -> m4_19  [key=2, style=dotted];
m4_1374 -> m4_10  [key=2, style=dotted];
m4_1374 -> m4_1375  [key=0, style=solid];
m4_1374 -> m4_19  [key=2, style=dotted];
m4_1381 -> m4_10  [key=2, style=dotted];
m4_1381 -> m4_1382  [key=0, style=solid];
m4_1381 -> m4_19  [key=2, style=dotted];
m4_1370 -> m4_8  [key=2, style=dotted];
m4_1370 -> m4_9  [key=2, style=dotted];
m4_1370 -> m4_1372  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1370 -> m4_1374  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1370 -> m4_1381  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1370 -> m4_1371  [key=0, style=solid];
m4_1370 -> m4_1373  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1370 -> m4_1375  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1370 -> m4_1376  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1370 -> m4_1377  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1370 -> m4_1378  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1370 -> m4_1379  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1370 -> m4_1382  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1373 -> m4_11  [key=2, style=dotted];
m4_1373 -> m4_1374  [key=0, style=solid];
m4_1375 -> m4_11  [key=2, style=dotted];
m4_1375 -> m4_1376  [key=0, style=solid];
m4_1377 -> m4_11  [key=2, style=dotted];
m4_1377 -> m4_1378  [key=0, style=solid];
m4_1378 -> m4_11  [key=2, style=dotted];
m4_1378 -> m4_1379  [key=0, style=solid];
m4_1382 -> m4_11  [key=2, style=dotted];
m4_1382 -> m4_1383  [key=0, style=solid];
m4_1380 -> m4_11  [key=2, style=dotted];
m4_1380 -> m4_1381  [key=0, style=solid];
m4_1380 -> m4_1380  [color=darkseagreen4, key=1, label=dt, style=dashed];
m4_1380 -> m4_1350  [key=2, style=dotted];
m4_1371 -> m4_1372  [key=0, style=solid];
m4_1371 -> m4_1367  [key=2, style=dotted];
m4_1369 -> m4_1370  [key=0, style=solid];
m4_1376 -> m4_1377  [key=0, style=solid];
m4_1376 -> m4_1192  [key=2, style=dotted];
m4_1379 -> m4_1380  [key=0, style=solid];
m4_1383 -> m4_1368  [color=blue, key=0, style=bold];
m4_628 -> m4_10  [key=2, style=dotted];
m4_628 -> m4_629  [key=0, style=solid];
m4_628 -> m4_19  [key=2, style=dotted];
m4_628 -> m4_48  [key=2, style=dotted];
m4_630 -> m4_10  [key=2, style=dotted];
m4_630 -> m4_631  [key=0, style=solid];
m4_630 -> m4_19  [key=2, style=dotted];
m4_630 -> m4_632  [color=darkseagreen4, key=1, label=initialPosition, style=dashed];
m4_631 -> m4_11  [key=2, style=dotted];
m4_631 -> m4_632  [key=0, style=solid];
m4_631 -> m4_315  [key=2, style=dotted];
m4_632 -> m4_11  [key=2, style=dotted];
m4_632 -> m4_633  [key=0, style=solid];
m4_632 -> m4_295  [key=2, style=dotted];
m4_627 -> m4_628  [key=0, style=solid];
m4_627 -> m4_630  [key=0, style=solid];
m4_627 -> m4_744  [key=0, style=solid];
m4_627 -> m4_591  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
m4_627 -> m4_786  [color=darkorchid, key=3, label="method methodReturn bool MatchValueWithTrailingSeperator", style=bold];
m4_627 -> m4_774  [color=darkorchid, key=3, label="method methodReturn bool MatchValueWithTrailingSeperator", style=bold];
m4_629 -> m4_627  [key=0, style=solid];
m4_629 -> m4_629  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_629 -> m4_630  [key=0, style=solid];
m4_629 -> m4_635  [color=darkseagreen4, key=1, label=firstChar, style=dashed];
m4_629 -> m4_636  [color=darkseagreen4, key=1, label=firstChar, style=dashed];
m4_629 -> m4_639  [color=darkseagreen4, key=1, label=firstChar, style=dashed];
m4_629 -> m4_654  [color=darkseagreen4, key=1, label=firstChar, style=dashed];
m4_629 -> m4_666  [color=darkseagreen4, key=1, label=firstChar, style=dashed];
m4_633 -> m4_623  [color=blue, key=0, style=bold];
m4_633 -> m4_634  [key=0, style=solid];
m4_633 -> m4_693  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m4_633 -> m4_642  [color=darkorchid, key=3, label="Local variable object numberValue", style=bold];
m4_633 -> m4_644  [color=darkorchid, key=3, label="Local variable object numberValue", style=bold];
m4_633 -> m4_660  [color=darkorchid, key=3, label="Local variable object numberValue", style=bold];
m4_633 -> m4_672  [color=darkorchid, key=3, label="Local variable object numberValue", style=bold];
m4_633 -> m4_683  [color=darkorchid, key=3, label="Local variable object numberValue", style=bold];
m4_633 -> m4_687  [color=darkorchid, key=3, label="Local variable object numberValue", style=bold];
m4_1016 -> m4_1017  [key=0, style=solid];
m4_1018 -> m4_8  [key=2, style=dotted];
m4_1018 -> m4_9  [key=2, style=dotted];
m4_1018 -> m4_1019  [key=0, style=solid];
m4_1018 -> m4_1020  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1018 -> m4_1021  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1018 -> m4_1022  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1018 -> m4_1023  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1018 -> m4_1024  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1018 -> m4_1025  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1018 -> m4_1026  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1018 -> m4_1027  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1018 -> m4_1028  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1018 -> m4_1029  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1018 -> m4_1030  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1018 -> m4_1031  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1018 -> m4_1032  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1018 -> m4_1033  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1018 -> m4_1034  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1018 -> m4_1035  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1018 -> m4_1036  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1018 -> m4_1037  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1018 -> m4_1038  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1018 -> m4_1039  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1018 -> m4_1040  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1018 -> m4_1041  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1018 -> m4_1042  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1018 -> m4_1043  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1018 -> m4_1044  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1018 -> m4_1045  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1018 -> m4_1046  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1018 -> m4_1047  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1018 -> m4_1048  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1018 -> m4_1049  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1018 -> m4_1050  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1018 -> m4_1051  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1018 -> m4_1052  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1018 -> m4_1053  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1018 -> m4_1054  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1018 -> m4_1055  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1018 -> m4_1056  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1018 -> m4_1057  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1018 -> m4_1058  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1018 -> m4_1059  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1018 -> m4_1060  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1018 -> m4_1061  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1018 -> m4_1062  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1018 -> m4_1063  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1018 -> m4_1064  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1018 -> m4_1065  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1018 -> m4_1066  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1018 -> m4_1067  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1018 -> m4_1068  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1018 -> m4_1069  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1018 -> m4_1070  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1018 -> m4_1071  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1018 -> m4_1072  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1018 -> m4_1073  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1018 -> m4_1074  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1018 -> m4_1075  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1018 -> m4_1076  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1020 -> m4_11  [key=2, style=dotted];
m4_1020 -> m4_1021  [key=0, style=solid];
m4_1022 -> m4_11  [key=2, style=dotted];
m4_1022 -> m4_1023  [key=0, style=solid];
m4_1023 -> m4_11  [key=2, style=dotted];
m4_1023 -> m4_1024  [key=0, style=solid];
m4_1025 -> m4_11  [key=2, style=dotted];
m4_1025 -> m4_1026  [key=0, style=solid];
m4_1026 -> m4_11  [key=2, style=dotted];
m4_1026 -> m4_1027  [key=0, style=solid];
m4_1028 -> m4_11  [key=2, style=dotted];
m4_1028 -> m4_1029  [key=0, style=solid];
m4_1029 -> m4_11  [key=2, style=dotted];
m4_1029 -> m4_1030  [key=0, style=solid];
m4_1031 -> m4_11  [key=2, style=dotted];
m4_1031 -> m4_1032  [key=0, style=solid];
m4_1032 -> m4_11  [key=2, style=dotted];
m4_1032 -> m4_1033  [key=0, style=solid];
m4_1034 -> m4_11  [key=2, style=dotted];
m4_1034 -> m4_1035  [key=0, style=solid];
m4_1035 -> m4_11  [key=2, style=dotted];
m4_1035 -> m4_1036  [key=0, style=solid];
m4_1037 -> m4_11  [key=2, style=dotted];
m4_1037 -> m4_1038  [key=0, style=solid];
m4_1038 -> m4_11  [key=2, style=dotted];
m4_1038 -> m4_1039  [key=0, style=solid];
m4_1040 -> m4_11  [key=2, style=dotted];
m4_1040 -> m4_1041  [key=0, style=solid];
m4_1041 -> m4_11  [key=2, style=dotted];
m4_1041 -> m4_1042  [key=0, style=solid];
m4_1043 -> m4_11  [key=2, style=dotted];
m4_1043 -> m4_1044  [key=0, style=solid];
m4_1044 -> m4_11  [key=2, style=dotted];
m4_1044 -> m4_1045  [key=0, style=solid];
m4_1046 -> m4_11  [key=2, style=dotted];
m4_1046 -> m4_1047  [key=0, style=solid];
m4_1047 -> m4_11  [key=2, style=dotted];
m4_1047 -> m4_1048  [key=0, style=solid];
m4_1049 -> m4_11  [key=2, style=dotted];
m4_1049 -> m4_1050  [key=0, style=solid];
m4_1050 -> m4_11  [key=2, style=dotted];
m4_1050 -> m4_1051  [key=0, style=solid];
m4_1052 -> m4_11  [key=2, style=dotted];
m4_1052 -> m4_1053  [key=0, style=solid];
m4_1053 -> m4_11  [key=2, style=dotted];
m4_1053 -> m4_1054  [key=0, style=solid];
m4_1055 -> m4_11  [key=2, style=dotted];
m4_1055 -> m4_1056  [key=0, style=solid];
m4_1056 -> m4_11  [key=2, style=dotted];
m4_1056 -> m4_1057  [key=0, style=solid];
m4_1058 -> m4_11  [key=2, style=dotted];
m4_1058 -> m4_1059  [key=0, style=solid];
m4_1059 -> m4_11  [key=2, style=dotted];
m4_1059 -> m4_1060  [key=0, style=solid];
m4_1061 -> m4_11  [key=2, style=dotted];
m4_1061 -> m4_1062  [key=0, style=solid];
m4_1062 -> m4_11  [key=2, style=dotted];
m4_1062 -> m4_1063  [key=0, style=solid];
m4_1064 -> m4_11  [key=2, style=dotted];
m4_1064 -> m4_1065  [key=0, style=solid];
m4_1065 -> m4_11  [key=2, style=dotted];
m4_1065 -> m4_1066  [key=0, style=solid];
m4_1067 -> m4_11  [key=2, style=dotted];
m4_1067 -> m4_1068  [key=0, style=solid];
m4_1068 -> m4_11  [key=2, style=dotted];
m4_1068 -> m4_1069  [key=0, style=solid];
m4_1070 -> m4_11  [key=2, style=dotted];
m4_1070 -> m4_1071  [key=0, style=solid];
m4_1071 -> m4_11  [key=2, style=dotted];
m4_1071 -> m4_1072  [key=0, style=solid];
m4_1073 -> m4_11  [key=2, style=dotted];
m4_1073 -> m4_1074  [key=0, style=solid];
m4_1074 -> m4_11  [key=2, style=dotted];
m4_1074 -> m4_1075  [key=0, style=solid];
m4_1076 -> m4_11  [key=2, style=dotted];
m4_1076 -> m4_1077  [key=0, style=solid];
m4_1017 -> m4_1018  [key=0, style=solid];
m4_1019 -> m4_1020  [key=0, style=solid];
m4_1019 -> m4_265  [key=2, style=dotted];
m4_1021 -> m4_1022  [key=0, style=solid];
m4_1021 -> m4_265  [key=2, style=dotted];
m4_1024 -> m4_1025  [key=0, style=solid];
m4_1024 -> m4_265  [key=2, style=dotted];
m4_1027 -> m4_1028  [key=0, style=solid];
m4_1027 -> m4_265  [key=2, style=dotted];
m4_1030 -> m4_1031  [key=0, style=solid];
m4_1030 -> m4_265  [key=2, style=dotted];
m4_1033 -> m4_1034  [key=0, style=solid];
m4_1033 -> m4_265  [key=2, style=dotted];
m4_1036 -> m4_1037  [key=0, style=solid];
m4_1036 -> m4_265  [key=2, style=dotted];
m4_1039 -> m4_1040  [key=0, style=solid];
m4_1039 -> m4_265  [key=2, style=dotted];
m4_1042 -> m4_1043  [key=0, style=solid];
m4_1042 -> m4_265  [key=2, style=dotted];
m4_1045 -> m4_1046  [key=0, style=solid];
m4_1045 -> m4_265  [key=2, style=dotted];
m4_1048 -> m4_1049  [key=0, style=solid];
m4_1048 -> m4_265  [key=2, style=dotted];
m4_1051 -> m4_1052  [key=0, style=solid];
m4_1051 -> m4_265  [key=2, style=dotted];
m4_1054 -> m4_1055  [key=0, style=solid];
m4_1054 -> m4_265  [key=2, style=dotted];
m4_1057 -> m4_1058  [key=0, style=solid];
m4_1057 -> m4_265  [key=2, style=dotted];
m4_1060 -> m4_1061  [key=0, style=solid];
m4_1060 -> m4_265  [key=2, style=dotted];
m4_1063 -> m4_1064  [key=0, style=solid];
m4_1063 -> m4_265  [key=2, style=dotted];
m4_1066 -> m4_1067  [key=0, style=solid];
m4_1066 -> m4_265  [key=2, style=dotted];
m4_1069 -> m4_1070  [key=0, style=solid];
m4_1069 -> m4_265  [key=2, style=dotted];
m4_1072 -> m4_1073  [key=0, style=solid];
m4_1072 -> m4_265  [key=2, style=dotted];
m4_1075 -> m4_1076  [key=0, style=solid];
m4_1075 -> m4_265  [key=2, style=dotted];
m4_1077 -> m4_1016  [color=blue, key=0, style=bold];
m4_1170 -> m4_1171  [key=0, style=solid];
m4_1171 -> m4_8  [key=2, style=dotted];
m4_1171 -> m4_9  [key=2, style=dotted];
m4_1171 -> m4_1172  [key=0, style=solid];
m4_1171 -> m4_1173  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1173 -> m4_11  [key=2, style=dotted];
m4_1173 -> m4_1174  [key=0, style=solid];
m4_1172 -> m4_130  [key=2, style=dotted];
m4_1172 -> m4_1173  [key=0, style=solid];
m4_1172 -> m4_677  [key=2, style=dotted];
m4_1174 -> m4_1170  [color=blue, key=0, style=bold];
m4_560 -> m4_628  [key=0, style=solid];
m4_560 -> m4_11  [key=2, style=dotted];
m4_560 -> m4_561  [key=0, style=solid];
m4_635 -> m4_636  [key=0, style=solid];
m4_635 -> m4_695  [key=2, style=dotted];
m4_635 -> m4_638  [color=darkseagreen4, key=1, label=singleDigit, style=dashed];
m4_635 -> m4_653  [color=darkseagreen4, key=1, label=singleDigit, style=dashed];
m4_635 -> m4_665  [color=darkseagreen4, key=1, label=singleDigit, style=dashed];
m4_635 -> m4_8  [key=2, style=dotted];
m4_635 -> m4_9  [key=2, style=dotted];
m4_635 -> m4_637  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_636 -> m4_637  [key=0, style=solid];
m4_636 -> m4_640  [color=darkseagreen4, key=1, label=nonBase10, style=dashed];
m4_636 -> m4_655  [color=darkseagreen4, key=1, label=nonBase10, style=dashed];
m4_636 -> m4_668  [color=darkseagreen4, key=1, label=nonBase10, style=dashed];
m4_636 -> m4_19  [key=2, style=dotted];
m4_636 -> m4_265  [key=2, style=dotted];
m4_639 -> m4_651  [key=0, style=solid];
m4_639 -> m4_693  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m4_639 -> m4_640  [key=0, style=solid];
m4_666 -> m4_667  [key=0, style=solid];
m4_666 -> m4_693  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m4_666 -> m4_661  [color=blue, key=0, style=bold];
m4_634 -> m4_635  [key=0, style=solid];
m4_638 -> m4_639  [key=0, style=solid];
m4_638 -> m4_640  [key=0, style=solid];
m4_638 -> m4_634  [color=blue, key=0, style=bold];
m4_665 -> m4_666  [key=0, style=solid];
m4_665 -> m4_668  [key=0, style=solid];
m4_665 -> m4_57  [key=2, style=dotted];
m4_637 -> m4_638  [key=0, style=solid];
m4_637 -> m4_652  [key=0, style=solid];
m4_637 -> m4_11  [key=2, style=dotted];
m4_640 -> m4_641  [key=0, style=solid];
m4_640 -> m4_644  [key=0, style=solid];
m4_640 -> m4_8  [key=2, style=dotted];
m4_640 -> m4_9  [key=2, style=dotted];
m4_668 -> m4_669  [key=0, style=solid];
m4_668 -> m4_672  [key=0, style=solid];
m4_652 -> m4_653  [key=0, style=solid];
m4_652 -> m4_665  [key=0, style=solid];
m4_652 -> m4_650  [color=blue, key=0, style=bold];
m4_641 -> m4_642  [key=0, style=solid];
m4_641 -> m4_52  [key=2, style=dotted];
m4_641 -> m4_57  [key=2, style=dotted];
m4_641 -> m4_643  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_644 -> m4_645  [key=0, style=solid];
m4_644 -> m4_265  [key=2, style=dotted];
m4_642 -> m4_643  [key=0, style=solid];
m4_642 -> m4_696  [key=2, style=dotted];
m4_642 -> m4_697  [key=2, style=dotted];
m4_642 -> m4_639  [color=blue, key=0, style=bold];
m4_643 -> m4_651  [key=0, style=solid];
m4_643 -> m4_693  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m4_643 -> m4_644  [key=0, style=solid];
m4_645 -> m4_646  [key=0, style=solid];
m4_645 -> m4_698  [key=2, style=dotted];
m4_645 -> m4_647  [color=darkseagreen4, key=1, label=value, style=dashed];
m4_645 -> m4_648  [color=darkseagreen4, key=1, label=parseResult, style=dashed];
m4_645 -> m4_643  [color=blue, key=0, style=bold];
m4_650 -> m4_694  [key=0, style=solid];
m4_650 -> m4_52  [key=2, style=dotted];
m4_650 -> m4_188  [key=2, style=dotted];
m4_650 -> m4_189  [key=2, style=dotted];
m4_650 -> m4_651  [key=0, style=solid];
m4_651 -> m4_692  [key=0, style=solid];
m4_651 -> m4_693  [color=darkseagreen4, key=1, label=numberType, style=dashed];
m4_651 -> m4_265  [key=2, style=dotted];
m4_651 -> m4_652  [key=0, style=solid];
m4_659 -> m4_660  [key=0, style=solid];
m4_659 -> m4_52  [key=2, style=dotted];
m4_659 -> m4_661  [color=darkseagreen4, key=1, label=number, style=dashed];
m4_659 -> m4_657  [color=blue, key=0, style=bold];
m4_657 -> m4_658  [key=0, style=solid];
m4_657 -> m4_696  [key=2, style=dotted];
m4_657 -> m4_699  [key=2, style=dotted];
m4_658 -> m4_664  [key=0, style=solid];
m4_658 -> m4_700  [key=2, style=dotted];
m4_658 -> m4_693  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m4_658 -> m4_659  [key=0, style=solid];
m4_658 -> m4_660  [key=2, style=dotted];
m4_660 -> m4_661  [key=0, style=solid];
m4_661 -> m4_662  [key=0, style=solid];
m4_661 -> m4_663  [key=0, style=solid];
m4_661 -> m4_701  [key=2, style=dotted];
m4_662 -> m4_664  [key=0, style=solid];
m4_662 -> m4_693  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m4_662 -> m4_663  [key=0, style=solid];
m4_663 -> m4_694  [key=0, style=solid];
m4_663 -> m4_52  [key=2, style=dotted];
m4_663 -> m4_188  [key=2, style=dotted];
m4_663 -> m4_189  [key=2, style=dotted];
m4_663 -> m4_664  [key=0, style=solid];
m4_663 -> m4_243  [key=2, style=dotted];
m4_664 -> m4_692  [key=0, style=solid];
m4_664 -> m4_693  [color=darkseagreen4, key=1, label=numberType, style=dashed];
m4_664 -> m4_8  [key=2, style=dotted];
m4_664 -> m4_9  [key=2, style=dotted];
m4_664 -> m4_665  [key=0, style=solid];
m4_664 -> m4_667  [key=2, style=dotted];
m4_664 -> m4_669  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_669 -> m4_670  [key=0, style=solid];
m4_669 -> m4_52  [key=2, style=dotted];
m4_669 -> m4_660  [key=2, style=dotted];
m4_672 -> m4_673  [key=0, style=solid];
m4_672 -> m4_8  [key=2, style=dotted];
m4_672 -> m4_9  [key=2, style=dotted];
m4_672 -> m4_674  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_672 -> m4_675  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_670 -> m4_671  [key=0, style=solid];
m4_670 -> m4_696  [key=2, style=dotted];
m4_670 -> m4_699  [key=2, style=dotted];
m4_670 -> m4_693  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m4_670 -> m4_668  [color=blue, key=0, style=bold];
m4_671 -> m4_692  [key=0, style=solid];
m4_671 -> m4_693  [color=darkseagreen4, key=1, label=numberType, style=dashed];
m4_671 -> m4_5  [color=darkorchid, key=3, label="Local variable int initialPosition", style=bold];
m4_671 -> m4_672  [key=0, style=solid];
m4_673 -> m4_674  [key=0, style=solid];
m4_673 -> m4_702  [key=2, style=dotted];
m4_673 -> m4_675  [color=darkseagreen4, key=1, label=value, style=dashed];
m4_673 -> m4_677  [color=darkseagreen4, key=1, label=parseResult, style=dashed];
m4_673 -> m4_19  [key=2, style=dotted];
m4_673 -> m4_265  [key=2, style=dotted];
m4_674 -> m4_675  [key=0, style=solid];
m4_674 -> m4_677  [key=0, style=solid];
m4_674 -> m4_660  [key=2, style=dotted];
m4_675 -> m4_676  [key=0, style=solid];
m4_675 -> m4_693  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m4_675 -> m4_11  [key=2, style=dotted];
m4_676 -> m4_692  [key=0, style=solid];
m4_676 -> m4_693  [color=darkseagreen4, key=1, label=numberType, style=dashed];
m4_676 -> m4_671  [color=blue, key=0, style=bold];
m4_684 -> m4_685  [key=0, style=solid];
m4_684 -> m4_686  [key=0, style=solid];
m4_684 -> m4_701  [key=2, style=dotted];
m4_684 -> m4_265  [key=2, style=dotted];
m4_683 -> m4_684  [key=0, style=solid];
m4_685 -> m4_691  [key=0, style=solid];
m4_685 -> m4_693  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m4_685 -> m4_683  [color=blue, key=0, style=bold];
m4_144 -> m4_11  [key=2, style=dotted];
m4_144 -> m4_145  [key=0, style=solid];
m4_453 -> m4_455  [key=0, style=solid];
m4_453 -> m4_431  [color=darkorchid, key=3, label="Parameter variable char value", style=bold];
m4_453 -> m4_467  [color=darkorchid, key=3, label="Parameter variable char value", style=bold];
m4_453 -> m4_454  [key=0, style=solid];
m4_453 -> m4_265  [key=2, style=dotted];
m4_455 -> m4_456  [key=0, style=solid];
m4_455 -> m4_457  [key=2, style=dotted];
m4_455 -> m4_11  [key=2, style=dotted];
m4_456 -> m4_453  [color=blue, key=0, style=bold];
m4_456 -> m4_11  [key=2, style=dotted];
m4_456 -> m4_457  [key=0, style=solid];
m4_62 -> m4_63  [key=0, style=solid];
m4_62 -> m4_64  [key=0, style=solid];
m4_65 -> m4_10  [key=2, style=dotted];
m4_65 -> m4_66  [key=0, style=solid];
m4_65 -> m4_19  [key=2, style=dotted];
m4_73 -> m4_10  [key=2, style=dotted];
m4_73 -> m4_74  [key=0, style=solid];
m4_73 -> m4_43  [key=2, style=dotted];
m4_73 -> m4_75  [key=0, style=solid];
m4_64 -> m4_8  [key=2, style=dotted];
m4_64 -> m4_9  [key=2, style=dotted];
m4_64 -> m4_65  [key=0, style=solid];
m4_64 -> m4_71  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_64 -> m4_73  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_64 -> m4_66  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_64 -> m4_67  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_64 -> m4_76  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_64 -> m4_68  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_64 -> m4_79  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_64 -> m4_69  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_64 -> m4_82  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_64 -> m4_70  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_64 -> m4_85  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_64 -> m4_72  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_66 -> m4_11  [key=2, style=dotted];
m4_66 -> m4_67  [key=0, style=solid];
m4_72 -> m4_11  [key=2, style=dotted];
m4_72 -> m4_73  [key=0, style=solid];
m4_72 -> m4_75  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_72 -> m4_76  [color=darkseagreen4, key=1, label=bool, style=dashed];
m4_72 -> m4_77  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_72 -> m4_82  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_72 -> m4_83  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_72 -> m4_69  [color=darkorchid, key=3, label="Parameter variable bool append", style=bold];
m4_72 -> m4_107  [color=darkorchid, key=3, label="Parameter variable bool append", style=bold];
m4_72 -> m4_79  [color=darkorchid, key=3, label="method methodReturn int ReadData", style=bold];
m4_72 -> m4_93  [color=darkorchid, key=3, label="method methodReturn int ReadData", style=bold];
m4_67 -> m4_57  [key=2, style=dotted];
m4_67 -> m4_68  [key=0, style=solid];
m4_67 -> m4_75  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_68 -> m4_57  [key=2, style=dotted];
m4_68 -> m4_69  [key=0, style=solid];
m4_68 -> m4_78  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_68 -> m4_48  [color=blue, key=0, style=bold];
m4_63 -> m4_64  [key=0, style=solid];
m4_63 -> m4_54  [key=2, style=dotted];
m4_74 -> m4_62  [color=blue, key=0, style=bold];
m4_74 -> m4_99  [key=0, style=solid];
m4_1573 -> m4_1574  [key=0, style=solid];
m4_1576 -> m4_10  [key=2, style=dotted];
m4_1576 -> m4_1577  [key=0, style=solid];
m4_1576 -> m4_19  [key=2, style=dotted];
m4_1577 -> m4_10  [key=2, style=dotted];
m4_1577 -> m4_1578  [key=0, style=solid];
m4_1577 -> m4_19  [key=2, style=dotted];
m4_1578 -> m4_10  [key=2, style=dotted];
m4_1578 -> m4_1579  [key=0, style=solid];
m4_1578 -> m4_43  [key=2, style=dotted];
m4_1575 -> m4_8  [key=2, style=dotted];
m4_1575 -> m4_9  [key=2, style=dotted];
m4_1575 -> m4_1576  [key=0, style=solid];
m4_1575 -> m4_1577  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1575 -> m4_1578  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1574 -> m4_1575  [key=0, style=solid];
m4_1579 -> m4_1573  [color=blue, key=0, style=bold];
m4_801 -> m4_558  [color=blue, key=0, style=bold];
m4_176 -> m4_177  [key=0, style=solid];
m4_176 -> m4_182  [key=0, style=solid];
m4_180 -> m4_10  [key=2, style=dotted];
m4_180 -> m4_181  [key=0, style=solid];
m4_180 -> m4_19  [key=2, style=dotted];
m4_180 -> m4_153  [key=0, style=solid];
m4_178 -> m4_8  [key=2, style=dotted];
m4_178 -> m4_9  [key=2, style=dotted];
m4_178 -> m4_180  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_178 -> m4_185  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_178 -> m4_179  [key=0, style=solid];
m4_178 -> m4_181  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_178 -> m4_182  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_181 -> m4_11  [key=2, style=dotted];
m4_181 -> m4_182  [key=0, style=solid];
m4_181 -> m4_188  [key=2, style=dotted];
m4_181 -> m4_189  [key=2, style=dotted];
m4_182 -> m4_57  [key=2, style=dotted];
m4_182 -> m4_183  [key=0, style=solid];
m4_182 -> m4_184  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_182 -> m4_127  [color=blue, key=0, style=bold];
m4_179 -> m4_180  [key=0, style=solid];
m4_179 -> m4_153  [key=0, style=solid];
m4_177 -> m4_178  [key=0, style=solid];
m4_177 -> m4_182  [key=0, style=solid];
m4_177 -> m4_188  [key=2, style=dotted];
m4_177 -> m4_189  [key=2, style=dotted];
m4_183 -> m4_176  [color=blue, key=0, style=bold];
m4_183 -> m4_475  [key=0, style=solid];
m4_183 -> m4_786  [color=darkorchid, key=3, label="method methodReturn bool ParseValue", style=bold];
m4_183 -> m4_774  [color=darkorchid, key=3, label="method methodReturn bool ParseValue", style=bold];
m4_521 -> m4_522  [key=0, style=solid];
m4_524 -> m4_10  [key=2, style=dotted];
m4_524 -> m4_525  [key=0, style=solid];
m4_524 -> m4_19  [key=2, style=dotted];
m4_526 -> m4_10  [key=2, style=dotted];
m4_526 -> m4_527  [key=0, style=solid];
m4_526 -> m4_19  [key=2, style=dotted];
m4_526 -> m4_128  [key=2, style=dotted];
m4_528 -> m4_10  [key=2, style=dotted];
m4_528 -> m4_529  [key=0, style=solid];
m4_528 -> m4_19  [key=2, style=dotted];
m4_530 -> m4_10  [key=2, style=dotted];
m4_530 -> m4_531  [key=0, style=solid];
m4_530 -> m4_19  [key=2, style=dotted];
m4_530 -> m4_128  [key=2, style=dotted];
m4_532 -> m4_10  [key=2, style=dotted];
m4_532 -> m4_533  [key=0, style=solid];
m4_532 -> m4_19  [key=2, style=dotted];
m4_532 -> m4_500  [color=darkorchid, key=3, label="Parameter variable char value", style=bold];
m4_532 -> m4_550  [color=darkorchid, key=3, label="Parameter variable char value", style=bold];
m4_534 -> m4_10  [key=2, style=dotted];
m4_534 -> m4_535  [key=0, style=solid];
m4_534 -> m4_19  [key=2, style=dotted];
m4_534 -> m4_552  [key=0, style=solid];
m4_536 -> m4_10  [key=2, style=dotted];
m4_536 -> m4_537  [key=0, style=solid];
m4_536 -> m4_19  [key=2, style=dotted];
m4_538 -> m4_10  [key=2, style=dotted];
m4_538 -> m4_539  [key=0, style=solid];
m4_538 -> m4_19  [key=2, style=dotted];
m4_538 -> m4_552  [key=0, style=solid];
m4_540 -> m4_10  [key=2, style=dotted];
m4_540 -> m4_541  [key=0, style=solid];
m4_540 -> m4_19  [key=2, style=dotted];
m4_540 -> m4_475  [key=0, style=solid];
m4_540 -> m4_293  [key=2, style=dotted];
m4_542 -> m4_10  [key=2, style=dotted];
m4_542 -> m4_543  [key=0, style=solid];
m4_542 -> m4_19  [key=2, style=dotted];
m4_542 -> m4_475  [key=0, style=solid];
m4_542 -> m4_294  [key=2, style=dotted];
m4_544 -> m4_10  [key=2, style=dotted];
m4_544 -> m4_545  [key=0, style=solid];
m4_544 -> m4_19  [key=2, style=dotted];
m4_547 -> m4_10  [key=2, style=dotted];
m4_547 -> m4_548  [key=0, style=solid];
m4_547 -> m4_19  [key=2, style=dotted];
m4_547 -> m4_475  [key=0, style=solid];
m4_550 -> m4_10  [key=2, style=dotted];
m4_550 -> m4_551  [key=0, style=solid];
m4_550 -> m4_43  [key=2, style=dotted];
m4_550 -> m4_552  [key=0, style=solid];
m4_523 -> m4_8  [key=2, style=dotted];
m4_523 -> m4_524  [key=0, style=solid];
m4_523 -> m4_526  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_523 -> m4_528  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_523 -> m4_530  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_523 -> m4_532  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_523 -> m4_534  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_523 -> m4_536  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_523 -> m4_538  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_523 -> m4_540  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_523 -> m4_542  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_523 -> m4_544  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_523 -> m4_547  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_523 -> m4_550  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_523 -> m4_244  [key=2, style=dotted];
m4_523 -> m4_284  [key=2, style=dotted];
m4_523 -> m4_285  [key=2, style=dotted];
m4_523 -> m4_525  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_523 -> m4_527  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_523 -> m4_529  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_523 -> m4_531  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_523 -> m4_533  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_523 -> m4_535  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_523 -> m4_537  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_523 -> m4_539  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_523 -> m4_541  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_523 -> m4_543  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_523 -> m4_545  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_523 -> m4_546  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_523 -> m4_548  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_523 -> m4_549  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_523 -> m4_552  [key=0, style=solid];
m4_525 -> m4_11  [key=2, style=dotted];
m4_525 -> m4_526  [key=0, style=solid];
m4_527 -> m4_11  [key=2, style=dotted];
m4_527 -> m4_528  [key=0, style=solid];
m4_527 -> m4_552  [key=0, style=solid];
m4_529 -> m4_11  [key=2, style=dotted];
m4_529 -> m4_530  [key=0, style=solid];
m4_531 -> m4_11  [key=2, style=dotted];
m4_531 -> m4_532  [key=0, style=solid];
m4_531 -> m4_552  [key=0, style=solid];
m4_533 -> m4_11  [key=2, style=dotted];
m4_533 -> m4_534  [key=0, style=solid];
m4_533 -> m4_128  [key=2, style=dotted];
m4_535 -> m4_11  [key=2, style=dotted];
m4_535 -> m4_536  [key=0, style=solid];
m4_537 -> m4_11  [key=2, style=dotted];
m4_537 -> m4_5  [color=darkorchid, key=3, label="Local variable int initialPosition", style=bold];
m4_537 -> m4_538  [key=0, style=solid];
m4_537 -> m4_128  [key=2, style=dotted];
m4_539 -> m4_11  [key=2, style=dotted];
m4_539 -> m4_540  [key=0, style=solid];
m4_541 -> m4_11  [key=2, style=dotted];
m4_541 -> m4_542  [key=0, style=solid];
m4_543 -> m4_11  [key=2, style=dotted];
m4_543 -> m4_544  [key=0, style=solid];
m4_545 -> m4_11  [key=2, style=dotted];
m4_545 -> m4_546  [key=0, style=solid];
m4_545 -> m4_475  [key=0, style=solid];
m4_546 -> m4_11  [key=2, style=dotted];
m4_546 -> m4_547  [key=0, style=solid];
m4_546 -> m4_548  [key=0, style=solid];
m4_546 -> m4_403  [key=2, style=dotted];
m4_548 -> m4_11  [key=2, style=dotted];
m4_548 -> m4_549  [key=0, style=solid];
m4_548 -> m4_551  [key=0, style=solid];
m4_548 -> m4_562  [key=2, style=dotted];
m4_549 -> m4_11  [key=2, style=dotted];
m4_549 -> m4_550  [key=0, style=solid];
m4_549 -> m4_560  [key=2, style=dotted];
m4_522 -> m4_523  [key=0, style=solid];
m4_522 -> m4_128  [key=2, style=dotted];
m4_551 -> m4_521  [color=blue, key=0, style=bold];
m4_551 -> m4_552  [key=0, style=solid];
m4_551 -> m4_188  [key=2, style=dotted];
m4_551 -> m4_189  [key=2, style=dotted];
m4_134 -> m4_135  [key=0, style=solid];
m4_134 -> m4_136  [key=2, style=dotted];
m4_137 -> m4_10  [key=2, style=dotted];
m4_137 -> m4_138  [key=0, style=solid];
m4_137 -> m4_19  [key=2, style=dotted];
m4_139 -> m4_10  [key=2, style=dotted];
m4_139 -> m4_71  [color=darkorchid, key=3, label="Parameter variable int relativePosition", style=bold];
m4_139 -> m4_104  [color=darkorchid, key=3, label="Parameter variable int relativePosition", style=bold];
m4_139 -> m4_140  [key=0, style=solid];
m4_139 -> m4_19  [key=2, style=dotted];
m4_139 -> m4_595  [color=darkorchid, key=3, label="Parameter variable int relativePosition", style=bold];
m4_139 -> m4_625  [color=darkorchid, key=3, label="Parameter variable bool append", style=bold];
m4_139 -> m4_137  [color=blue, key=0, style=bold];
m4_136 -> m4_8  [key=2, style=dotted];
m4_136 -> m4_9  [key=2, style=dotted];
m4_136 -> m4_137  [key=0, style=solid];
m4_136 -> m4_139  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_136 -> m4_141  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_136 -> m4_143  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_136 -> m4_148  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_136 -> m4_138  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_136 -> m4_140  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_136 -> m4_142  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_136 -> m4_144  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_136 -> m4_145  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_138 -> m4_11  [key=2, style=dotted];
m4_138 -> m4_139  [key=0, style=solid];
m4_138 -> m4_140  [key=2, style=dotted];
m4_140 -> m4_11  [key=2, style=dotted];
m4_140 -> m4_141  [key=0, style=solid];
m4_145 -> m4_57  [key=2, style=dotted];
m4_145 -> m4_146  [key=0, style=solid];
m4_145 -> m4_147  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_135 -> m4_136  [key=0, style=solid];
m4_135 -> m4_133  [color=blue, key=0, style=bold];
m4_146 -> m4_134  [color=blue, key=0, style=bold];
m4_146 -> m4_147  [key=0, style=solid];
m4_146 -> m4_148  [key=2, style=dotted];
m4_554 -> m4_785  [key=0, style=solid];
m4_554 -> m4_8  [key=2, style=dotted];
m4_554 -> m4_9  [key=2, style=dotted];
m4_554 -> m4_557  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_554 -> m4_559  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_554 -> m4_555  [key=0, style=solid];
m4_554 -> m4_560  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_785 -> m4_786  [key=0, style=solid];
m4_785 -> m4_787  [key=0, style=solid];
m4_785 -> m4_627  [key=2, style=dotted];
m4_785 -> m4_265  [key=2, style=dotted];
m4_786 -> m4_788  [key=0, style=solid];
m4_786 -> m4_51  [key=2, style=dotted];
m4_786 -> m4_11  [key=2, style=dotted];
m4_786 -> m4_787  [key=0, style=solid];
m4_787 -> m4_788  [key=0, style=solid];
m4_787 -> m4_189  [key=2, style=dotted];
m4_787 -> m4_11  [key=2, style=dotted];
m4_788 -> m4_554  [color=blue, key=0, style=bold];
m4_788 -> m4_789  [key=0, style=solid];
m4_788 -> m4_265  [key=2, style=dotted];
m4_1596 -> m4_1597  [key=0, style=solid];
m4_1599 -> m4_10  [key=2, style=dotted];
m4_1599 -> m4_1600  [key=0, style=solid];
m4_1599 -> m4_19  [key=2, style=dotted];
m4_1600 -> m4_10  [key=2, style=dotted];
m4_1600 -> m4_1601  [key=0, style=solid];
m4_1600 -> m4_19  [key=2, style=dotted];
m4_1601 -> m4_10  [key=2, style=dotted];
m4_1601 -> m4_1602  [key=0, style=solid];
m4_1601 -> m4_19  [key=2, style=dotted];
m4_1602 -> m4_10  [key=2, style=dotted];
m4_1602 -> m4_1603  [key=0, style=solid];
m4_1602 -> m4_43  [key=2, style=dotted];
m4_1598 -> m4_8  [key=2, style=dotted];
m4_1598 -> m4_9  [key=2, style=dotted];
m4_1598 -> m4_1599  [key=0, style=solid];
m4_1598 -> m4_1600  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1598 -> m4_1601  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1598 -> m4_1602  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1597 -> m4_1598  [key=0, style=solid];
m4_1603 -> m4_1596  [color=blue, key=0, style=bold];
m4_7 -> m4_0  [color=blue, key=0, style=bold];
m4_1422 -> m4_1423  [key=0, style=solid];
m4_1423 -> m4_8  [key=2, style=dotted];
m4_1423 -> m4_9  [key=2, style=dotted];
m4_1423 -> m4_1427  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1423 -> m4_1424  [key=0, style=solid];
m4_1424 -> m4_57  [key=2, style=dotted];
m4_1424 -> m4_1425  [key=0, style=solid];
m4_1424 -> m4_1426  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1425 -> m4_1422  [color=blue, key=0, style=bold];
m4_315 -> m4_316  [key=0, style=solid];
m4_315 -> m4_10  [key=2, style=dotted];
m4_315 -> m4_315  [key=0, style=solid];
m4_316 -> m4_317  [key=0, style=solid];
m4_316 -> m4_318  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m4_316 -> m4_312  [color=blue, key=0, style=bold];
m4_317 -> m4_318  [key=0, style=solid];
m4_317 -> m4_356  [key=0, style=solid];
m4_318 -> m4_319  [key=0, style=solid];
m4_318 -> m4_327  [key=0, style=solid];
m4_318 -> m4_354  [key=0, style=solid];
m4_318 -> m4_318  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m4_318 -> m4_320  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m4_318 -> m4_321  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m4_318 -> m4_325  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m4_319 -> m4_320  [key=0, style=solid];
m4_319 -> m4_8  [key=2, style=dotted];
m4_319 -> m4_9  [key=2, style=dotted];
m4_319 -> m4_323  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_327 -> m4_328  [key=0, style=solid];
m4_327 -> m4_9  [key=2, style=dotted];
m4_354 -> m4_355  [key=0, style=solid];
m4_354 -> m4_11  [key=2, style=dotted];
m4_320 -> m4_321  [key=0, style=solid];
m4_320 -> m4_325  [key=0, style=solid];
m4_320 -> m4_57  [key=2, style=dotted];
m4_320 -> m4_322  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_321 -> m4_322  [key=0, style=solid];
m4_321 -> m4_321  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m4_321 -> m4_354  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m4_321 -> m4_317  [color=blue, key=0, style=bold];
m4_325 -> m4_326  [key=0, style=solid];
m4_322 -> m4_323  [key=0, style=solid];
m4_323 -> m4_324  [key=0, style=solid];
m4_323 -> m4_317  [key=0, style=solid];
m4_323 -> m4_69  [key=2, style=dotted];
m4_323 -> m4_10  [key=2, style=dotted];
m4_323 -> m4_323  [key=0, style=solid];
m4_324 -> m4_356  [key=0, style=solid];
m4_324 -> m4_322  [color=blue, key=0, style=bold];
m4_326 -> m4_356  [key=0, style=solid];
m4_326 -> m4_327  [key=0, style=solid];
m4_328 -> m4_329  [key=0, style=solid];
m4_328 -> m4_8  [key=2, style=dotted];
m4_328 -> m4_332  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_328 -> m4_336  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_328 -> m4_341  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_328 -> m4_346  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_328 -> m4_351  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_328 -> m4_355  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_328 -> m4_361  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_328 -> m4_367  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_328 -> m4_371  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_328 -> m4_375  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_328 -> m4_330  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_328 -> m4_331  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_328 -> m4_333  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_328 -> m4_334  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_328 -> m4_335  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_328 -> m4_337  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_328 -> m4_338  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_328 -> m4_339  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_328 -> m4_340  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_328 -> m4_342  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_328 -> m4_343  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_328 -> m4_344  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_328 -> m4_345  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_328 -> m4_347  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_328 -> m4_348  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_328 -> m4_349  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_328 -> m4_350  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_328 -> m4_352  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_328 -> m4_353  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_328 -> m4_354  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_328 -> m4_356  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_328 -> m4_357  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_328 -> m4_358  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_328 -> m4_359  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_328 -> m4_360  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_328 -> m4_362  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_328 -> m4_363  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_328 -> m4_364  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_328 -> m4_365  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_328 -> m4_366  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_328 -> m4_368  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_328 -> m4_369  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_328 -> m4_370  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_328 -> m4_372  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_328 -> m4_373  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_328 -> m4_374  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_329 -> m4_330  [key=0, style=solid];
m4_329 -> m4_11  [key=2, style=dotted];
m4_330 -> m4_331  [key=0, style=solid];
m4_330 -> m4_11  [key=2, style=dotted];
m4_331 -> m4_332  [key=0, style=solid];
m4_331 -> m4_11  [key=2, style=dotted];
m4_332 -> m4_333  [key=0, style=solid];
m4_332 -> m4_10  [key=2, style=dotted];
m4_333 -> m4_334  [key=0, style=solid];
m4_333 -> m4_11  [key=2, style=dotted];
m4_334 -> m4_335  [key=0, style=solid];
m4_334 -> m4_11  [key=2, style=dotted];
m4_335 -> m4_336  [key=0, style=solid];
m4_335 -> m4_11  [key=2, style=dotted];
m4_336 -> m4_337  [key=0, style=solid];
m4_336 -> m4_10  [key=2, style=dotted];
m4_336 -> m4_251  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Utilities.StringBuffer buffer", style=bold];
m4_336 -> m4_294  [color=darkorchid, key=3, label="Parameter variable char writeChar", style=bold];
m4_336 -> m4_260  [color=darkorchid, key=3, label="Parameter variable int writeToPosition", style=bold];
m4_337 -> m4_338  [key=0, style=solid];
m4_337 -> m4_11  [key=2, style=dotted];
m4_338 -> m4_339  [key=0, style=solid];
m4_338 -> m4_11  [key=2, style=dotted];
m4_339 -> m4_340  [key=0, style=solid];
m4_339 -> m4_11  [key=2, style=dotted];
m4_340 -> m4_341  [key=0, style=solid];
m4_340 -> m4_11  [key=2, style=dotted];
m4_341 -> m4_342  [key=0, style=solid];
m4_341 -> m4_10  [key=2, style=dotted];
m4_342 -> m4_343  [key=0, style=solid];
m4_342 -> m4_11  [key=2, style=dotted];
m4_343 -> m4_344  [key=0, style=solid];
m4_343 -> m4_11  [key=2, style=dotted];
m4_344 -> m4_345  [key=0, style=solid];
m4_344 -> m4_11  [key=2, style=dotted];
m4_345 -> m4_346  [key=0, style=solid];
m4_345 -> m4_11  [key=2, style=dotted];
m4_346 -> m4_347  [key=0, style=solid];
m4_346 -> m4_10  [key=2, style=dotted];
m4_346 -> m4_350  [color=darkorchid, key=3, label="Local variable char writeChar", style=bold];
m4_347 -> m4_348  [key=0, style=solid];
m4_347 -> m4_11  [key=2, style=dotted];
m4_348 -> m4_349  [key=0, style=solid];
m4_348 -> m4_11  [key=2, style=dotted];
m4_349 -> m4_350  [key=0, style=solid];
m4_349 -> m4_11  [key=2, style=dotted];
m4_350 -> m4_351  [key=0, style=solid];
m4_350 -> m4_11  [key=2, style=dotted];
m4_351 -> m4_352  [key=0, style=solid];
m4_351 -> m4_10  [key=2, style=dotted];
m4_352 -> m4_353  [key=0, style=solid];
m4_352 -> m4_11  [key=2, style=dotted];
m4_353 -> m4_317  [key=0, style=solid];
m4_353 -> m4_11  [key=2, style=dotted];
m4_353 -> m4_354  [key=0, style=solid];
m4_355 -> m4_356  [key=0, style=solid];
m4_355 -> m4_10  [key=2, style=dotted];
m4_356 -> m4_315  [color=blue, key=0, style=bold];
m4_356 -> m4_11  [key=2, style=dotted];
m4_356 -> m4_357  [key=0, style=solid];
m4_128 -> m4_130  [key=2, style=dotted];
m4_128 -> m4_129  [key=0, style=solid];
m4_475 -> m4_57  [key=2, style=dotted];
m4_475 -> m4_476  [key=0, style=solid];
m4_475 -> m4_477  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_475 -> m4_552  [key=0, style=solid];
m4_476 -> m4_474  [color=blue, key=0, style=bold];
m4_476 -> m4_477  [key=0, style=solid];
m4_476 -> m4_485  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m4_476 -> m4_546  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m4_476 -> m4_548  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m4_476 -> m4_551  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m4_296 -> m4_8  [key=2, style=dotted];
m4_296 -> m4_9  [key=2, style=dotted];
m4_296 -> m4_297  [key=0, style=solid];
m4_296 -> m4_299  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_296 -> m4_301  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_296 -> m4_303  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_296 -> m4_305  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_296 -> m4_310  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_296 -> m4_298  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_296 -> m4_300  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_296 -> m4_302  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_296 -> m4_304  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_296 -> m4_306  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_296 -> m4_307  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_148 -> m4_10  [key=2, style=dotted];
m4_148 -> m4_149  [key=0, style=solid];
m4_290 -> m4_286  [color=blue, key=0, style=bold];
m4_561 -> m4_781  [key=0, style=solid];
m4_561 -> m4_552  [color=blue, key=0, style=bold];
m4_781 -> m4_782  [key=0, style=solid];
m4_781 -> m4_783  [key=0, style=solid];
m4_781 -> m4_627  [key=2, style=dotted];
m4_781 -> m4_11  [key=2, style=dotted];
m4_782 -> m4_784  [key=0, style=solid];
m4_782 -> m4_128  [key=2, style=dotted];
m4_782 -> m4_783  [key=0, style=solid];
m4_782 -> m4_265  [key=2, style=dotted];
m4_783 -> m4_784  [key=0, style=solid];
m4_783 -> m4_189  [key=2, style=dotted];
m4_783 -> m4_11  [key=2, style=dotted];
m4_784 -> m4_561  [color=blue, key=0, style=bold];
m4_784 -> m4_11  [key=2, style=dotted];
m4_784 -> m4_785  [key=0, style=solid];
m4_312 -> m4_313  [key=0, style=solid];
m4_314 -> m4_8  [key=2, style=dotted];
m4_314 -> m4_9  [key=2, style=dotted];
m4_314 -> m4_315  [key=0, style=solid];
m4_313 -> m4_314  [key=0, style=solid];
m4_851 -> m4_852  [color=green, key=0, style=solid];
m4_852 -> m4_853  [color=green, key=0, style=solid];
m4_853 -> m4_8  [key=2, style=dotted];
m4_853 -> m4_9  [key=2, style=dotted];
m4_853 -> m4_854  [key=0, style=solid];
m4_855 -> m4_856  [color=green, key=0, style=solid];
m4_855 -> m4_8  [color=green, key=2, style=dotted];
m4_855 -> m4_9  [color=green, key=2, style=dotted];
m4_854 -> m4_855  [color=green, key=0, style=solid];
m4_854 -> m4_11  [key=2, style=dotted];
m4_854 -> m4_130  [key=2, style=dotted];
m4_856 -> m4_857  [color=green, key=0, style=solid];
m4_856 -> m4_130  [color=green, key=2, style=dotted];
m4_856 -> m4_11  [color=green, key=2, style=dotted];
m4_857 -> m4_858  [color=green, key=0, style=solid];
m4_857 -> m4_8  [color=green, key=2, style=dotted];
m4_857 -> m4_9  [color=green, key=2, style=dotted];
m4_858 -> m4_859  [color=green, key=0, style=solid];
m4_858 -> m4_130  [color=green, key=2, style=dotted];
m4_858 -> m4_11  [color=green, key=2, style=dotted];
m4_859 -> m4_8  [key=2, style=dotted];
m4_859 -> m4_9  [key=2, style=dotted];
m4_859 -> m4_860  [key=0, style=solid];
m4_861 -> m4_8  [key=2, style=dotted];
m4_861 -> m4_9  [key=2, style=dotted];
m4_861 -> m4_862  [key=0, style=solid];
m4_861 -> m4_874  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_863 -> m4_8  [key=2, style=dotted];
m4_863 -> m4_9  [key=2, style=dotted];
m4_863 -> m4_877  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_863 -> m4_864  [key=0, style=solid];
m4_863 -> m4_865  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_866 -> m4_8  [key=2, style=dotted];
m4_866 -> m4_9  [key=2, style=dotted];
m4_866 -> m4_867  [key=0, style=solid];
m4_868 -> m4_8  [key=2, style=dotted];
m4_868 -> m4_9  [key=2, style=dotted];
m4_868 -> m4_869  [key=0, style=solid];
m4_870 -> m4_8  [key=2, style=dotted];
m4_870 -> m4_9  [key=2, style=dotted];
m4_870 -> m4_871  [key=0, style=solid];
m4_870 -> m4_880  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_860 -> m4_11  [key=2, style=dotted];
m4_860 -> m4_130  [key=2, style=dotted];
m4_860 -> m4_861  [key=0, style=solid];
m4_867 -> m4_11  [key=2, style=dotted];
m4_867 -> m4_130  [key=2, style=dotted];
m4_867 -> m4_868  [key=0, style=solid];
m4_869 -> m4_11  [key=2, style=dotted];
m4_869 -> m4_130  [key=2, style=dotted];
m4_869 -> m4_870  [key=0, style=solid];
m4_862 -> m4_57  [key=2, style=dotted];
m4_862 -> m4_863  [key=0, style=solid];
m4_862 -> m4_873  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_865 -> m4_57  [key=2, style=dotted];
m4_865 -> m4_866  [key=0, style=solid];
m4_865 -> m4_876  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_871 -> m4_57  [key=2, style=dotted];
m4_871 -> m4_104  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m4_871 -> m4_872  [key=0, style=solid];
m4_871 -> m4_879  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_864 -> m4_865  [key=0, style=solid];
m4_872 -> m4_851  [color=blue, key=0, style=bold];
m4_361 -> m4_10  [key=2, style=dotted];
m4_361 -> m4_5  [color=darkorchid, key=3, label="Local variable int charPos", style=bold];
m4_361 -> m4_362  [key=0, style=solid];
m4_361 -> m4_357  [color=blue, key=0, style=bold];
m4_367 -> m4_10  [key=2, style=dotted];
m4_367 -> m4_368  [key=0, style=solid];
m4_367 -> m4_371  [key=0, style=solid];
m4_371 -> m4_10  [key=2, style=dotted];
m4_371 -> m4_372  [key=0, style=solid];
m4_371 -> m4_363  [key=0, style=solid];
m4_375 -> m4_10  [key=2, style=dotted];
m4_375 -> m4_376  [key=0, style=solid];
m4_375 -> m4_43  [key=2, style=dotted];
m4_375 -> m4_401  [key=0, style=solid];
m4_357 -> m4_11  [key=2, style=dotted];
m4_357 -> m4_358  [key=0, style=solid];
m4_358 -> m4_11  [key=2, style=dotted];
m4_358 -> m4_359  [key=0, style=solid];
m4_358 -> m4_360  [key=0, style=solid];
m4_359 -> m4_11  [key=2, style=dotted];
m4_359 -> m4_360  [key=0, style=solid];
m4_360 -> m4_11  [key=2, style=dotted];
m4_360 -> m4_361  [key=0, style=solid];
m4_360 -> m4_362  [key=2, style=dotted];
m4_362 -> m4_11  [key=2, style=dotted];
m4_362 -> m4_363  [key=0, style=solid];
m4_363 -> m4_11  [key=2, style=dotted];
m4_363 -> m4_364  [key=0, style=solid];
m4_363 -> m4_401  [key=0, style=solid];
m4_364 -> m4_11  [key=2, style=dotted];
m4_364 -> m4_365  [key=0, style=solid];
m4_364 -> m4_398  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m4_364 -> m4_400  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m4_365 -> m4_11  [key=2, style=dotted];
m4_365 -> m4_366  [key=0, style=solid];
m4_365 -> m4_372  [key=0, style=solid];
m4_365 -> m4_376  [key=0, style=solid];
m4_365 -> m4_380  [key=0, style=solid];
m4_365 -> m4_384  [key=0, style=solid];
m4_365 -> m4_387  [key=0, style=solid];
m4_365 -> m4_391  [key=0, style=solid];
m4_365 -> m4_394  [key=0, style=solid];
m4_365 -> m4_396  [key=0, style=solid];
m4_365 -> m4_398  [key=0, style=solid];
m4_366 -> m4_11  [key=2, style=dotted];
m4_366 -> m4_367  [key=0, style=solid];
m4_368 -> m4_11  [key=2, style=dotted];
m4_368 -> m4_369  [key=0, style=solid];
m4_368 -> m4_363  [key=0, style=solid];
m4_368 -> m4_69  [key=2, style=dotted];
m4_369 -> m4_11  [key=2, style=dotted];
m4_369 -> m4_370  [key=0, style=solid];
m4_370 -> m4_11  [key=2, style=dotted];
m4_370 -> m4_371  [key=0, style=solid];
m4_370 -> m4_401  [key=0, style=solid];
m4_372 -> m4_11  [key=2, style=dotted];
m4_372 -> m4_373  [key=0, style=solid];
m4_373 -> m4_11  [key=2, style=dotted];
m4_373 -> m4_374  [key=0, style=solid];
m4_374 -> m4_11  [key=2, style=dotted];
m4_374 -> m4_375  [key=0, style=solid];
m4_374 -> m4_128  [key=2, style=dotted];
m4_376 -> m4_325  [color=blue, key=0, style=bold];
m4_376 -> m4_377  [key=0, style=solid];
m4_733 -> m4_734  [key=0, style=solid];
m4_733 -> m4_737  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_733 -> m4_738  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_733 -> m4_741  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_733 -> m4_786  [color=darkorchid, key=3, label="method methodReturn bool MatchValue", style=bold];
m4_733 -> m4_774  [color=darkorchid, key=3, label="method methodReturn bool MatchValue", style=bold];
m4_733 -> m4_627  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
m4_733 -> m4_265  [key=2, style=dotted];
m4_733 -> m4_19  [key=2, style=dotted];
m4_734 -> m4_735  [key=0, style=solid];
m4_734 -> m4_736  [key=0, style=solid];
m4_734 -> m4_102  [key=2, style=dotted];
m4_734 -> m4_19  [key=2, style=dotted];
m4_734 -> m4_265  [key=2, style=dotted];
m4_737 -> m4_738  [key=0, style=solid];
m4_737 -> m4_741  [key=0, style=solid];
m4_737 -> m4_79  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m4_737 -> m4_19  [key=2, style=dotted];
m4_737 -> m4_265  [key=2, style=dotted];
m4_738 -> m4_739  [key=0, style=solid];
m4_738 -> m4_740  [key=0, style=solid];
m4_738 -> m4_11  [key=2, style=dotted];
m4_741 -> m4_742  [key=0, style=solid];
m4_741 -> m4_11  [key=2, style=dotted];
m4_735 -> m4_743  [key=0, style=solid];
m4_735 -> m4_11  [key=2, style=dotted];
m4_735 -> m4_736  [key=0, style=solid];
m4_736 -> m4_737  [key=0, style=solid];
m4_736 -> m4_738  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_736 -> m4_740  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_736 -> m4_11  [key=2, style=dotted];
m4_740 -> m4_737  [key=0, style=solid];
m4_740 -> m4_740  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_740 -> m4_741  [key=0, style=solid];
m4_740 -> m4_19  [key=2, style=dotted];
m4_740 -> m4_265  [key=2, style=dotted];
m4_739 -> m4_743  [key=0, style=solid];
m4_739 -> m4_11  [key=2, style=dotted];
m4_739 -> m4_740  [key=0, style=solid];
m4_742 -> m4_743  [key=0, style=solid];
m4_742 -> m4_265  [key=2, style=dotted];
m4_742 -> m4_43  [key=2, style=dotted];
m4_743 -> m4_733  [color=blue, key=0, style=bold];
m4_743 -> m4_731  [color=blue, key=0, style=bold];
m4_286 -> m4_287  [key=0, style=solid];
m4_288 -> m4_8  [key=2, style=dotted];
m4_288 -> m4_9  [key=2, style=dotted];
m4_288 -> m4_292  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_288 -> m4_289  [key=0, style=solid];
m4_288 -> m4_49  [color=blue, key=0, style=bold];
m4_289 -> m4_57  [key=2, style=dotted];
m4_289 -> m4_290  [key=0, style=solid];
m4_289 -> m4_291  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_289 -> m4_303  [key=0, style=solid];
m4_287 -> m4_288  [key=0, style=solid];
m4_149 -> m4_150  [key=0, style=solid];
m4_149 -> m4_147  [color=blue, key=0, style=bold];
m4_150 -> m4_151  [key=0, style=solid];
m4_150 -> m4_152  [key=2, style=dotted];
m4_151 -> m4_149  [color=blue, key=0, style=bold];
m4_151 -> m4_104  [color=darkorchid, key=3, label="Local variable int totalCharsRead", style=bold];
m4_151 -> m4_152  [key=0, style=solid];
m4_151 -> m4_155  [color=darkorchid, key=3, label="Local variable int totalCharsRead", style=bold];
m4_1457 -> m4_1458  [key=0, style=solid];
m4_1461 -> m4_10  [key=2, style=dotted];
m4_1461 -> m4_1462  [key=0, style=solid];
m4_1461 -> m4_19  [key=2, style=dotted];
m4_1463 -> m4_10  [key=2, style=dotted];
m4_1463 -> m4_1464  [key=0, style=solid];
m4_1463 -> m4_19  [key=2, style=dotted];
m4_1469 -> m4_10  [key=2, style=dotted];
m4_1469 -> m4_1470  [key=0, style=solid];
m4_1469 -> m4_19  [key=2, style=dotted];
m4_1459 -> m4_8  [key=2, style=dotted];
m4_1459 -> m4_9  [key=2, style=dotted];
m4_1459 -> m4_1461  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1459 -> m4_1463  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1459 -> m4_1469  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1459 -> m4_1460  [key=0, style=solid];
m4_1459 -> m4_1462  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1459 -> m4_1464  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1459 -> m4_1465  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1459 -> m4_1466  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1459 -> m4_1467  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1459 -> m4_1470  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1462 -> m4_11  [key=2, style=dotted];
m4_1462 -> m4_1463  [key=0, style=solid];
m4_1464 -> m4_11  [key=2, style=dotted];
m4_1464 -> m4_1465  [key=0, style=solid];
m4_1466 -> m4_11  [key=2, style=dotted];
m4_1466 -> m4_1467  [key=0, style=solid];
m4_1467 -> m4_11  [key=2, style=dotted];
m4_1467 -> m4_1468  [key=0, style=solid];
m4_1470 -> m4_11  [key=2, style=dotted];
m4_1470 -> m4_1471  [key=0, style=solid];
m4_1468 -> m4_11  [key=2, style=dotted];
m4_1468 -> m4_1469  [key=0, style=solid];
m4_1465 -> m4_130  [key=2, style=dotted];
m4_1465 -> m4_1466  [key=0, style=solid];
m4_1465 -> m4_1468  [color=darkseagreen4, key=1, label=d, style=dashed];
m4_1460 -> m4_1461  [key=0, style=solid];
m4_1460 -> m4_1367  [key=2, style=dotted];
m4_1458 -> m4_1459  [key=0, style=solid];
m4_1471 -> m4_1457  [color=blue, key=0, style=bold];
m4_1472 -> m4_1473  [key=0, style=solid];
m4_1477 -> m4_10  [key=2, style=dotted];
m4_1477 -> m4_1478  [key=0, style=solid];
m4_1479 -> m4_10  [key=2, style=dotted];
m4_1479 -> m4_1480  [key=0, style=solid];
m4_1479 -> m4_19  [key=2, style=dotted];
m4_1474 -> m4_8  [key=2, style=dotted];
m4_1474 -> m4_9  [key=2, style=dotted];
m4_1474 -> m4_1477  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1474 -> m4_1479  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1474 -> m4_1475  [key=0, style=solid];
m4_1474 -> m4_1480  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1480 -> m4_11  [key=2, style=dotted];
m4_1480 -> m4_1481  [key=0, style=solid];
m4_1480 -> m4_1482  [key=2, style=dotted];
m4_1476 -> m4_1477  [key=0, style=solid];
m4_1476 -> m4_1479  [key=0, style=solid];
m4_1478 -> m4_1476  [key=0, style=solid];
m4_1478 -> m4_1478  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_1473 -> m4_1474  [key=0, style=solid];
m4_1475 -> m4_1476  [key=0, style=solid];
m4_1475 -> m4_1478  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_1481 -> m4_1472  [color=blue, key=0, style=bold];
m4_1903 -> m4_1904  [key=0, style=solid];
m4_1906 -> m4_10  [key=2, style=dotted];
m4_1906 -> m4_1907  [key=0, style=solid];
m4_1906 -> m4_19  [key=2, style=dotted];
m4_1910 -> m4_10  [key=2, style=dotted];
m4_1910 -> m4_1911  [key=0, style=solid];
m4_1910 -> m4_19  [key=2, style=dotted];
m4_1912 -> m4_10  [key=2, style=dotted];
m4_1912 -> m4_1913  [key=0, style=solid];
m4_1912 -> m4_19  [key=2, style=dotted];
m4_1914 -> m4_10  [key=2, style=dotted];
m4_1914 -> m4_1915  [key=0, style=solid];
m4_1914 -> m4_19  [key=2, style=dotted];
m4_1916 -> m4_10  [key=2, style=dotted];
m4_1916 -> m4_1917  [key=0, style=solid];
m4_1916 -> m4_19  [key=2, style=dotted];
m4_1918 -> m4_10  [key=2, style=dotted];
m4_1918 -> m4_1919  [key=0, style=solid];
m4_1918 -> m4_19  [key=2, style=dotted];
m4_1922 -> m4_10  [key=2, style=dotted];
m4_1922 -> m4_1923  [key=0, style=solid];
m4_1922 -> m4_19  [key=2, style=dotted];
m4_1924 -> m4_10  [key=2, style=dotted];
m4_1924 -> m4_1925  [key=0, style=solid];
m4_1924 -> m4_19  [key=2, style=dotted];
m4_1926 -> m4_10  [key=2, style=dotted];
m4_1926 -> m4_1927  [key=0, style=solid];
m4_1926 -> m4_19  [key=2, style=dotted];
m4_1928 -> m4_10  [key=2, style=dotted];
m4_1928 -> m4_1929  [key=0, style=solid];
m4_1928 -> m4_19  [key=2, style=dotted];
m4_1930 -> m4_10  [key=2, style=dotted];
m4_1930 -> m4_1931  [key=0, style=solid];
m4_1930 -> m4_43  [key=2, style=dotted];
m4_1905 -> m4_8  [key=2, style=dotted];
m4_1905 -> m4_9  [key=2, style=dotted];
m4_1905 -> m4_1906  [key=0, style=solid];
m4_1905 -> m4_1933  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1905 -> m4_1910  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1905 -> m4_1912  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1905 -> m4_1914  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1905 -> m4_1916  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1905 -> m4_1918  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1905 -> m4_1936  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1905 -> m4_1922  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1905 -> m4_1924  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1905 -> m4_1926  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1905 -> m4_1928  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1905 -> m4_1930  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1905 -> m4_1907  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1905 -> m4_1908  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1905 -> m4_1909  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1905 -> m4_1911  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1905 -> m4_1913  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1905 -> m4_1915  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1905 -> m4_1917  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1905 -> m4_1919  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1905 -> m4_1920  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1905 -> m4_1921  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1905 -> m4_1923  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1905 -> m4_1925  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1905 -> m4_1927  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1905 -> m4_1929  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1907 -> m4_11  [key=2, style=dotted];
m4_1907 -> m4_1908  [key=0, style=solid];
m4_1909 -> m4_11  [key=2, style=dotted];
m4_1909 -> m4_1910  [key=0, style=solid];
m4_1911 -> m4_11  [key=2, style=dotted];
m4_1911 -> m4_1912  [key=0, style=solid];
m4_1913 -> m4_11  [key=2, style=dotted];
m4_1913 -> m4_1914  [key=0, style=solid];
m4_1915 -> m4_11  [key=2, style=dotted];
m4_1915 -> m4_1916  [key=0, style=solid];
m4_1917 -> m4_11  [key=2, style=dotted];
m4_1917 -> m4_1918  [key=0, style=solid];
m4_1919 -> m4_11  [key=2, style=dotted];
m4_1919 -> m4_1920  [key=0, style=solid];
m4_1921 -> m4_11  [key=2, style=dotted];
m4_1921 -> m4_1922  [key=0, style=solid];
m4_1923 -> m4_11  [key=2, style=dotted];
m4_1923 -> m4_1924  [key=0, style=solid];
m4_1925 -> m4_11  [key=2, style=dotted];
m4_1925 -> m4_1926  [key=0, style=solid];
m4_1927 -> m4_11  [key=2, style=dotted];
m4_1927 -> m4_1928  [key=0, style=solid];
m4_1929 -> m4_11  [key=2, style=dotted];
m4_1929 -> m4_1930  [key=0, style=solid];
m4_1904 -> m4_1905  [key=0, style=solid];
m4_1908 -> m4_1909  [key=0, style=solid];
m4_1908 -> m4_1932  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1908 -> m4_1640  [key=2, style=dotted];
m4_1920 -> m4_1921  [key=0, style=solid];
m4_1920 -> m4_1935  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1920 -> m4_1640  [key=2, style=dotted];
m4_1931 -> m4_1903  [color=blue, key=0, style=bold];
m4_133 -> m4_134  [key=0, style=solid];
m4_133 -> m4_131  [color=blue, key=0, style=bold];
m4_1429 -> m4_1430  [key=0, style=solid];
m4_1430 -> m4_8  [key=2, style=dotted];
m4_1430 -> m4_9  [key=2, style=dotted];
m4_1430 -> m4_1434  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1430 -> m4_1431  [key=0, style=solid];
m4_1431 -> m4_57  [key=2, style=dotted];
m4_1431 -> m4_1432  [key=0, style=solid];
m4_1431 -> m4_1433  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1432 -> m4_1429  [color=blue, key=0, style=bold];
m4_115 -> m4_116  [key=0, style=solid];
m4_115 -> m4_111  [key=0, style=solid];
m4_117 -> m4_8  [key=2, style=dotted];
m4_117 -> m4_9  [key=2, style=dotted];
m4_117 -> m4_125  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_117 -> m4_118  [key=0, style=solid];
m4_117 -> m4_119  [key=0, style=solid];
m4_119 -> m4_8  [key=2, style=dotted];
m4_119 -> m4_9  [key=2, style=dotted];
m4_119 -> m4_120  [key=0, style=solid];
m4_119 -> m4_128  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_119 -> m4_107  [color=blue, key=0, style=bold];
m4_118 -> m4_57  [key=2, style=dotted];
m4_118 -> m4_119  [key=0, style=solid];
m4_118 -> m4_124  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_116 -> m4_117  [key=0, style=solid];
m4_116 -> m4_119  [color=darkseagreen4, key=1, label=json, style=dashed];
m4_116 -> m4_121  [color=darkseagreen4, key=1, label=json, style=dashed];
m4_116 -> m4_118  [key=0, style=solid];
m4_1207 -> m4_1208  [key=0, style=solid];
m4_1208 -> m4_8  [key=2, style=dotted];
m4_1208 -> m4_9  [key=2, style=dotted];
m4_1208 -> m4_1209  [key=0, style=solid];
m4_1208 -> m4_1212  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1209 -> m4_57  [key=2, style=dotted];
m4_1209 -> m4_1210  [key=0, style=solid];
m4_1209 -> m4_1211  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1210 -> m4_1207  [color=blue, key=0, style=bold];
m4_235 -> m4_236  [key=0, style=solid];
m4_235 -> m4_235  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m4_238 -> m4_10  [key=2, style=dotted];
m4_238 -> m4_239  [key=0, style=solid];
m4_238 -> m4_240  [key=0, style=solid];
m4_238 -> m4_290  [key=2, style=dotted];
m4_237 -> m4_8  [key=2, style=dotted];
m4_237 -> m4_238  [key=0, style=solid];
m4_237 -> m4_244  [key=2, style=dotted];
m4_237 -> m4_239  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_237 -> m4_289  [key=2, style=dotted];
m4_237 -> m4_240  [color=darkseagreen4, key=1, label=writeChar, style=dashed];
m4_237 -> m4_264  [color=darkseagreen4, key=1, label=writeChar, style=dashed];
m4_239 -> m4_240  [key=0, style=solid];
m4_239 -> m4_258  [key=0, style=solid];
m4_239 -> m4_264  [color=darkseagreen4, key=1, label=writeChar, style=dashed];
m4_236 -> m4_237  [key=0, style=solid];
m4_236 -> m4_242  [key=2, style=dotted];
m4_236 -> m4_243  [key=2, style=dotted];
m4_240 -> m4_241  [key=0, style=solid];
m4_240 -> m4_258  [key=0, style=solid];
m4_240 -> m4_291  [key=2, style=dotted];
m4_241 -> m4_235  [color=blue, key=0, style=bold];
m4_241 -> m4_242  [key=0, style=solid];
m4_1443 -> m4_1444  [key=0, style=solid];
m4_1446 -> m4_10  [key=2, style=dotted];
m4_1446 -> m4_1447  [key=0, style=solid];
m4_1446 -> m4_19  [key=2, style=dotted];
m4_1448 -> m4_10  [key=2, style=dotted];
m4_1448 -> m4_1449  [key=0, style=solid];
m4_1448 -> m4_19  [key=2, style=dotted];
m4_1454 -> m4_10  [key=2, style=dotted];
m4_1454 -> m4_1455  [key=0, style=solid];
m4_1454 -> m4_19  [key=2, style=dotted];
m4_1445 -> m4_8  [key=2, style=dotted];
m4_1445 -> m4_9  [key=2, style=dotted];
m4_1445 -> m4_1446  [key=0, style=solid];
m4_1445 -> m4_1448  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1445 -> m4_1454  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1445 -> m4_1447  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1445 -> m4_1449  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1445 -> m4_1450  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1445 -> m4_1451  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1445 -> m4_1452  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1445 -> m4_1455  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1447 -> m4_11  [key=2, style=dotted];
m4_1447 -> m4_1448  [key=0, style=solid];
m4_1449 -> m4_11  [key=2, style=dotted];
m4_1449 -> m4_1450  [key=0, style=solid];
m4_1451 -> m4_11  [key=2, style=dotted];
m4_1451 -> m4_1452  [key=0, style=solid];
m4_1452 -> m4_11  [key=2, style=dotted];
m4_1452 -> m4_1453  [key=0, style=solid];
m4_1455 -> m4_11  [key=2, style=dotted];
m4_1455 -> m4_1456  [key=0, style=solid];
m4_1453 -> m4_11  [key=2, style=dotted];
m4_1453 -> m4_1454  [key=0, style=solid];
m4_1450 -> m4_130  [key=2, style=dotted];
m4_1450 -> m4_1451  [key=0, style=solid];
m4_1450 -> m4_1453  [color=darkseagreen4, key=1, label=d, style=dashed];
m4_1444 -> m4_1445  [key=0, style=solid];
m4_1456 -> m4_1443  [color=blue, key=0, style=bold];
m4_917 -> m4_918  [key=0, style=solid];
m4_947 -> m4_8  [key=2, style=dotted];
m4_947 -> m4_9  [key=2, style=dotted];
m4_947 -> m4_948  [key=0, style=solid];
m4_947 -> m4_967  [key=2, style=dotted];
m4_947 -> m4_951  [color=darkseagreen4, key=1, label=jsonObject, style=dashed];
m4_952 -> m4_11  [key=2, style=dotted];
m4_952 -> m4_953  [key=0, style=solid];
m4_952 -> m4_965  [key=2, style=dotted];
m4_945 -> m4_947  [color=darkseagreen4, key=1, label=json, style=dashed];
m4_945 -> m4_952  [color=darkseagreen4, key=1, label=json, style=dashed];
m4_945 -> m4_946  [key=0, style=solid];
m4_945 -> m4_965  [key=2, style=dotted];
m4_946 -> m4_947  [key=0, style=solid];
m4_946 -> m4_966  [key=2, style=dotted];
m4_946 -> m4_951  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m4_948 -> m4_952  [color=darkseagreen4, key=1, label=sb, style=dashed];
m4_948 -> m4_949  [key=0, style=solid];
m4_948 -> m4_954  [key=2, style=dotted];
m4_951 -> m4_952  [key=0, style=solid];
m4_951 -> m4_968  [key=2, style=dotted];
m4_918 -> m4_945  [color=darkseagreen4, key=1, label=sb, style=dashed];
m4_918 -> m4_919  [key=0, style=solid];
m4_918 -> m4_954  [key=2, style=dotted];
m4_944 -> m4_945  [key=0, style=solid];
m4_944 -> m4_519  [key=2, style=dotted];
m4_949 -> m4_950  [key=0, style=solid];
m4_949 -> m4_955  [key=2, style=dotted];
m4_950 -> m4_951  [key=0, style=solid];
m4_950 -> m4_516  [key=2, style=dotted];
m4_925 -> m4_960  [key=2, style=dotted];
m4_925 -> m4_926  [key=0, style=solid];
m4_932 -> m4_960  [key=2, style=dotted];
m4_932 -> m4_933  [key=0, style=solid];
m4_938 -> m4_960  [key=2, style=dotted];
m4_938 -> m4_939  [key=0, style=solid];
m4_919 -> m4_920  [key=0, style=solid];
m4_919 -> m4_955  [key=2, style=dotted];
m4_920 -> m4_944  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m4_920 -> m4_925  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m4_920 -> m4_932  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m4_920 -> m4_938  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m4_920 -> m4_921  [key=0, style=solid];
m4_920 -> m4_516  [key=2, style=dotted];
m4_920 -> m4_922  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m4_920 -> m4_923  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m4_920 -> m4_924  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m4_920 -> m4_926  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m4_920 -> m4_927  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m4_920 -> m4_928  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m4_920 -> m4_929  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m4_920 -> m4_934  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m4_920 -> m4_935  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m4_920 -> m4_936  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m4_920 -> m4_937  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m4_920 -> m4_939  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m4_920 -> m4_940  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m4_920 -> m4_941  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m4_920 -> m4_942  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m4_920 -> m4_943  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m4_943 -> m4_944  [key=0, style=solid];
m4_943 -> m4_964  [key=2, style=dotted];
m4_924 -> m4_925  [key=0, style=solid];
m4_924 -> m4_959  [key=2, style=dotted];
m4_926 -> m4_927  [key=0, style=solid];
m4_926 -> m4_959  [key=2, style=dotted];
m4_930 -> m4_932  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_930 -> m4_931  [key=0, style=solid];
m4_930 -> m4_933  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_931 -> m4_932  [key=0, style=solid];
m4_931 -> m4_934  [key=0, style=solid];
m4_933 -> m4_931  [key=0, style=solid];
m4_933 -> m4_933  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_937 -> m4_938  [key=0, style=solid];
m4_937 -> m4_963  [key=2, style=dotted];
m4_939 -> m4_519  [key=2, style=dotted];
m4_939 -> m4_940  [key=0, style=solid];
m4_921 -> m4_922  [key=0, style=solid];
m4_921 -> m4_956  [key=2, style=dotted];
m4_922 -> m4_923  [key=0, style=solid];
m4_922 -> m4_957  [key=2, style=dotted];
m4_923 -> m4_924  [key=0, style=solid];
m4_923 -> m4_958  [key=2, style=dotted];
m4_927 -> m4_928  [key=0, style=solid];
m4_927 -> m4_961  [key=2, style=dotted];
m4_928 -> m4_929  [key=0, style=solid];
m4_928 -> m4_959  [key=2, style=dotted];
m4_929 -> m4_930  [key=0, style=solid];
m4_929 -> m4_956  [key=2, style=dotted];
m4_934 -> m4_935  [key=0, style=solid];
m4_934 -> m4_958  [key=2, style=dotted];
m4_935 -> m4_936  [key=0, style=solid];
m4_935 -> m4_959  [key=2, style=dotted];
m4_936 -> m4_937  [key=0, style=solid];
m4_936 -> m4_962  [key=2, style=dotted];
m4_940 -> m4_941  [key=0, style=solid];
m4_940 -> m4_963  [key=2, style=dotted];
m4_941 -> m4_942  [key=0, style=solid];
m4_941 -> m4_961  [key=2, style=dotted];
m4_942 -> m4_943  [key=0, style=solid];
m4_942 -> m4_964  [key=2, style=dotted];
m4_953 -> m4_917  [color=blue, key=0, style=bold];
m4_257 -> m4_241  [key=0, style=solid];
m4_257 -> m4_258  [key=0, style=solid];
m4_58 -> m4_59  [key=0, style=solid];
m4_8 -> m4_9  [key=0, style=solid];
m4_9 -> m4_10  [key=0, style=solid];
m4_9 -> m4_11  [key=0, style=solid];
m4_11 -> m4_12  [key=0, style=solid];
m4_12 -> m4_13  [key=0, style=solid];
m4_13 -> m4_8  [color=blue, key=0, style=bold];
m4_13 -> m4_14  [key=0, style=solid];
m4_1938 -> m4_1939  [key=0, style=solid];
m4_1941 -> m4_10  [key=2, style=dotted];
m4_1941 -> m4_1942  [key=0, style=solid];
m4_1941 -> m4_19  [key=2, style=dotted];
m4_1942 -> m4_10  [key=2, style=dotted];
m4_1942 -> m4_1943  [key=0, style=solid];
m4_1942 -> m4_19  [key=2, style=dotted];
m4_1944 -> m4_10  [key=2, style=dotted];
m4_1944 -> m4_1945  [key=0, style=solid];
m4_1944 -> m4_19  [key=2, style=dotted];
m4_1947 -> m4_10  [key=2, style=dotted];
m4_1947 -> m4_1948  [key=0, style=solid];
m4_1947 -> m4_19  [key=2, style=dotted];
m4_1950 -> m4_10  [key=2, style=dotted];
m4_1950 -> m4_1951  [key=0, style=solid];
m4_1950 -> m4_19  [key=2, style=dotted];
m4_1953 -> m4_10  [key=2, style=dotted];
m4_1953 -> m4_1954  [key=0, style=solid];
m4_1953 -> m4_19  [key=2, style=dotted];
m4_1956 -> m4_10  [key=2, style=dotted];
m4_1956 -> m4_1957  [key=0, style=solid];
m4_1956 -> m4_19  [key=2, style=dotted];
m4_1959 -> m4_10  [key=2, style=dotted];
m4_1959 -> m4_1960  [key=0, style=solid];
m4_1959 -> m4_19  [key=2, style=dotted];
m4_1962 -> m4_10  [key=2, style=dotted];
m4_1962 -> m4_1963  [key=0, style=solid];
m4_1962 -> m4_19  [key=2, style=dotted];
m4_1965 -> m4_10  [key=2, style=dotted];
m4_1965 -> m4_1966  [key=0, style=solid];
m4_1965 -> m4_19  [key=2, style=dotted];
m4_1968 -> m4_10  [key=2, style=dotted];
m4_1968 -> m4_1969  [key=0, style=solid];
m4_1968 -> m4_19  [key=2, style=dotted];
m4_1971 -> m4_10  [key=2, style=dotted];
m4_1971 -> m4_1972  [key=0, style=solid];
m4_1971 -> m4_19  [key=2, style=dotted];
m4_1974 -> m4_10  [key=2, style=dotted];
m4_1974 -> m4_1975  [key=0, style=solid];
m4_1974 -> m4_19  [key=2, style=dotted];
m4_1977 -> m4_10  [key=2, style=dotted];
m4_1977 -> m4_1978  [key=0, style=solid];
m4_1977 -> m4_19  [key=2, style=dotted];
m4_1940 -> m4_8  [key=2, style=dotted];
m4_1940 -> m4_1941  [key=0, style=solid];
m4_1940 -> m4_1942  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1940 -> m4_1944  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1940 -> m4_1947  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1940 -> m4_1950  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1940 -> m4_1953  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1940 -> m4_1956  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1940 -> m4_1959  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1940 -> m4_1962  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1940 -> m4_1965  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1940 -> m4_1968  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1940 -> m4_1971  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1940 -> m4_1974  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1940 -> m4_1977  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1940 -> m4_244  [key=2, style=dotted];
m4_1940 -> m4_284  [key=2, style=dotted];
m4_1940 -> m4_285  [key=2, style=dotted];
m4_1940 -> m4_1943  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1940 -> m4_1945  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1940 -> m4_1946  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1940 -> m4_1948  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1940 -> m4_1949  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1940 -> m4_1951  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1940 -> m4_1952  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1940 -> m4_1954  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1940 -> m4_1955  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1940 -> m4_1957  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1940 -> m4_1958  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1940 -> m4_1960  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1940 -> m4_1961  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1940 -> m4_1963  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1940 -> m4_1964  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1940 -> m4_1966  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1940 -> m4_1967  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1940 -> m4_1969  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1940 -> m4_1970  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1940 -> m4_1972  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1940 -> m4_1973  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1940 -> m4_1975  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1940 -> m4_1976  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1943 -> m4_11  [key=2, style=dotted];
m4_1943 -> m4_1944  [key=0, style=solid];
m4_1945 -> m4_11  [key=2, style=dotted];
m4_1945 -> m4_1946  [key=0, style=solid];
m4_1946 -> m4_11  [key=2, style=dotted];
m4_1946 -> m4_1947  [key=0, style=solid];
m4_1948 -> m4_11  [key=2, style=dotted];
m4_1948 -> m4_1949  [key=0, style=solid];
m4_1949 -> m4_11  [key=2, style=dotted];
m4_1949 -> m4_1950  [key=0, style=solid];
m4_1951 -> m4_11  [key=2, style=dotted];
m4_1951 -> m4_1952  [key=0, style=solid];
m4_1952 -> m4_11  [key=2, style=dotted];
m4_1952 -> m4_1953  [key=0, style=solid];
m4_1954 -> m4_11  [key=2, style=dotted];
m4_1954 -> m4_1955  [key=0, style=solid];
m4_1955 -> m4_11  [key=2, style=dotted];
m4_1955 -> m4_1956  [key=0, style=solid];
m4_1957 -> m4_11  [key=2, style=dotted];
m4_1957 -> m4_1958  [key=0, style=solid];
m4_1958 -> m4_11  [key=2, style=dotted];
m4_1958 -> m4_1959  [key=0, style=solid];
m4_1960 -> m4_11  [key=2, style=dotted];
m4_1960 -> m4_1961  [key=0, style=solid];
m4_1961 -> m4_11  [key=2, style=dotted];
m4_1961 -> m4_1962  [key=0, style=solid];
m4_1963 -> m4_11  [key=2, style=dotted];
m4_1963 -> m4_1964  [key=0, style=solid];
m4_1964 -> m4_11  [key=2, style=dotted];
m4_1964 -> m4_1965  [key=0, style=solid];
m4_1966 -> m4_11  [key=2, style=dotted];
m4_1966 -> m4_1967  [key=0, style=solid];
m4_1967 -> m4_11  [key=2, style=dotted];
m4_1967 -> m4_1968  [key=0, style=solid];
m4_1969 -> m4_11  [key=2, style=dotted];
m4_1969 -> m4_1970  [key=0, style=solid];
m4_1970 -> m4_11  [key=2, style=dotted];
m4_1970 -> m4_1971  [key=0, style=solid];
m4_1972 -> m4_11  [key=2, style=dotted];
m4_1972 -> m4_1973  [key=0, style=solid];
m4_1973 -> m4_11  [key=2, style=dotted];
m4_1973 -> m4_1974  [key=0, style=solid];
m4_1975 -> m4_11  [key=2, style=dotted];
m4_1975 -> m4_1976  [key=0, style=solid];
m4_1976 -> m4_11  [key=2, style=dotted];
m4_1976 -> m4_1977  [key=0, style=solid];
m4_1939 -> m4_1940  [key=0, style=solid];
m4_1978 -> m4_1938  [color=blue, key=0, style=bold];
m4_175 -> m4_176  [key=0, style=solid];
m4_175 -> m4_187  [key=2, style=dotted];
m4_1494 -> m4_1495  [key=0, style=solid];
m4_1497 -> m4_10  [key=2, style=dotted];
m4_1497 -> m4_1498  [key=0, style=solid];
m4_1497 -> m4_19  [key=2, style=dotted];
m4_1500 -> m4_10  [key=2, style=dotted];
m4_1500 -> m4_1501  [key=0, style=solid];
m4_1500 -> m4_19  [key=2, style=dotted];
m4_1496 -> m4_8  [key=2, style=dotted];
m4_1496 -> m4_9  [key=2, style=dotted];
m4_1496 -> m4_1497  [key=0, style=solid];
m4_1496 -> m4_1500  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1496 -> m4_1498  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1496 -> m4_1499  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1496 -> m4_1501  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1498 -> m4_11  [key=2, style=dotted];
m4_1498 -> m4_1499  [key=0, style=solid];
m4_1499 -> m4_11  [key=2, style=dotted];
m4_1499 -> m4_1500  [key=0, style=solid];
m4_1501 -> m4_11  [key=2, style=dotted];
m4_1501 -> m4_1502  [key=0, style=solid];
m4_1495 -> m4_1496  [key=0, style=solid];
m4_1502 -> m4_1494  [color=blue, key=0, style=bold];
m4_294 -> m4_563  [key=0, style=solid];
m4_294 -> m4_295  [key=0, style=solid];
m4_294 -> m4_1  [color=darkorchid, key=3, label="Local variable char highSurrogate", style=bold];
m4_1415 -> m4_1416  [key=0, style=solid];
m4_1416 -> m4_8  [key=2, style=dotted];
m4_1416 -> m4_9  [key=2, style=dotted];
m4_1416 -> m4_1420  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1416 -> m4_1417  [key=0, style=solid];
m4_1417 -> m4_57  [key=2, style=dotted];
m4_1417 -> m4_1418  [key=0, style=solid];
m4_1417 -> m4_1419  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1418 -> m4_1415  [color=blue, key=0, style=bold];
m4_882 -> m4_883  [key=0, style=solid];
m4_909 -> m4_910  [color=green, key=0, style=solid];
m4_909 -> m4_57  [color=green, key=2, style=dotted];
m4_909 -> m4_914  [color=green, key=1, label="lambda expression", style=dashed];
m4_908 -> m4_909  [color=green, key=0, style=solid];
m4_908 -> m4_915  [color=green, key=1, label=reader, style=dashed];
m4_908 -> m4_8  [key=2, style=dotted];
m4_908 -> m4_9  [key=2, style=dotted];
m4_885 -> m4_10  [key=2, style=dotted];
m4_885 -> m4_886  [key=0, style=solid];
m4_885 -> m4_19  [key=2, style=dotted];
m4_889 -> m4_10  [key=2, style=dotted];
m4_889 -> m4_890  [key=0, style=solid];
m4_889 -> m4_19  [key=2, style=dotted];
m4_893 -> m4_10  [key=2, style=dotted];
m4_893 -> m4_894  [key=0, style=solid];
m4_893 -> m4_19  [key=2, style=dotted];
m4_897 -> m4_10  [key=2, style=dotted];
m4_897 -> m4_898  [key=0, style=solid];
m4_897 -> m4_19  [key=2, style=dotted];
m4_903 -> m4_10  [key=2, style=dotted];
m4_903 -> m4_904  [key=0, style=solid];
m4_903 -> m4_19  [key=2, style=dotted];
m4_907 -> m4_10  [key=2, style=dotted];
m4_907 -> m4_908  [key=0, style=solid];
m4_907 -> m4_43  [key=2, style=dotted];
m4_884 -> m4_8  [key=2, style=dotted];
m4_884 -> m4_9  [key=2, style=dotted];
m4_884 -> m4_885  [key=0, style=solid];
m4_884 -> m4_886  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_884 -> m4_887  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_888 -> m4_8  [key=2, style=dotted];
m4_888 -> m4_9  [key=2, style=dotted];
m4_888 -> m4_889  [key=0, style=solid];
m4_888 -> m4_890  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_888 -> m4_891  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_888 -> m4_665  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
m4_892 -> m4_8  [key=2, style=dotted];
m4_892 -> m4_9  [key=2, style=dotted];
m4_892 -> m4_893  [key=0, style=solid];
m4_892 -> m4_894  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_892 -> m4_895  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_896 -> m4_8  [key=2, style=dotted];
m4_896 -> m4_9  [key=2, style=dotted];
m4_896 -> m4_897  [key=0, style=solid];
m4_896 -> m4_898  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_896 -> m4_899  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_900 -> m4_8  [key=2, style=dotted];
m4_900 -> m4_9  [key=2, style=dotted];
m4_900 -> m4_912  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_900 -> m4_901  [key=0, style=solid];
m4_902 -> m4_8  [key=2, style=dotted];
m4_902 -> m4_9  [key=2, style=dotted];
m4_902 -> m4_903  [key=0, style=solid];
m4_902 -> m4_904  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_902 -> m4_905  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_906 -> m4_8  [key=2, style=dotted];
m4_906 -> m4_9  [key=2, style=dotted];
m4_906 -> m4_907  [key=0, style=solid];
m4_886 -> m4_11  [key=2, style=dotted];
m4_886 -> m4_887  [key=0, style=solid];
m4_887 -> m4_11  [key=2, style=dotted];
m4_887 -> m4_888  [key=0, style=solid];
m4_890 -> m4_11  [key=2, style=dotted];
m4_890 -> m4_891  [key=0, style=solid];
m4_891 -> m4_11  [key=2, style=dotted];
m4_891 -> m4_892  [key=0, style=solid];
m4_894 -> m4_11  [key=2, style=dotted];
m4_894 -> m4_895  [key=0, style=solid];
m4_895 -> m4_11  [key=2, style=dotted];
m4_895 -> m4_896  [key=0, style=solid];
m4_898 -> m4_11  [key=2, style=dotted];
m4_898 -> m4_899  [key=0, style=solid];
m4_899 -> m4_11  [key=2, style=dotted];
m4_899 -> m4_900  [key=0, style=solid];
m4_904 -> m4_11  [key=2, style=dotted];
m4_904 -> m4_905  [key=0, style=solid];
m4_905 -> m4_11  [key=2, style=dotted];
m4_905 -> m4_906  [key=0, style=solid];
m4_901 -> m4_57  [key=2, style=dotted];
m4_901 -> m4_902  [key=0, style=solid];
m4_901 -> m4_911  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_883 -> m4_884  [key=0, style=solid];
m4_910 -> m4_882  [color=blue, key=0, style=bold];
m4_730 -> m4_731  [key=0, style=solid];
m4_730 -> m4_52  [key=2, style=dotted];
m4_730 -> m4_51  [key=2, style=dotted];
m4_297 -> m4_10  [key=2, style=dotted];
m4_297 -> m4_298  [key=0, style=solid];
m4_299 -> m4_10  [key=2, style=dotted];
m4_299 -> m4_300  [key=0, style=solid];
m4_299 -> m4_296  [key=2, style=dotted];
m4_301 -> m4_10  [key=2, style=dotted];
m4_301 -> m4_302  [key=0, style=solid];
m4_301 -> m4_292  [color=blue, key=0, style=bold];
m4_303 -> m4_10  [key=2, style=dotted];
m4_303 -> m4_304  [key=0, style=solid];
m4_303 -> m4_310  [color=darkseagreen4, key=1, label=writeChar, style=dashed];
m4_303 -> m4_306  [color=darkorchid, key=3, label="Local variable char writeChar", style=bold];
m4_305 -> m4_10  [key=2, style=dotted];
m4_305 -> m4_306  [key=0, style=solid];
m4_305 -> m4_312  [key=2, style=dotted];
m4_298 -> m4_11  [key=2, style=dotted];
m4_298 -> m4_299  [key=0, style=solid];
m4_298 -> m4_300  [key=0, style=solid];
m4_300 -> m4_11  [key=2, style=dotted];
m4_300 -> m4_301  [key=0, style=solid];
m4_300 -> m4_302  [key=2, style=dotted];
m4_304 -> m4_11  [key=2, style=dotted];
m4_304 -> m4_305  [key=0, style=solid];
m4_304 -> m4_309  [key=0, style=solid];
m4_304 -> m4_102  [key=2, style=dotted];
m4_306 -> m4_11  [key=2, style=dotted];
m4_306 -> m4_307  [key=0, style=solid];
m4_306 -> m4_313  [key=2, style=dotted];
m4_306 -> m4_314  [key=2, style=dotted];
m4_307 -> m4_57  [key=2, style=dotted];
m4_307 -> m4_308  [key=0, style=solid];
m4_307 -> m4_309  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_307 -> m4_310  [color=darkseagreen4, key=1, label=writeChar, style=dashed];
m4_308 -> m4_294  [color=blue, key=0, style=bold];
m4_308 -> m4_310  [key=0, style=solid];
m4_1002 -> m4_1003  [key=0, style=solid];
m4_1005 -> m4_10  [key=2, style=dotted];
m4_1005 -> m4_1006  [key=0, style=solid];
m4_1007 -> m4_10  [key=2, style=dotted];
m4_1007 -> m4_1008  [key=0, style=solid];
m4_1009 -> m4_10  [key=2, style=dotted];
m4_1009 -> m4_1010  [key=0, style=solid];
m4_1011 -> m4_10  [key=2, style=dotted];
m4_1011 -> m4_1012  [key=0, style=solid];
m4_1004 -> m4_8  [key=2, style=dotted];
m4_1004 -> m4_9  [key=2, style=dotted];
m4_1004 -> m4_1005  [key=0, style=solid];
m4_1004 -> m4_1007  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1004 -> m4_1009  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1004 -> m4_1011  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1004 -> m4_1006  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1004 -> m4_1008  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1004 -> m4_1010  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1004 -> m4_1012  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1006 -> m4_11  [key=2, style=dotted];
m4_1006 -> m4_1007  [key=0, style=solid];
m4_1008 -> m4_11  [key=2, style=dotted];
m4_1008 -> m4_1009  [key=0, style=solid];
m4_1010 -> m4_11  [key=2, style=dotted];
m4_1010 -> m4_1011  [key=0, style=solid];
m4_1010 -> m4_1014  [key=2, style=dotted];
m4_1010 -> m4_1015  [key=2, style=dotted];
m4_1012 -> m4_11  [key=2, style=dotted];
m4_1012 -> m4_1013  [key=0, style=solid];
m4_1003 -> m4_1004  [key=0, style=solid];
m4_1013 -> m4_1002  [color=blue, key=0, style=bold];
m4_0 -> m4_1  [key=0, style=solid];
m4_0 -> m4_3  [color=darkseagreen4, key=1, label="System.IO.TextReader", style=dashed];
m4_3 -> m4_10  [key=2, style=dotted];
m4_3 -> m4_4  [key=0, style=solid];
m4_3 -> m4_103  [color=darkorchid, key=3, label="Field variable char[] _chars", style=bold];
m4_3 -> m4_112  [color=darkorchid, key=3, label="Field variable char[] _chars", style=bold];
m4_4 -> m4_10  [key=2, style=dotted];
m4_4 -> m4_5  [key=0, style=solid];
m4_4 -> m4_108  [color=darkorchid, key=3, label="Field variable int _charsUsed", style=bold];
m4_5 -> m4_10  [key=2, style=dotted];
m4_5 -> m4_6  [key=0, style=solid];
m4_5 -> m4_249  [color=darkorchid, key=3, label="Field variable int _charPos", style=bold];
m4_5 -> m4_361  [color=darkorchid, key=3, label="Field variable int _charPos", style=bold];
m4_2 -> m4_8  [key=2, style=dotted];
m4_2 -> m4_9  [key=2, style=dotted];
m4_2 -> m4_3  [key=0, style=solid];
m4_2 -> m4_4  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2 -> m4_5  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2 -> m4_6  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2 -> m4_7  [key=2, style=dotted];
m4_6 -> m4_11  [key=2, style=dotted];
m4_6 -> m4_7  [key=0, style=solid];
m4_6 -> m4_0  [color=blue, key=0, style=bold];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_1  [color=darkorchid, key=3, label="Field variable char UnicodeReplacementChar", style=bold];
m4_1 -> m4_3  [key=0, style=solid];
m4_48 -> m4_10  [key=2, style=dotted];
m4_48 -> m4_49  [key=0, style=solid];
m4_48 -> m4_19  [key=2, style=dotted];
m4_48 -> m4_59  [key=0, style=solid];
m4_50 -> m4_10  [key=2, style=dotted];
m4_50 -> m4_51  [key=0, style=solid];
m4_50 -> m4_19  [key=2, style=dotted];
m4_53 -> m4_10  [key=2, style=dotted];
m4_53 -> m4_54  [key=0, style=solid];
m4_53 -> m4_19  [key=2, style=dotted];
m4_55 -> m4_10  [key=2, style=dotted];
m4_55 -> m4_56  [key=0, style=solid];
m4_55 -> m4_43  [key=2, style=dotted];
m4_55 -> m4_55  [color=darkorchid, key=3, label="Local variable int charByteCount", style=bold];
m4_49 -> m4_11  [key=2, style=dotted];
m4_49 -> m4_50  [key=0, style=solid];
m4_49 -> m4_190  [key=0, style=solid];
m4_49 -> m4_201  [color=darkseagreen4, key=1, label=char, style=dashed];
m4_49 -> m4_206  [color=darkseagreen4, key=1, label=char, style=dashed];
m4_49 -> m4_276  [color=darkseagreen4, key=1, label=char, style=dashed];
m4_49 -> m4_19  [color=darkorchid, key=3, label="Parameter variable char quote", style=bold];
m4_49 -> m4_432  [color=darkorchid, key=3, label="Parameter variable char quote", style=bold];
m4_54 -> m4_11  [key=2, style=dotted];
m4_54 -> m4_55  [key=0, style=solid];
m4_54 -> m4_56  [color=darkseagreen4, key=1, label="char[]", style=dashed];
m4_54 -> m4_79  [color=darkorchid, key=3, label="Parameter variable int dstOffset", style=bold];
m4_54 -> m4_78  [color=darkorchid, key=3, label="Parameter variable char[] dst", style=bold];
m4_54 -> m4_83  [color=darkorchid, key=3, label="Parameter variable char[] dst", style=bold];
m4_54 -> m4_61  [color=darkorchid, key=3, label="Parameter variable int count", style=bold];
m4_54 -> m4_81  [color=darkorchid, key=3, label="Parameter variable int count", style=bold];
m4_52 -> m4_57  [key=2, style=dotted];
m4_52 -> m4_53  [key=0, style=solid];
m4_52 -> m4_58  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_56 -> m4_45  [color=blue, key=0, style=bold];
m4_56 -> m4_57  [key=0, style=solid];
m4_56 -> m4_58  [key=2, style=dotted];
m4_377 -> m4_378  [key=0, style=solid];
m4_380 -> m4_8  [key=2, style=dotted];
m4_380 -> m4_381  [key=0, style=solid];
m4_380 -> m4_382  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_383  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_384  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_385  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_386  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_387  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_388  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_389  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_390  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_391  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_392  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_393  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_394  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_395  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_396  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_397  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_398  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_399  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_400  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_401  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_402  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_403  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_404  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_405  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_406  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_407  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_408  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_409  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_410  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_411  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_412  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_413  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_414  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_415  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_416  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_417  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_418  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_419  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_420  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_421  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_422  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_423  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_424  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_425  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_426  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_427  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_428  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_429  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_430  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_431  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_432  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_433  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_434  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_435  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_436  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_437  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_438  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_439  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_440  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_441  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_442  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_443  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_444  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_445  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_446  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_447  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_448  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_449  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_450  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_451  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_452  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_453  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_454  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_455  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_456  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_457  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_458  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_459  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_460  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_461  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_462  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_463  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_464  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_465  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_466  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_467  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_468  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_469  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_470  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_471  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_380 -> m4_472  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_379 -> m4_9  [key=2, style=dotted];
m4_379 -> m4_380  [key=0, style=solid];
m4_379 -> m4_401  [key=0, style=solid];
m4_381 -> m4_11  [key=2, style=dotted];
m4_381 -> m4_382  [key=0, style=solid];
m4_383 -> m4_11  [key=2, style=dotted];
m4_383 -> m4_384  [key=0, style=solid];
m4_383 -> m4_401  [key=0, style=solid];
m4_384 -> m4_11  [key=2, style=dotted];
m4_384 -> m4_385  [key=0, style=solid];
m4_385 -> m4_11  [key=2, style=dotted];
m4_385 -> m4_386  [key=0, style=solid];
m4_385 -> m4_187  [key=2, style=dotted];
m4_387 -> m4_11  [key=2, style=dotted];
m4_387 -> m4_388  [key=0, style=solid];
m4_388 -> m4_11  [key=2, style=dotted];
m4_388 -> m4_389  [key=0, style=solid];
m4_389 -> m4_11  [key=2, style=dotted];
m4_389 -> m4_390  [key=0, style=solid];
m4_389 -> m4_402  [key=2, style=dotted];
m4_391 -> m4_11  [key=2, style=dotted];
m4_391 -> m4_392  [key=0, style=solid];
m4_392 -> m4_11  [key=2, style=dotted];
m4_392 -> m4_393  [key=0, style=solid];
m4_393 -> m4_11  [key=2, style=dotted];
m4_393 -> m4_394  [key=0, style=solid];
m4_393 -> m4_363  [key=0, style=solid];
m4_394 -> m4_11  [key=2, style=dotted];
m4_394 -> m4_395  [key=0, style=solid];
m4_395 -> m4_11  [key=2, style=dotted];
m4_395 -> m4_396  [key=0, style=solid];
m4_395 -> m4_363  [key=0, style=solid];
m4_395 -> m4_293  [key=2, style=dotted];
m4_397 -> m4_11  [key=2, style=dotted];
m4_397 -> m4_398  [key=0, style=solid];
m4_397 -> m4_363  [key=0, style=solid];
m4_397 -> m4_294  [key=2, style=dotted];
m4_398 -> m4_11  [key=2, style=dotted];
m4_398 -> m4_399  [key=0, style=solid];
m4_398 -> m4_400  [key=0, style=solid];
m4_398 -> m4_403  [key=2, style=dotted];
m4_399 -> m4_11  [key=2, style=dotted];
m4_399 -> m4_400  [key=0, style=solid];
m4_399 -> m4_363  [key=0, style=solid];
m4_401 -> m4_11  [key=2, style=dotted];
m4_401 -> m4_402  [key=0, style=solid];
m4_401 -> m4_185  [color=blue, key=0, style=bold];
m4_402 -> m4_11  [key=2, style=dotted];
m4_402 -> m4_403  [key=0, style=solid];
m4_405 -> m4_11  [key=2, style=dotted];
m4_405 -> m4_406  [key=0, style=solid];
m4_405 -> m4_426  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m4_406 -> m4_11  [key=2, style=dotted];
m4_406 -> m4_407  [key=0, style=solid];
m4_406 -> m4_412  [key=0, style=solid];
m4_406 -> m4_416  [key=0, style=solid];
m4_406 -> m4_419  [key=0, style=solid];
m4_406 -> m4_421  [key=0, style=solid];
m4_406 -> m4_423  [key=0, style=solid];
m4_406 -> m4_426  [key=0, style=solid];
m4_407 -> m4_11  [key=2, style=dotted];
m4_407 -> m4_408  [key=0, style=solid];
m4_408 -> m4_11  [key=2, style=dotted];
m4_408 -> m4_409  [key=0, style=solid];
m4_408 -> m4_411  [key=0, style=solid];
m4_410 -> m4_11  [key=2, style=dotted];
m4_410 -> m4_411  [key=0, style=solid];
m4_410 -> m4_429  [key=0, style=solid];
m4_411 -> m4_11  [key=2, style=dotted];
m4_411 -> m4_412  [key=0, style=solid];
m4_411 -> m4_404  [key=0, style=solid];
m4_412 -> m4_11  [key=2, style=dotted];
m4_412 -> m4_413  [key=0, style=solid];
m4_413 -> m4_11  [key=2, style=dotted];
m4_413 -> m4_414  [key=0, style=solid];
m4_413 -> m4_128  [key=2, style=dotted];
m4_415 -> m4_11  [key=2, style=dotted];
m4_415 -> m4_416  [key=0, style=solid];
m4_415 -> m4_429  [key=0, style=solid];
m4_416 -> m4_11  [key=2, style=dotted];
m4_416 -> m4_417  [key=0, style=solid];
m4_417 -> m4_11  [key=2, style=dotted];
m4_417 -> m4_418  [key=0, style=solid];
m4_417 -> m4_187  [key=2, style=dotted];
m4_418 -> m4_11  [key=2, style=dotted];
m4_418 -> m4_419  [key=0, style=solid];
m4_418 -> m4_429  [key=0, style=solid];
m4_420 -> m4_11  [key=2, style=dotted];
m4_420 -> m4_421  [key=0, style=solid];
m4_420 -> m4_404  [key=0, style=solid];
m4_420 -> m4_293  [key=2, style=dotted];
m4_421 -> m4_11  [key=2, style=dotted];
m4_421 -> m4_422  [key=0, style=solid];
m4_422 -> m4_11  [key=2, style=dotted];
m4_422 -> m4_423  [key=0, style=solid];
m4_422 -> m4_404  [key=0, style=solid];
m4_422 -> m4_294  [key=2, style=dotted];
m4_423 -> m4_11  [key=2, style=dotted];
m4_423 -> m4_424  [key=0, style=solid];
m4_425 -> m4_11  [key=2, style=dotted];
m4_425 -> m4_426  [key=0, style=solid];
m4_425 -> m4_404  [key=0, style=solid];
m4_426 -> m4_11  [key=2, style=dotted];
m4_426 -> m4_427  [key=0, style=solid];
m4_426 -> m4_428  [key=0, style=solid];
m4_426 -> m4_403  [key=2, style=dotted];
m4_427 -> m4_11  [key=2, style=dotted];
m4_427 -> m4_428  [key=0, style=solid];
m4_427 -> m4_404  [key=0, style=solid];
m4_428 -> m4_11  [key=2, style=dotted];
m4_428 -> m4_429  [key=0, style=solid];
m4_428 -> m4_430  [key=2, style=dotted];
m4_382 -> m4_383  [key=0, style=solid];
m4_382 -> m4_265  [key=2, style=dotted];
m4_382 -> m4_128  [key=2, style=dotted];
m4_386 -> m4_387  [key=0, style=solid];
m4_386 -> m4_265  [key=2, style=dotted];
m4_386 -> m4_401  [key=0, style=solid];
m4_390 -> m4_391  [key=0, style=solid];
m4_390 -> m4_265  [key=2, style=dotted];
m4_390 -> m4_401  [key=0, style=solid];
m4_396 -> m4_397  [key=0, style=solid];
m4_396 -> m4_265  [key=2, style=dotted];
m4_400 -> m4_401  [key=0, style=solid];
m4_400 -> m4_265  [key=2, style=dotted];
m4_400 -> m4_188  [key=2, style=dotted];
m4_400 -> m4_189  [key=2, style=dotted];
m4_404 -> m4_405  [key=0, style=solid];
m4_404 -> m4_265  [key=2, style=dotted];
m4_404 -> m4_429  [key=0, style=solid];
m4_409 -> m4_410  [key=0, style=solid];
m4_409 -> m4_265  [key=2, style=dotted];
m4_409 -> m4_404  [key=0, style=solid];
m4_409 -> m4_69  [key=2, style=dotted];
m4_414 -> m4_415  [key=0, style=solid];
m4_414 -> m4_265  [key=2, style=dotted];
m4_419 -> m4_420  [key=0, style=solid];
m4_419 -> m4_265  [key=2, style=dotted];
m4_424 -> m4_425  [key=0, style=solid];
m4_424 -> m4_265  [key=2, style=dotted];
m4_429 -> m4_430  [key=0, style=solid];
m4_429 -> m4_265  [key=2, style=dotted];
m4_429 -> m4_184  [color=blue, key=0, style=bold];
m4_457 -> m4_458  [key=0, style=solid];
m4_457 -> m4_265  [key=2, style=dotted];
m4_378 -> m4_379  [key=0, style=solid];
m4_378 -> m4_128  [key=2, style=dotted];
m4_1627 -> m4_1628  [key=0, style=solid];
m4_1630 -> m4_10  [key=2, style=dotted];
m4_1630 -> m4_1631  [key=0, style=solid];
m4_1630 -> m4_19  [key=2, style=dotted];
m4_1632 -> m4_10  [key=2, style=dotted];
m4_1632 -> m4_1633  [key=0, style=solid];
m4_1632 -> m4_19  [key=2, style=dotted];
m4_1629 -> m4_8  [key=2, style=dotted];
m4_1629 -> m4_9  [key=2, style=dotted];
m4_1629 -> m4_1630  [key=0, style=solid];
m4_1629 -> m4_1632  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1629 -> m4_1631  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1629 -> m4_1633  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1631 -> m4_11  [key=2, style=dotted];
m4_1631 -> m4_1632  [key=0, style=solid];
m4_1633 -> m4_11  [key=2, style=dotted];
m4_1633 -> m4_1634  [key=0, style=solid];
m4_1628 -> m4_1629  [key=0, style=solid];
m4_1634 -> m4_1627  [color=blue, key=0, style=bold];
m4_1263 -> m4_1264  [key=0, style=solid];
m4_1266 -> m4_10  [key=2, style=dotted];
m4_1266 -> m4_1267  [key=0, style=solid];
m4_1266 -> m4_19  [key=2, style=dotted];
m4_1268 -> m4_10  [key=2, style=dotted];
m4_1268 -> m4_1269  [key=0, style=solid];
m4_1268 -> m4_19  [key=2, style=dotted];
m4_1274 -> m4_10  [key=2, style=dotted];
m4_1274 -> m4_1275  [key=0, style=solid];
m4_1274 -> m4_19  [key=2, style=dotted];
m4_1265 -> m4_8  [key=2, style=dotted];
m4_1265 -> m4_9  [key=2, style=dotted];
m4_1265 -> m4_1266  [key=0, style=solid];
m4_1265 -> m4_1268  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1265 -> m4_1274  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1265 -> m4_1267  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1265 -> m4_1269  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1265 -> m4_1270  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1265 -> m4_1271  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1265 -> m4_1272  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1265 -> m4_1273  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1265 -> m4_1275  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1267 -> m4_11  [key=2, style=dotted];
m4_1267 -> m4_1268  [key=0, style=solid];
m4_1269 -> m4_11  [key=2, style=dotted];
m4_1269 -> m4_1270  [key=0, style=solid];
m4_1271 -> m4_11  [key=2, style=dotted];
m4_1271 -> m4_1272  [key=0, style=solid];
m4_1272 -> m4_11  [key=2, style=dotted];
m4_1272 -> m4_1273  [key=0, style=solid];
m4_1273 -> m4_11  [key=2, style=dotted];
m4_1273 -> m4_1274  [key=0, style=solid];
m4_1273 -> m4_1277  [key=2, style=dotted];
m4_1273 -> m4_1278  [key=2, style=dotted];
m4_1273 -> m4_1279  [key=2, style=dotted];
m4_1275 -> m4_11  [key=2, style=dotted];
m4_1275 -> m4_1276  [key=0, style=solid];
m4_1264 -> m4_1265  [key=0, style=solid];
m4_1270 -> m4_1271  [key=0, style=solid];
m4_1270 -> m4_1192  [key=2, style=dotted];
m4_1276 -> m4_1263  [color=blue, key=0, style=bold];
m4_789 -> m4_11  [key=2, style=dotted];
m4_789 -> m4_790  [key=0, style=solid];
m4_789 -> m4_793  [key=0, style=solid];
m4_789 -> m4_627  [key=2, style=dotted];
m4_790 -> m4_11  [key=2, style=dotted];
m4_790 -> m4_791  [key=0, style=solid];
m4_790 -> m4_792  [key=0, style=solid];
m4_791 -> m4_11  [key=2, style=dotted];
m4_791 -> m4_792  [key=0, style=solid];
m4_791 -> m4_794  [key=0, style=solid];
m4_791 -> m4_795  [key=2, style=dotted];
m4_792 -> m4_11  [key=2, style=dotted];
m4_792 -> m4_793  [key=0, style=solid];
m4_792 -> m4_794  [key=0, style=solid];
m4_792 -> m4_51  [key=2, style=dotted];
m4_794 -> m4_11  [key=2, style=dotted];
m4_794 -> m4_795  [key=0, style=solid];
m4_794 -> m4_559  [color=blue, key=0, style=bold];
m4_793 -> m4_794  [key=0, style=solid];
m4_793 -> m4_265  [key=2, style=dotted];
m4_793 -> m4_189  [key=2, style=dotted];
m4_796 -> m4_777  [color=blue, key=0, style=bold];
m4_796 -> m4_797  [key=0, style=solid];
m4_796 -> m4_800  [key=0, style=solid];
m4_796 -> m4_627  [key=2, style=dotted];
m4_1815 -> m4_1816  [key=0, style=solid];
m4_1817 -> m4_8  [key=2, style=dotted];
m4_1817 -> m4_9  [key=2, style=dotted];
m4_1817 -> m4_1818  [key=0, style=solid];
m4_1817 -> m4_1819  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1817 -> m4_1820  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1819 -> m4_11  [key=2, style=dotted];
m4_1819 -> m4_1820  [key=0, style=solid];
m4_1820 -> m4_11  [key=2, style=dotted];
m4_1820 -> m4_1821  [key=0, style=solid];
m4_1818 -> m4_130  [key=2, style=dotted];
m4_1818 -> m4_1819  [key=0, style=solid];
m4_1816 -> m4_1817  [key=0, style=solid];
m4_1821 -> m4_1815  [color=blue, key=0, style=bold];
m4_578 -> m4_579  [key=0, style=solid];
m4_578 -> m4_573  [key=0, style=solid];
m4_578 -> m4_69  [key=2, style=dotted];
m4_581 -> m4_10  [key=2, style=dotted];
m4_581 -> m4_582  [key=0, style=solid];
m4_580 -> m4_8  [key=2, style=dotted];
m4_580 -> m4_9  [key=2, style=dotted];
m4_580 -> m4_581  [key=0, style=solid];
m4_580 -> m4_573  [key=2, style=dotted];
m4_580 -> m4_582  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_580 -> m4_583  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_580 -> m4_587  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_583 -> m4_11  [key=2, style=dotted];
m4_583 -> m4_584  [key=0, style=solid];
m4_582 -> m4_11  [key=2, style=dotted];
m4_582 -> m4_583  [key=0, style=solid];
m4_582 -> m4_573  [key=0, style=solid];
m4_582 -> m4_293  [key=2, style=dotted];
m4_587 -> m4_57  [key=2, style=dotted];
m4_587 -> m4_588  [key=0, style=solid];
m4_587 -> m4_590  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_587 -> m4_573  [key=0, style=solid];
m4_579 -> m4_580  [key=0, style=solid];
m4_579 -> m4_583  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_579 -> m4_586  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_579 -> m4_573  [key=0, style=solid];
m4_586 -> m4_591  [color=darkseagreen4, key=1, label=total, style=dashed];
m4_586 -> m4_587  [key=0, style=solid];
m4_586 -> m4_589  [color=darkseagreen4, key=1, label=ateWhitespace, style=dashed];
m4_584 -> m4_586  [color=darkseagreen4, key=1, label=j, style=dashed];
m4_584 -> m4_585  [key=0, style=solid];
m4_584 -> m4_588  [color=darkseagreen4, key=1, label=j, style=dashed];
m4_584 -> m4_573  [key=0, style=solid];
m4_584 -> m4_294  [key=2, style=dotted];
m4_588 -> m4_588  [color=darkseagreen4, key=1, label=j, style=dashed];
m4_588 -> m4_585  [key=0, style=solid];
m4_588 -> m4_573  [key=0, style=solid];
m4_585 -> m4_586  [key=0, style=solid];
m4_585 -> m4_589  [key=0, style=solid];
m4_585 -> m4_588  [key=0, style=solid];
m4_585 -> m4_403  [key=2, style=dotted];
m4_589 -> m4_578  [color=blue, key=0, style=bold];
m4_589 -> m4_590  [key=0, style=solid];
m4_187 -> m4_705  [key=0, style=solid];
m4_187 -> m4_188  [key=0, style=solid];
m4_731 -> m4_732  [key=0, style=solid];
m4_731 -> m4_357  [key=2, style=dotted];
m4_732 -> m4_187  [color=blue, key=0, style=bold];
m4_732 -> m4_8  [key=2, style=dotted];
m4_732 -> m4_9  [key=2, style=dotted];
m4_732 -> m4_733  [key=0, style=solid];
m4_732 -> m4_734  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_732 -> m4_735  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_732 -> m4_736  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_732 -> m4_737  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_732 -> m4_738  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_732 -> m4_739  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_732 -> m4_740  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_732 -> m4_741  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_732 -> m4_742  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2103 -> m4_2104  [key=0, style=solid];
m4_2103 -> m4_2106  [color=darkseagreen4, key=1, label="char[]", style=dashed];
m4_2104 -> m4_2105  [key=0, style=solid];
m4_2104 -> m4_2106  [key=0, style=solid];
m4_2106 -> m4_2107  [key=0, style=solid];
m4_2106 -> m4_2109  [key=2, style=dotted];
m4_2105 -> m4_2107  [key=0, style=solid];
m4_2105 -> m4_2108  [key=2, style=dotted];
m4_2107 -> m4_2103  [color=blue, key=0, style=bold];
m4_15 -> m4_16  [key=0, style=solid];
m4_15 -> m4_17  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_15 -> m4_10  [key=2, style=dotted];
m4_15 -> m4_19  [key=2, style=dotted];
m4_16 -> m4_17  [key=0, style=solid];
m4_16 -> m4_11  [key=2, style=dotted];
m4_17 -> m4_18  [key=0, style=solid];
m4_17 -> m4_11  [key=2, style=dotted];
m4_18 -> m4_15  [color=blue, key=0, style=bold];
m4_18 -> m4_12  [color=blue, key=0, style=bold];
m4_188 -> m4_189  [key=0, style=solid];
m4_1604 -> m4_1605  [key=0, style=solid];
m4_1607 -> m4_10  [key=2, style=dotted];
m4_1607 -> m4_1608  [key=0, style=solid];
m4_1607 -> m4_19  [key=2, style=dotted];
m4_1609 -> m4_10  [key=2, style=dotted];
m4_1609 -> m4_1610  [key=0, style=solid];
m4_1609 -> m4_19  [key=2, style=dotted];
m4_1606 -> m4_8  [key=2, style=dotted];
m4_1606 -> m4_9  [key=2, style=dotted];
m4_1606 -> m4_1607  [key=0, style=solid];
m4_1606 -> m4_1609  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1606 -> m4_1608  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1606 -> m4_1610  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1608 -> m4_11  [key=2, style=dotted];
m4_1608 -> m4_1609  [key=0, style=solid];
m4_1610 -> m4_11  [key=2, style=dotted];
m4_1610 -> m4_1611  [key=0, style=solid];
m4_1605 -> m4_1606  [key=0, style=solid];
m4_1611 -> m4_1604  [color=blue, key=0, style=bold];
m4_1588 -> m4_1589  [key=0, style=solid];
m4_1590 -> m4_8  [key=2, style=dotted];
m4_1590 -> m4_9  [key=2, style=dotted];
m4_1590 -> m4_1594  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1590 -> m4_1591  [key=0, style=solid];
m4_1591 -> m4_57  [key=2, style=dotted];
m4_1591 -> m4_1592  [key=0, style=solid];
m4_1591 -> m4_1593  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1589 -> m4_1590  [key=0, style=solid];
m4_1592 -> m4_1588  [color=blue, key=0, style=bold];
m4_284 -> m4_2115  [key=0, style=solid];
m4_284 -> m4_285  [key=0, style=solid];
m4_284 -> m4_295  [key=2, style=dotted];
m4_284 -> m4_297  [key=2, style=dotted];
m4_2115 -> m4_284  [color=blue, key=0, style=bold];
m4_558 -> m4_796  [key=0, style=solid];
m4_558 -> m4_556  [key=0, style=solid];
m4_558 -> m4_558  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_797 -> m4_798  [color=green, key=0, style=solid];
m4_797 -> m4_799  [key=0, style=solid];
m4_800 -> m4_801  [key=0, style=solid];
m4_800 -> m4_189  [key=2, style=dotted];
m4_800 -> m4_797  [color=blue, key=0, style=bold];
m4_798 -> m4_801  [key=0, style=solid];
m4_798 -> m4_795  [key=2, style=dotted];
m4_798 -> m4_799  [color=green, key=0, style=solid];
m4_799 -> m4_801  [key=0, style=solid];
m4_799 -> m4_51  [key=2, style=dotted];
m4_799 -> m4_800  [key=0, style=solid];
m4_293 -> m4_566  [key=0, style=solid];
m4_293 -> m4_567  [color=darkseagreen4, key=1, label=bool, style=dashed];
m4_293 -> m4_774  [color=darkorchid, key=3, label="Parameter variable bool append", style=bold];
m4_293 -> m4_786  [color=darkorchid, key=3, label="Parameter variable bool append", style=bold];
m4_293 -> m4_291  [color=blue, key=0, style=bold];
m4_552 -> m4_553  [key=0, style=solid];
m4_552 -> m4_183  [color=blue, key=0, style=bold];
m4_559 -> m4_10  [key=2, style=dotted];
m4_559 -> m4_560  [key=0, style=solid];
m4_559 -> m4_789  [key=0, style=solid];
m4_553 -> m4_554  [key=0, style=solid];
m4_553 -> m4_773  [key=0, style=solid];
m4_1396 -> m4_1397  [key=0, style=solid];
m4_1399 -> m4_10  [key=2, style=dotted];
m4_1399 -> m4_1400  [key=0, style=solid];
m4_1399 -> m4_19  [key=2, style=dotted];
m4_1401 -> m4_10  [key=2, style=dotted];
m4_1401 -> m4_1402  [key=0, style=solid];
m4_1401 -> m4_19  [key=2, style=dotted];
m4_1398 -> m4_8  [key=2, style=dotted];
m4_1398 -> m4_9  [key=2, style=dotted];
m4_1398 -> m4_1399  [key=0, style=solid];
m4_1398 -> m4_1401  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1398 -> m4_1400  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1398 -> m4_1402  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1398 -> m4_1403  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1398 -> m4_1406  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1400 -> m4_11  [key=2, style=dotted];
m4_1400 -> m4_1401  [key=0, style=solid];
m4_1402 -> m4_11  [key=2, style=dotted];
m4_1402 -> m4_1403  [key=0, style=solid];
m4_1403 -> m4_57  [key=2, style=dotted];
m4_1403 -> m4_1404  [key=0, style=solid];
m4_1403 -> m4_1405  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1397 -> m4_1398  [key=0, style=solid];
m4_1404 -> m4_1396  [color=blue, key=0, style=bold];
m4_1530 -> m4_1531  [key=0, style=solid];
m4_1533 -> m4_10  [key=2, style=dotted];
m4_1533 -> m4_1534  [key=0, style=solid];
m4_1533 -> m4_19  [key=2, style=dotted];
m4_1535 -> m4_10  [key=2, style=dotted];
m4_1535 -> m4_1536  [key=0, style=solid];
m4_1535 -> m4_19  [key=2, style=dotted];
m4_1537 -> m4_10  [key=2, style=dotted];
m4_1537 -> m4_1538  [key=0, style=solid];
m4_1537 -> m4_19  [key=2, style=dotted];
m4_1539 -> m4_10  [key=2, style=dotted];
m4_1539 -> m4_1540  [key=0, style=solid];
m4_1539 -> m4_19  [key=2, style=dotted];
m4_1541 -> m4_10  [key=2, style=dotted];
m4_1541 -> m4_1542  [key=0, style=solid];
m4_1541 -> m4_19  [key=2, style=dotted];
m4_1543 -> m4_10  [key=2, style=dotted];
m4_1543 -> m4_1544  [key=0, style=solid];
m4_1543 -> m4_19  [key=2, style=dotted];
m4_1545 -> m4_10  [key=2, style=dotted];
m4_1545 -> m4_1546  [key=0, style=solid];
m4_1545 -> m4_19  [key=2, style=dotted];
m4_1547 -> m4_10  [key=2, style=dotted];
m4_1547 -> m4_1548  [key=0, style=solid];
m4_1547 -> m4_19  [key=2, style=dotted];
m4_1549 -> m4_10  [key=2, style=dotted];
m4_1549 -> m4_1550  [key=0, style=solid];
m4_1549 -> m4_19  [key=2, style=dotted];
m4_1551 -> m4_10  [key=2, style=dotted];
m4_1551 -> m4_1552  [key=0, style=solid];
m4_1551 -> m4_19  [key=2, style=dotted];
m4_1553 -> m4_10  [key=2, style=dotted];
m4_1553 -> m4_1554  [key=0, style=solid];
m4_1553 -> m4_19  [key=2, style=dotted];
m4_1555 -> m4_10  [key=2, style=dotted];
m4_1555 -> m4_1556  [key=0, style=solid];
m4_1555 -> m4_19  [key=2, style=dotted];
m4_1557 -> m4_10  [key=2, style=dotted];
m4_1557 -> m4_1558  [key=0, style=solid];
m4_1557 -> m4_19  [key=2, style=dotted];
m4_1559 -> m4_10  [key=2, style=dotted];
m4_1559 -> m4_1560  [key=0, style=solid];
m4_1559 -> m4_19  [key=2, style=dotted];
m4_1561 -> m4_10  [key=2, style=dotted];
m4_1561 -> m4_1562  [key=0, style=solid];
m4_1561 -> m4_19  [key=2, style=dotted];
m4_1563 -> m4_10  [key=2, style=dotted];
m4_1563 -> m4_1564  [key=0, style=solid];
m4_1563 -> m4_19  [key=2, style=dotted];
m4_1565 -> m4_10  [key=2, style=dotted];
m4_1565 -> m4_1566  [key=0, style=solid];
m4_1565 -> m4_19  [key=2, style=dotted];
m4_1567 -> m4_10  [key=2, style=dotted];
m4_1567 -> m4_1568  [key=0, style=solid];
m4_1567 -> m4_19  [key=2, style=dotted];
m4_1569 -> m4_10  [key=2, style=dotted];
m4_1569 -> m4_1570  [key=0, style=solid];
m4_1569 -> m4_19  [key=2, style=dotted];
m4_1571 -> m4_10  [key=2, style=dotted];
m4_1571 -> m4_1572  [key=0, style=solid];
m4_1571 -> m4_43  [key=2, style=dotted];
m4_1531 -> m4_8  [key=2, style=dotted];
m4_1531 -> m4_9  [key=2, style=dotted];
m4_1531 -> m4_1533  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1531 -> m4_1535  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1531 -> m4_1537  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1531 -> m4_1539  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1531 -> m4_1541  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1531 -> m4_1543  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1531 -> m4_1545  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1531 -> m4_1547  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1531 -> m4_1549  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1531 -> m4_1551  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1531 -> m4_1553  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1531 -> m4_1555  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1531 -> m4_1557  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1531 -> m4_1559  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1531 -> m4_1561  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1531 -> m4_1563  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1531 -> m4_1565  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1531 -> m4_1567  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1531 -> m4_1569  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1531 -> m4_1571  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1531 -> m4_1532  [key=0, style=solid];
m4_1531 -> m4_1534  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1531 -> m4_1536  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1531 -> m4_1538  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1531 -> m4_1540  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1531 -> m4_1542  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1531 -> m4_1544  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1531 -> m4_1546  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1531 -> m4_1548  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1531 -> m4_1550  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1531 -> m4_1552  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1531 -> m4_1554  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1531 -> m4_1556  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1531 -> m4_1558  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1531 -> m4_1560  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1531 -> m4_1562  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1531 -> m4_1564  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1531 -> m4_1566  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1531 -> m4_1568  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1531 -> m4_1570  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1534 -> m4_11  [key=2, style=dotted];
m4_1534 -> m4_1535  [key=0, style=solid];
m4_1536 -> m4_11  [key=2, style=dotted];
m4_1536 -> m4_1537  [key=0, style=solid];
m4_1538 -> m4_11  [key=2, style=dotted];
m4_1538 -> m4_1539  [key=0, style=solid];
m4_1540 -> m4_11  [key=2, style=dotted];
m4_1540 -> m4_1541  [key=0, style=solid];
m4_1542 -> m4_11  [key=2, style=dotted];
m4_1542 -> m4_1543  [key=0, style=solid];
m4_1544 -> m4_11  [key=2, style=dotted];
m4_1544 -> m4_1545  [key=0, style=solid];
m4_1546 -> m4_11  [key=2, style=dotted];
m4_1546 -> m4_1547  [key=0, style=solid];
m4_1548 -> m4_11  [key=2, style=dotted];
m4_1548 -> m4_1549  [key=0, style=solid];
m4_1550 -> m4_11  [key=2, style=dotted];
m4_1550 -> m4_1551  [key=0, style=solid];
m4_1552 -> m4_11  [key=2, style=dotted];
m4_1552 -> m4_1553  [key=0, style=solid];
m4_1554 -> m4_11  [key=2, style=dotted];
m4_1554 -> m4_1555  [key=0, style=solid];
m4_1556 -> m4_11  [key=2, style=dotted];
m4_1556 -> m4_1557  [key=0, style=solid];
m4_1558 -> m4_11  [key=2, style=dotted];
m4_1558 -> m4_1559  [key=0, style=solid];
m4_1560 -> m4_11  [key=2, style=dotted];
m4_1560 -> m4_1561  [key=0, style=solid];
m4_1562 -> m4_11  [key=2, style=dotted];
m4_1562 -> m4_1563  [key=0, style=solid];
m4_1564 -> m4_11  [key=2, style=dotted];
m4_1564 -> m4_1565  [key=0, style=solid];
m4_1566 -> m4_11  [key=2, style=dotted];
m4_1566 -> m4_1567  [key=0, style=solid];
m4_1568 -> m4_11  [key=2, style=dotted];
m4_1568 -> m4_1569  [key=0, style=solid];
m4_1570 -> m4_11  [key=2, style=dotted];
m4_1570 -> m4_1571  [key=0, style=solid];
m4_1532 -> m4_1533  [key=0, style=solid];
m4_1572 -> m4_1530  [color=blue, key=0, style=bold];
m4_265 -> m4_194  [key=0, style=solid];
m4_265 -> m4_278  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m4_265 -> m4_282  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m4_265 -> m4_283  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m4_518 -> m4_519  [key=0, style=solid];
m4_518 -> m4_561  [key=2, style=dotted];
m4_1792 -> m4_1793  [key=0, style=solid];
m4_1795 -> m4_10  [key=2, style=dotted];
m4_1795 -> m4_1796  [key=0, style=solid];
m4_1795 -> m4_19  [key=2, style=dotted];
m4_1798 -> m4_10  [key=2, style=dotted];
m4_1798 -> m4_1799  [key=0, style=solid];
m4_1798 -> m4_43  [key=2, style=dotted];
m4_1794 -> m4_8  [key=2, style=dotted];
m4_1794 -> m4_1795  [key=0, style=solid];
m4_1794 -> m4_1798  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1794 -> m4_244  [key=2, style=dotted];
m4_1794 -> m4_284  [key=2, style=dotted];
m4_1794 -> m4_285  [key=2, style=dotted];
m4_1794 -> m4_1796  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1794 -> m4_1797  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1796 -> m4_11  [key=2, style=dotted];
m4_1796 -> m4_1797  [key=0, style=solid];
m4_1797 -> m4_11  [key=2, style=dotted];
m4_1797 -> m4_1798  [key=0, style=solid];
m4_1793 -> m4_1794  [key=0, style=solid];
m4_1799 -> m4_1792  [color=blue, key=0, style=bold];
m4_573 -> m4_574  [key=0, style=solid];
m4_573 -> m4_589  [key=0, style=solid];
m4_292 -> m4_298  [key=0, style=solid];
m4_292 -> m4_299  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.StringBuffer", style=dashed];
m4_292 -> m4_300  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.StringBuffer", style=dashed];
m4_292 -> m4_193  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Utilities.StringBuffer buffer", style=bold];
m4_292 -> m4_244  [color=darkorchid, key=3, label="Parameter variable char writeChar", style=bold];
m4_292 -> m4_132  [color=darkorchid, key=3, label="Parameter variable char writeChar", style=bold];
m4_292 -> m4_192  [color=darkorchid, key=3, label="Parameter variable int lastWritePosition", style=bold];
m4_292 -> m4_207  [color=darkorchid, key=3, label="Parameter variable int writeToPosition", style=bold];
m4_292 -> m4_10  [key=2, style=dotted];
m4_292 -> m4_292  [key=0, style=solid];
m4_292 -> m4_293  [key=0, style=solid];
m4_1808 -> m4_1809  [key=0, style=solid];
m4_1810 -> m4_8  [key=2, style=dotted];
m4_1810 -> m4_9  [key=2, style=dotted];
m4_1810 -> m4_1811  [key=0, style=solid];
m4_1810 -> m4_1812  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1810 -> m4_1813  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1812 -> m4_11  [key=2, style=dotted];
m4_1812 -> m4_1813  [key=0, style=solid];
m4_1813 -> m4_11  [key=2, style=dotted];
m4_1813 -> m4_1814  [key=0, style=solid];
m4_1811 -> m4_130  [key=2, style=dotted];
m4_1811 -> m4_1812  [key=0, style=solid];
m4_1809 -> m4_1810  [key=0, style=solid];
m4_1814 -> m4_1808  [color=blue, key=0, style=bold];
m4_773 -> m4_774  [key=0, style=solid];
m4_773 -> m4_775  [key=0, style=solid];
m4_773 -> m4_627  [key=2, style=dotted];
m4_773 -> m4_19  [key=2, style=dotted];
m4_773 -> m4_265  [key=2, style=dotted];
m4_774 -> m4_776  [key=0, style=solid];
m4_774 -> m4_51  [key=2, style=dotted];
m4_774 -> m4_11  [key=2, style=dotted];
m4_774 -> m4_775  [key=0, style=solid];
m4_775 -> m4_776  [key=0, style=solid];
m4_775 -> m4_189  [key=2, style=dotted];
m4_775 -> m4_265  [key=2, style=dotted];
m4_775 -> m4_43  [key=2, style=dotted];
m4_776 -> m4_553  [color=blue, key=0, style=bold];
m4_776 -> m4_760  [color=blue, key=0, style=bold];
m4_1078 -> m4_1079  [key=0, style=solid];
m4_1081 -> m4_10  [key=2, style=dotted];
m4_1081 -> m4_1082  [key=0, style=solid];
m4_1083 -> m4_10  [key=2, style=dotted];
m4_1083 -> m4_1084  [key=0, style=solid];
m4_1085 -> m4_10  [key=2, style=dotted];
m4_1085 -> m4_1086  [key=0, style=solid];
m4_1080 -> m4_8  [key=2, style=dotted];
m4_1080 -> m4_9  [key=2, style=dotted];
m4_1080 -> m4_1081  [key=0, style=solid];
m4_1080 -> m4_1083  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1080 -> m4_1085  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1080 -> m4_1090  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1080 -> m4_1082  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1080 -> m4_1084  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1080 -> m4_1086  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1080 -> m4_1087  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1082 -> m4_11  [key=2, style=dotted];
m4_1082 -> m4_1083  [key=0, style=solid];
m4_1084 -> m4_11  [key=2, style=dotted];
m4_1084 -> m4_1085  [key=0, style=solid];
m4_1086 -> m4_11  [key=2, style=dotted];
m4_1086 -> m4_1087  [key=0, style=solid];
m4_1087 -> m4_57  [key=2, style=dotted];
m4_1087 -> m4_1088  [key=0, style=solid];
m4_1087 -> m4_1089  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1079 -> m4_1080  [key=0, style=solid];
m4_1088 -> m4_1078  [color=blue, key=0, style=bold];
m4_1612 -> m4_1613  [key=0, style=solid];
m4_1615 -> m4_10  [key=2, style=dotted];
m4_1615 -> m4_1616  [key=0, style=solid];
m4_1615 -> m4_19  [key=2, style=dotted];
m4_1617 -> m4_10  [key=2, style=dotted];
m4_1617 -> m4_1618  [key=0, style=solid];
m4_1617 -> m4_19  [key=2, style=dotted];
m4_1614 -> m4_8  [key=2, style=dotted];
m4_1614 -> m4_9  [key=2, style=dotted];
m4_1614 -> m4_1615  [key=0, style=solid];
m4_1614 -> m4_1617  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1614 -> m4_1616  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1614 -> m4_1618  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1616 -> m4_11  [key=2, style=dotted];
m4_1616 -> m4_1617  [key=0, style=solid];
m4_1618 -> m4_11  [key=2, style=dotted];
m4_1618 -> m4_1619  [key=0, style=solid];
m4_1613 -> m4_1614  [key=0, style=solid];
m4_1619 -> m4_1612  [color=blue, key=0, style=bold];
m4_1092 -> m4_1093  [key=0, style=solid];
m4_1094 -> m4_8  [key=2, style=dotted];
m4_1094 -> m4_1095  [key=0, style=solid];
m4_1093 -> m4_9  [key=2, style=dotted];
m4_1093 -> m4_1094  [key=0, style=solid];
m4_1098 -> m4_11  [key=2, style=dotted];
m4_1098 -> m4_1099  [key=0, style=solid];
m4_1095 -> m4_1096  [key=0, style=solid];
m4_1095 -> m4_100  [key=2, style=dotted];
m4_1095 -> m4_1097  [color=darkseagreen4, key=1, label=data, style=dashed];
m4_1097 -> m4_1098  [key=0, style=solid];
m4_1097 -> m4_1101  [key=2, style=dotted];
m4_1096 -> m4_1097  [key=0, style=solid];
m4_1096 -> m4_1100  [key=2, style=dotted];
m4_1099 -> m4_1092  [color=blue, key=0, style=bold];
m4_127 -> m4_153  [key=0, style=solid];
m4_127 -> m4_183  [color=darkorchid, key=3, label="method methodReturn bool ReadInternal", style=bold];
m4_127 -> m4_184  [color=darkorchid, key=3, label="method methodReturn bool ReadInternal", style=bold];
m4_127 -> m4_774  [color=darkorchid, key=3, label="method methodReturn bool ReadInternal", style=bold];
m4_127 -> m4_786  [color=darkorchid, key=3, label="method methodReturn bool ReadInternal", style=bold];
m4_127 -> m4_128  [key=0, style=solid];
m4_153 -> m4_154  [key=0, style=solid];
m4_153 -> m4_182  [key=0, style=solid];
m4_154 -> m4_155  [key=0, style=solid];
m4_154 -> m4_162  [key=0, style=solid];
m4_154 -> m4_163  [key=0, style=solid];
m4_154 -> m4_166  [key=0, style=solid];
m4_154 -> m4_169  [key=0, style=solid];
m4_154 -> m4_179  [key=0, style=solid];
m4_154 -> m4_180  [key=0, style=solid];
m4_154 -> m4_181  [key=0, style=solid];
m4_154 -> m4_10  [key=2, style=dotted];
m4_154 -> m4_19  [key=2, style=dotted];
m4_155 -> m4_156  [key=0, style=solid];
m4_155 -> m4_11  [key=2, style=dotted];
m4_162 -> m4_153  [key=0, style=solid];
m4_162 -> m4_11  [key=2, style=dotted];
m4_162 -> m4_163  [key=0, style=solid];
m4_163 -> m4_164  [key=0, style=solid];
m4_163 -> m4_11  [key=2, style=dotted];
m4_166 -> m4_167  [key=0, style=solid];
m4_166 -> m4_11  [key=2, style=dotted];
m4_169 -> m4_170  [key=0, style=solid];
m4_169 -> m4_11  [key=2, style=dotted];
m4_169 -> m4_175  [key=2, style=dotted];
m4_156 -> m4_157  [key=0, style=solid];
m4_156 -> m4_10  [key=2, style=dotted];
m4_156 -> m4_19  [key=2, style=dotted];
m4_157 -> m4_158  [key=0, style=solid];
m4_157 -> m4_11  [key=2, style=dotted];
m4_158 -> m4_159  [key=0, style=solid];
m4_158 -> m4_11  [key=2, style=dotted];
m4_159 -> m4_160  [key=0, style=solid];
m4_159 -> m4_11  [key=2, style=dotted];
m4_160 -> m4_161  [key=0, style=solid];
m4_160 -> m4_10  [key=2, style=dotted];
m4_160 -> m4_19  [key=2, style=dotted];
m4_161 -> m4_182  [key=0, style=solid];
m4_161 -> m4_183  [key=2, style=dotted];
m4_161 -> m4_11  [key=2, style=dotted];
m4_161 -> m4_162  [key=0, style=solid];
m4_164 -> m4_165  [key=0, style=solid];
m4_164 -> m4_10  [key=2, style=dotted];
m4_164 -> m4_19  [key=2, style=dotted];
m4_165 -> m4_182  [key=0, style=solid];
m4_165 -> m4_184  [key=2, style=dotted];
m4_165 -> m4_11  [key=2, style=dotted];
m4_165 -> m4_166  [key=0, style=solid];
m4_167 -> m4_168  [key=0, style=solid];
m4_167 -> m4_153  [key=0, style=solid];
m4_167 -> m4_185  [key=2, style=dotted];
m4_167 -> m4_11  [key=2, style=dotted];
m4_168 -> m4_182  [key=0, style=solid];
m4_168 -> m4_10  [key=2, style=dotted];
m4_168 -> m4_169  [key=0, style=solid];
m4_168 -> m4_19  [key=2, style=dotted];
m4_170 -> m4_171  [key=0, style=solid];
m4_170 -> m4_178  [key=0, style=solid];
m4_170 -> m4_102  [key=2, style=dotted];
m4_170 -> m4_11  [key=2, style=dotted];
m4_171 -> m4_172  [key=0, style=solid];
m4_171 -> m4_186  [key=2, style=dotted];
m4_171 -> m4_11  [key=2, style=dotted];
m4_172 -> m4_173  [key=0, style=solid];
m4_172 -> m4_174  [key=0, style=solid];
m4_172 -> m4_10  [key=2, style=dotted];
m4_172 -> m4_19  [key=2, style=dotted];
m4_173 -> m4_182  [key=0, style=solid];
m4_173 -> m4_11  [key=2, style=dotted];
m4_173 -> m4_174  [key=0, style=solid];
m4_174 -> m4_175  [key=0, style=solid];
m4_174 -> m4_177  [key=0, style=solid];
m4_174 -> m4_150  [color=blue, key=0, style=bold];
m4_487 -> m4_488  [key=0, style=solid];
m4_489 -> m4_8  [key=2, style=dotted];
m4_489 -> m4_9  [key=2, style=dotted];
m4_489 -> m4_490  [key=0, style=solid];
m4_489 -> m4_491  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_489 -> m4_552  [key=0, style=solid];
m4_491 -> m4_11  [key=2, style=dotted];
m4_491 -> m4_492  [key=0, style=solid];
m4_491 -> m4_554  [key=2, style=dotted];
m4_488 -> m4_489  [key=0, style=solid];
m4_488 -> m4_491  [color=darkseagreen4, key=1, label=s, style=dashed];
m4_488 -> m4_493  [key=2, style=dotted];
m4_488 -> m4_553  [key=2, style=dotted];
m4_490 -> m4_491  [key=0, style=solid];
m4_490 -> m4_265  [key=2, style=dotted];
m4_492 -> m4_487  [color=blue, key=0, style=bold];
m4_492 -> m4_552  [key=0, style=solid];
m4_1180 -> m4_1181  [key=0, style=solid];
m4_1181 -> m4_8  [key=2, style=dotted];
m4_1181 -> m4_9  [key=2, style=dotted];
m4_1181 -> m4_1182  [key=0, style=solid];
m4_1181 -> m4_1185  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1182 -> m4_57  [key=2, style=dotted];
m4_1182 -> m4_1183  [key=0, style=solid];
m4_1182 -> m4_1184  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1183 -> m4_1180  [color=blue, key=0, style=bold];
m4_519 -> m4_552  [key=0, style=solid];
m4_57 -> m4_54  [color=blue, key=0, style=bold];
m4_1620 -> m4_1621  [key=0, style=solid];
m4_1621 -> m4_8  [key=2, style=dotted];
m4_1621 -> m4_9  [key=2, style=dotted];
m4_1621 -> m4_1625  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1621 -> m4_1622  [key=0, style=solid];
m4_1622 -> m4_57  [key=2, style=dotted];
m4_1622 -> m4_1623  [key=0, style=solid];
m4_1622 -> m4_1624  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1623 -> m4_1620  [color=blue, key=0, style=bold];
m4_744 -> m4_745  [key=0, style=solid];
m4_744 -> m4_733  [key=2, style=dotted];
m4_747 -> m4_8  [key=2, style=dotted];
m4_747 -> m4_9  [key=2, style=dotted];
m4_747 -> m4_748  [key=0, style=solid];
m4_747 -> m4_667  [key=2, style=dotted];
m4_747 -> m4_749  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_747 -> m4_750  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_747 -> m4_751  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_747 -> m4_752  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_747 -> m4_754  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_747 -> m4_755  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_747 -> m4_756  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_747 -> m4_757  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_747 -> m4_102  [key=2, style=dotted];
m4_749 -> m4_11  [key=2, style=dotted];
m4_749 -> m4_750  [key=0, style=solid];
m4_749 -> m4_751  [key=2, style=dotted];
m4_746 -> m4_747  [key=0, style=solid];
m4_746 -> m4_243  [key=2, style=dotted];
m4_746 -> m4_753  [color=darkseagreen4, key=1, label=helloWorldData, style=dashed];
m4_746 -> m4_750  [key=0, style=solid];
m4_748 -> m4_749  [key=0, style=solid];
m4_748 -> m4_19  [key=2, style=dotted];
m4_748 -> m4_265  [key=2, style=dotted];
m4_748 -> m4_750  [key=0, style=solid];
m4_750 -> m4_751  [key=0, style=solid];
m4_750 -> m4_19  [key=2, style=dotted];
m4_750 -> m4_265  [key=2, style=dotted];
m4_750 -> m4_627  [color=blue, key=0, style=bold];
m4_745 -> m4_746  [key=0, style=solid];
m4_745 -> m4_747  [key=0, style=solid];
m4_190 -> m4_10  [key=2, style=dotted];
m4_190 -> m4_191  [key=0, style=solid];
m4_190 -> m4_19  [key=2, style=dotted];
m4_190 -> m4_195  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m4_192 -> m4_10  [key=2, style=dotted];
m4_192 -> m4_193  [key=0, style=solid];
m4_192 -> m4_19  [key=2, style=dotted];
m4_192 -> m4_254  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m4_192 -> m4_264  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m4_192 -> m4_190  [color=darkorchid, key=3, label="Local variable int lastWritePosition", style=bold];
m4_194 -> m4_10  [key=2, style=dotted];
m4_194 -> m4_195  [key=0, style=solid];
m4_194 -> m4_19  [key=2, style=dotted];
m4_194 -> m4_288  [key=0, style=solid];
m4_196 -> m4_10  [key=2, style=dotted];
m4_196 -> m4_197  [key=0, style=solid];
m4_196 -> m4_19  [key=2, style=dotted];
m4_198 -> m4_10  [key=2, style=dotted];
m4_198 -> m4_199  [key=0, style=solid];
m4_198 -> m4_19  [key=2, style=dotted];
m4_198 -> m4_198  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m4_198 -> m4_200  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m4_198 -> m4_203  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m4_198 -> m4_205  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m4_198 -> m4_207  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m4_198 -> m4_208  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m4_198 -> m4_212  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m4_200 -> m4_10  [key=2, style=dotted];
m4_200 -> m4_201  [key=0, style=solid];
m4_200 -> m4_19  [key=2, style=dotted];
m4_203 -> m4_10  [key=2, style=dotted];
m4_203 -> m4_204  [key=0, style=solid];
m4_203 -> m4_19  [key=2, style=dotted];
m4_189 -> m4_8  [key=2, style=dotted];
m4_189 -> m4_9  [key=2, style=dotted];
m4_189 -> m4_190  [key=0, style=solid];
m4_189 -> m4_192  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_189 -> m4_194  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_189 -> m4_196  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_189 -> m4_198  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_189 -> m4_200  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_189 -> m4_203  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_189 -> m4_191  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_189 -> m4_193  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_189 -> m4_195  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_189 -> m4_197  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_189 -> m4_199  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_189 -> m4_201  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_189 -> m4_202  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_189 -> m4_204  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_189 -> m4_205  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_191 -> m4_11  [key=2, style=dotted];
m4_191 -> m4_192  [key=0, style=solid];
m4_191 -> m4_278  [color=darkseagreen4, key=1, label=initialPosition, style=dashed];
m4_191 -> m4_279  [color=darkseagreen4, key=1, label=initialPosition, style=dashed];
m4_193 -> m4_11  [key=2, style=dotted];
m4_193 -> m4_194  [key=0, style=solid];
m4_193 -> m4_252  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m4_193 -> m4_254  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m4_193 -> m4_262  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m4_193 -> m4_264  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m4_193 -> m4_280  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m4_193 -> m4_283  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m4_193 -> m4_284  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m4_193 -> m4_193  [color=darkorchid, key=3, label="Local variable Newtonsoft.Json.Utilities.StringBuffer buffer", style=bold];
m4_193 -> m4_8  [color=darkorchid, key=3, label="Local variable Newtonsoft.Json.Utilities.StringBuffer buffer", style=bold];
m4_195 -> m4_11  [key=2, style=dotted];
m4_195 -> m4_196  [key=0, style=solid];
m4_195 -> m4_202  [key=0, style=solid];
m4_195 -> m4_266  [key=0, style=solid];
m4_195 -> m4_270  [key=0, style=solid];
m4_195 -> m4_274  [key=0, style=solid];
m4_195 -> m4_195  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m4_195 -> m4_197  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m4_195 -> m4_198  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m4_195 -> m4_203  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m4_195 -> m4_205  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m4_195 -> m4_207  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m4_195 -> m4_208  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m4_195 -> m4_212  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m4_197 -> m4_11  [key=2, style=dotted];
m4_197 -> m4_198  [key=0, style=solid];
m4_197 -> m4_194  [key=0, style=solid];
m4_199 -> m4_11  [key=2, style=dotted];
m4_199 -> m4_200  [key=0, style=solid];
m4_199 -> m4_194  [key=0, style=solid];
m4_199 -> m4_69  [key=2, style=dotted];
m4_201 -> m4_11  [key=2, style=dotted];
m4_201 -> m4_202  [key=0, style=solid];
m4_201 -> m4_288  [key=0, style=solid];
m4_201 -> m4_188  [key=2, style=dotted];
m4_201 -> m4_189  [key=2, style=dotted];
m4_202 -> m4_11  [key=2, style=dotted];
m4_202 -> m4_203  [key=0, style=solid];
m4_204 -> m4_11  [key=2, style=dotted];
m4_204 -> m4_205  [key=0, style=solid];
m4_204 -> m4_207  [key=0, style=solid];
m4_204 -> m4_102  [key=2, style=dotted];
m4_205 -> m4_11  [key=2, style=dotted];
m4_205 -> m4_206  [key=0, style=solid];
m4_206 -> m4_187  [color=blue, key=0, style=bold];
m4_206 -> m4_288  [key=0, style=solid];
m4_206 -> m4_188  [key=2, style=dotted];
m4_206 -> m4_189  [key=2, style=dotted];
m4_2075 -> m4_2076  [key=0, style=solid];
m4_2085 -> m4_10  [key=2, style=dotted];
m4_2085 -> m4_2086  [key=0, style=solid];
m4_2085 -> m4_19  [key=2, style=dotted];
m4_2090 -> m4_10  [key=2, style=dotted];
m4_2090 -> m4_2091  [key=0, style=solid];
m4_2090 -> m4_19  [key=2, style=dotted];
m4_2084 -> m4_8  [key=2, style=dotted];
m4_2084 -> m4_2085  [key=0, style=solid];
m4_2084 -> m4_2090  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2084 -> m4_2086  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2084 -> m4_2088  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2083 -> m4_9  [key=2, style=dotted];
m4_2083 -> m4_2084  [key=0, style=solid];
m4_2087 -> m4_11  [key=2, style=dotted];
m4_2087 -> m4_2088  [key=0, style=solid];
m4_2089 -> m4_11  [key=2, style=dotted];
m4_2089 -> m4_2090  [key=0, style=solid];
m4_2086 -> m4_130  [key=2, style=dotted];
m4_2086 -> m4_2087  [key=0, style=solid];
m4_2088 -> m4_130  [key=2, style=dotted];
m4_2088 -> m4_2089  [key=0, style=solid];
m4_2082 -> m4_2083  [key=0, style=solid];
m4_2082 -> m4_520  [key=2, style=dotted];
m4_2076 -> m4_2082  [color=darkseagreen4, key=1, label=sw, style=dashed];
m4_2076 -> m4_2077  [key=0, style=solid];
m4_2076 -> m4_515  [key=2, style=dotted];
m4_2081 -> m4_2082  [key=0, style=solid];
m4_2081 -> m4_519  [key=2, style=dotted];
m4_2077 -> m4_2081  [color=darkseagreen4, key=1, label=writer, style=dashed];
m4_2077 -> m4_516  [key=2, style=dotted];
m4_2077 -> m4_2078  [key=0, style=solid];
m4_2077 -> m4_2079  [color=darkseagreen4, key=1, label=writer, style=dashed];
m4_2077 -> m4_2080  [color=darkseagreen4, key=1, label=writer, style=dashed];
m4_2080 -> m4_2081  [key=0, style=solid];
m4_2080 -> m4_2092  [key=2, style=dotted];
m4_2078 -> m4_517  [key=2, style=dotted];
m4_2078 -> m4_2079  [key=0, style=solid];
m4_2079 -> m4_2080  [key=0, style=solid];
m4_2079 -> m4_2092  [key=2, style=dotted];
m4_2091 -> m4_2075  [color=blue, key=0, style=bold];
m4_59 -> m4_60  [key=0, style=solid];
m4_59 -> m4_61  [key=2, style=dotted];
m4_60 -> m4_61  [key=0, style=solid];
m4_60 -> m4_68  [key=0, style=solid];
m4_60 -> m4_58  [color=blue, key=0, style=bold];
m4_61 -> m4_62  [key=0, style=solid];
m4_61 -> m4_63  [color=darkseagreen4, key=1, label=count, style=dashed];
m4_61 -> m4_66  [color=darkseagreen4, key=1, label=count, style=dashed];
m4_14 -> m4_8  [key=2, style=dotted];
m4_14 -> m4_9  [key=2, style=dotted];
m4_14 -> m4_15  [key=0, style=solid];
m4_14 -> m4_16  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_14 -> m4_17  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_516 -> m4_552  [key=0, style=solid];
m4_1844 -> m4_1845  [key=0, style=solid];
m4_839 -> m4_840  [color=green, key=0, style=solid];
m4_840 -> m4_841  [color=green, key=0, style=solid];
m4_840 -> m4_61  [color=green, key=2, style=dotted];
m4_841 -> m4_839  [color=blue, key=0, style=bold];
m4_843 -> m4_61  [key=2, style=dotted];
m4_843 -> m4_844  [key=0, style=solid];
m4_846 -> m4_847  [color=green, key=0, style=solid];
m4_846 -> m4_61  [color=green, key=2, style=dotted];
m4_845 -> m4_846  [color=green, key=0, style=solid];
m4_847 -> m4_845  [color=blue, key=0, style=bold];
m4_914 -> m4_915  [color=green, key=0, style=solid];
m4_915 -> m4_916  [color=green, key=0, style=solid];
m4_915 -> m4_10  [color=green, key=2, style=dotted];
m4_916 -> m4_914  [color=blue, key=0, style=bold];
m4_185 -> m4_10  [key=2, style=dotted];
m4_185 -> m4_186  [key=0, style=solid];
m4_185 -> m4_363  [key=0, style=solid];
m4_185 -> m4_786  [color=darkorchid, key=3, label="method methodReturn bool ParsePostValue", style=bold];
m4_185 -> m4_774  [color=darkorchid, key=3, label="method methodReturn bool ParsePostValue", style=bold];
m4_310 -> m4_10  [key=2, style=dotted];
m4_310 -> m4_311  [key=0, style=solid];
m4_877 -> m4_10  [key=2, style=dotted];
m4_877 -> m4_878  [key=0, style=solid];
m4_912 -> m4_10  [key=2, style=dotted];
m4_912 -> m4_913  [key=0, style=solid];
m4_1090 -> m4_10  [key=2, style=dotted];
m4_1090 -> m4_1091  [key=0, style=solid];
m4_1168 -> m4_10  [key=2, style=dotted];
m4_1168 -> m4_1169  [key=0, style=solid];
m4_1413 -> m4_10  [key=2, style=dotted];
m4_1413 -> m4_1414  [key=0, style=solid];
m4_1420 -> m4_10  [key=2, style=dotted];
m4_1420 -> m4_1421  [key=0, style=solid];
m4_1427 -> m4_10  [key=2, style=dotted];
m4_1427 -> m4_1428  [key=0, style=solid];
m4_1434 -> m4_10  [key=2, style=dotted];
m4_1434 -> m4_1435  [key=0, style=solid];
m4_1441 -> m4_10  [key=2, style=dotted];
m4_1441 -> m4_1442  [key=0, style=solid];
m4_1586 -> m4_10  [key=2, style=dotted];
m4_1586 -> m4_1587  [key=0, style=solid];
m4_1594 -> m4_10  [key=2, style=dotted];
m4_1594 -> m4_1595  [key=0, style=solid];
m4_1625 -> m4_10  [key=2, style=dotted];
m4_1625 -> m4_1626  [key=0, style=solid];
m4_1642 -> m4_10  [key=2, style=dotted];
m4_1642 -> m4_1643  [key=0, style=solid];
m4_1642 -> m4_19  [key=2, style=dotted];
m4_1806 -> m4_10  [key=2, style=dotted];
m4_1806 -> m4_1807  [key=0, style=solid];
m4_1901 -> m4_10  [key=2, style=dotted];
m4_1901 -> m4_1902  [key=0, style=solid];
m4_1901 -> m4_19  [key=2, style=dotted];
m4_1933 -> m4_10  [key=2, style=dotted];
m4_1933 -> m4_1934  [key=0, style=solid];
m4_1933 -> m4_19  [key=2, style=dotted];
m4_1936 -> m4_10  [key=2, style=dotted];
m4_1936 -> m4_1937  [key=0, style=solid];
m4_1936 -> m4_19  [key=2, style=dotted];
m4_2058 -> m4_10  [key=2, style=dotted];
m4_2058 -> m4_2059  [key=0, style=solid];
m4_2061 -> m4_10  [key=2, style=dotted];
m4_2061 -> m4_2062  [key=0, style=solid];
m4_2064 -> m4_10  [key=2, style=dotted];
m4_2064 -> m4_2065  [key=0, style=solid];
m4_2067 -> m4_10  [key=2, style=dotted];
m4_2067 -> m4_2068  [key=0, style=solid];
m4_2070 -> m4_10  [key=2, style=dotted];
m4_2070 -> m4_2071  [key=0, style=solid];
m4_2073 -> m4_10  [key=2, style=dotted];
m4_2073 -> m4_2074  [key=0, style=solid];
m4_2099 -> m4_10  [key=2, style=dotted];
m4_2099 -> m4_2099  [key=0, style=solid];
m4_2099 -> m4_2100  [key=0, style=solid];
m4_478 -> m4_8  [key=2, style=dotted];
m4_478 -> m4_479  [key=0, style=solid];
m4_575 -> m4_8  [key=2, style=dotted];
m4_575 -> m4_9  [key=2, style=dotted];
m4_575 -> m4_576  [key=0, style=solid];
m4_575 -> m4_573  [key=2, style=dotted];
m4_575 -> m4_581  [key=0, style=solid];
m4_575 -> m4_583  [key=0, style=solid];
m4_575 -> m4_585  [key=0, style=solid];
m4_2098 -> m4_8  [key=2, style=dotted];
m4_2098 -> m4_9  [key=2, style=dotted];
m4_2098 -> m4_2099  [key=0, style=solid];
m4_76 -> m4_61  [key=2, style=dotted];
m4_76 -> m4_77  [key=0, style=solid];
m4_76 -> m4_81  [key=0, style=solid];
m4_79 -> m4_61  [key=2, style=dotted];
m4_79 -> m4_80  [key=0, style=solid];
m4_79 -> m4_54  [key=2, style=dotted];
m4_82 -> m4_61  [key=2, style=dotted];
m4_82 -> m4_83  [key=0, style=solid];
m4_82 -> m4_87  [key=0, style=solid];
m4_85 -> m4_61  [key=2, style=dotted];
m4_85 -> m4_86  [key=0, style=solid];
m4_85 -> m4_54  [key=2, style=dotted];
m4_132 -> m4_61  [key=2, style=dotted];
m4_132 -> m4_133  [key=0, style=solid];
m4_132 -> m4_208  [color=darkorchid, key=3, label="Local variable char writeChar", style=bold];
m4_132 -> m4_289  [color=darkorchid, key=3, label="Local variable char writeChar", style=bold];
m4_576 -> m4_61  [key=2, style=dotted];
m4_576 -> m4_577  [key=0, style=solid];
m4_837 -> m4_61  [key=2, style=dotted];
m4_837 -> m4_838  [key=0, style=solid];
m4_849 -> m4_61  [key=2, style=dotted];
m4_849 -> m4_850  [key=0, style=solid];
m4_1406 -> m4_61  [key=2, style=dotted];
m4_1406 -> m4_1407  [key=0, style=solid];
m4_842 -> m4_843  [key=0, style=solid];
m4_844 -> m4_842  [color=blue, key=0, style=bold];
m4_874 -> m4_130  [key=2, style=dotted];
m4_874 -> m4_875  [key=0, style=solid];
m4_880 -> m4_130  [key=2, style=dotted];
m4_880 -> m4_881  [key=0, style=solid];
m4_1198 -> m4_130  [key=2, style=dotted];
m4_1198 -> m4_1199  [key=0, style=solid];
m4_147 -> m4_148  [key=0, style=solid];
m4_147 -> m4_145  [color=blue, key=0, style=bold];
m4_184 -> m4_185  [key=0, style=solid];
m4_184 -> m4_404  [key=0, style=solid];
m4_184 -> m4_786  [color=darkorchid, key=3, label="method methodReturn bool ParseObject", style=bold];
m4_184 -> m4_774  [color=darkorchid, key=3, label="method methodReturn bool ParseObject", style=bold];
m4_184 -> m4_430  [color=darkorchid, key=3, label="method methodReturn bool ParseObject", style=bold];
m4_186 -> m4_184  [color=blue, key=0, style=bold];
m4_186 -> m4_571  [key=0, style=solid];
m4_186 -> m4_589  [color=darkseagreen4, key=1, label=bool, style=dashed];
m4_186 -> m4_786  [color=darkorchid, key=3, label="Parameter variable bool oneOrMore", style=bold];
m4_309 -> m4_310  [key=0, style=solid];
m4_309 -> m4_311  [key=0, style=solid];
m4_309 -> m4_189  [key=2, style=dotted];
m4_311 -> m4_309  [color=blue, key=0, style=bold];
m4_311 -> m4_289  [color=blue, key=0, style=bold];
m4_876 -> m4_877  [key=0, style=solid];
m4_878 -> m4_876  [color=blue, key=0, style=bold];
m4_911 -> m4_912  [key=0, style=solid];
m4_913 -> m4_911  [color=blue, key=0, style=bold];
m4_1089 -> m4_1090  [key=0, style=solid];
m4_1091 -> m4_1089  [color=blue, key=0, style=bold];
m4_1167 -> m4_1168  [key=0, style=solid];
m4_1169 -> m4_1167  [color=blue, key=0, style=bold];
m4_1412 -> m4_1413  [key=0, style=solid];
m4_1414 -> m4_1412  [color=blue, key=0, style=bold];
m4_1419 -> m4_1420  [key=0, style=solid];
m4_1421 -> m4_1419  [color=blue, key=0, style=bold];
m4_1426 -> m4_1427  [key=0, style=solid];
m4_1428 -> m4_1426  [color=blue, key=0, style=bold];
m4_1433 -> m4_1434  [key=0, style=solid];
m4_1435 -> m4_1433  [color=blue, key=0, style=bold];
m4_1440 -> m4_1441  [key=0, style=solid];
m4_1442 -> m4_1440  [color=blue, key=0, style=bold];
m4_1585 -> m4_1586  [key=0, style=solid];
m4_1587 -> m4_1585  [color=blue, key=0, style=bold];
m4_1593 -> m4_1594  [key=0, style=solid];
m4_1595 -> m4_1593  [color=blue, key=0, style=bold];
m4_1624 -> m4_1625  [key=0, style=solid];
m4_1626 -> m4_1624  [color=blue, key=0, style=bold];
m4_1641 -> m4_1642  [key=0, style=solid];
m4_1643 -> m4_1641  [color=blue, key=0, style=bold];
m4_1805 -> m4_1806  [key=0, style=solid];
m4_1807 -> m4_1805  [color=blue, key=0, style=bold];
m4_1900 -> m4_1901  [key=0, style=solid];
m4_1902 -> m4_1900  [color=blue, key=0, style=bold];
m4_1932 -> m4_1933  [key=0, style=solid];
m4_1934 -> m4_1932  [color=blue, key=0, style=bold];
m4_1935 -> m4_1936  [key=0, style=solid];
m4_1937 -> m4_1935  [color=blue, key=0, style=bold];
m4_2057 -> m4_2058  [key=0, style=solid];
m4_2059 -> m4_2057  [color=blue, key=0, style=bold];
m4_2060 -> m4_2061  [key=0, style=solid];
m4_2062 -> m4_2060  [color=blue, key=0, style=bold];
m4_2063 -> m4_2064  [key=0, style=solid];
m4_2065 -> m4_2063  [color=blue, key=0, style=bold];
m4_2066 -> m4_2067  [key=0, style=solid];
m4_2068 -> m4_2066  [color=blue, key=0, style=bold];
m4_2069 -> m4_2070  [key=0, style=solid];
m4_2071 -> m4_2069  [color=blue, key=0, style=bold];
m4_2072 -> m4_2073  [key=0, style=solid];
m4_2074 -> m4_2072  [color=blue, key=0, style=bold];
m4_2100 -> m4_2097  [color=blue, key=0, style=bold];
m4_477 -> m4_478  [key=0, style=solid];
m4_477 -> m4_483  [key=0, style=solid];
m4_477 -> m4_487  [key=0, style=solid];
m4_477 -> m4_490  [key=0, style=solid];
m4_477 -> m4_493  [key=0, style=solid];
m4_477 -> m4_503  [key=0, style=solid];
m4_477 -> m4_506  [key=0, style=solid];
m4_477 -> m4_509  [key=0, style=solid];
m4_477 -> m4_514  [key=0, style=solid];
m4_477 -> m4_517  [key=0, style=solid];
m4_477 -> m4_520  [key=0, style=solid];
m4_477 -> m4_524  [key=0, style=solid];
m4_477 -> m4_528  [key=0, style=solid];
m4_477 -> m4_532  [key=0, style=solid];
m4_477 -> m4_535  [key=0, style=solid];
m4_477 -> m4_539  [key=0, style=solid];
m4_477 -> m4_541  [key=0, style=solid];
m4_477 -> m4_543  [key=0, style=solid];
m4_477 -> m4_546  [key=0, style=solid];
m4_479 -> m4_477  [color=blue, key=0, style=bold];
m4_479 -> m4_480  [key=0, style=solid];
m4_479 -> m4_482  [key=0, style=solid];
m4_485 -> m4_265  [key=2, style=dotted];
m4_485 -> m4_486  [key=0, style=solid];
m4_485 -> m4_19  [key=2, style=dotted];
m4_574 -> m4_575  [key=0, style=solid];
m4_574 -> m4_585  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m4_590 -> m4_591  [key=0, style=solid];
m4_590 -> m4_186  [color=blue, key=0, style=bold];
m4_1185 -> m4_1186  [key=0, style=solid];
m4_1185 -> m4_100  [key=2, style=dotted];
m4_1205 -> m4_1206  [key=0, style=solid];
m4_1205 -> m4_100  [key=2, style=dotted];
m4_1212 -> m4_1213  [key=0, style=solid];
m4_1212 -> m4_1192  [key=2, style=dotted];
m4_1226 -> m4_1227  [key=0, style=solid];
m4_1226 -> m4_100  [key=2, style=dotted];
m4_1233 -> m4_1234  [key=0, style=solid];
m4_1233 -> m4_100  [key=2, style=dotted];
m4_1304 -> m4_1305  [key=0, style=solid];
m4_1304 -> m4_1192  [key=2, style=dotted];
m4_1845 -> m4_265  [key=2, style=dotted];
m4_1845 -> m4_1846  [key=0, style=solid];
m4_2097 -> m4_2098  [key=0, style=solid];
m4_75 -> m4_76  [key=0, style=solid];
m4_75 -> m4_92  [key=0, style=solid];
m4_77 -> m4_75  [color=blue, key=0, style=bold];
m4_77 -> m4_78  [key=0, style=solid];
m4_77 -> m4_100  [key=2, style=dotted];
m4_78 -> m4_79  [key=0, style=solid];
m4_78 -> m4_80  [color=darkseagreen4, key=1, label=dst, style=dashed];
m4_80 -> m4_78  [color=blue, key=0, style=bold];
m4_80 -> m4_92  [key=0, style=solid];
m4_81 -> m4_82  [key=0, style=solid];
m4_81 -> m4_83  [color=darkseagreen4, key=1, label=remainingCharCount, style=dashed];
m4_81 -> m4_84  [color=darkseagreen4, key=1, label=remainingCharCount, style=dashed];
m4_81 -> m4_85  [color=darkseagreen4, key=1, label=remainingCharCount, style=dashed];
m4_81 -> m4_87  [color=darkseagreen4, key=1, label=remainingCharCount, style=dashed];
m4_81 -> m4_88  [color=darkseagreen4, key=1, label=remainingCharCount, style=dashed];
m4_81 -> m4_91  [color=darkseagreen4, key=1, label=remainingCharCount, style=dashed];
m4_83 -> m4_81  [color=blue, key=0, style=bold];
m4_83 -> m4_84  [key=0, style=solid];
m4_83 -> m4_85  [color=darkseagreen4, key=1, label=dst, style=dashed];
m4_83 -> m4_86  [color=darkseagreen4, key=1, label=dst, style=dashed];
m4_84 -> m4_85  [key=0, style=solid];
m4_84 -> m4_86  [key=0, style=solid];
m4_86 -> m4_84  [color=blue, key=0, style=bold];
m4_86 -> m4_89  [key=0, style=solid];
m4_577 -> m4_574  [color=blue, key=0, style=bold];
m4_577 -> m4_578  [key=0, style=solid];
m4_577 -> m4_580  [key=0, style=solid];
m4_836 -> m4_837  [key=0, style=solid];
m4_838 -> m4_836  [color=blue, key=0, style=bold];
m4_848 -> m4_849  [key=0, style=solid];
m4_850 -> m4_848  [color=blue, key=0, style=bold];
m4_1405 -> m4_1406  [key=0, style=solid];
m4_1407 -> m4_1405  [color=blue, key=0, style=bold];
m4_484 -> m4_485  [key=0, style=solid];
m4_873 -> m4_874  [key=0, style=solid];
m4_879 -> m4_880  [key=0, style=solid];
m4_1184 -> m4_1185  [key=0, style=solid];
m4_1197 -> m4_1198  [key=0, style=solid];
m4_1204 -> m4_1205  [key=0, style=solid];
m4_1211 -> m4_1212  [key=0, style=solid];
m4_1225 -> m4_1226  [key=0, style=solid];
m4_1232 -> m4_1233  [key=0, style=solid];
m4_1303 -> m4_1304  [key=0, style=solid];
m4_875 -> m4_873  [color=blue, key=0, style=bold];
m4_881 -> m4_879  [color=blue, key=0, style=bold];
m4_1199 -> m4_1197  [color=blue, key=0, style=bold];
m4_486 -> m4_484  [color=blue, key=0, style=bold];
m4_486 -> m4_552  [key=0, style=solid];
m4_1186 -> m4_1184  [color=blue, key=0, style=bold];
m4_1206 -> m4_1204  [color=blue, key=0, style=bold];
m4_1213 -> m4_1211  [color=blue, key=0, style=bold];
m4_1227 -> m4_1225  [color=blue, key=0, style=bold];
m4_1234 -> m4_1232  [color=blue, key=0, style=bold];
m4_1305 -> m4_1303  [color=blue, key=0, style=bold];
m4_1846 -> m4_1844  [color=blue, key=0, style=bold];
m4_1483 -> m4_1484  [key=0, style=solid];
m4_1488 -> m4_10  [key=2, style=dotted];
m4_1488 -> m4_1489  [key=0, style=solid];
m4_1488 -> m4_19  [key=2, style=dotted];
m4_1490 -> m4_10  [key=2, style=dotted];
m4_1490 -> m4_1491  [key=0, style=solid];
m4_1490 -> m4_19  [key=2, style=dotted];
m4_1492 -> m4_10  [key=2, style=dotted];
m4_1492 -> m4_1493  [key=0, style=solid];
m4_1492 -> m4_43  [key=2, style=dotted];
m4_1485 -> m4_8  [key=2, style=dotted];
m4_1485 -> m4_9  [key=2, style=dotted];
m4_1485 -> m4_1488  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1485 -> m4_1490  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1485 -> m4_1492  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1485 -> m4_1486  [key=0, style=solid];
m4_1485 -> m4_1491  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1491 -> m4_11  [key=2, style=dotted];
m4_1491 -> m4_1492  [key=0, style=solid];
m4_1487 -> m4_1488  [key=0, style=solid];
m4_1487 -> m4_1490  [key=0, style=solid];
m4_1489 -> m4_1487  [key=0, style=solid];
m4_1489 -> m4_1489  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_1484 -> m4_1485  [key=0, style=solid];
m4_1486 -> m4_1487  [key=0, style=solid];
m4_1486 -> m4_1489  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_1493 -> m4_1483  [color=blue, key=0, style=bold];
m4_1667 -> m4_1668  [key=0, style=solid];
m4_1670 -> m4_10  [key=2, style=dotted];
m4_1670 -> m4_1671  [key=0, style=solid];
m4_1670 -> m4_19  [key=2, style=dotted];
m4_1672 -> m4_10  [key=2, style=dotted];
m4_1672 -> m4_1673  [key=0, style=solid];
m4_1672 -> m4_19  [key=2, style=dotted];
m4_1674 -> m4_10  [key=2, style=dotted];
m4_1674 -> m4_1675  [key=0, style=solid];
m4_1674 -> m4_19  [key=2, style=dotted];
m4_1676 -> m4_10  [key=2, style=dotted];
m4_1676 -> m4_1677  [key=0, style=solid];
m4_1676 -> m4_19  [key=2, style=dotted];
m4_1679 -> m4_10  [key=2, style=dotted];
m4_1679 -> m4_1680  [key=0, style=solid];
m4_1679 -> m4_19  [key=2, style=dotted];
m4_1681 -> m4_10  [key=2, style=dotted];
m4_1681 -> m4_1682  [key=0, style=solid];
m4_1681 -> m4_19  [key=2, style=dotted];
m4_1684 -> m4_10  [key=2, style=dotted];
m4_1684 -> m4_1685  [key=0, style=solid];
m4_1684 -> m4_19  [key=2, style=dotted];
m4_1686 -> m4_10  [key=2, style=dotted];
m4_1686 -> m4_1687  [key=0, style=solid];
m4_1686 -> m4_19  [key=2, style=dotted];
m4_1688 -> m4_10  [key=2, style=dotted];
m4_1688 -> m4_1689  [key=0, style=solid];
m4_1688 -> m4_19  [key=2, style=dotted];
m4_1691 -> m4_10  [key=2, style=dotted];
m4_1691 -> m4_1692  [key=0, style=solid];
m4_1691 -> m4_19  [key=2, style=dotted];
m4_1693 -> m4_10  [key=2, style=dotted];
m4_1693 -> m4_1694  [key=0, style=solid];
m4_1693 -> m4_19  [key=2, style=dotted];
m4_1697 -> m4_10  [key=2, style=dotted];
m4_1697 -> m4_1698  [key=0, style=solid];
m4_1697 -> m4_19  [key=2, style=dotted];
m4_1699 -> m4_10  [key=2, style=dotted];
m4_1699 -> m4_1700  [key=0, style=solid];
m4_1699 -> m4_19  [key=2, style=dotted];
m4_1701 -> m4_10  [key=2, style=dotted];
m4_1701 -> m4_1702  [key=0, style=solid];
m4_1701 -> m4_19  [key=2, style=dotted];
m4_1703 -> m4_10  [key=2, style=dotted];
m4_1703 -> m4_1704  [key=0, style=solid];
m4_1703 -> m4_19  [key=2, style=dotted];
m4_1669 -> m4_8  [key=2, style=dotted];
m4_1669 -> m4_1670  [key=0, style=solid];
m4_1669 -> m4_1672  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1669 -> m4_1674  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1669 -> m4_1676  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1669 -> m4_1679  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1669 -> m4_1681  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1669 -> m4_1684  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1669 -> m4_1686  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1669 -> m4_1688  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1669 -> m4_1691  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1669 -> m4_1693  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1669 -> m4_1697  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1669 -> m4_1699  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1669 -> m4_1701  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1669 -> m4_1703  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1669 -> m4_244  [key=2, style=dotted];
m4_1669 -> m4_284  [key=2, style=dotted];
m4_1669 -> m4_285  [key=2, style=dotted];
m4_1669 -> m4_1671  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1669 -> m4_1673  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1669 -> m4_1675  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1669 -> m4_1677  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1669 -> m4_1678  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1669 -> m4_1680  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1669 -> m4_1682  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1669 -> m4_1683  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1669 -> m4_1685  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1669 -> m4_1687  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1669 -> m4_1689  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1669 -> m4_1690  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1669 -> m4_1692  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1669 -> m4_1694  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1669 -> m4_1695  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1669 -> m4_1696  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1669 -> m4_1698  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1669 -> m4_1700  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1669 -> m4_1702  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1669 -> m4_1704  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1671 -> m4_11  [key=2, style=dotted];
m4_1671 -> m4_1672  [key=0, style=solid];
m4_1673 -> m4_11  [key=2, style=dotted];
m4_1673 -> m4_1674  [key=0, style=solid];
m4_1675 -> m4_11  [key=2, style=dotted];
m4_1675 -> m4_1676  [key=0, style=solid];
m4_1677 -> m4_11  [key=2, style=dotted];
m4_1677 -> m4_1678  [key=0, style=solid];
m4_1678 -> m4_11  [key=2, style=dotted];
m4_1678 -> m4_1679  [key=0, style=solid];
m4_1680 -> m4_11  [key=2, style=dotted];
m4_1680 -> m4_1681  [key=0, style=solid];
m4_1682 -> m4_11  [key=2, style=dotted];
m4_1682 -> m4_1683  [key=0, style=solid];
m4_1683 -> m4_11  [key=2, style=dotted];
m4_1683 -> m4_1684  [key=0, style=solid];
m4_1685 -> m4_11  [key=2, style=dotted];
m4_1685 -> m4_1686  [key=0, style=solid];
m4_1687 -> m4_11  [key=2, style=dotted];
m4_1687 -> m4_1688  [key=0, style=solid];
m4_1689 -> m4_11  [key=2, style=dotted];
m4_1689 -> m4_1690  [key=0, style=solid];
m4_1690 -> m4_11  [key=2, style=dotted];
m4_1690 -> m4_1691  [key=0, style=solid];
m4_1692 -> m4_11  [key=2, style=dotted];
m4_1692 -> m4_1693  [key=0, style=solid];
m4_1694 -> m4_11  [key=2, style=dotted];
m4_1694 -> m4_1695  [key=0, style=solid];
m4_1695 -> m4_11  [key=2, style=dotted];
m4_1695 -> m4_1696  [key=0, style=solid];
m4_1696 -> m4_11  [key=2, style=dotted];
m4_1696 -> m4_1697  [key=0, style=solid];
m4_1698 -> m4_11  [key=2, style=dotted];
m4_1698 -> m4_1699  [key=0, style=solid];
m4_1700 -> m4_11  [key=2, style=dotted];
m4_1700 -> m4_1701  [key=0, style=solid];
m4_1702 -> m4_11  [key=2, style=dotted];
m4_1702 -> m4_1703  [key=0, style=solid];
m4_1704 -> m4_11  [key=2, style=dotted];
m4_1704 -> m4_1705  [key=0, style=solid];
m4_1668 -> m4_1669  [key=0, style=solid];
m4_1705 -> m4_1667  [color=blue, key=0, style=bold];
m4_1847 -> m4_1848  [key=0, style=solid];
m4_1854 -> m4_10  [key=2, style=dotted];
m4_1854 -> m4_1855  [key=0, style=solid];
m4_1855 -> m4_10  [key=2, style=dotted];
m4_1855 -> m4_1856  [key=0, style=solid];
m4_1858 -> m4_10  [key=2, style=dotted];
m4_1858 -> m4_1859  [key=0, style=solid];
m4_1861 -> m4_10  [key=2, style=dotted];
m4_1861 -> m4_1862  [key=0, style=solid];
m4_1864 -> m4_10  [key=2, style=dotted];
m4_1864 -> m4_1865  [key=0, style=solid];
m4_1867 -> m4_10  [key=2, style=dotted];
m4_1867 -> m4_1868  [key=0, style=solid];
m4_1870 -> m4_10  [key=2, style=dotted];
m4_1870 -> m4_1871  [key=0, style=solid];
m4_1872 -> m4_10  [key=2, style=dotted];
m4_1872 -> m4_1873  [key=0, style=solid];
m4_1888 -> m4_10  [key=2, style=dotted];
m4_1888 -> m4_1889  [key=0, style=solid];
m4_1853 -> m4_8  [key=2, style=dotted];
m4_1853 -> m4_9  [key=2, style=dotted];
m4_1853 -> m4_1854  [key=0, style=solid];
m4_1853 -> m4_1855  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1853 -> m4_1858  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1853 -> m4_1861  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1853 -> m4_1864  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1853 -> m4_1867  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1853 -> m4_1870  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1853 -> m4_1856  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1853 -> m4_1857  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1853 -> m4_1859  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1853 -> m4_1860  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1853 -> m4_1862  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1853 -> m4_1863  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1853 -> m4_1865  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1853 -> m4_1866  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1853 -> m4_1868  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1853 -> m4_1869  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1871 -> m4_8  [key=2, style=dotted];
m4_1871 -> m4_9  [key=2, style=dotted];
m4_1871 -> m4_1872  [key=0, style=solid];
m4_1871 -> m4_1888  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1871 -> m4_1873  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1871 -> m4_1874  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1871 -> m4_1875  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1871 -> m4_1876  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1871 -> m4_1877  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1871 -> m4_1878  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1871 -> m4_1879  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1871 -> m4_1880  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1871 -> m4_1881  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1871 -> m4_1882  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1871 -> m4_1883  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1871 -> m4_1884  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1871 -> m4_1885  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1871 -> m4_1886  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1871 -> m4_1887  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1856 -> m4_11  [key=2, style=dotted];
m4_1856 -> m4_1857  [key=0, style=solid];
m4_1857 -> m4_11  [key=2, style=dotted];
m4_1857 -> m4_1858  [key=0, style=solid];
m4_1859 -> m4_11  [key=2, style=dotted];
m4_1859 -> m4_1860  [key=0, style=solid];
m4_1860 -> m4_11  [key=2, style=dotted];
m4_1860 -> m4_1861  [key=0, style=solid];
m4_1862 -> m4_11  [key=2, style=dotted];
m4_1862 -> m4_1863  [key=0, style=solid];
m4_1863 -> m4_11  [key=2, style=dotted];
m4_1863 -> m4_1864  [key=0, style=solid];
m4_1865 -> m4_11  [key=2, style=dotted];
m4_1865 -> m4_1866  [key=0, style=solid];
m4_1866 -> m4_11  [key=2, style=dotted];
m4_1866 -> m4_1867  [key=0, style=solid];
m4_1868 -> m4_11  [key=2, style=dotted];
m4_1868 -> m4_1869  [key=0, style=solid];
m4_1869 -> m4_11  [key=2, style=dotted];
m4_1869 -> m4_1870  [key=0, style=solid];
m4_1874 -> m4_11  [key=2, style=dotted];
m4_1874 -> m4_1875  [key=0, style=solid];
m4_1875 -> m4_11  [key=2, style=dotted];
m4_1875 -> m4_1876  [key=0, style=solid];
m4_1877 -> m4_11  [key=2, style=dotted];
m4_1877 -> m4_1878  [key=0, style=solid];
m4_1878 -> m4_11  [key=2, style=dotted];
m4_1878 -> m4_1879  [key=0, style=solid];
m4_1880 -> m4_11  [key=2, style=dotted];
m4_1880 -> m4_1881  [key=0, style=solid];
m4_1881 -> m4_11  [key=2, style=dotted];
m4_1881 -> m4_1882  [key=0, style=solid];
m4_1883 -> m4_11  [key=2, style=dotted];
m4_1883 -> m4_1884  [key=0, style=solid];
m4_1884 -> m4_11  [key=2, style=dotted];
m4_1884 -> m4_1885  [key=0, style=solid];
m4_1886 -> m4_11  [key=2, style=dotted];
m4_1886 -> m4_1887  [key=0, style=solid];
m4_1887 -> m4_11  [key=2, style=dotted];
m4_1887 -> m4_1888  [key=0, style=solid];
m4_1873 -> m4_130  [key=2, style=dotted];
m4_1873 -> m4_1874  [key=0, style=solid];
m4_1876 -> m4_130  [key=2, style=dotted];
m4_1876 -> m4_1877  [key=0, style=solid];
m4_1879 -> m4_130  [key=2, style=dotted];
m4_1879 -> m4_1880  [key=0, style=solid];
m4_1882 -> m4_130  [key=2, style=dotted];
m4_1882 -> m4_1883  [key=0, style=solid];
m4_1885 -> m4_130  [key=2, style=dotted];
m4_1885 -> m4_1886  [key=0, style=solid];
m4_1852 -> m4_1853  [key=0, style=solid];
m4_1852 -> m4_1871  [color=darkseagreen4, key=1, label=json, style=dashed];
m4_1851 -> m4_1852  [key=0, style=solid];
m4_1851 -> m4_1893  [key=2, style=dotted];
m4_1851 -> m4_1892  [key=2, style=dotted];
m4_1850 -> m4_1367  [key=2, style=dotted];
m4_1850 -> m4_1851  [key=0, style=solid];
m4_1850 -> m4_1891  [key=2, style=dotted];
m4_1850 -> m4_1892  [key=2, style=dotted];
m4_1848 -> m4_1849  [key=0, style=solid];
m4_1849 -> m4_1851  [color=darkseagreen4, key=1, label=d, style=dashed];
m4_1849 -> m4_1850  [key=0, style=solid];
m4_1849 -> m4_1890  [key=2, style=dotted];
m4_1889 -> m4_1847  [color=blue, key=0, style=bold];
m4_1221 -> m4_1222  [key=0, style=solid];
m4_1222 -> m4_8  [key=2, style=dotted];
m4_1222 -> m4_9  [key=2, style=dotted];
m4_1222 -> m4_1223  [key=0, style=solid];
m4_1222 -> m4_1226  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1223 -> m4_57  [key=2, style=dotted];
m4_1223 -> m4_1224  [key=0, style=solid];
m4_1223 -> m4_1225  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1224 -> m4_1221  [color=blue, key=0, style=bold];
m4_1162 -> m4_1163  [key=0, style=solid];
m4_1164 -> m4_10  [key=2, style=dotted];
m4_1164 -> m4_1165  [key=0, style=solid];
m4_1163 -> m4_8  [key=2, style=dotted];
m4_1163 -> m4_9  [key=2, style=dotted];
m4_1163 -> m4_1164  [key=0, style=solid];
m4_1163 -> m4_1168  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1163 -> m4_1165  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1165 -> m4_57  [key=2, style=dotted];
m4_1165 -> m4_1166  [key=0, style=solid];
m4_1165 -> m4_1167  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1166 -> m4_1162  [color=blue, key=0, style=bold];
m4_254 -> m4_255  [key=0, style=solid];
m4_254 -> m4_292  [key=2, style=dotted];
m4_254 -> m4_258  [key=2, style=dotted];
m4_252 -> m4_253  [key=0, style=solid];
m4_252 -> m4_254  [key=0, style=solid];
m4_252 -> m4_8  [key=2, style=dotted];
m4_252 -> m4_244  [key=2, style=dotted];
m4_266 -> m4_267  [key=0, style=solid];
m4_232 -> m4_233  [key=0, style=solid];
m4_232 -> m4_11  [key=2, style=dotted];
m4_232 -> m4_235  [key=2, style=dotted];
m4_220 -> m4_221  [key=0, style=solid];
m4_223 -> m4_224  [key=0, style=solid];
m4_223 -> m4_11  [key=2, style=dotted];
m4_223 -> m4_235  [key=2, style=dotted];
m4_226 -> m4_227  [key=0, style=solid];
m4_226 -> m4_11  [key=2, style=dotted];
m4_226 -> m4_235  [key=2, style=dotted];
m4_229 -> m4_230  [key=0, style=solid];
m4_229 -> m4_11  [key=2, style=dotted];
m4_229 -> m4_235  [key=2, style=dotted];
m4_234 -> m4_235  [key=0, style=solid];
m4_234 -> m4_221  [color=blue, key=0, style=bold];
m4_221 -> m4_222  [key=0, style=solid];
m4_221 -> m4_221  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m4_221 -> m4_224  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m4_222 -> m4_262  [key=0, style=solid];
m4_222 -> m4_11  [key=2, style=dotted];
m4_222 -> m4_223  [key=0, style=solid];
m4_222 -> m4_235  [key=2, style=dotted];
m4_224 -> m4_225  [key=0, style=solid];
m4_224 -> m4_224  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m4_224 -> m4_227  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m4_224 -> m4_11  [key=2, style=dotted];
m4_224 -> m4_235  [key=2, style=dotted];
m4_225 -> m4_262  [key=0, style=solid];
m4_225 -> m4_11  [key=2, style=dotted];
m4_225 -> m4_226  [key=0, style=solid];
m4_225 -> m4_235  [key=2, style=dotted];
m4_227 -> m4_228  [key=0, style=solid];
m4_227 -> m4_227  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m4_227 -> m4_233  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m4_227 -> m4_11  [key=2, style=dotted];
m4_227 -> m4_235  [key=2, style=dotted];
m4_228 -> m4_262  [key=0, style=solid];
m4_228 -> m4_11  [key=2, style=dotted];
m4_228 -> m4_229  [key=0, style=solid];
m4_228 -> m4_235  [key=2, style=dotted];
m4_233 -> m4_262  [key=0, style=solid];
m4_233 -> m4_233  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m4_233 -> m4_235  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m4_233 -> m4_11  [key=2, style=dotted];
m4_233 -> m4_234  [key=0, style=solid];
m4_230 -> m4_231  [key=0, style=solid];
m4_230 -> m4_11  [key=2, style=dotted];
m4_230 -> m4_235  [key=2, style=dotted];
m4_231 -> m4_232  [key=0, style=solid];
m4_231 -> m4_11  [key=2, style=dotted];
m4_231 -> m4_235  [key=2, style=dotted];
m4_244 -> m4_245  [key=0, style=solid];
m4_244 -> m4_254  [color=darkseagreen4, key=1, label=highSurrogate, style=dashed];
m4_244 -> m4_132  [color=darkorchid, key=3, label="Local variable char highSurrogate", style=bold];
m4_242 -> m4_243  [key=0, style=solid];
m4_242 -> m4_257  [color=darkseagreen4, key=1, label=anotherHighSurrogate, style=dashed];
m4_243 -> m4_244  [key=0, style=solid];
m4_243 -> m4_256  [key=0, style=solid];
m4_243 -> m4_102  [key=2, style=dotted];
m4_256 -> m4_257  [key=0, style=solid];
m4_256 -> m4_264  [color=darkseagreen4, key=1, label=writeChar, style=dashed];
m4_256 -> m4_245  [color=blue, key=0, style=bold];
m4_245 -> m4_246  [key=0, style=solid];
m4_246 -> m4_247  [key=0, style=solid];
m4_246 -> m4_289  [key=2, style=dotted];
m4_246 -> m4_248  [color=darkseagreen4, key=1, label=ms, style=dashed];
m4_246 -> m4_264  [color=darkseagreen4, key=1, label=writeChar, style=dashed];
m4_246 -> m4_250  [color=darkseagreen4, key=1, label=ms, style=dashed];
m4_246 -> m4_257  [key=2, style=dotted];
m4_247 -> m4_248  [key=0, style=solid];
m4_247 -> m4_252  [key=0, style=solid];
m4_247 -> m4_290  [key=2, style=dotted];
m4_247 -> m4_8  [key=2, style=dotted];
m4_247 -> m4_244  [key=2, style=dotted];
m4_247 -> m4_249  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_248 -> m4_249  [key=0, style=solid];
m4_248 -> m4_251  [key=0, style=solid];
m4_248 -> m4_291  [key=2, style=dotted];
m4_248 -> m4_19  [key=2, style=dotted];
m4_249 -> m4_250  [key=0, style=solid];
m4_249 -> m4_254  [color=darkseagreen4, key=1, label=highSurrogate, style=dashed];
m4_249 -> m4_5  [color=darkorchid, key=3, label="Local variable int charPos", style=bold];
m4_249 -> m4_258  [key=2, style=dotted];
m4_251 -> m4_252  [key=0, style=solid];
m4_251 -> m4_254  [color=darkseagreen4, key=1, label=highSurrogate, style=dashed];
m4_251 -> m4_251  [color=darkorchid, key=3, label="Local variable Newtonsoft.Json.Utilities.StringBuffer buffer", style=bold];
m4_251 -> m4_257  [key=2, style=dotted];
m4_251 -> m4_253  [color=darkseagreen4, key=1, label=ms, style=dashed];
m4_251 -> m4_255  [color=darkseagreen4, key=1, label=ms, style=dashed];
m4_251 -> m4_21  [color=darkorchid, key=3, label="Local variable Newtonsoft.Json.Utilities.StringBuffer buffer", style=bold];
m4_250 -> m4_252  [key=0, style=solid];
m4_250 -> m4_257  [color=darkseagreen4, key=1, label=anotherHighSurrogate, style=dashed];
m4_250 -> m4_5  [color=darkorchid, key=3, label="Local variable int initialPosition", style=bold];
m4_250 -> m4_251  [key=0, style=solid];
m4_250 -> m4_43  [key=2, style=dotted];
m4_253 -> m4_254  [key=0, style=solid];
m4_253 -> m4_8  [key=2, style=dotted];
m4_253 -> m4_262  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m4_253 -> m4_264  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m4_253 -> m4_280  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m4_253 -> m4_283  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m4_253 -> m4_284  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m4_253 -> m4_19  [key=2, style=dotted];
m4_255 -> m4_257  [key=0, style=solid];
m4_255 -> m4_264  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m4_255 -> m4_19  [key=2, style=dotted];
m4_255 -> m4_256  [key=0, style=solid];
m4_1320 -> m4_1321  [key=0, style=solid];
m4_1323 -> m4_10  [key=2, style=dotted];
m4_1323 -> m4_1324  [key=0, style=solid];
m4_1323 -> m4_19  [key=2, style=dotted];
m4_1325 -> m4_10  [key=2, style=dotted];
m4_1325 -> m4_1326  [key=0, style=solid];
m4_1325 -> m4_19  [key=2, style=dotted];
m4_1331 -> m4_10  [key=2, style=dotted];
m4_1331 -> m4_1332  [key=0, style=solid];
m4_1331 -> m4_19  [key=2, style=dotted];
m4_1322 -> m4_8  [key=2, style=dotted];
m4_1322 -> m4_9  [key=2, style=dotted];
m4_1322 -> m4_1323  [key=0, style=solid];
m4_1322 -> m4_1325  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1322 -> m4_1331  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1322 -> m4_1324  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1322 -> m4_1326  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1322 -> m4_1327  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1322 -> m4_1328  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1322 -> m4_1329  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1322 -> m4_1330  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1322 -> m4_1332  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1324 -> m4_11  [key=2, style=dotted];
m4_1324 -> m4_1325  [key=0, style=solid];
m4_1326 -> m4_11  [key=2, style=dotted];
m4_1326 -> m4_1327  [key=0, style=solid];
m4_1328 -> m4_11  [key=2, style=dotted];
m4_1328 -> m4_1329  [key=0, style=solid];
m4_1329 -> m4_11  [key=2, style=dotted];
m4_1329 -> m4_1330  [key=0, style=solid];
m4_1330 -> m4_11  [key=2, style=dotted];
m4_1330 -> m4_1331  [key=0, style=solid];
m4_1330 -> m4_1277  [key=2, style=dotted];
m4_1330 -> m4_1278  [key=2, style=dotted];
m4_1330 -> m4_1279  [key=2, style=dotted];
m4_1330 -> m4_1334  [key=2, style=dotted];
m4_1330 -> m4_1335  [key=2, style=dotted];
m4_1332 -> m4_11  [key=2, style=dotted];
m4_1332 -> m4_1333  [key=0, style=solid];
m4_1321 -> m4_1322  [key=0, style=solid];
m4_1327 -> m4_1328  [key=0, style=solid];
m4_1327 -> m4_1192  [key=2, style=dotted];
m4_1333 -> m4_1320  [color=blue, key=0, style=bold];
m4_494 -> m4_495  [key=0, style=solid];
m4_494 -> m4_501  [key=0, style=solid];
m4_494 -> m4_102  [key=2, style=dotted];
m4_506 -> m4_10  [key=2, style=dotted];
m4_506 -> m4_507  [key=0, style=solid];
m4_506 -> m4_19  [key=2, style=dotted];
m4_509 -> m4_10  [key=2, style=dotted];
m4_509 -> m4_510  [key=0, style=solid];
m4_509 -> m4_19  [key=2, style=dotted];
m4_512 -> m4_10  [key=2, style=dotted];
m4_512 -> m4_513  [key=0, style=solid];
m4_512 -> m4_19  [key=2, style=dotted];
m4_512 -> m4_560  [key=2, style=dotted];
m4_513 -> m4_10  [key=2, style=dotted];
m4_513 -> m4_514  [key=0, style=solid];
m4_513 -> m4_43  [key=2, style=dotted];
m4_513 -> m4_552  [key=0, style=solid];
m4_505 -> m4_8  [key=2, style=dotted];
m4_505 -> m4_9  [key=2, style=dotted];
m4_505 -> m4_506  [key=0, style=solid];
m4_505 -> m4_509  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_505 -> m4_512  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_505 -> m4_513  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_505 -> m4_510  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_505 -> m4_552  [key=0, style=solid];
m4_510 -> m4_11  [key=2, style=dotted];
m4_510 -> m4_511  [key=0, style=solid];
m4_510 -> m4_512  [key=0, style=solid];
m4_510 -> m4_102  [key=2, style=dotted];
m4_507 -> m4_510  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_507 -> m4_508  [key=0, style=solid];
m4_507 -> m4_511  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_507 -> m4_558  [key=2, style=dotted];
m4_508 -> m4_509  [key=0, style=solid];
m4_508 -> m4_512  [key=0, style=solid];
m4_508 -> m4_552  [key=0, style=solid];
m4_500 -> m4_501  [key=0, style=solid];
m4_500 -> m4_503  [key=0, style=solid];
m4_500 -> m4_552  [key=0, style=solid];
m4_500 -> m4_188  [key=2, style=dotted];
m4_500 -> m4_189  [key=2, style=dotted];
m4_504 -> m4_505  [key=0, style=solid];
m4_504 -> m4_520  [key=2, style=dotted];
m4_504 -> m4_557  [key=2, style=dotted];
m4_511 -> m4_508  [key=0, style=solid];
m4_511 -> m4_511  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_511 -> m4_513  [key=0, style=solid];
m4_511 -> m4_559  [key=2, style=dotted];
m4_495 -> m4_508  [color=darkseagreen4, key=1, label=valueCount, style=dashed];
m4_495 -> m4_500  [color=darkseagreen4, key=1, label=valueCount, style=dashed];
m4_495 -> m4_496  [key=0, style=solid];
m4_495 -> m4_498  [color=darkseagreen4, key=1, label=next, style=dashed];
m4_499 -> m4_500  [key=0, style=solid];
m4_499 -> m4_501  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_499 -> m4_502  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_499 -> m4_556  [key=2, style=dotted];
m4_502 -> m4_500  [key=0, style=solid];
m4_502 -> m4_502  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_502 -> m4_552  [key=0, style=solid];
m4_501 -> m4_502  [key=0, style=solid];
m4_501 -> m4_518  [key=2, style=dotted];
m4_501 -> m4_552  [key=0, style=solid];
m4_501 -> m4_189  [key=2, style=dotted];
m4_503 -> m4_504  [key=0, style=solid];
m4_503 -> m4_519  [key=2, style=dotted];
m4_496 -> m4_504  [color=darkseagreen4, key=1, label=sw, style=dashed];
m4_496 -> m4_497  [key=0, style=solid];
m4_496 -> m4_515  [key=2, style=dotted];
m4_496 -> m4_498  [key=0, style=solid];
m4_498 -> m4_499  [key=0, style=solid];
m4_498 -> m4_517  [key=2, style=dotted];
m4_498 -> m4_500  [key=0, style=solid];
m4_497 -> m4_501  [color=darkseagreen4, key=1, label=writer, style=dashed];
m4_497 -> m4_503  [color=darkseagreen4, key=1, label=writer, style=dashed];
m4_497 -> m4_498  [key=0, style=solid];
m4_497 -> m4_516  [key=2, style=dotted];
m4_497 -> m4_502  [key=0, style=solid];
m4_497 -> m4_555  [key=2, style=dotted];
m4_514 -> m4_494  [color=blue, key=0, style=bold];
m4_514 -> m4_515  [key=0, style=solid];
m4_1250 -> m4_1251  [key=0, style=solid];
m4_1253 -> m4_10  [key=2, style=dotted];
m4_1253 -> m4_1254  [key=0, style=solid];
m4_1253 -> m4_19  [key=2, style=dotted];
m4_1255 -> m4_10  [key=2, style=dotted];
m4_1255 -> m4_1256  [key=0, style=solid];
m4_1255 -> m4_19  [key=2, style=dotted];
m4_1257 -> m4_10  [key=2, style=dotted];
m4_1257 -> m4_1258  [key=0, style=solid];
m4_1257 -> m4_19  [key=2, style=dotted];
m4_1260 -> m4_10  [key=2, style=dotted];
m4_1260 -> m4_1261  [key=0, style=solid];
m4_1260 -> m4_19  [key=2, style=dotted];
m4_1252 -> m4_8  [key=2, style=dotted];
m4_1252 -> m4_9  [key=2, style=dotted];
m4_1252 -> m4_1253  [key=0, style=solid];
m4_1252 -> m4_1255  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1252 -> m4_1257  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1252 -> m4_1260  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1252 -> m4_1254  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1252 -> m4_1256  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1252 -> m4_1258  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1252 -> m4_1259  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1252 -> m4_1261  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1254 -> m4_11  [key=2, style=dotted];
m4_1254 -> m4_1255  [key=0, style=solid];
m4_1256 -> m4_11  [key=2, style=dotted];
m4_1256 -> m4_1257  [key=0, style=solid];
m4_1258 -> m4_11  [key=2, style=dotted];
m4_1258 -> m4_1259  [key=0, style=solid];
m4_1259 -> m4_11  [key=2, style=dotted];
m4_1259 -> m4_1260  [key=0, style=solid];
m4_1261 -> m4_11  [key=2, style=dotted];
m4_1261 -> m4_1262  [key=0, style=solid];
m4_1251 -> m4_1252  [key=0, style=solid];
m4_1262 -> m4_1250  [color=blue, key=0, style=bold];
m4_1294 -> m4_1295  [key=0, style=solid];
m4_1297 -> m4_10  [key=2, style=dotted];
m4_1297 -> m4_1298  [key=0, style=solid];
m4_1297 -> m4_19  [key=2, style=dotted];
m4_1299 -> m4_10  [key=2, style=dotted];
m4_1299 -> m4_1300  [key=0, style=solid];
m4_1299 -> m4_19  [key=2, style=dotted];
m4_1296 -> m4_8  [key=2, style=dotted];
m4_1296 -> m4_9  [key=2, style=dotted];
m4_1296 -> m4_1297  [key=0, style=solid];
m4_1296 -> m4_1299  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1296 -> m4_1298  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1296 -> m4_1300  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1296 -> m4_1301  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1296 -> m4_1304  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1298 -> m4_11  [key=2, style=dotted];
m4_1298 -> m4_1299  [key=0, style=solid];
m4_1300 -> m4_11  [key=2, style=dotted];
m4_1300 -> m4_1301  [key=0, style=solid];
m4_1301 -> m4_57  [key=2, style=dotted];
m4_1301 -> m4_1302  [key=0, style=solid];
m4_1301 -> m4_1303  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1295 -> m4_1296  [key=0, style=solid];
m4_1302 -> m4_1294  [color=blue, key=0, style=bold];
m4_1306 -> m4_1307  [key=0, style=solid];
m4_1309 -> m4_10  [key=2, style=dotted];
m4_1309 -> m4_1310  [key=0, style=solid];
m4_1309 -> m4_19  [key=2, style=dotted];
m4_1311 -> m4_10  [key=2, style=dotted];
m4_1311 -> m4_1312  [key=0, style=solid];
m4_1311 -> m4_19  [key=2, style=dotted];
m4_1317 -> m4_10  [key=2, style=dotted];
m4_1317 -> m4_1318  [key=0, style=solid];
m4_1317 -> m4_19  [key=2, style=dotted];
m4_1308 -> m4_8  [key=2, style=dotted];
m4_1308 -> m4_9  [key=2, style=dotted];
m4_1308 -> m4_1309  [key=0, style=solid];
m4_1308 -> m4_1311  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1308 -> m4_1317  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1308 -> m4_1310  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1308 -> m4_1312  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1308 -> m4_1313  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1308 -> m4_1314  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1308 -> m4_1315  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1308 -> m4_1316  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1308 -> m4_1318  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1310 -> m4_11  [key=2, style=dotted];
m4_1310 -> m4_1311  [key=0, style=solid];
m4_1312 -> m4_11  [key=2, style=dotted];
m4_1312 -> m4_1313  [key=0, style=solid];
m4_1314 -> m4_11  [key=2, style=dotted];
m4_1314 -> m4_1315  [key=0, style=solid];
m4_1315 -> m4_11  [key=2, style=dotted];
m4_1315 -> m4_1316  [key=0, style=solid];
m4_1316 -> m4_11  [key=2, style=dotted];
m4_1316 -> m4_1317  [key=0, style=solid];
m4_1316 -> m4_1277  [key=2, style=dotted];
m4_1316 -> m4_1278  [key=2, style=dotted];
m4_1316 -> m4_1279  [key=2, style=dotted];
m4_1318 -> m4_11  [key=2, style=dotted];
m4_1318 -> m4_1319  [key=0, style=solid];
m4_1307 -> m4_1308  [key=0, style=solid];
m4_1313 -> m4_1314  [key=0, style=solid];
m4_1313 -> m4_1192  [key=2, style=dotted];
m4_1319 -> m4_1306  [color=blue, key=0, style=bold];
m4_1979 -> m4_1980  [key=0, style=solid];
m4_1983 -> m4_10  [key=2, style=dotted];
m4_1983 -> m4_1984  [key=0, style=solid];
m4_1983 -> m4_19  [key=2, style=dotted];
m4_1984 -> m4_10  [key=2, style=dotted];
m4_1984 -> m4_1985  [key=0, style=solid];
m4_1984 -> m4_19  [key=2, style=dotted];
m4_1987 -> m4_10  [key=2, style=dotted];
m4_1987 -> m4_1988  [key=0, style=solid];
m4_1987 -> m4_19  [key=2, style=dotted];
m4_1990 -> m4_10  [key=2, style=dotted];
m4_1990 -> m4_1991  [key=0, style=solid];
m4_1990 -> m4_19  [key=2, style=dotted];
m4_1993 -> m4_10  [key=2, style=dotted];
m4_1993 -> m4_1994  [key=0, style=solid];
m4_1993 -> m4_19  [key=2, style=dotted];
m4_1994 -> m4_10  [key=2, style=dotted];
m4_1994 -> m4_1995  [key=0, style=solid];
m4_1994 -> m4_19  [key=2, style=dotted];
m4_1997 -> m4_10  [key=2, style=dotted];
m4_1997 -> m4_1998  [key=0, style=solid];
m4_1997 -> m4_19  [key=2, style=dotted];
m4_2000 -> m4_10  [key=2, style=dotted];
m4_2000 -> m4_2001  [key=0, style=solid];
m4_2000 -> m4_19  [key=2, style=dotted];
m4_2003 -> m4_10  [key=2, style=dotted];
m4_2003 -> m4_2004  [key=0, style=solid];
m4_2003 -> m4_19  [key=2, style=dotted];
m4_2004 -> m4_10  [key=2, style=dotted];
m4_2004 -> m4_2005  [key=0, style=solid];
m4_2004 -> m4_19  [key=2, style=dotted];
m4_2007 -> m4_10  [key=2, style=dotted];
m4_2007 -> m4_2008  [key=0, style=solid];
m4_2007 -> m4_19  [key=2, style=dotted];
m4_2010 -> m4_10  [key=2, style=dotted];
m4_2010 -> m4_2011  [key=0, style=solid];
m4_2010 -> m4_19  [key=2, style=dotted];
m4_2013 -> m4_10  [key=2, style=dotted];
m4_2013 -> m4_2014  [key=0, style=solid];
m4_2013 -> m4_19  [key=2, style=dotted];
m4_2020 -> m4_10  [key=2, style=dotted];
m4_2020 -> m4_2021  [key=0, style=solid];
m4_2020 -> m4_19  [key=2, style=dotted];
m4_2023 -> m4_10  [key=2, style=dotted];
m4_2023 -> m4_2024  [key=0, style=solid];
m4_2023 -> m4_19  [key=2, style=dotted];
m4_2030 -> m4_10  [key=2, style=dotted];
m4_2030 -> m4_2031  [key=0, style=solid];
m4_2030 -> m4_19  [key=2, style=dotted];
m4_1981 -> m4_8  [key=2, style=dotted];
m4_1981 -> m4_9  [key=2, style=dotted];
m4_1981 -> m4_1983  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1981 -> m4_1984  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1981 -> m4_1987  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1981 -> m4_1990  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1981 -> m4_1982  [key=0, style=solid];
m4_1981 -> m4_1985  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1981 -> m4_1986  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1981 -> m4_1988  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1981 -> m4_1989  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1991 -> m4_8  [key=2, style=dotted];
m4_1991 -> m4_9  [key=2, style=dotted];
m4_1991 -> m4_1993  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1991 -> m4_1994  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1991 -> m4_1997  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1991 -> m4_2000  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1991 -> m4_1992  [key=0, style=solid];
m4_1991 -> m4_1995  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1991 -> m4_1996  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1991 -> m4_1998  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1991 -> m4_1999  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2001 -> m4_8  [key=2, style=dotted];
m4_2001 -> m4_9  [key=2, style=dotted];
m4_2001 -> m4_2003  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2001 -> m4_2004  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2001 -> m4_2007  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2001 -> m4_2010  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2001 -> m4_2002  [key=0, style=solid];
m4_2001 -> m4_2005  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2001 -> m4_2006  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2001 -> m4_2008  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2001 -> m4_2009  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2011 -> m4_8  [key=2, style=dotted];
m4_2011 -> m4_9  [key=2, style=dotted];
m4_2011 -> m4_2013  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2011 -> m4_2020  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2011 -> m4_2012  [key=0, style=solid];
m4_2011 -> m4_2014  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2011 -> m4_2015  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2011 -> m4_2016  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2011 -> m4_2017  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2011 -> m4_2018  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2011 -> m4_2019  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2021 -> m4_8  [key=2, style=dotted];
m4_2021 -> m4_9  [key=2, style=dotted];
m4_2021 -> m4_2023  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2021 -> m4_2030  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2021 -> m4_2022  [key=0, style=solid];
m4_2021 -> m4_2024  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2021 -> m4_2025  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2021 -> m4_2026  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2021 -> m4_2027  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2021 -> m4_2028  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2021 -> m4_2029  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1985 -> m4_11  [key=2, style=dotted];
m4_1985 -> m4_1986  [key=0, style=solid];
m4_1985 -> m4_2032  [key=2, style=dotted];
m4_1986 -> m4_11  [key=2, style=dotted];
m4_1986 -> m4_1987  [key=0, style=solid];
m4_1988 -> m4_11  [key=2, style=dotted];
m4_1988 -> m4_1989  [key=0, style=solid];
m4_1988 -> m4_2032  [key=2, style=dotted];
m4_1989 -> m4_11  [key=2, style=dotted];
m4_1989 -> m4_1990  [key=0, style=solid];
m4_1995 -> m4_11  [key=2, style=dotted];
m4_1995 -> m4_1996  [key=0, style=solid];
m4_1995 -> m4_2033  [key=2, style=dotted];
m4_1996 -> m4_11  [key=2, style=dotted];
m4_1996 -> m4_1997  [key=0, style=solid];
m4_1998 -> m4_11  [key=2, style=dotted];
m4_1998 -> m4_1999  [key=0, style=solid];
m4_1998 -> m4_2033  [key=2, style=dotted];
m4_1999 -> m4_11  [key=2, style=dotted];
m4_1999 -> m4_2000  [key=0, style=solid];
m4_2005 -> m4_11  [key=2, style=dotted];
m4_2005 -> m4_2006  [key=0, style=solid];
m4_2006 -> m4_11  [key=2, style=dotted];
m4_2006 -> m4_2007  [key=0, style=solid];
m4_2008 -> m4_11  [key=2, style=dotted];
m4_2008 -> m4_2009  [key=0, style=solid];
m4_2009 -> m4_11  [key=2, style=dotted];
m4_2009 -> m4_2010  [key=0, style=solid];
m4_2015 -> m4_11  [key=2, style=dotted];
m4_2015 -> m4_2016  [key=0, style=solid];
m4_2015 -> m4_2033  [key=2, style=dotted];
m4_2016 -> m4_11  [key=2, style=dotted];
m4_2016 -> m4_2017  [key=0, style=solid];
m4_2018 -> m4_11  [key=2, style=dotted];
m4_2018 -> m4_2019  [key=0, style=solid];
m4_2018 -> m4_2033  [key=2, style=dotted];
m4_2019 -> m4_11  [key=2, style=dotted];
m4_2019 -> m4_2020  [key=0, style=solid];
m4_2025 -> m4_11  [key=2, style=dotted];
m4_2025 -> m4_2026  [key=0, style=solid];
m4_2025 -> m4_2032  [key=2, style=dotted];
m4_2026 -> m4_11  [key=2, style=dotted];
m4_2026 -> m4_2027  [key=0, style=solid];
m4_2028 -> m4_11  [key=2, style=dotted];
m4_2028 -> m4_2029  [key=0, style=solid];
m4_2028 -> m4_2032  [key=2, style=dotted];
m4_2029 -> m4_11  [key=2, style=dotted];
m4_2029 -> m4_2030  [key=0, style=solid];
m4_1982 -> m4_1983  [key=0, style=solid];
m4_1992 -> m4_1993  [key=0, style=solid];
m4_2002 -> m4_2003  [key=0, style=solid];
m4_2012 -> m4_2013  [key=0, style=solid];
m4_2014 -> m4_2015  [key=0, style=solid];
m4_2014 -> m4_1192  [key=2, style=dotted];
m4_2022 -> m4_2023  [key=0, style=solid];
m4_2024 -> m4_2025  [key=0, style=solid];
m4_2024 -> m4_2034  [key=2, style=dotted];
m4_1980 -> m4_1981  [key=0, style=solid];
m4_1980 -> m4_1991  [color=darkseagreen4, key=1, label=json, style=dashed];
m4_1980 -> m4_2001  [color=darkseagreen4, key=1, label=json, style=dashed];
m4_1980 -> m4_2011  [color=darkseagreen4, key=1, label=json, style=dashed];
m4_1980 -> m4_2021  [color=darkseagreen4, key=1, label=json, style=dashed];
m4_2017 -> m4_2018  [key=0, style=solid];
m4_2017 -> m4_1192  [key=2, style=dotted];
m4_2027 -> m4_2028  [key=0, style=solid];
m4_2027 -> m4_2034  [key=2, style=dotted];
m4_2031 -> m4_1979  [color=blue, key=0, style=bold];
m4_480 -> m4_481  [key=0, style=solid];
m4_480 -> m4_475  [key=0, style=solid];
m4_480 -> m4_69  [key=2, style=dotted];
m4_481 -> m4_8  [key=2, style=dotted];
m4_481 -> m4_9  [key=2, style=dotted];
m4_481 -> m4_482  [key=0, style=solid];
m4_481 -> m4_485  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_481 -> m4_552  [key=0, style=solid];
m4_482 -> m4_57  [key=2, style=dotted];
m4_482 -> m4_483  [key=0, style=solid];
m4_482 -> m4_484  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_482 -> m4_475  [key=0, style=solid];
m4_483 -> m4_480  [color=blue, key=0, style=bold];
m4_483 -> m4_484  [key=0, style=solid];
m4_1193 -> m4_1194  [key=0, style=solid];
m4_1194 -> m4_8  [key=2, style=dotted];
m4_1194 -> m4_9  [key=2, style=dotted];
m4_1194 -> m4_1195  [key=0, style=solid];
m4_1194 -> m4_1198  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1195 -> m4_57  [key=2, style=dotted];
m4_1195 -> m4_1196  [key=0, style=solid];
m4_1195 -> m4_1197  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1196 -> m4_1193  [color=blue, key=0, style=bold];
m4_1580 -> m4_1581  [key=0, style=solid];
m4_1582 -> m4_8  [key=2, style=dotted];
m4_1582 -> m4_9  [key=2, style=dotted];
m4_1582 -> m4_1586  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1582 -> m4_1583  [key=0, style=solid];
m4_1583 -> m4_57  [key=2, style=dotted];
m4_1583 -> m4_1584  [key=0, style=solid];
m4_1583 -> m4_1585  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1581 -> m4_1582  [key=0, style=solid];
m4_1584 -> m4_1580  [color=blue, key=0, style=bold];
m4_1187 -> m4_1188  [key=0, style=solid];
m4_1188 -> m4_8  [key=2, style=dotted];
m4_1188 -> m4_9  [key=2, style=dotted];
m4_1188 -> m4_1189  [key=0, style=solid];
m4_1188 -> m4_1190  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1190 -> m4_11  [key=2, style=dotted];
m4_1190 -> m4_1191  [key=0, style=solid];
m4_1189 -> m4_1190  [key=0, style=solid];
m4_1189 -> m4_1192  [key=2, style=dotted];
m4_1189 -> m4_677  [key=2, style=dotted];
m4_1191 -> m4_1187  [color=blue, key=0, style=bold];
m4_152 -> m4_8  [key=2, style=dotted];
m4_152 -> m4_9  [key=2, style=dotted];
m4_152 -> m4_154  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_152 -> m4_156  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_152 -> m4_160  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_152 -> m4_164  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_152 -> m4_168  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_152 -> m4_172  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_152 -> m4_153  [key=0, style=solid];
m4_152 -> m4_155  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_152 -> m4_157  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_152 -> m4_158  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_152 -> m4_159  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_152 -> m4_161  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_152 -> m4_162  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_152 -> m4_163  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_152 -> m4_165  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_152 -> m4_166  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_152 -> m4_167  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_152 -> m4_169  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_152 -> m4_170  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_152 -> m4_171  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_152 -> m4_173  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1822 -> m4_1823  [key=0, style=solid];
m4_1825 -> m4_10  [key=2, style=dotted];
m4_1825 -> m4_1826  [key=0, style=solid];
m4_1827 -> m4_10  [key=2, style=dotted];
m4_1827 -> m4_1828  [key=0, style=solid];
m4_1829 -> m4_10  [key=2, style=dotted];
m4_1829 -> m4_1830  [key=0, style=solid];
m4_1831 -> m4_10  [key=2, style=dotted];
m4_1831 -> m4_1832  [key=0, style=solid];
m4_1833 -> m4_10  [key=2, style=dotted];
m4_1833 -> m4_1834  [key=0, style=solid];
m4_1835 -> m4_10  [key=2, style=dotted];
m4_1835 -> m4_1836  [key=0, style=solid];
m4_1824 -> m4_8  [key=2, style=dotted];
m4_1824 -> m4_9  [key=2, style=dotted];
m4_1824 -> m4_1825  [key=0, style=solid];
m4_1824 -> m4_1827  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1824 -> m4_1829  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1824 -> m4_1831  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1824 -> m4_1833  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1824 -> m4_1835  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1824 -> m4_1826  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1824 -> m4_1828  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1824 -> m4_1830  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1824 -> m4_1832  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1824 -> m4_1834  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1824 -> m4_1836  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1826 -> m4_11  [key=2, style=dotted];
m4_1826 -> m4_1827  [key=0, style=solid];
m4_1828 -> m4_11  [key=2, style=dotted];
m4_1828 -> m4_1829  [key=0, style=solid];
m4_1830 -> m4_11  [key=2, style=dotted];
m4_1830 -> m4_1831  [key=0, style=solid];
m4_1832 -> m4_11  [key=2, style=dotted];
m4_1832 -> m4_1833  [key=0, style=solid];
m4_1834 -> m4_11  [key=2, style=dotted];
m4_1834 -> m4_1835  [key=0, style=solid];
m4_1836 -> m4_11  [key=2, style=dotted];
m4_1836 -> m4_1837  [key=0, style=solid];
m4_1823 -> m4_1824  [key=0, style=solid];
m4_1837 -> m4_1822  [color=blue, key=0, style=bold];
m4_1214 -> m4_1215  [key=0, style=solid];
m4_1215 -> m4_8  [key=2, style=dotted];
m4_1215 -> m4_9  [key=2, style=dotted];
m4_1215 -> m4_1216  [key=0, style=solid];
m4_1217 -> m4_11  [key=2, style=dotted];
m4_1217 -> m4_1218  [key=0, style=solid];
m4_1218 -> m4_11  [key=2, style=dotted];
m4_1218 -> m4_1219  [key=0, style=solid];
m4_1219 -> m4_11  [key=2, style=dotted];
m4_1219 -> m4_1220  [key=0, style=solid];
m4_1216 -> m4_1217  [key=0, style=solid];
m4_1216 -> m4_1218  [color=darkseagreen4, key=1, label=data, style=dashed];
m4_1216 -> m4_1219  [color=darkseagreen4, key=1, label=data, style=dashed];
m4_1216 -> m4_100  [key=2, style=dotted];
m4_1220 -> m4_1214  [color=blue, key=0, style=bold];
m4_1503 -> m4_1504  [key=0, style=solid];
m4_1506 -> m4_10  [key=2, style=dotted];
m4_1506 -> m4_1507  [key=0, style=solid];
m4_1506 -> m4_19  [key=2, style=dotted];
m4_1509 -> m4_10  [key=2, style=dotted];
m4_1509 -> m4_1510  [key=0, style=solid];
m4_1509 -> m4_19  [key=2, style=dotted];
m4_1505 -> m4_8  [key=2, style=dotted];
m4_1505 -> m4_9  [key=2, style=dotted];
m4_1505 -> m4_1506  [key=0, style=solid];
m4_1505 -> m4_1509  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1505 -> m4_1507  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1505 -> m4_1508  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1505 -> m4_1510  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1507 -> m4_11  [key=2, style=dotted];
m4_1507 -> m4_1508  [key=0, style=solid];
m4_1508 -> m4_11  [key=2, style=dotted];
m4_1508 -> m4_1509  [key=0, style=solid];
m4_1510 -> m4_11  [key=2, style=dotted];
m4_1510 -> m4_1511  [key=0, style=solid];
m4_1504 -> m4_1505  [key=0, style=solid];
m4_1511 -> m4_1503  [color=blue, key=0, style=bold];
m4_1102 -> m4_1103  [key=0, style=solid];
m4_1105 -> m4_10  [key=2, style=dotted];
m4_1105 -> m4_1106  [key=0, style=solid];
m4_1105 -> m4_19  [key=2, style=dotted];
m4_1107 -> m4_10  [key=2, style=dotted];
m4_1107 -> m4_1108  [key=0, style=solid];
m4_1107 -> m4_19  [key=2, style=dotted];
m4_1110 -> m4_10  [key=2, style=dotted];
m4_1110 -> m4_1111  [key=0, style=solid];
m4_1110 -> m4_19  [key=2, style=dotted];
m4_1113 -> m4_10  [key=2, style=dotted];
m4_1113 -> m4_1114  [key=0, style=solid];
m4_1113 -> m4_19  [key=2, style=dotted];
m4_1116 -> m4_10  [key=2, style=dotted];
m4_1116 -> m4_1117  [key=0, style=solid];
m4_1116 -> m4_19  [key=2, style=dotted];
m4_1118 -> m4_10  [key=2, style=dotted];
m4_1118 -> m4_1119  [key=0, style=solid];
m4_1118 -> m4_43  [key=2, style=dotted];
m4_1104 -> m4_8  [key=2, style=dotted];
m4_1104 -> m4_1105  [key=0, style=solid];
m4_1104 -> m4_1107  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1104 -> m4_1110  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1104 -> m4_1113  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1104 -> m4_1116  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1104 -> m4_1118  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1104 -> m4_1106  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1104 -> m4_1108  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1104 -> m4_1109  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1104 -> m4_1111  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1104 -> m4_1112  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1104 -> m4_1114  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1104 -> m4_1115  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1104 -> m4_1117  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_1103 -> m4_9  [key=2, style=dotted];
m4_1103 -> m4_1104  [key=0, style=solid];
m4_1106 -> m4_11  [key=2, style=dotted];
m4_1106 -> m4_1107  [key=0, style=solid];
m4_1108 -> m4_11  [key=2, style=dotted];
m4_1108 -> m4_1109  [key=0, style=solid];
m4_1109 -> m4_11  [key=2, style=dotted];
m4_1109 -> m4_1110  [key=0, style=solid];
m4_1111 -> m4_11  [key=2, style=dotted];
m4_1111 -> m4_1112  [key=0, style=solid];
m4_1112 -> m4_11  [key=2, style=dotted];
m4_1112 -> m4_1113  [key=0, style=solid];
m4_1114 -> m4_11  [key=2, style=dotted];
m4_1114 -> m4_1115  [key=0, style=solid];
m4_1115 -> m4_11  [key=2, style=dotted];
m4_1115 -> m4_1116  [key=0, style=solid];
m4_1117 -> m4_11  [key=2, style=dotted];
m4_1117 -> m4_1118  [key=0, style=solid];
m4_1119 -> m4_1102  [color=blue, key=0, style=bold];
m4_515 -> m4_516  [key=0, style=solid];
m4_515 -> m4_187  [key=2, style=dotted];
m4_1175 -> m4_1176  [key=0, style=solid];
m4_1176 -> m4_8  [key=2, style=dotted];
m4_1176 -> m4_9  [key=2, style=dotted];
m4_1176 -> m4_1177  [key=0, style=solid];
m4_1176 -> m4_1178  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1178 -> m4_11  [key=2, style=dotted];
m4_1178 -> m4_1179  [key=0, style=solid];
m4_1177 -> m4_1178  [key=0, style=solid];
m4_1177 -> m4_100  [key=2, style=dotted];
m4_1177 -> m4_677  [key=2, style=dotted];
m4_1179 -> m4_1175  [color=blue, key=0, style=bold];
m4_493 -> m4_494  [key=0, style=solid];
m4_1512 -> m4_1513  [key=0, style=solid];
m4_1515 -> m4_10  [key=2, style=dotted];
m4_1515 -> m4_1516  [key=0, style=solid];
m4_1515 -> m4_19  [key=2, style=dotted];
m4_1517 -> m4_10  [key=2, style=dotted];
m4_1517 -> m4_1518  [key=0, style=solid];
m4_1517 -> m4_19  [key=2, style=dotted];
m4_1519 -> m4_10  [key=2, style=dotted];
m4_1519 -> m4_1520  [key=0, style=solid];
m4_1519 -> m4_19  [key=2, style=dotted];
m4_1521 -> m4_10  [key=2, style=dotted];
m4_1521 -> m4_1522  [key=0, style=solid];
m4_1521 -> m4_19  [key=2, style=dotted];
m4_1523 -> m4_10  [key=2, style=dotted];
m4_1523 -> m4_1524  [key=0, style=solid];
m4_1523 -> m4_19  [key=2, style=dotted];
m4_1525 -> m4_10  [key=2, style=dotted];
m4_1525 -> m4_1526  [key=0, style=solid];
m4_1525 -> m4_19  [key=2, style=dotted];
m4_1527 -> m4_10  [key=2, style=dotted];
m4_1527 -> m4_1528  [key=0, style=solid];
m4_1527 -> m4_19  [key=2, style=dotted];
m4_1514 -> m4_8  [key=2, style=dotted];
m4_1514 -> m4_9  [key=2, style=dotted];
m4_1514 -> m4_1515  [key=0, style=solid];
m4_1514 -> m4_1517  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1514 -> m4_1519  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1514 -> m4_1521  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1514 -> m4_1523  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1514 -> m4_1525  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1514 -> m4_1527  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1514 -> m4_1516  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1514 -> m4_1518  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1514 -> m4_1520  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1514 -> m4_1522  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1514 -> m4_1524  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1514 -> m4_1526  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1514 -> m4_1528  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1516 -> m4_11  [key=2, style=dotted];
m4_1516 -> m4_1517  [key=0, style=solid];
m4_1518 -> m4_11  [key=2, style=dotted];
m4_1518 -> m4_1519  [key=0, style=solid];
m4_1520 -> m4_11  [key=2, style=dotted];
m4_1520 -> m4_1521  [key=0, style=solid];
m4_1522 -> m4_11  [key=2, style=dotted];
m4_1522 -> m4_1523  [key=0, style=solid];
m4_1524 -> m4_11  [key=2, style=dotted];
m4_1524 -> m4_1525  [key=0, style=solid];
m4_1526 -> m4_11  [key=2, style=dotted];
m4_1526 -> m4_1527  [key=0, style=solid];
m4_1528 -> m4_11  [key=2, style=dotted];
m4_1528 -> m4_1529  [key=0, style=solid];
m4_1513 -> m4_1514  [key=0, style=solid];
m4_1529 -> m4_1512  [color=blue, key=0, style=bold];
m4_92 -> m4_93  [key=0, style=solid];
m4_92 -> m4_10  [key=2, style=dotted];
m4_92 -> m4_19  [key=2, style=dotted];
m4_87 -> m4_88  [key=0, style=solid];
m4_87 -> m4_89  [key=0, style=solid];
m4_88 -> m4_89  [key=0, style=solid];
m4_88 -> m4_54  [key=2, style=dotted];
m4_91 -> m4_92  [key=0, style=solid];
m4_91 -> m4_11  [key=2, style=dotted];
m4_89 -> m4_90  [key=0, style=solid];
m4_89 -> m4_8  [key=2, style=dotted];
m4_89 -> m4_9  [key=2, style=dotted];
m4_89 -> m4_92  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_89 -> m4_96  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_89 -> m4_98  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_89 -> m4_91  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_89 -> m4_93  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_89 -> m4_94  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_89 -> m4_97  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_90 -> m4_91  [key=0, style=solid];
m4_90 -> m4_10  [key=2, style=dotted];
m4_90 -> m4_19  [key=2, style=dotted];
m4_93 -> m4_94  [key=0, style=solid];
m4_93 -> m4_101  [key=2, style=dotted];
m4_93 -> m4_95  [color=darkseagreen4, key=1, label=charsRead, style=dashed];
m4_93 -> m4_98  [color=darkseagreen4, key=1, label=charsRead, style=dashed];
m4_93 -> m4_11  [key=2, style=dotted];
m4_94 -> m4_95  [key=0, style=solid];
m4_94 -> m4_96  [key=0, style=solid];
m4_94 -> m4_100  [key=2, style=dotted];
m4_95 -> m4_96  [key=0, style=solid];
m4_95 -> m4_97  [key=0, style=solid];
m4_98 -> m4_99  [key=0, style=solid];
m4_98 -> m4_10  [key=2, style=dotted];
m4_98 -> m4_43  [key=2, style=dotted];
m4_96 -> m4_97  [key=0, style=solid];
m4_96 -> m4_10  [key=2, style=dotted];
m4_96 -> m4_19  [key=2, style=dotted];
m4_97 -> m4_98  [key=0, style=solid];
m4_97 -> m4_11  [key=2, style=dotted];
m4_99 -> m4_72  [color=blue, key=0, style=bold];
m4_99 -> m4_87  [color=blue, key=0, style=bold];
m4_1800 -> m4_1801  [key=0, style=solid];
m4_1802 -> m4_8  [key=2, style=dotted];
m4_1802 -> m4_1806  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1802 -> m4_1803  [key=0, style=solid];
m4_1802 -> m4_244  [key=2, style=dotted];
m4_1802 -> m4_284  [key=2, style=dotted];
m4_1802 -> m4_285  [key=2, style=dotted];
m4_1803 -> m4_57  [key=2, style=dotted];
m4_1803 -> m4_1804  [key=0, style=solid];
m4_1803 -> m4_1805  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1801 -> m4_1802  [key=0, style=solid];
m4_1804 -> m4_1800  [color=blue, key=0, style=bold];
m4_1706 -> m4_1707  [key=0, style=solid];
m4_1709 -> m4_10  [key=2, style=dotted];
m4_1709 -> m4_1710  [key=0, style=solid];
m4_1709 -> m4_19  [key=2, style=dotted];
m4_1713 -> m4_10  [key=2, style=dotted];
m4_1713 -> m4_1714  [key=0, style=solid];
m4_1713 -> m4_19  [key=2, style=dotted];
m4_1716 -> m4_10  [key=2, style=dotted];
m4_1716 -> m4_1717  [key=0, style=solid];
m4_1716 -> m4_19  [key=2, style=dotted];
m4_1719 -> m4_10  [key=2, style=dotted];
m4_1719 -> m4_1720  [key=0, style=solid];
m4_1719 -> m4_19  [key=2, style=dotted];
m4_1723 -> m4_10  [key=2, style=dotted];
m4_1723 -> m4_1724  [key=0, style=solid];
m4_1723 -> m4_19  [key=2, style=dotted];
m4_1726 -> m4_10  [key=2, style=dotted];
m4_1726 -> m4_1727  [key=0, style=solid];
m4_1726 -> m4_19  [key=2, style=dotted];
m4_1730 -> m4_10  [key=2, style=dotted];
m4_1730 -> m4_1731  [key=0, style=solid];
m4_1730 -> m4_19  [key=2, style=dotted];
m4_1734 -> m4_10  [key=2, style=dotted];
m4_1734 -> m4_1735  [key=0, style=solid];
m4_1734 -> m4_19  [key=2, style=dotted];
m4_1738 -> m4_10  [key=2, style=dotted];
m4_1738 -> m4_1739  [key=0, style=solid];
m4_1738 -> m4_19  [key=2, style=dotted];
m4_1742 -> m4_10  [key=2, style=dotted];
m4_1742 -> m4_1743  [key=0, style=solid];
m4_1742 -> m4_19  [key=2, style=dotted];
m4_1745 -> m4_10  [key=2, style=dotted];
m4_1745 -> m4_1746  [key=0, style=solid];
m4_1745 -> m4_19  [key=2, style=dotted];
m4_1749 -> m4_10  [key=2, style=dotted];
m4_1749 -> m4_1750  [key=0, style=solid];
m4_1749 -> m4_19  [key=2, style=dotted];
m4_1751 -> m4_10  [key=2, style=dotted];
m4_1751 -> m4_1752  [key=0, style=solid];
m4_1751 -> m4_19  [key=2, style=dotted];
m4_1754 -> m4_10  [key=2, style=dotted];
m4_1754 -> m4_1755  [key=0, style=solid];
m4_1754 -> m4_19  [key=2, style=dotted];
m4_1757 -> m4_10  [key=2, style=dotted];
m4_1757 -> m4_1758  [key=0, style=solid];
m4_1757 -> m4_19  [key=2, style=dotted];
m4_1760 -> m4_10  [key=2, style=dotted];
m4_1760 -> m4_1761  [key=0, style=solid];
m4_1760 -> m4_19  [key=2, style=dotted];
m4_1763 -> m4_10  [key=2, style=dotted];
m4_1763 -> m4_1764  [key=0, style=solid];
m4_1763 -> m4_19  [key=2, style=dotted];
m4_1765 -> m4_10  [key=2, style=dotted];
m4_1765 -> m4_1766  [key=0, style=solid];
m4_1765 -> m4_19  [key=2, style=dotted];
m4_1768 -> m4_10  [key=2, style=dotted];
m4_1768 -> m4_1769  [key=0, style=solid];
m4_1768 -> m4_19  [key=2, style=dotted];
m4_1770 -> m4_10  [key=2, style=dotted];
m4_1770 -> m4_1771  [key=0, style=solid];
m4_1770 -> m4_19  [key=2, style=dotted];
m4_1772 -> m4_10  [key=2, style=dotted];
m4_1772 -> m4_1773  [key=0, style=solid];
m4_1772 -> m4_19  [key=2, style=dotted];
m4_1774 -> m4_10  [key=2, style=dotted];
m4_1774 -> m4_1775  [key=0, style=solid];
m4_1774 -> m4_19  [key=2, style=dotted];
m4_1776 -> m4_10  [key=2, style=dotted];
m4_1776 -> m4_1777  [key=0, style=solid];
m4_1776 -> m4_19  [key=2, style=dotted];
m4_1778 -> m4_10  [key=2, style=dotted];
m4_1778 -> m4_1779  [key=0, style=solid];
m4_1778 -> m4_19  [key=2, style=dotted];
m4_1780 -> m4_10  [key=2, style=dotted];
m4_1780 -> m4_1781  [key=0, style=solid];
m4_1780 -> m4_19  [key=2, style=dotted];
m4_1782 -> m4_10  [key=2, style=dotted];
m4_1782 -> m4_1783  [key=0, style=solid];
m4_1782 -> m4_19  [key=2, style=dotted];
m4_1784 -> m4_10  [key=2, style=dotted];
m4_1784 -> m4_1785  [key=0, style=solid];
m4_1784 -> m4_19  [key=2, style=dotted];
m4_1787 -> m4_10  [key=2, style=dotted];
m4_1787 -> m4_1788  [key=0, style=solid];
m4_1787 -> m4_19  [key=2, style=dotted];
m4_1790 -> m4_10  [key=2, style=dotted];
m4_1790 -> m4_1791  [key=0, style=solid];
m4_1790 -> m4_43  [key=2, style=dotted];
m4_1708 -> m4_8  [key=2, style=dotted];
m4_1708 -> m4_1709  [key=0, style=solid];
m4_1708 -> m4_1713  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1716  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1719  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1723  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1726  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1730  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1734  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1738  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1742  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1745  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1749  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1751  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1754  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1757  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1760  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1763  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1765  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1768  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1770  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1772  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1774  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1776  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1778  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1780  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1782  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1784  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1787  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1790  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_244  [key=2, style=dotted];
m4_1708 -> m4_284  [key=2, style=dotted];
m4_1708 -> m4_285  [key=2, style=dotted];
m4_1708 -> m4_1710  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1711  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1712  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1714  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1715  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1717  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1718  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1720  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1721  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1722  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1724  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1725  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1727  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1728  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1729  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1731  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1732  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1733  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1735  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1736  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1737  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1739  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1740  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1741  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1743  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1744  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1746  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1747  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1748  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1750  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1752  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1753  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1755  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1756  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1758  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1759  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1761  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1762  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1764  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1766  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1767  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1769  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1771  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1773  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1775  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1777  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1779  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1781  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1783  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1785  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1786  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1788  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1708 -> m4_1789  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1710 -> m4_11  [key=2, style=dotted];
m4_1710 -> m4_1711  [key=0, style=solid];
m4_1711 -> m4_11  [key=2, style=dotted];
m4_1711 -> m4_1712  [key=0, style=solid];
m4_1712 -> m4_11  [key=2, style=dotted];
m4_1712 -> m4_1713  [key=0, style=solid];
m4_1714 -> m4_11  [key=2, style=dotted];
m4_1714 -> m4_1715  [key=0, style=solid];
m4_1715 -> m4_11  [key=2, style=dotted];
m4_1715 -> m4_1716  [key=0, style=solid];
m4_1717 -> m4_11  [key=2, style=dotted];
m4_1717 -> m4_1718  [key=0, style=solid];
m4_1718 -> m4_11  [key=2, style=dotted];
m4_1718 -> m4_1719  [key=0, style=solid];
m4_1720 -> m4_11  [key=2, style=dotted];
m4_1720 -> m4_1721  [key=0, style=solid];
m4_1721 -> m4_11  [key=2, style=dotted];
m4_1721 -> m4_1722  [key=0, style=solid];
m4_1722 -> m4_11  [key=2, style=dotted];
m4_1722 -> m4_1723  [key=0, style=solid];
m4_1724 -> m4_11  [key=2, style=dotted];
m4_1724 -> m4_1725  [key=0, style=solid];
m4_1725 -> m4_11  [key=2, style=dotted];
m4_1725 -> m4_1726  [key=0, style=solid];
m4_1727 -> m4_11  [key=2, style=dotted];
m4_1727 -> m4_1728  [key=0, style=solid];
m4_1728 -> m4_11  [key=2, style=dotted];
m4_1728 -> m4_1729  [key=0, style=solid];
m4_1729 -> m4_11  [key=2, style=dotted];
m4_1729 -> m4_1730  [key=0, style=solid];
m4_1731 -> m4_11  [key=2, style=dotted];
m4_1731 -> m4_1732  [key=0, style=solid];
m4_1732 -> m4_11  [key=2, style=dotted];
m4_1732 -> m4_1733  [key=0, style=solid];
m4_1733 -> m4_11  [key=2, style=dotted];
m4_1733 -> m4_1734  [key=0, style=solid];
m4_1735 -> m4_11  [key=2, style=dotted];
m4_1735 -> m4_1736  [key=0, style=solid];
m4_1736 -> m4_11  [key=2, style=dotted];
m4_1736 -> m4_1737  [key=0, style=solid];
m4_1737 -> m4_11  [key=2, style=dotted];
m4_1737 -> m4_1738  [key=0, style=solid];
m4_1739 -> m4_11  [key=2, style=dotted];
m4_1739 -> m4_1740  [key=0, style=solid];
m4_1740 -> m4_11  [key=2, style=dotted];
m4_1740 -> m4_1741  [key=0, style=solid];
m4_1741 -> m4_11  [key=2, style=dotted];
m4_1741 -> m4_1742  [key=0, style=solid];
m4_1743 -> m4_11  [key=2, style=dotted];
m4_1743 -> m4_1744  [key=0, style=solid];
m4_1744 -> m4_11  [key=2, style=dotted];
m4_1744 -> m4_1745  [key=0, style=solid];
m4_1746 -> m4_11  [key=2, style=dotted];
m4_1746 -> m4_1747  [key=0, style=solid];
m4_1747 -> m4_11  [key=2, style=dotted];
m4_1747 -> m4_1748  [key=0, style=solid];
m4_1748 -> m4_11  [key=2, style=dotted];
m4_1748 -> m4_1749  [key=0, style=solid];
m4_1750 -> m4_11  [key=2, style=dotted];
m4_1750 -> m4_1751  [key=0, style=solid];
m4_1752 -> m4_11  [key=2, style=dotted];
m4_1752 -> m4_1753  [key=0, style=solid];
m4_1753 -> m4_11  [key=2, style=dotted];
m4_1753 -> m4_1754  [key=0, style=solid];
m4_1755 -> m4_11  [key=2, style=dotted];
m4_1755 -> m4_1756  [key=0, style=solid];
m4_1756 -> m4_11  [key=2, style=dotted];
m4_1756 -> m4_1757  [key=0, style=solid];
m4_1758 -> m4_11  [key=2, style=dotted];
m4_1758 -> m4_1759  [key=0, style=solid];
m4_1759 -> m4_11  [key=2, style=dotted];
m4_1759 -> m4_1760  [key=0, style=solid];
m4_1761 -> m4_11  [key=2, style=dotted];
m4_1761 -> m4_1762  [key=0, style=solid];
m4_1762 -> m4_11  [key=2, style=dotted];
m4_1762 -> m4_1763  [key=0, style=solid];
m4_1764 -> m4_11  [key=2, style=dotted];
m4_1764 -> m4_1765  [key=0, style=solid];
m4_1766 -> m4_11  [key=2, style=dotted];
m4_1766 -> m4_1767  [key=0, style=solid];
m4_1767 -> m4_11  [key=2, style=dotted];
m4_1767 -> m4_1768  [key=0, style=solid];
m4_1769 -> m4_11  [key=2, style=dotted];
m4_1769 -> m4_1770  [key=0, style=solid];
m4_1771 -> m4_11  [key=2, style=dotted];
m4_1771 -> m4_1772  [key=0, style=solid];
m4_1773 -> m4_11  [key=2, style=dotted];
m4_1773 -> m4_1774  [key=0, style=solid];
m4_1775 -> m4_11  [key=2, style=dotted];
m4_1775 -> m4_1776  [key=0, style=solid];
m4_1777 -> m4_11  [key=2, style=dotted];
m4_1777 -> m4_1778  [key=0, style=solid];
m4_1779 -> m4_11  [key=2, style=dotted];
m4_1779 -> m4_1780  [key=0, style=solid];
m4_1781 -> m4_11  [key=2, style=dotted];
m4_1781 -> m4_1782  [key=0, style=solid];
m4_1783 -> m4_11  [key=2, style=dotted];
m4_1783 -> m4_1784  [key=0, style=solid];
m4_1785 -> m4_11  [key=2, style=dotted];
m4_1785 -> m4_1786  [key=0, style=solid];
m4_1786 -> m4_11  [key=2, style=dotted];
m4_1786 -> m4_1787  [key=0, style=solid];
m4_1788 -> m4_11  [key=2, style=dotted];
m4_1788 -> m4_1789  [key=0, style=solid];
m4_1789 -> m4_11  [key=2, style=dotted];
m4_1789 -> m4_1790  [key=0, style=solid];
m4_1707 -> m4_1708  [key=0, style=solid];
m4_1791 -> m4_1706  [color=blue, key=0, style=bold];
m4_1351 -> m4_1352  [key=0, style=solid];
m4_1355 -> m4_10  [key=2, style=dotted];
m4_1355 -> m4_1356  [key=0, style=solid];
m4_1355 -> m4_19  [key=2, style=dotted];
m4_1357 -> m4_10  [key=2, style=dotted];
m4_1357 -> m4_1358  [key=0, style=solid];
m4_1357 -> m4_19  [key=2, style=dotted];
m4_1364 -> m4_10  [key=2, style=dotted];
m4_1364 -> m4_1365  [key=0, style=solid];
m4_1364 -> m4_19  [key=2, style=dotted];
m4_1353 -> m4_8  [key=2, style=dotted];
m4_1353 -> m4_9  [key=2, style=dotted];
m4_1353 -> m4_1355  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1353 -> m4_1357  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1353 -> m4_1364  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1353 -> m4_1354  [key=0, style=solid];
m4_1353 -> m4_1356  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1353 -> m4_1358  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1353 -> m4_1359  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1353 -> m4_1360  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1353 -> m4_1361  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1353 -> m4_1362  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1353 -> m4_1365  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1356 -> m4_11  [key=2, style=dotted];
m4_1356 -> m4_1357  [key=0, style=solid];
m4_1358 -> m4_11  [key=2, style=dotted];
m4_1358 -> m4_1359  [key=0, style=solid];
m4_1360 -> m4_11  [key=2, style=dotted];
m4_1360 -> m4_1361  [key=0, style=solid];
m4_1361 -> m4_11  [key=2, style=dotted];
m4_1361 -> m4_1362  [key=0, style=solid];
m4_1365 -> m4_11  [key=2, style=dotted];
m4_1365 -> m4_1366  [key=0, style=solid];
m4_1363 -> m4_11  [key=2, style=dotted];
m4_1363 -> m4_1364  [key=0, style=solid];
m4_1363 -> m4_1363  [color=darkseagreen4, key=1, label=dt, style=dashed];
m4_1363 -> m4_1350  [key=2, style=dotted];
m4_1354 -> m4_1355  [key=0, style=solid];
m4_1354 -> m4_1367  [key=2, style=dotted];
m4_1352 -> m4_1353  [key=0, style=solid];
m4_1359 -> m4_1360  [key=0, style=solid];
m4_1359 -> m4_1192  [key=2, style=dotted];
m4_1362 -> m4_1363  [key=0, style=solid];
m4_1366 -> m4_1351  [color=blue, key=0, style=bold];
m4_517 -> m4_518  [key=0, style=solid];
m4_1200 -> m4_1201  [key=0, style=solid];
m4_1201 -> m4_8  [key=2, style=dotted];
m4_1201 -> m4_9  [key=2, style=dotted];
m4_1201 -> m4_1202  [key=0, style=solid];
m4_1201 -> m4_1205  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1202 -> m4_57  [key=2, style=dotted];
m4_1202 -> m4_1203  [key=0, style=solid];
m4_1202 -> m4_1204  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1203 -> m4_1200  [color=blue, key=0, style=bold];
m4_1280 -> m4_1281  [key=0, style=solid];
m4_1283 -> m4_10  [key=2, style=dotted];
m4_1283 -> m4_1284  [key=0, style=solid];
m4_1283 -> m4_19  [key=2, style=dotted];
m4_1285 -> m4_10  [key=2, style=dotted];
m4_1285 -> m4_1286  [key=0, style=solid];
m4_1285 -> m4_19  [key=2, style=dotted];
m4_1291 -> m4_10  [key=2, style=dotted];
m4_1291 -> m4_1292  [key=0, style=solid];
m4_1291 -> m4_19  [key=2, style=dotted];
m4_1282 -> m4_8  [key=2, style=dotted];
m4_1282 -> m4_9  [key=2, style=dotted];
m4_1282 -> m4_1283  [key=0, style=solid];
m4_1282 -> m4_1285  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1282 -> m4_1291  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1282 -> m4_1284  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1282 -> m4_1286  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1282 -> m4_1287  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1282 -> m4_1288  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1282 -> m4_1289  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1282 -> m4_1290  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1282 -> m4_1292  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1284 -> m4_11  [key=2, style=dotted];
m4_1284 -> m4_1285  [key=0, style=solid];
m4_1286 -> m4_11  [key=2, style=dotted];
m4_1286 -> m4_1287  [key=0, style=solid];
m4_1288 -> m4_11  [key=2, style=dotted];
m4_1288 -> m4_1289  [key=0, style=solid];
m4_1289 -> m4_11  [key=2, style=dotted];
m4_1289 -> m4_1290  [key=0, style=solid];
m4_1290 -> m4_11  [key=2, style=dotted];
m4_1290 -> m4_1291  [key=0, style=solid];
m4_1290 -> m4_1277  [key=2, style=dotted];
m4_1290 -> m4_1278  [key=2, style=dotted];
m4_1290 -> m4_1279  [key=2, style=dotted];
m4_1292 -> m4_11  [key=2, style=dotted];
m4_1292 -> m4_1293  [key=0, style=solid];
m4_1281 -> m4_1282  [key=0, style=solid];
m4_1287 -> m4_1288  [key=0, style=solid];
m4_1287 -> m4_1192  [key=2, style=dotted];
m4_1293 -> m4_1280  [color=blue, key=0, style=bold];
m4_1408 -> m4_1409  [key=0, style=solid];
m4_1409 -> m4_8  [key=2, style=dotted];
m4_1409 -> m4_9  [key=2, style=dotted];
m4_1409 -> m4_1413  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1409 -> m4_1410  [key=0, style=solid];
m4_1410 -> m4_57  [key=2, style=dotted];
m4_1410 -> m4_1411  [key=0, style=solid];
m4_1410 -> m4_1412  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1411 -> m4_1408  [color=blue, key=0, style=bold];
m4_960 -> m4_500  [color=darkorchid, key=3, label="Local variable char quoteChar", style=bold];
m4_1235 -> m4_1236  [key=0, style=solid];
m4_1238 -> m4_10  [key=2, style=dotted];
m4_1238 -> m4_1239  [key=0, style=solid];
m4_1238 -> m4_19  [key=2, style=dotted];
m4_1240 -> m4_10  [key=2, style=dotted];
m4_1240 -> m4_1241  [key=0, style=solid];
m4_1240 -> m4_19  [key=2, style=dotted];
m4_1243 -> m4_10  [key=2, style=dotted];
m4_1243 -> m4_1244  [key=0, style=solid];
m4_1243 -> m4_19  [key=2, style=dotted];
m4_1246 -> m4_10  [key=2, style=dotted];
m4_1246 -> m4_1247  [key=0, style=solid];
m4_1246 -> m4_19  [key=2, style=dotted];
m4_1248 -> m4_10  [key=2, style=dotted];
m4_1248 -> m4_1249  [key=0, style=solid];
m4_1248 -> m4_43  [key=2, style=dotted];
m4_1237 -> m4_8  [key=2, style=dotted];
m4_1237 -> m4_9  [key=2, style=dotted];
m4_1237 -> m4_1238  [key=0, style=solid];
m4_1237 -> m4_1240  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1237 -> m4_1243  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1237 -> m4_1246  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1237 -> m4_1248  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1237 -> m4_1239  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1237 -> m4_1241  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1237 -> m4_1242  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1237 -> m4_1244  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1237 -> m4_1245  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1237 -> m4_1247  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_1239 -> m4_11  [key=2, style=dotted];
m4_1239 -> m4_1240  [key=0, style=solid];
m4_1241 -> m4_11  [key=2, style=dotted];
m4_1241 -> m4_1242  [key=0, style=solid];
m4_1242 -> m4_11  [key=2, style=dotted];
m4_1242 -> m4_1243  [key=0, style=solid];
m4_1244 -> m4_11  [key=2, style=dotted];
m4_1244 -> m4_1245  [key=0, style=solid];
m4_1245 -> m4_11  [key=2, style=dotted];
m4_1245 -> m4_1246  [key=0, style=solid];
m4_1247 -> m4_11  [key=2, style=dotted];
m4_1247 -> m4_1248  [key=0, style=solid];
m4_1236 -> m4_1237  [key=0, style=solid];
m4_1249 -> m4_1235  [color=blue, key=0, style=bold];
m4_2155 -> m4_840  [color=green, key=1, label=reader, style=dashed];
m4_2155 -> m4_846  [color=green, key=1, label=reader, style=dashed];
m4_2155 -> m4_837  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2155 -> m4_843  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2155 -> m4_849  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2157 -> m4_915  [color=green, key=1, label=reader, style=dashed];
m4_2157 -> m4_912  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2140 -> m4_125  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2140 -> m4_132  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2140 -> m4_128  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2141 -> m4_148  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2142 -> m4_185  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2144 -> m4_292  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2145 -> m4_310  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2146 -> m4_323  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2156 -> m4_877  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2156 -> m4_874  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2156 -> m4_880  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2158 -> m4_1090  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2159 -> m4_1168  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2168 -> m4_1413  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2169 -> m4_1420  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2170 -> m4_1427  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2171 -> m4_1434  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2172 -> m4_1441  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2173 -> m4_1586  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2174 -> m4_1594  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2175 -> m4_1625  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2176 -> m4_1642  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2177 -> m4_1806  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2179 -> m4_1901  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2180 -> m4_1933  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2180 -> m4_1936  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2181 -> m4_2058  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2181 -> m4_2061  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2181 -> m4_2064  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2181 -> m4_2067  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2181 -> m4_2070  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2181 -> m4_2073  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2148 -> m4_575  [color=darkseagreen4, key=1, label=total, style=dashed];
m4_2149 -> m4_591  [color=darkseagreen4, key=1, label=total, style=dashed];
m4_2182 -> m4_2098  [color=darkseagreen4, key=1, label=json, style=dashed];
m4_2138 -> m4_59  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2139 -> m4_76  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2139 -> m4_79  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2139 -> m4_82  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2139 -> m4_85  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m4_2167 -> m4_1406  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2143 -> m4_222  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m4_2143 -> m4_223  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m4_2143 -> m4_224  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m4_2143 -> m4_225  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m4_2143 -> m4_226  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m4_2143 -> m4_227  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m4_2143 -> m4_228  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m4_2143 -> m4_229  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m4_2143 -> m4_230  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m4_2143 -> m4_231  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m4_2143 -> m4_232  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m4_2143 -> m4_233  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m4_2161 -> m4_1198  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2147 -> m4_485  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2150 -> m4_644  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2151 -> m4_651  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2152 -> m4_658  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2153 -> m4_669  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2154 -> m4_684  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2160 -> m4_1185  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2162 -> m4_1205  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2163 -> m4_1212  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2164 -> m4_1226  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2165 -> m4_1233  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2166 -> m4_1304  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2178 -> m4_1845  [color=darkseagreen4, key=1, label=reader, style=dashed];
m4_2183 -> m4_2101  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.ToggleReaderError", style=dashed];
m4_2183 -> m4_2104  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.ToggleReaderError", style=dashed];
m4_2183 -> m4_2106  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.ToggleReaderError", style=dashed];
m6_5 -> m6_6  [key=0, style=solid];
m6_6 -> m6_7  [key=0, style=solid];
m6_6 -> m6_8  [key=2, style=dotted];
m6_7 -> m6_5  [color=blue, key=0, style=bold];
m6_86 -> m6_103  [key=0, style=solid];
m6_86 -> m6_104  [color=darkseagreen4, key=1, label="int?", style=dashed];
m6_86 -> m6_105  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_103 -> m6_104  [key=0, style=solid];
m6_103 -> m6_105  [key=0, style=solid];
m6_104 -> m6_105  [key=0, style=solid];
m6_104 -> m6_84  [key=2, style=dotted];
m6_105 -> m6_106  [key=0, style=solid];
m6_105 -> m6_108  [key=2, style=dotted];
m6_106 -> m6_107  [key=0, style=solid];
m6_106 -> m6_87  [key=2, style=dotted];
m6_107 -> m6_86  [color=blue, key=0, style=bold];
m6_123 -> m6_124  [key=0, style=solid];
m6_124 -> m6_125  [key=0, style=solid];
m6_125 -> m6_123  [color=blue, key=0, style=bold];
m6_18 -> m6_19  [key=0, style=solid];
m6_18 -> m6_21  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonToken", style=dashed];
m6_18 -> m6_29  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonToken", style=dashed];
m6_18 -> m6_39  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonToken", style=dashed];
m6_18 -> m6_42  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonToken", style=dashed];
m6_18 -> m6_45  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonToken", style=dashed];
m6_18 -> m6_48  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonToken", style=dashed];
m6_18 -> m6_51  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonToken", style=dashed];
m6_18 -> m6_56  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonToken", style=dashed];
m6_18 -> m6_69  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonToken", style=dashed];
m6_18 -> m6_75  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonToken", style=dashed];
m6_18 -> m6_79  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonToken", style=dashed];
m6_18 -> m6_82  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonToken", style=dashed];
m6_19 -> m6_20  [key=0, style=solid];
m6_19 -> m6_28  [key=0, style=solid];
m6_19 -> m6_38  [key=0, style=solid];
m6_19 -> m6_41  [key=0, style=solid];
m6_19 -> m6_44  [key=0, style=solid];
m6_19 -> m6_47  [key=0, style=solid];
m6_19 -> m6_50  [key=0, style=solid];
m6_19 -> m6_53  [key=0, style=solid];
m6_19 -> m6_55  [key=0, style=solid];
m6_19 -> m6_68  [key=0, style=solid];
m6_19 -> m6_74  [key=0, style=solid];
m6_19 -> m6_78  [key=0, style=solid];
m6_19 -> m6_82  [key=0, style=solid];
m6_21 -> m6_22  [key=0, style=solid];
m6_21 -> m6_23  [color=darkseagreen4, key=1, label=value, style=dashed];
m6_29 -> m6_30  [key=0, style=solid];
m6_29 -> m6_32  [color=darkseagreen4, key=1, label=value, style=dashed];
m6_39 -> m6_40  [key=0, style=solid];
m6_42 -> m6_43  [key=0, style=solid];
m6_45 -> m6_46  [key=0, style=solid];
m6_48 -> m6_49  [key=0, style=solid];
m6_51 -> m6_52  [key=0, style=solid];
m6_56 -> m6_57  [key=0, style=solid];
m6_56 -> m6_58  [color=darkseagreen4, key=1, label=value, style=dashed];
m6_56 -> m6_59  [color=darkseagreen4, key=1, label=value, style=dashed];
m6_56 -> m6_65  [color=darkseagreen4, key=1, label=value, style=dashed];
m6_69 -> m6_70  [key=0, style=solid];
m6_75 -> m6_76  [key=0, style=solid];
m6_79 -> m6_80  [key=0, style=solid];
m6_79 -> m6_81  [color=darkseagreen4, key=1, label=value, style=dashed];
m6_82 -> m6_83  [key=0, style=solid];
m6_82 -> m6_101  [key=2, style=dotted];
m6_82 -> m6_102  [key=2, style=dotted];
m6_20 -> m6_21  [key=0, style=solid];
m6_28 -> m6_29  [key=0, style=solid];
m6_38 -> m6_39  [key=0, style=solid];
m6_41 -> m6_42  [key=0, style=solid];
m6_44 -> m6_45  [key=0, style=solid];
m6_47 -> m6_48  [key=0, style=solid];
m6_50 -> m6_51  [key=0, style=solid];
m6_53 -> m6_54  [key=0, style=solid];
m6_55 -> m6_56  [key=0, style=solid];
m6_68 -> m6_69  [key=0, style=solid];
m6_74 -> m6_75  [key=0, style=solid];
m6_78 -> m6_79  [key=0, style=solid];
m6_22 -> m6_23  [key=0, style=solid];
m6_22 -> m6_84  [key=2, style=dotted];
m6_23 -> m6_24  [key=0, style=solid];
m6_23 -> m6_27  [key=0, style=solid];
m6_23 -> m6_25  [color=darkseagreen4, key=1, label=property, style=dashed];
m6_23 -> m6_26  [color=darkseagreen4, key=1, label=property, style=dashed];
m6_24 -> m6_25  [key=0, style=solid];
m6_24 -> m6_85  [key=2, style=dotted];
m6_27 -> m6_83  [key=0, style=solid];
m6_27 -> m6_87  [key=2, style=dotted];
m6_25 -> m6_26  [key=0, style=solid];
m6_25 -> m6_86  [key=2, style=dotted];
m6_26 -> m6_23  [key=0, style=solid];
m6_26 -> m6_18  [key=2, style=dotted];
m6_30 -> m6_31  [key=0, style=solid];
m6_30 -> m6_84  [key=2, style=dotted];
m6_32 -> m6_33  [key=0, style=solid];
m6_32 -> m6_37  [key=0, style=solid];
m6_32 -> m6_35  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_31 -> m6_32  [key=0, style=solid];
m6_31 -> m6_34  [color=darkseagreen4, key=1, label=index, style=dashed];
m6_31 -> m6_36  [color=darkseagreen4, key=1, label=index, style=dashed];
m6_34 -> m6_35  [key=0, style=solid];
m6_34 -> m6_88  [key=2, style=dotted];
m6_34 -> m6_89  [key=2, style=dotted];
m6_34 -> m6_86  [key=2, style=dotted];
m6_36 -> m6_32  [key=0, style=solid];
m6_36 -> m6_36  [color=darkseagreen4, key=1, label=index, style=dashed];
m6_33 -> m6_34  [key=0, style=solid];
m6_33 -> m6_85  [key=2, style=dotted];
m6_37 -> m6_83  [key=0, style=solid];
m6_37 -> m6_87  [key=2, style=dotted];
m6_35 -> m6_36  [key=0, style=solid];
m6_35 -> m6_18  [key=2, style=dotted];
m6_40 -> m6_83  [key=0, style=solid];
m6_40 -> m6_90  [key=2, style=dotted];
m6_40 -> m6_84  [key=2, style=dotted];
m6_43 -> m6_83  [key=0, style=solid];
m6_43 -> m6_91  [key=2, style=dotted];
m6_43 -> m6_92  [key=2, style=dotted];
m6_46 -> m6_83  [key=0, style=solid];
m6_46 -> m6_93  [key=2, style=dotted];
m6_46 -> m6_94  [key=2, style=dotted];
m6_49 -> m6_83  [key=0, style=solid];
m6_49 -> m6_86  [key=2, style=dotted];
m6_52 -> m6_83  [key=0, style=solid];
m6_52 -> m6_95  [key=2, style=dotted];
m6_54 -> m6_83  [key=0, style=solid];
m6_57 -> m6_58  [key=0, style=solid];
m6_58 -> m6_59  [key=0, style=solid];
m6_58 -> m6_65  [key=0, style=solid];
m6_59 -> m6_60  [key=0, style=solid];
m6_59 -> m6_61  [color=darkseagreen4, key=1, label=dateTime, style=dashed];
m6_59 -> m6_63  [color=darkseagreen4, key=1, label=dateTime, style=dashed];
m6_59 -> m6_64  [color=darkseagreen4, key=1, label=dateTime, style=dashed];
m6_65 -> m6_66  [key=0, style=solid];
m6_60 -> m6_61  [key=0, style=solid];
m6_60 -> m6_62  [key=0, style=solid];
m6_61 -> m6_64  [key=0, style=solid];
m6_61 -> m6_96  [key=2, style=dotted];
m6_61 -> m6_61  [color=darkseagreen4, key=1, label=dateTime, style=dashed];
m6_63 -> m6_64  [key=0, style=solid];
m6_63 -> m6_97  [key=2, style=dotted];
m6_63 -> m6_63  [color=darkseagreen4, key=1, label=dateTime, style=dashed];
m6_64 -> m6_67  [key=0, style=solid];
m6_64 -> m6_98  [key=2, style=dotted];
m6_62 -> m6_63  [key=0, style=solid];
m6_62 -> m6_64  [key=0, style=solid];
m6_66 -> m6_67  [key=0, style=solid];
m6_66 -> m6_99  [key=2, style=dotted];
m6_66 -> m6_66  [color=darkseagreen4, key=1, label=dateTimeOffset, style=dashed];
m6_67 -> m6_83  [key=0, style=solid];
m6_67 -> m6_92  [key=2, style=dotted];
m6_70 -> m6_71  [key=0, style=solid];
m6_70 -> m6_73  [color=darkseagreen4, key=1, label=data, style=dashed];
m6_71 -> m6_72  [key=0, style=solid];
m6_71 -> m6_84  [key=2, style=dotted];
m6_73 -> m6_83  [key=0, style=solid];
m6_73 -> m6_100  [key=2, style=dotted];
m6_72 -> m6_73  [key=0, style=solid];
m6_72 -> m6_87  [key=2, style=dotted];
m6_76 -> m6_77  [key=0, style=solid];
m6_77 -> m6_83  [key=0, style=solid];
m6_77 -> m6_100  [key=2, style=dotted];
m6_80 -> m6_81  [key=0, style=solid];
m6_80 -> m6_86  [key=2, style=dotted];
m6_81 -> m6_83  [key=0, style=solid];
m6_81 -> m6_86  [key=2, style=dotted];
m6_83 -> m6_18  [color=blue, key=0, style=bold];
m6_108 -> m6_109  [key=0, style=solid];
m6_108 -> m6_113  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_108 -> m6_114  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_108 -> m6_115  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_108 -> m6_116  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_109 -> m6_110  [key=0, style=solid];
m6_109 -> m6_118  [key=0, style=solid];
m6_113 -> m6_114  [key=0, style=solid];
m6_113 -> m6_116  [key=0, style=solid];
m6_114 -> m6_115  [key=0, style=solid];
m6_114 -> m6_120  [key=2, style=dotted];
m6_115 -> m6_118  [key=0, style=solid];
m6_115 -> m6_121  [key=2, style=dotted];
m6_116 -> m6_117  [key=0, style=solid];
m6_116 -> m6_122  [key=2, style=dotted];
m6_110 -> m6_111  [key=0, style=solid];
m6_110 -> m6_113  [key=0, style=solid];
m6_111 -> m6_112  [key=0, style=solid];
m6_112 -> m6_113  [key=0, style=solid];
m6_112 -> m6_119  [key=2, style=dotted];
m6_117 -> m6_118  [key=0, style=solid];
m6_117 -> m6_100  [key=2, style=dotted];
m6_118 -> m6_108  [color=blue, key=0, style=bold];
m6_9 -> m6_10  [key=0, style=solid];
m6_10 -> m6_11  [key=0, style=solid];
m6_10 -> m6_12  [key=2, style=dotted];
m6_11 -> m6_9  [color=blue, key=0, style=bold];
m6_0 -> m6_1  [key=0, style=solid];
m6_0 -> m6_2  [color=darkseagreen4, key=1, label="System.IO.Stream", style=dashed];
m6_1 -> m6_2  [key=0, style=solid];
m6_2 -> m6_3  [key=0, style=solid];
m6_2 -> m6_4  [key=2, style=dotted];
m6_3 -> m6_0  [color=blue, key=0, style=bold];
m6_13 -> m6_14  [key=0, style=solid];
m6_13 -> m6_15  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonToken", style=dashed];
m6_14 -> m6_15  [key=0, style=solid];
m6_14 -> m6_17  [key=2, style=dotted];
m6_15 -> m6_16  [key=0, style=solid];
m6_15 -> m6_18  [key=2, style=dotted];
m6_16 -> m6_13  [color=blue, key=0, style=bold];
m6_126 -> m6_127  [key=0, style=solid];
m6_126 -> m6_128  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_127 -> m6_128  [key=0, style=solid];
m6_128 -> m6_129  [key=0, style=solid];
m6_129 -> m6_126  [color=blue, key=0, style=bold];
m6_17 -> m6_130  [key=0, style=solid];
m6_17 -> m6_132  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonToken", style=dashed];
m6_17 -> m6_143  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonToken", style=dashed];
m6_17 -> m6_161  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonToken", style=dashed];
m6_17 -> m6_174  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonToken", style=dashed];
m6_17 -> m6_181  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonToken", style=dashed];
m6_17 -> m6_187  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonToken", style=dashed];
m6_130 -> m6_131  [key=0, style=solid];
m6_130 -> m6_142  [key=0, style=solid];
m6_130 -> m6_154  [key=0, style=solid];
m6_130 -> m6_156  [key=0, style=solid];
m6_130 -> m6_158  [key=0, style=solid];
m6_130 -> m6_160  [key=0, style=solid];
m6_130 -> m6_166  [key=0, style=solid];
m6_130 -> m6_168  [key=0, style=solid];
m6_130 -> m6_171  [key=0, style=solid];
m6_130 -> m6_173  [key=0, style=solid];
m6_130 -> m6_178  [key=0, style=solid];
m6_130 -> m6_180  [key=0, style=solid];
m6_130 -> m6_187  [key=0, style=solid];
m6_132 -> m6_133  [key=0, style=solid];
m6_132 -> m6_134  [color=darkseagreen4, key=1, label=value, style=dashed];
m6_132 -> m6_140  [color=darkseagreen4, key=1, label=value, style=dashed];
m6_143 -> m6_144  [key=0, style=solid];
m6_143 -> m6_146  [color=darkseagreen4, key=1, label=value, style=dashed];
m6_143 -> m6_152  [color=darkseagreen4, key=1, label=value, style=dashed];
m6_143 -> m6_153  [color=darkseagreen4, key=1, label=value, style=dashed];
m6_161 -> m6_162  [key=0, style=solid];
m6_161 -> m6_163  [color=darkseagreen4, key=1, label=value, style=dashed];
m6_161 -> m6_164  [color=darkseagreen4, key=1, label=value, style=dashed];
m6_161 -> m6_165  [color=darkseagreen4, key=1, label=value, style=dashed];
m6_174 -> m6_175  [key=0, style=solid];
m6_174 -> m6_176  [color=darkseagreen4, key=1, label=value, style=dashed];
m6_174 -> m6_177  [color=darkseagreen4, key=1, label=value, style=dashed];
m6_181 -> m6_182  [key=0, style=solid];
m6_181 -> m6_183  [color=darkseagreen4, key=1, label=value, style=dashed];
m6_181 -> m6_184  [color=darkseagreen4, key=1, label=value, style=dashed];
m6_181 -> m6_185  [color=darkseagreen4, key=1, label=value, style=dashed];
m6_181 -> m6_186  [color=darkseagreen4, key=1, label=value, style=dashed];
m6_187 -> m6_188  [key=0, style=solid];
m6_187 -> m6_101  [key=2, style=dotted];
m6_187 -> m6_102  [key=2, style=dotted];
m6_131 -> m6_132  [key=0, style=solid];
m6_142 -> m6_143  [key=0, style=solid];
m6_154 -> m6_155  [key=0, style=solid];
m6_156 -> m6_157  [key=0, style=solid];
m6_158 -> m6_159  [key=0, style=solid];
m6_160 -> m6_161  [key=0, style=solid];
m6_166 -> m6_167  [key=0, style=solid];
m6_168 -> m6_169  [key=0, style=solid];
m6_171 -> m6_172  [key=0, style=solid];
m6_173 -> m6_174  [key=0, style=solid];
m6_178 -> m6_179  [key=0, style=solid];
m6_180 -> m6_181  [key=0, style=solid];
m6_133 -> m6_134  [key=0, style=solid];
m6_133 -> m6_138  [color=darkseagreen4, key=1, label=bases, style=dashed];
m6_133 -> m6_139  [color=darkseagreen4, key=1, label=bases, style=dashed];
m6_134 -> m6_135  [key=0, style=solid];
m6_134 -> m6_139  [key=0, style=solid];
m6_134 -> m6_136  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_134 -> m6_137  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_140 -> m6_141  [key=0, style=solid];
m6_138 -> m6_134  [key=0, style=solid];
m6_138 -> m6_138  [color=darkseagreen4, key=1, label=bases, style=dashed];
m6_138 -> m6_139  [color=darkseagreen4, key=1, label=bases, style=dashed];
m6_139 -> m6_140  [key=0, style=solid];
m6_139 -> m6_139  [color=darkseagreen4, key=1, label=bases, style=dashed];
m6_139 -> m6_141  [color=darkseagreen4, key=1, label=bases, style=dashed];
m6_135 -> m6_136  [key=0, style=solid];
m6_136 -> m6_137  [key=0, style=solid];
m6_136 -> m6_17  [key=2, style=dotted];
m6_136 -> m6_136  [color=darkseagreen4, key=1, label=size, style=dashed];
m6_137 -> m6_138  [key=0, style=solid];
m6_137 -> m6_17  [key=2, style=dotted];
m6_137 -> m6_137  [color=darkseagreen4, key=1, label=size, style=dashed];
m6_141 -> m6_188  [key=0, style=solid];
m6_144 -> m6_145  [key=0, style=solid];
m6_144 -> m6_147  [color=darkseagreen4, key=1, label=size, style=dashed];
m6_144 -> m6_151  [color=darkseagreen4, key=1, label=size, style=dashed];
m6_146 -> m6_147  [key=0, style=solid];
m6_146 -> m6_151  [key=0, style=solid];
m6_146 -> m6_149  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_152 -> m6_153  [key=0, style=solid];
m6_153 -> m6_188  [key=0, style=solid];
m6_145 -> m6_146  [key=0, style=solid];
m6_145 -> m6_148  [color=darkseagreen4, key=1, label=index, style=dashed];
m6_145 -> m6_150  [color=darkseagreen4, key=1, label=index, style=dashed];
m6_147 -> m6_148  [key=0, style=solid];
m6_147 -> m6_147  [color=darkseagreen4, key=1, label=size, style=dashed];
m6_151 -> m6_152  [key=0, style=solid];
m6_151 -> m6_151  [color=darkseagreen4, key=1, label=size, style=dashed];
m6_148 -> m6_149  [key=0, style=solid];
m6_148 -> m6_89  [key=2, style=dotted];
m6_148 -> m6_123  [key=2, style=dotted];
m6_148 -> m6_148  [color=darkseagreen4, key=1, label=size, style=dashed];
m6_150 -> m6_146  [key=0, style=solid];
m6_150 -> m6_150  [color=darkseagreen4, key=1, label=index, style=dashed];
m6_149 -> m6_150  [key=0, style=solid];
m6_149 -> m6_17  [key=2, style=dotted];
m6_149 -> m6_149  [color=darkseagreen4, key=1, label=size, style=dashed];
m6_149 -> m6_151  [color=darkseagreen4, key=1, label=size, style=dashed];
m6_155 -> m6_188  [key=0, style=solid];
m6_157 -> m6_188  [key=0, style=solid];
m6_159 -> m6_188  [key=0, style=solid];
m6_162 -> m6_163  [key=0, style=solid];
m6_163 -> m6_164  [key=0, style=solid];
m6_163 -> m6_189  [key=2, style=dotted];
m6_164 -> m6_165  [key=0, style=solid];
m6_164 -> m6_126  [key=2, style=dotted];
m6_165 -> m6_188  [key=0, style=solid];
m6_167 -> m6_188  [key=0, style=solid];
m6_169 -> m6_170  [key=0, style=solid];
m6_170 -> m6_188  [key=0, style=solid];
m6_172 -> m6_188  [key=0, style=solid];
m6_175 -> m6_176  [key=0, style=solid];
m6_176 -> m6_177  [key=0, style=solid];
m6_177 -> m6_188  [key=0, style=solid];
m6_179 -> m6_188  [key=0, style=solid];
m6_182 -> m6_183  [key=0, style=solid];
m6_183 -> m6_184  [key=0, style=solid];
m6_183 -> m6_17  [key=2, style=dotted];
m6_183 -> m6_183  [color=darkseagreen4, key=1, label=size, style=dashed];
m6_184 -> m6_185  [key=0, style=solid];
m6_184 -> m6_17  [key=2, style=dotted];
m6_184 -> m6_184  [color=darkseagreen4, key=1, label=size, style=dashed];
m6_185 -> m6_186  [key=0, style=solid];
m6_186 -> m6_188  [key=0, style=solid];
m6_188 -> m6_17  [color=blue, key=0, style=bold];
m6_190 -> m6_1  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonBinaryWriter", style=dashed];
m6_190 -> m6_2  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonBinaryWriter", style=dashed];
m6_190 -> m6_6  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonBinaryWriter", style=dashed];
m6_190 -> m6_10  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonBinaryWriter", style=dashed];
m6_190 -> m6_14  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonBinaryWriter", style=dashed];
m6_190 -> m6_15  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonBinaryWriter", style=dashed];
m6_190 -> m6_22  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonBinaryWriter", style=dashed];
m6_190 -> m6_24  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonBinaryWriter", style=dashed];
m6_190 -> m6_25  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonBinaryWriter", style=dashed];
m6_190 -> m6_26  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonBinaryWriter", style=dashed];
m6_190 -> m6_27  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonBinaryWriter", style=dashed];
m6_190 -> m6_30  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonBinaryWriter", style=dashed];
m6_190 -> m6_33  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonBinaryWriter", style=dashed];
m6_190 -> m6_34  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonBinaryWriter", style=dashed];
m6_190 -> m6_35  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonBinaryWriter", style=dashed];
m6_190 -> m6_37  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonBinaryWriter", style=dashed];
m6_190 -> m6_40  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonBinaryWriter", style=dashed];
m6_190 -> m6_43  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonBinaryWriter", style=dashed];
m6_190 -> m6_46  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonBinaryWriter", style=dashed];
m6_190 -> m6_49  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonBinaryWriter", style=dashed];
m6_190 -> m6_52  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonBinaryWriter", style=dashed];
m6_190 -> m6_60  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonBinaryWriter", style=dashed];
m6_190 -> m6_62  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonBinaryWriter", style=dashed];
m6_190 -> m6_67  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonBinaryWriter", style=dashed];
m6_190 -> m6_71  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonBinaryWriter", style=dashed];
m6_190 -> m6_72  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonBinaryWriter", style=dashed];
m6_190 -> m6_73  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonBinaryWriter", style=dashed];
m6_190 -> m6_77  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonBinaryWriter", style=dashed];
m6_190 -> m6_80  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonBinaryWriter", style=dashed];
m6_190 -> m6_81  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonBinaryWriter", style=dashed];
m6_190 -> m6_104  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonBinaryWriter", style=dashed];
m6_190 -> m6_105  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonBinaryWriter", style=dashed];
m6_190 -> m6_106  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonBinaryWriter", style=dashed];
m6_190 -> m6_110  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonBinaryWriter", style=dashed];
m6_190 -> m6_111  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonBinaryWriter", style=dashed];
m6_190 -> m6_112  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonBinaryWriter", style=dashed];
m6_190 -> m6_114  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonBinaryWriter", style=dashed];
m6_190 -> m6_115  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonBinaryWriter", style=dashed];
m6_190 -> m6_117  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonBinaryWriter", style=dashed];
m6_190 -> m6_136  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonBinaryWriter", style=dashed];
m6_190 -> m6_137  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonBinaryWriter", style=dashed];
m6_190 -> m6_148  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonBinaryWriter", style=dashed];
m6_190 -> m6_149  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonBinaryWriter", style=dashed];
m6_190 -> m6_164  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonBinaryWriter", style=dashed];
m6_190 -> m6_183  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonBinaryWriter", style=dashed];
m6_190 -> m6_184  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonBinaryWriter", style=dashed];
m7_293 -> m7_294  [key=0, style=solid];
m7_293 -> m7_296  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_293 -> m7_298  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_293 -> m7_136  [color=darkorchid, key=3, label="method methodReturn byte? op_Explicit", style=bold];
m7_294 -> m7_295  [key=0, style=solid];
m7_294 -> m7_296  [key=0, style=solid];
m7_296 -> m7_297  [key=0, style=solid];
m7_296 -> m7_89  [key=2, style=dotted];
m7_296 -> m7_299  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_296 -> m7_300  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_296 -> m7_301  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_298 -> m7_302  [key=0, style=solid];
m7_298 -> m7_118  [key=2, style=dotted];
m7_298 -> m7_98  [key=2, style=dotted];
m7_298 -> m7_61  [key=2, style=dotted];
m7_295 -> m7_302  [key=0, style=solid];
m7_297 -> m7_298  [key=0, style=solid];
m7_297 -> m7_299  [key=0, style=solid];
m7_297 -> m7_106  [key=2, style=dotted];
m7_299 -> m7_300  [key=0, style=solid];
m7_299 -> m7_301  [key=0, style=solid];
m7_300 -> m7_302  [key=0, style=solid];
m7_301 -> m7_302  [key=0, style=solid];
m7_301 -> m7_253  [key=2, style=dotted];
m7_302 -> m7_293  [color=blue, key=0, style=bold];
m7_98 -> m7_99  [key=0, style=solid];
m7_98 -> m7_100  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_98 -> m7_101  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_98 -> m7_102  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_98 -> m7_110  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken token", style=bold];
m7_98 -> m7_121  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken token", style=bold];
m7_98 -> m7_134  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken token", style=bold];
m7_98 -> m7_144  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken token", style=bold];
m7_98 -> m7_153  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken token", style=bold];
m7_98 -> m7_163  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken token", style=bold];
m7_98 -> m7_177  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken token", style=bold];
m7_98 -> m7_188  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken token", style=bold];
m7_98 -> m7_199  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken token", style=bold];
m7_98 -> m7_210  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken token", style=bold];
m7_98 -> m7_219  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken token", style=bold];
m7_98 -> m7_228  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken token", style=bold];
m7_98 -> m7_237  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken token", style=bold];
m7_98 -> m7_245  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken token", style=bold];
m7_98 -> m7_254  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken token", style=bold];
m7_98 -> m7_263  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken token", style=bold];
m7_98 -> m7_273  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken token", style=bold];
m7_98 -> m7_283  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken token", style=bold];
m7_98 -> m7_293  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken token", style=bold];
m7_98 -> m7_303  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken token", style=bold];
m7_98 -> m7_313  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken token", style=bold];
m7_98 -> m7_321  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken token", style=bold];
m7_98 -> m7_331  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken token", style=bold];
m7_98 -> m7_342  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken token", style=bold];
m7_98 -> m7_350  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken token", style=bold];
m7_98 -> m7_361  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken token", style=bold];
m7_98 -> m7_372  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken token", style=bold];
m7_98 -> m7_380  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken token", style=bold];
m7_98 -> m7_388  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken token", style=bold];
m7_98 -> m7_405  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken token", style=bold];
m7_98 -> m7_413  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken token", style=bold];
m7_98 -> m7_421  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken token", style=bold];
m7_98 -> m7_437  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken token", style=bold];
m7_98 -> m7_447  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken token", style=bold];
m7_98 -> m7_459  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken token", style=bold];
m7_98 -> m7_466  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken token", style=bold];
m7_98 -> m7_476  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken token", style=bold];
m7_98 -> m7_487  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken token", style=bold];
m7_98 -> m7_494  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken token", style=bold];
m7_99 -> m7_100  [key=0, style=solid];
m7_99 -> m7_104  [key=2, style=dotted];
m7_100 -> m7_101  [key=0, style=solid];
m7_100 -> m7_102  [key=0, style=solid];
m7_101 -> m7_102  [key=0, style=solid];
m7_101 -> m7_101  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_102 -> m7_103  [key=0, style=solid];
m7_102 -> m7_105  [key=2, style=dotted];
m7_103 -> m7_98  [color=blue, key=0, style=bold];
m7_781 -> m7_782  [key=0, style=solid];
m7_781 -> m7_784  [color=darkseagreen4, key=1, label="Newtonsoft.Json.IJsonLineInfo", style=dashed];
m7_782 -> m7_783  [key=0, style=solid];
m7_782 -> m7_784  [key=0, style=solid];
m7_782 -> m7_786  [key=2, style=dotted];
m7_784 -> m7_785  [key=0, style=solid];
m7_784 -> m7_787  [key=2, style=dotted];
m7_783 -> m7_785  [key=0, style=solid];
m7_785 -> m7_781  [color=blue, key=0, style=bold];
m7_263 -> m7_264  [key=0, style=solid];
m7_263 -> m7_266  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_263 -> m7_268  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_263 -> m7_136  [color=darkorchid, key=3, label="method methodReturn int? op_Explicit", style=bold];
m7_264 -> m7_265  [key=0, style=solid];
m7_264 -> m7_266  [key=0, style=solid];
m7_266 -> m7_267  [key=0, style=solid];
m7_266 -> m7_89  [key=2, style=dotted];
m7_266 -> m7_269  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_266 -> m7_270  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_266 -> m7_271  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_268 -> m7_272  [key=0, style=solid];
m7_268 -> m7_118  [key=2, style=dotted];
m7_268 -> m7_98  [key=2, style=dotted];
m7_268 -> m7_61  [key=2, style=dotted];
m7_265 -> m7_272  [key=0, style=solid];
m7_267 -> m7_268  [key=0, style=solid];
m7_267 -> m7_269  [key=0, style=solid];
m7_267 -> m7_106  [key=2, style=dotted];
m7_269 -> m7_270  [key=0, style=solid];
m7_269 -> m7_271  [key=0, style=solid];
m7_270 -> m7_272  [key=0, style=solid];
m7_271 -> m7_272  [key=0, style=solid];
m7_271 -> m7_218  [key=2, style=dotted];
m7_272 -> m7_263  [color=blue, key=0, style=bold];
m7_245 -> m7_246  [key=0, style=solid];
m7_245 -> m7_248  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_246 -> m7_247  [key=0, style=solid];
m7_246 -> m7_89  [key=2, style=dotted];
m7_246 -> m7_249  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_246 -> m7_250  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_246 -> m7_251  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_248 -> m7_252  [key=0, style=solid];
m7_248 -> m7_118  [key=2, style=dotted];
m7_248 -> m7_98  [key=2, style=dotted];
m7_248 -> m7_61  [key=2, style=dotted];
m7_247 -> m7_248  [key=0, style=solid];
m7_247 -> m7_249  [key=0, style=solid];
m7_247 -> m7_106  [key=2, style=dotted];
m7_249 -> m7_250  [key=0, style=solid];
m7_249 -> m7_251  [key=0, style=solid];
m7_250 -> m7_252  [key=0, style=solid];
m7_251 -> m7_252  [key=0, style=solid];
m7_251 -> m7_253  [key=2, style=dotted];
m7_252 -> m7_245  [color=blue, key=0, style=bold];
m7_89 -> m7_90  [key=0, style=solid];
m7_89 -> m7_92  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_89 -> m7_93  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_89 -> m7_94  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_89 -> m7_110  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken value", style=bold];
m7_89 -> m7_121  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken value", style=bold];
m7_89 -> m7_134  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken value", style=bold];
m7_89 -> m7_144  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken value", style=bold];
m7_89 -> m7_153  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken value", style=bold];
m7_89 -> m7_163  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken value", style=bold];
m7_89 -> m7_177  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken value", style=bold];
m7_89 -> m7_188  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken value", style=bold];
m7_89 -> m7_199  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken value", style=bold];
m7_89 -> m7_210  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken value", style=bold];
m7_89 -> m7_219  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken value", style=bold];
m7_89 -> m7_228  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken value", style=bold];
m7_89 -> m7_237  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken value", style=bold];
m7_89 -> m7_245  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken value", style=bold];
m7_89 -> m7_254  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken value", style=bold];
m7_89 -> m7_263  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken value", style=bold];
m7_89 -> m7_273  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken value", style=bold];
m7_89 -> m7_283  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken value", style=bold];
m7_89 -> m7_293  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken value", style=bold];
m7_89 -> m7_303  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken value", style=bold];
m7_89 -> m7_313  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken value", style=bold];
m7_89 -> m7_321  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken value", style=bold];
m7_89 -> m7_331  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken value", style=bold];
m7_89 -> m7_342  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken value", style=bold];
m7_89 -> m7_350  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken value", style=bold];
m7_89 -> m7_361  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken value", style=bold];
m7_89 -> m7_372  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken value", style=bold];
m7_89 -> m7_380  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken value", style=bold];
m7_89 -> m7_388  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken value", style=bold];
m7_89 -> m7_405  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken value", style=bold];
m7_89 -> m7_413  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken value", style=bold];
m7_89 -> m7_421  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken value", style=bold];
m7_89 -> m7_437  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken value", style=bold];
m7_89 -> m7_447  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken value", style=bold];
m7_89 -> m7_459  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken value", style=bold];
m7_89 -> m7_466  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken value", style=bold];
m7_89 -> m7_476  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken value", style=bold];
m7_89 -> m7_487  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken value", style=bold];
m7_89 -> m7_494  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken value", style=bold];
m7_90 -> m7_91  [key=0, style=solid];
m7_90 -> m7_92  [key=0, style=solid];
m7_92 -> m7_93  [key=0, style=solid];
m7_92 -> m7_94  [key=0, style=solid];
m7_93 -> m7_94  [key=0, style=solid];
m7_93 -> m7_93  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_94 -> m7_95  [key=0, style=solid];
m7_91 -> m7_96  [key=0, style=solid];
m7_91 -> m7_97  [key=2, style=dotted];
m7_95 -> m7_96  [key=0, style=solid];
m7_96 -> m7_89  [color=blue, key=0, style=bold];
m7_778 -> m7_779  [key=0, style=solid];
m7_778 -> m7_770  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m7_778 -> m7_745  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Linq.JToken Load", style=bold];
m7_779 -> m7_780  [key=0, style=solid];
m7_779 -> m7_745  [key=2, style=dotted];
m7_780 -> m7_778  [color=blue, key=0, style=bold];
m7_787 -> m7_788  [key=0, style=solid];
m7_787 -> m7_789  [color=darkseagreen4, key=1, label=int, style=dashed];
m7_788 -> m7_789  [key=0, style=solid];
m7_789 -> m7_790  [key=0, style=solid];
m7_790 -> m7_787  [color=blue, key=0, style=bold];
m7_572 -> m7_573  [key=0, style=solid];
m7_573 -> m7_574  [key=0, style=solid];
m7_573 -> m7_509  [key=2, style=dotted];
m7_574 -> m7_572  [color=blue, key=0, style=bold];
m7_600 -> m7_601  [key=0, style=solid];
m7_601 -> m7_602  [key=0, style=solid];
m7_601 -> m7_603  [key=2, style=dotted];
m7_602 -> m7_600  [color=blue, key=0, style=bold];
m7_2 -> m7_3  [key=0, style=solid];
m7_2 -> m7_4  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken node", style=bold];
m7_3 -> m7_2  [color=blue, key=0, style=bold];
m7_618 -> m7_619  [key=0, style=solid];
m7_619 -> m7_620  [key=0, style=solid];
m7_619 -> m7_621  [key=2, style=dotted];
m7_620 -> m7_618  [color=blue, key=0, style=bold];
m7_737 -> m7_738  [key=0, style=solid];
m7_737 -> m7_736  [color=darkorchid, key=3, label="method methodReturn T ToObject", style=bold];
m7_738 -> m7_739  [key=0, style=solid];
m7_738 -> m7_736  [key=2, style=dotted];
m7_739 -> m7_737  [color=blue, key=0, style=bold];
m7_809 -> m7_810  [key=0, style=solid];
m7_809 -> m7_812  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken> SelectTokens", style=bold];
m7_810 -> m7_811  [key=0, style=solid];
m7_810 -> m7_812  [key=2, style=dotted];
m7_811 -> m7_809  [color=blue, key=0, style=bold];
m7_547 -> m7_548  [key=0, style=solid];
m7_548 -> m7_549  [key=0, style=solid];
m7_548 -> m7_513  [key=2, style=dotted];
m7_549 -> m7_547  [color=blue, key=0, style=bold];
m7_303 -> m7_304  [key=0, style=solid];
m7_303 -> m7_306  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_303 -> m7_308  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_303 -> m7_136  [color=darkorchid, key=3, label="method methodReturn sbyte? op_Explicit", style=bold];
m7_304 -> m7_305  [key=0, style=solid];
m7_304 -> m7_306  [key=0, style=solid];
m7_306 -> m7_307  [key=0, style=solid];
m7_306 -> m7_89  [key=2, style=dotted];
m7_306 -> m7_309  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_306 -> m7_310  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_306 -> m7_311  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_308 -> m7_312  [key=0, style=solid];
m7_308 -> m7_118  [key=2, style=dotted];
m7_308 -> m7_98  [key=2, style=dotted];
m7_308 -> m7_61  [key=2, style=dotted];
m7_305 -> m7_312  [key=0, style=solid];
m7_307 -> m7_308  [key=0, style=solid];
m7_307 -> m7_309  [key=0, style=solid];
m7_307 -> m7_106  [key=2, style=dotted];
m7_309 -> m7_310  [key=0, style=solid];
m7_309 -> m7_311  [key=0, style=solid];
m7_310 -> m7_312  [key=0, style=solid];
m7_311 -> m7_312  [key=0, style=solid];
m7_311 -> m7_253  [key=2, style=dotted];
m7_312 -> m7_303  [color=blue, key=0, style=bold];
m7_44 -> m7_45  [key=0, style=solid];
m7_45 -> m7_46  [key=0, style=solid];
m7_46 -> m7_47  [key=0, style=solid];
m7_46 -> m7_48  [key=2, style=dotted];
m7_47 -> m7_44  [color=blue, key=0, style=bold];
m7_62 -> m7_63  [key=0, style=solid];
m7_63 -> m7_64  [key=0, style=solid];
m7_63 -> m7_65  [key=0, style=solid];
m7_64 -> m7_66  [key=0, style=solid];
m7_64 -> m7_15  [key=2, style=dotted];
m7_65 -> m7_66  [key=0, style=solid];
m7_65 -> m7_67  [key=2, style=dotted];
m7_66 -> m7_62  [color=blue, key=0, style=bold];
m7_523 -> m7_524  [key=0, style=solid];
m7_524 -> m7_525  [key=0, style=solid];
m7_524 -> m7_509  [key=2, style=dotted];
m7_525 -> m7_523  [color=blue, key=0, style=bold];
m7_526 -> m7_527  [key=0, style=solid];
m7_527 -> m7_528  [key=0, style=solid];
m7_527 -> m7_513  [key=2, style=dotted];
m7_528 -> m7_526  [color=blue, key=0, style=bold];
m7_321 -> m7_322  [key=0, style=solid];
m7_321 -> m7_324  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_321 -> m7_326  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_321 -> m7_136  [color=darkorchid, key=3, label="method methodReturn long? op_Explicit", style=bold];
m7_322 -> m7_323  [key=0, style=solid];
m7_322 -> m7_324  [key=0, style=solid];
m7_324 -> m7_325  [key=0, style=solid];
m7_324 -> m7_89  [key=2, style=dotted];
m7_324 -> m7_327  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_324 -> m7_328  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_324 -> m7_329  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_326 -> m7_330  [key=0, style=solid];
m7_326 -> m7_118  [key=2, style=dotted];
m7_326 -> m7_98  [key=2, style=dotted];
m7_326 -> m7_61  [key=2, style=dotted];
m7_323 -> m7_330  [key=0, style=solid];
m7_325 -> m7_326  [key=0, style=solid];
m7_325 -> m7_327  [key=0, style=solid];
m7_325 -> m7_106  [key=2, style=dotted];
m7_327 -> m7_328  [key=0, style=solid];
m7_327 -> m7_329  [key=0, style=solid];
m7_328 -> m7_330  [key=0, style=solid];
m7_329 -> m7_330  [key=0, style=solid];
m7_329 -> m7_152  [key=2, style=dotted];
m7_330 -> m7_321  [color=blue, key=0, style=bold];
m7_569 -> m7_570  [key=0, style=solid];
m7_570 -> m7_571  [key=0, style=solid];
m7_570 -> m7_509  [key=2, style=dotted];
m7_571 -> m7_569  [color=blue, key=0, style=bold];
m7_812 -> m7_813  [key=0, style=solid];
m7_812 -> m7_814  [color=darkseagreen4, key=1, label=bool, style=dashed];
m7_812 -> m7_809  [color=darkorchid, key=3, label="Parameter variable string path", style=bold];
m7_812 -> m7_13  [color=darkorchid, key=3, label="Parameter variable bool errorWhenNoMatch", style=bold];
m7_813 -> m7_814  [key=0, style=solid];
m7_813 -> m7_806  [key=2, style=dotted];
m7_814 -> m7_815  [key=0, style=solid];
m7_814 -> m7_807  [key=2, style=dotted];
m7_815 -> m7_812  [color=blue, key=0, style=bold];
m7_121 -> m7_122  [key=0, style=solid];
m7_121 -> m7_124  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_122 -> m7_123  [key=0, style=solid];
m7_122 -> m7_89  [key=2, style=dotted];
m7_122 -> m7_125  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_122 -> m7_126  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_122 -> m7_127  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_122 -> m7_128  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_122 -> m7_129  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_124 -> m7_130  [key=0, style=solid];
m7_124 -> m7_118  [key=2, style=dotted];
m7_124 -> m7_98  [key=2, style=dotted];
m7_124 -> m7_61  [key=2, style=dotted];
m7_123 -> m7_124  [key=0, style=solid];
m7_123 -> m7_125  [key=0, style=solid];
m7_123 -> m7_106  [key=2, style=dotted];
m7_125 -> m7_126  [key=0, style=solid];
m7_125 -> m7_127  [key=0, style=solid];
m7_126 -> m7_130  [key=0, style=solid];
m7_127 -> m7_128  [key=0, style=solid];
m7_127 -> m7_129  [key=0, style=solid];
m7_128 -> m7_130  [key=0, style=solid];
m7_128 -> m7_131  [key=2, style=dotted];
m7_129 -> m7_130  [key=0, style=solid];
m7_129 -> m7_132  [key=2, style=dotted];
m7_129 -> m7_133  [key=2, style=dotted];
m7_130 -> m7_121  [color=blue, key=0, style=bold];
m7_413 -> m7_414  [key=0, style=solid];
m7_413 -> m7_416  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_414 -> m7_415  [key=0, style=solid];
m7_414 -> m7_89  [key=2, style=dotted];
m7_414 -> m7_417  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_414 -> m7_418  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_414 -> m7_419  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_416 -> m7_420  [key=0, style=solid];
m7_416 -> m7_118  [key=2, style=dotted];
m7_416 -> m7_98  [key=2, style=dotted];
m7_416 -> m7_61  [key=2, style=dotted];
m7_415 -> m7_416  [key=0, style=solid];
m7_415 -> m7_417  [key=0, style=solid];
m7_415 -> m7_106  [key=2, style=dotted];
m7_417 -> m7_418  [key=0, style=solid];
m7_417 -> m7_419  [key=0, style=solid];
m7_418 -> m7_420  [key=0, style=solid];
m7_419 -> m7_420  [key=0, style=solid];
m7_419 -> m7_371  [key=2, style=dotted];
m7_420 -> m7_413  [color=blue, key=0, style=bold];
m7_582 -> m7_583  [key=0, style=solid];
m7_583 -> m7_584  [key=0, style=solid];
m7_583 -> m7_585  [key=2, style=dotted];
m7_584 -> m7_582  [color=blue, key=0, style=bold];
m7_622 -> m7_623  [key=0, style=solid];
m7_623 -> m7_624  [key=0, style=solid];
m7_623 -> m7_49  [key=2, style=dotted];
m7_623 -> m7_625  [key=2, style=dotted];
m7_624 -> m7_622  [color=blue, key=0, style=bold];
m7_49 -> m7_50  [key=0, style=solid];
m7_50 -> m7_51  [key=0, style=solid];
m7_51 -> m7_49  [color=blue, key=0, style=bold];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_0  [color=blue, key=0, style=bold];
m7_380 -> m7_381  [key=0, style=solid];
m7_380 -> m7_383  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_381 -> m7_382  [key=0, style=solid];
m7_381 -> m7_89  [key=2, style=dotted];
m7_381 -> m7_384  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_381 -> m7_385  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_381 -> m7_386  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_383 -> m7_387  [key=0, style=solid];
m7_383 -> m7_118  [key=2, style=dotted];
m7_383 -> m7_98  [key=2, style=dotted];
m7_383 -> m7_61  [key=2, style=dotted];
m7_382 -> m7_383  [key=0, style=solid];
m7_382 -> m7_384  [key=0, style=solid];
m7_382 -> m7_106  [key=2, style=dotted];
m7_384 -> m7_385  [key=0, style=solid];
m7_384 -> m7_386  [key=0, style=solid];
m7_385 -> m7_387  [key=0, style=solid];
m7_386 -> m7_387  [key=0, style=solid];
m7_386 -> m7_341  [key=2, style=dotted];
m7_387 -> m7_380  [color=blue, key=0, style=bold];
m7_273 -> m7_274  [key=0, style=solid];
m7_273 -> m7_276  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_273 -> m7_278  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_273 -> m7_136  [color=darkorchid, key=3, label="method methodReturn short? op_Explicit", style=bold];
m7_274 -> m7_275  [key=0, style=solid];
m7_274 -> m7_276  [key=0, style=solid];
m7_276 -> m7_277  [key=0, style=solid];
m7_276 -> m7_89  [key=2, style=dotted];
m7_276 -> m7_279  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_276 -> m7_280  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_276 -> m7_281  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_278 -> m7_282  [key=0, style=solid];
m7_278 -> m7_118  [key=2, style=dotted];
m7_278 -> m7_98  [key=2, style=dotted];
m7_278 -> m7_61  [key=2, style=dotted];
m7_275 -> m7_282  [key=0, style=solid];
m7_277 -> m7_278  [key=0, style=solid];
m7_277 -> m7_279  [key=0, style=solid];
m7_277 -> m7_106  [key=2, style=dotted];
m7_279 -> m7_280  [key=0, style=solid];
m7_279 -> m7_281  [key=0, style=solid];
m7_280 -> m7_282  [key=0, style=solid];
m7_281 -> m7_282  [key=0, style=solid];
m7_281 -> m7_227  [key=2, style=dotted];
m7_282 -> m7_273  [color=blue, key=0, style=bold];
m7_24 -> m7_25  [key=0, style=solid];
m7_24 -> m7_27  [color=crimson, key=0, style=bold];
m7_25 -> m7_26  [key=0, style=solid];
m7_25 -> m7_27  [color=darkseagreen4, key=1, label=parent, style=dashed];
m7_25 -> m7_28  [color=darkseagreen4, key=1, label=parent, style=dashed];
m7_27 -> m7_28  [key=0, style=solid];
m7_26 -> m7_27  [key=0, style=solid];
m7_26 -> m7_29  [key=0, style=solid];
m7_28 -> m7_26  [key=0, style=solid];
m7_28 -> m7_28  [color=darkseagreen4, key=1, label=parent, style=dashed];
m7_29 -> m7_24  [color=blue, key=0, style=bold];
m7_538 -> m7_539  [key=0, style=solid];
m7_539 -> m7_540  [key=0, style=solid];
m7_539 -> m7_509  [key=2, style=dotted];
m7_540 -> m7_538  [color=blue, key=0, style=bold];
m7_510 -> m7_511  [key=0, style=solid];
m7_511 -> m7_512  [key=0, style=solid];
m7_511 -> m7_513  [key=2, style=dotted];
m7_512 -> m7_510  [color=blue, key=0, style=bold];
m7_350 -> m7_351  [key=0, style=solid];
m7_350 -> m7_353  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_350 -> m7_355  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_350 -> m7_136  [color=darkorchid, key=3, label="method methodReturn uint? op_Explicit", style=bold];
m7_351 -> m7_352  [key=0, style=solid];
m7_351 -> m7_353  [key=0, style=solid];
m7_353 -> m7_354  [key=0, style=solid];
m7_353 -> m7_89  [key=2, style=dotted];
m7_353 -> m7_356  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_353 -> m7_357  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_353 -> m7_358  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_355 -> m7_359  [key=0, style=solid];
m7_355 -> m7_118  [key=2, style=dotted];
m7_355 -> m7_98  [key=2, style=dotted];
m7_355 -> m7_61  [key=2, style=dotted];
m7_352 -> m7_359  [key=0, style=solid];
m7_354 -> m7_355  [key=0, style=solid];
m7_354 -> m7_356  [key=0, style=solid];
m7_354 -> m7_106  [key=2, style=dotted];
m7_356 -> m7_357  [key=0, style=solid];
m7_356 -> m7_358  [key=0, style=solid];
m7_357 -> m7_359  [key=0, style=solid];
m7_358 -> m7_359  [key=0, style=solid];
m7_358 -> m7_360  [key=2, style=dotted];
m7_359 -> m7_350  [color=blue, key=0, style=bold];
m7_593 -> m7_594  [key=0, style=solid];
m7_594 -> m7_595  [key=0, style=solid];
m7_594 -> m7_596  [key=2, style=dotted];
m7_595 -> m7_593  [color=blue, key=0, style=bold];
m7_237 -> m7_238  [key=0, style=solid];
m7_237 -> m7_240  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_238 -> m7_239  [key=0, style=solid];
m7_238 -> m7_89  [key=2, style=dotted];
m7_238 -> m7_241  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_238 -> m7_242  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_238 -> m7_243  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_240 -> m7_244  [key=0, style=solid];
m7_240 -> m7_118  [key=2, style=dotted];
m7_240 -> m7_98  [key=2, style=dotted];
m7_240 -> m7_61  [key=2, style=dotted];
m7_239 -> m7_240  [key=0, style=solid];
m7_239 -> m7_241  [key=0, style=solid];
m7_239 -> m7_106  [key=2, style=dotted];
m7_241 -> m7_242  [key=0, style=solid];
m7_241 -> m7_243  [key=0, style=solid];
m7_242 -> m7_244  [key=0, style=solid];
m7_243 -> m7_244  [key=0, style=solid];
m7_243 -> m7_209  [key=2, style=dotted];
m7_244 -> m7_237  [color=blue, key=0, style=bold];
m7_283 -> m7_284  [key=0, style=solid];
m7_283 -> m7_286  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_283 -> m7_288  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_283 -> m7_136  [color=darkorchid, key=3, label="method methodReturn ushort? op_Explicit", style=bold];
m7_284 -> m7_285  [key=0, style=solid];
m7_284 -> m7_286  [key=0, style=solid];
m7_286 -> m7_287  [key=0, style=solid];
m7_286 -> m7_89  [key=2, style=dotted];
m7_286 -> m7_289  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_286 -> m7_290  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_286 -> m7_291  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_288 -> m7_292  [key=0, style=solid];
m7_288 -> m7_118  [key=2, style=dotted];
m7_288 -> m7_98  [key=2, style=dotted];
m7_288 -> m7_61  [key=2, style=dotted];
m7_285 -> m7_292  [key=0, style=solid];
m7_287 -> m7_288  [key=0, style=solid];
m7_287 -> m7_289  [key=0, style=solid];
m7_287 -> m7_106  [key=2, style=dotted];
m7_289 -> m7_290  [key=0, style=solid];
m7_289 -> m7_291  [key=0, style=solid];
m7_290 -> m7_292  [key=0, style=solid];
m7_291 -> m7_292  [key=0, style=solid];
m7_291 -> m7_236  [key=2, style=dotted];
m7_292 -> m7_283  [color=blue, key=0, style=bold];
m7_466 -> m7_467  [key=0, style=solid];
m7_466 -> m7_469  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_466 -> m7_471  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_466 -> m7_136  [color=darkorchid, key=3, label="method methodReturn System.TimeSpan? op_Explicit", style=bold];
m7_467 -> m7_468  [key=0, style=solid];
m7_467 -> m7_469  [key=0, style=solid];
m7_469 -> m7_470  [key=0, style=solid];
m7_469 -> m7_89  [key=2, style=dotted];
m7_469 -> m7_472  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_469 -> m7_474  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_471 -> m7_475  [key=0, style=solid];
m7_471 -> m7_118  [key=2, style=dotted];
m7_471 -> m7_98  [key=2, style=dotted];
m7_471 -> m7_61  [key=2, style=dotted];
m7_468 -> m7_475  [key=0, style=solid];
m7_470 -> m7_471  [key=0, style=solid];
m7_470 -> m7_472  [key=0, style=solid];
m7_470 -> m7_106  [key=2, style=dotted];
m7_472 -> m7_473  [key=0, style=solid];
m7_472 -> m7_474  [key=0, style=solid];
m7_474 -> m7_475  [key=0, style=solid];
m7_474 -> m7_404  [key=2, style=dotted];
m7_474 -> m7_465  [key=2, style=dotted];
m7_473 -> m7_475  [key=0, style=solid];
m7_475 -> m7_466  [color=blue, key=0, style=bold];
m7_219 -> m7_220  [key=0, style=solid];
m7_219 -> m7_222  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_220 -> m7_221  [key=0, style=solid];
m7_220 -> m7_89  [key=2, style=dotted];
m7_220 -> m7_223  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_220 -> m7_224  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_220 -> m7_225  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_222 -> m7_226  [key=0, style=solid];
m7_222 -> m7_118  [key=2, style=dotted];
m7_222 -> m7_98  [key=2, style=dotted];
m7_222 -> m7_61  [key=2, style=dotted];
m7_221 -> m7_222  [key=0, style=solid];
m7_221 -> m7_223  [key=0, style=solid];
m7_221 -> m7_106  [key=2, style=dotted];
m7_223 -> m7_224  [key=0, style=solid];
m7_223 -> m7_225  [key=0, style=solid];
m7_224 -> m7_226  [key=0, style=solid];
m7_225 -> m7_226  [key=0, style=solid];
m7_225 -> m7_227  [key=2, style=dotted];
m7_226 -> m7_219  [color=blue, key=0, style=bold];
m7_608 -> m7_609  [key=0, style=solid];
m7_609 -> m7_610  [key=0, style=solid];
m7_609 -> m7_509  [key=2, style=dotted];
m7_610 -> m7_608  [color=blue, key=0, style=bold];
m7_188 -> m7_189  [key=0, style=solid];
m7_188 -> m7_191  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_188 -> m7_193  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_188 -> m7_136  [color=darkorchid, key=3, label="method methodReturn double? op_Explicit", style=bold];
m7_189 -> m7_190  [key=0, style=solid];
m7_189 -> m7_191  [key=0, style=solid];
m7_191 -> m7_192  [key=0, style=solid];
m7_191 -> m7_89  [key=2, style=dotted];
m7_191 -> m7_194  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_191 -> m7_195  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_191 -> m7_196  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_193 -> m7_197  [key=0, style=solid];
m7_193 -> m7_118  [key=2, style=dotted];
m7_193 -> m7_98  [key=2, style=dotted];
m7_193 -> m7_61  [key=2, style=dotted];
m7_190 -> m7_197  [key=0, style=solid];
m7_192 -> m7_193  [key=0, style=solid];
m7_192 -> m7_194  [key=0, style=solid];
m7_192 -> m7_106  [key=2, style=dotted];
m7_194 -> m7_195  [key=0, style=solid];
m7_194 -> m7_196  [key=0, style=solid];
m7_195 -> m7_197  [key=0, style=solid];
m7_196 -> m7_197  [key=0, style=solid];
m7_196 -> m7_198  [key=2, style=dotted];
m7_197 -> m7_188  [color=blue, key=0, style=bold];
m7_769 -> m7_770  [key=0, style=solid];
m7_769 -> m7_771  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Linq.JToken Parse", style=bold];
m7_770 -> m7_771  [key=0, style=solid];
m7_770 -> m7_776  [key=2, style=dotted];
m7_770 -> m7_777  [key=2, style=dotted];
m7_770 -> m7_772  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_770 -> m7_773  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_771 -> m7_772  [key=0, style=solid];
m7_771 -> m7_778  [key=2, style=dotted];
m7_771 -> m7_774  [color=darkseagreen4, key=1, label=t, style=dashed];
m7_772 -> m7_773  [key=0, style=solid];
m7_772 -> m7_774  [key=0, style=solid];
m7_772 -> m7_762  [key=2, style=dotted];
m7_773 -> m7_775  [key=0, style=solid];
m7_773 -> m7_763  [key=2, style=dotted];
m7_774 -> m7_775  [key=0, style=solid];
m7_775 -> m7_769  [color=blue, key=0, style=bold];
m7_177 -> m7_178  [key=0, style=solid];
m7_177 -> m7_180  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_177 -> m7_182  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_177 -> m7_136  [color=darkorchid, key=3, label="method methodReturn decimal? op_Explicit", style=bold];
m7_178 -> m7_179  [key=0, style=solid];
m7_178 -> m7_180  [key=0, style=solid];
m7_180 -> m7_181  [key=0, style=solid];
m7_180 -> m7_89  [key=2, style=dotted];
m7_180 -> m7_183  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_180 -> m7_184  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_180 -> m7_185  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_182 -> m7_186  [key=0, style=solid];
m7_182 -> m7_118  [key=2, style=dotted];
m7_182 -> m7_98  [key=2, style=dotted];
m7_182 -> m7_61  [key=2, style=dotted];
m7_179 -> m7_186  [key=0, style=solid];
m7_181 -> m7_182  [key=0, style=solid];
m7_181 -> m7_183  [key=0, style=solid];
m7_181 -> m7_106  [key=2, style=dotted];
m7_183 -> m7_184  [key=0, style=solid];
m7_183 -> m7_185  [key=0, style=solid];
m7_184 -> m7_186  [key=0, style=solid];
m7_185 -> m7_186  [key=0, style=solid];
m7_185 -> m7_187  [key=2, style=dotted];
m7_186 -> m7_177  [color=blue, key=0, style=bold];
m7_447 -> m7_448  [key=0, style=solid];
m7_447 -> m7_450  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_447 -> m7_452  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_447 -> m7_136  [color=darkorchid, key=3, label="method methodReturn System.Guid? op_Explicit", style=bold];
m7_448 -> m7_449  [key=0, style=solid];
m7_448 -> m7_450  [key=0, style=solid];
m7_450 -> m7_451  [key=0, style=solid];
m7_450 -> m7_89  [key=2, style=dotted];
m7_450 -> m7_453  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_450 -> m7_455  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_450 -> m7_456  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_450 -> m7_457  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_452 -> m7_458  [key=0, style=solid];
m7_452 -> m7_118  [key=2, style=dotted];
m7_452 -> m7_98  [key=2, style=dotted];
m7_452 -> m7_61  [key=2, style=dotted];
m7_449 -> m7_458  [key=0, style=solid];
m7_451 -> m7_452  [key=0, style=solid];
m7_451 -> m7_453  [key=0, style=solid];
m7_451 -> m7_106  [key=2, style=dotted];
m7_453 -> m7_454  [key=0, style=solid];
m7_453 -> m7_455  [key=0, style=solid];
m7_455 -> m7_456  [key=0, style=solid];
m7_455 -> m7_457  [key=0, style=solid];
m7_456 -> m7_458  [key=0, style=solid];
m7_456 -> m7_445  [key=2, style=dotted];
m7_457 -> m7_458  [key=0, style=solid];
m7_457 -> m7_446  [key=2, style=dotted];
m7_457 -> m7_404  [key=2, style=dotted];
m7_454 -> m7_458  [key=0, style=solid];
m7_458 -> m7_447  [color=blue, key=0, style=bold];
m7_144 -> m7_145  [key=0, style=solid];
m7_144 -> m7_147  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_145 -> m7_146  [key=0, style=solid];
m7_145 -> m7_89  [key=2, style=dotted];
m7_145 -> m7_148  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_145 -> m7_149  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_145 -> m7_150  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_147 -> m7_151  [key=0, style=solid];
m7_147 -> m7_118  [key=2, style=dotted];
m7_147 -> m7_98  [key=2, style=dotted];
m7_147 -> m7_61  [key=2, style=dotted];
m7_146 -> m7_147  [key=0, style=solid];
m7_146 -> m7_148  [key=0, style=solid];
m7_146 -> m7_106  [key=2, style=dotted];
m7_148 -> m7_149  [key=0, style=solid];
m7_148 -> m7_150  [key=0, style=solid];
m7_149 -> m7_151  [key=0, style=solid];
m7_150 -> m7_151  [key=0, style=solid];
m7_150 -> m7_152  [key=2, style=dotted];
m7_151 -> m7_144  [color=blue, key=0, style=bold];
m7_544 -> m7_545  [key=0, style=solid];
m7_545 -> m7_546  [key=0, style=solid];
m7_545 -> m7_513  [key=2, style=dotted];
m7_546 -> m7_544  [color=blue, key=0, style=bold];
m7_611 -> m7_612  [key=0, style=solid];
m7_612 -> m7_613  [key=0, style=solid];
m7_612 -> m7_614  [key=2, style=dotted];
m7_613 -> m7_611  [color=blue, key=0, style=bold];
m7_79 -> m7_80  [key=0, style=solid];
m7_79 -> m7_82  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Formatting", style=dashed];
m7_79 -> m7_83  [color=darkseagreen4, key=1, label="params Newtonsoft.Json.JsonConverter[]", style=dashed];
m7_79 -> m7_77  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Formatting formatting", style=bold];
m7_80 -> m7_81  [key=0, style=solid];
m7_80 -> m7_86  [key=2, style=dotted];
m7_80 -> m7_84  [color=darkseagreen4, key=1, label=sw, style=dashed];
m7_82 -> m7_83  [key=0, style=solid];
m7_83 -> m7_84  [key=0, style=solid];
m7_83 -> m7_74  [key=2, style=dotted];
m7_81 -> m7_82  [key=0, style=solid];
m7_81 -> m7_87  [key=2, style=dotted];
m7_81 -> m7_83  [color=darkseagreen4, key=1, label=jw, style=dashed];
m7_84 -> m7_85  [key=0, style=solid];
m7_84 -> m7_88  [key=2, style=dotted];
m7_85 -> m7_79  [color=blue, key=0, style=bold];
m7_7 -> m7_8  [key=0, style=solid];
m7_8 -> m7_7  [color=blue, key=0, style=bold];
m7_590 -> m7_591  [key=0, style=solid];
m7_591 -> m7_592  [key=0, style=solid];
m7_591 -> m7_513  [key=2, style=dotted];
m7_592 -> m7_590  [color=blue, key=0, style=bold];
m7_342 -> m7_343  [key=0, style=solid];
m7_342 -> m7_345  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_343 -> m7_344  [key=0, style=solid];
m7_343 -> m7_89  [key=2, style=dotted];
m7_343 -> m7_346  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_343 -> m7_347  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_343 -> m7_348  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_345 -> m7_349  [key=0, style=solid];
m7_345 -> m7_118  [key=2, style=dotted];
m7_345 -> m7_98  [key=2, style=dotted];
m7_345 -> m7_61  [key=2, style=dotted];
m7_344 -> m7_345  [key=0, style=solid];
m7_344 -> m7_346  [key=0, style=solid];
m7_344 -> m7_106  [key=2, style=dotted];
m7_346 -> m7_347  [key=0, style=solid];
m7_346 -> m7_348  [key=0, style=solid];
m7_347 -> m7_349  [key=0, style=solid];
m7_348 -> m7_349  [key=0, style=solid];
m7_348 -> m7_187  [key=2, style=dotted];
m7_349 -> m7_342  [color=blue, key=0, style=bold];
m7_163 -> m7_164  [key=0, style=solid];
m7_163 -> m7_166  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_163 -> m7_168  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_163 -> m7_136  [color=darkorchid, key=3, label="method methodReturn System.DateTimeOffset? op_Explicit", style=bold];
m7_164 -> m7_165  [key=0, style=solid];
m7_164 -> m7_166  [key=0, style=solid];
m7_166 -> m7_167  [key=0, style=solid];
m7_166 -> m7_89  [key=2, style=dotted];
m7_166 -> m7_169  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_166 -> m7_171  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_166 -> m7_172  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_166 -> m7_173  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_166 -> m7_174  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_166 -> m7_175  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_168 -> m7_176  [key=0, style=solid];
m7_168 -> m7_118  [key=2, style=dotted];
m7_168 -> m7_98  [key=2, style=dotted];
m7_168 -> m7_61  [key=2, style=dotted];
m7_165 -> m7_176  [key=0, style=solid];
m7_167 -> m7_168  [key=0, style=solid];
m7_167 -> m7_169  [key=0, style=solid];
m7_167 -> m7_106  [key=2, style=dotted];
m7_169 -> m7_170  [key=0, style=solid];
m7_169 -> m7_171  [key=0, style=solid];
m7_171 -> m7_172  [key=0, style=solid];
m7_171 -> m7_173  [key=0, style=solid];
m7_172 -> m7_176  [key=0, style=solid];
m7_173 -> m7_174  [key=0, style=solid];
m7_173 -> m7_175  [key=0, style=solid];
m7_174 -> m7_176  [key=0, style=solid];
m7_174 -> m7_131  [key=2, style=dotted];
m7_175 -> m7_176  [key=0, style=solid];
m7_175 -> m7_132  [key=2, style=dotted];
m7_175 -> m7_133  [key=2, style=dotted];
m7_170 -> m7_176  [key=0, style=solid];
m7_176 -> m7_163  [color=blue, key=0, style=bold];
m7_421 -> m7_422  [key=0, style=solid];
m7_421 -> m7_424  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_421 -> m7_426  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_421 -> m7_433  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_421 -> m7_136  [color=darkorchid, key=3, label="method methodReturn byte[] op_Explicit", style=bold];
m7_422 -> m7_423  [key=0, style=solid];
m7_422 -> m7_424  [key=0, style=solid];
m7_424 -> m7_425  [key=0, style=solid];
m7_424 -> m7_89  [key=2, style=dotted];
m7_424 -> m7_427  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_424 -> m7_428  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_424 -> m7_429  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_424 -> m7_430  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_424 -> m7_431  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_424 -> m7_432  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_426 -> m7_434  [key=0, style=solid];
m7_426 -> m7_118  [key=2, style=dotted];
m7_426 -> m7_98  [key=2, style=dotted];
m7_426 -> m7_61  [key=2, style=dotted];
m7_433 -> m7_434  [key=0, style=solid];
m7_433 -> m7_118  [key=2, style=dotted];
m7_433 -> m7_98  [key=2, style=dotted];
m7_433 -> m7_61  [key=2, style=dotted];
m7_423 -> m7_434  [key=0, style=solid];
m7_425 -> m7_426  [key=0, style=solid];
m7_425 -> m7_427  [key=0, style=solid];
m7_425 -> m7_106  [key=2, style=dotted];
m7_427 -> m7_428  [key=0, style=solid];
m7_427 -> m7_429  [key=0, style=solid];
m7_428 -> m7_434  [key=0, style=solid];
m7_428 -> m7_404  [key=2, style=dotted];
m7_428 -> m7_435  [key=2, style=dotted];
m7_429 -> m7_430  [key=0, style=solid];
m7_429 -> m7_431  [key=0, style=solid];
m7_430 -> m7_434  [key=0, style=solid];
m7_430 -> m7_436  [key=2, style=dotted];
m7_431 -> m7_432  [key=0, style=solid];
m7_431 -> m7_433  [key=0, style=solid];
m7_432 -> m7_434  [key=0, style=solid];
m7_434 -> m7_421  [color=blue, key=0, style=bold];
m7_643 -> m7_644  [key=0, style=solid];
m7_643 -> m7_632  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Linq.JToken FromObject", style=bold];
m7_644 -> m7_645  [key=0, style=solid];
m7_644 -> m7_646  [key=2, style=dotted];
m7_644 -> m7_632  [key=2, style=dotted];
m7_645 -> m7_643  [color=blue, key=0, style=bold];
m7_821 -> m7_822  [key=0, style=solid];
m7_821 -> m7_816  [color=darkorchid, key=3, label="method methodReturn System.Dynamic.DynamicMetaObject System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject", style=bold];
m7_822 -> m7_823  [key=0, style=solid];
m7_822 -> m7_816  [key=2, style=dotted];
m7_823 -> m7_821  [color=blue, key=0, style=bold];
m7_110 -> m7_111  [key=0, style=solid];
m7_110 -> m7_113  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_111 -> m7_112  [key=0, style=solid];
m7_111 -> m7_89  [key=2, style=dotted];
m7_111 -> m7_114  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_111 -> m7_115  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_111 -> m7_116  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_113 -> m7_117  [key=0, style=solid];
m7_113 -> m7_118  [key=2, style=dotted];
m7_113 -> m7_98  [key=2, style=dotted];
m7_113 -> m7_61  [key=2, style=dotted];
m7_112 -> m7_113  [key=0, style=solid];
m7_112 -> m7_114  [key=0, style=solid];
m7_112 -> m7_106  [key=2, style=dotted];
m7_114 -> m7_115  [key=0, style=solid];
m7_114 -> m7_116  [key=0, style=solid];
m7_115 -> m7_117  [key=0, style=solid];
m7_115 -> m7_119  [key=2, style=dotted];
m7_116 -> m7_117  [key=0, style=solid];
m7_116 -> m7_120  [key=2, style=dotted];
m7_117 -> m7_110  [color=blue, key=0, style=bold];
m7_405 -> m7_406  [key=0, style=solid];
m7_405 -> m7_408  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_406 -> m7_407  [key=0, style=solid];
m7_406 -> m7_89  [key=2, style=dotted];
m7_406 -> m7_409  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_406 -> m7_410  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_406 -> m7_411  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_408 -> m7_412  [key=0, style=solid];
m7_408 -> m7_118  [key=2, style=dotted];
m7_408 -> m7_98  [key=2, style=dotted];
m7_408 -> m7_61  [key=2, style=dotted];
m7_407 -> m7_408  [key=0, style=solid];
m7_407 -> m7_409  [key=0, style=solid];
m7_407 -> m7_106  [key=2, style=dotted];
m7_409 -> m7_410  [key=0, style=solid];
m7_409 -> m7_411  [key=0, style=solid];
m7_410 -> m7_412  [key=0, style=solid];
m7_411 -> m7_412  [key=0, style=solid];
m7_411 -> m7_360  [key=2, style=dotted];
m7_412 -> m7_405  [color=blue, key=0, style=bold];
m7_632 -> m7_633  [key=0, style=solid];
m7_632 -> m7_634  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m7_632 -> m7_637  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_632 -> m7_635  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Linq.JToken FromObjectInternal", style=bold];
m7_632 -> m7_643  [color=darkorchid, key=3, label="Parameter variable object o", style=bold];
m7_632 -> m7_647  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonSerializer jsonSerializer", style=bold];
m7_633 -> m7_634  [key=0, style=solid];
m7_633 -> m7_104  [key=2, style=dotted];
m7_634 -> m7_635  [key=0, style=solid];
m7_634 -> m7_104  [key=2, style=dotted];
m7_637 -> m7_638  [key=0, style=solid];
m7_637 -> m7_642  [key=2, style=dotted];
m7_635 -> m7_636  [key=0, style=solid];
m7_636 -> m7_637  [key=0, style=solid];
m7_636 -> m7_641  [key=2, style=dotted];
m7_636 -> m7_638  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_638 -> m7_639  [key=0, style=solid];
m7_639 -> m7_640  [key=0, style=solid];
m7_640 -> m7_632  [color=blue, key=0, style=bold];
m7_604 -> m7_605  [key=0, style=solid];
m7_605 -> m7_606  [key=0, style=solid];
m7_605 -> m7_607  [key=2, style=dotted];
m7_606 -> m7_604  [color=blue, key=0, style=bold];
m7_459 -> m7_460  [key=0, style=solid];
m7_459 -> m7_462  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_460 -> m7_461  [key=0, style=solid];
m7_460 -> m7_89  [key=2, style=dotted];
m7_460 -> m7_463  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_462 -> m7_464  [key=0, style=solid];
m7_462 -> m7_118  [key=2, style=dotted];
m7_462 -> m7_98  [key=2, style=dotted];
m7_462 -> m7_61  [key=2, style=dotted];
m7_461 -> m7_462  [key=0, style=solid];
m7_461 -> m7_463  [key=0, style=solid];
m7_461 -> m7_106  [key=2, style=dotted];
m7_463 -> m7_464  [key=0, style=solid];
m7_463 -> m7_404  [key=2, style=dotted];
m7_463 -> m7_465  [key=2, style=dotted];
m7_464 -> m7_459  [color=blue, key=0, style=bold];
m7_18 -> m7_19  [key=0, style=solid];
m7_18 -> m7_22  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_19 -> m7_20  [key=0, style=solid];
m7_19 -> m7_21  [key=0, style=solid];
m7_22 -> m7_23  [key=0, style=solid];
m7_22 -> m7_17  [key=2, style=dotted];
m7_20 -> m7_23  [key=0, style=solid];
m7_20 -> m7_15  [key=2, style=dotted];
m7_21 -> m7_22  [key=0, style=solid];
m7_21 -> m7_16  [key=2, style=dotted];
m7_23 -> m7_18  [color=blue, key=0, style=bold];
m7_563 -> m7_564  [key=0, style=solid];
m7_564 -> m7_565  [key=0, style=solid];
m7_564 -> m7_509  [key=2, style=dotted];
m7_565 -> m7_563  [color=blue, key=0, style=bold];
m7_650 -> m7_651  [key=0, style=solid];
m7_650 -> m7_653  [color=darkorchid, key=3, label="method methodReturn T ToObject", style=bold];
m7_651 -> m7_652  [key=0, style=solid];
m7_651 -> m7_653  [key=2, style=dotted];
m7_652 -> m7_650  [color=blue, key=0, style=bold];
m7_437 -> m7_438  [key=0, style=solid];
m7_437 -> m7_440  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_438 -> m7_439  [key=0, style=solid];
m7_438 -> m7_89  [key=2, style=dotted];
m7_438 -> m7_441  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_438 -> m7_442  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_438 -> m7_443  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_440 -> m7_444  [key=0, style=solid];
m7_440 -> m7_118  [key=2, style=dotted];
m7_440 -> m7_98  [key=2, style=dotted];
m7_440 -> m7_61  [key=2, style=dotted];
m7_439 -> m7_440  [key=0, style=solid];
m7_439 -> m7_441  [key=0, style=solid];
m7_439 -> m7_106  [key=2, style=dotted];
m7_441 -> m7_442  [key=0, style=solid];
m7_441 -> m7_443  [key=0, style=solid];
m7_442 -> m7_444  [key=0, style=solid];
m7_442 -> m7_445  [key=2, style=dotted];
m7_443 -> m7_444  [key=0, style=solid];
m7_443 -> m7_446  [key=2, style=dotted];
m7_443 -> m7_404  [key=2, style=dotted];
m7_444 -> m7_437  [color=blue, key=0, style=bold];
m7_597 -> m7_598  [key=0, style=solid];
m7_598 -> m7_599  [key=0, style=solid];
m7_598 -> m7_509  [key=2, style=dotted];
m7_599 -> m7_597  [color=blue, key=0, style=bold];
m7_210 -> m7_211  [key=0, style=solid];
m7_210 -> m7_213  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_211 -> m7_212  [key=0, style=solid];
m7_211 -> m7_89  [key=2, style=dotted];
m7_211 -> m7_214  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_211 -> m7_215  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_211 -> m7_216  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_213 -> m7_217  [key=0, style=solid];
m7_213 -> m7_118  [key=2, style=dotted];
m7_213 -> m7_98  [key=2, style=dotted];
m7_213 -> m7_61  [key=2, style=dotted];
m7_212 -> m7_213  [key=0, style=solid];
m7_212 -> m7_214  [key=0, style=solid];
m7_212 -> m7_106  [key=2, style=dotted];
m7_214 -> m7_215  [key=0, style=solid];
m7_214 -> m7_216  [key=0, style=solid];
m7_215 -> m7_217  [key=0, style=solid];
m7_216 -> m7_217  [key=0, style=solid];
m7_216 -> m7_218  [key=2, style=dotted];
m7_217 -> m7_210  [color=blue, key=0, style=bold];
m7_541 -> m7_542  [key=0, style=solid];
m7_542 -> m7_543  [key=0, style=solid];
m7_542 -> m7_513  [key=2, style=dotted];
m7_543 -> m7_541  [color=blue, key=0, style=bold];
m7_76 -> m7_77  [key=0, style=solid];
m7_76 -> m7_79  [color=darkorchid, key=3, label="method methodReturn string ToString", style=bold];
m7_77 -> m7_78  [key=0, style=solid];
m7_77 -> m7_79  [key=2, style=dotted];
m7_78 -> m7_76  [color=blue, key=0, style=bold];
m7_794 -> m7_795  [key=0, style=solid];
m7_794 -> m7_797  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Linq.JToken SelectToken", style=bold];
m7_795 -> m7_796  [key=0, style=solid];
m7_795 -> m7_797  [key=2, style=dotted];
m7_796 -> m7_794  [color=blue, key=0, style=bold];
m7_653 -> m7_654  [key=0, style=solid];
m7_653 -> m7_655  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m7_653 -> m7_733  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m7_653 -> m7_494  [color=darkorchid, key=3, label="method methodReturn object ToObject", style=bold];
m7_653 -> m7_487  [color=darkorchid, key=3, label="method methodReturn object ToObject", style=bold];
m7_653 -> m7_736  [color=darkorchid, key=3, label="method methodReturn object ToObject", style=bold];
m7_654 -> m7_655  [key=0, style=solid];
m7_654 -> m7_733  [key=0, style=solid];
m7_655 -> m7_656  [key=0, style=solid];
m7_655 -> m7_735  [key=2, style=dotted];
m7_733 -> m7_734  [key=0, style=solid];
m7_733 -> m7_646  [key=2, style=dotted];
m7_733 -> m7_736  [key=2, style=dotted];
m7_656 -> m7_657  [key=0, style=solid];
m7_656 -> m7_659  [key=0, style=solid];
m7_656 -> m7_661  [key=0, style=solid];
m7_656 -> m7_663  [key=0, style=solid];
m7_656 -> m7_665  [key=0, style=solid];
m7_656 -> m7_667  [key=0, style=solid];
m7_656 -> m7_669  [key=0, style=solid];
m7_656 -> m7_671  [key=0, style=solid];
m7_656 -> m7_673  [key=0, style=solid];
m7_656 -> m7_675  [key=0, style=solid];
m7_656 -> m7_677  [key=0, style=solid];
m7_656 -> m7_679  [key=0, style=solid];
m7_656 -> m7_681  [key=0, style=solid];
m7_656 -> m7_683  [key=0, style=solid];
m7_656 -> m7_685  [key=0, style=solid];
m7_656 -> m7_687  [key=0, style=solid];
m7_656 -> m7_689  [key=0, style=solid];
m7_656 -> m7_691  [key=0, style=solid];
m7_656 -> m7_693  [key=0, style=solid];
m7_656 -> m7_695  [key=0, style=solid];
m7_656 -> m7_697  [key=0, style=solid];
m7_656 -> m7_699  [key=0, style=solid];
m7_656 -> m7_701  [key=0, style=solid];
m7_656 -> m7_703  [key=0, style=solid];
m7_656 -> m7_705  [key=0, style=solid];
m7_656 -> m7_707  [key=0, style=solid];
m7_656 -> m7_709  [key=0, style=solid];
m7_656 -> m7_711  [key=0, style=solid];
m7_656 -> m7_713  [key=0, style=solid];
m7_656 -> m7_715  [key=0, style=solid];
m7_656 -> m7_717  [key=0, style=solid];
m7_656 -> m7_719  [key=0, style=solid];
m7_656 -> m7_721  [key=0, style=solid];
m7_656 -> m7_723  [key=0, style=solid];
m7_656 -> m7_725  [key=0, style=solid];
m7_656 -> m7_727  [key=0, style=solid];
m7_656 -> m7_729  [key=0, style=solid];
m7_656 -> m7_731  [key=0, style=solid];
m7_657 -> m7_658  [key=0, style=solid];
m7_659 -> m7_660  [key=0, style=solid];
m7_661 -> m7_662  [key=0, style=solid];
m7_663 -> m7_664  [key=0, style=solid];
m7_665 -> m7_666  [key=0, style=solid];
m7_667 -> m7_668  [key=0, style=solid];
m7_669 -> m7_670  [key=0, style=solid];
m7_671 -> m7_672  [key=0, style=solid];
m7_673 -> m7_674  [key=0, style=solid];
m7_675 -> m7_676  [key=0, style=solid];
m7_677 -> m7_678  [key=0, style=solid];
m7_679 -> m7_680  [key=0, style=solid];
m7_681 -> m7_682  [key=0, style=solid];
m7_683 -> m7_684  [key=0, style=solid];
m7_685 -> m7_686  [key=0, style=solid];
m7_687 -> m7_688  [key=0, style=solid];
m7_689 -> m7_690  [key=0, style=solid];
m7_691 -> m7_692  [key=0, style=solid];
m7_693 -> m7_694  [key=0, style=solid];
m7_695 -> m7_696  [key=0, style=solid];
m7_697 -> m7_698  [key=0, style=solid];
m7_699 -> m7_700  [key=0, style=solid];
m7_701 -> m7_702  [key=0, style=solid];
m7_703 -> m7_704  [key=0, style=solid];
m7_705 -> m7_706  [key=0, style=solid];
m7_707 -> m7_708  [key=0, style=solid];
m7_709 -> m7_710  [key=0, style=solid];
m7_711 -> m7_712  [key=0, style=solid];
m7_713 -> m7_714  [key=0, style=solid];
m7_715 -> m7_716  [key=0, style=solid];
m7_717 -> m7_718  [key=0, style=solid];
m7_719 -> m7_720  [key=0, style=solid];
m7_721 -> m7_722  [key=0, style=solid];
m7_723 -> m7_724  [key=0, style=solid];
m7_725 -> m7_726  [key=0, style=solid];
m7_727 -> m7_728  [key=0, style=solid];
m7_729 -> m7_730  [key=0, style=solid];
m7_731 -> m7_732  [key=0, style=solid];
m7_658 -> m7_734  [key=0, style=solid];
m7_660 -> m7_734  [key=0, style=solid];
m7_662 -> m7_734  [key=0, style=solid];
m7_664 -> m7_734  [key=0, style=solid];
m7_666 -> m7_734  [key=0, style=solid];
m7_668 -> m7_734  [key=0, style=solid];
m7_670 -> m7_734  [key=0, style=solid];
m7_672 -> m7_734  [key=0, style=solid];
m7_674 -> m7_734  [key=0, style=solid];
m7_676 -> m7_734  [key=0, style=solid];
m7_678 -> m7_734  [key=0, style=solid];
m7_680 -> m7_734  [key=0, style=solid];
m7_682 -> m7_734  [key=0, style=solid];
m7_684 -> m7_734  [key=0, style=solid];
m7_686 -> m7_734  [key=0, style=solid];
m7_688 -> m7_734  [key=0, style=solid];
m7_690 -> m7_734  [key=0, style=solid];
m7_692 -> m7_734  [key=0, style=solid];
m7_694 -> m7_734  [key=0, style=solid];
m7_696 -> m7_734  [key=0, style=solid];
m7_698 -> m7_734  [key=0, style=solid];
m7_700 -> m7_734  [key=0, style=solid];
m7_702 -> m7_734  [key=0, style=solid];
m7_704 -> m7_734  [key=0, style=solid];
m7_706 -> m7_734  [key=0, style=solid];
m7_708 -> m7_734  [key=0, style=solid];
m7_710 -> m7_734  [key=0, style=solid];
m7_712 -> m7_734  [key=0, style=solid];
m7_714 -> m7_734  [key=0, style=solid];
m7_716 -> m7_734  [key=0, style=solid];
m7_718 -> m7_734  [key=0, style=solid];
m7_720 -> m7_734  [key=0, style=solid];
m7_722 -> m7_734  [key=0, style=solid];
m7_724 -> m7_734  [key=0, style=solid];
m7_726 -> m7_734  [key=0, style=solid];
m7_728 -> m7_734  [key=0, style=solid];
m7_730 -> m7_734  [key=0, style=solid];
m7_730 -> m7_494  [key=2, style=dotted];
m7_732 -> m7_734  [key=0, style=solid];
m7_732 -> m7_487  [key=2, style=dotted];
m7_734 -> m7_653  [color=blue, key=0, style=bold];
m7_626 -> m7_627  [key=0, style=solid];
m7_627 -> m7_626  [color=blue, key=0, style=bold];
m7_736 -> m7_740  [key=0, style=solid];
m7_736 -> m7_742  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m7_736 -> m7_653  [color=darkorchid, key=3, label="Parameter variable System.Type objectType", style=bold];
m7_736 -> m7_737  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonSerializer jsonSerializer", style=bold];
m7_740 -> m7_741  [key=0, style=solid];
m7_740 -> m7_104  [key=2, style=dotted];
m7_742 -> m7_743  [key=0, style=solid];
m7_742 -> m7_744  [key=2, style=dotted];
m7_741 -> m7_742  [key=0, style=solid];
m7_741 -> m7_631  [key=2, style=dotted];
m7_743 -> m7_736  [color=blue, key=0, style=bold];
m7_628 -> m7_629  [key=0, style=solid];
m7_629 -> m7_630  [key=0, style=solid];
m7_629 -> m7_631  [key=2, style=dotted];
m7_630 -> m7_628  [color=blue, key=0, style=bold];
m7_535 -> m7_536  [key=0, style=solid];
m7_536 -> m7_537  [key=0, style=solid];
m7_536 -> m7_509  [key=2, style=dotted];
m7_537 -> m7_535  [color=blue, key=0, style=bold];
m7_502 -> m7_503  [key=0, style=solid];
m7_503 -> m7_504  [key=0, style=solid];
m7_503 -> m7_505  [key=2, style=dotted];
m7_504 -> m7_502  [color=blue, key=0, style=bold];
m7_566 -> m7_567  [key=0, style=solid];
m7_567 -> m7_568  [key=0, style=solid];
m7_567 -> m7_509  [key=2, style=dotted];
m7_568 -> m7_566  [color=blue, key=0, style=bold];
m7_153 -> m7_154  [key=0, style=solid];
m7_153 -> m7_156  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_153 -> m7_158  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_153 -> m7_136  [color=darkorchid, key=3, label="method methodReturn System.DateTime? op_Explicit", style=bold];
m7_154 -> m7_155  [key=0, style=solid];
m7_154 -> m7_156  [key=0, style=solid];
m7_156 -> m7_157  [key=0, style=solid];
m7_156 -> m7_89  [key=2, style=dotted];
m7_156 -> m7_159  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_156 -> m7_160  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_156 -> m7_161  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_158 -> m7_162  [key=0, style=solid];
m7_158 -> m7_118  [key=2, style=dotted];
m7_158 -> m7_98  [key=2, style=dotted];
m7_158 -> m7_61  [key=2, style=dotted];
m7_155 -> m7_162  [key=0, style=solid];
m7_157 -> m7_158  [key=0, style=solid];
m7_157 -> m7_159  [key=0, style=solid];
m7_157 -> m7_106  [key=2, style=dotted];
m7_159 -> m7_160  [key=0, style=solid];
m7_159 -> m7_161  [key=0, style=solid];
m7_160 -> m7_162  [key=0, style=solid];
m7_161 -> m7_162  [key=0, style=solid];
m7_161 -> m7_133  [key=2, style=dotted];
m7_162 -> m7_153  [color=blue, key=0, style=bold];
m7_816 -> m7_817  [key=0, style=solid];
m7_816 -> m7_821  [color=darkorchid, key=3, label="Parameter variable System.Linq.Expressions.Expression parameter", style=bold];
m7_817 -> m7_818  [key=0, style=solid];
m7_817 -> m7_819  [key=2, style=dotted];
m7_817 -> m7_820  [key=2, style=dotted];
m7_818 -> m7_816  [color=blue, key=0, style=bold];
m7_520 -> m7_521  [key=0, style=solid];
m7_521 -> m7_522  [key=0, style=solid];
m7_521 -> m7_509  [key=2, style=dotted];
m7_522 -> m7_520  [color=blue, key=0, style=bold];
m7_487 -> m7_488  [key=0, style=solid];
m7_487 -> m7_490  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_488 -> m7_489  [key=0, style=solid];
m7_488 -> m7_89  [key=2, style=dotted];
m7_488 -> m7_491  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_490 -> m7_492  [key=0, style=solid];
m7_490 -> m7_118  [key=2, style=dotted];
m7_490 -> m7_98  [key=2, style=dotted];
m7_490 -> m7_61  [key=2, style=dotted];
m7_489 -> m7_490  [key=0, style=solid];
m7_489 -> m7_491  [key=0, style=solid];
m7_489 -> m7_106  [key=2, style=dotted];
m7_491 -> m7_492  [key=0, style=solid];
m7_491 -> m7_493  [key=2, style=dotted];
m7_492 -> m7_487  [color=blue, key=0, style=bold];
m7_38 -> m7_39  [key=0, style=solid];
m7_38 -> m7_41  [color=crimson, key=0, style=bold];
m7_39 -> m7_40  [key=0, style=solid];
m7_39 -> m7_41  [color=darkseagreen4, key=1, label=o, style=dashed];
m7_39 -> m7_42  [color=darkseagreen4, key=1, label=o, style=dashed];
m7_41 -> m7_42  [key=0, style=solid];
m7_40 -> m7_41  [key=0, style=solid];
m7_40 -> m7_43  [key=0, style=solid];
m7_42 -> m7_40  [key=0, style=solid];
m7_42 -> m7_42  [color=darkseagreen4, key=1, label=o, style=dashed];
m7_43 -> m7_38  [color=blue, key=0, style=bold];
m7_532 -> m7_533  [key=0, style=solid];
m7_533 -> m7_534  [key=0, style=solid];
m7_533 -> m7_509  [key=2, style=dotted];
m7_534 -> m7_532  [color=blue, key=0, style=bold];
m7_529 -> m7_530  [key=0, style=solid];
m7_530 -> m7_531  [key=0, style=solid];
m7_530 -> m7_509  [key=2, style=dotted];
m7_531 -> m7_529  [color=blue, key=0, style=bold];
m7_388 -> m7_389  [key=0, style=solid];
m7_388 -> m7_391  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_388 -> m7_393  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_388 -> m7_136  [color=darkorchid, key=3, label="method methodReturn string op_Explicit", style=bold];
m7_389 -> m7_390  [key=0, style=solid];
m7_389 -> m7_391  [key=0, style=solid];
m7_391 -> m7_392  [key=0, style=solid];
m7_391 -> m7_89  [key=2, style=dotted];
m7_391 -> m7_394  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_391 -> m7_396  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_391 -> m7_397  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_391 -> m7_398  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_391 -> m7_399  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_391 -> m7_400  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_393 -> m7_401  [key=0, style=solid];
m7_393 -> m7_118  [key=2, style=dotted];
m7_393 -> m7_98  [key=2, style=dotted];
m7_393 -> m7_61  [key=2, style=dotted];
m7_390 -> m7_401  [key=0, style=solid];
m7_392 -> m7_393  [key=0, style=solid];
m7_392 -> m7_394  [key=0, style=solid];
m7_392 -> m7_106  [key=2, style=dotted];
m7_394 -> m7_395  [key=0, style=solid];
m7_394 -> m7_396  [key=0, style=solid];
m7_396 -> m7_397  [key=0, style=solid];
m7_396 -> m7_398  [key=0, style=solid];
m7_397 -> m7_401  [key=0, style=solid];
m7_397 -> m7_402  [key=2, style=dotted];
m7_398 -> m7_399  [key=0, style=solid];
m7_398 -> m7_400  [key=0, style=solid];
m7_399 -> m7_401  [key=0, style=solid];
m7_399 -> m7_403  [key=2, style=dotted];
m7_400 -> m7_401  [key=0, style=solid];
m7_400 -> m7_404  [key=2, style=dotted];
m7_395 -> m7_401  [key=0, style=solid];
m7_401 -> m7_388  [color=blue, key=0, style=bold];
m7_372 -> m7_373  [key=0, style=solid];
m7_372 -> m7_375  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_373 -> m7_374  [key=0, style=solid];
m7_373 -> m7_89  [key=2, style=dotted];
m7_373 -> m7_376  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_373 -> m7_377  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_373 -> m7_378  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_375 -> m7_379  [key=0, style=solid];
m7_375 -> m7_118  [key=2, style=dotted];
m7_375 -> m7_98  [key=2, style=dotted];
m7_375 -> m7_61  [key=2, style=dotted];
m7_374 -> m7_375  [key=0, style=solid];
m7_374 -> m7_376  [key=0, style=solid];
m7_374 -> m7_106  [key=2, style=dotted];
m7_376 -> m7_377  [key=0, style=solid];
m7_376 -> m7_378  [key=0, style=solid];
m7_377 -> m7_379  [key=0, style=solid];
m7_378 -> m7_379  [key=0, style=solid];
m7_378 -> m7_198  [key=2, style=dotted];
m7_379 -> m7_372  [color=blue, key=0, style=bold];
m7_824 -> m7_825  [key=0, style=solid];
m7_824 -> m7_827  [color=darkorchid, key=3, label="method methodReturn object System.ICloneable.Clone", style=bold];
m7_825 -> m7_826  [key=0, style=solid];
m7_825 -> m7_827  [key=2, style=dotted];
m7_826 -> m7_824  [color=blue, key=0, style=bold];
m7_57 -> m7_58  [key=0, style=solid];
m7_58 -> m7_59  [key=0, style=solid];
m7_58 -> m7_15  [key=2, style=dotted];
m7_58 -> m7_60  [key=2, style=dotted];
m7_58 -> m7_61  [key=2, style=dotted];
m7_59 -> m7_57  [color=blue, key=0, style=bold];
m7_361 -> m7_362  [key=0, style=solid];
m7_361 -> m7_364  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_361 -> m7_366  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_361 -> m7_136  [color=darkorchid, key=3, label="method methodReturn ulong? op_Explicit", style=bold];
m7_362 -> m7_363  [key=0, style=solid];
m7_362 -> m7_364  [key=0, style=solid];
m7_364 -> m7_365  [key=0, style=solid];
m7_364 -> m7_89  [key=2, style=dotted];
m7_364 -> m7_367  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_364 -> m7_368  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_364 -> m7_369  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_366 -> m7_370  [key=0, style=solid];
m7_366 -> m7_118  [key=2, style=dotted];
m7_366 -> m7_98  [key=2, style=dotted];
m7_366 -> m7_61  [key=2, style=dotted];
m7_363 -> m7_370  [key=0, style=solid];
m7_365 -> m7_366  [key=0, style=solid];
m7_365 -> m7_367  [key=0, style=solid];
m7_365 -> m7_106  [key=2, style=dotted];
m7_367 -> m7_368  [key=0, style=solid];
m7_367 -> m7_369  [key=0, style=solid];
m7_368 -> m7_370  [key=0, style=solid];
m7_369 -> m7_370  [key=0, style=solid];
m7_369 -> m7_371  [key=2, style=dotted];
m7_370 -> m7_361  [color=blue, key=0, style=bold];
m7_199 -> m7_200  [key=0, style=solid];
m7_199 -> m7_202  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_199 -> m7_204  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_199 -> m7_136  [color=darkorchid, key=3, label="method methodReturn char? op_Explicit", style=bold];
m7_200 -> m7_201  [key=0, style=solid];
m7_200 -> m7_202  [key=0, style=solid];
m7_202 -> m7_203  [key=0, style=solid];
m7_202 -> m7_89  [key=2, style=dotted];
m7_202 -> m7_205  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_202 -> m7_206  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_202 -> m7_207  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_204 -> m7_208  [key=0, style=solid];
m7_204 -> m7_118  [key=2, style=dotted];
m7_204 -> m7_98  [key=2, style=dotted];
m7_204 -> m7_61  [key=2, style=dotted];
m7_201 -> m7_208  [key=0, style=solid];
m7_203 -> m7_204  [key=0, style=solid];
m7_203 -> m7_205  [key=0, style=solid];
m7_203 -> m7_106  [key=2, style=dotted];
m7_205 -> m7_206  [key=0, style=solid];
m7_205 -> m7_207  [key=0, style=solid];
m7_206 -> m7_208  [key=0, style=solid];
m7_207 -> m7_208  [key=0, style=solid];
m7_207 -> m7_209  [key=2, style=dotted];
m7_208 -> m7_199  [color=blue, key=0, style=bold];
m7_745 -> m7_746  [key=0, style=solid];
m7_745 -> m7_747  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_745 -> m7_748  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_745 -> m7_749  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_745 -> m7_750  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_745 -> m7_751  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_745 -> m7_752  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_745 -> m7_753  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_745 -> m7_754  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_745 -> m7_755  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_745 -> m7_756  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_745 -> m7_757  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_745 -> m7_758  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_745 -> m7_759  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_745 -> m7_760  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_745 -> m7_778  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m7_746 -> m7_747  [key=0, style=solid];
m7_746 -> m7_104  [key=2, style=dotted];
m7_747 -> m7_748  [key=0, style=solid];
m7_747 -> m7_750  [key=0, style=solid];
m7_748 -> m7_749  [key=0, style=solid];
m7_748 -> m7_750  [key=0, style=solid];
m7_748 -> m7_762  [key=2, style=dotted];
m7_749 -> m7_761  [key=0, style=solid];
m7_749 -> m7_763  [key=2, style=dotted];
m7_750 -> m7_751  [key=0, style=solid];
m7_750 -> m7_752  [key=0, style=solid];
m7_751 -> m7_761  [key=0, style=solid];
m7_751 -> m7_764  [key=2, style=dotted];
m7_752 -> m7_753  [key=0, style=solid];
m7_752 -> m7_754  [key=0, style=solid];
m7_753 -> m7_761  [key=0, style=solid];
m7_753 -> m7_765  [key=2, style=dotted];
m7_754 -> m7_755  [key=0, style=solid];
m7_754 -> m7_756  [key=0, style=solid];
m7_755 -> m7_761  [key=0, style=solid];
m7_755 -> m7_766  [key=2, style=dotted];
m7_756 -> m7_757  [key=0, style=solid];
m7_756 -> m7_758  [key=0, style=solid];
m7_757 -> m7_761  [key=0, style=solid];
m7_757 -> m7_767  [key=2, style=dotted];
m7_758 -> m7_759  [key=0, style=solid];
m7_758 -> m7_760  [key=0, style=solid];
m7_758 -> m7_768  [key=2, style=dotted];
m7_759 -> m7_761  [key=0, style=solid];
m7_759 -> m7_509  [key=2, style=dotted];
m7_760 -> m7_761  [key=0, style=solid];
m7_760 -> m7_61  [key=2, style=dotted];
m7_760 -> m7_763  [key=2, style=dotted];
m7_761 -> m7_745  [color=blue, key=0, style=bold];
m7_578 -> m7_579  [key=0, style=solid];
m7_579 -> m7_580  [key=0, style=solid];
m7_579 -> m7_581  [key=2, style=dotted];
m7_580 -> m7_578  [color=blue, key=0, style=bold];
m7_560 -> m7_561  [key=0, style=solid];
m7_561 -> m7_562  [key=0, style=solid];
m7_561 -> m7_509  [key=2, style=dotted];
m7_562 -> m7_560  [color=blue, key=0, style=bold];
m7_506 -> m7_507  [key=0, style=solid];
m7_507 -> m7_508  [key=0, style=solid];
m7_507 -> m7_509  [key=2, style=dotted];
m7_508 -> m7_506  [color=blue, key=0, style=bold];
m7_331 -> m7_332  [key=0, style=solid];
m7_331 -> m7_334  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_331 -> m7_336  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_331 -> m7_136  [color=darkorchid, key=3, label="method methodReturn float? op_Explicit", style=bold];
m7_332 -> m7_333  [key=0, style=solid];
m7_332 -> m7_334  [key=0, style=solid];
m7_334 -> m7_335  [key=0, style=solid];
m7_334 -> m7_89  [key=2, style=dotted];
m7_334 -> m7_337  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_334 -> m7_338  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_334 -> m7_339  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_336 -> m7_340  [key=0, style=solid];
m7_336 -> m7_118  [key=2, style=dotted];
m7_336 -> m7_98  [key=2, style=dotted];
m7_336 -> m7_61  [key=2, style=dotted];
m7_333 -> m7_340  [key=0, style=solid];
m7_335 -> m7_336  [key=0, style=solid];
m7_335 -> m7_337  [key=0, style=solid];
m7_335 -> m7_106  [key=2, style=dotted];
m7_337 -> m7_338  [key=0, style=solid];
m7_337 -> m7_339  [key=0, style=solid];
m7_338 -> m7_340  [key=0, style=solid];
m7_339 -> m7_340  [key=0, style=solid];
m7_339 -> m7_341  [key=2, style=dotted];
m7_340 -> m7_331  [color=blue, key=0, style=bold];
m7_557 -> m7_558  [key=0, style=solid];
m7_558 -> m7_559  [key=0, style=solid];
m7_558 -> m7_509  [key=2, style=dotted];
m7_559 -> m7_557  [color=blue, key=0, style=bold];
m7_68 -> m7_69  [key=0, style=solid];
m7_68 -> m7_71  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_69 -> m7_70  [key=0, style=solid];
m7_69 -> m7_71  [key=0, style=solid];
m7_71 -> m7_72  [key=0, style=solid];
m7_71 -> m7_73  [key=2, style=dotted];
m7_70 -> m7_72  [key=0, style=solid];
m7_70 -> m7_15  [key=2, style=dotted];
m7_72 -> m7_68  [color=blue, key=0, style=bold];
m7_615 -> m7_616  [key=0, style=solid];
m7_616 -> m7_617  [key=0, style=solid];
m7_616 -> m7_509  [key=2, style=dotted];
m7_617 -> m7_615  [color=blue, key=0, style=bold];
m7_517 -> m7_518  [key=0, style=solid];
m7_518 -> m7_519  [key=0, style=solid];
m7_518 -> m7_513  [key=2, style=dotted];
m7_519 -> m7_517  [color=blue, key=0, style=bold];
m7_827 -> m7_828  [key=0, style=solid];
m7_827 -> m7_0  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Linq.JToken DeepClone", style=bold];
m7_828 -> m7_829  [key=0, style=solid];
m7_828 -> m7_0  [key=2, style=dotted];
m7_829 -> m7_827  [color=blue, key=0, style=bold];
m7_476 -> m7_477  [key=0, style=solid];
m7_476 -> m7_479  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_476 -> m7_481  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_476 -> m7_136  [color=darkorchid, key=3, label="method methodReturn System.Uri op_Explicit", style=bold];
m7_477 -> m7_478  [key=0, style=solid];
m7_477 -> m7_479  [key=0, style=solid];
m7_479 -> m7_480  [key=0, style=solid];
m7_479 -> m7_89  [key=2, style=dotted];
m7_479 -> m7_482  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_479 -> m7_484  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_481 -> m7_485  [key=0, style=solid];
m7_481 -> m7_118  [key=2, style=dotted];
m7_481 -> m7_98  [key=2, style=dotted];
m7_481 -> m7_61  [key=2, style=dotted];
m7_478 -> m7_485  [key=0, style=solid];
m7_480 -> m7_481  [key=0, style=solid];
m7_480 -> m7_482  [key=0, style=solid];
m7_480 -> m7_106  [key=2, style=dotted];
m7_482 -> m7_483  [key=0, style=solid];
m7_482 -> m7_484  [key=0, style=solid];
m7_484 -> m7_485  [key=0, style=solid];
m7_484 -> m7_486  [key=2, style=dotted];
m7_484 -> m7_404  [key=2, style=dotted];
m7_483 -> m7_485  [key=0, style=solid];
m7_485 -> m7_476  [color=blue, key=0, style=bold];
m7_494 -> m7_495  [key=0, style=solid];
m7_494 -> m7_497  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_494 -> m7_136  [color=darkorchid, key=3, label="method methodReturn BigInteger? ToBigIntegerNullable", style=bold];
m7_495 -> m7_496  [key=0, style=solid];
m7_495 -> m7_89  [key=2, style=dotted];
m7_495 -> m7_498  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_495 -> m7_500  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_497 -> m7_501  [key=0, style=solid];
m7_497 -> m7_118  [key=2, style=dotted];
m7_497 -> m7_98  [key=2, style=dotted];
m7_497 -> m7_61  [key=2, style=dotted];
m7_496 -> m7_497  [key=0, style=solid];
m7_496 -> m7_498  [key=0, style=solid];
m7_496 -> m7_106  [key=2, style=dotted];
m7_498 -> m7_499  [key=0, style=solid];
m7_498 -> m7_500  [key=0, style=solid];
m7_500 -> m7_501  [key=0, style=solid];
m7_500 -> m7_493  [key=2, style=dotted];
m7_499 -> m7_501  [key=0, style=solid];
m7_501 -> m7_494  [color=blue, key=0, style=bold];
m7_575 -> m7_576  [key=0, style=solid];
m7_576 -> m7_577  [key=0, style=solid];
m7_576 -> m7_509  [key=2, style=dotted];
m7_577 -> m7_575  [color=blue, key=0, style=bold];
m7_550 -> m7_551  [key=0, style=solid];
m7_551 -> m7_552  [key=0, style=solid];
m7_551 -> m7_509  [key=2, style=dotted];
m7_552 -> m7_550  [color=blue, key=0, style=bold];
m7_625 -> m7_787  [color=darkorchid, key=3, label="Field variable int? _lineNumber", style=bold];
m7_106 -> m7_107  [key=0, style=solid];
m7_106 -> m7_111  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken o", style=bold];
m7_106 -> m7_122  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken o", style=bold];
m7_106 -> m7_137  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken o", style=bold];
m7_106 -> m7_145  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken o", style=bold];
m7_106 -> m7_156  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken o", style=bold];
m7_106 -> m7_166  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken o", style=bold];
m7_106 -> m7_180  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken o", style=bold];
m7_106 -> m7_191  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken o", style=bold];
m7_106 -> m7_202  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken o", style=bold];
m7_106 -> m7_211  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken o", style=bold];
m7_106 -> m7_220  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken o", style=bold];
m7_106 -> m7_229  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken o", style=bold];
m7_106 -> m7_238  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken o", style=bold];
m7_106 -> m7_246  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken o", style=bold];
m7_106 -> m7_255  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken o", style=bold];
m7_106 -> m7_266  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken o", style=bold];
m7_106 -> m7_276  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken o", style=bold];
m7_106 -> m7_286  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken o", style=bold];
m7_106 -> m7_296  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken o", style=bold];
m7_106 -> m7_306  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken o", style=bold];
m7_106 -> m7_314  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken o", style=bold];
m7_106 -> m7_324  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken o", style=bold];
m7_106 -> m7_334  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken o", style=bold];
m7_106 -> m7_343  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken o", style=bold];
m7_106 -> m7_353  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken o", style=bold];
m7_106 -> m7_364  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken o", style=bold];
m7_106 -> m7_373  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken o", style=bold];
m7_106 -> m7_381  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken o", style=bold];
m7_106 -> m7_391  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken o", style=bold];
m7_106 -> m7_406  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken o", style=bold];
m7_106 -> m7_414  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken o", style=bold];
m7_106 -> m7_424  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken o", style=bold];
m7_106 -> m7_438  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken o", style=bold];
m7_106 -> m7_450  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken o", style=bold];
m7_106 -> m7_460  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken o", style=bold];
m7_106 -> m7_469  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken o", style=bold];
m7_106 -> m7_479  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken o", style=bold];
m7_106 -> m7_488  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken o", style=bold];
m7_106 -> m7_495  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JToken o", style=bold];
m7_106 -> m7_513  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JTokenType[] validTypes", style=bold];
m7_106 -> m7_776  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JTokenType[] validTypes", style=bold];
m7_106 -> m7_641  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JTokenType[] validTypes", style=bold];
m7_106 -> m7_13  [color=darkorchid, key=3, label="Parameter variable bool nullable", style=bold];
m7_106 -> m7_138  [color=darkorchid, key=3, label="Parameter variable bool nullable", style=bold];
m7_107 -> m7_108  [key=0, style=solid];
m7_107 -> m7_109  [key=2, style=dotted];
m7_108 -> m7_106  [color=blue, key=0, style=bold];
m7_52 -> m7_53  [key=0, style=solid];
m7_53 -> m7_54  [key=0, style=solid];
m7_53 -> m7_55  [key=2, style=dotted];
m7_53 -> m7_49  [key=2, style=dotted];
m7_53 -> m7_56  [key=2, style=dotted];
m7_54 -> m7_52  [color=blue, key=0, style=bold];
m7_647 -> m7_648  [key=0, style=solid];
m7_647 -> m7_632  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Linq.JToken FromObject", style=bold];
m7_648 -> m7_649  [key=0, style=solid];
m7_648 -> m7_632  [key=2, style=dotted];
m7_649 -> m7_647  [color=blue, key=0, style=bold];
m7_553 -> m7_554  [key=0, style=solid];
m7_554 -> m7_555  [key=0, style=solid];
m7_554 -> m7_556  [key=2, style=dotted];
m7_555 -> m7_553  [color=blue, key=0, style=bold];
m7_791 -> m7_792  [key=0, style=solid];
m7_792 -> m7_793  [key=0, style=solid];
m7_793 -> m7_791  [color=blue, key=0, style=bold];
m7_134 -> m7_135  [key=0, style=solid];
m7_134 -> m7_137  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_134 -> m7_139  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_134 -> m7_136  [color=darkorchid, key=3, label="method methodReturn bool? op_Explicit", style=bold];
m7_135 -> m7_136  [key=0, style=solid];
m7_135 -> m7_137  [key=0, style=solid];
m7_137 -> m7_138  [key=0, style=solid];
m7_137 -> m7_89  [key=2, style=dotted];
m7_137 -> m7_140  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_137 -> m7_141  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_137 -> m7_142  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_139 -> m7_143  [key=0, style=solid];
m7_139 -> m7_118  [key=2, style=dotted];
m7_139 -> m7_98  [key=2, style=dotted];
m7_139 -> m7_61  [key=2, style=dotted];
m7_136 -> m7_143  [key=0, style=solid];
m7_138 -> m7_139  [key=0, style=solid];
m7_138 -> m7_140  [key=0, style=solid];
m7_138 -> m7_106  [key=2, style=dotted];
m7_140 -> m7_141  [key=0, style=solid];
m7_140 -> m7_142  [key=0, style=solid];
m7_141 -> m7_143  [key=0, style=solid];
m7_141 -> m7_119  [key=2, style=dotted];
m7_142 -> m7_143  [key=0, style=solid];
m7_142 -> m7_120  [key=2, style=dotted];
m7_143 -> m7_134  [color=blue, key=0, style=bold];
m7_30 -> m7_31  [key=0, style=solid];
m7_30 -> m7_32  [color=crimson, key=0, style=bold];
m7_30 -> m7_35  [color=crimson, key=0, style=bold];
m7_31 -> m7_32  [key=0, style=solid];
m7_31 -> m7_33  [key=0, style=solid];
m7_32 -> m7_33  [key=0, style=solid];
m7_35 -> m7_36  [key=0, style=solid];
m7_33 -> m7_34  [key=0, style=solid];
m7_33 -> m7_35  [color=darkseagreen4, key=1, label=o, style=dashed];
m7_33 -> m7_36  [color=darkseagreen4, key=1, label=o, style=dashed];
m7_34 -> m7_35  [key=0, style=solid];
m7_34 -> m7_37  [key=0, style=solid];
m7_36 -> m7_34  [key=0, style=solid];
m7_36 -> m7_36  [color=darkseagreen4, key=1, label=o, style=dashed];
m7_37 -> m7_30  [color=blue, key=0, style=bold];
m7_74 -> m7_75  [key=0, style=solid];
m7_74 -> m7_81  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonWriter writer", style=bold];
m7_74 -> m7_79  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonConverter[] converters", style=bold];
m7_75 -> m7_74  [color=blue, key=0, style=bold];
m7_228 -> m7_229  [key=0, style=solid];
m7_228 -> m7_231  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_229 -> m7_230  [key=0, style=solid];
m7_229 -> m7_89  [key=2, style=dotted];
m7_229 -> m7_232  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_229 -> m7_233  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_229 -> m7_234  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_231 -> m7_235  [key=0, style=solid];
m7_231 -> m7_118  [key=2, style=dotted];
m7_231 -> m7_98  [key=2, style=dotted];
m7_231 -> m7_61  [key=2, style=dotted];
m7_230 -> m7_231  [key=0, style=solid];
m7_230 -> m7_232  [key=0, style=solid];
m7_230 -> m7_106  [key=2, style=dotted];
m7_232 -> m7_233  [key=0, style=solid];
m7_232 -> m7_234  [key=0, style=solid];
m7_233 -> m7_235  [key=0, style=solid];
m7_234 -> m7_235  [key=0, style=solid];
m7_234 -> m7_236  [key=2, style=dotted];
m7_235 -> m7_228  [color=blue, key=0, style=bold];
m7_254 -> m7_255  [key=0, style=solid];
m7_254 -> m7_257  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_255 -> m7_256  [key=0, style=solid];
m7_255 -> m7_89  [key=2, style=dotted];
m7_255 -> m7_258  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_255 -> m7_259  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_255 -> m7_260  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_257 -> m7_261  [key=0, style=solid];
m7_257 -> m7_118  [key=2, style=dotted];
m7_257 -> m7_98  [key=2, style=dotted];
m7_257 -> m7_61  [key=2, style=dotted];
m7_256 -> m7_257  [key=0, style=solid];
m7_256 -> m7_258  [key=0, style=solid];
m7_256 -> m7_106  [key=2, style=dotted];
m7_258 -> m7_259  [key=0, style=solid];
m7_258 -> m7_260  [key=0, style=solid];
m7_259 -> m7_261  [key=0, style=solid];
m7_260 -> m7_261  [key=0, style=solid];
m7_260 -> m7_262  [key=2, style=dotted];
m7_261 -> m7_254  [color=blue, key=0, style=bold];
m7_514 -> m7_515  [key=0, style=solid];
m7_515 -> m7_516  [key=0, style=solid];
m7_515 -> m7_509  [key=2, style=dotted];
m7_516 -> m7_514  [color=blue, key=0, style=bold];
m7_797 -> m7_798  [key=0, style=solid];
m7_797 -> m7_800  [color=darkseagreen4, key=1, label=bool, style=dashed];
m7_797 -> m7_794  [color=darkorchid, key=3, label="Parameter variable string path", style=bold];
m7_797 -> m7_13  [color=darkorchid, key=3, label="Parameter variable bool errorWhenNoMatch", style=bold];
m7_797 -> m7_799  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Linq.JToken SelectToken", style=bold];
m7_798 -> m7_799  [key=0, style=solid];
m7_798 -> m7_806  [key=2, style=dotted];
m7_798 -> m7_800  [color=darkseagreen4, key=1, label=p, style=dashed];
m7_800 -> m7_801  [key=0, style=solid];
m7_800 -> m7_804  [key=0, style=solid];
m7_800 -> m7_807  [key=2, style=dotted];
m7_800 -> m7_803  [color=darkseagreen4, key=1, label=t, style=dashed];
m7_799 -> m7_800  [key=0, style=solid];
m7_799 -> m7_801  [color=darkseagreen4, key=1, label=token, style=dashed];
m7_799 -> m7_804  [color=darkseagreen4, key=1, label=token, style=dashed];
m7_799 -> m7_136  [color=darkorchid, key=3, label="Local variable Newtonsoft.Json.Linq.JToken token", style=bold];
m7_801 -> m7_802  [key=0, style=solid];
m7_801 -> m7_803  [key=0, style=solid];
m7_804 -> m7_805  [key=0, style=solid];
m7_803 -> m7_800  [key=0, style=solid];
m7_803 -> m7_804  [color=darkseagreen4, key=1, label=token, style=dashed];
m7_802 -> m7_805  [key=0, style=solid];
m7_802 -> m7_808  [key=2, style=dotted];
m7_805 -> m7_797  [color=blue, key=0, style=bold];
m7_9 -> m7_10  [key=0, style=solid];
m7_9 -> m7_13  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_10 -> m7_11  [key=0, style=solid];
m7_10 -> m7_12  [key=0, style=solid];
m7_13 -> m7_14  [key=0, style=solid];
m7_13 -> m7_17  [key=2, style=dotted];
m7_11 -> m7_14  [key=0, style=solid];
m7_11 -> m7_15  [key=2, style=dotted];
m7_12 -> m7_13  [key=0, style=solid];
m7_12 -> m7_16  [key=2, style=dotted];
m7_14 -> m7_9  [color=blue, key=0, style=bold];
m7_313 -> m7_314  [key=0, style=solid];
m7_313 -> m7_316  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_314 -> m7_315  [key=0, style=solid];
m7_314 -> m7_89  [key=2, style=dotted];
m7_314 -> m7_317  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_314 -> m7_318  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_314 -> m7_319  [color=darkseagreen4, key=1, label=v, style=dashed];
m7_316 -> m7_320  [key=0, style=solid];
m7_316 -> m7_118  [key=2, style=dotted];
m7_316 -> m7_98  [key=2, style=dotted];
m7_316 -> m7_61  [key=2, style=dotted];
m7_315 -> m7_316  [key=0, style=solid];
m7_315 -> m7_317  [key=0, style=solid];
m7_315 -> m7_106  [key=2, style=dotted];
m7_317 -> m7_318  [key=0, style=solid];
m7_317 -> m7_319  [key=0, style=solid];
m7_318 -> m7_320  [key=0, style=solid];
m7_319 -> m7_320  [key=0, style=solid];
m7_319 -> m7_133  [key=2, style=dotted];
m7_320 -> m7_313  [color=blue, key=0, style=bold];
m7_586 -> m7_587  [key=0, style=solid];
m7_587 -> m7_588  [key=0, style=solid];
m7_587 -> m7_589  [key=2, style=dotted];
m7_588 -> m7_586  [color=blue, key=0, style=bold];
m7_4 -> m7_5  [key=0, style=solid];
m7_5 -> m7_6  [key=0, style=solid];
m7_5 -> m7_2  [key=2, style=dotted];
m7_6 -> m7_4  [color=blue, key=0, style=bold];
m7_830 -> m7_10  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_12  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_13  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_19  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_21  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_22  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_25  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_31  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_33  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_39  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_40  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_45  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_53  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_58  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_63  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_65  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_69  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_71  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_77  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_83  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_619  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_623  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_629  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_651  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_658  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_660  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_662  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_664  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_666  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_668  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_670  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_672  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_674  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_676  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_678  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_680  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_682  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_684  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_686  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_688  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_690  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_692  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_694  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_696  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_698  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_700  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_702  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_704  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_706  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_708  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_710  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_712  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_714  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_716  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_718  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_720  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_722  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_724  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_726  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_728  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_730  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_732  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_733  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_738  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_741  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_784  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_788  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_789  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_792  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_795  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_800  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_810  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_814  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_817  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_822  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_825  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m7_830 -> m7_828  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m8_244 -> m8_245  [key=0, style=solid];
m8_245 -> m8_246  [key=0, style=solid];
m8_245 -> m8_248  [color=darkseagreen4, key=1, label=json, style=dashed];
m8_246 -> m8_247  [key=0, style=solid];
m8_246 -> m8_242  [key=2, style=dotted];
m8_248 -> m8_249  [key=0, style=solid];
m8_248 -> m8_243  [key=2, style=dotted];
m8_247 -> m8_248  [key=0, style=solid];
m8_247 -> m8_23  [key=2, style=dotted];
m8_249 -> m8_250  [key=0, style=solid];
m8_249 -> m8_51  [key=2, style=dotted];
m8_249 -> m8_23  [key=2, style=dotted];
m8_250 -> m8_244  [color=blue, key=0, style=bold];
m8_184 -> m8_185  [key=0, style=solid];
m8_185 -> m8_186  [key=0, style=solid];
m8_186 -> m8_187  [key=0, style=solid];
m8_186 -> m8_24  [key=2, style=dotted];
m8_186 -> m8_188  [color=darkseagreen4, key=1, label=newDoc, style=dashed];
m8_187 -> m8_188  [key=0, style=solid];
m8_188 -> m8_189  [key=0, style=solid];
m8_188 -> m8_23  [key=2, style=dotted];
m8_189 -> m8_184  [color=blue, key=0, style=bold];
m8_230 -> m8_231  [key=0, style=solid];
m8_231 -> m8_232  [key=0, style=solid];
m8_232 -> m8_233  [key=0, style=solid];
m8_232 -> m8_234  [key=2, style=dotted];
m8_233 -> m8_230  [color=blue, key=0, style=bold];
m8_251 -> m8_252  [key=0, style=solid];
m8_252 -> m8_253  [key=0, style=solid];
m8_252 -> m8_255  [color=darkseagreen4, key=1, label=json, style=dashed];
m8_253 -> m8_254  [key=0, style=solid];
m8_253 -> m8_242  [key=2, style=dotted];
m8_255 -> m8_256  [key=0, style=solid];
m8_255 -> m8_243  [key=2, style=dotted];
m8_254 -> m8_255  [key=0, style=solid];
m8_254 -> m8_23  [key=2, style=dotted];
m8_256 -> m8_257  [key=0, style=solid];
m8_256 -> m8_51  [key=2, style=dotted];
m8_256 -> m8_23  [key=2, style=dotted];
m8_257 -> m8_251  [color=blue, key=0, style=bold];
m8_197 -> m8_198  [key=0, style=solid];
m8_198 -> m8_199  [key=0, style=solid];
m8_199 -> m8_200  [key=0, style=solid];
m8_199 -> m8_24  [key=2, style=dotted];
m8_199 -> m8_201  [color=darkseagreen4, key=1, label=newDoc, style=dashed];
m8_199 -> m8_202  [color=darkseagreen4, key=1, label=newDoc, style=dashed];
m8_200 -> m8_201  [key=0, style=solid];
m8_201 -> m8_202  [key=0, style=solid];
m8_201 -> m8_23  [key=2, style=dotted];
m8_202 -> m8_203  [key=0, style=solid];
m8_202 -> m8_65  [key=2, style=dotted];
m8_202 -> m8_204  [color=darkseagreen4, key=1, label=json, style=dashed];
m8_203 -> m8_204  [key=0, style=solid];
m8_204 -> m8_205  [key=0, style=solid];
m8_204 -> m8_23  [key=2, style=dotted];
m8_205 -> m8_197  [color=blue, key=0, style=bold];
m8_190 -> m8_191  [key=0, style=solid];
m8_191 -> m8_192  [key=0, style=solid];
m8_191 -> m8_193  [key=2, style=dotted];
m8_192 -> m8_190  [color=blue, key=0, style=bold];
m8_194 -> m8_195  [key=0, style=solid];
m8_195 -> m8_196  [key=0, style=solid];
m8_195 -> m8_193  [key=2, style=dotted];
m8_196 -> m8_194  [color=blue, key=0, style=bold];
m8_175 -> m8_176  [key=0, style=solid];
m8_176 -> m8_177  [key=0, style=solid];
m8_176 -> m8_178  [color=darkseagreen4, key=1, label=xml, style=dashed];
m8_177 -> m8_178  [key=0, style=solid];
m8_177 -> m8_63  [key=2, style=dotted];
m8_177 -> m8_179  [color=darkseagreen4, key=1, label=doc, style=dashed];
m8_177 -> m8_182  [color=darkseagreen4, key=1, label=doc, style=dashed];
m8_178 -> m8_179  [key=0, style=solid];
m8_178 -> m8_64  [key=2, style=dotted];
m8_179 -> m8_180  [key=0, style=solid];
m8_179 -> m8_65  [key=2, style=dotted];
m8_179 -> m8_181  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m8_182 -> m8_183  [key=0, style=solid];
m8_182 -> m8_23  [key=2, style=dotted];
m8_180 -> m8_181  [key=0, style=solid];
m8_180 -> m8_66  [key=2, style=dotted];
m8_181 -> m8_182  [key=0, style=solid];
m8_181 -> m8_24  [key=2, style=dotted];
m8_183 -> m8_175  [color=blue, key=0, style=bold];
m8_292 -> m8_293  [key=0, style=solid];
m8_293 -> m8_294  [key=0, style=solid];
m8_293 -> m8_306  [key=2, style=dotted];
m8_293 -> m8_295  [color=darkseagreen4, key=1, label=circularDictionary, style=dashed];
m8_293 -> m8_296  [color=darkseagreen4, key=1, label=circularDictionary, style=dashed];
m8_294 -> m8_295  [key=0, style=solid];
m8_294 -> m8_306  [key=2, style=dotted];
m8_294 -> m8_307  [key=2, style=dotted];
m8_295 -> m8_296  [key=0, style=solid];
m8_295 -> m8_307  [key=2, style=dotted];
m8_296 -> m8_297  [key=0, style=solid];
m8_296 -> m8_308  [key=2, style=dotted];
m8_296 -> m8_309  [key=2, style=dotted];
m8_296 -> m8_298  [color=darkseagreen4, key=1, label=json, style=dashed];
m8_297 -> m8_298  [key=0, style=solid];
m8_297 -> m8_23  [key=2, style=dotted];
m8_298 -> m8_299  [key=0, style=solid];
m8_298 -> m8_27  [key=2, style=dotted];
m8_298 -> m8_302  [color=darkseagreen4, key=1, label=node, style=dashed];
m8_299 -> m8_300  [key=0, style=solid];
m8_299 -> m8_154  [key=2, style=dotted];
m8_299 -> m8_301  [color=darkseagreen4, key=1, label=xml, style=dashed];
m8_302 -> m8_303  [key=0, style=solid];
m8_302 -> m8_0  [key=2, style=dotted];
m8_302 -> m8_304  [color=darkseagreen4, key=1, label=xmlJson, style=dashed];
m8_300 -> m8_301  [key=0, style=solid];
m8_301 -> m8_302  [key=0, style=solid];
m8_301 -> m8_23  [key=2, style=dotted];
m8_303 -> m8_304  [key=0, style=solid];
m8_304 -> m8_305  [key=0, style=solid];
m8_304 -> m8_23  [key=2, style=dotted];
m8_305 -> m8_292  [color=blue, key=0, style=bold];
m8_24 -> m8_25  [key=0, style=solid];
m8_25 -> m8_26  [key=0, style=solid];
m8_25 -> m8_27  [key=2, style=dotted];
m8_26 -> m8_24  [color=blue, key=0, style=bold];
m8_52 -> m8_53  [key=0, style=solid];
m8_53 -> m8_54  [key=0, style=solid];
m8_53 -> m8_55  [color=darkseagreen4, key=1, label=xml, style=dashed];
m8_54 -> m8_55  [key=0, style=solid];
m8_54 -> m8_63  [key=2, style=dotted];
m8_54 -> m8_56  [color=darkseagreen4, key=1, label=doc, style=dashed];
m8_55 -> m8_56  [key=0, style=solid];
m8_55 -> m8_64  [key=2, style=dotted];
m8_56 -> m8_57  [key=0, style=solid];
m8_56 -> m8_65  [key=2, style=dotted];
m8_56 -> m8_58  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m8_56 -> m8_60  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m8_57 -> m8_58  [key=0, style=solid];
m8_58 -> m8_59  [key=0, style=solid];
m8_58 -> m8_23  [key=2, style=dotted];
m8_60 -> m8_61  [key=0, style=solid];
m8_60 -> m8_66  [key=2, style=dotted];
m8_59 -> m8_60  [key=0, style=solid];
m8_59 -> m8_66  [key=2, style=dotted];
m8_61 -> m8_62  [key=0, style=solid];
m8_61 -> m8_67  [key=2, style=dotted];
m8_62 -> m8_52  [color=blue, key=0, style=bold];
m8_235 -> m8_236  [key=0, style=solid];
m8_236 -> m8_237  [key=0, style=solid];
m8_236 -> m8_239  [color=darkseagreen4, key=1, label=json, style=dashed];
m8_237 -> m8_238  [key=0, style=solid];
m8_237 -> m8_242  [key=2, style=dotted];
m8_239 -> m8_240  [key=0, style=solid];
m8_239 -> m8_243  [key=2, style=dotted];
m8_238 -> m8_239  [key=0, style=solid];
m8_238 -> m8_23  [key=2, style=dotted];
m8_240 -> m8_241  [key=0, style=solid];
m8_240 -> m8_51  [key=2, style=dotted];
m8_240 -> m8_23  [key=2, style=dotted];
m8_241 -> m8_235  [color=blue, key=0, style=bold];
m8_116 -> m8_117  [key=0, style=solid];
m8_117 -> m8_118  [key=0, style=solid];
m8_117 -> m8_63  [key=2, style=dotted];
m8_118 -> m8_119  [key=0, style=solid];
m8_118 -> m8_127  [key=2, style=dotted];
m8_119 -> m8_120  [key=0, style=solid];
m8_119 -> m8_119  [color=darkseagreen4, key=1, label=fragement, style=dashed];
m8_120 -> m8_121  [key=0, style=solid];
m8_120 -> m8_65  [key=2, style=dotted];
m8_120 -> m8_122  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m8_120 -> m8_124  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m8_121 -> m8_122  [key=0, style=solid];
m8_122 -> m8_123  [key=0, style=solid];
m8_122 -> m8_23  [key=2, style=dotted];
m8_124 -> m8_125  [key=0, style=solid];
m8_124 -> m8_66  [key=2, style=dotted];
m8_123 -> m8_124  [key=0, style=solid];
m8_123 -> m8_66  [key=2, style=dotted];
m8_125 -> m8_126  [key=0, style=solid];
m8_125 -> m8_67  [key=2, style=dotted];
m8_126 -> m8_116  [color=blue, key=0, style=bold];
m8_154 -> m8_155  [key=0, style=solid];
m8_154 -> m8_159  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m8_155 -> m8_156  [key=0, style=solid];
m8_155 -> m8_162  [key=2, style=dotted];
m8_159 -> m8_160  [key=0, style=solid];
m8_159 -> m8_165  [key=2, style=dotted];
m8_156 -> m8_157  [key=0, style=solid];
m8_156 -> m8_156  [color=darkseagreen4, key=1, label=settings, style=dashed];
m8_156 -> m8_158  [color=darkseagreen4, key=1, label=settings, style=dashed];
m8_157 -> m8_158  [key=0, style=solid];
m8_157 -> m8_163  [key=2, style=dotted];
m8_157 -> m8_160  [color=darkseagreen4, key=1, label=sw, style=dashed];
m8_158 -> m8_159  [key=0, style=solid];
m8_158 -> m8_164  [key=2, style=dotted];
m8_160 -> m8_161  [key=0, style=solid];
m8_160 -> m8_166  [key=2, style=dotted];
m8_161 -> m8_154  [color=blue, key=0, style=bold];
m8_258 -> m8_259  [key=0, style=solid];
m8_259 -> m8_260  [key=0, style=solid];
m8_259 -> m8_63  [key=2, style=dotted];
m8_259 -> m8_261  [color=darkseagreen4, key=1, label=doc, style=dashed];
m8_260 -> m8_261  [key=0, style=solid];
m8_260 -> m8_64  [key=2, style=dotted];
m8_261 -> m8_262  [key=0, style=solid];
m8_261 -> m8_65  [key=2, style=dotted];
m8_262 -> m8_263  [key=0, style=solid];
m8_262 -> m8_23  [key=2, style=dotted];
m8_263 -> m8_258  [color=blue, key=0, style=bold];
m8_264 -> m8_265  [key=0, style=solid];
m8_265 -> m8_266  [key=0, style=solid];
m8_265 -> m8_267  [color=darkseagreen4, key=1, label=xml, style=dashed];
m8_266 -> m8_267  [key=0, style=solid];
m8_266 -> m8_63  [key=2, style=dotted];
m8_266 -> m8_268  [color=darkseagreen4, key=1, label=doc, style=dashed];
m8_267 -> m8_268  [key=0, style=solid];
m8_267 -> m8_64  [key=2, style=dotted];
m8_268 -> m8_269  [key=0, style=solid];
m8_268 -> m8_65  [key=2, style=dotted];
m8_268 -> m8_270  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m8_268 -> m8_271  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m8_269 -> m8_270  [key=0, style=solid];
m8_270 -> m8_271  [key=0, style=solid];
m8_270 -> m8_23  [key=2, style=dotted];
m8_271 -> m8_272  [key=0, style=solid];
m8_271 -> m8_24  [key=2, style=dotted];
m8_272 -> m8_273  [key=0, style=solid];
m8_272 -> m8_23  [key=2, style=dotted];
m8_273 -> m8_264  [color=blue, key=0, style=bold];
m8_68 -> m8_69  [key=0, style=solid];
m8_69 -> m8_70  [key=0, style=solid];
m8_69 -> m8_63  [key=2, style=dotted];
m8_69 -> m8_84  [color=darkseagreen4, key=1, label=doc, style=dashed];
m8_69 -> m8_88  [color=darkseagreen4, key=1, label=doc, style=dashed];
m8_69 -> m8_92  [color=darkseagreen4, key=1, label=doc, style=dashed];
m8_69 -> m8_93  [color=darkseagreen4, key=1, label=doc, style=dashed];
m8_69 -> m8_94  [color=darkseagreen4, key=1, label=doc, style=dashed];
m8_69 -> m8_97  [color=darkseagreen4, key=1, label=doc, style=dashed];
m8_69 -> m8_102  [color=darkseagreen4, key=1, label=doc, style=dashed];
m8_70 -> m8_71  [key=0, style=solid];
m8_84 -> m8_85  [key=0, style=solid];
m8_84 -> m8_110  [key=2, style=dotted];
m8_84 -> m8_100  [color=darkseagreen4, key=1, label=instruction, style=dashed];
m8_88 -> m8_89  [key=0, style=solid];
m8_88 -> m8_111  [key=2, style=dotted];
m8_88 -> m8_101  [color=darkseagreen4, key=1, label=cDataSection, style=dashed];
m8_92 -> m8_93  [key=0, style=solid];
m8_92 -> m8_112  [key=2, style=dotted];
m8_92 -> m8_96  [color=darkseagreen4, key=1, label=element, style=dashed];
m8_92 -> m8_99  [color=darkseagreen4, key=1, label=element, style=dashed];
m8_92 -> m8_100  [color=darkseagreen4, key=1, label=element, style=dashed];
m8_92 -> m8_101  [color=darkseagreen4, key=1, label=element, style=dashed];
m8_92 -> m8_102  [color=darkseagreen4, key=1, label=element, style=dashed];
m8_92 -> m8_103  [color=darkseagreen4, key=1, label=element, style=dashed];
m8_93 -> m8_94  [key=0, style=solid];
m8_93 -> m8_113  [key=2, style=dotted];
m8_93 -> m8_114  [key=2, style=dotted];
m8_94 -> m8_95  [key=0, style=solid];
m8_94 -> m8_113  [key=2, style=dotted];
m8_94 -> m8_96  [color=darkseagreen4, key=1, label=aa, style=dashed];
m8_97 -> m8_98  [key=0, style=solid];
m8_97 -> m8_113  [key=2, style=dotted];
m8_97 -> m8_99  [color=darkseagreen4, key=1, label=aa, style=dashed];
m8_102 -> m8_103  [key=0, style=solid];
m8_102 -> m8_115  [key=2, style=dotted];
m8_71 -> m8_72  [key=0, style=solid];
m8_71 -> m8_66  [key=2, style=dotted];
m8_72 -> m8_73  [key=0, style=solid];
m8_72 -> m8_74  [color=darkseagreen4, key=1, label=xml, style=dashed];
m8_72 -> m8_80  [color=darkseagreen4, key=1, label=xml, style=dashed];
m8_73 -> m8_74  [key=0, style=solid];
m8_73 -> m8_63  [key=2, style=dotted];
m8_73 -> m8_75  [color=darkseagreen4, key=1, label=document, style=dashed];
m8_74 -> m8_75  [key=0, style=solid];
m8_74 -> m8_64  [key=2, style=dotted];
m8_80 -> m8_81  [key=0, style=solid];
m8_80 -> m8_106  [key=2, style=dotted];
m8_75 -> m8_76  [key=0, style=solid];
m8_75 -> m8_77  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m8_76 -> m8_77  [key=0, style=solid];
m8_77 -> m8_78  [key=0, style=solid];
m8_77 -> m8_65  [key=2, style=dotted];
m8_77 -> m8_79  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m8_78 -> m8_79  [key=0, style=solid];
m8_78 -> m8_66  [key=2, style=dotted];
m8_79 -> m8_80  [key=0, style=solid];
m8_79 -> m8_23  [key=2, style=dotted];
m8_81 -> m8_82  [key=0, style=solid];
m8_81 -> m8_107  [key=2, style=dotted];
m8_81 -> m8_108  [key=2, style=dotted];
m8_82 -> m8_83  [key=0, style=solid];
m8_82 -> m8_109  [key=2, style=dotted];
m8_83 -> m8_84  [key=0, style=solid];
m8_83 -> m8_23  [key=2, style=dotted];
m8_85 -> m8_86  [key=0, style=solid];
m8_85 -> m8_65  [key=2, style=dotted];
m8_85 -> m8_87  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m8_100 -> m8_101  [key=0, style=solid];
m8_100 -> m8_115  [key=2, style=dotted];
m8_86 -> m8_87  [key=0, style=solid];
m8_86 -> m8_66  [key=2, style=dotted];
m8_87 -> m8_88  [key=0, style=solid];
m8_87 -> m8_23  [key=2, style=dotted];
m8_89 -> m8_90  [key=0, style=solid];
m8_89 -> m8_65  [key=2, style=dotted];
m8_89 -> m8_91  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m8_101 -> m8_102  [key=0, style=solid];
m8_101 -> m8_115  [key=2, style=dotted];
m8_90 -> m8_91  [key=0, style=solid];
m8_90 -> m8_66  [key=2, style=dotted];
m8_91 -> m8_92  [key=0, style=solid];
m8_91 -> m8_23  [key=2, style=dotted];
m8_96 -> m8_97  [key=0, style=solid];
m8_96 -> m8_114  [key=2, style=dotted];
m8_99 -> m8_100  [key=0, style=solid];
m8_99 -> m8_114  [key=2, style=dotted];
m8_103 -> m8_104  [key=0, style=solid];
m8_103 -> m8_65  [key=2, style=dotted];
m8_95 -> m8_96  [key=0, style=solid];
m8_98 -> m8_99  [key=0, style=solid];
m8_104 -> m8_105  [key=0, style=solid];
m8_104 -> m8_23  [key=2, style=dotted];
m8_105 -> m8_68  [color=blue, key=0, style=bold];
m8_0 -> m8_1  [key=0, style=solid];
m8_0 -> m8_2  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m8_0 -> m8_4  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m8_0 -> m8_6  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m8_0 -> m8_7  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m8_1 -> m8_2  [key=0, style=solid];
m8_1 -> m8_15  [key=2, style=dotted];
m8_1 -> m8_12  [color=darkseagreen4, key=1, label=json, style=dashed];
m8_1 -> m8_13  [color=darkseagreen4, key=1, label=json, style=dashed];
m8_2 -> m8_3  [key=0, style=solid];
m8_2 -> m8_16  [key=2, style=dotted];
m8_2 -> m8_5  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2 -> m8_9  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_2 -> m8_10  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_4 -> m8_5  [key=0, style=solid];
m8_4 -> m8_6  [key=0, style=solid];
m8_6 -> m8_7  [key=0, style=solid];
m8_6 -> m8_9  [key=0, style=solid];
m8_7 -> m8_8  [key=0, style=solid];
m8_12 -> m8_13  [key=0, style=solid];
m8_12 -> m8_23  [key=2, style=dotted];
m8_13 -> m8_14  [key=0, style=solid];
m8_3 -> m8_4  [key=0, style=solid];
m8_5 -> m8_11  [key=0, style=solid];
m8_5 -> m8_17  [key=2, style=dotted];
m8_9 -> m8_10  [key=0, style=solid];
m8_9 -> m8_20  [key=2, style=dotted];
m8_10 -> m8_11  [key=0, style=solid];
m8_10 -> m8_21  [key=2, style=dotted];
m8_8 -> m8_11  [key=0, style=solid];
m8_8 -> m8_18  [key=2, style=dotted];
m8_8 -> m8_19  [key=2, style=dotted];
m8_11 -> m8_12  [key=0, style=solid];
m8_11 -> m8_22  [key=2, style=dotted];
m8_14 -> m8_0  [color=blue, key=0, style=bold];
m8_167 -> m8_168  [key=0, style=solid];
m8_168 -> m8_169  [key=0, style=solid];
m8_168 -> m8_170  [color=darkseagreen4, key=1, label=xml, style=dashed];
m8_169 -> m8_170  [key=0, style=solid];
m8_169 -> m8_63  [key=2, style=dotted];
m8_169 -> m8_171  [color=darkseagreen4, key=1, label=doc, style=dashed];
m8_169 -> m8_173  [color=darkseagreen4, key=1, label=doc, style=dashed];
m8_170 -> m8_171  [key=0, style=solid];
m8_170 -> m8_64  [key=2, style=dotted];
m8_171 -> m8_172  [key=0, style=solid];
m8_171 -> m8_65  [key=2, style=dotted];
m8_173 -> m8_174  [key=0, style=solid];
m8_173 -> m8_23  [key=2, style=dotted];
m8_172 -> m8_173  [key=0, style=solid];
m8_172 -> m8_24  [key=2, style=dotted];
m8_174 -> m8_167  [color=blue, key=0, style=bold];
m8_206 -> m8_207  [key=0, style=solid];
m8_207 -> m8_208  [key=0, style=solid];
m8_207 -> m8_209  [color=darkseagreen4, key=1, label=arrayXml, style=dashed];
m8_208 -> m8_209  [key=0, style=solid];
m8_208 -> m8_63  [key=2, style=dotted];
m8_208 -> m8_210  [color=darkseagreen4, key=1, label=arrayDoc, style=dashed];
m8_209 -> m8_210  [key=0, style=solid];
m8_209 -> m8_64  [key=2, style=dotted];
m8_210 -> m8_211  [key=0, style=solid];
m8_210 -> m8_65  [key=2, style=dotted];
m8_210 -> m8_212  [color=darkseagreen4, key=1, label=arrayJsonText, style=dashed];
m8_211 -> m8_212  [key=0, style=solid];
m8_212 -> m8_213  [key=0, style=solid];
m8_212 -> m8_23  [key=2, style=dotted];
m8_213 -> m8_214  [key=0, style=solid];
m8_213 -> m8_215  [color=darkseagreen4, key=1, label=arrayXml, style=dashed];
m8_214 -> m8_215  [key=0, style=solid];
m8_214 -> m8_63  [key=2, style=dotted];
m8_214 -> m8_216  [color=darkseagreen4, key=1, label=arrayDoc, style=dashed];
m8_215 -> m8_216  [key=0, style=solid];
m8_215 -> m8_64  [key=2, style=dotted];
m8_216 -> m8_217  [key=0, style=solid];
m8_216 -> m8_65  [key=2, style=dotted];
m8_216 -> m8_218  [color=darkseagreen4, key=1, label=arrayJsonText, style=dashed];
m8_217 -> m8_218  [key=0, style=solid];
m8_218 -> m8_219  [key=0, style=solid];
m8_218 -> m8_23  [key=2, style=dotted];
m8_219 -> m8_220  [key=0, style=solid];
m8_219 -> m8_221  [color=darkseagreen4, key=1, label=arrayXml, style=dashed];
m8_220 -> m8_221  [key=0, style=solid];
m8_220 -> m8_63  [key=2, style=dotted];
m8_220 -> m8_222  [color=darkseagreen4, key=1, label=arrayDoc, style=dashed];
m8_221 -> m8_222  [key=0, style=solid];
m8_221 -> m8_64  [key=2, style=dotted];
m8_222 -> m8_223  [key=0, style=solid];
m8_222 -> m8_65  [key=2, style=dotted];
m8_222 -> m8_224  [color=darkseagreen4, key=1, label=arrayJsonText, style=dashed];
m8_223 -> m8_224  [key=0, style=solid];
m8_224 -> m8_225  [key=0, style=solid];
m8_224 -> m8_23  [key=2, style=dotted];
m8_225 -> m8_206  [color=blue, key=0, style=bold];
m8_128 -> m8_129  [key=0, style=solid];
m8_129 -> m8_130  [key=0, style=solid];
m8_129 -> m8_131  [color=darkseagreen4, key=1, label=xml, style=dashed];
m8_130 -> m8_131  [key=0, style=solid];
m8_130 -> m8_63  [key=2, style=dotted];
m8_130 -> m8_132  [color=darkseagreen4, key=1, label=doc, style=dashed];
m8_130 -> m8_136  [color=darkseagreen4, key=1, label=doc, style=dashed];
m8_131 -> m8_132  [key=0, style=solid];
m8_131 -> m8_64  [key=2, style=dotted];
m8_132 -> m8_133  [key=0, style=solid];
m8_132 -> m8_65  [key=2, style=dotted];
m8_132 -> m8_134  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m8_132 -> m8_135  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m8_132 -> m8_138  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m8_136 -> m8_137  [key=0, style=solid];
m8_136 -> m8_23  [key=2, style=dotted];
m8_133 -> m8_134  [key=0, style=solid];
m8_134 -> m8_135  [key=0, style=solid];
m8_134 -> m8_23  [key=2, style=dotted];
m8_135 -> m8_136  [key=0, style=solid];
m8_135 -> m8_24  [key=2, style=dotted];
m8_135 -> m8_139  [color=darkseagreen4, key=1, label=deserializedDoc, style=dashed];
m8_138 -> m8_139  [key=0, style=solid];
m8_138 -> m8_66  [key=2, style=dotted];
m8_139 -> m8_140  [key=0, style=solid];
m8_139 -> m8_142  [key=2, style=dotted];
m8_137 -> m8_138  [key=0, style=solid];
m8_137 -> m8_66  [key=2, style=dotted];
m8_140 -> m8_141  [key=0, style=solid];
m8_140 -> m8_67  [key=2, style=dotted];
m8_141 -> m8_128  [color=blue, key=0, style=bold];
m8_226 -> m8_227  [key=0, style=solid];
m8_227 -> m8_228  [key=0, style=solid];
m8_228 -> m8_229  [key=0, style=solid];
m8_228 -> m8_193  [key=2, style=dotted];
m8_229 -> m8_226  [color=blue, key=0, style=bold];
m8_274 -> m8_275  [key=0, style=solid];
m8_275 -> m8_276  [key=0, style=solid];
m8_275 -> m8_277  [color=darkseagreen4, key=1, label=xml, style=dashed];
m8_276 -> m8_277  [key=0, style=solid];
m8_276 -> m8_63  [key=2, style=dotted];
m8_276 -> m8_278  [color=darkseagreen4, key=1, label=doc, style=dashed];
m8_276 -> m8_282  [color=darkseagreen4, key=1, label=doc, style=dashed];
m8_277 -> m8_278  [key=0, style=solid];
m8_277 -> m8_64  [key=2, style=dotted];
m8_278 -> m8_279  [key=0, style=solid];
m8_278 -> m8_65  [key=2, style=dotted];
m8_282 -> m8_283  [key=0, style=solid];
m8_282 -> m8_23  [key=2, style=dotted];
m8_279 -> m8_280  [key=0, style=solid];
m8_279 -> m8_284  [key=2, style=dotted];
m8_279 -> m8_285  [key=2, style=dotted];
m8_279 -> m8_279  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m8_279 -> m8_281  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m8_280 -> m8_281  [key=0, style=solid];
m8_280 -> m8_23  [key=2, style=dotted];
m8_281 -> m8_282  [key=0, style=solid];
m8_281 -> m8_24  [key=2, style=dotted];
m8_283 -> m8_274  [color=blue, key=0, style=bold];
m8_143 -> m8_144  [key=0, style=solid];
m8_144 -> m8_145  [key=0, style=solid];
m8_145 -> m8_146  [key=0, style=solid];
m8_145 -> m8_24  [key=2, style=dotted];
m8_145 -> m8_147  [color=darkseagreen4, key=1, label=doc, style=dashed];
m8_146 -> m8_147  [key=0, style=solid];
m8_146 -> m8_151  [color=darkseagreen4, key=1, label=expected, style=dashed];
m8_147 -> m8_148  [key=0, style=solid];
m8_147 -> m8_153  [key=2, style=dotted];
m8_147 -> m8_149  [color=darkseagreen4, key=1, label=formattedXml, style=dashed];
m8_147 -> m8_151  [color=darkseagreen4, key=1, label=formattedXml, style=dashed];
m8_151 -> m8_152  [key=0, style=solid];
m8_151 -> m8_23  [key=2, style=dotted];
m8_148 -> m8_149  [key=0, style=solid];
m8_148 -> m8_66  [key=2, style=dotted];
m8_149 -> m8_150  [key=0, style=solid];
m8_149 -> m8_66  [key=2, style=dotted];
m8_150 -> m8_151  [key=0, style=solid];
m8_150 -> m8_67  [key=2, style=dotted];
m8_152 -> m8_143  [color=blue, key=0, style=bold];
m8_286 -> m8_287  [key=0, style=solid];
m8_287 -> m8_288  [key=0, style=solid];
m8_288 -> m8_289  [key=0, style=solid];
m8_288 -> m8_24  [key=2, style=dotted];
m8_289 -> m8_290  [key=0, style=solid];
m8_289 -> m8_291  [key=2, style=dotted];
m8_289 -> m8_23  [key=2, style=dotted];
m8_290 -> m8_286  [color=blue, key=0, style=bold];
m8_27 -> m8_28  [key=0, style=solid];
m8_27 -> m8_29  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_27 -> m8_32  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_27 -> m8_33  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_27 -> m8_36  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_28 -> m8_29  [key=0, style=solid];
m8_29 -> m8_30  [key=0, style=solid];
m8_29 -> m8_45  [key=2, style=dotted];
m8_29 -> m8_46  [key=2, style=dotted];
m8_29 -> m8_34  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_32 -> m8_33  [key=0, style=solid];
m8_32 -> m8_34  [key=0, style=solid];
m8_33 -> m8_34  [key=0, style=solid];
m8_36 -> m8_37  [key=0, style=solid];
m8_36 -> m8_45  [key=2, style=dotted];
m8_36 -> m8_46  [key=2, style=dotted];
m8_36 -> m8_38  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_30 -> m8_31  [key=0, style=solid];
m8_30 -> m8_47  [key=2, style=dotted];
m8_34 -> m8_35  [key=0, style=solid];
m8_34 -> m8_49  [key=2, style=dotted];
m8_34 -> m8_50  [key=2, style=dotted];
m8_34 -> m8_43  [color=darkseagreen4, key=1, label=node, style=dashed];
m8_31 -> m8_32  [key=0, style=solid];
m8_31 -> m8_48  [key=2, style=dotted];
m8_31 -> m8_33  [color=darkseagreen4, key=1, label=converter, style=dashed];
m8_31 -> m8_34  [color=darkseagreen4, key=1, label=converter, style=dashed];
m8_31 -> m8_38  [color=darkseagreen4, key=1, label=converter, style=dashed];
m8_38 -> m8_39  [key=0, style=solid];
m8_38 -> m8_49  [key=2, style=dotted];
m8_38 -> m8_50  [key=2, style=dotted];
m8_38 -> m8_40  [color=darkseagreen4, key=1, label=d, style=dashed];
m8_38 -> m8_41  [color=darkseagreen4, key=1, label=d, style=dashed];
m8_35 -> m8_36  [key=0, style=solid];
m8_35 -> m8_42  [color=darkseagreen4, key=1, label=xmlText, style=dashed];
m8_43 -> m8_44  [key=0, style=solid];
m8_42 -> m8_43  [key=0, style=solid];
m8_42 -> m8_23  [key=2, style=dotted];
m8_37 -> m8_38  [key=0, style=solid];
m8_37 -> m8_47  [key=2, style=dotted];
m8_39 -> m8_40  [key=0, style=solid];
m8_39 -> m8_51  [key=2, style=dotted];
m8_39 -> m8_41  [color=darkseagreen4, key=1, label=linqXmlText, style=dashed];
m8_39 -> m8_42  [color=darkseagreen4, key=1, label=linqXmlText, style=dashed];
m8_40 -> m8_41  [key=0, style=solid];
m8_40 -> m8_42  [key=0, style=solid];
m8_41 -> m8_42  [key=0, style=solid];
m8_41 -> m8_41  [color=darkseagreen4, key=1, label=linqXmlText, style=dashed];
m8_44 -> m8_27  [color=blue, key=0, style=bold];
m8_310 -> m8_25  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m8_310 -> m8_56  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m8_310 -> m8_132  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m8_310 -> m8_135  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m8_310 -> m8_145  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m8_310 -> m8_147  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m8_310 -> m8_171  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m8_310 -> m8_172  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m8_310 -> m8_179  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m8_310 -> m8_181  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m8_310 -> m8_186  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m8_310 -> m8_199  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m8_310 -> m8_202  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m8_310 -> m8_210  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m8_310 -> m8_216  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m8_310 -> m8_222  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m8_310 -> m8_261  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m8_310 -> m8_268  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m8_310 -> m8_271  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m8_310 -> m8_278  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m8_310 -> m8_281  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m8_310 -> m8_288  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m8_310 -> m8_298  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m8_310 -> m8_299  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m8_310 -> m8_302  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m9_3 -> m9_0  [color=darkorchid, key=3, label="Parameter variable System.IFormatProvider provider", style=bold];
m9_3 -> m9_4  [color=darkorchid, key=3, label="Parameter variable System.IFormatProvider provider", style=bold];
m9_3 -> m9_7  [color=darkorchid, key=3, label="Parameter variable System.IFormatProvider provider", style=bold];
m9_55 -> m9_56  [key=0, style=solid];
m9_55 -> m9_58  [color=darkseagreen4, key=1, label="System.Func<TSource, string>", style=dashed];
m9_55 -> m9_60  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<TSource>", style=dashed];
m9_55 -> m9_70  [color=darkseagreen4, key=1, label="System.Func<TSource, string>", style=dashed];
m9_55 -> m9_63  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<TSource>", style=dashed];
m9_55 -> m9_75  [color=darkseagreen4, key=1, label="System.Func<TSource, string>", style=dashed];
m9_56 -> m9_57  [key=0, style=solid];
m9_56 -> m9_58  [key=0, style=solid];
m9_58 -> m9_59  [key=0, style=solid];
m9_58 -> m9_60  [key=0, style=solid];
m9_60 -> m9_61  [key=0, style=solid];
m9_60 -> m9_66  [key=2, style=dotted];
m9_60 -> m9_69  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_60 -> m9_62  [color=darkseagreen4, key=1, label=caseInsensitiveResults, style=dashed];
m9_63 -> m9_64  [key=0, style=solid];
m9_63 -> m9_66  [key=2, style=dotted];
m9_63 -> m9_74  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_57 -> m9_65  [key=0, style=solid];
m9_57 -> m9_28  [key=2, style=dotted];
m9_59 -> m9_65  [key=0, style=solid];
m9_59 -> m9_28  [key=2, style=dotted];
m9_61 -> m9_62  [key=0, style=solid];
m9_61 -> m9_63  [key=0, style=solid];
m9_61 -> m9_67  [key=2, style=dotted];
m9_62 -> m9_65  [key=0, style=solid];
m9_62 -> m9_68  [key=2, style=dotted];
m9_64 -> m9_65  [key=0, style=solid];
m9_64 -> m9_68  [key=2, style=dotted];
m9_65 -> m9_55  [color=blue, key=0, style=bold];
m9_16 -> m9_17  [key=0, style=solid];
m9_16 -> m9_19  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_16 -> m9_22  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_16 -> m9_23  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_16 -> m9_20  [color=darkorchid, key=3, label="method methodReturn bool IsWhiteSpace", style=bold];
m9_16 -> m9_26  [color=darkorchid, key=3, label="method methodReturn bool IsWhiteSpace", style=bold];
m9_17 -> m9_18  [key=0, style=solid];
m9_17 -> m9_19  [key=0, style=solid];
m9_19 -> m9_20  [key=0, style=solid];
m9_19 -> m9_21  [key=0, style=solid];
m9_22 -> m9_23  [key=0, style=solid];
m9_22 -> m9_26  [key=0, style=solid];
m9_22 -> m9_22  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m9_23 -> m9_24  [key=0, style=solid];
m9_23 -> m9_25  [key=0, style=solid];
m9_23 -> m9_29  [key=2, style=dotted];
m9_18 -> m9_27  [key=0, style=solid];
m9_18 -> m9_28  [key=2, style=dotted];
m9_20 -> m9_27  [key=0, style=solid];
m9_21 -> m9_22  [key=0, style=solid];
m9_21 -> m9_23  [color=darkseagreen4, key=1, label=i, style=dashed];
m9_21 -> m9_25  [color=darkseagreen4, key=1, label=i, style=dashed];
m9_25 -> m9_22  [key=0, style=solid];
m9_25 -> m9_25  [color=darkseagreen4, key=1, label=i, style=dashed];
m9_26 -> m9_27  [key=0, style=solid];
m9_24 -> m9_27  [key=0, style=solid];
m9_27 -> m9_16  [color=blue, key=0, style=bold];
m9_105 -> m9_106  [key=0, style=solid];
m9_106 -> m9_107  [key=0, style=solid];
m9_106 -> m9_108  [key=2, style=dotted];
m9_107 -> m9_105  [color=blue, key=0, style=bold];
m9_101 -> m9_102  [key=0, style=solid];
m9_102 -> m9_103  [key=0, style=solid];
m9_102 -> m9_104  [key=2, style=dotted];
m9_103 -> m9_101  [color=blue, key=0, style=bold];
m9_0 -> m9_1  [key=0, style=solid];
m9_0 -> m9_3  [color=darkorchid, key=3, label="method methodReturn string FormatWith", style=bold];
m9_1 -> m9_2  [key=0, style=solid];
m9_1 -> m9_3  [key=2, style=dotted];
m9_2 -> m9_0  [color=blue, key=0, style=bold];
m9_34 -> m9_35  [key=0, style=solid];
m9_34 -> m9_36  [color=darkorchid, key=3, label="method methodReturn System.IO.StringWriter CreateStringWriter", style=bold];
m9_35 -> m9_36  [key=0, style=solid];
m9_35 -> m9_39  [key=2, style=dotted];
m9_36 -> m9_37  [key=0, style=solid];
m9_36 -> m9_40  [key=2, style=dotted];
m9_37 -> m9_38  [key=0, style=solid];
m9_38 -> m9_34  [color=blue, key=0, style=bold];
m9_30 -> m9_31  [key=0, style=solid];
m9_31 -> m9_32  [key=0, style=solid];
m9_31 -> m9_33  [key=2, style=dotted];
m9_32 -> m9_30  [color=blue, key=0, style=bold];
m9_4 -> m9_5  [key=0, style=solid];
m9_4 -> m9_3  [color=darkorchid, key=3, label="method methodReturn string FormatWith", style=bold];
m9_5 -> m9_6  [key=0, style=solid];
m9_5 -> m9_3  [key=2, style=dotted];
m9_6 -> m9_4  [color=blue, key=0, style=bold];
m9_41 -> m9_42  [key=0, style=solid];
m9_41 -> m9_44  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_41 -> m9_43  [color=darkorchid, key=3, label="method methodReturn int? GetLength", style=bold];
m9_42 -> m9_43  [key=0, style=solid];
m9_42 -> m9_44  [key=0, style=solid];
m9_44 -> m9_45  [key=0, style=solid];
m9_43 -> m9_45  [key=0, style=solid];
m9_45 -> m9_41  [color=blue, key=0, style=bold];
m9_77 -> m9_78  [key=0, style=solid];
m9_77 -> m9_79  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_77 -> m9_80  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_77 -> m9_81  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_77 -> m9_84  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_77 -> m9_85  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_77 -> m9_86  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_77 -> m9_88  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_77 -> m9_90  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_77 -> m9_77  [color=darkorchid, key=3, label="method methodReturn string ToCamelCase", style=bold];
m9_78 -> m9_79  [key=0, style=solid];
m9_78 -> m9_80  [key=0, style=solid];
m9_78 -> m9_33  [key=2, style=dotted];
m9_79 -> m9_93  [key=0, style=solid];
m9_80 -> m9_81  [key=0, style=solid];
m9_80 -> m9_82  [key=0, style=solid];
m9_80 -> m9_94  [key=2, style=dotted];
m9_81 -> m9_93  [key=0, style=solid];
m9_84 -> m9_85  [key=0, style=solid];
m9_84 -> m9_92  [key=0, style=solid];
m9_84 -> m9_22  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m9_85 -> m9_86  [key=0, style=solid];
m9_86 -> m9_87  [key=0, style=solid];
m9_86 -> m9_90  [key=0, style=solid];
m9_86 -> m9_94  [key=2, style=dotted];
m9_88 -> m9_89  [key=0, style=solid];
m9_88 -> m9_96  [key=2, style=dotted];
m9_90 -> m9_92  [key=0, style=solid];
m9_90 -> m9_98  [key=2, style=dotted];
m9_90 -> m9_99  [key=2, style=dotted];
m9_82 -> m9_83  [key=0, style=solid];
m9_82 -> m9_95  [key=2, style=dotted];
m9_82 -> m9_89  [color=darkseagreen4, key=1, label=sb, style=dashed];
m9_82 -> m9_90  [color=darkseagreen4, key=1, label=sb, style=dashed];
m9_82 -> m9_92  [color=darkseagreen4, key=1, label=sb, style=dashed];
m9_83 -> m9_84  [key=0, style=solid];
m9_83 -> m9_85  [color=darkseagreen4, key=1, label=i, style=dashed];
m9_83 -> m9_86  [color=darkseagreen4, key=1, label=i, style=dashed];
m9_83 -> m9_88  [color=darkseagreen4, key=1, label=i, style=dashed];
m9_83 -> m9_90  [color=darkseagreen4, key=1, label=i, style=dashed];
m9_83 -> m9_91  [color=darkseagreen4, key=1, label=i, style=dashed];
m9_89 -> m9_91  [key=0, style=solid];
m9_89 -> m9_97  [key=2, style=dotted];
m9_92 -> m9_93  [key=0, style=solid];
m9_92 -> m9_100  [key=2, style=dotted];
m9_91 -> m9_84  [key=0, style=solid];
m9_91 -> m9_91  [color=darkseagreen4, key=1, label=i, style=dashed];
m9_87 -> m9_88  [key=0, style=solid];
m9_93 -> m9_77  [color=blue, key=0, style=bold];
m9_7 -> m9_8  [key=0, style=solid];
m9_7 -> m9_3  [color=darkorchid, key=3, label="method methodReturn string FormatWith", style=bold];
m9_8 -> m9_9  [key=0, style=solid];
m9_8 -> m9_3  [key=2, style=dotted];
m9_9 -> m9_7  [color=blue, key=0, style=bold];
m9_10 -> m9_11  [key=0, style=solid];
m9_10 -> m9_12  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_11 -> m9_12  [key=0, style=solid];
m9_11 -> m9_14  [key=2, style=dotted];
m9_12 -> m9_13  [key=0, style=solid];
m9_12 -> m9_15  [key=2, style=dotted];
m9_13 -> m9_10  [color=blue, key=0, style=bold];
m9_74 -> m9_75  [key=0, style=solid];
m9_70 -> m9_71  [key=0, style=solid];
m9_70 -> m9_72  [key=2, style=dotted];
m9_70 -> m9_73  [key=2, style=dotted];
m9_75 -> m9_76  [key=0, style=solid];
m9_75 -> m9_72  [key=2, style=dotted];
m9_75 -> m9_73  [key=2, style=dotted];
m9_69 -> m9_70  [key=0, style=solid];
m9_71 -> m9_69  [color=blue, key=0, style=bold];
m9_76 -> m9_74  [color=blue, key=0, style=bold];
m9_46 -> m9_47  [key=0, style=solid];
m9_46 -> m9_48  [color=darkseagreen4, key=1, label="char[]", style=dashed];
m9_46 -> m9_49  [color=darkseagreen4, key=1, label=char, style=dashed];
m9_46 -> m9_50  [color=darkseagreen4, key=1, label=char, style=dashed];
m9_46 -> m9_51  [color=darkseagreen4, key=1, label=char, style=dashed];
m9_46 -> m9_52  [color=darkseagreen4, key=1, label=char, style=dashed];
m9_47 -> m9_48  [key=0, style=solid];
m9_48 -> m9_49  [key=0, style=solid];
m9_49 -> m9_50  [key=0, style=solid];
m9_49 -> m9_54  [key=2, style=dotted];
m9_50 -> m9_51  [key=0, style=solid];
m9_50 -> m9_54  [key=2, style=dotted];
m9_51 -> m9_52  [key=0, style=solid];
m9_51 -> m9_54  [key=2, style=dotted];
m9_52 -> m9_53  [key=0, style=solid];
m9_52 -> m9_54  [key=2, style=dotted];
m9_53 -> m9_46  [color=blue, key=0, style=bold];
m9_109 -> m9_70  [color=darkseagreen4, key=1, label="System.Func<TSource, string>", style=dashed];
m9_109 -> m9_75  [color=darkseagreen4, key=1, label="System.Func<TSource, string>", style=dashed];
m9_110 -> m9_70  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_110 -> m9_75  [color=darkseagreen4, key=1, label=string, style=dashed];
}
